<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>胡博靖的技术博客</title>
  <subtitle>　　小清新的工科女旅程　　　　　　为中华之崛起而读书</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://hubojing.github.io/"/>
  <updated>2017-04-15T07:31:38.441Z</updated>
  <id>http://hubojing.github.io/</id>
  
  <author>
    <name>胡博靖</name>
    <email>hubojing@outlook.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>MFC傻瓜式教程</title>
    <link href="http://hubojing.github.io/2017/04/13/MFC%E5%82%BB%E7%93%9C%E5%BC%8F%E6%95%99%E7%A8%8B/"/>
    <id>http://hubojing.github.io/2017/04/13/MFC傻瓜式教程/</id>
    <published>2017-04-13T14:26:01.000Z</published>
    <updated>2017-04-15T07:31:38.441Z</updated>
    
    <content type="html"><![CDATA[<p>技术书很多废话连篇。——公司某优秀工程师
　　直接上菜。</p>
<p>&lt;!--more--&gt;</p>
<p>MFC：Microsoft Foundation Class ，微软基础类库。</p>
<h1 id="对话框">对话框</h1>
<h2 id="对话框的创建和显示">对话框的创建和显示</h2>
<ol>
<li>
<p>新建MFC AppWizard(exe)工程，单文档类型。工程名：Mybole。编译运行。
<img src="http://img.blog.csdn.net/20170413231922633?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="新建"></p>
</li>
<li>
<p>点击帮助-关于Mybole。这是MFC自动创建的。
<img src="http://img.blog.csdn.net/20170413231954758?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="关于"></p>
</li>
<li>
<p>创建自己的对话框。点击Insert-Resource。选择Dialog，点击New。VC++自动将其标识设置为IDD_DIALOG1，并自动添加到ResourceView-Dialog项中。Dialog项下还有一个对话框资源标识：IDD_ABOUTBOX，即上一步中的“关于”对话框。
<img src="http://img.blog.csdn.net/20170413232035196?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="Insert Resource对话框"></p>
</li>
</ol>
<p><img src="http://img.blog.csdn.net/20170413232222055?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="新建的对话框资源"></p>
<ol start="4">
<li>选中对话框本身，右键点击属性。将Caption设置为“测试”。</li>
<li>选择View-ClassWizard，点击create a new class，OK。出现下图，并输入下图选项。
<img src="http://img.blog.csdn.net/20170413232907845?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="New Class"></li>
<li>在随后出现的MFC ClassWizard对话框上点击OK。
<img src="http://img.blog.csdn.net/20170413233804513?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="列表">
<strong>注意</strong>：看看左侧类列表中是否添加好了CTestDlg，否则会影响后续操作。</li>
</ol>
<p>接下来，我们希望在程序中显示这个对话窗口。</p>
<ol start="7">
<li>
<p>点击右侧菜单Menu，选中IDR_MAINFRAME。点击帮助旁边的虚线框。
<img src="http://img.blog.csdn.net/20170413233914861?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="Menu"></p>
</li>
<li>
<p>对虚线框右键属性，修改为下图。
<img src="http://img.blog.csdn.net/20170413234011986?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="属性"></p>
</li>
<li>
<p>关闭属性。点击View-ClassWizard（中文是建立类向导），选择CMyboleView，用COMMAND命令消息响应函数。如图。
<img src="http://img.blog.csdn.net/20170414000004060?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="COMMAND"></p>
</li>
</ol>
<h3 id="模态对话框的创建">模态对话框的创建</h3>
<p>需要调用CDialog类的成员函数：DoModal，它能创建并显示一个模态对话框，其返回值将作为CDialog类的另一个成员函数：EndDialog的参数，后者功能是关闭模态对话框。</p>
<p>在FileView中选择MyboleView.cpp，编写程序。
　　记得在开头添加头文件 #include “testdlg.h” （头文件大小写问题，linux区分，windows不区分）
<img src="http://img.blog.csdn.net/20170414000303079?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="编程">
　　显示模态对话框的具体实现代码：
<figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">void</span> CMyboleView::OnDialog() </div><div class="line">&#123;</div><div class="line">	<span class="comment">// <span class="doctag">TODO:</span> Add your command handler code here</span></div><div class="line">	CTestDlg dlg;</div><div class="line">	dlg.DoModal();</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>编译运行，点击对话框。会发现若不确认该窗口，将无法点击其他窗口。
<img src="http://img.blog.csdn.net/20170414000500779?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="模态对话框1"></p>
<p><img src="http://img.blog.csdn.net/20170414000612202?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="模态对话框2"></p>
<h3 id="非模态对话框的创建">非模态对话框的创建</h3>
<p>将上面的模态对话框代码注释掉。</p>
<p>改为：
<figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">void</span> CMyboleView::OnDialog() </div><div class="line">&#123;</div><div class="line">	<span class="comment">// <span class="doctag">TODO:</span> Add your command handler code here</span></div><div class="line">	<span class="comment">//CTestDlg dlg;</span></div><div class="line">	<span class="comment">//dlg.DoModal();</span></div><div class="line"></div><div class="line">	CTestDlg *pDlg = <span class="keyword">new</span> CTestDlg;</div><div class="line">	pDlg-&gt;Create(IDD_DIALOG1,<span class="keyword">this</span>);</div><div class="line">	pDlg-&gt;ShowWindow(SW_SHOW);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p><strong>注意</strong>：需要把之前运行的对话框关掉才能编译成功。</p>
<p>然而，当它生命周期结束时，所保存的内存地址就丢失了，那么程序中也就无法再引用到它所指向的那块内存。于是，我们这样解决该问题。
<img src="http://img.blog.csdn.net/20170414000901869?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="MFC ClassWizard"></p>
<p><strong>注意</strong>：Message里双击添加函数或者点击add Class…</p>
<p>void CTestDlg::PostNcDestroy()
{
	// TODO: Add your specialized code here and/or call the base class
	delete this;
	CDialog::PostNcDestroy();
}</p>
<p><strong>区别</strong>：点击确定，对话框都会消失。但是，模态对话框窗口对象被销毁了。对非模态对话框来说，只是隐藏起来了，并未被销毁。
因此，若要销毁对话框，若有一个ID为IDOK的按钮，就必须重写基类的OnOK这个虚函数，并在重写的函数中调用DestroyWindow函数，完成销毁。并不要再调用基类的OnOK函数。
同样地，若有一个ID为IDCANCEL的按钮，也必须重写基类的OnCancel虚函数，并在重写的函数中调用DestroyWindow函数，完成销毁。并不要再调用基类的OnCancel函数。</p>
<h1 id="动态创建按钮">动态创建按钮</h1>
<p>注释掉非模态对话框代码，还原模态对话框代码。</p>
<p>点击ResourceView-IDD_DIALOG1，打开资源，用鼠标拖出控件面板上的Button按钮控件，对按钮右键，选择属性，设置如下。
<img src="http://img.blog.csdn.net/20170414001008658?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="按钮"></p>
<p>接下来，我们实现当单击Add按钮时，在对话框中动态创建一个按钮这一功能。</p>
<ol>
<li>为CTestDlg类添加一个私有的CButton成员变量。
　　点击ClassView标签页右键，如图点击。
<img src="http://img.blog.csdn.net/20170414001252061?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="ClassView"></li>
</ol>
<p>填入信息。
<img src="http://img.blog.csdn.net/20170414001335972?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="添加成员变量"></p>
<ol start="2">
<li>添加Add按钮单击消息的响应函数。
　　按钮点右键，选ClassWizard（建立类向导），如图。
<img src="http://img.blog.csdn.net/20170414001137294?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="建立类向导"></li>
</ol>
<p>单击Edit Code，即可定位到该函数定义处。
　　添加一下代码：
<figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">void</span> CTestDlg::OnBtnAdd() </div><div class="line">&#123;</div><div class="line">	<span class="comment">// <span class="doctag">TODO:</span> Add your control notification handler code here</span></div><div class="line">	m_btn.Create(<span class="string">"New"</span>,BS_DEFPUSHBUTTON | WS_VISIBLE | WS_CHILD,</div><div class="line">				 CRect(<span class="number">0</span>,<span class="number">0</span>,<span class="number">100</span>,<span class="number">100</span>),<span class="keyword">this</span>,<span class="number">123</span>);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>为避免多次点击Add出现非法操作，我们需要进行如下步骤。</p>
<ol start="3">
<li>
<p>为CTestDlg类增加一个私有的BOOL类型成员变量。
变量类型：BOOL
变量名称：m_bIsCreated
Access: private</p>
</li>
<li>
<p>在TestDlg.cpp中找到构造函数，将m_bIsCreated初始为FALSE。如图所示。
<img src="http://img.blog.csdn.net/20170415152155489?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
</li>
</ol>
<p>或者改为如下亦可。
Static BOOL bIsCreated = FALSE;</p>
<ol start="5">
<li>回到Add，双击它，进入代码部分，改之。
<figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">void</span> CTestDlg::OnBtnAdd() </div><div class="line">&#123;</div><div class="line">	<span class="comment">// <span class="doctag">TODO:</span> Add your control notification handler code here</span></div><div class="line">	<span class="keyword">if</span>(m_bIsCreated==FALSE)</div><div class="line">	&#123;</div><div class="line">	m_btn.Create(<span class="string">"New"</span>,BS_DEFPUSHBUTTON | WS_VISIBLE | WS_CHILD,</div><div class="line">				CRect(<span class="number">0</span>,<span class="number">0</span>,<span class="number">100</span>,<span class="number">100</span>),<span class="keyword">this</span>,<span class="number">123</span>);</div><div class="line">	m_bIsCreated = TRUE;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">else</span></div><div class="line">	&#123;</div><div class="line">		m_btn.DestroyWindow();</div><div class="line">		m_bIsCreated = FALSE;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure></li>
</ol>
<p>或者以下亦能实现。
<figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">void</span> CTestDlg::OnBtnAdd() </div><div class="line">&#123;</div><div class="line">	<span class="comment">// <span class="doctag">TODO:</span> Add your control notification handler code here</span></div><div class="line">	<span class="keyword">if</span>(!m_btn.m_hWnd)</div><div class="line">	&#123;</div><div class="line">	m_btn.Create(<span class="string">"New"</span>,BS_DEFPUSHBUTTON | WS_VISIBLE | WS_CHILD,</div><div class="line">				CRect(<span class="number">0</span>,<span class="number">0</span>,<span class="number">100</span>,<span class="number">100</span>),<span class="keyword">this</span>,<span class="number">123</span>);</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">else</span></div><div class="line">	&#123;</div><div class="line">		m_btn.DestroyWindow();</div><div class="line">	&#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>效果：
　　<img src="http://img.blog.csdn.net/20170415152224880?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<p>点击Add出现New窗口，再点击就销毁。</p>
<h2 id="控件的访问">控件的访问</h2>
<h3 id="控件的调整">控件的调整</h3>
<p>用Layout-Align，Layout-Make Same Size，Layout-Space Evenly里的选项进行调整。
<img src="http://img.blog.csdn.net/20170415152247131?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<h3 id="静态文本控件">静态文本控件</h3>
<p>查看三个静态文本框，它们ID相同。我们可以更改第一个静态文本框ID为IDC_NUMBER1，再打开ClassWizard，可以在ObjectIDs看到新ID。
<img src="http://img.blog.csdn.net/20170415152324147?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述">
　　对BN_CLICKED进行Add Function，并Edit Code:</p>
<p>此时运行程序点击第一个静态文本框并没有反应。这是因为：<strong>静态文本控件在默认状态下是不发送通告消息的</strong>。</p>
<p>为了该控件能向父窗口发送鼠标事件，我们对该文本框右键-属性，切换到styles选项卡，勾上Notify。
<img src="http://img.blog.csdn.net/20170415152341882?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<p>现在可以显示了：
　　点击就改变。
<img src="http://img.blog.csdn.net/20170415152354773?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<p><strong>总结：为了使一个静态文本控件能够响应鼠标单击消息，那么需要进行两个特殊的步骤：第一步，改变它的ID；第二步，在它的属性对话框中选中Notify选项。</strong></p>
<h3 id="编辑框控件">编辑框控件</h3>
<p>利用上面的对话框实现这样的功能：在前两个编辑框中分别输入一个数字，然后单击Add按钮，对前两个编辑框中的数字求和，并将结果显示在第三个编辑框中。</p>
<h4 id="第一种方式">第一种方式</h4>
<p><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">void</span> CTestDlg::OnBtnAdd() </div><div class="line">&#123;</div><div class="line">	<span class="keyword">int</span> num1, num2, num3; </div><div class="line">	<span class="keyword">char</span> ch1[<span class="number">10</span>], ch2[<span class="number">10</span>], ch3[<span class="number">10</span>]; </div><div class="line">	GetDlgItem(IDC_EDIT1)-&gt;GetWindowText(ch1,<span class="number">10</span>); </div><div class="line">	GetDlgItem(IDC_EDIT2)-&gt;GetWindowText(ch2,<span class="number">10</span>);</div><div class="line"></div><div class="line">	num1 = atoi(ch1); </div><div class="line">	num2 = atoi(ch2); </div><div class="line">	num3 = num1 + num2; </div><div class="line"></div><div class="line">	itoa(num3,ch3,<span class="number">10</span>);</div><div class="line">	GetDlgItem(IDC_EDIT3)-&gt;SetWindowText(ch3);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>C语言转换函数：atoi 将一个由数字组成的字符串转换为相应的数值
itoa 数值转换为文本
itoa函数的第三个参数表示转换的进制，数字10表示十进制。</p>
<p>效果：
<img src="http://img.blog.csdn.net/20170415152409742?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<h4 id="第二种方式">第二种方式</h4>
<p>代码如下：
<figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">void</span> CTestDlg::OnBtnAdd() </div><div class="line">&#123;</div><div class="line">	<span class="keyword">int</span> num1, num2, num3; </div><div class="line">	<span class="keyword">char</span> ch1[<span class="number">10</span>], ch2[<span class="number">10</span>], ch3[<span class="number">10</span>]; </div><div class="line">	<span class="comment">//GetDlgItem(IDC_EDIT1)-&gt;GetWindowText(ch1,10); </span></div><div class="line">	<span class="comment">//GetDlgItem(IDC_EDIT2)-&gt;GetWindowText(ch2,10);</span></div><div class="line">	</div><div class="line">	GetDlgItemText(IDC_EDIT1,ch1,<span class="number">10</span>);</div><div class="line">	GetDlgItemText(IDC_EDIT2,ch2,<span class="number">10</span>);</div><div class="line"></div><div class="line">	num1 = atoi(ch1); </div><div class="line">	num2 = atoi(ch2); </div><div class="line">	num3 = num1 + num2; </div><div class="line"></div><div class="line">	itoa(num3,ch3,<span class="number">10</span>);</div><div class="line">	<span class="comment">//GetDlgItem(IDC_EDIT3)-&gt;SetWindowText(ch3);</span></div><div class="line">	SetDlgItemText(IDC_EDIT3,ch3);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>GetDlgItemText 将返回对话框中指定ID的控件上的文本，相当于将上面的GetDlgItem和GetWindowText这两个函数功能组合起来了。
与之对应的是SetDlgItemText，用来设置对话框中指定ID的控件上的文本。</p>
<h4 id="第三种方式">第三种方式</h4>
<p><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">void</span> CTestDlg::OnBtnAdd() </div><div class="line">&#123;</div><div class="line">	<span class="keyword">int</span> num1, num2, num3; </div><div class="line">	<span class="comment">//char ch1[10], ch2[10], ch3[10]; </span></div><div class="line">	<span class="comment">//GetDlgItem(IDC_EDIT1)-&gt;GetWindowText(ch1,10); </span></div><div class="line">	<span class="comment">//GetDlgItem(IDC_EDIT2)-&gt;GetWindowText(ch2,10);</span></div><div class="line">	</div><div class="line">	<span class="comment">//GetDlgItemText(IDC_EDIT1,ch1,10);</span></div><div class="line">	<span class="comment">//GetDlgItemText(IDC_EDIT2,ch2,10);</span></div><div class="line"></div><div class="line">	num1 = GetDlgItemInt(IDC_EDIT1);</div><div class="line">	num2 = GetDlgItemInt(IDC_EDIT2);</div><div class="line"></div><div class="line">	<span class="comment">//num1 = atoi(ch1); </span></div><div class="line">	<span class="comment">//num2 = atoi(ch2); </span></div><div class="line">	num3 = num1 + num2; </div><div class="line"></div><div class="line">	<span class="comment">//itoa(num3,ch3,10);</span></div><div class="line">	<span class="comment">//GetDlgItem(IDC_EDIT3)-&gt;SetWindowText(ch3);</span></div><div class="line">	<span class="comment">//SetDlgItemText(IDC_EDIT3,ch3);</span></div><div class="line">	SetDlgItemInt(IDC_EDIT3,num3);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h4 id="第四种方式">第四种方式</h4>
<p>将这三个编辑框分别与对话框类的三个成员变量相关联，然后通过这些成员变量来检索和设置编辑框的文本，这是最简单的访问控件的方式。
打开ClassWizard对话框，切换到Member Variables选项卡，如图。
<img src="http://img.blog.csdn.net/20170415152431039?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述">
　　首先为IDC_EDIT1编辑框添加一个关联的成员变量，方法是在Control IDs列表中选中IDC_EDIT1，再单击Add Variable按钮，如图。
<img src="http://img.blog.csdn.net/20170415152451118?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述">
<img src="http://img.blog.csdn.net/20170415152505259?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<p>同样地，为IDC_EDIT2和IDC_EDIT3分别添加好成员变量。
　　接着修改代码：</p>
<p><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">void</span> CTestDlg::OnBtnAdd() </div><div class="line">&#123;</div><div class="line">	UpdateData();</div><div class="line">	m_num3 = m_num1 + m_num2;</div><div class="line">	UpdateData(FALSE);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>对编辑框控件中输入的数值设定一个范围：
　　打开ClassWizard-Member Variable，选中IDC_EDIT1，下方输入0和100。同样为IDC_EDIT2也设置好。
<img src="http://img.blog.csdn.net/20170415152522025?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<h4 id="第五种方式">第五种方式</h4>
<p>将编辑框控件再与一个变量相关联，代表控件本身。为IDC_EDIT1增加一个控件类型的变量：m_edit1，类别为Control。同样地，也为IDC_EDIT2和IDC_EDIT3添加。
<img src="http://img.blog.csdn.net/20170415152547447?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<p>修改代码：
<figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">void</span> CTestDlg::OnBtnAdd() </div><div class="line">&#123;</div><div class="line">	<span class="keyword">int</span> num1, num2, num3; </div><div class="line">	<span class="keyword">char</span> ch1[<span class="number">10</span>], ch2[<span class="number">10</span>], ch3[<span class="number">10</span>]; </div><div class="line">	</div><div class="line">	m_edit1.GetWindowText(ch1,<span class="number">10</span>);</div><div class="line">	m_edit2.GetWindowText(ch2,<span class="number">10</span>);</div><div class="line"></div><div class="line">	<span class="comment">//num1 = GetDlgItemInt(IDC_EDIT1);</span></div><div class="line">	<span class="comment">//num2 = GetDlgItemInt(IDC_EDIT2);</span></div><div class="line"></div><div class="line">	num1 = atoi(ch1); </div><div class="line">	num2 = atoi(ch2); </div><div class="line">	num3 = num1 + num2; </div><div class="line"></div><div class="line">	itoa(num3,ch3,<span class="number">10</span>);</div><div class="line">	m_edit3.SetWindowText(ch3);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h4 id="第六种方式">第六种方式</h4>
<p>修改代码：
<figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">void</span> CTestDlg::OnBtnAdd() </div><div class="line">&#123;</div><div class="line">	<span class="keyword">int</span> num1, num2, num3; </div><div class="line">	<span class="keyword">char</span> ch1[<span class="number">10</span>], ch2[<span class="number">10</span>], ch3[<span class="number">10</span>]; </div><div class="line"></div><div class="line">	::SendMessage(GetDlgItem(IDC_EDIT1)-&gt;m_hWnd, WM_GETTEXT, <span class="number">10</span>, (LPARAM)ch1);</div><div class="line">	::SendMessage(m_edit2.m_hWnd, WM_GETTEXT, <span class="number">10</span>, (LPARAM)ch2);</div><div class="line"></div><div class="line">	num1 = atoi(ch1); </div><div class="line">	num2 = atoi(ch2); </div><div class="line">	num3 = num1 + num2; </div><div class="line"></div><div class="line">	itoa(num3,ch3,<span class="number">10</span>);</div><div class="line">	m_edit3.SendMessage(WM_SETTEXT, <span class="number">0</span>, (LPARAM)ch3);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h4 id="第七种方式">第七种方式</h4>
<p>修改代码：
<figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">void</span> CTestDlg::OnBtnAdd() </div><div class="line">&#123;</div><div class="line">	<span class="keyword">int</span> num1, num2, num3; </div><div class="line">	<span class="keyword">char</span> ch1[<span class="number">10</span>], ch2[<span class="number">10</span>], ch3[<span class="number">10</span>]; </div><div class="line">	</div><div class="line">	SendDlgItemMessage(IDC_EDIT1, WM_GETTEXT, <span class="number">10</span>, (LPARAM)ch1);</div><div class="line">	SendDlgItemMessage(IDC_EDIT2, WM_GETTEXT, <span class="number">10</span>, (LPARAM)ch2);</div><div class="line">	</div><div class="line">num1 = atoi(ch1); </div><div class="line">	num2 = atoi(ch2); </div><div class="line">	num3 = num1 + num2; </div><div class="line"></div><div class="line">	itoa(num3,ch3,<span class="number">10</span>);</div><div class="line">	SendDlgItemMessage(IDC_EDIT3, WM_SETTEXT, <span class="number">0</span>, (LPARAM)ch3);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>获得编辑框复选的内容：
　　在上述代码最后添加：
	SendDlgItemMessage(IDC_EDIT3, EM_SETSEL, 0, -1); //0,-1表示全选若1,3表示选中1-3位复选
	m_edit3.SetFocus();</p>
<p>效果：
<img src="http://img.blog.csdn.net/20170415152614010?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<h4 id="总结">总结</h4>
<p>1	GetDlgItem()-&gt;Get(Set)WindowTest()
2	GetDlgItemText()/SetDlgItemText()
3	GetDlgItemInt()/SetDlgItemInt()
4	将控件和整型变量相关联
5	将控件和控件变量相关联
6	SendMessage()
7	SendDlgItemMessage()
　　最常用是1、4、5。在利用MFC编程时，6、7用得少。</p>
<h2 id="对话框伸缩功能的实现">对话框伸缩功能的实现</h2>
<p>对话框上再添加一个按钮，Caption设置为“收缩&lt;&lt;”点击ClassWizard，添加一个命令相应函数（BN_CLICKED）。具体实现代码为：
<figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">void</span> CTestDlg::OnButton1() </div><div class="line">&#123;</div><div class="line">	CString str; </div><div class="line">	<span class="keyword">if</span>(GetDlgItemText(IDC_BUTTON1,str), str == <span class="string">"收缩&lt;&lt;"</span>)</div><div class="line">	&#123;</div><div class="line">		SetDlgItemText(IDC_BUTTON1, <span class="string">"拓展&gt;&gt;"</span>);</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">else</span></div><div class="line">	&#123;</div><div class="line">		SetDlgItemText(IDC_BUTTON1, <span class="string">"收缩&lt;&lt;"</span>);</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>拖动一个图像控件来划分对话框中要动态切除的部分。
<img src="http://img.blog.csdn.net/20170415152648992?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<p>修改该控件ID为IDC_SEPATATOR，styles选项卡勾上Sunken选项。
　　修改代码：
<figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">void</span> CTestDlg::OnButton1() </div><div class="line">&#123;</div><div class="line">	CString str; </div><div class="line">	<span class="keyword">if</span>(GetDlgItemText(IDC_BUTTON1,str), str == <span class="string">"收缩&lt;&lt;"</span>)</div><div class="line">	&#123;</div><div class="line">		SetDlgItemText(IDC_BUTTON1, <span class="string">"拓展&gt;&gt;"</span>);</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">else</span></div><div class="line">	&#123;</div><div class="line">		SetDlgItemText(IDC_BUTTON1, <span class="string">"收缩&lt;&lt;"</span>);</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">static</span> CRect rectLarge;</div><div class="line">	<span class="keyword">static</span> CRect rectSmall;</div><div class="line"></div><div class="line">	<span class="function">CRect <span class="title">rect1</span><span class="params">(<span class="number">10</span>,<span class="number">10</span>,<span class="number">10</span>,<span class="number">10</span>)</span></span>;</div><div class="line">	<span class="function">CRect <span class="title">rect2</span><span class="params">(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>)</span></span>;</div><div class="line"></div><div class="line">	<span class="keyword">if</span>(rectLarge.IsRectNull())</div><div class="line">	&#123;</div><div class="line">		CRect rectSeparator;</div><div class="line">		GetWindowRect(&amp;rectLarge);</div><div class="line">		GetDlgItem(IDC_SEPARATOR)-&gt;GetWindowRect(&amp;rectSeparator);</div><div class="line"></div><div class="line">		rectSmall.left=rectLarge.left;</div><div class="line">		rectSmall.top=rectLarge.top;</div><div class="line">		rectSmall.right=rectLarge.right;</div><div class="line">		rectSmall.bottom=rectSeparator.bottom;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">if</span>(str == <span class="string">"收缩&lt;&lt;"</span>)</div><div class="line">	&#123;</div><div class="line">		SetWindowPos(<span class="literal">NULL</span>, <span class="number">0</span>, <span class="number">0</span>, rectSmall.Width(), rectSmall.Height(), SWP_NOMOVE | SWP_NOZORDER);</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">else</span></div><div class="line">	&#123;</div><div class="line">		SetWindowPos(<span class="literal">NULL</span>, <span class="number">0</span>, <span class="number">0</span>, rectLarge.Width(), rectLarge.Height(), SWP_NOMOVE | SWP_NOZORDER);</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>效果：
<img src="http://img.blog.csdn.net/20170415152705855?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<p>点击“收缩&lt;&lt;”：
<img src="http://img.blog.csdn.net/20170415152725793?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<p>若希望隐藏分隔条，则设置属性去掉“Visible”前的勾。</p>
<h2 id="输入焦点的传递">输入焦点的传递</h2>
<p>为了屏蔽掉默认的回车键关闭对话框这一功能，应该在对话框子类（此处是CTestDlg类）中重写OK按钮的消息响应函数。
　　首先点击OK按钮，添加鼠标单击消息响应函数。注释掉原有函数。</p>
<h3 id="法一">法一</h3>
<p>在ClassView选项卡的CTestDlg类添加WM_INITDIALOG消息的响应函数。对类右键，选择Add Windows Message Handler，在弹出的框左侧选择WM_INITDIALOG，直接单击Add and Edit，跳转。
　　修改代码为：
<figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">void</span> CTestDlg::OnOK() </div><div class="line">&#123;</div><div class="line">	<span class="comment">// <span class="doctag">TODO:</span> Add extra validation here</span></div><div class="line">	</div><div class="line">	<span class="comment">//CDialog::OnOK();</span></div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line">WNDPROC prevProc;</div><div class="line">	<span class="function">LRESULT CALLBACK <span class="title">NewEditProc</span><span class="params">(</span></span></div><div class="line">		HWND hwnd,</div><div class="line">		UINT uMsg,</div><div class="line">		WPARAM wParam,</div><div class="line">		LPARAM lParam</div><div class="line">		)</div><div class="line">	&#123;</div><div class="line">		<span class="keyword">if</span>(uMsg == WM_CHAR &amp;&amp; wParam == <span class="number">0x0d</span>)</div><div class="line">		&#123;</div><div class="line">			::SetFocus(GetNextWindow(hwnd,GW_HWNDNEXT));</div><div class="line">			<span class="keyword">return</span> <span class="number">1</span>;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">else</span></div><div class="line">		&#123;</div><div class="line">			<span class="keyword">return</span> prevProc(hwnd,uMsg,wParam,lParam);</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">BOOL CTestDlg::OnInitDialog() </div><div class="line">&#123;</div><div class="line">	CDialog::OnInitDialog();</div><div class="line">	prevProc=(WNDPROC)SetWindowLong(GetDlgItem(IDC_EDIT1)-&gt;m_hWnd,</div><div class="line">		GWL_WNDPROC, (LONG)NewEditProc);</div><div class="line">	<span class="keyword">return</span> TRUE;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>查看第一个编辑框的属性，打开styles选项卡，勾上MultiLine（多行）。即可实现焦点的传递。</p>
<h3 id="法二">法二</h3>
<p>只需要改变一行代码：
<figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">WNDPROC prevProc;</div><div class="line">	<span class="function">LRESULT CALLBACK <span class="title">NewEditProc</span><span class="params">(</span></span></div><div class="line">		HWND hwnd,</div><div class="line">		UINT uMsg,</div><div class="line">		WPARAM wParam,</div><div class="line">		LPARAM lParam</div><div class="line">		)</div><div class="line">	&#123;</div><div class="line">		<span class="keyword">if</span>(uMsg == WM_CHAR &amp;&amp; wParam == <span class="number">0x0d</span>)</div><div class="line">		&#123;</div><div class="line">			<span class="comment">//::SetFocus(GetNextWindow(hwnd,GW_HWNDNEXT));</span></div><div class="line">			SetFocus(::GetWindow(hwnd,GW_HWNDNEXT));</div><div class="line">			<span class="keyword">return</span> <span class="number">1</span>;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">else</span></div><div class="line">		&#123;</div><div class="line">			<span class="keyword">return</span> prevProc(hwnd,uMsg,wParam,lParam);</div><div class="line">		&#125;</div><div class="line">	&#125;</div></pre></td></tr></table></figure></p>
<h3 id="法三">法三</h3>
<p>编辑框属性有一个WS_TABSTOP，如果勾选了，则在对话框中按下Tab键后，输入焦点可以转移到此控件上。</p>
<p>修改一行代码：
<figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">WNDPROC prevProc;</div><div class="line">	<span class="function">LRESULT CALLBACK <span class="title">NewEditProc</span><span class="params">(</span></span></div><div class="line">		HWND hwnd,</div><div class="line">		UINT uMsg,</div><div class="line">		WPARAM wParam,</div><div class="line">		LPARAM lParam</div><div class="line">		)</div><div class="line">	&#123;</div><div class="line">		<span class="keyword">if</span>(uMsg == WM_CHAR &amp;&amp; wParam == <span class="number">0x0d</span>)</div><div class="line">		&#123;</div><div class="line">			SetFocus(::GetNextDlgTabItem(::GetParent(hwnd),hwnd,FALSE));</div><div class="line">			<span class="comment">//::SetFocus(GetNextWindow(hwnd,GW_HWNDNEXT));</span></div><div class="line">			<span class="comment">//SetFocus(::GetWindow(hwnd,GW_HWNDNEXT));</span></div><div class="line">			<span class="keyword">return</span> <span class="number">1</span>;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">else</span></div><div class="line">		&#123;</div><div class="line">			<span class="keyword">return</span> prevProc(hwnd,uMsg,wParam,lParam);</div><div class="line">		&#125;</div><div class="line">	&#125;</div></pre></td></tr></table></figure></p>
<p>三种方法的缺点：只修改了第一个编辑框的窗口过程，因此从第二到第三个编辑框的焦点转移无法实现，除非继续修改第二个编辑窗口。</p>
<p>再介绍一种方法解决这个问题。</p>
<h3 id="法四">法四</h3>
<p>在MFC中，默认情况下，当在对话框窗口中按下回车键时，会调用对话框的默认按钮的响应函数，我们可以在此默认按钮的响应函数中把焦点依次向下传递。</p>
<p>首先取消第一个编辑框的MultiLine。
　　接着修改OnOK函数为：
<figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">void</span> CTestDlg::OnOK() </div><div class="line">&#123;</div><div class="line">	<span class="comment">// <span class="doctag">TODO:</span> Add extra validation here</span></div><div class="line">	<span class="comment">//GetDlgItem(IDC_EDIT1)-&gt;GetNextWindow()-&gt;SetFocus();</span></div><div class="line">	<span class="comment">//GetFocus()-&gt;GetNextWindow()-&gt;SetFocus();</span></div><div class="line">	<span class="comment">//GetFocus()-&gt;GetWindow(GW_HWNDNEXT)-&gt;SetFocus();</span></div><div class="line">	GetNextDlgTabItem(GetFocus())-&gt;SetFocus();</div><div class="line">	<span class="comment">//CDialog::OnOK();</span></div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>注释掉的部分是各种失败的尝试，各有各的bug。现在程序是正常的。</p>
<p>点击Layout-Tab order，这些序号就是各控件的Tab顺序。顺序可改变，依次点击希望的顺序控件即可。</p>
<p>调用顺序：当用户按下回车键时，Windows将查看对话框中是否存在指定的默认按钮，如果有，就调用该默认按钮单击消息的响应函数。如果没有，就会调用虚拟的OnOK函数，即使对话框没有包含默认的OK按钮（这个默认OK按钮的ID是IDOK）。</p>
<p>&lt;span id=&quot;busuanzi_container_page_pv&quot;&gt;
本文已被阅读 &lt;span id=&quot;busuanzi_value_page_pv&quot;&gt;&lt;/span&gt; 次。感谢您的点击！</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;技术书很多废话连篇。——公司某优秀工程师
　　直接上菜。&lt;/p&gt;
&lt;p&gt;&amp;lt;!--more--&amp;gt;&lt;/p&gt;
&lt;p&gt;MFC：Microsoft Foundation Class ，微软基础类库。&lt;/p&gt;
&lt;h1 id=&quot;对话框&quot;&gt;对话框&lt;/h1&gt;
&lt;h2 id=&quot;对话
    
    </summary>
    
      <category term="软件" scheme="http://hubojing.github.io/categories/%E8%BD%AF%E4%BB%B6/"/>
    
    
      <category term="MFC" scheme="http://hubojing.github.io/tags/MFC/"/>
    
      <category term="C++" scheme="http://hubojing.github.io/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>多说关闭引发的麻烦</title>
    <link href="http://hubojing.github.io/2017/04/05/%E5%A4%9A%E8%AF%B4%E5%85%B3%E9%97%AD%E5%BC%95%E5%8F%91%E7%9A%84%E9%BA%BB%E7%83%A6/"/>
    <id>http://hubojing.github.io/2017/04/05/多说关闭引发的麻烦/</id>
    <published>2017-04-05T08:44:21.000Z</published>
    <updated>2017-04-05T09:08:45.272Z</updated>
    
    <content type="html"><![CDATA[<p>多说八百年不发邮件通知我有评论，在我换为网易云跟帖后，竟然邮件通知我有评论了！
<img src="https://timgsa.baidu.com/timg?image&amp;quality=80&amp;size=b9999_10000&amp;sec=1491392241106&amp;di=d26487a68371b445aa7b604ab2883ce1&amp;imgtype=0&amp;src=http%3A%2F%2Fimage103.360doc.com%2FDownloadImg%2F2017%2F02%2F1715%2F91672979_2.png" alt="捂脸"></p>
<p>多说关闭带来的评论区何去何从让我颇为困扰。
现在能用的大概只有这些：畅言（需备案）、网易云跟帖（github.io不支持）、友言（也有倒闭趋势）、来必力（韩国）。</p>
<p>没有一个像多说这样好用的！</p>
<p>虽然多说也有很多问题，但它至少解决了核心问题：
1.评论显示正确的网友名称。
来看看我换上网易云跟帖后的效果：
<img src="http://img.blog.csdn.net/20170405161942419?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="网易云跟帖"></p>
<p>都是有态度网友…… 我压根分不清谁是谁！</p>
<p>2.点击头像可以回访人家的独立博客。
这一点真的很重要，这往往是我们小众的独立博客人交朋友的主要途径啊！</p>
<p>3.可以自定义。
头像旋转、评论框自定义，真的可以很好看。这些跟帖做不到。</p>
<p>4.盖楼模式多样。
而跟帖只能一种，我不太喜欢，重复率太高，我还是喜欢多说的嵌套。</p>
<p>多说名字没起好啊！多说无益必自毙→_→
先换回多说吧，再等一个月看看。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;多说八百年不发邮件通知我有评论，在我换为网易云跟帖后，竟然邮件通知我有评论了！
&lt;img src=&quot;https://timgsa.baidu.com/timg?image&amp;amp;quality=80&amp;amp;size=b9999_10000&amp;amp;sec=1491392
    
    </summary>
    
      <category term="杂谈" scheme="http://hubojing.github.io/categories/%E6%9D%82%E8%B0%88/"/>
    
    
      <category term="多说" scheme="http://hubojing.github.io/tags/%E5%A4%9A%E8%AF%B4/"/>
    
  </entry>
  
  <entry>
    <title>DigitalOcean购买服务器教程</title>
    <link href="http://hubojing.github.io/2017/03/28/DigitalOcean%E8%B4%AD%E4%B9%B0%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%95%99%E7%A8%8B/"/>
    <id>http://hubojing.github.io/2017/03/28/DigitalOcean购买服务器教程/</id>
    <published>2017-03-28T13:50:20.000Z</published>
    <updated>2017-04-05T07:17:04.452Z</updated>
    
    <content type="html"><![CDATA[<p>GitHub教育礼包有50美金优惠券，加上朋友的链接送的10美金，自己充值的5美金，正好可以买一个服务器用一年了。</p>
<p>&lt;!--more--&gt;</p>
<h1 id="步骤">步骤</h1>
<h2 id="注册-优惠码">注册、优惠码</h2>
<p>1.点击https://m.do.co/c/9d7b9b7b94ba/ 进入DigitalOcean注册。
（通过以上链接，你可以多获得10美金！同时，我也将得到10美金。）</p>
<p>注册时，需要支付5美金完成支付，最好用paypal支付（可以去注册一个账号），最好不要用信用卡（土豪可以用……）。</p>
<p>2.点击头像下的Setting，再点击右侧的Billing
<img src="http://img.blog.csdn.net/20170326174446026?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="Billing"></p>
<p>3.输入教育礼包优惠码
<img src="http://img.blog.csdn.net/20170326174542642?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="Promo code"></p>
<p><strong>注意</strong>：很有可能显示“ Account not eligible to use this promo code.”可能滥用优惠码却不是学生的人太多，DO加强了监管，审查比较严格。反正我的是没有通过。
于是，需要向客服反映情况。
点击Support，
<img src="http://img.blog.csdn.net/20170326174844940?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="Support">
点击Create ticket，把你的情况写清楚，最好说明你是学生，并附带你的优惠码。之后官方会帮你搞定。（在三小时后就处理好了我的）</p>
<h2 id="购买服务器">购买服务器</h2>
<p>点击创建Droplet，</p>
<p><img src="http://img.blog.csdn.net/20170326175306708?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="Create Droplet"></p>
<p><img src="http://img.blog.csdn.net/20170326180620758?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="服务器价格"></p>
<p>学生……穷啊……只能买最便宜的……这样刚好可以用一年。</p>
<p><img src="http://img.blog.csdn.net/20170326175420319?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="选择服务器系统"></p>
<p>选择centos6.8x64</p>
<p><img src="http://img.blog.csdn.net/20170326175528071?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="选择地址"></p>
<p>旧金山比较快。</p>
<p><img src="http://img.blog.csdn.net/20170326175607599?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="可选项"></p>
<p>这个的第一个和第三个可以选，最好不选第三个。</p>
<p>改名</p>
<p><img src="http://img.blog.csdn.net/20170326175720964?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="改名"></p>
<p>点击create，服务器购买成功。
DO会给你发送一封带有初始密码的邮件。</p>
<h2 id="使用">使用</h2>
<p>下载puTTY或xshell。
puTTY
<img src="http://img.blog.csdn.net/20170326180124352?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="puTTY"></p>
<p>我以shell为例，
<img src="http://img.blog.csdn.net/20170326180208206?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="初始页"></p>
<p>新建会话。
<img src="http://img.blog.csdn.net/20170326180245618?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="属性"></p>
<p>IP地址填你的服务器IP，接受并保存你的主机密钥。
输入用户名。
输入初始密码。
再修改密码。（密码最好复杂一点）</p>
<p>完成。
可以愉快地使用你的服务器啦！</p>
<h1 id="致谢">致谢</h1>
<p>感谢<a href="https://www.domeyi.com/" target="_blank" rel="external">小忆</a>的耐心指导和大力帮助！</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;GitHub教育礼包有50美金优惠券，加上朋友的链接送的10美金，自己充值的5美金，正好可以买一个服务器用一年了。&lt;/p&gt;
&lt;p&gt;&amp;lt;!--more--&amp;gt;&lt;/p&gt;
&lt;h1 id=&quot;步骤&quot;&gt;步骤&lt;/h1&gt;
&lt;h2 id=&quot;注册-优惠码&quot;&gt;注册、优惠码&lt;/h2&gt;
&lt;p
    
    </summary>
    
      <category term="互联网" scheme="http://hubojing.github.io/categories/%E4%BA%92%E8%81%94%E7%BD%91/"/>
    
    
      <category term="DigitalOcean" scheme="http://hubojing.github.io/tags/DigitalOcean/"/>
    
      <category term="服务器" scheme="http://hubojing.github.io/tags/%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
  </entry>
  
  <entry>
    <title>更换为.me域名教程</title>
    <link href="http://hubojing.github.io/2017/03/26/%E6%9B%B4%E6%8D%A2%E4%B8%BA.me%E5%9F%9F%E5%90%8D%E6%95%99%E7%A8%8B/"/>
    <id>http://hubojing.github.io/2017/03/26/更换为.me域名教程/</id>
    <published>2017-03-26T13:01:21.000Z</published>
    <updated>2017-04-05T07:17:26.609Z</updated>
    
    <content type="html"><![CDATA[<p>既然申请得到Github教育礼包，就应开始使用。
我的博客是基于Hexo搭建于Github的博客，原域名：http://hubojing.github.io/ ，现在的新域名是 http://www.hubojing.me/ 。</p>
<p>&lt;!--more--&gt;</p>
<h1 id="注册me域名">注册.me域名</h1>
<p>1.打开教育礼包中的namecheap优惠页面https://nc.me/，使用你的github账号登录。
<img src="http://img.blog.csdn.net/20170326164253754?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="登录"></p>
<p>登陆后，显示已成功。</p>
<p><img src="http://img.blog.csdn.net/20170326164344646?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="成功"></p>
<p>搜索你想要的域名。</p>
<p><img src="http://img.blog.csdn.net/20170326164007734?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="查询页面"></p>
<p>2.如果该域名未被注册，那么你可以注册该域名。
<img src="http://img.blog.csdn.net/20170326164441564?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="注册页面"></p>
<p>点击ADD。</p>
<p><img src="http://img.blog.csdn.net/20170326164524022?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="付款"></p>
<p>点击Complete Order。</p>
<p><img src="http://img.blog.csdn.net/20170326164625924?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="详情"></p>
<p>点击下方的Finish Up完成注册，这样该域名就属于你了。</p>
<p>紧接着，会要求你登录你的namecheap账号，如果之前没有用过该网站，就点register注册一个账号。</p>
<p><img src="http://img.blog.csdn.net/20170326164750097?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="注册"></p>
<p>注册完成后，是以下的页面显示。</p>
<p><img src="http://img.blog.csdn.net/20170326164921653?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="注册完成"></p>
<p>在和你的Github账户绑定在一起：
<img src="http://img.blog.csdn.net/20170326165006630?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="绑定成功"></p>
<p>这样.me域名注册就算是全部完成了。</p>
<h1 id="域名管理">域名管理</h1>
<p>打开网址http://www.namecheap.com/，登录自己的账户。
点击Domain List，
<img src="http://img.blog.csdn.net/20170326165302596?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="点击"></p>
<p>你将看到域名列表。</p>
<p><img src="http://img.blog.csdn.net/20170326165359413?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="域名列表"></p>
<p>由于国外的DNS可能很慢，于是最好托管到国内的服务商来。我选择的是腾讯云。</p>
<h1 id="转移到腾讯云">转移到腾讯云</h1>
<p>进入https://www.dnspod.cn/，注册新账号（可以用QQ、微信等直接登录免注册）。</p>
<p>点击添加域名，将刚才的.me域名输入。保存。
<img src="http://img.blog.csdn.net/20170326165806508?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="添加域名"></p>
<p>控制台全局外观：
<img src="http://img.blog.csdn.net/20170326170148387?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="控制台"></p>
<p>再回到namecheap控制台，修改NAMESERVERS，选择Custom DNS，如图。
<img src="http://img.blog.csdn.net/20170326170503918?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="修改DNS"></p>
<p>需要等待一会儿才能成功。（最晚48h，我就等了几分钟就好了。）</p>
<p><img src="http://img.blog.csdn.net/20170326170702856?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="成功提示"></p>
<p>回到腾讯云，域名是红的。
<img src="http://img.blog.csdn.net/20170326170821412?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="红色"></p>
<p>点击进去看看，再返回，等待一下，再刷新。
变成蓝色，说明已经更新成功了。</p>
<p>点击进入，点击添加记录，</p>
<p><img src="http://img.blog.csdn.net/20170326171042541?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="添加记录"></p>
<p>保存。</p>
<h1 id="github博客项目设置">GitHub博客项目设置</h1>
<p>进入项目页（是博客项目页，非个人资料页），点击Setting，
<img src="http://img.blog.csdn.net/20170326171232078?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="GitHub Pages"></p>
<p>将Custom domain改为你刚才解析的域名，比如我的 www.hubojing.me ，点击Save保存。</p>
<p><img src="http://img.blog.csdn.net/20170326171403280?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="保存成功"></p>
<p>大功告成！你的新域名已能正常使用，并且也能通过旧域名自动跳转到新域名！（记得重启浏览器，或者使用IE或Edge浏览器打开查看效果！）
<img src="http://img.blog.csdn.net/20170326171616595?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="大功告成"></p>
<h1 id="致谢">致谢</h1>
<p>感谢 <a href="https://www.domeyi.com/" target="_blank" rel="external">小忆</a> 在我更换域名时提供的大力帮助！</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;既然申请得到Github教育礼包，就应开始使用。
我的博客是基于Hexo搭建于Github的博客，原域名：http://hubojing.github.io/ ，现在的新域名是 http://www.hubojing.me/ 。&lt;/p&gt;
&lt;p&gt;&amp;lt;!--more--&amp;g
    
    </summary>
    
      <category term="互联网" scheme="http://hubojing.github.io/categories/%E4%BA%92%E8%81%94%E7%BD%91/"/>
    
    
      <category term="教程" scheme="http://hubojing.github.io/tags/%E6%95%99%E7%A8%8B/"/>
    
      <category term="域名" scheme="http://hubojing.github.io/tags/%E5%9F%9F%E5%90%8D/"/>
    
  </entry>
  
  <entry>
    <title>Github教育礼包</title>
    <link href="http://hubojing.github.io/2017/03/25/Github%E6%95%99%E8%82%B2%E7%A4%BC%E5%8C%85/"/>
    <id>http://hubojing.github.io/2017/03/25/Github教育礼包/</id>
    <published>2017-03-25T03:21:23.000Z</published>
    <updated>2017-03-31T14:24:08.214Z</updated>
    
    <content type="html"><![CDATA[<p>感谢小伙伴让我知道github教育礼包，并教我怎么申请：</p>
<ol>
<li>到教育优惠页面申请：https://education.github.com/</li>
<li>填写学校信息及申请理由，如果有edu邮箱一般很快就通过了；如果没有，需要提供证件来证明。</li>
<li>一般来说一小时到几天就申请成功了。（我当天晚上收到了邮件）
有用的主要三个东西：</li>
<li>me域名免费一年</li>
<li>DO的免费VPS代金券50美金（有效期1年），可以使用最低配置11个月</li>
<li>免费SSL证书</li>
</ol>
<p>收到的邮件（截取片段）：
If you need help getting started with Git and GitHub, check out:</p>
<p>https://help.github.com/articles/good-resources-for-learning-git-and-github</p>
<p>We've also given you access to the Student Developer Pack, available at:</p>
<p>https://education.github.com/pack</p>
<p>If you have any questions, contact us:</p>
<p>https://education.github.com/contact</p>
<p>Spread the word: we love giving educational discounts to students, teachers, administrators, and researchers! Please send them to:</p>
<p>https://education.github.com</p>
<p>Have an Octotastic day!（这个 Octotastic 我不造是什么意思……词典也没这个词 望大神解答）</p>
<p>My Pack:
<img src="http://img.blog.csdn.net/20170325152139513?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="ATOM">
A hackable text editor for the 21st Century
来自21世纪的可定制文本编辑器
免费使用</p>
<p><img src="http://img.blog.csdn.net/20170325152259545?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="aws educate">
Access to the AWS cloud, free training, and collaboration resources
AWS云，免费教程和资源。</p>
<p><img src="http://img.blog.csdn.net/20170325152452545?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="bitnami">
Install cloud applications in a single click
轻松安装云应用</p>
<p><img src="http://img.blog.csdn.net/20170325152601503?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="CARTO">
An open and powerful platform for spatial data analysis, visualization, and application creation.
一个开放有力的空间、视觉、应用创建数据分析平台。</p>
<p><img src="http://img.blog.csdn.net/20170325152759640?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="CrowdFlower">
Crowdsourcing and data enrichment platform
众包与数据富集平台</p>
<p><img src="http://img.blog.csdn.net/20170325152955501?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="DATADOG">
Cloud-based infrastructure monitoring
云基础设施监控</p>
<p><img src="http://img.blog.csdn.net/20170325153132065?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="DigitalOcean">
Simple cloud hosting, built for developers
简单云托管，为开发者而生</p>
<p><img src="http://img.blog.csdn.net/20170325153307467?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="dnsimple">
Simple DNS management with one-click services and a robust API
简单的DNS管理，包括一键服务和强大的API</p>
<p><img src="http://img.blog.csdn.net/20170325153539661?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="FLATIRON SCHOOL">
Learn Web Development from the premier coding bootcamp for launching developers.
从最开始的代码集训营开始学习Web开发成为开发者。</p>
<p><img src="http://img.blog.csdn.net/20170325153827865?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="Github">
Powerful collaboration, code review, and code management
强大的协作、代码审查和代码管理</p>
<p><img src="http://img.blog.csdn.net/20170325153937663?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="GitKraken">
The downright luxurious Git client for Windows, Mac and Linux
Windows，Mac和Linux上的超级豪华Git客户端</p>
<p><img src="http://img.blog.csdn.net/20170325154114898?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="HACKHANDS">
Live programming help available 24/7
编程帮助</p>
<p><img src="http://img.blog.csdn.net/20170325154256511?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="Microsoft Imagine">
A suite of Microsoft Azure cloud services and developer tools, including the Visual Studio IDE
一套微软Azure的云服务和开发工具，包括Visual Studio IDE</p>
<p><img src="http://img.blog.csdn.net/20170325154446405?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="namecheap">
Affordable registration, hosting, and domain management
便宜的注册，托管和域管理</p>
<p><img src="http://img.blog.csdn.net/20170325154612806?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="SendGrid">
Email infrastructure as a service
电子邮件基础设施服务</p>
<p><img src="http://img.blog.csdn.net/20170325154722190?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="stripe">
Web and mobile payments, built for developers
网络和移动支付，为开发者而生</p>
<p><img src="http://img.blog.csdn.net/20170325154820863?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="TAPLYTICS">
Dynamic A/B testing, smart push notifications and custom analytics for native mobile apps
动态A / B测试，智能推送通知和自定义分析本地移动应用程序</p>
<p><img src="http://img.blog.csdn.net/20170325155641561?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="transifex">
Localization platform that easily integrates with your code base
易于与代码库集成的本地化平台</p>
<p><img src="http://img.blog.csdn.net/20170325155750954?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="Travis CI">
Continuous integration platform for open source and private projects
开源和私有项目的连续集成平台</p>
<p><img src="http://img.blog.csdn.net/20170325155909190?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="UDACITY">
Enroll in a Nanodegree program, and launch your career in Web and Mobile Development, Machine Learning, Data Science, and more.</p>
<p>Enroll in a Nanodegree program, and launch your career in Web and Mobile Development, Machine Learning, Data Science, and more.
报名参加一个nanodegree项目，在Web、移动开发、机器学习、数据科学以及等多方面，开启你的职业生涯。</p>
<p><img src="http://img.blog.csdn.net/20170325162245096?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="UNREAL">
A complete suite of game development tools for PC, console, mobile, web and VR
一套完整的游戏开发工具，用于PC，控制台，移动，网络和虚拟现实</p>
<p>正在学习其中一些工具的使用中……未完待续。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;感谢小伙伴让我知道github教育礼包，并教我怎么申请：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;到教育优惠页面申请：https://education.github.com/&lt;/li&gt;
&lt;li&gt;填写学校信息及申请理由，如果有edu邮箱一般很快就通过了；如果没有，需要提供证件来证明。&lt;/
    
    </summary>
    
      <category term="杂谈" scheme="http://hubojing.github.io/categories/%E6%9D%82%E8%B0%88/"/>
    
    
      <category term="Github" scheme="http://hubojing.github.io/tags/Github/"/>
    
  </entry>
  
  <entry>
    <title>简易计算器（Android）</title>
    <link href="http://hubojing.github.io/2017/03/22/%E5%88%B6%E4%BD%9C%E7%AE%80%E6%98%93%E8%AE%A1%E7%AE%97%E5%99%A8APP%EF%BC%88%E7%BA%BF%E6%80%A7%E7%BB%93%E6%9E%84%EF%BC%89/"/>
    <id>http://hubojing.github.io/2017/03/22/制作简易计算器APP（线性结构）/</id>
    <published>2017-03-21T16:19:25.000Z</published>
    <updated>2017-03-30T15:54:21.400Z</updated>
    
    <content type="html"><![CDATA[<p>&lt;div align=&quot;left&quot;&gt;
&lt;img src=&quot;http://img.blog.csdn.net/20170321231830210?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast&quot; width=&quot;300&quot; height=&quot;180&quot;  style=&quot;float:right;&quot;/&gt;</p>
<p>安卓端简易计算器APP实现。</p>
<p>&lt;/div&gt;</p>
<p>&lt;!--more--&gt;</p>
<h1 id="目标">目标</h1>
<p>制作简易计算器（Android）。</p>
<h1 id="思路">思路</h1>
<p>第一步：页面布局
第二步：事件监听以及实现运算</p>
<h1 id="成品">成品</h1>
<p><img src="http://img.blog.csdn.net/20170321231830210?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="简易计算器"></p>
<h1 id="代码">代码</h1>
<h2 id="mainactivityjava">MainActivity.java</h2>
<p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div><div class="line">175</div><div class="line">176</div><div class="line">177</div><div class="line">178</div><div class="line">179</div><div class="line">180</div><div class="line">181</div><div class="line">182</div><div class="line">183</div><div class="line">184</div><div class="line">185</div><div class="line">186</div><div class="line">187</div><div class="line">188</div><div class="line">189</div><div class="line">190</div><div class="line">191</div><div class="line">192</div><div class="line">193</div><div class="line">194</div><div class="line">195</div><div class="line">196</div><div class="line">197</div><div class="line">198</div><div class="line">199</div><div class="line">200</div><div class="line">201</div><div class="line">202</div><div class="line">203</div><div class="line">204</div><div class="line">205</div><div class="line">206</div></pre></td><td class="code"><pre><div class="line">package com.example.calculator;</div><div class="line"></div><div class="line">import android.app.Activity;</div><div class="line">import android.os.Bundle;</div><div class="line">import android.view.View;</div><div class="line">import android.view.View.OnClickListener;</div><div class="line">import android.widget.Button;</div><div class="line">import android.widget.EditText;</div><div class="line"></div><div class="line">public class MainActivity extends Activity implements OnClickListener&#123;</div><div class="line">	Button btn_0;//0按钮</div><div class="line">	Button btn_1;//1按钮</div><div class="line">	Button btn_2;//2按钮</div><div class="line">	Button btn_3;//3按钮</div><div class="line">	Button btn_4;//4按钮</div><div class="line">	Button btn_5;//5按钮</div><div class="line">	Button btn_6;//6按钮</div><div class="line">	Button btn_7;//7按钮</div><div class="line">	Button btn_8;//8按钮</div><div class="line">	Button btn_9;//9按钮</div><div class="line">	Button btn_point;//小数点按钮</div><div class="line">	Button btn_clear;//清除按钮</div><div class="line">	Button btn_del;//删除按钮</div><div class="line">	Button btn_plus;//加按钮</div><div class="line">	Button btn_minus;//减按钮</div><div class="line">	Button btn_multiply;//乘按钮</div><div class="line">	Button btn_divide;//除按钮</div><div class="line">	Button btn_equal;//等号按钮</div><div class="line">	EditText et_input;//显示输入内容的显示屏</div><div class="line">	boolean clear_flag;//清空标识</div><div class="line">	</div><div class="line">	@Override</div><div class="line">	protected void onCreate(Bundle savedInstanceState) &#123;</div><div class="line">		super.onCreate(savedInstanceState);</div><div class="line">		setContentView(R.layout.activity_main);</div><div class="line">		btn_0 = (Button) findViewById(R.id.btn_0);</div><div class="line">		btn_1 = (Button) findViewById(R.id.btn_1);</div><div class="line">		btn_2 = (Button) findViewById(R.id.btn_2);</div><div class="line">		btn_3 = (Button) findViewById(R.id.btn_3);</div><div class="line">		btn_4 = (Button) findViewById(R.id.btn_4);</div><div class="line">		btn_5 = (Button) findViewById(R.id.btn_5);</div><div class="line">		btn_6 = (Button) findViewById(R.id.btn_6);</div><div class="line">		btn_7 = (Button) findViewById(R.id.btn_7);</div><div class="line">		btn_8 = (Button) findViewById(R.id.btn_8);</div><div class="line">		btn_9 = (Button) findViewById(R.id.btn_9);</div><div class="line">		btn_point = (Button) findViewById(R.id.btn_point);</div><div class="line">		btn_clear = (Button) findViewById(R.id.btn_clear);</div><div class="line">		btn_del = (Button) findViewById(R.id.btn_del);</div><div class="line">		btn_plus = (Button) findViewById(R.id.btn_plus);</div><div class="line">		btn_minus = (Button) findViewById(R.id.btn_minus);</div><div class="line">		btn_multiply = (Button) findViewById(R.id.btn_multiply);</div><div class="line">		btn_divide = (Button) findViewById(R.id.btn_divide);</div><div class="line">		btn_equal = (Button) findViewById(R.id.btn_equal);</div><div class="line">		//以上是实例化按钮</div><div class="line">		et_input=(EditText)findViewById(R.id.et_input);//实例化显示屏</div><div class="line">		</div><div class="line">		btn_0.setOnClickListener(this);</div><div class="line">		btn_1.setOnClickListener(this);</div><div class="line">		btn_2.setOnClickListener(this);</div><div class="line">		btn_3.setOnClickListener(this);</div><div class="line">		btn_4.setOnClickListener(this);</div><div class="line">		btn_5.setOnClickListener(this);</div><div class="line">		btn_6.setOnClickListener(this);</div><div class="line">		btn_7.setOnClickListener(this);</div><div class="line">		btn_8.setOnClickListener(this);</div><div class="line">		btn_9.setOnClickListener(this);</div><div class="line">		btn_point.setOnClickListener(this);</div><div class="line">		btn_clear.setOnClickListener(this);</div><div class="line">		btn_del.setOnClickListener(this);</div><div class="line">		btn_plus.setOnClickListener(this);</div><div class="line">		btn_minus.setOnClickListener(this);</div><div class="line">		btn_multiply.setOnClickListener(this);	</div><div class="line">		btn_divide.setOnClickListener(this);</div><div class="line">		btn_equal.setOnClickListener(this);</div><div class="line">		//以上设置按钮的点击事件</div><div class="line">		</div><div class="line">		</div><div class="line">		</div><div class="line">		</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	@Override</div><div class="line">	public void onClick(View v) &#123;</div><div class="line">		// TODO Auto-generated method stub</div><div class="line">		String str =et_input.getText().toString();</div><div class="line">		switch (v.getId()) &#123;</div><div class="line">		case R.id.btn_0:</div><div class="line">		case R.id.btn_1:</div><div class="line">		case R.id.btn_2:</div><div class="line">		case R.id.btn_3:</div><div class="line">		case R.id.btn_4:</div><div class="line">		case R.id.btn_5:</div><div class="line">		case R.id.btn_6:</div><div class="line">		case R.id.btn_7:</div><div class="line">		case R.id.btn_8:</div><div class="line">		case R.id.btn_9:</div><div class="line">		case R.id.btn_point:</div><div class="line">			if(clear_flag)&#123;</div><div class="line">				clear_flag=false;</div><div class="line">				str=&quot;&quot;;</div><div class="line">				et_input.setText(&quot;&quot;);</div><div class="line">			&#125;</div><div class="line">		et_input.setText(str+((Button)v).getText());</div><div class="line">			break;</div><div class="line">			</div><div class="line">		</div><div class="line">		case R.id.btn_plus:</div><div class="line">		case R.id.btn_minus:</div><div class="line">		case R.id.btn_multiply:</div><div class="line">		case R.id.btn_divide:</div><div class="line">			if(clear_flag)&#123;</div><div class="line">				clear_flag=false;</div><div class="line">				str=&quot;&quot;;</div><div class="line">				et_input.setText(&quot;&quot;);</div><div class="line">			&#125;</div><div class="line">		et_input.setText(str+&quot; &quot;+((Button)v).getText()+&quot; &quot;);</div><div class="line">			break;</div><div class="line">		case R.id.btn_clear:</div><div class="line">			clear_flag=false;</div><div class="line">			str=&quot;&quot;;</div><div class="line">			et_input.setText(&quot;&quot;);</div><div class="line">			break;</div><div class="line">		case R.id.btn_del:</div><div class="line">			if(clear_flag)&#123;</div><div class="line">				clear_flag=false;</div><div class="line">				str=&quot;&quot;;</div><div class="line">				et_input.setText(&quot;&quot;);</div><div class="line">			&#125;else if(str!=null&amp;&amp;!str.equals(&quot;&quot;))&#123;</div><div class="line">				et_input.setText(str.substring(0, str.length()-1));</div><div class="line">			&#125;</div><div class="line">			break;</div><div class="line">		case R.id.btn_equal:</div><div class="line">			getResult();</div><div class="line">			break;</div><div class="line">	</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	/**</div><div class="line">	 * 运算结果</div><div class="line">	 */</div><div class="line">	private void getResult()&#123;</div><div class="line">		String exp=et_input.getText().toString();</div><div class="line">		if(exp==null||exp.equals(&quot;&quot;))&#123;</div><div class="line">			return;</div><div class="line">		&#125;</div><div class="line">		if(!exp.contains(&quot; &quot;))&#123;</div><div class="line">			return;</div><div class="line">		&#125;</div><div class="line">	</div><div class="line">		if(clear_flag)&#123;</div><div class="line">			clear_flag=false;</div><div class="line">			return;</div><div class="line">		&#125;</div><div class="line">		clear_flag=true;</div><div class="line">		double result=0;</div><div class="line">		String s1=exp.substring(0, exp.indexOf(&quot; &quot;));//运算符前面的字符串</div><div class="line">		String op=exp.substring(exp.indexOf(&quot; &quot;)+1, exp.indexOf(&quot; &quot;)+2);//运算符</div><div class="line">		String s2=exp.substring(exp.indexOf(&quot; &quot;)+3);//运算符后面的字符串</div><div class="line">		</div><div class="line">		if(!s1.equals(&quot;&quot;)&amp;&amp;!s2.equals(&quot;&quot;))&#123;</div><div class="line">			double d1=Double.parseDouble(s1);</div><div class="line">			double d2=Double.parseDouble(s2);</div><div class="line">			if(op.equals(&quot;+&quot;))&#123;</div><div class="line">				result=d1+d2;</div><div class="line">			&#125;else if(op.equals(&quot;-&quot;))&#123;</div><div class="line">				result=d1-d2;</div><div class="line">			&#125;else if(op.equals(&quot;×&quot;))&#123;</div><div class="line">				result=d1*d2;</div><div class="line">			&#125;else if(op.equals(&quot;÷&quot;))&#123;</div><div class="line">				if(d2==0)&#123;</div><div class="line">					result=0;</div><div class="line">				&#125;else&#123;</div><div class="line">					result=d1/d2;</div><div class="line">				&#125;</div><div class="line">			&#125;</div><div class="line">			if(!s1.contains(&quot;.&quot;)&amp;&amp;!s2.contains(&quot;.&quot;)&amp;&amp;!op.equals(&quot;÷&quot;))&#123;</div><div class="line">				int r=(int)result;</div><div class="line">				et_input.setText(r+&quot;&quot;);</div><div class="line">			&#125;else&#123;</div><div class="line">				et_input.setText(result+&quot;&quot;);</div><div class="line">			&#125;</div><div class="line">		&#125;else if(!s1.equals(&quot;&quot;)&amp;&amp;s2.equals(&quot;&quot;))&#123;</div><div class="line">			et_input.setText(exp);</div><div class="line">		&#125;else if(s1.equals(&quot;&quot;)&amp;&amp;!s2.equals(&quot;&quot;))&#123;</div><div class="line">			double d2=Double.parseDouble(s2);</div><div class="line">			if(op.equals(&quot;+&quot;))&#123;</div><div class="line">				result=0+d2;</div><div class="line">			&#125;else if(op.equals(&quot;-&quot;))&#123;</div><div class="line">				result=0-d2;</div><div class="line">			&#125;else if(op.equals(&quot;×&quot;))&#123;</div><div class="line">				result=0;</div><div class="line">			&#125;else if(op.equals(&quot;÷&quot;))&#123;</div><div class="line">					result=0;</div><div class="line">			&#125;</div><div class="line">			if(!s2.contains(&quot;.&quot;))&#123;</div><div class="line">				int r=(int)result;</div><div class="line">				et_input.setText(r+&quot;&quot;);</div><div class="line">			&#125;else&#123;</div><div class="line">				et_input.setText(result+&quot;&quot;);</div><div class="line">			&#125;</div><div class="line">		&#125;else&#123;</div><div class="line">			et_input.setText(&quot;&quot;);</div><div class="line">		&#125;</div><div class="line">				</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h2 id="activity_mainxml">activity_main.xml</h2>
<p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div><div class="line">175</div><div class="line">176</div><div class="line">177</div><div class="line">178</div><div class="line">179</div><div class="line">180</div><div class="line">181</div><div class="line">182</div><div class="line">183</div><div class="line">184</div><div class="line">185</div><div class="line">186</div><div class="line">187</div><div class="line">188</div><div class="line">189</div><div class="line">190</div><div class="line">191</div><div class="line">192</div><div class="line">193</div><div class="line">194</div><div class="line">195</div><div class="line">196</div><div class="line">197</div><div class="line">198</div><div class="line">199</div><div class="line">200</div><div class="line">201</div><div class="line">202</div><div class="line">203</div><div class="line">204</div><div class="line">205</div><div class="line">206</div><div class="line">207</div><div class="line">208</div><div class="line">209</div><div class="line">210</div><div class="line">211</div><div class="line">212</div><div class="line">213</div><div class="line">214</div><div class="line">215</div><div class="line">216</div><div class="line">217</div><div class="line">218</div><div class="line">219</div><div class="line">220</div><div class="line">221</div><div class="line">222</div><div class="line">223</div><div class="line">224</div><div class="line">225</div><div class="line">226</div><div class="line">227</div><div class="line">228</div><div class="line">229</div><div class="line">230</div><div class="line">231</div><div class="line">232</div><div class="line">233</div><div class="line">234</div><div class="line">235</div><div class="line">236</div><div class="line">237</div><div class="line">238</div><div class="line">239</div><div class="line">240</div><div class="line">241</div><div class="line">242</div><div class="line">243</div><div class="line">244</div><div class="line">245</div><div class="line">246</div><div class="line">247</div><div class="line">248</div><div class="line">249</div><div class="line">250</div><div class="line">251</div><div class="line">252</div><div class="line">253</div><div class="line">254</div><div class="line">255</div><div class="line">256</div><div class="line">257</div><div class="line">258</div><div class="line">259</div><div class="line">260</div><div class="line">261</div><div class="line">262</div><div class="line">263</div><div class="line">264</div><div class="line">265</div><div class="line">266</div><div class="line">267</div><div class="line">268</div><div class="line">269</div><div class="line">270</div><div class="line">271</div><div class="line">272</div><div class="line">273</div><div class="line">274</div><div class="line">275</div><div class="line">276</div><div class="line">277</div><div class="line">278</div><div class="line">279</div><div class="line">280</div><div class="line">281</div><div class="line">282</div><div class="line">283</div><div class="line">284</div><div class="line">285</div><div class="line">286</div></pre></td><td class="code"><pre><div class="line">&lt;LinearLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;</div><div class="line">    xmlns:tools=&quot;http://schemas.android.com/tools&quot;</div><div class="line">    android:layout_width=&quot;match_parent&quot;</div><div class="line">    android:layout_height=&quot;match_parent&quot;</div><div class="line">    android:orientation=&quot;vertical&quot;</div><div class="line">    android:paddingBottom=&quot;@dimen/activity_vertical_margin&quot;</div><div class="line">    android:paddingLeft=&quot;@dimen/activity_horizontal_margin&quot;</div><div class="line">    android:paddingRight=&quot;@dimen/activity_horizontal_margin&quot;</div><div class="line">    android:paddingTop=&quot;@dimen/activity_vertical_margin&quot;</div><div class="line">    tools:context=&quot;com.example.calculator.MainActivity&quot; &gt;</div><div class="line"></div><div class="line">   </div><div class="line">	&lt;EditText</div><div class="line">	    android:layout_width=&quot;fill_parent&quot;</div><div class="line">	    android:layout_height=&quot;60dip&quot;</div><div class="line">	    android:id=&quot;@+id/et_input&quot;</div><div class="line">	    android:editable=&quot;false&quot;</div><div class="line">	    android:gravity=&quot;right|bottom&quot;</div><div class="line">	    android:background=&quot;@drawable/white_bg&quot;</div><div class="line">	    /&gt;</div><div class="line">	&lt;LinearLayout</div><div class="line">	    android:layout_width=&quot;fill_parent&quot;</div><div class="line">	    android:layout_height=&quot;wrap_content&quot;</div><div class="line">	    android:layout_marginTop=&quot;20dp&quot;</div><div class="line">	    android:orientation=&quot;horizontal&quot;</div><div class="line">	    android:gravity=&quot;center_horizontal&quot;</div><div class="line">	    &gt;</div><div class="line">	    &lt;Button</div><div class="line">	        android:layout_width=&quot;60dp&quot;</div><div class="line">	        android:layout_height=&quot;60dp&quot;</div><div class="line">	        android:text=&quot;C&quot;</div><div class="line">	         android:paddingRight=&quot;10dp&quot;</div><div class="line">	        android:paddingBottom=&quot;10dp&quot;</div><div class="line">	        android:background=&quot;@drawable/white_selector&quot;</div><div class="line">	        android:textSize=&quot;20sp&quot;</div><div class="line">	        android:gravity=&quot;right|bottom&quot;</div><div class="line">	        android:id=&quot;@+id/btn_clear&quot;</div><div class="line">	        /&gt;</div><div class="line">	     &lt;Button</div><div class="line">	        android:layout_width=&quot;60dp&quot;</div><div class="line">	        android:layout_height=&quot;60dp&quot;</div><div class="line">	        android:text=&quot;DEL&quot;</div><div class="line">	         android:paddingRight=&quot;10dp&quot;</div><div class="line">	        android:paddingBottom=&quot;10dp&quot;</div><div class="line">	         android:background=&quot;@drawable/white_selector&quot;</div><div class="line">	        android:layout_marginLeft=&quot;10dp&quot;</div><div class="line">	        android:textSize=&quot;20sp&quot;</div><div class="line">	        android:gravity=&quot;right|bottom&quot;</div><div class="line">	        android:id=&quot;@+id/btn_del&quot;</div><div class="line">	        /&gt;</div><div class="line">	     &lt;Button</div><div class="line">	        android:layout_width=&quot;60dp&quot;</div><div class="line">	        android:layout_height=&quot;60dp&quot;</div><div class="line">	        android:text=&quot;÷&quot;</div><div class="line">	         android:paddingRight=&quot;10dp&quot;</div><div class="line">	        android:paddingBottom=&quot;10dp&quot;</div><div class="line">	         android:background=&quot;@drawable/white_selector&quot;</div><div class="line">	        android:layout_marginLeft=&quot;10dp&quot;</div><div class="line">	        android:textSize=&quot;20sp&quot;</div><div class="line">	        android:gravity=&quot;right|bottom&quot;</div><div class="line">	        android:id=&quot;@+id/btn_divide&quot;</div><div class="line">	        /&gt;</div><div class="line">	       &lt;Button</div><div class="line">	        android:layout_width=&quot;60dp&quot;</div><div class="line">	        android:layout_height=&quot;60dp&quot;</div><div class="line">	        android:text=&quot;×&quot;</div><div class="line">	         android:paddingRight=&quot;10dp&quot;</div><div class="line">	        android:paddingBottom=&quot;10dp&quot;</div><div class="line">	         android:background=&quot;@drawable/white_selector&quot;</div><div class="line">	        android:layout_marginLeft=&quot;10dp&quot;</div><div class="line">	        android:textSize=&quot;20sp&quot;</div><div class="line">	        android:gravity=&quot;right|bottom&quot;</div><div class="line">	        android:id=&quot;@+id/btn_multiply&quot;</div><div class="line">	        /&gt;</div><div class="line">	    &lt;/LinearLayout&gt;</div><div class="line">	    </div><div class="line">	&lt;LinearLayout</div><div class="line">	    android:layout_width=&quot;fill_parent&quot;</div><div class="line">	    android:layout_height=&quot;wrap_content&quot;</div><div class="line">	    android:layout_marginTop=&quot;10dp&quot;</div><div class="line">	    android:orientation=&quot;horizontal&quot;</div><div class="line">	    android:gravity=&quot;center_horizontal&quot;</div><div class="line">	    &gt;</div><div class="line">	    &lt;Button</div><div class="line">	        android:layout_width=&quot;60dp&quot;</div><div class="line">	        android:layout_height=&quot;60dp&quot;</div><div class="line">	        android:text=&quot;7&quot;</div><div class="line">	         android:paddingRight=&quot;10dp&quot;</div><div class="line">	        android:paddingBottom=&quot;10dp&quot;</div><div class="line">	         android:background=&quot;@drawable/white_selector&quot;</div><div class="line">	        android:textSize=&quot;20sp&quot;</div><div class="line">	        android:gravity=&quot;right|bottom&quot;</div><div class="line">	        android:id=&quot;@+id/btn_7&quot;</div><div class="line">	        /&gt;</div><div class="line">	     &lt;Button</div><div class="line">	        android:layout_width=&quot;60dp&quot;</div><div class="line">	        android:layout_height=&quot;60dp&quot;</div><div class="line">	        android:text=&quot;8&quot;</div><div class="line">	         android:paddingRight=&quot;10dp&quot;</div><div class="line">	        android:paddingBottom=&quot;10dp&quot;</div><div class="line">	         android:background=&quot;@drawable/white_selector&quot;</div><div class="line">	        android:layout_marginLeft=&quot;10dp&quot;</div><div class="line">	        android:textSize=&quot;20sp&quot;</div><div class="line">	        android:gravity=&quot;right|bottom&quot;</div><div class="line">	        android:id=&quot;@+id/btn_8&quot;</div><div class="line">	        /&gt;</div><div class="line">	     &lt;Button</div><div class="line">	        android:layout_width=&quot;60dp&quot;</div><div class="line">	        android:layout_height=&quot;60dp&quot;</div><div class="line">	        android:text=&quot;9&quot;</div><div class="line">	         android:paddingRight=&quot;10dp&quot;</div><div class="line">	        android:paddingBottom=&quot;10dp&quot;</div><div class="line">	         android:background=&quot;@drawable/white_selector&quot;</div><div class="line">	        android:layout_marginLeft=&quot;10dp&quot;</div><div class="line">	        android:textSize=&quot;20sp&quot;</div><div class="line">	        android:gravity=&quot;right|bottom&quot;</div><div class="line">	        android:id=&quot;@+id/btn_9&quot;</div><div class="line">	        /&gt;</div><div class="line">	       &lt;Button</div><div class="line">	        android:layout_width=&quot;60dp&quot;</div><div class="line">	        android:layout_height=&quot;60dp&quot;</div><div class="line">	        android:text=&quot;-&quot;</div><div class="line">	         android:paddingRight=&quot;10dp&quot;</div><div class="line">	        android:paddingBottom=&quot;10dp&quot;</div><div class="line">	         android:background=&quot;@drawable/white_selector&quot;</div><div class="line">	        android:layout_marginLeft=&quot;10dp&quot;</div><div class="line">	        android:textSize=&quot;20sp&quot;</div><div class="line">	        android:gravity=&quot;right|bottom&quot;</div><div class="line">	        android:id=&quot;@+id/btn_minus&quot;</div><div class="line">	        /&gt;</div><div class="line">	    &lt;/LinearLayout&gt;</div><div class="line">	    &lt;LinearLayout</div><div class="line">	    android:layout_width=&quot;fill_parent&quot;</div><div class="line">	    android:layout_height=&quot;wrap_content&quot;</div><div class="line">	    android:layout_marginTop=&quot;10dp&quot;</div><div class="line">	    android:orientation=&quot;horizontal&quot;</div><div class="line">	    android:gravity=&quot;center_horizontal&quot;</div><div class="line">	    &gt;</div><div class="line">	    &lt;Button</div><div class="line">	        android:layout_width=&quot;60dp&quot;</div><div class="line">	        android:layout_height=&quot;60dp&quot;</div><div class="line">	        android:text=&quot;4&quot;</div><div class="line">	         android:paddingRight=&quot;10dp&quot;</div><div class="line">	        android:paddingBottom=&quot;10dp&quot;</div><div class="line">	         android:background=&quot;@drawable/white_selector&quot;</div><div class="line">	        android:textSize=&quot;20sp&quot;</div><div class="line">	        android:gravity=&quot;right|bottom&quot;</div><div class="line">	        android:id=&quot;@+id/btn_4&quot;</div><div class="line">	        /&gt;</div><div class="line">	     &lt;Button</div><div class="line">	        android:layout_width=&quot;60dp&quot;</div><div class="line">	        android:layout_height=&quot;60dp&quot;</div><div class="line">	        android:text=&quot;5&quot;</div><div class="line">	         android:paddingRight=&quot;10dp&quot;</div><div class="line">	        android:paddingBottom=&quot;10dp&quot;</div><div class="line">	         android:background=&quot;@drawable/white_selector&quot;</div><div class="line">	        android:layout_marginLeft=&quot;10dp&quot;</div><div class="line">	        android:textSize=&quot;20sp&quot;</div><div class="line">	        android:gravity=&quot;right|bottom&quot;</div><div class="line">	        android:id=&quot;@+id/btn_5&quot;</div><div class="line">	        /&gt;</div><div class="line">	     &lt;Button</div><div class="line">	        android:layout_width=&quot;60dp&quot;</div><div class="line">	        android:layout_height=&quot;60dp&quot;</div><div class="line">	        android:text=&quot;6&quot;</div><div class="line">	         android:paddingRight=&quot;10dp&quot;</div><div class="line">	        android:paddingBottom=&quot;10dp&quot;</div><div class="line">	         android:background=&quot;@drawable/white_selector&quot;</div><div class="line">	        android:layout_marginLeft=&quot;10dp&quot;</div><div class="line">	        android:textSize=&quot;20sp&quot;</div><div class="line">	        android:gravity=&quot;right|bottom&quot;</div><div class="line">	        android:id=&quot;@+id/btn_6&quot;</div><div class="line">	        /&gt;</div><div class="line">	       &lt;Button</div><div class="line">	        android:layout_width=&quot;60dp&quot;</div><div class="line">	        android:layout_height=&quot;60dp&quot;</div><div class="line">	        android:text=&quot;+&quot;</div><div class="line">	         android:paddingRight=&quot;10dp&quot;</div><div class="line">	        android:paddingBottom=&quot;10dp&quot;</div><div class="line">	         android:background=&quot;@drawable/white_selector&quot;</div><div class="line">	        android:layout_marginLeft=&quot;10dp&quot;</div><div class="line">	        android:textSize=&quot;20sp&quot;</div><div class="line">	        android:gravity=&quot;right|bottom&quot;</div><div class="line">	        android:id=&quot;@+id/btn_plus&quot;</div><div class="line">	        /&gt;</div><div class="line">	    &lt;/LinearLayout&gt;</div><div class="line">	    &lt;LinearLayout </div><div class="line">	       android:layout_width=&quot;fill_parent&quot;</div><div class="line">	       android:layout_height=&quot;wrap_content&quot;</div><div class="line">	       android:orientation=&quot;horizontal&quot;</div><div class="line">	       android:layout_marginTop=&quot;10dp&quot;</div><div class="line">	       android:gravity=&quot;center_horizontal&quot;</div><div class="line">	      </div><div class="line">	        &gt;</div><div class="line">	    &lt;LinearLayout </div><div class="line">	       android:layout_width=&quot;wrap_content&quot; </div><div class="line">	       android:layout_height=&quot;wrap_content&quot;</div><div class="line">	       android:orientation=&quot;vertical&quot;</div><div class="line">	        &gt;    </div><div class="line">	    &lt;LinearLayout</div><div class="line">	        android:layout_width=&quot;wrap_content&quot;</div><div class="line">	        android:layout_height=&quot;wrap_content&quot;</div><div class="line">	        android:orientation=&quot;horizontal&quot;</div><div class="line">	        </div><div class="line">	        &gt;   </div><div class="line">	        &lt;Button</div><div class="line">	        android:layout_width=&quot;60dp&quot;</div><div class="line">	        android:layout_height=&quot;60dp&quot;</div><div class="line">	        android:text=&quot;1&quot;</div><div class="line">	         android:paddingRight=&quot;10dp&quot;</div><div class="line">	        android:paddingBottom=&quot;10dp&quot;</div><div class="line">	         android:background=&quot;@drawable/white_selector&quot;</div><div class="line">	        android:textSize=&quot;20sp&quot;</div><div class="line">	        android:gravity=&quot;right|bottom&quot;</div><div class="line">	        android:id=&quot;@+id/btn_1&quot;</div><div class="line">	        /&gt; </div><div class="line">	        &lt;Button</div><div class="line">	        android:layout_width=&quot;60dp&quot;</div><div class="line">	        android:layout_height=&quot;60dp&quot;</div><div class="line">	        android:text=&quot;2&quot;</div><div class="line">	         android:paddingRight=&quot;10dp&quot;</div><div class="line">	        android:paddingBottom=&quot;10dp&quot;</div><div class="line">	         android:background=&quot;@drawable/white_selector&quot;</div><div class="line">	        android:textSize=&quot;20sp&quot;</div><div class="line">	        android:gravity=&quot;right|bottom&quot;</div><div class="line">	        android:layout_marginLeft=&quot;10dp&quot;</div><div class="line">	        android:id=&quot;@+id/btn_2&quot;</div><div class="line">	        /&gt; </div><div class="line">	        &lt;Button</div><div class="line">	        android:layout_width=&quot;60dp&quot;</div><div class="line">	        android:layout_height=&quot;60dp&quot;</div><div class="line">	        android:text=&quot;3&quot;</div><div class="line">	         android:paddingRight=&quot;10dp&quot;</div><div class="line">	        android:paddingBottom=&quot;10dp&quot;</div><div class="line">	         android:background=&quot;@drawable/white_selector&quot;</div><div class="line">	        android:textSize=&quot;20sp&quot;</div><div class="line">	        android:gravity=&quot;right|bottom&quot;</div><div class="line">	        android:layout_marginLeft=&quot;10dp&quot;</div><div class="line">	        android:id=&quot;@+id/btn_3&quot;</div><div class="line">	        /&gt; </div><div class="line">	    &lt;/LinearLayout&gt;</div><div class="line">	     &lt;LinearLayout</div><div class="line">	        android:layout_width=&quot;wrap_content&quot;</div><div class="line">	        android:layout_height=&quot;wrap_content&quot;</div><div class="line">	        android:layout_marginTop=&quot;10dp&quot;</div><div class="line">	        android:orientation=&quot;horizontal&quot;</div><div class="line">	        &gt;   </div><div class="line">	         &lt;Button</div><div class="line">	        android:layout_width=&quot;130dp&quot;</div><div class="line">	        android:layout_height=&quot;60dp&quot;</div><div class="line">	        android:text=&quot;0&quot;</div><div class="line">	         android:paddingRight=&quot;10dp&quot;</div><div class="line">	        android:paddingBottom=&quot;10dp&quot;</div><div class="line">	         android:background=&quot;@drawable/white_selector&quot;</div><div class="line">	        android:textSize=&quot;20sp&quot;</div><div class="line">	        android:gravity=&quot;right|bottom&quot;</div><div class="line">	        android:id=&quot;@+id/btn_0&quot;</div><div class="line">	        /&gt; </div><div class="line">	        &lt;Button</div><div class="line">	        android:layout_width=&quot;60dp&quot;</div><div class="line">	        android:layout_height=&quot;60dp&quot;</div><div class="line">	        android:text=&quot;.&quot;</div><div class="line">	         android:paddingRight=&quot;10dp&quot;</div><div class="line">	        android:paddingBottom=&quot;10dp&quot;</div><div class="line">	         android:background=&quot;@drawable/white_selector&quot;</div><div class="line">	        android:textSize=&quot;20sp&quot;</div><div class="line">	        android:gravity=&quot;right|bottom&quot;</div><div class="line">	        android:layout_marginLeft=&quot;10dp&quot;</div><div class="line">	        android:id=&quot;@+id/btn_point&quot;</div><div class="line">	        /&gt; </div><div class="line">	     &lt;/LinearLayout&gt;</div><div class="line">	    &lt;/LinearLayout&gt;</div><div class="line">	    &lt;Button</div><div class="line">	        android:layout_width=&quot;60dp&quot;</div><div class="line">	        android:layout_height=&quot;130dp&quot;</div><div class="line">	        android:text=&quot;=&quot;</div><div class="line">	        android:paddingRight=&quot;10dp&quot;</div><div class="line">	        android:paddingBottom=&quot;10dp&quot;</div><div class="line">	         android:background=&quot;@drawable/orange_selector&quot;</div><div class="line">	        android:layout_marginLeft=&quot;10dp&quot;</div><div class="line">	        android:textSize=&quot;20sp&quot;</div><div class="line">	        android:gravity=&quot;right|bottom&quot;</div><div class="line">	        android:id=&quot;@+id/btn_equal&quot;</div><div class="line">	        /&gt; </div><div class="line">	    &lt;/LinearLayout&gt;</div><div class="line">&lt;/LinearLayout&gt;</div></pre></td></tr></table></figure></p>
<h2 id="colorxml">color.xml</h2>
<p>res/values下新建一个xml.
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</div><div class="line">&lt;resources&gt;</div><div class="line">    &lt;color name=&quot;white&quot;&gt;#FFFFFF&lt;/color&gt;</div><div class="line">	&lt;color name=&quot;red&quot;&gt;#FF0000&lt;/color&gt;</div><div class="line">	&lt;color name=&quot;black&quot;&gt;#000000&lt;/color&gt;</div><div class="line">	&lt;color name=&quot;gray&quot;&gt;#808080&lt;/color&gt;</div><div class="line">	&lt;color name=&quot;orange&quot;&gt;#FFA500&lt;/color&gt;</div><div class="line">	&lt;color name=&quot;ashen&quot;&gt;#CD853F&lt;/color&gt;</div><div class="line">&lt;/resources&gt;</div></pre></td></tr></table></figure></p>
<h2 id="white_bgxml">white_bg.xml</h2>
<p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</div><div class="line">&lt;shape xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot; &gt;</div><div class="line">  &lt;corners android:radius=&quot;5dp&quot;/&gt;</div><div class="line">  &lt;solid</div><div class="line">      android:color=&quot;@color/white&quot;</div><div class="line">  /&gt;</div><div class="line">  &lt;!--  </div><div class="line">  &lt;gradient </div><div class="line">      android:startColor=&quot;@color/white&quot; </div><div class="line">	  android:endColor=&quot;@color/red&quot;</div><div class="line">	  </div><div class="line">	 </div><div class="line">	  /&gt;</div><div class="line">  &lt;stroke</div><div class="line">  android:width=&quot;1dp&quot;</div><div class="line">  android:color=&quot;@color/black&quot;</div><div class="line">  /&gt;	</div><div class="line">  --&gt;</div><div class="line">&lt;/shape&gt;</div></pre></td></tr></table></figure></p>
<h2 id="white_selectorxml">white_selector.xml</h2>
<p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</div><div class="line">&lt;selector xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot; &gt;</div><div class="line">    &lt;item android:drawable=&quot;@drawable/gray_bg&quot; android:state_pressed=&quot;true&quot;/&gt;</div><div class="line">	&lt;item android:drawable=&quot;@drawable/white_bg&quot;/&gt;</div><div class="line">&lt;/selector&gt;</div></pre></td></tr></table></figure></p>
<h1 id="出现的问题及解决方法">出现的问题及解决方法</h1>
<blockquote>
<p>1.新建工程时，出现报错：
\res\values\styles.xml:7: error: Error retrieving parent for item: No resource found that matches the given name 'Theme.AppCompat.Light'.
\res\values-v11\styles.xml:7: error: Error retrieving parent for item: No resource found that matches the given name 'Theme.AppCompat.Light'.
\res\values-v14\styles.xml:8: error: Error retrieving parent for item: No resource found that matches the given name 'Theme.AppCompat.Light.DarkActionBar'.</p>
</blockquote>
<p>解决方法：
顺着改为：
style name=&quot;AppBaseTheme&quot; parent=&quot;android:Theme.Light&quot;
style name=&quot;AppBaseTheme&quot; parent=&quot;android:Theme.Holo.Light&quot;
style name=&quot;AppBaseTheme&quot;parent=&quot;android:Theme.Holo.Light.DarkActionBar&quot;
然后menu会报错，改为：
android:showAsAction=&quot;never&quot;</p>
<blockquote>
<p>2.导入工程时报错The import android cannot be resolved</p>
</blockquote>
<p>解决：在新建Android项目的时候，eclipes新更新的ADT，在创建的Android版本最低版本低于4.0的时候，会新建一个v7的项目，把里面的包导入就可以。如果不想有警告的话，直接在创建项目的时候把最低版本设置为4.0以上就可以。并且不会出现第一个问题。</p>
<blockquote>
<p>3.定义按钮时错误提示：Button cannot be resolved to a type</p>
</blockquote>
<p>解决：没导包，快捷键ctrl+shift+o搞定。</p>
<h1 id="笔记">笔记</h1>
<h2 id="去掉标题栏">去掉标题栏</h2>
<p>在res/values/string.xml中和AndroidManifest.xml去掉相应代码即可。</p>
<h2 id="颜色需新建xml">颜色需新建xml</h2>
<p>存放在res/values/colors中，RGB颜色表示。</p>
<h2 id="drawble下文件结构">drawble下文件结构</h2>
<p><img src="http://img.blog.csdn.net/20170321233151779?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="颜色和选择器"></p>
<h2 id="注意">注意</h2>
<p>Main_Activity.java中，首先命名控件，给一个id，其次，按钮要设置点击事件，监听到该控件动作。
activity_main.xml中，线性结构可以嵌套使用。</p>
<p>思考：线性结构代码显臃肿，换成TableLayout也许更佳。并且计算器需要进一步优化，目前存在小的问题，例如，加减乘除符号可以在没有数字输入时顺序打印在屏幕上。总之，基本实现了计算器的功能。</p>
<h1 id="app下载">APP下载</h1>
<p>https://github.com/hubojing/Calculator</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&amp;lt;div align=&amp;quot;left&amp;quot;&amp;gt;
&amp;lt;img src=&amp;quot;http://img.blog.csdn.net/20170321231830210?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5u
    
    </summary>
    
      <category term="互联网" scheme="http://hubojing.github.io/categories/%E4%BA%92%E8%81%94%E7%BD%91/"/>
    
    
      <category term="Java" scheme="http://hubojing.github.io/tags/Java/"/>
    
      <category term="android" scheme="http://hubojing.github.io/tags/android/"/>
    
  </entry>
  
  <entry>
    <title>模拟借书系统（Java异常机制实现）</title>
    <link href="http://hubojing.github.io/2017/03/19/%E6%A8%A1%E6%8B%9F%E5%80%9F%E4%B9%A6%E7%B3%BB%E7%BB%9F%EF%BC%88java%E5%BC%82%E5%B8%B8%E6%9C%BA%E5%88%B6%E5%AE%9E%E7%8E%B0%EF%BC%89/"/>
    <id>http://hubojing.github.io/2017/03/19/模拟借书系统（java异常机制实现）/</id>
    <published>2017-03-19T09:09:12.000Z</published>
    <updated>2017-03-30T15:56:21.142Z</updated>
    
    <content type="html"><![CDATA[<p>&lt;div align=&quot;left&quot;&gt;
&lt;img src=&quot;http://img.blog.csdn.net/20170319164926044?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast&quot; width=&quot;300&quot; height=&quot;180&quot;  style=&quot;float:right;&quot;/&gt;</p>
<p>java语言实现一个控制台版的模拟借书系统。</p>
<p>&lt;/div&gt;</p>
<p>&lt;!--more--&gt;</p>
<h1 id="目标">目标</h1>
<p>用java语言实现一个控制台版的模拟借书系统，旨在练习java异常机制。</p>
<h1 id="要求">要求</h1>
<p><img src="http://img.blog.csdn.net/20170319164837988?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="要求"></p>
<h1 id="成品">成品</h1>
<p><img src="http://img.blog.csdn.net/20170319164926044?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="最终效果"></p>
<h1 id="参考代码及注释">参考代码及注释</h1>
<p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> com.jinger;</div><div class="line"></div><div class="line"><span class="keyword">import</span> java.util.Scanner;<span class="comment">//导入Scanner包</span></div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BookManagerEasy</span> </span>&#123;</div><div class="line">	<span class="keyword">private</span> <span class="keyword">static</span> Scanner console = <span class="keyword">new</span> Scanner(System.in);<span class="comment">//接收系统输入</span></div><div class="line"></div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</div><div class="line">		<span class="comment">//定义”图书“数组</span></div><div class="line">		String[] books = &#123; <span class="string">"C语言"</span>, <span class="string">"数据结构"</span>, <span class="string">"汇编语言"</span>, <span class="string">"高数"</span>, <span class="string">"大学语文"</span>, <span class="string">"毛概"</span> &#125;;</div><div class="line">		<span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</div><div class="line">			System.out.println(<span class="string">"输入命令：1-按照名称查找图书；2-按照序号查找图书"</span>);</div><div class="line">			String book;</div><div class="line">			<span class="keyword">try</span> &#123;</div><div class="line">				<span class="comment">//取得整型命令</span></div><div class="line">				<span class="keyword">int</span> command = inputCommand();</div><div class="line">				<span class="comment">//根据不同命令值，进行不同操作</span></div><div class="line">				<span class="keyword">switch</span> (command) &#123;</div><div class="line">				<span class="keyword">case</span> <span class="number">1</span>:<span class="comment">//按照图书名称选择图书</span></div><div class="line">					book = getBookByName(books);</div><div class="line">					System.out.println(<span class="string">"book:"</span> + book);</div><div class="line">					<span class="keyword">break</span>;</div><div class="line">				<span class="keyword">case</span> <span class="number">2</span>:<span class="comment">//按照图书序号（数组下标）选择图书</span></div><div class="line">					book = getBookByNumber(books);</div><div class="line">					System.out.println(<span class="string">"book:"</span> + book);</div><div class="line">					<span class="keyword">break</span>;</div><div class="line">				<span class="keyword">case</span> -<span class="number">1</span>:<span class="comment">//返回值为-1，说明输入有误</span></div><div class="line">					System.out.println(<span class="string">"命令输入错误！请根据提示输入数字命令！"</span>);</div><div class="line">					<span class="keyword">continue</span>;</div><div class="line">				<span class="keyword">default</span>:<span class="comment">//其他值的命令均认为是错误命令</span></div><div class="line">					System.out.println(<span class="string">"命令输入错误！"</span>);</div><div class="line">					<span class="keyword">continue</span>;</div><div class="line">				&#125;</div><div class="line">				<span class="keyword">break</span>;<span class="comment">//退出程序</span></div><div class="line">			&#125; <span class="keyword">catch</span> (Exception bne) &#123;</div><div class="line">				<span class="comment">//捕获“图书不存在异常”时，要求重新输入命令</span></div><div class="line">				System.out.println(bne.getMessage());</div><div class="line">				<span class="keyword">continue</span>;</div><div class="line">			&#125; </div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	<span class="comment">//按照图书名称查询图书</span></div><div class="line">	<span class="function"><span class="keyword">private</span> <span class="keyword">static</span> String <span class="title">getBookByName</span><span class="params">(String[] books)</span></span></div><div class="line">			<span class="keyword">throws</span> Exception &#123;</div><div class="line">		System.out.println(<span class="string">"输入图书名称："</span>);</div><div class="line">		<span class="comment">//获取输入的图书名称</span></div><div class="line">		String name = console.next();</div><div class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; books.length; i++) &#123;</div><div class="line">			<span class="keyword">if</span> (name.equals(books[i]))</div><div class="line">				<span class="comment">//输入的名称与某一图书名称匹配，返回该图书</span></div><div class="line">				<span class="keyword">return</span> books[i];</div><div class="line">		&#125;</div><div class="line">		<span class="comment">//若无匹配，抛出”图书不存在异常“</span></div><div class="line">		<span class="keyword">throw</span> <span class="keyword">new</span> Exception(<span class="string">"图书不存在！"</span>);</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	<span class="comment">//根据图书序号（数组下标）查询图书</span></div><div class="line">	<span class="function"><span class="keyword">private</span> <span class="keyword">static</span> String <span class="title">getBookByNumber</span><span class="params">(String[] books)</span></span></div><div class="line">			<span class="keyword">throws</span> Exception &#123;</div><div class="line">		<span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</div><div class="line">			System.out.println(<span class="string">"输入图书序号："</span>);</div><div class="line">			<span class="keyword">try</span> &#123;</div><div class="line">				<span class="comment">//获取输入的图书序号（数组下标）</span></div><div class="line">				<span class="keyword">int</span> index = inputCommand();</div><div class="line">				<span class="comment">//若返回值为-1</span></div><div class="line">				<span class="keyword">if</span>(index == -<span class="number">1</span>)&#123;</div><div class="line">					System.out.println(<span class="string">"命令输入错误！请根据提示输入数字命令！"</span>);</div><div class="line">					<span class="keyword">continue</span>;</div><div class="line">				&#125;</div><div class="line">				<span class="comment">//若不出现“数组下标越界异常”，则返回相应位置的图书</span></div><div class="line">				String book = books[index];</div><div class="line">				<span class="keyword">return</span> book;</div><div class="line">			&#125; <span class="keyword">catch</span> (ArrayIndexOutOfBoundsException e) &#123;</div><div class="line">				<span class="comment">//输入的序号不存在（引发“数组下标越界异常”），则抛出“图书不存在异常”</span></div><div class="line">				Exception bookNotExists = <span class="keyword">new</span> Exception(<span class="string">"图书不存在！"</span>);</div><div class="line">				bookNotExists.initCause(e);</div><div class="line">				<span class="keyword">throw</span> bookNotExists;</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	<span class="comment">//从控制台输入命令，用于输入命令和输入图书序号</span></div><div class="line">	<span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">inputCommand</span><span class="params">()</span></span>&#123;</div><div class="line">		<span class="keyword">int</span> command;</div><div class="line">		<span class="keyword">try</span> &#123;</div><div class="line">			command = console.nextInt();</div><div class="line">			<span class="keyword">return</span> command;</div><div class="line">		&#125; <span class="keyword">catch</span> (Exception e) &#123;</div><div class="line">			<span class="comment">//若输入字符型或者字符串，则抛出异常，捕获该异常，抛出“错误命令异常”</span></div><div class="line">			console = <span class="keyword">new</span> Scanner(System.in);</div><div class="line">			<span class="comment">//返回-1</span></div><div class="line">			<span class="keyword">return</span> -<span class="number">1</span>;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>&lt;span id=&quot;busuanzi_container_page_pv&quot;&gt;
本文已被阅读 &lt;span id=&quot;busuanzi_value_page_pv&quot;&gt;&lt;/span&gt; 次。感谢您的点击！</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&amp;lt;div align=&amp;quot;left&amp;quot;&amp;gt;
&amp;lt;img src=&amp;quot;http://img.blog.csdn.net/20170319164926044?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5u
    
    </summary>
    
      <category term="互联网" scheme="http://hubojing.github.io/categories/%E4%BA%92%E8%81%94%E7%BD%91/"/>
    
    
      <category term="Java" scheme="http://hubojing.github.io/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>达达租车系统（Java实现）</title>
    <link href="http://hubojing.github.io/2017/03/18/%E8%BE%BE%E8%BE%BE%E7%A7%9F%E8%BD%A6%E7%B3%BB%E7%BB%9F%EF%BC%88Java%E5%AE%9E%E7%8E%B0%EF%BC%89/"/>
    <id>http://hubojing.github.io/2017/03/18/达达租车系统（Java实现）/</id>
    <published>2017-03-18T10:52:48.000Z</published>
    <updated>2017-03-30T15:55:02.244Z</updated>
    
    <content type="html"><![CDATA[<p>&lt;div align=&quot;left&quot;&gt;
&lt;img src=&quot;http://img.blog.csdn.net/20170318155606137?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast&quot; width=&quot;300&quot; height=&quot;180&quot;  style=&quot;float:right;&quot;/&gt;</p>
<p>java编写一个控制台版的“达达租车系统”。</p>
<p>&lt;/div&gt;</p>
<p>&lt;!--more--&gt;</p>
<h1 id="目标">目标</h1>
<p>java编写一个控制台版的“达达租车系统”</p>
<h1 id="功能">功能</h1>
<p>1.展示所有可租车辆
2.选择车型、租车量
3.展示租车清单，包含：总金额、总载货量及其车型、总载人量及其车型</p>
<h1 id="三大分析">三大分析</h1>
<h2 id="数据模型分析">数据模型分析</h2>
<p><img src="http://img.blog.csdn.net/20170318155606137?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="数据模型分析"></p>
<h2 id="业务模型分析">业务模型分析</h2>
<p><img src="http://img.blog.csdn.net/20170318155829714?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="业务模型分析"></p>
<h2 id="显示和流程分析">显示和流程分析</h2>
<p><img src="http://img.blog.csdn.net/20170318160035300?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="显示和流程分析"></p>
<h2 id="成品">成品</h2>
<p><img src="http://img.blog.csdn.net/20170318180123743?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="租车页面"></p>
<p><img src="http://img.blog.csdn.net/20170318180319432?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="租车账单"></p>
<h1 id="思路">思路</h1>
<p>首先定义一个Car类，它包含基本功能：车名、载客数、载货量、日租金。接着创建三个小类，分别是客车类、货车类和皮卡类（既能载客又能载货），它们都继承Car类。最后需要一个主类，用于开启整个系统，调用每个小类。</p>
<h1 id="代码">代码</h1>
<p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> com.jinger;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">Car</span> </span>&#123;</div><div class="line">	<span class="keyword">public</span> <span class="keyword">int</span> rent;<span class="comment">//日租金</span></div><div class="line">	<span class="keyword">public</span> <span class="keyword">int</span> people;<span class="comment">//载客人数</span></div><div class="line">	<span class="keyword">public</span> <span class="keyword">int</span> loads;<span class="comment">//载货量</span></div><div class="line">	<span class="keyword">public</span> String name;<span class="comment">//车名</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getRent</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="keyword">return</span> rent;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setRent</span><span class="params">(<span class="keyword">int</span> rent)</span></span>&#123;</div><div class="line">	<span class="keyword">this</span>.rent=rent;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getPeople</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="keyword">return</span> people;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setPeople</span><span class="params">(<span class="keyword">int</span> people)</span></span>&#123;</div><div class="line">	<span class="keyword">this</span>.people=people;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getLoads</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="keyword">return</span> loads;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setLoads</span><span class="params">(<span class="keyword">int</span> loads)</span></span>&#123;</div><div class="line">	<span class="keyword">this</span>.loads=loads;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="keyword">return</span> name;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span></span>&#123;</div><div class="line">	<span class="keyword">this</span>.name=name;</div><div class="line">&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>客车类
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> com.jinger;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PassageCar</span> <span class="keyword">extends</span> <span class="title">Car</span></span>&#123;</div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="title">PassageCar</span><span class="params">(String name,<span class="keyword">int</span> people,<span class="keyword">int</span> rent)</span></span>&#123;</div><div class="line">		<span class="keyword">this</span>.setName(name);</div><div class="line">		<span class="keyword">this</span>.setPeople(people);</div><div class="line">		<span class="keyword">this</span>.setRent(rent);</div><div class="line">		</div><div class="line">		</div><div class="line">	&#125;</div><div class="line">	</div><div class="line">	<span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span></span>&#123;</div><div class="line">		<span class="keyword">return</span> <span class="keyword">this</span>.getName()+<span class="string">"\t"</span>+<span class="keyword">this</span>.getPeople()+<span class="string">"\t\t\t\t"</span>+<span class="keyword">this</span>.getRent();</div><div class="line">				&#125;</div><div class="line">	&#125;</div></pre></td></tr></table></figure></p>
<p>卡车类
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> com.jinger;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Truck</span> <span class="keyword">extends</span> <span class="title">Car</span> </span>&#123;</div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="title">Truck</span><span class="params">(String name,<span class="keyword">int</span> loads,<span class="keyword">int</span> rent)</span></span>&#123;</div><div class="line">		<span class="keyword">this</span>.setName(name);</div><div class="line">		<span class="keyword">this</span>.setLoads(loads);</div><div class="line">		<span class="keyword">this</span>.setRent(rent);</div><div class="line">	&#125;</div><div class="line">	</div><div class="line">	<span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span></span>&#123;</div><div class="line">		<span class="keyword">return</span> <span class="keyword">this</span>.getName()+<span class="string">"\t\t\t"</span>+<span class="keyword">this</span>.getLoads()+<span class="string">"\t\t"</span>+<span class="keyword">this</span>.getRent();</div><div class="line">	&#125;</div><div class="line">	&#125;</div></pre></td></tr></table></figure></p>
<p>皮卡类
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> com.jinger;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Pickup</span> <span class="keyword">extends</span> <span class="title">Car</span> </span>&#123;</div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="title">Pickup</span><span class="params">(String name,<span class="keyword">int</span> people,<span class="keyword">int</span> loads,<span class="keyword">int</span> rent)</span></span>&#123;</div><div class="line">		<span class="keyword">this</span>.setName(name);</div><div class="line">		<span class="keyword">this</span>.setPeople(people);</div><div class="line">		<span class="keyword">this</span>.setLoads(loads);</div><div class="line">		<span class="keyword">this</span>.setRent(rent);</div><div class="line">	&#125;</div><div class="line">	</div><div class="line">	<span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span></span>&#123;</div><div class="line">		<span class="keyword">return</span> <span class="keyword">this</span>.getName()+<span class="string">"\t"</span>+<span class="keyword">this</span>.getPeople()+<span class="string">"\t\t"</span>+<span class="keyword">this</span>.getLoads()+<span class="string">"\t\t"</span>+<span class="keyword">this</span>.getRent();</div><div class="line">	&#125;</div><div class="line">	&#125;</div></pre></td></tr></table></figure></p>
<p>主类
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> com.jinger;</div><div class="line"><span class="keyword">import</span> java.util.*;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Initial</span> </span>&#123;</div><div class="line"></div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</div><div class="line">		<span class="comment">//对各类车实例化并保存到cars数组</span></div><div class="line">		Car[] cars=&#123;</div><div class="line">				<span class="keyword">new</span> PassageCar(<span class="string">"奥迪A4"</span>,<span class="number">4</span>,<span class="number">500</span>),</div><div class="line">				<span class="keyword">new</span> PassageCar(<span class="string">"马自达6"</span>,<span class="number">4</span>,<span class="number">400</span>),</div><div class="line">				<span class="keyword">new</span> Pickup(<span class="string">"皮卡雪6"</span>,<span class="number">4</span>,<span class="number">2</span>,<span class="number">450</span>),</div><div class="line">				<span class="keyword">new</span> PassageCar(<span class="string">"金龙"</span>,<span class="number">20</span>,<span class="number">800</span>),</div><div class="line">				<span class="keyword">new</span> Truck(<span class="string">"松花江"</span>,<span class="number">4</span>,<span class="number">400</span>),</div><div class="line">				<span class="keyword">new</span> Truck(<span class="string">"依维柯"</span>,<span class="number">20</span>,<span class="number">1000</span>)&#125;;</div><div class="line"></div><div class="line">		System.out.println(<span class="string">"****欢迎使用达达租车系统！****"</span>);</div><div class="line">		System.out.println(<span class="string">"****您确认租车吗？****"</span>+<span class="string">"\n"</span>+<span class="string">"是（请输入1） \t 否（请输入2）"</span>);</div><div class="line">	</div><div class="line">		Scanner in1=<span class="keyword">new</span> Scanner(System.in);</div><div class="line">		<span class="keyword">int</span> is=in1.nextInt();</div><div class="line">		<span class="keyword">if</span>(is!=<span class="number">1</span>)&#123;</div><div class="line">			System.out.println(<span class="string">"****欢迎下次光临！****"</span>);</div><div class="line">			System.exit(<span class="number">0</span>);</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">if</span>(is==<span class="number">1</span>)&#123;</div><div class="line">			System.out.println(<span class="string">"****您可租车的类型及价目表****"</span>);</div><div class="line">			System.out.println(<span class="string">"序号"</span>+<span class="string">"\t车名"</span>+<span class="string">"\t载客数（人）"</span>+<span class="string">"\t载货量（吨）"</span>+<span class="string">"\t日租金（元/天）"</span>);</div><div class="line">		</div><div class="line">			<span class="comment">//使用循环方式将各类车输出</span></div><div class="line">			<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;cars.length;i++)&#123;</div><div class="line">				System.out.println((i+<span class="number">1</span>)+<span class="string">"\t"</span>+cars[i]);</div><div class="line">			&#125;</div><div class="line">			</div><div class="line">			</div><div class="line">			</div><div class="line">			System.out.println(<span class="string">"****请输入您的租车数量：****"</span>);</div><div class="line">			<span class="keyword">int</span> num1=in1.nextInt();</div><div class="line">			Car[] rentcar=<span class="keyword">new</span> Car[num1];</div><div class="line">			<span class="keyword">int</span> price=<span class="number">0</span>;<span class="comment">//总价格</span></div><div class="line">			<span class="keyword">int</span> totalpeople=<span class="number">0</span>;<span class="comment">//总人数</span></div><div class="line">			<span class="keyword">int</span> totalloads=<span class="number">0</span>;<span class="comment">//总载货量</span></div><div class="line">			</div><div class="line">			<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;num1;i++)&#123;</div><div class="line">				System.out.println(<span class="string">"****请输入第"</span>+(i+<span class="number">1</span>)+<span class="string">"辆车的序号：****"</span>);</div><div class="line">				<span class="keyword">int</span> numx=in1.nextInt();</div><div class="line">				rentcar[i]=cars[numx-<span class="number">1</span>];</div><div class="line">				</div><div class="line">			&#125;</div><div class="line">			System.out.println(<span class="string">"****请输入天数：****"</span>);</div><div class="line">			<span class="keyword">int</span> day=in1.nextInt();</div><div class="line">			<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;num1;i++)&#123;</div><div class="line">			price=price+rentcar[i].rent *day;</div><div class="line">			&#125;</div><div class="line">			System.out.println(<span class="string">"****您的账单：****"</span>);</div><div class="line">			System.out.println(<span class="string">"已选载人车："</span>);</div><div class="line">			<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;num1;i++)&#123;</div><div class="line">				<span class="keyword">if</span>(rentcar[i].people!=<span class="number">0</span>)&#123;</div><div class="line">					System.out.println(rentcar[i].name+<span class="string">"\t"</span>);</div><div class="line">				&#125;</div><div class="line">				</div><div class="line">				totalpeople=totalpeople+rentcar[i].people;</div><div class="line">			&#125;</div><div class="line">			</div><div class="line">			System.out.println(<span class="string">'\n'</span>);</div><div class="line">			System.out.println(<span class="string">"已选载货车："</span>);</div><div class="line">			<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;num1;i++)&#123;</div><div class="line">				<span class="keyword">if</span>(rentcar[i].loads!=<span class="number">0</span>)&#123;</div><div class="line">					System.out.println(rentcar[i].name+<span class="string">"\t"</span>);</div><div class="line">				&#125;</div><div class="line">						</div><div class="line">				totalloads=totalloads+rentcar[i].loads;</div><div class="line">			&#125;</div><div class="line">		</div><div class="line">			</div><div class="line">					System.out.println(<span class="string">'\n'</span>);</div><div class="line">					System.out.println(<span class="string">"共载客："</span>+totalpeople+<span class="string">"人"</span>);</div><div class="line">					System.out.println(<span class="string">"共载货："</span>+totalloads+<span class="string">"吨"</span>);</div><div class="line">					System.out.println(<span class="string">"租车总价格："</span>+price+<span class="string">"元"</span>);</div><div class="line">					System.out.println(<span class="string">'\n'</span>);</div><div class="line">					System.out.println(<span class="string">"****感谢您的惠顾，欢迎再次光临！****"</span>);</div><div class="line">				</div><div class="line">			&#125;</div><div class="line">			&#125;</div><div class="line">	&#125;</div></pre></td></tr></table></figure></p>
<h1 id="收获">收获</h1>
<p>思路决定编码。
编程要注重<code>自顶而下、逐步求精</code>的设计方法。</p>
<h1 id="源程序下载">源程序下载</h1>
<p>https://github.com/hubojing/Car-rental-system</p>
<p>&lt;span id=&quot;busuanzi_container_page_pv&quot;&gt;
本文已被阅读 &lt;span id=&quot;busuanzi_value_page_pv&quot;&gt;&lt;/span&gt; 次。感谢您的点击！</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&amp;lt;div align=&amp;quot;left&amp;quot;&amp;gt;
&amp;lt;img src=&amp;quot;http://img.blog.csdn.net/20170318155606137?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5u
    
    </summary>
    
      <category term="互联网" scheme="http://hubojing.github.io/categories/%E4%BA%92%E8%81%94%E7%BD%91/"/>
    
    
      <category term="Java" scheme="http://hubojing.github.io/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>别做井底之蛙</title>
    <link href="http://hubojing.github.io/2017/03/06/%E5%8F%8D%E7%9C%81/"/>
    <id>http://hubojing.github.io/2017/03/06/反省/</id>
    <published>2017-03-05T16:11:48.000Z</published>
    <updated>2017-03-30T15:55:52.118Z</updated>
    
    <content type="html"><![CDATA[<p>&lt;div align=&quot;left&quot;&gt;
&lt;img src=&quot;https://timgsa.baidu.com/timg?image&amp;quality=80&amp;size=b9999_10000&amp;sec=1488743337927&amp;di=4273153cdba587ffa9e9dba1db8737fc&amp;imgtype=0&amp;src=http%3A%2F%2Fupload.admin5.com%2F2015%2F1121%2F1448071304470.jpg&quot; width=&quot;300&quot; height=&quot;180&quot;  style=&quot;float:right;&quot;/&gt;</p>
<p>即将毕业了，谈谈最近我关于技术的思考。</p>
<p>&lt;/div&gt;</p>
<p>&lt;!--more--&gt;
最近总想给自己的四年打个分。
给个70分吧。
四年来，我一直认为，自己没有辜负这四年。这四年里，自己很多方面得到了成长。但直到最近，我发现了些什么。</p>
<p>这四年来，我一直是大家眼中的优秀学生，绩点高，学生工作也做得好。我时刻提醒自己，千万不要被眼前的赞誉迷了眼。我之所以显得优秀，是因为我所处的环境还不够好。
这是我的技术博客，关于其他方面就不提了。尤谈技术。</p>
<p>大一大二沉浸在繁忙的学生工作中，忽略了自己是个十足的工科生，只注重课堂学习，忽视了动手实践。大二在实验室的半年，收获有，却不是很大。一方面是学校实验室的建设不完善，最重要的是实验室方向不是我所感兴趣的，再加上我当时过于急于求成，收效甚微就心烦意乱。
大三卸任部分学生工作，时间多了出来。突然就意识到了自己的专业被自己落下了。于是就诞生了这个技术博客，记录我所学的知识。算是对自己学技术的一点弥补。后来表示不服，自己报名了计算机比赛，最后竟意外抱得国奖回，让自己开心了一阵。我就算没在实验室了，我还是能自己干出事情来！我是有些倔。
再后来考研。过程不说了，和所有考研人一样平常。
考完后让自己彻底放松了二个月，所有和学习的事情都放下了，包括这里。这也是为什么这段时间我的github绿的很少，以及博客长久未更的原因。</p>
<p>简历看似让人羡慕，可我近来愈发觉得，自己就是一只井底之蛙。
没有实验室的帮助，没有老师的指导，没有志同道合的伙伴，全靠自己一个人，自己的学习时常走入歧途。不过这都不重要，重要的是我只要愿意不断学习，总会越懂越多。
最近我看了大神和牛人甚至是认识的同学们的学习过程，自己的努力与之相比不值一提。之前即使我总是警告自己不要感动自己，可最终还是让自己浮在了表面。</p>
<p>我是通信工程专业的学生，却常“不务正业”地倒弄计算机专业的东西（不过这是我的兴趣所在，我也从不觉得是错误，通信和计算机本是一家），有时候我在想，我的本家知识还没学通学透呢？</p>
<p>寒假放松的两个月，有个网友隔几天就问我有没有敲代码。我都说没有。他当时批评我说，女生果然不适合干技术。我回复他，你可以指责我，但我不能代表整个女性群体。后来想想，他的批评是有理的，像我那样三天打鱼、两天晒网的学习，怎么会有效果？</p>
<p>最近我常常在想，我口口声声说爱技术，还有一个做学术做科研的愿望，到底是不是发自心底的？我在还没深入了解它的时候，有什么资格说爱它？</p>
<p>感觉自己被越甩越远，但自己不想在做井底之蛙了。虽然醒悟地有些晚，但好歹是想过来了。</p>
<p>即将毕业的我，让自己重新做回一个普通的学生，耐心的学习，安心做毕设，回归一个工科学生对技术所抱有的憧憬之心。</p>
<p>先给自己定一个小目标：让github重新绿起来。欢迎各位监督。</p>
<p>写于2017年3月6日凌晨1点</p>
<p>&lt;span id=&quot;busuanzi_container_page_pv&quot;&gt;
本文已被阅读 &lt;span id=&quot;busuanzi_value_page_pv&quot;&gt;&lt;/span&gt; 次。感谢您的点击！</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&amp;lt;div align=&amp;quot;left&amp;quot;&amp;gt;
&amp;lt;img src=&amp;quot;https://timgsa.baidu.com/timg?image&amp;amp;quality=80&amp;amp;size=b9999_10000&amp;amp;sec=1488
    
    </summary>
    
      <category term="杂谈" scheme="http://hubojing.github.io/categories/%E6%9D%82%E8%B0%88/"/>
    
    
      <category term="思考" scheme="http://hubojing.github.io/tags/%E6%80%9D%E8%80%83/"/>
    
  </entry>
  
  <entry>
    <title>虚拟实验平台比赛项目记录</title>
    <link href="http://hubojing.github.io/2017/02/10/%E8%99%9A%E6%8B%9F%E5%AE%9E%E9%AA%8C%E5%B9%B3%E5%8F%B0/"/>
    <id>http://hubojing.github.io/2017/02/10/虚拟实验平台/</id>
    <published>2017-02-10T10:27:55.000Z</published>
    <updated>2017-02-25T13:29:34.955Z</updated>
    
    <content type="html"><![CDATA[<p>&lt;div align=&quot;left&quot;&gt;
&lt;img src=&quot;http://7xray0.com1.z0.glb.clouddn.com/hb.jpg&quot; width=&quot;300&quot; height=&quot;180&quot; style=&quot;float:right;&quot;/&gt;</p>
<p>说话算数，许诺的上海决赛详细情况记录。</p>
<p>&lt;/div&gt;</p>
<p>&lt;!--more--&gt;</p>
<h1 id="项目名称">项目名称</h1>
<p>数字图像处理教学辅助虚拟实验平台</p>
<h1 id="项目平台">项目平台</h1>
<p>matlab GUI</p>
<h1 id="项目简述">项目简述</h1>
<p>利用matlabGUI可视化，设计一个方便数字图像处理教学的虚拟实验平台，加深学生兴趣，让学生直观了解。</p>
<h1 id="项目框架">项目框架</h1>
<p>虚拟实验平台分为实验主窗口和手写数字识别案例。</p>
<h1 id="原理相关">原理相关</h1>
<p>数字图像处理是通过计算机对图像进行去除噪声、增强、复原、分割、提取特征等处理的方法和技术，它是指将图像信号转换成数字信号并利用计算机对其进行处理的过程。可以用来提高图像的视感质量，提取图像中所包含的某些特征或特殊信息，对图像数据进行变换、编码和压缩，以便于图像的存储和传输。
<strong>最近邻插值法</strong>
最近邻插值法nearest_neighbor是最简单的灰度值插值。也称作零阶插值，就是令变换后像素的灰度值等于距它最近的输入像素的灰度值。
<strong>双三次插值法</strong>
双三次插值是一种更加复杂的插值方式，它能创造出比双线性插值更平滑的图像边缘。又叫双立方插值，用于在图像中“插值”（Interpolating）或增加“像素”（Pixel）数量/密度的一种方法。通常利用插值技术增加图形数据，以便在它打印或其他形式输出的时候，能够增大打印面积以及（或者）分辨率。
属性：通过双三次插值可以得到一个连续的插值函数，它的一阶偏导数连续，并且交叉导数处处连续。
公式：
计算系数 的过程依赖于插值数据的特性。如果已知插值函数的导数，常用的方法就是使用四个顶点的高度以及每个顶点的三个导数。一阶导数 与 表示 x 与 y 方向的表面斜率，二阶相互导数 表示同时在 x 与 y 方向的斜率。这些值可以通过分别连续对 x 与 y 向量取微分得到。对于网格单元的每个顶点，将局部坐标（0,0, 1,0, 0,1 和 1,1) 带入这些方程，再解这 16 个方程。</p>
<p><strong>图像增强</strong>
1.直方图作用
直方图的观看规则就是“左黑右白”，左边代表暗部，右边代表亮部，而中间则代表中间调。
纵向上的高度代表像素密集程度，越高，代表的就是分布在这个亮度上的像素很多。</p>
<p>2.分为空间域和频域
空域分为点运算和领域去噪
直方图修正属于点运算，平滑和锐化属于领域去噪。
平滑是在添加噪声之后进行的处理
滤波的本义是指信号有各种频率的成分,滤掉不想要的成分,即为滤掉常说的噪声,留下想要的成分.这即是滤波的过程,也是目的。
图像锐化是补偿图像的轮廓，增强图像的边缘及灰度跳变的部分，使图像变得清晰，分为空域处理和频域处理两类。
图像平滑往往使图像中的边界、轮廓变得模糊，为了减少这类不利效果的影响，这就需要利用图像锐化技术，使图像的边缘变的清晰
直方图修正法
分为直方图均衡化和直方图规定化（直方图匹配）
目的：采用直方图修整后可使图像的灰度间距拉开或使灰度分布均匀，从而增大反差，使图像细节清晰，从而增强图像。
直方图均衡化：通过对原图像进行某种变换使原图像的灰度直方图修正为均匀的直方图的一种方法。
直方图规定化：使原图像灰度直方图变成规定形状的直方图而对图像作修正的增强方法。</p>
<p><strong>频域增强</strong>
频谱图
图像从圆心到外是由低频到高频的一个过程  同心圆表示在不同方向上的同一频率 而频谱有明暗表示分解成的多个正弦波由于相位的不同叠加后就形成了有大小的分别 而相位不同的正弦波又是由在不同位置的原图像的圆（也是不同位置的频率变化组成的）
<strong>图像分割</strong>
方法：阈值分割、区域分割、边缘分割、基于特定理论的分割
图像分割方法依照分割时所依据的图像特性不同，大致可以分为四大类。第一类是阈值方法，这种方法是根据图像灰度值得分布特性确定某个阈值来进行图像分割的。第二类为边缘检测方法，这类方法是通过检测出封闭某个区域的边界来进行图像分割的。通俗地讲，这类方法实际上是沿着闭合的边缘线将其包围的区域剪切出来。第三类方法是区域提取方法，这类方法的特点是根据特定区域与其他背景区域特性上的不同来进行图像分割的。另外，还有一种基于形态学的分水岭算法。
阈值分割：基本原理是：通过设定不同的特征阈值，把图像象素点分为若干类。
常用的特征包括：直接来自原始图像的灰度或彩色特征；由原始灰度或彩色值变换得到的特征。
设原始图像为f(x，y)，按照一定的准则f(x，y)中找到特征值T，将图像分割为两个部分，分割后的图像为：若取：b0=0(黑)，b1=1(白)，即为我们通常所说的图像二值化。
直方图阈值双峰法：双峰法是一种简单的阈值分割方法，即如果灰度级直方图呈现明显的双峰状，则选双峰之间的谷底所对应的灰度级作为阈值分割。
均匀性度量法：
均匀性度量法的设计思想是，假设当图像被分为目标物和背景两个类别时，属于同一类别内的像素值分布应该具有均匀性。在这里采用方差来度量像素间的均匀性。设原图像为f(x,y)，结果图像为g(x,y)。
类间最大方差法（Otsu法）：
Otsu是一种使类间方差最大的自动确定阈值的方法，该方法具有简单、处理速度快的特点，是一种常用的阈值选取方法。MATLAB中的graythresh函数求取阈值采用的就是Otsu法。
局部阈值法：局部阈值图像分割的原理与全局阈值分割相似，只是在使用之前的程序前，将图像分割成若干子图像进行处理，在处理后，在将各自的结果拼接起来。
边缘检测：最简单的边缘检测方法是边缘检测算子，它利用相邻区域的像素值不连续的性质，采用一阶或二阶导数来检测边缘点。
边缘检测是图像处理和计算机视觉中的基本问题，边缘检测的目的是标识数字图像中亮度变化明显的点。图像属性中的显著变化通常反映了属性的重要事件和变化。 这些包括（i）深度上的不连续、（ii）表面方向不连续、（iii）物质属性变化和（iv）场景照明变化。 边缘检测是图像处理和计算机视觉中，尤其是特征提取中的一个研究领域。
图像分割的意义
图像分割是图像分析的第一步，图像分割接下来的任务，如特征提取、目标识别等的好坏，都取决于图像分割的质量如何。
<strong>图像变换</strong>
Fourier变换有两个好处，即：可以获得信号的频域特性；可以将卷积运算转换为乘积运算。
因此二维Fourier变换的应用也是根据这两个特点来进行的。
在图像滤波中的应用
首先，我们来看Fourier变换后的图像，中间部分为低频部分，越靠外边频率越高。因此，我们可以在Fourier变换图中，选择所需要的高频或是低频滤波。
离散余弦变换，尤其是它的第二种类型，经常被信号处理和图像处理使用，用于对信号和图像(包括静止图像和运动图像)进行有损数据压缩。这是由于离散余弦变换具有很强的&quot;能量集中&quot;特性:大多数的自然信号(包括声音和图像)的能量都集中在离散余弦变换后的低频部分，而且当信号具有接近马尔科夫过程(Markov processes)的统计特性时，离散余弦变换的去相关性接近于K-L变换(Karhunen-Loève 变换--它具有最优的去相关性)的性能。
<strong>图像的形态学</strong>
数字图像处理中的形态学处理是指将数字形态学作为工具从图像中提取对于表达和描绘区域形状有用处的图像分量，比如边界、骨架以及凸壳，还包括用于预处理或后处理的形态学过滤、细化和修剪等。图像形态学处理中我们感兴趣的主要是二值图像。
在二值图像中，所有黑色像素的集合是图像完整的形态学描述，二值图像的各个分量是Z2的元素。假定二值图像A和形态学处理的结构元素B是定义在笛卡儿网格上的集合，网格中值为1的点是集合的元素，当结构元素的原点移到点(x,y)时，记为Sxy，为简单起见，结构元素为3x3，且全都为1，在这种限制下，决定输出结果的是逻辑运算。
膨胀和腐蚀这两种操作是形态学处理的基础，许多形态学算法都是以这两种运算为基础的。
开操作是先腐蚀、后膨胀处理。闭操作是先膨胀、后腐蚀处理。
腐蚀和膨胀，看上去好像是一对互逆的操作，实际上，这两种操作不具有互逆的关系。
开运算和闭运算正是依据腐蚀和膨胀的不可逆性，演变而来的。
先腐蚀后膨胀的过程就称为开运算。
闭运算是通过对腐蚀和膨胀的另一种不同次序的执行而得到的，
闭运算是先膨胀后腐蚀的过程，其功能是用来填充物体内细小空洞、连接邻近物体、平滑其边界，同时不明显改变不明显改变其面积。</p>
<p>#相关函数
有关函数的意义
inputdlg  输入对话框<br>
创建一个输入对话框，prompt为提示字符串，title为对话框名称，num_line为显示的行数，defans为默认的数值</p>
<p>imresize  缩放<br>
'nearest'：改变图像尺寸时采用最近邻插值算法；
'bilinear'：采用双线性插值算法；
'bicubic'： 采用双三次插值算法</p>
<p>msgbox  创建对话框<br>
imshow  显示图像
ndims  求一个数组维数</p>
<p>numel  计算数组中满足指定条件的元素个数
若是一幅图像，则numel(A)将给出它的像素数。</p>
<p>I(:,:,1)
:在矩阵引用里，表示所有元素。
比如一个二维矩阵A，A(:,1)就表示A的第一列元素。</p>
<p>flipl中提供了许多对矩阵操作的函数，可以实现矩阵的三角矩阵的提取（triu、tril）、矩阵的翻转（flipud、fliplr、Flipdim）和旋转（rot90）等各种操作。</p>
<p>size
size(X,1),返回矩阵X的行数；
size(X,2),返回矩阵X的列数；
N=size(X,2)，就是把矩阵X的列数赋值给N
size（）：获取矩阵的行数和列数
（1）s=size(A),
当只有一个输出参数时，返回一个行向量，该行向量的第一个元素时矩阵的行数，第二个元素是矩阵的列数。
（2）[r,c]=size(A),
当有两个输出参数时，size函数将矩阵的行数返回到第一个输出变量r，将矩阵的列数返回到第二个输出变量c。
（3）size(A,n)如果在size函数的输入参数中再添加一项n，并用1或2为n赋值，则 size将返回矩阵的行数或列数。其中r=size(A,1)该语句返回的时矩阵A的行数， c=size(A,2) 该语句返回的时矩阵A的列数。</p>
<p>imrotate  旋转
B = imrotate(A,angle,method,bbox)
将图像A（图像的数据矩阵）绕图像的中心点旋转angle度， 正数表示逆时针旋转， 负数表示顺时针旋转。返回旋转后的图像矩阵。
使用method参数可以改变插值算法，method参数可以为下面这三个值：
'nearest'：最邻近线性插值（Nearest-neighbor interpolation）
'bilinear'： 双线性插值（Bilinear interpolation）
'bicubic'： 双三次插值（或叫做双立方插值）（Bicubic interpolation）
bbox参数用于指定输出图像属性：
'crop'： 通过对旋转后的图像B进行裁剪， 保持旋转后输出图像B的尺寸和输入图像A的尺寸一样。
'loose'： 使输出图像足够大， 以保证源图像旋转后超出图像尺寸范围的像素值没有丢失。 一般这种格式产生的图像的尺寸都要大于源图像的尺寸。</p>
<p>imadd       两个图像相加，或者一个图像加上一个常量
imsubstract 两个图像相减，或者一个图像减掉一个常量
immultiply     两个图像相乘，或者一个图像乘上一个常量
imdivide    两个图像相除，或者一个图像除以一个常量
imabsdiff    两个图像的差的绝对值
imcomplement 求一个图像的反色图
inlincomb    求一组图像的线性组合
imadjust  调节灰度图像的亮度或彩色图像的颜色矩阵</p>
<p>histeq  直方图均衡
bar(x,y) 其中x必须是严格递增的且一维向量x和一维向量y长度相同。以一维向量x的值为x坐标，对应的y为y坐标画直方图。</p>
<p>var函数实际上求的并不是方差，而是误差理论中“有限次测量数据的标准偏差的估计值”。</p>
<p>graythresh函数用法：使用最大类间方差法找到图片的一个合适的阈值（threshold）。在使用im2bw函数将灰度图像转换为二值图像时，需要设定一个阈值，这个函数可以帮助我们获得一个合适的阈值。利用这个阈值通常比人为设定的阈值能更好地把一张灰度图像转换为二值图像。</p>
<h1 id="手写归纳">手写归纳</h1>
<p><strong>手写数字模块小结</strong>
handwrite
1.exit函数，存在即返回非0值，不存在即返回0
2.load template pattern;    %将template文件中的pattern加载到工作环境中
3.pattern(1,1).num=0;         %pattern是一个数组，这里.num表示样本数量
4.pattern(1,1).feature=[];   %.feature表示特征值（样本）
5.save template pattern;  %将pattern保存在template.mat文件中
6.pos0=get(handles.WritingAxes,'currentpoint');
%获取最近一次点击的位置，返回一个2x3的矩阵，矩阵的每行代表一个点的坐标
这两个点的具体含义，和坐标系的投影类型以及鼠标点击位置是否位于坐标系内有关。对于典型情况（正交投影，鼠标点击位于坐标系范围内），可以通过鼠标点击的位置，作一条垂直于屏幕的直线，则该线与坐标系的六个面必然会有两个交点（想象一下，2D坐标系的外框是一个矩形，3D坐标系外框是一个长方体），这两个交点的坐标就是上面所说的pos0，其第一行是靠近观察者的那个面上的点，而第二行是离观察者稍远的那个面上的点。
7.x0=pos0(1,1);  %靠近观察者那个面上点的第一个坐标（即x）
y0=pos0(1,2);  %靠近观察者那个面上点的第一个坐标（即y）
8.line(x,y, 'marker', '.','markerSize',18,   'LineStyle','-','LineWidth',2,'Color','black');<br>
%默认选择黑笔画线，设定点的模型大小，线的模型宽度颜色
9.X=x0:stepX:x;      %设定坐标参数，0.1单位
Y=(y-y0)*(X-x0)/(x-x0)+y0;   %两点直线方程
11.Img=getframe(handles.WritingAxes);   %获取坐标轴内图像
%getframe获得的是一个架构struct类型的数据，其中cdata子域的内容才可以用imwrite内容保存，用Img.cdata表示，是截取区域的数据
12.imwrite(I,'当前手写数字.bmp','bmp');  %将图像数据写入图像文件
13.data=GetFeature(I);   %对手写数字进行处理，获取特征向量
14.pattern(1,1).num=pattern(1,1).num+1;   %样本容量加一
15.pattern(1,1).feature(:,pattern(1,1).num)=data;<br>
%新增样本（保存的是特征向量）放在最后
16.pattern(1,1).num=pattern(1,1).num-1;  %样本容量减一
17.pattern(1,1).feature(:,pattern(1,1).num)=[];  %删除倒数第二个
18.set(handles.RecognitionResult,'String',Result); %显示识别结果
feature
1.[row,col]=find(I==0);                %返回数字的上下左右的边界
2.I=I(min(row):max(row),min(col):max(col));<br>
%截取手写数字图像，使其紧包含数字边界，不包含多余的空白
3.[row,col]=size(I);           %求截取后图像的宽和高，数组的行和列
4.r=fix(row/5);                 %fix朝0方向取整
5.data=data'; %将当前手写数字的特征向量由行向量变为列向量
BayesTwoValue
1.sum = sum+pattern(1,i).num;    %样本总数求和
2.pw(i) = pattern(1,i).num/sum;  %每个数字的样本概率,先验概率
3.[maxval,maxpos] = max(pwx);  %取后验概率中最大的
%第一个参数是序列中的最大值 第二个参数是最大值在序列中位置
4.Result= maxpos-1;  %最大值即为最匹配的数字，其数值为它所处位置序号减一
BayesLeastError
1.[pc_template,pc_data]=pcapro(data);  %主成分分析
2.mean_data(i).data=mean(pattern(1,i).feature')'; %求各个类型样品的平均值
%mean(x)表示对列向量x求平均值
3.h(i)=(pc_data-mean_data(i).data)'<em>s_inv(i).data</em>(pc_data-mean_data(i).data)...
<em>(-0.5)+log(pw(i))+log(abs(s_det(i)))</em>(-0.5);  %判别函数
BayesLeastRisk
1.[minval minpos]=min(risk);  %取损失最小的</p>
<h1 id="答辩">答辩</h1>
<p>我们准备的答辩稿（部分）：
思路：
	为更好的协助老师的教学，充实课堂内容，从而设计的辅助教学实验软件，并拓展手写数字识别系统，用来丰富课堂知识。
首先我们选择matlab软件来设计虚拟实验平台，因为大部分工科院校都或多或少 接触过matlab，上手容易。然后由于MatlabGUI强大的可视化界面，让我们决定实现它。一开始我们只设计了手写数字识别，但感觉过于单一，且只涉及到数字图像处理中数字识别模式识别这一块，不够全面，而且学生初学时是从最基本的操作学起，因此，我们根据学习顺序，补充了每一章节的基本实验，使我们的平台更加完善。</p>
<p>遇到的困难：
	主要就是程序的问题，这是一个很需要耐心细心的模块，经常会遇到各种奇怪的问题，比如某个功能失效，界面无响应这些，其次就是生成的可执行文件不能很好的适应所有电脑，拓展模块里的手写也可能因为样本的不足出现错误，所以样本的填充也很复杂很需要时间。</p>
<p>作品的优点和缺点：
优点：操作相对简单，界面比较整洁，知识覆盖面广
缺点：可执行文件适应性不够强，部分功能有延迟，没有更详细的解释相关操作的意义，可能还需要一个使用说明的嵌入模块，手写数字模块样本容量不够大。
运用技术：
	软件的设计基本上全部由matlab/GUI 完成，并使用其特定的命令生成可执行文件，编程时运用了各种简单或复杂的算法，如缩小放大的最近邻插值法，双三次插值法，图像增强里的直方图均衡化、阈值分割的直方图双峰法、均匀性度量法、otsu法、局部阈值法等等。这对于我们两个没有系统学习过这门课的人来说，还是很具有挑战性。
贝叶斯决策的原理。
贝叶斯决策理论方法是统计模型决策中的一个基本方法，其基本思想是：
已知类条件概率密度参数表达式和先验概率。
利用贝叶斯公式转换成后验概率。
根据后验概率大小进行决策分类。
这个手写识别案例的用处：
	是对这门课程的一个拓展，通过对写入的图像灰度化，裁剪，提取特征参数，与贝叶斯决策结合，进行概率分析，匹配，显示最符合的数字，算是部分操作的小应用，同时也涉及到数字图像处理较难的部分：模式识别一块；同时可以用来延伸出车牌识别或人脸识别等更高级的应用系统。</p>
<p>现场老师问了几个问题，回忆了下，有问和PS的区别和项目的意义。</p>
<h1 id="项目获奖">项目获奖</h1>
<pre><code>第九届中国计算机设计大赛国家三等奖、中南赛区二等奖
</code></pre>
<p>P.S.配图为我设计的作品海报。</p>
<p>&lt;span id=&quot;busuanzi_container_page_pv&quot;&gt;
本文已被阅读 &lt;span id=&quot;busuanzi_value_page_pv&quot;&gt;&lt;/span&gt; 次。感谢您的点击！
The article has been viewed &lt;span id=&quot;busuanzi_value_page_pv&quot;&gt;&lt;/span&gt; times.Thank you for your visit!
&lt;/span&gt;</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&amp;lt;div align=&amp;quot;left&amp;quot;&amp;gt;
&amp;lt;img src=&amp;quot;http://7xray0.com1.z0.glb.clouddn.com/hb.jpg&amp;quot; width=&amp;quot;300&amp;quot; height=&amp;quo
    
    </summary>
    
      <category term="通信工程" scheme="http://hubojing.github.io/categories/%E9%80%9A%E4%BF%A1%E5%B7%A5%E7%A8%8B/"/>
    
    
      <category term="matlab" scheme="http://hubojing.github.io/tags/matlab/"/>
    
      <category term="竞赛" scheme="http://hubojing.github.io/tags/%E7%AB%9E%E8%B5%9B/"/>
    
  </entry>
  
  <entry>
    <title>yelee --&gt; hueman主题更换</title>
    <link href="http://hubojing.github.io/2017/01/03/hueman%E4%B8%BB%E9%A2%98%E6%9B%B4%E6%8D%A2/"/>
    <id>http://hubojing.github.io/2017/01/03/hueman主题更换/</id>
    <published>2017-01-03T09:45:10.000Z</published>
    <updated>2017-04-05T09:52:34.845Z</updated>
    
    <content type="html"><![CDATA[<p>&lt;div align=&quot;left&quot;&gt;
&lt;img src=&quot;http://7xray0.com1.z0.glb.clouddn.com/17-1-3/18721350-file_1483437231403_721.png&quot; width=&quot;300&quot; height=&quot;180&quot; style=&quot;float:right;&quot;/&gt;</p>
<p>我又双叒叕把博客玩崩了……
淡定——</p>
<p>&lt;/div&gt;
&lt;!--more--&gt;
　　前两天调双语博客页面失败，顺带着把yelee主题玩垮了。[拆毁天才girl NO.1]
　　MoXFIVE也很久没有更新yelee的文档了，索性我就换了个主题。现在的主题是hueman。
　　换个主题就仿佛整个人都整容了一样→_→什么都要变！
　　改config，调样式，换logo，整个人都不好了！
　　hueman很漂亮，优点突出，但对比yelee，也有一些缺点，例如：没有网站计数，没有文章目录等。
　　把折腾几个小时的成果记录一下，方便以后接着折腾[手动滑稽]。</p>
<h1 id="主题文档">主题文档</h1>
<p>https://github.com/ppoffice/hexo-theme-hueman/wiki</p>
<h1 id="更改背景">更改背景</h1>
<p>hueman\source\css_partial\header.styl
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">-background: color-header-background</div><div class="line">+ background-image: url(<span class="string">"地址"</span>)</div></pre></td></tr></table></figure></p>
<p>记得把footer里的背景也给改了，对称美！</p>
<h1 id="更换logo">更换logo</h1>
<p>hueman\source\css\images
把logo-header.png更换为自己的logo。
我在网上随便在线生成了个艺术字就贴上来了……</p>
<p>#加入网站计数
\themes\hueman\layout\common\footer.ejs
和yelee一样，交给不蒜子[http://ibruce.info/2015/04/04/busuanzi/] 。</p>
<h2 id="安装脚本">安装脚本</h2>
<p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">&lt;script async src=<span class="string">"//dn-lbstatics.qbox.me/busuanzi/2.3/busuanzi.pure.mini.js"</span>&gt;</div><div class="line">&lt;/script&gt;</div></pre></td></tr></table></figure></p>
<h2 id="安装标签">安装标签</h2>
<p>1.显示站点总访问量
要显示站点总访问量，复制以下代码添加到你需要显示的位置。有两种算法可选：
算法a：pv的方式，单个用户连续点击n篇文章，记录n次访问量。
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&lt;span id=<span class="string">"busuanzi_container_site_pv"</span>&gt;</div><div class="line">    本站总访问量&lt;span id=<span class="string">"busuanzi_value_site_pv"</span>&gt;&lt;/span&gt;次</div><div class="line">&lt;/span&gt;</div></pre></td></tr></table></figure></p>
<p>算法b：uv的方式，单个用户连续点击n篇文章，只记录1次访客数。
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&lt;span id=<span class="string">"busuanzi_container_site_uv"</span>&gt;</div><div class="line">  本站访客数&lt;span id=<span class="string">"busuanzi_value_site_uv"</span>&gt;&lt;/span&gt;人次</div><div class="line">&lt;/span&gt;</div></pre></td></tr></table></figure></p>
<p>2.显示单页面访问量
要显示每篇文章的访问量，复制以下代码添加到你需要显示的位置。
算法：pv的方式，单个用户点击1篇文章，本篇文章记录1次阅读量。
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&lt;span id=<span class="string">"busuanzi_container_page_pv"</span>&gt;</div><div class="line">  本文总阅读量&lt;span id=<span class="string">"busuanzi_value_page_pv"</span>&gt;&lt;/span&gt;次</div><div class="line">&lt;/span&gt;</div></pre></td></tr></table></figure></p>
<p>后续待解决（欢迎各位大神们给建议）：
　　1.文章目录问题（不知道在哪里改，toc怎么调用，&lt;%- toc(str, [options]) %&gt;需点拨）
　　2.博客内搜索问题（insight插件总是安装失败，估计是node版本问题，可是有点不敢动node，害怕博客又崩了(瑟瑟发抖.jpg)）
　　3.分类顺序问题（应该是互联网、通信工程、杂谈，不知道为什么成了互联网、杂谈、通信工程）
	4.文章浏览量丢失（蓝瘦香菇…）
　　5.双语页面问题（就是不！死！心！）
　　6.微言板块（类似空间的说说，每条下面可以评论，未来会把自己的问题放在这里，等待高手解答）
　　……</p>
<p>&lt;span id=&quot;busuanzi_container_page_pv&quot;&gt;
本文已被阅读 &lt;span id=&quot;busuanzi_value_page_pv&quot;&gt;&lt;/span&gt; 次。感谢您的点击！</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&amp;lt;div align=&amp;quot;left&amp;quot;&amp;gt;
&amp;lt;img src=&amp;quot;http://7xray0.com1.z0.glb.clouddn.com/17-1-3/18721350-file_1483437231403_721.png&amp;quo
    
    </summary>
    
      <category term="互联网" scheme="http://hubojing.github.io/categories/%E4%BA%92%E8%81%94%E7%BD%91/"/>
    
    
      <category term="blog" scheme="http://hubojing.github.io/tags/blog/"/>
    
      <category term="hexo" scheme="http://hubojing.github.io/tags/hexo/"/>
    
      <category term="主题" scheme="http://hubojing.github.io/tags/%E4%B8%BB%E9%A2%98/"/>
    
  </entry>
  
  <entry>
    <title>一天一点linux</title>
    <link href="http://hubojing.github.io/2016/12/26/linux%E6%95%B4%E7%90%86%E7%AC%94%E8%AE%B0/"/>
    <id>http://hubojing.github.io/2016/12/26/linux整理笔记/</id>
    <published>2016-12-26T15:31:29.000Z</published>
    <updated>2017-01-22T14:16:25.415Z</updated>
    
    <content type="html"><![CDATA[<p>&lt;div align=&quot;left&quot;&gt;
&lt;img src=&quot;http://img.mukewang.com/55ece9d70001fb7f06000375.jpg&quot; width=&quot;300&quot; height=&quot;180&quot;  style=&quot;float:right;&quot;/&gt;
从头学linux，为后续学习打基础。
笔记整理，一天一点linux。</p>
<p>&lt;/div&gt;
&lt;!--more--&gt;</p>
<h1 id="基本概念及操作">基本概念及操作</h1>
<h2 id="linux-桌面环境介绍">Linux 桌面环境介绍</h2>
<p>相对于现在的 Windows 系统，UNIX/Linux 本身是没有图形界面的，我们通常在 Unix/Linux 发行版上看到的图形界面实际都只是运行在 Linux 系统之上的一套软件，类似 Windows95 之前的Windows 的图形界面实则也只是运行在 DOS 环境的一套软件。而 Linux 上的这套软件以前是XFree86，现在则是 xorg（X.Org），而这套软件又是通过 X 窗口系统（X Window System，也常被称为X11或X）实现的，X 本身只是工具包及架构协议，而 xorg 便是 X 架构规范的一个实现体，也就是说它是实现了 X 协议规范的一个提供图形用户界面服务的服务器，就像实现了 http 协议提供 web 服务的 Apache。如果只有服务器也是不能实现一个完整的桌面环境的，当然还需要一个客户端，我们称为 X Client，像如下几个大家熟知也最流行的实现了客户端功能的桌面环境KDE，GNOME，XFCE，LXDE。这也意味着在 Linux 上你可以自己选择安装不同的桌面环境，甚至可以定制自己的专属桌面。</p>
<h2 id="linux终端">Linux终端</h2>
<h3 id="terminal终端">Terminal（终端）</h3>
<p>通常在我们使用 Linux 时，我们并不是直接与系统打交道，而是通过一个叫做 Shell 的中间程序来完成的，在图形界面下为了实现让我们在一个窗口中完成接受用户输入和显示输出，Linux 系统还提供了一个叫做终端模拟器的程序（Terminal），下面几个比较常见的终端模拟器，例如 gnome-terminal，kconsole，xterm，rxvt，kvt，nxterm 和 eterm。
终端本质上是对应着 Linux 上的 /dev/tty 设备，Linux 的多用户登陆就是通过不同的 /dev/tty 设备完成的，Linux 默认提供了 6 个纯命令行界面的 “terminal”（准确的说这里应该是 6 个 virtual consoles）来让用户登录，在物理机系统上你可以通过使用[Ctrl]+[Alt]+[F1]～[F6]进行切换，不过在我们的在线实验环境中可能无法切换，因为特殊功能按键会被你主机系统劫持。当你切换到其中一个终端后想要切换回图形界面，你可以按下[Ctrl]+[Alt]+[F7]来完成。</p>
<h3 id="shell">Shell</h3>
<p>通常在图形界面中对实际体验带来差异的不是上述的不同发行版的各种终端模拟器，而大都是这个 Shell（壳），有壳就有核，这里的核就是指的 UNIX/Linux 内核，Shell 是指“提供给使用者使用界面”的软件（命令解析器），类似于 DOS 下的 command（命令行）和后来的 cmd.exe。普通意义上的 Shell 就是可以接受用户输入命令的程序。它之所以被称作 Shell 是因为它隐藏了操作系统底层的细节。同样的 Unix/Linux 下的图形用户界面 GNOME 和 KDE，有时也被叫做“虚拟 shell”或“图形 shell”。</p>
<p>Unix/Linux 操作系统下的 Shell 既是用户交互的界面，也是控制系统的脚本语言。当然在这点也有别于 Windows 下的命令行，虽然也提供了很简单的控制语句。在Windows 操作系统下，可能有些用户从来都不会直接的使用 Shell，然而在 UNIX 系列操作系统下，Shell 仍然是控制系统启动、X11 启动和很多其他实用工具的脚本解释程序。</p>
<p>在 UNIX/Linux 中比较流行的常见的 Shell 有 bash，zsh，ksh，csh 等等，Ubuntu 终端默认使用的是 bash，默认的桌面环境是 GNOME 或者 Unity（基于 GNOME）。</p>
<h2 id="命令行操作">命令行操作</h2>
<h3 id="重要快捷键">重要快捷键</h3>
<p>Tab 补全命令、目录、参数
Ctrl+c 强行终止当前程序（不会使终端退出）
Ctrl+d  键盘输入结束或退出终端
Ctrl+s  暂停当前程序，暂停后按下任意键恢复运行
Ctrl+z  将当前程序放到后台运行，恢复到前台为命令fg
Ctrl+a  将光标移至输入行头，相当于Home键
Ctrl+e  将光标移至输入行末，相当于End键
Ctrl+k  删除从光标所在位置到行末
Alt+Backspace   向前删除一个单词
Shift+PgUp  将终端显示向上滚动
Shift+PgDn  将终端显示向下滚动</p>
<h3 id="历史输入命令-方向键-上">历史输入命令：  方向键 上</h3>
<p>通配符：星号（*）和问号（?），用来对对字符串进行模糊匹配（比如文件名，参数名）。当查找文件夹时，可以使用它来代替一个或多个真正字符；当不知道真正字符或者懒得输入完整名字时，常常使用通配符代替一个或多个真正的字符。</p>
<h3 id="一次性创建多个文件">一次性创建多个文件</h3>
<p>在创建文件的时候，如果需要一次性创建多个文件，比如：“love_1_linux.txt，love_2_linux.txt，... love_10_linux.txt”。在 Linux 中十分方便：
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ touch love_&#123;1..10&#125;_linux.txt</div></pre></td></tr></table></figure></p>
<h3 id="shell-常用通配符">Shell 常用通配符</h3>
<p>字符  含义</p>
<ul>
<li>匹配 0 或多个字符
?   匹配任意一个字符
[list]  匹配 list 中的任意单一字符
[!list]     匹配 除list 中的任意单一字符以外的字符
[c1-c2]     匹配 c1-c2 中的任意单一字符 如：[0-9] [a-z]
{string1,string2,...}   匹配 sring1 或 string2 (或更多)其一字符串
{c1..c2}    匹配 c1-c2 中全部字符 如{1..10}</li>
</ul>
<h3 id="在命令行中获取帮助">在命令行中获取帮助</h3>
<p>man 命令
Manual pages 是在 UNIX 或类 UNIX 操作系统在线软件文档的一种普遍的形式。 内容包括计算机程序（包括库和系统调用），正式的标准和惯例，甚至是抽象的概念。用户可以通过执行 man 命令调用手册页。</p>
<p>你可以使用如下方式来获得某个命令的说明和使用方式的详细介绍：</p>
<p>$ man &lt;command_name&gt;</p>
<p>比如你想查看 man 命令本身的使用方式，你可以输入：</p>
<p>man man</p>
<p>通常情况下，man 手册里面的内容都是英文的，这就要求你有一定的英文基础。man 手册的内容很多，涉及了 Linux 使用过程中的方方面面，为了便于查找，是做了分册（分区段）处理的，在Research UNIX、BSD、OS X 和 Linux 中，手册通常被分为8个区段，安排如下：
区段  说明
1   一般命令
2   系统调用
3   库函数，涵盖了C标准函数库
4   特殊文件（通常是/dev中的设备）和驱动程序
5   文件格式和约定
6   游戏和屏保
7   杂项
8   系统管理命令和守护进程</p>
<p>要查看相应区段的内容，就在 man 后面加上相应区段的数字即可，如：
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ man 1 ls</div></pre></td></tr></table></figure></p>
<p>会显示第一区段中的ls命令man页面。</p>
<p>所有的手册页遵循一个常见的布局，其为通过简单的 ASCII 文本展示而优化，而这种情况下可能没有任何形式的高亮或字体控制。一般包括以下部分内容：</p>
<p>NAME（名称）</p>
<pre><code>该命令或函数的名称，接着是一行简介。
</code></pre>
<p>SYNOPSIS（概要）</p>
<pre><code>对于命令，正式的描述它如何运行，以及需要什么样的命令行参数。对于函数，介绍函数所需的参数，以及哪个头文件包含该函数的定义。
</code></pre>
<p>DESCRIPTION（说明）</p>
<pre><code>命令或函数功能的文本描述。
</code></pre>
<p>EXAMPLES（示例）</p>
<pre><code>常用的一些示例。
</code></pre>
<p>SEE ALSO（参见）</p>
<pre><code>相关命令或函数的列表。
</code></pre>
<p>也可能存在其他部分内容，但这些部分没有得到跨手册页的标准化。常见的例子包括：OPTIONS（选项），EXIT STATUS（退出状态），ENVIRONMENT（环境），BUGS（程序漏洞），FILES（文件），AUTHOR（作者），REPORTING BUGS（已知漏洞），HISTORY（历史）和COPYRIGHT（版权）。</p>
<p>通常 man 手册中的内容很多，不容易找到想要的结果，可以在 man 中使用搜索，/&lt;要搜索的关键字&gt;，查找到后使用n键切换到下一个关键字所在处，shift+n为上一个关键字所在处。使用Space(空格键)翻页，Enter(回车键)向下滚动一行，或者使用j,k（vim编辑器的移动键）进行向前向后滚动一行。按下h键为显示使用帮助(因为man使用less作为阅读器，实为less工具的帮助)，按下q退出。</p>
<p>想要获得更详细的帮助，使用info命令，不过通常使用man足够。如果知道某个命令的作用，只是想快速查看一些它的某个具体参数的作用，使用--help参数，大部分命令都会带有这个参数，如：
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ ls --help</div></pre></td></tr></table></figure></p>
<h1 id="用户及文件权限管理">用户及文件权限管理</h1>
<h2 id="linux-用户管理">Linux 用户管理</h2>
<p>Linux 是一个可以实现多用户登陆的操作系统。</p>
<h3 id="查看用户">查看用户</h3>
<p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">$ who am i</div><div class="line"></div><div class="line">或者</div><div class="line"></div><div class="line">$ who mom likes</div></pre></td></tr></table></figure></p>
<h3 id="who-命令其它常用参数">who 命令其它常用参数</h3>
<p>参数  说明
-a  打印能打印的全部
-d  打印死掉的进程
-m  同am i,mom likes
-q  打印当前登录用户数及用户名
-u  打印当前登录用户登录信息
-r  打印运行等级</p>
<h3 id="创建用户">创建用户</h3>
<p>在 Linux 系统里， root 账户拥有整个系统至高无上的权利，比如 新建/添加 用户。
su，su- 与 sudo</p>
<p>su &lt;user&gt;可以切换到用户user，执行时需要输入目标用户的密码，sudo &lt;cmd&gt;可以以特权级别运行cmd命令，需要当前用户属于sudo组，且需要输入当前用户密码。su - &lt;user&gt;命令也是切换用户，同时环境变量也会跟着改变成目标用户的环境变量。</p>
<p>新建一个叫 lilei 的用户：
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ sudo adduser lilei</div></pre></td></tr></table></figure></p>
<p>这个命令不但可以添加用户到系统，同时也会默认为新用户创建 home 目录：</p>
<p>$ ls /home</p>
<p>现在你已经创建好一个用户，并且你可以使用你创建的用户登录了，使用如下命令切换登录用户：</p>
<p>$ su -l lilei</p>
<p>输入刚刚设置的 lilei 的密码。退出当前用户跟退出终端一样可以使用 exit 命令或者使用快捷键 Ctrl+d。</p>
<h2 id="用户组">用户组</h2>
<p>每个用户都有一个归属（用户组），用户组简单地理解就是一组用户的集合，它们共享一些资源和权限，同时拥有私有资源，就跟家的形式差不多，你的兄弟姐妹（不同的用户）属于同一个家（用户组），你们可以共同拥有这个家（共享资源），爸妈对待你们都一样（共享权限），你偶尔写写日记，其他人未经允许不能查看（私有资源和权限）。当然一个用户是可以属于多个用户组的，正如你既属于家庭，又属于学校或公司。</p>
<h4 id="知道自己属于哪些用户组的方法">知道自己属于哪些用户组的方法</h4>
<p>方法一：使用groups命令
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ groups nancy</div></pre></td></tr></table></figure></p>
<p>每次新建用户如果不指定用户组的话，默认会自动创建一个与用户名相同的用户组（差不多就相当于家长的意思，或者说是老总）。默认情况下在sudo用户组里的可以使用sudo命令获得root权限。</p>
<p>方法二：查看/etc/group文件
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ cat /etc/group | sort</div></pre></td></tr></table></figure></p>
<p>cat 命令用于读取指定文件的内容并打印到终端输出。| sort 表示将读取的文本进行一个字典排序再输出。使用命令过滤掉一些你不想看到的结果：
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ cat /etc/group | grep -E <span class="string">"nancy"</span></div></pre></td></tr></table></figure></p>
<p>etc/group 文件格式说明</p>
<p>/etc/group 的内容包括用户组（Group）、用户组口令、GID 及该用户组所包含的用户（User），每个用户组一条记录。格式如下：</p>
<pre><code>group_name:password:GID:user_list
</code></pre>
<p>你看到上面的 password 字段为一个 'x' 并不是说密码就是它，只是表示密码不可见而已。</p>
<p><strong>将其它用户加入 sudo 用户组</strong></p>
<p>默认情况下新创建的用户是不具有 root 权限的，也不在 sudo 用户组，可以让其加入sudo用户组从而获取 root 权限。
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ su <span class="_">-l</span> lilei</div><div class="line">$ sudo ls</div></pre></td></tr></table></figure></p>
<p>使用 usermod 命令可以为用户添加用户组，同样使用该命令你必需有 root 权限，你可以直接使用 root 用户为其它用户添加用户组，或者用其它已经在 sudo 用户组的用户使用 sudo 命令获取权限来执行该命令。</p>
<p>用 nancy 用户执行 sudo 命令将 lilei 添加到 sudo 用户组，让它也可以使用 sudo 命令获得 root 权限</p>
<p>$ su nancy # 此处需要输入nancy用户密码，可以点击右侧工具栏中的“SSH直连”查看
$ groups lilei
$ sudo usermod -G sudo lilei
$ groups lilei</p>
<p>然后你再切换回 lilei 用户，现在就可以使用 sudo 获取 root 权限了。</p>
<h3 id="删除用户">删除用户</h3>
<p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ sudo deluser lilei --remove-home</div></pre></td></tr></table></figure></p>
<h2 id="linux-文件权限">Linux 文件权限</h2>
<h3 id="查看文件权限">查看文件权限</h3>
<p>使用较长格式列出文件：
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ ls <span class="_">-l</span></div></pre></td></tr></table></figure></p>
<p>Linux 里面一切皆文件。</p>
<p>ls 命令的一些其它常用的用法：</p>
<pre><code>显示除了 '.'(当前目录)，'..' 上一级目录之外的所有包含隐藏文件（Linux 下以 '.' 开头的文件为隐藏文件）
</code></pre>
<p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ ls -A</div></pre></td></tr></table></figure></p>
<p>可以同时使用 '-A' 和 '-l' 参数：
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ ls -Al</div></pre></td></tr></table></figure></p>
<p>查看某一个目录的完整属性，而不是显示目录里面的文件属性：
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ ls -dl &lt;目录名&gt;</div></pre></td></tr></table></figure></p>
<pre><code>显示所有文件大小，并以普通人类能看懂的方式呈现：
</code></pre>
<p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ ls -AsSh</div></pre></td></tr></table></figure></p>
<p>其中小 s 为显示文件大小，大 S 为按文件大小排序，若需要知道如何按其它方式排序，使用“man”命令查询。</p>
<h3 id="变更文件所有者">变更文件所有者</h3>
<p>假设目前是 lilei 用户登录，新建一个文件，命名为 “iphone6”：</p>
<p>$ touch iphone6</p>
<p>可见文件所有者是 lilei 。
现在，换回到nancy用户身份，使用以下命令变更文件所有者为 nancy ：</p>
<p>$ cd /home/lilei
$ ls iphone6
$ sudo chown nancy iphone6
$ cp iphone6 /home/nancy</p>
<p>现在查看，发现 文件所有者成功修改为 nancy 。</p>
<h3 id="修改文件权限">修改文件权限</h3>
<p>方式一：二进制数字表示
每个文件的三组权限（拥有者，所属用户组，其他用户,记住这个顺序是一定的）就对应这一个 &quot;rwx&quot;，也就是一个 '7'。
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ <span class="built_in">echo</span> <span class="string">"echo \"hello nancy\""</span> &gt; iphone6</div></pre></td></tr></table></figure></p>
<p>然后修改权限：
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ chmod 700 iphone6</div></pre></td></tr></table></figure></p>
<p>现在，其他用户已经不能读这个“iphone6”文件了</p>
<p>方式二：加减赋值操作
完成上述相同的效果：
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ chmod go-rw iphone6</div></pre></td></tr></table></figure></p>
<p>'g''o'还有'u'，分别表示group，others，user，'+'，'-' 就分别表示增加和去掉相应的权限。</p>
<h1 id="linux-目录结构及文件基本操作">Linux 目录结构及文件基本操作</h1>
<h2 id="linux-目录结构">Linux 目录结构</h2>
<p>Linux 是以树形目录结构的形式来构建整个系统的，可以理解为一个用户可操作系统的骨架。虽然本质上无论是目录结构还是操作系统内核都是存储在磁盘上的，但从逻辑上来说 Linux 的磁盘是“挂在”（挂载在）目录上的，每一个目录不仅能使用本地磁盘分区的文件系统，也可以使用网络上的文件系统。举例来说，可以利用网络文件系统（Network File System，NFS）服务器载入某特定目录等。</p>
<h3 id="fhs-标准">FHS 标准</h3>
<p>FHS 定义了两层规范，第一层是， / 下面的各个目录应该要放什么文件数据，例如 /etc 应该要放置设置文件，/bin 与 /sbin 则应该要放置可执行文件等等。</p>
<p>第二层则是针对 /usr 及 /var 这两个目录的子目录来定义。例如 /var/log 放置系统登录文件、/usr/share 放置共享数据等等。</p>
<h3 id="目录路径">目录路径</h3>
<p>cd 切换目录， . 表示当前目录，.. 表示上一级目录（以 . 开头的文件都是隐藏文件，所以这两个目录必然也是隐藏的， ls -a 命令查看隐藏文件）, - 表示上一次所在目录，～ 通常表示当前用户的&quot;home&quot;目录。使用 pwd 命令可以获取当前所在路径（绝对路径）。</p>
<p>进入上一级目录：
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ <span class="built_in">cd</span> ..</div></pre></td></tr></table></figure></p>
<p>进入你的“home”目录：
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ <span class="built_in">cd</span> ~ </div><div class="line"><span class="comment"># 或者 cd /home/&lt;你的用户名&gt;</span></div></pre></td></tr></table></figure></p>
<p>使用 pwd 获取当前路径：
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ <span class="built_in">pwd</span></div></pre></td></tr></table></figure></p>
<p><strong>绝对路径</strong>
以根&quot;/&quot;目录为起点的完整路径，以你所要到的目录为终点，表现形式如： /usr/local/bin，表示根目录下的 usr 目录中的 local 目录中的 bin 目录。</p>
<p><strong>相对路径</strong>
相对于当前的目录的路径，相对路径是以当前目录 . 为起点，以所要到的目录为终点，表现形式如： usr/local/bin （这里假设当前目录为根目录）。表示相对路径实际并没有加上表示当前目录的那个 . ，而是直接以目录名开头，因为这个 usr 目录为 / 目录下的子目录，是可以省略 . 的（也有类似不能省略的情况）；如果是当前目录的上一级目录，则需要使用 .. ，比如当前目录为“home”目录，根目录就应该表示为 ../../ ,表示上一级目录（&quot;home&quot;目录）的上一级目录（&quot;/&quot;目录）。</p>
<p>以&quot;home&quot;目录为起点，分别以绝对路径和相对路径的方式进入 /usr/local/bin 目录：
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 绝对路径</span></div><div class="line">$ <span class="built_in">cd</span> /usr/<span class="built_in">local</span>/bin</div><div class="line"><span class="comment"># 相对路径</span></div><div class="line">$ <span class="built_in">cd</span> ../../usr/<span class="built_in">local</span>/bin</div></pre></td></tr></table></figure></p>
<p><strong>在进行目录切换的过程中请多使用 Tab 键自动补全，可避免输入错误，连续按两次Tab可以显示全部候选结果。</strong></p>
<h2 id="linux-文件的基本操作">Linux 文件的基本操作</h2>
<h3 id="新建">新建</h3>
<p><strong>新建空白文件</strong>
使用 touch 命令创建空白文件，关于 touch 命令，其主要是来更改已有文件的时间戳的（比如，最近访问时间，最近修改时间），但其在不加任何参数的情况下，只指定一个文件名，则可以创建一个为指定文件名的空白文件（不会覆盖已有同名文件），当然你也可以同时指定该文件的时间戳。
创建名为 test 的空白文件，因为在其他目录没有权限，所以需要先 cd ~ 切换回用户的 /home/nancy 目录：
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ <span class="built_in">cd</span> ~</div><div class="line">$ touch <span class="built_in">test</span></div></pre></td></tr></table></figure></p>
<p><strong>新建目录</strong>
使用 mkdir（make directories）命令可以创建一个空目录,也可同时指定创建目录的权限属性</p>
<p>创建名为&quot;mydir&quot;的空目录：
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ mkdir mydir</div></pre></td></tr></table></figure></p>
<p>使用 -p 参数，同时创建父目录（如果不存在该父目录），如下同时创建一个多级目录（这在有时候安装软件，配置安装路径时非常有用）：
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ mkdir -p father/son/grandson</div></pre></td></tr></table></figure></p>
<p>后面的目录路径，以绝对路径的方式表示也是可以的。</p>
<h3 id="复制">复制</h3>
<p>使用cp（copy）命令复制一个文件或目录到指定目录。将之前创建的&quot;test&quot;文件复制到&quot;/home/nancy/father/son/grandson&quot;目录中：
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ cp <span class="built_in">test</span> father/son/grandson</div></pre></td></tr></table></figure></p>
<p><strong>复制目录</strong>
要成功复制目录需要加上-r或者-R参数，表示递归复制，就是说有点“株连九族”的意思：
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ cp -r father family</div></pre></td></tr></table></figure></p>
<h3 id="删除">删除</h3>
<p><strong>删除文件</strong>
使用rm（remove files or directories）命令，删除一个文件或目录：
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ rm <span class="built_in">test</span></div></pre></td></tr></table></figure></p>
<p>有时候你会遇到想要删除一些为只读权限的文件，直接使用rm删除会显示一个提示,你如果想忽略这提示，直接删除文件，可以使用-f参数强制删除：
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ rm <span class="_">-f</span> <span class="built_in">test</span></div></pre></td></tr></table></figure></p>
<p><strong>删除目录</strong>
跟复制目录一样，要删除一个目录，也需要加上-r或-R参数：
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ rm -r family</div></pre></td></tr></table></figure></p>
<h3 id="移动文件与文件重命名">移动文件与文件重命名</h3>
<p><strong>移动文件</strong>
使用mv(move or rename files)命令，移动文件（剪切）。将文件&quot;file1&quot;移动到&quot;Documents&quot;目录mv 源目录文件 目的目录：
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ mkdir Documents</div><div class="line">$ mv file1 Documents</div></pre></td></tr></table></figure></p>
<p><strong>重命名文件</strong>
将文件&quot;file1&quot;重命名为&quot;myfile&quot; mv 旧的文件名 新的文件名：
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ mv file1 myfile</div></pre></td></tr></table></figure></p>
<p><strong>批量重命名</strong>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 使用通配符批量创建 5 个文件</span></div><div class="line">$ touch file&#123;1..5&#125;.txt</div><div class="line"></div><div class="line"><span class="comment"># 批量将这 5 个后缀为 .txt 的文本文件重命名为以 .c 为后缀的文件</span></div><div class="line">$ rename <span class="string">'s/\.txt/\.c/'</span> *.txt</div><div class="line"></div><div class="line"><span class="comment"># 批量将这 5 个文件，文件名改为大写</span></div><div class="line">$ rename <span class="string">'y/a-z/A-Z/'</span> *.c</div></pre></td></tr></table></figure></p>
<p>简单解释下上面的命令，rename是先使用第二个参数的通配符匹配所有后缀为.txt的文件，然后使用第一个参数提供的正则表达式将匹配的这些文件的.txt后缀替换为.c 。</p>
<h3 id="查看文件">查看文件</h3>
<p><strong>使用cat,tac和nl命令查看文件</strong>
打印文件内容到标准输出（终端）,其中cat为正序显示，tac倒序显示。
查看之前从&quot;/etc&quot;目录下拷贝来的passwd文件：
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ cat passwd</div></pre></td></tr></table></figure></p>
<p>可以加上-n参数显示行号：
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ cat -n passwd</div></pre></td></tr></table></figure></p>
<p>nl命令，添加行号并打印，这是个比cat -n更专业的行号打印命令。</p>
<p>它的常用的几个参数：
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">-b : 指定添加行号的方式，主要有两种：</div><div class="line">    -b a:表示无论是否为空行，同样列出行号(<span class="string">"cat -n"</span>就是这种方式)</div><div class="line">    -b t:只列出非空行的编号并列出（默认为这种方式）</div><div class="line">-n : 设置行号的样式，主要有三种：</div><div class="line">    -n ln:在行号字段最左端显示</div><div class="line">    -n rn:在行号字段最右边显示，且不加 0</div><div class="line">    -n rz:在行号字段最右边显示，且加 0</div><div class="line">-w : 行号字段占用的位数(默认为 6 位)</div></pre></td></tr></table></figure></p>
<p><strong>使用more和less命令分页查看文件</strong>
其中more命令比较简单，只能向一个方向滚动，而&quot;less&quot;为基于&quot;more&quot;和&quot;vi&quot;(编辑器)开发，功能更强大。less 的使用基本和 more 一致。
使用more工具打开passwd文件：
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ more passwd</div></pre></td></tr></table></figure></p>
<p>打开后默认只显示一屏内容，终端底部显示当前阅读的进度(百分比)。可以使用Enter键向下滚动一行，使用Space键向下滚动一屏，按下h显示帮助，q退出。
<strong>使用head和tail命令查看文件</strong>
head是只查看的头几行（默认为10行，不足10行则显示全部），tail是查看尾几行。
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ tail /etc/passwd</div></pre></td></tr></table></figure></p>
<p>甚至更直接的只看一行， 加上-n参数，后面紧跟行数：
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ tail -n 1 /etc/passwd</div></pre></td></tr></table></figure></p>
<p>参数-f，这个参数可以实现不停地读取某个文件的内容并显示。这可让我们动态查看日志起到实时监视的作用。</p>
<h3 id="查看文件类型">查看文件类型</h3>
<p>在 Linux 下面文件的类型不是根据文件后缀来判断的，我们通常使用file命令可以查看文件的类型：
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ file /bin/ls</div></pre></td></tr></table></figure></p>
<h3 id="编辑文件">编辑文件</h3>
<p>Linux 内部的 vim 学习教程，输入如下命令即可开始：
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ vimtutor</div></pre></td></tr></table></figure></p>
<h1 id="环境变量与文件查找">环境变量与文件查找</h1>
<h2 id="环境变量">环境变量</h2>
<h3 id="变量">变量</h3>
<p>准确的说应该是 Shell 变量，所谓变量就是计算机中用于记录一个值（不一定是数值，也可以是字符或字符串）的符号，而这些符号将用于不同的运算处理中。
在 Shell 中如何创建一个变量，如何给变量赋值和如何读取变量的值呢？
使用declare命令创建一个变量名为 tmp 的变量：
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ <span class="built_in">declare</span> tmp</div></pre></td></tr></table></figure></p>
<p>使用=号赋值运算符为变量 tmp 赋值为 nancy：
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ tmp=nancy</div></pre></td></tr></table></figure></p>
<p>读取变量的值，使用echo命令和$符号（$符号用于表示引用一个变量的值，初学易忘）：
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ <span class="built_in">echo</span> <span class="variable">$tmp</span></div></pre></td></tr></table></figure></p>
<p><strong>注意:关于变量名，并不是任何形式的变量名都是可用的，变量名只能是英文字母,数字或者下划线，且不能以数字作为开头。</strong></p>
<h3 id="环境变量">环境变量</h3>
<p>环境变量就是作用域比自定义变量要大，如Shell 的环境变量作用于自身和它的子进程。在所有的 UNIX 和类 UNIX 系统中，每个进程都有其各自的环境变量设置，且默认情况下，当一个进程被创建时，处理创建过程中明确指定的话，它将继承其父进程的绝大部分环境设置。Shell 程序也作为一个进程运行在操作系统之上，而在 Shell中运行的大部分命令都将以 Shell 的子进程的方式运行。</p>
<p>通常会涉及到的环境变量有三种：</p>
<ul>
<li>当前 Shell 进程私有用户自定义变量，如上面我们创建的 temp 变量，只在当前 Shell 中有效。</li>
<li>Shell 本身内建的变量。</li>
<li>从自定义变量导出的环境变量。</li>
</ul>
<p>也有三个与上述三种环境变量相关的命令，set，env，export。这三个命令都可用于打印相关环境变量,区别在于涉及的是不同范围的环境变量，详见下表：
命令  说明
set     显示当前 Shell 所有环境变量，包括其内建环境变量（与 Shell 外观等相关），用户自定义变量及导出的环境变量
env     显示与当前用户相关的环境变量，还可以让命令在指定环境中运行
export  显示从 Shell 中导出成环境变量的变量，也能通过它将自定义变量导出为环境变量</p>
<p>关于环境变量，可以简单的理解成在当前进程的子进程是否有效，有效则为环境变量，否则不是（有人也将所有变量统称为环境变量，只是以全局环境变量和局部环境变量进行区分，只要理解它们的实质区别即可）。</p>
<p><strong>注意：为了与普通变量区分，通常我们习惯将环境变量名设为大写。</strong></p>
<h3 id="命令的查找路径与顺序">命令的查找路径与顺序</h3>
<p>Shell 中输入一个命令，Shell 是通过环境变量PATH来进行搜索去找到这个命令然后执行的。Windows 中的也是有这么一个 PATH 环境变量。这个PATH里面就保存了Shell中执行的命令的搜索路径。
查看PATH环境变量的内容：
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ <span class="built_in">echo</span> <span class="variable">$PATH</span></div></pre></td></tr></table></figure></p>
<p>默认情况下有输出：
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">/usr/<span class="built_in">local</span>/sbin:/usr/<span class="built_in">local</span>/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/<span class="built_in">local</span>/games</div></pre></td></tr></table></figure></p>
<p>通常这一类目录下放的都是可执行文件，当我们在 Shell 中执行一个命令时，系统就会按照 PATH 中设定的路径按照顺序依次到目录中去查找，如果存在同名的命令，则执行先找到的那个。</p>
<p>练习创建一个最简单的可执行 Shell 脚本和一个使用 C 语言创建的&quot;hello world&quot;程序。
创建一个 Shell 脚本文件：
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ vim hello_shell.sh</div></pre></td></tr></table></figure></p>
<p>在脚本中添加如下内容，保存并退出（注意不要省掉第一行）：
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#!/bin/zsh</span></div><div class="line"></div><div class="line"><span class="keyword">for</span> ((i=0; i&lt;10; i++));<span class="keyword">do</span></div><div class="line">    <span class="built_in">echo</span> <span class="string">"hello shell"</span></div><div class="line"><span class="keyword">done</span></div><div class="line"></div><div class="line"><span class="built_in">exit</span> 0</div></pre></td></tr></table></figure></p>
<p>为文件添加可执行权限：
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ chmod 755 hello_shell.sh</div></pre></td></tr></table></figure></p>
<p>执行脚本
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ ./hello_shell.sh</div></pre></td></tr></table></figure></p>
<p>创建一个 C 语言&quot;hello world&quot;程序：
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ vim hello_world.c</div></pre></td></tr></table></figure></p>
<p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include &lt;stdio.h&gt;</span></div><div class="line"></div><div class="line">int main(void)</div><div class="line">&#123;</div><div class="line">    <span class="built_in">printf</span>(<span class="string">"hello world!\n"</span>);</div><div class="line">    <span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>使用 gcc 生成可执行文件：
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ gcc -o hello_world hello_world.c</div></pre></td></tr></table></figure></p>
<pre><code>gcc 生成二进制文件默认具有可执行权限，不需要修改
</code></pre>
<p>在 nancy 家目录创建一个mybin目录，并将上述 hello_shell.sh 和 hello_world 文件移动到其中：
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ mkdir mybin</div><div class="line">$ mv hello_shell.sh hello_world mybin/</div></pre></td></tr></table></figure></p>
<p>在mybin目录中分别运行刚刚创建的两个程序：
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ <span class="built_in">cd</span> mybin</div><div class="line">$ ./hello_shell.sh</div><div class="line">$ ./hello_world</div></pre></td></tr></table></figure></p>
<p>回到上一级目录，也就是nancy家目录，当再想运行那两个程序时，会发现提示命令找不到，除非加上命令的完整路径，但那样很不方便，要做到想使用系统命令一样执行自己创建的脚本文件或者程序，那就要将命令所在路径添加到PATH环境变量了。</p>
<h3 id="添加自定义路径到path环境变量">添加自定义路径到“PATH”环境变量</h3>
<p>PATH里面的路径是以：作为分割符，可这样添加自定义路径：
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ PATH=<span class="variable">$PATH</span>:/home/shiyanlou/mybin</div></pre></td></tr></table></figure></p>
<p><strong>注意这里一定要使用绝对路径。</strong></p>
<p>可以在其他任意目录执行那两个命令了（注意需要去掉前面的./）。这给 PATH 环境变量追加了一个路径，它也只是在当前 Shell 有效，一旦退出终端，再打开就会发现又失效了。
让添加的环境变量全局有效或者每次启动 Shell 时自动执行上面添加自定义路径到 PATH 的命令——后一种方式——让它自动执行。</p>
<p>在每个用户的 home 目录中有一个 Shell 每次启动时会默认执行一个配置脚本，以初始化环境，包括添加一些用户自定义环境变量等等。zsh 的配置文件是.zshrc，相应 Bash 的配置文件为.bashrc。它们在etc下还都有一个或多个全局的配置文件，不过一般只修改用户目录下的配置文件。</p>
<p>简单的使用下面命令直接添加内容到.zshrc中：
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ <span class="built_in">echo</span> <span class="string">"PATH=<span class="variable">$PATH</span>:/home/shiyanlou/mybin"</span> &gt;&gt; .zshrc</div></pre></td></tr></table></figure></p>
<p>上述命令中&gt;&gt;表示将标准输出以追加的方式重定向到一个文件中，注意前面用到的&gt;是以覆盖的方式重定向到一个文件中，使用的时候一定要注意分辨。在指定文件不存在的情况下都会创建新的文件。</p>
<h3 id="修改和删除已有变量">修改和删除已有变量</h3>
<p>变量修改</p>
<p>变量的修改有以下几种方式：
变量设置方式  说明
${变量名#匹配字串}     从头向后开始匹配，删除符合匹配字串的最短数据
${变量名##匹配字串}    从头向后开始匹配，删除符合匹配字串的最长数据
${变量名%匹配字串}     从尾向前开始匹配，删除符合匹配字串的最短数据
${变量名%%匹配字串}    从尾向前开始匹配，删除符合匹配字串的最长数据
${变量名/旧的字串/新的字串}    将符合旧字串的第一个字串替换为新的字串
${变量名//旧的字串/新的字串}   将符合旧字串的全部字串替换为新的字串</p>
<p>比如要修改前面添加到 PATH 的环境变量。为了避免操作失误导致命令找不到，先将 PATH 赋值给一个新的自定义变量 path：
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">$ path=<span class="variable">$PATH</span></div><div class="line">$ <span class="built_in">echo</span> <span class="variable">$path</span></div><div class="line">$ path=<span class="variable">$&#123;path%/home/shiyanlou/mybin&#125;</span></div><div class="line"><span class="comment"># 或使用通配符,*表示任意多个任意字符</span></div><div class="line">$ path=<span class="variable">$&#123;path%*/mybin&#125;</span></div></pre></td></tr></table></figure></p>
<p><strong>变量删除</strong>
可以使用unset命令删除一个环境变量：
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ <span class="built_in">unset</span> temp</div></pre></td></tr></table></figure></p>
<h3 id="如何让环境变量立即生效">如何让环境变量立即生效</h3>
<p>上面在Shell 中修改了一个配置脚本文件之后（比如 zsh 的配置文件 home 目录下的.zshrc），每次都要退出终端重新打开甚至重启主机之后其才能生效，很麻烦，使用source命令来让其立即生效，如：
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ <span class="built_in">source</span> .zshrc</div></pre></td></tr></table></figure></p>
<p>source命令还有一个别名就是.，注意与表示当前路径的那个点区分开，虽然形式一样，但作用和使用方式一样，上面的命令如果替换成.的方式就该是
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ . ./.zshrc</div></pre></td></tr></table></figure></p>
<p>注意第一个点后面有一个空格，而且后面的文件必须指定完整的绝对或相对路径名，source 则不需要。</p>
<h2 id="搜索文件">搜索文件</h2>
<p>与搜索相关的命令常用的有如下几个whereis,which,find,locate。</p>
<ul>
<li>whereis简单快速
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="variable">$whereis</span> who</div></pre></td></tr></table></figure></li>
</ul>
<p>whereis只能搜索二进制文件(-b)，man帮助文件(-m)和源代码文件(-s)。如果想要获得更全面的搜索结果可用locate命令。</p>
<ul>
<li>locate快而全
通过&quot;/var/lib/mlocate/mlocate.db&quot;数据库查找，不过这个数据库也不是实时更新的，系统会使用定时任务每天自动执行updatedb命令更新一次，所以有时刚添加的文件，它可能会找不到，需要手动执行一次updatedb命令（在我们的环境中必须先执行一次该命令）。它可以用来查找指定目录下的不同文件类型，如查找 /etc 下所有以 sh 开头的文件：
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ locate /etc/sh</div></pre></td></tr></table></figure></li>
</ul>
<p><strong>注意,它不只是在 etc 目录下查找并会自动递归子目录进行查找。</strong>
查找 /usr/share/ 下所有 jpg 文件：
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ locate /usr/share/\*.jpg</div></pre></td></tr></table></figure></p>
<p><em><em>注意要添加</em>号前面的反斜杠转义，否则会无法找到。</em>*</p>
<p>如果想只统计数目可以加上-c参数，-i参数可以忽略大小写进行查找，whereis 的-b,-m，-s同样可以是使用。</p>
<ul>
<li>which小而精</li>
</ul>
<p>which本身是 Shell 内建的一个命令，通常使用which来确定是否安装了某个指定的软件，因为它只从PATH环境变量指定的路径中去搜索命令：
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ <span class="built_in">which</span> man</div></pre></td></tr></table></figure></p>
<ul>
<li>find精而细</li>
</ul>
<p>find应该是这几个命令中最强大的了，它不但可以通过文件类型、文件名进行查找而且可以根据文件的属性（如文件的时间戳，文件的权限等）进行搜索。
在指定目录下搜索指定文件名的文件：
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ find /etc/ -name interfaces</div></pre></td></tr></table></figure></p>
<p>**注意 find 命令的路径是作为第一个参数的， 基本命令格式为 find [path] [option] [action] **
与时间相关的命令参数：
参数  说明
-atime  最后访问时间
-ctime  创建时间
-mtime  最后修改时间</p>
<p>下面以-mtime参数举例：</p>
<ul>
<li>-mtime n: n 为数字，表示为在n天之前的”一天之内“修改过的文件</li>
<li>-mtime +n: 列出在n天之前（不包含n天本身）被修改过的文件</li>
<li>-mtime -n: 列出在n天之内（包含n天本身）被修改过的文件</li>
<li>newer file: file为一个已存在的文件，列出比file还要新的文件名</li>
</ul>
<p>列出 home 目录中，当天（24 小时之内）有改动的文件：
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ find ~ -mtime 0</div></pre></td></tr></table></figure></p>
<p>列出用户家目录下比Code文件夹新的文件：
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ find ~ -newer /home/shiyanlou/Code</div></pre></td></tr></table></figure></p>
<p>《黑客帝国》电影里满屏幕代码的“数字雨”，在 Linux 里面也可以轻松实现这样的效果，只需要一个命令cmatrix。
需要先安装，因为 Ubuntu 没有预装：
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ sudo apt-get update;sudo apt-get install cmatrix</div></pre></td></tr></table></figure></p>
<h1 id="文件打包与解压缩">文件打包与解压缩</h1>
<h2 id="文件打包和解压缩">文件打包和解压缩</h2>
<p>在 Windows 上最常见的不外乎这三种*.zip,<em>.rar,</em>.7z后缀的压缩文件，而在 Linux 上面常见常用的除了以上这三种外，还有*.gz,<em>.xz,</em>.bz2,<em>.tar,</em>.tar.gz,*.tar.xz,*tar.bz2，简单介绍如下：
文件后缀名   说明
*.zip   zip程序打包压缩的文件
*.rar   rar程序压缩的文件
*.7z    7zip程序压缩的文件
*.tar   tar程序打包，未压缩的文件
*.gz    gzip程序(GNU zip)压缩的文件
*.xz    xz程序压缩的文件
*.bz2   bzip2程序压缩的文件
*.tar.gz    tar打包，gzip程序压缩的文件
*.tar.xz    tar打包，xz程序压缩的文件
*tar.bz2    tar打包，bzip2程序压缩的文件
*.tar.7z    tar打包，7z程序压缩的文件</p>
<h2 id="zip压缩打包程序">zip压缩打包程序</h2>
<pre><code>使用zip打包文件夹：
</code></pre>
<p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ zip -r -q -o nancy.zip /home/nancy</div><div class="line">$ du -h nancy.zip</div><div class="line">$ file nancy.zip</div></pre></td></tr></table></figure></p>
<p>上面命令将 nancy 的 home 目录打包成一个文件，并查看了打包后文件的大小和类型。-r参数表示递归打包包含子目录的全部内容，-q参数表示为安静模式，即不向屏幕输出信息，-o，表示输出文件，需在其后紧跟打包输出文件名。后面使用du命令查看打包后文件的大小。</p>
<pre><code>设置压缩级别为9和1（9最大,1最小），重新打包：
</code></pre>
<p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ zip -r -9 -q -o nancy_9.zip /home/nancy -x ~/*.zip</div><div class="line">$ zip -r -1 -q -o nancy_1.zip /home/nancy -x ~/*.zip</div></pre></td></tr></table></figure></p>
<p>这里添加了一个参数用于设置压缩级别-[1-9]，1表示最快压缩但体积大，9表示体积最小但耗时最久。最后那个-x是为了排除我们上一次创建的 zip 文件，否则又会被打包进这一次的压缩文件中，<strong>注意:这里只能使用绝对路径，否则不起作用。</strong></p>
<p>我们再用du命令分别查看默认压缩级别、最低、最高压缩级别及未压缩的文件的大小：
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ du -h <span class="_">-d</span> 0 *.zip ~ | sort</div></pre></td></tr></table></figure></p>
<p>通过man 手册可知：</p>
<pre><code>h, --human-readable（顾名思义，你可以试试不加的情况）

d, --max-depth（所查看文件的深度）
</code></pre>
<p>在环境中操作之后看到的大小可能跟图上的有些不同，因为在使用过程中，会随时还生成一些缓存文件在当前用户的家目录中，这对于学习命令使用来说，是无关紧要的，可以忽略这些不同。</p>
<pre><code>创建加密zip包
</code></pre>
<p>使用-e参数可以创建加密压缩包：
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ zip -r <span class="_">-e</span> -o nancy_encryption.zip /home/nancy</div></pre></td></tr></table></figure></p>
<p><strong>注意</strong>: 关于zip命令，因为 Windows 系统与 Linux/Unix 在文本文件格式上的一些兼容问题，比如换行符（为不可见字符），在 Windows 为 CR+LF（Carriage-Return+Line-Feed：回车加换行），而在 Linux/Unix 上为 LF（换行），所以如果在不加处理的情况下，在 Linux 上编辑的文本，在 Windows 系统上打开可能看起来是没有换行的。如果你想让你在 Linux 创建的 zip 压缩文件在 Windows 上解压后没有任何问题，那么你还需要对命令做一些修改：
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ zip -r <span class="_">-l</span> -o nancy.zip /home/nancy</div></pre></td></tr></table></figure></p>
<p>需要加上-l参数将LF转换为CR+LF来达到以上目的。</p>
<h2 id="使用unzip命令解压缩zip文件">使用unzip命令解压缩zip文件</h2>
<p>将shiyanlou.zip解压到当前目录：
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ unzip shiyanlou.zip</div></pre></td></tr></table></figure></p>
<p>使用安静模式，将文件解压到指定目录：
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ unzip -q shiyanlou.zip <span class="_">-d</span> ziptest</div></pre></td></tr></table></figure></p>
<p>上述指定目录不存在，将会自动创建。如果不想解压只想查看压缩包的内容可以使用-l参数：
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ unzip <span class="_">-l</span> shiyanlou.zip</div></pre></td></tr></table></figure></p>
<p><strong>注意</strong>： 使用unzip解压文件时我们同样应该注意兼容问题，不过这里我们关心的不再是上面的问题，而是中文编码的问题，通常 Windows 系统上面创建的压缩文件，如果有有包含中文的文档或以中文作为文件名的文件时默认会采用 GBK 或其它编码，而 Linux 上面默认使用的是 UTF-8 编码，如果不加任何处理，直接解压的话可能会出现中文乱码的问题（有时候它会自动帮你处理），为了解决这个问题，我们可以在解压时指定编码类型。</p>
<p>使用-O（英文字母，大写o）参数指定编码类型：
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">unzip -O GBK 中文压缩文件.zip</div></pre></td></tr></table></figure></p>
<h2 id="rar打包压缩命令">rar打包压缩命令</h2>
<p>rar也是 Windows 上常用的一种压缩文件格式，在 Linux 上可以使用rar和unrar工具分别创建和解压 rar 压缩包。</p>
<pre><code>安装rar和unrar工具：
</code></pre>
<p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ sudo apt-get update</div><div class="line">$ sudo apt-get install rar unrar</div></pre></td></tr></table></figure></p>
<pre><code>从指定文件或目录创建压缩包或添加文件到压缩包：
</code></pre>
<p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ rm *.zip</div><div class="line">$ rar a nancy.rar .</div></pre></td></tr></table></figure></p>
<p>上面的命令使用a参数添加一个目录～到一个归档文件中，如果该文件不存在就会自动创建。
<strong>注意：rar 的命令参数没有-，如果加上会报错。</strong></p>
<pre><code>从指定压缩包文件中删除某个文件：
</code></pre>
<p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ rar d nancy.rar .zshrc</div></pre></td></tr></table></figure></p>
<pre><code>查看不解压文件：
</code></pre>
<p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ rar l nancy.rar</div></pre></td></tr></table></figure></p>
<pre><code>使用unrar解压rar文件
</code></pre>
<p>全路径解压：
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ unrar x nancy.rar</div></pre></td></tr></table></figure></p>
<p>去掉路径解压：
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ mkdir tmp</div><div class="line">$ unrar e nancy.rar tmp/</div></pre></td></tr></table></figure></p>
<p>rar命令参数非常多，上面只涉及了一些基本操作。</p>
<h2 id="tar打包工具">tar打包工具</h2>
<pre><code>创建一个 tar 包：
</code></pre>
<p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ tar -cf nancy.tar ~</div></pre></td></tr></table></figure></p>
<p>-c表示创建一个 tar 包文件，-f用于指定创建的文件名，注意文件名必须紧跟在-f参数之后，比如不能写成tar -fc nancy.tar，可以写成tar -f nancy.tar -c ~。你还可以加上-v参数以可视的的方式输出打包的文件。上面会自动去掉表示绝对路径的/，你也可以使用-P保留绝对路径符。</p>
<pre><code>解包一个文件(-x参数)到指定路径的已存在目录(-C参数)：
</code></pre>
<p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ mkdir tardir</div><div class="line">$ tar -xf nancy.tar -C tardir</div></pre></td></tr></table></figure></p>
<pre><code>只查看不解包文件-t参数：
</code></pre>
<p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ tar -tf nancy.tar</div></pre></td></tr></table></figure></p>
<pre><code>保留文件属性和跟随链接（符号链接或软链接），有时候我们使用tar备份文件当你在其他主机还原时希望保留文件的属性(-p参数)和备份链接指向的源文件而不是链接本身(-h参数)：
</code></pre>
<p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ tar -cphf etc.tar /etc</div></pre></td></tr></table></figure></p>
<p>对于创建不同的压缩格式的文件，对于tar来说是相当简单的，需要的只是换一个参数，这里我们就以使用gzip工具创建*.tar.gz文件为例来说明。</p>
<pre><code>我们只需要在创建 tar 文件的基础上添加-z参数，使用gzip来压缩文件：
</code></pre>
<p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ tar -czf nancy.tar.gz ~</div></pre></td></tr></table></figure></p>
<pre><code>解压*.tar.gz文件：
</code></pre>
<p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ tar -xzf nancy.tar.gz</div></pre></td></tr></table></figure></p>
<p>要使用其他的压缩工具创建或解压相应文件只需要更改一个参数即可：
压缩文件格式  参数
*.tar.gz    -z
*.tar.xz    -J
*tar.bz2    -j</p>
<p>趣味程序（火炉）：
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ sudo apt-get install libaa-bin </div><div class="line">$ aafire</div></pre></td></tr></table></figure></p>
<h1 id="文件系统操作与磁盘管理">文件系统操作与磁盘管理</h1>
<h2 id="简单文件系统操作">简单文件系统操作</h2>
<p><strong>使用 df 命令查看磁盘的容量</strong>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ df</div></pre></td></tr></table></figure></p>
<p>物理主机上的 /dev/sda2 是对应着主机硬盘的分区，后面的数字表示分区号，数字前面的字母 a 表示第几块硬盘（也可能是可移动磁盘），如果主机上有多块硬盘则可能还会出现 /dev/sdb，/dev/sdc 这些磁盘设备都会在 /dev 目录下以文件的存在形式。</p>
<p>还会看到&quot;1k-blocks&quot;，它表示以磁盘块大小的方式显示容量，后面为相应的以块大小表示的已用和可用容量。
<strong>使用 du 命令查看目录的容量</strong>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 默认同样以 blocks 的大小展示</span></div><div class="line">$ du </div><div class="line"><span class="comment"># 加上`-h`参数，以更易读的方式展示</span></div><div class="line">$ du -h</div></pre></td></tr></table></figure></p>
<p>-d参数指定查看目录的深度
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 只查看1级目录的信息</span></div><div class="line">$ du -h <span class="_">-d</span> 0 ~</div><div class="line"><span class="comment"># 查看2级</span></div><div class="line">$ du -h <span class="_">-d</span> 1 ~</div></pre></td></tr></table></figure></p>
<h2 id="简单的磁盘管理">简单的磁盘管理</h2>
<p><strong>下面涉及的命令具有一定的危险性，操作不当可能会丢失你的个人数据，初学者建议在虚拟环境中进行操作</strong></p>
<h3 id="创建虚拟磁盘">创建虚拟磁盘</h3>
<p>dd 命令简介
dd命令用于转换和复制文件，不过它的复制不同于cp。之前提到过关于 Linux 的很重要的一点，一切即文件，在 Linux 上，硬件的设备驱动（如硬盘）和特殊设备文件（如/dev/zero和/dev/random）都像普通文件一样，只要在各自的驱动程序中实现了对应的功能，dd 也可以读取自和/或写入到这些文件。这样，dd也可以用在备份硬件的引导扇区、获取一定数量的随机数据或者空数据等任务中。dd程序也可以在复制时处理数据，例如转换字节序、或在 ASCII 与 EBCDIC 编码间互换。</p>
<p>dd的命令行语句与其他的 Linux 程序不同，因为它的命令行选项格式为选项=值，而不是更标准的--选项 值或-选项=值。dd默认从标准输入中读取，并写入到标准输出中，但可以用选项if（input file，输入文件）和of（output file，输出文件）改变。</p>
<p>我们先来试试用dd命令从标准输入读入用户输入到标准输出或者一个文件：
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 输出到文件</span></div><div class="line">$ dd of=<span class="built_in">test</span> bs=10 count=1 <span class="comment"># 或者 dd if=/dev/stdin of=test bs=10 count=1</span></div><div class="line"><span class="comment"># 输出到标准输出</span></div><div class="line">$ dd <span class="keyword">if</span>=/dev/stdin of=/dev/stdout bs=10 count=1</div></pre></td></tr></table></figure></p>
<p>明天继续。</p>
<hr>
<p>感谢实验楼。</p>
<p>&lt;span id=&quot;busuanzi_container_page_pv&quot;&gt;
本文已被阅读 &lt;span id=&quot;busuanzi_value_page_pv&quot;&gt;&lt;/span&gt; 次。感谢您的点击！
The article has been viewed &lt;span id=&quot;busuanzi_value_page_pv&quot;&gt;&lt;/span&gt; times.Thank you for your visit!
&lt;/span&gt;</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&amp;lt;div align=&amp;quot;left&amp;quot;&amp;gt;
&amp;lt;img src=&amp;quot;http://img.mukewang.com/55ece9d70001fb7f06000375.jpg&amp;quot; width=&amp;quot;300&amp;quot; hei
    
    </summary>
    
      <category term="通信工程" scheme="http://hubojing.github.io/categories/%E9%80%9A%E4%BF%A1%E5%B7%A5%E7%A8%8B/"/>
    
    
      <category term="linux" scheme="http://hubojing.github.io/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>回归</title>
    <link href="http://hubojing.github.io/2016/12/26/%E5%9B%9E%E5%BD%92/"/>
    <id>http://hubojing.github.io/2016/12/26/回归/</id>
    <published>2016-12-26T13:16:07.000Z</published>
    <updated>2016-12-26T14:06:06.482Z</updated>
    
    <content type="html"><![CDATA[<p>&lt;div align=&quot;left&quot;&gt;
&lt;img src=&quot;http://www.jingyanbus.com/uploads/allimg/c160518/1463534500XK0-3G2b.jpg&quot; width=&quot;300&quot; height=&quot;180&quot; alt=&quot;配图&quot; style=&quot;float:right;&quot;/&gt;</p>
<p>考研大战初试昨日结束，我回来写文了！
考研不易，且行且珍惜！
无论如何，人生开启新旅程！在技术的海洋里遨游吧！向成为一名优秀的工程师迈进！</p>
<p>[点开有福利]
&lt;/div&gt;
&lt;!--more--&gt;
P.S.
顺便卖个资料，赚些买域名的费用。想考研的各位可以找我，资料非常齐全（百度云4T）市面上的基本都有，<strong>价格0-10元</strong>，好商量，关系好可以免费送（嘿嘿嘿）。我也算是过来人了，绝不坑人，那些正儿八经卖资料的动辄几百简直是压榨穷苦的学生们……</p>
<p>&lt;img src=&quot;/images/h_2.jpg&quot; width=&quot;300&quot; height=&quot;400&quot; alt=&quot;联系方式&quot; style=&quot;float:middle;&quot;/&gt;</p>
<p>&lt;span id=&quot;busuanzi_container_page_pv&quot;&gt;
本文已被阅读 &lt;span id=&quot;busuanzi_value_page_pv&quot;&gt;&lt;/span&gt; 次。感谢您的点击！
The article has been viewed &lt;span id=&quot;busuanzi_value_page_pv&quot;&gt;&lt;/span&gt; times.Thank you for your visit!
&lt;/span&gt;</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&amp;lt;div align=&amp;quot;left&amp;quot;&amp;gt;
&amp;lt;img src=&amp;quot;http://www.jingyanbus.com/uploads/allimg/c160518/1463534500XK0-3G2b.jpg&amp;quot; width=
    
    </summary>
    
      <category term="杂谈" scheme="http://hubojing.github.io/categories/%E6%9D%82%E8%B0%88/"/>
    
    
      <category term="说明" scheme="http://hubojing.github.io/tags/%E8%AF%B4%E6%98%8E/"/>
    
  </entry>
  
  <entry>
    <title>上海决赛之旅 | the trip for contest in Shanghai</title>
    <link href="http://hubojing.github.io/2016/08/27/%E4%B8%8A%E6%B5%B7%E5%86%B3%E8%B5%9B%E4%B9%8B%E6%97%85/"/>
    <id>http://hubojing.github.io/2016/08/27/上海决赛之旅/</id>
    <published>2016-08-27T07:43:53.000Z</published>
    <updated>2016-10-23T15:47:53.624Z</updated>
    
    <content type="html"><![CDATA[<p>&lt;div align=&quot;left&quot;&gt;
&lt;img src=&quot;http://7xray0.com1.z0.glb.clouddn.com/IMG_20160823_183005.jpg&quot; width=&quot;300&quot; height=&quot;180&quot; alt=&quot;配图&quot; style=&quot;float:right;&quot;/&gt;</p>
<p><strong>上海决赛后的简单的感受，具体的技术方面探讨将在考研后详细更新。</strong></p>
<p>&lt;/div&gt;</p>
<p>&lt;!--more--&gt;</p>
<p>从上海比赛回来，说说几点感受：<br>
1.大神技术过硬。
2.大神为作品倾注很多。
3.创意和灵感的重要性。
4.团队合作，找到志同道合的朋友。
5.大神演讲能力极强，不怯场。
6.自己的心态和学习程度都需要改正加强，差距是明显可见的。</p>
<p>衷心感谢学校的支持，能为学院和学校争取荣誉，同时实现自己初涉竞赛的心愿，找到自己和大神的距离，不虚此行。</p>
<p>I would like to spare my thoughts after my coming back from Shanghai for my competition.
1.Superiors are excellent in technology.
2.Superiors take times in their work.
3.Idea and inspiration are insignificant.
4.Team-work is needed,and we should find like-minded firends.
5.Superiors have ability in giving a speech and never afraid of it.
6.My attitude and learning need to be changed and improved,and the distance between superior and me is clearly to see.</p>
<p>Thank you for the support from my university,and I'm prond of doing credit to my school and university.In the meanwhile,I realise my dream for first involve in contest.
附自拍上海美景 P.S.the view of Shanghai
<img src="http://7xray0.com1.z0.glb.clouddn.com/IMG_20160823_203221.jpg" alt="上海"></p>
<p>&lt;span id=&quot;busuanzi_container_page_pv&quot;&gt;</p>
<blockquote>
<p><strong>本文已被阅读 &lt;span id=&quot;busuanzi_value_page_pv&quot;&gt;&lt;/span&gt; 次。感谢您的点击！</strong>
<strong>The article has been viewed &lt;span id=&quot;busuanzi_value_page_pv&quot;&gt;&lt;/span&gt; times.Thank you for your visit!</strong>
&lt;/span&gt;</p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&amp;lt;div align=&amp;quot;left&amp;quot;&amp;gt;
&amp;lt;img src=&amp;quot;http://7xray0.com1.z0.glb.clouddn.com/IMG_20160823_183005.jpg&amp;quot; width=&amp;quot;300&amp;
    
    </summary>
    
      <category term="杂谈" scheme="http://hubojing.github.io/categories/%E6%9D%82%E8%B0%88/"/>
    
    
      <category term="杂谈" scheme="http://hubojing.github.io/tags/%E6%9D%82%E8%B0%88/"/>
    
  </entry>
  
  <entry>
    <title>说明</title>
    <link href="http://hubojing.github.io/2016/07/16/%E8%AF%B4%E6%98%8E/"/>
    <id>http://hubojing.github.io/2016/07/16/说明/</id>
    <published>2016-07-16T10:20:32.000Z</published>
    <updated>2016-07-24T12:18:17.861Z</updated>
    
    <content type="html"><![CDATA[<p>&lt;div align=&quot;left&quot;&gt;
&lt;img src=&quot;http://i2.w.yun.hjfile.cn/doc/201304/bc1b70e4e74d48c4ab99e3db21a052f0.png&quot; width=&quot;300&quot; height=&quot;180&quot; alt=&quot;配图&quot; style=&quot;float:right;&quot;/&gt;</p>
<p>有朋友问我为何最近github和博客都没有较多的维护和更新，现作出<code>说明</code>：</p>
<p>因本人自身发展问题，正积极备考研究生考试，直至考研结束，所以github和博客的维护和更新会延缓，但<strong>不会停止维护</strong>。
希望完全回归时，自己能收获理想！
学习，永不止步。
望各位朋友理解！谢谢大家！</p>
<p>&lt;!--more--&gt;
&lt;span id=&quot;busuanzi_container_page_pv&quot;&gt;
本文已被阅读 &lt;span id=&quot;busuanzi_value_page_pv&quot;&gt;&lt;/span&gt; 次。感谢您的点击！
The article has been viewed &lt;span id=&quot;busuanzi_value_page_pv&quot;&gt;&lt;/span&gt; times.Thank you for your visit!
&lt;/span&gt;</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&amp;lt;div align=&amp;quot;left&amp;quot;&amp;gt;
&amp;lt;img src=&amp;quot;http://i2.w.yun.hjfile.cn/doc/201304/bc1b70e4e74d48c4ab99e3db21a052f0.png&amp;quot; widt
    
    </summary>
    
      <category term="杂谈" scheme="http://hubojing.github.io/categories/%E6%9D%82%E8%B0%88/"/>
    
    
      <category term="说明" scheme="http://hubojing.github.io/tags/%E8%AF%B4%E6%98%8E/"/>
    
  </entry>
  
  <entry>
    <title>P图集 | PS picture album</title>
    <link href="http://hubojing.github.io/2016/06/29/P%E5%9B%BE%E9%9B%86/"/>
    <id>http://hubojing.github.io/2016/06/29/P图集/</id>
    <published>2016-06-29T11:58:18.000Z</published>
    <updated>2016-07-06T04:48:06.736Z</updated>
    
    <content type="html"><![CDATA[<p>&lt;div align=&quot;left&quot;&gt;
&lt;img src=&quot;http://7xray0.com1.z0.glb.clouddn.com/16-6-29/63527525.jpg&quot; width=&quot;300&quot; height=&quot;180&quot; alt=&quot;配图&quot; style=&quot;float:right;&quot;/&gt;</p>
<p>自从学会Photoshop这个好用的工具后，对照片的处理更得心应手了。
这是我的P图集。
I use photoshop more effectively after I learned it.
This is my PS picture album.</p>
<p>&lt;/div&gt;
&lt;!--more--&gt;
<strong>1</strong>
<img src="/images/y1.jpg" alt="原图">
<img src="/images/p1_1.jpg" alt="冷色">
<img src="/images/p1_2.jpg" alt="暖色"></p>
<p><strong>2</strong>
<img src="/images/y2.jpg" alt="原图">
<img src="/images/p2.jpg" alt="修后"></p>
<p>我是想调成新海诚动漫画风效果的…不过水平还欠佳……
I want to do it as Makoto Shinkai's animation style,but my level just not reachs that high apparently.</p>
<p>&lt;span id=&quot;busuanzi_container_page_pv&quot;&gt;
本文已被阅读 &lt;span id=&quot;busuanzi_value_page_pv&quot;&gt;&lt;/span&gt; 次。感谢您的点击！
The article has been viewed &lt;span id=&quot;busuanzi_value_page_pv&quot;&gt;&lt;/span&gt; times.Thank you for your visit!
&lt;/span&gt;</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&amp;lt;div align=&amp;quot;left&amp;quot;&amp;gt;
&amp;lt;img src=&amp;quot;http://7xray0.com1.z0.glb.clouddn.com/16-6-29/63527525.jpg&amp;quot; width=&amp;quot;300&amp;quo
    
    </summary>
    
      <category term="互联网" scheme="http://hubojing.github.io/categories/%E4%BA%92%E8%81%94%E7%BD%91/"/>
    
    
      <category term="photoshop" scheme="http://hubojing.github.io/tags/photoshop/"/>
    
  </entry>
  
  <entry>
    <title>Linux菜鸟初尝鲜 | First try on Linux</title>
    <link href="http://hubojing.github.io/2016/06/14/Linux%E8%8F%9C%E9%B8%9F%E5%88%9D%E5%B0%9D%E9%B2%9C/"/>
    <id>http://hubojing.github.io/2016/06/14/Linux菜鸟初尝鲜/</id>
    <published>2016-06-14T15:10:30.000Z</published>
    <updated>2016-10-23T15:26:46.338Z</updated>
    
    <content type="html"><![CDATA[<p>&lt;div align=&quot;left&quot;&gt;
&lt;img src=&quot;http://news.mydrivers.com/Img/20110826/2011082609513918.jpg&quot; width=&quot;300&quot; height=&quot;180&quot; alt=&quot;配图&quot; style=&quot;float:right;&quot;/&gt;</p>
<p><strong>大三认真学技术打开新世界，常叹为何不早入技术门！</strong>
<strong>I have learned technology to my best in my junior time,and I feel I should step into the technological world earlier!</strong></p>
<p>&lt;/div&gt;
&lt;!--more--&gt;
奈何大三事务多，惟愿考研考上给我又几年自学的机会……更认真地对待技术！
Too busy in the junior,may I can gain another several years to learn in the postgraduate stage.I will be more hard-working!
这一年，接触git、css、html，前端知识，尝试java，这学期又选了数据库sql，嵌入式系统Linux，还学了好用的工具Labview，这学期选的课都很实用！只是知识需要消化……</p>
<p>This year,I get to know git,css,html and fore-end knowledge,try java,and chose sql,linux and labview this semester,which are practical nowadays!Indeed,it takes time to understand them deeply.
一直想了解Linux，无从下手，最后还是在课堂上被老师带着走入了linux的世界。
Always want to know something about linux,but I just have no idea about it.Luckliy,I become to see you finally,linux.</p>
<blockquote>
<p>2016.6.22更新 Update 一要点</p>
</blockquote>
<p>昨天考完了嵌入式系统实验考试，get一个简单的要点：
I got a small but esstenial point in my linux exam,
armv4l-unknown-linux-gcc -o 开发板上的编译 winSCP's compiler
gcc -o 虚拟机上的编译 VM's compiler
分清两种编译器。Please make sure your compiler is right.
考试内容是开发板与虚拟机通信。开发板是client，虚拟机是server.（和之前的记录是相反的）
My exam is VM communicate with winSCP.The winCSP is client,and the VM is server.</p>
<blockquote>
<p>2016.6.14更新 Update 基础实验	熟悉Linux开发环境   Basic experiment  	Be familiar with Linux development environment</p>
</blockquote>
<p>熟悉Linux开发环境，学会基于S3C2410的Linux开发环境的配置和使用。使用Linux的armv4l-unknown-linux-gcc编译，使用基于NFS方式的下载调试，了解嵌入式开发的基本过程。
Be familiar with Linux development environment and learn configuration of Linux development environment based on S3C2410.Use compile of armv41-unknown-linux-gcc，use download and debug based on NFS mode,to learn the embedded development process.</p>
<h1 id="实验步骤experiment-steps">实验步骤		Experiment steps</h1>
<p>1、建立工作目录 Create work directory
2、编写程序源代码 Write code
3、编写Makefile Write makefile
4、编译应用程序	Compile program
5、下载调试	Download and debug</p>
<h1 id="重难点-important-point">重难点 Important point</h1>
<p>Makefile文件定义了一系列的规则，它指明了哪些文件需要编译，哪些文件需要先编译，哪些文件需要重新编译等等更为复杂的命令。使用它带来的好处就是自动编译，你只需要敲一个“make”命令整个工程就可以实现自动编译。
Makefile definite a series of rules,and it shows which files need compile,which first to be compiled,and which need recompile.The benefit is a simple &quot;make&quot; can finish automatic compilation.</p>
<p>mount -t nfs -o nolock 192.168.0.56:/arm2410cl /host //超级终端中执行 carried out under the super terminal
<strong>注意：IP地址需要根据宿主PC机的实际情况修改成对应arm2410cl目录。</strong>
<strong>Attention:IP should be changed according to the real condition.</strong></p>
<p>编译、修改程序都是在宿主机（本地PC机）上进行，不能在超级终端下进行。
Compile and modify the program both in the host (local PC), and it can not be carried out under the super terminal.</p>
<h1 id="课堂笔记备忘">课堂笔记备忘</h1>
<h2 id="服务器与客户端通信">服务器与客户端通信</h2>
<p>虚拟机上（地址192.168.1.12）VM：
cd /arm2410cl/
cd exp
cd basic
cd server（先把server.c和client.c拷入对应文件夹下 into right files）
ls
gcc -o client client.c //编译compile
armv41-unkown-linux-gcc -o server server.c //编译compile
<strong>注意：修改了源文件记得要编译，保存还不够。</strong>
<strong>Attention:It is vital to compile,not just save file.</strong></p>
<p>./client
123456</p>
<p>开发板(地址192.168.1.121)winSCP：
ifconfig eth0 192.168.1.121
mount -t nfs -o nolock 192.168.1.12:/arm2410c1 /host （挂载mount）
cd /host
cd exp
cd basic
cd server
ls
（可以ping 192.168.1.12检查一下是否连通 test if it is linked.）
./server
123456</p>
<p>exit退出连接</p>
<p>程序只能是客户端向服务端发送信息，不能反过来。
Information can only be sent to the server from client which can't be reversed because of the program setting.</p>
<p>原程序Original program：
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div></pre></td><td class="code"><pre><div class="line">int <span class="function"><span class="title">main</span></span>()</div><div class="line">&#123;</div><div class="line">     char buffer[BUFFER_SIZE];</div><div class="line">    struct sockaddr_in client_addr;</div><div class="line">    socklen_t length;</div><div class="line">	   int conn;</div><div class="line">	  int len;</div><div class="line">	//int fork_id;</div><div class="line">///定义sockfd</div><div class="line">   int server_sockfd = socket(AF_INET,SOCK_STREAM, 0);</div><div class="line"> </div><div class="line">   ///定义sockaddr_in</div><div class="line">   struct sockaddr_in server_sockaddr;</div><div class="line">   server_sockaddr.sin_family = AF_INET;</div><div class="line">    server_sockaddr.sin_port = htons(MYPORT);</div><div class="line">    server_sockaddr.sin_addr.s_addr = htonl(INADDR_ANY);</div><div class="line"></div><div class="line">    ///<span class="built_in">bind</span>，成功返回0，出错返回-1</div><div class="line">   <span class="keyword">if</span>(<span class="built_in">bind</span>(server_sockfd,(struct sockaddr *)&amp;server_sockaddr,sizeof(server_sockaddr))==-1)</div><div class="line">    &#123;</div><div class="line">        perror(<span class="string">"bind"</span>);</div><div class="line">        <span class="built_in">exit</span>(1);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    ///listen，成功返回0，出错返回-1</div><div class="line">    <span class="keyword">if</span>(listen(server_sockfd,QUEUE) == -1)</div><div class="line">    &#123;</div><div class="line">        perror(<span class="string">"listen"</span>);</div><div class="line">         <span class="built_in">exit</span>(1);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    ///客户端套接字</div><div class="line">   </div><div class="line">   length = sizeof(client_addr);</div><div class="line"></div><div class="line">     ///成功返回非负描述字，出错返回-1</div><div class="line">	//<span class="keyword">while</span>(1)</div><div class="line">	//&#123;</div><div class="line">    conn = accept(server_sockfd, (struct sockaddr*)&amp;client_addr, &amp;length);</div><div class="line">    <span class="keyword">if</span>(conn&lt;0)</div><div class="line">     &#123;</div><div class="line">        perror(<span class="string">"connect"</span>);</div><div class="line">         <span class="built_in">exit</span>(1);</div><div class="line">     &#125;</div><div class="line">	fork_id=fork();</div><div class="line">	<span class="keyword">if</span>(fork_id==0)</div><div class="line">	&#123;</div><div class="line">   <span class="keyword">while</span>(1)</div><div class="line">     &#123;</div><div class="line">        memset(buffer,0,sizeof(buffer));</div><div class="line">       len = recv(conn, buffer, sizeof(buffer),0);</div><div class="line">       <span class="keyword">if</span>(strcmp(buffer,<span class="string">"exit\n"</span>)==0)</div><div class="line">           <span class="built_in">break</span>;</div><div class="line">       fputs(buffer, stdout);</div><div class="line">        send(conn, buffer, len, 0);</div><div class="line">    &#125;</div><div class="line">    close(conn);</div><div class="line">    close(server_sockfd);</div><div class="line">	<span class="built_in">return</span>(0);//新程序去掉了这一行</div><div class="line">   //<span class="built_in">exit</span>(0);</div><div class="line">&#125;</div><div class="line">/*<span class="keyword">else</span></div><div class="line">&#123;</div><div class="line"></div><div class="line">&#125;</div><div class="line">&#125;*/</div><div class="line"> &#125;</div></pre></td></tr></table></figure></p>
<p>原程序是一个服务器只能挂载一个客户端。 The original program is a server which can only mount one client.
程序修改了下，使一个服务器可以挂载两个客户端（可以构建聊天系统）。 After modifing program,it can mount two clients(which can create a chat system).
要先连接服务器，再连接客户端。 Connect the server first,then connect the client.</p>
<p>rm server 删除server文件 delete server file
两端ps -a看一下是否退出。  use&quot;ps -a&quot; to see if the system exits.</p>
<h2 id="挂载驱动mount-the-drive">挂载驱动	Mount the drive</h2>
<p>在开发板上winSCP：
mount -t nfs -o nolock 192.168.1.12:/arm2410cl /host
cd host
cd exp
cd basic
cd pwm_motor
lsmod pwm_ad.o
cd pwm_AD
insmod pwm_ad.o
//rmmod pwm_ad.o 删除
cd pwm_test
./test_dcm_main</p>
<p>虚拟机上VM：
cd pwm_motor
cd pwm_test
make clean
make
cd ..
cd pwm_test</p>
<h1 id="附录客户端和服务器程序appendix-clientc-amp-serverc">附录	客户端和服务器程序	Appendix  Client.c &amp; Server.c</h1>
<h2 id="serverc">server.c</h2>
<p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include &lt;sys/types.h&gt;</span></div><div class="line"> <span class="comment">#include &lt;sys/socket.h&gt;</span></div><div class="line"> <span class="comment">#include &lt;stdio.h&gt;</span></div><div class="line"><span class="comment">#include &lt;netinet/in.h&gt;</span></div><div class="line"> <span class="comment">#include &lt;arpa/inet.h&gt;</span></div><div class="line"><span class="comment">#include &lt;unistd.h&gt;</span></div><div class="line"><span class="comment">#include &lt;string.h&gt;</span></div><div class="line"> <span class="comment">#include &lt;stdlib.h&gt;</span></div><div class="line"> <span class="comment">#include &lt;fcntl.h&gt;</span></div><div class="line"><span class="comment">#include &lt;sys/shm.h&gt;</span></div><div class="line"></div><div class="line"> <span class="comment">#define MYPORT  8887</span></div><div class="line"> <span class="comment">#define QUEUE   20</span></div><div class="line"> <span class="comment">#define BUFFER_SIZE 1024</span></div><div class="line"></div><div class="line">int <span class="function"><span class="title">main</span></span>()</div><div class="line">&#123;</div><div class="line">     char buffer[BUFFER_SIZE];</div><div class="line">    struct sockaddr_in client_addr;</div><div class="line">    socklen_t length;</div><div class="line">	   int conn;</div><div class="line">	  int len;</div><div class="line">///定义sockfd</div><div class="line">   int server_sockfd = socket(AF_INET,SOCK_STREAM, 0);</div><div class="line"> </div><div class="line">   ///定义sockaddr_in</div><div class="line">   struct sockaddr_in server_sockaddr;</div><div class="line">   server_sockaddr.sin_family = AF_INET;</div><div class="line">    server_sockaddr.sin_port = htons(MYPORT);</div><div class="line">    server_sockaddr.sin_addr.s_addr = htonl(INADDR_ANY);</div><div class="line"></div><div class="line">    ///<span class="built_in">bind</span>，成功返回0，出错返回-1</div><div class="line">   <span class="keyword">if</span>(<span class="built_in">bind</span>(server_sockfd,(struct sockaddr *)&amp;server_sockaddr,sizeof(server_sockaddr))==-1)</div><div class="line">    &#123;</div><div class="line">        perror(<span class="string">"bind"</span>);</div><div class="line">        <span class="built_in">exit</span>(1);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    ///listen，成功返回0，出错返回-1</div><div class="line">    <span class="keyword">if</span>(listen(server_sockfd,QUEUE) == -1)</div><div class="line">    &#123;</div><div class="line">        perror(<span class="string">"listen"</span>);</div><div class="line">         <span class="built_in">exit</span>(1);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    ///客户端套接字</div><div class="line">   </div><div class="line">   length = sizeof(client_addr);</div><div class="line"></div><div class="line">     ///成功返回非负描述字，出错返回-1</div><div class="line">    conn = accept(server_sockfd, (struct sockaddr*)&amp;client_addr, &amp;length);</div><div class="line">    <span class="keyword">if</span>(conn&lt;0)</div><div class="line">     &#123;</div><div class="line">        perror(<span class="string">"connect"</span>);</div><div class="line">         <span class="built_in">exit</span>(1);</div><div class="line">     &#125;</div><div class="line"></div><div class="line">   <span class="keyword">while</span>(1)</div><div class="line">     &#123;</div><div class="line">        memset(buffer,0,sizeof(buffer));</div><div class="line">       len = recv(conn, buffer, sizeof(buffer),0);</div><div class="line">       <span class="keyword">if</span>(strcmp(buffer,<span class="string">"exit\n"</span>)==0)</div><div class="line">           <span class="built_in">break</span>;</div><div class="line">       fputs(buffer, stdout);</div><div class="line">        send(conn, buffer, len, 0);</div><div class="line">    &#125;</div><div class="line">    close(conn);</div><div class="line">    close(server_sockfd);</div><div class="line">   <span class="built_in">return</span> 0;</div><div class="line"> &#125;</div></pre></td></tr></table></figure></p>
<h2 id="clientc">client.c</h2>
<p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div></pre></td><td class="code"><pre><div class="line"> <span class="comment">#include &lt;sys/types.h&gt;</span></div><div class="line"> <span class="comment">#include &lt;sys/socket.h&gt;</span></div><div class="line"> <span class="comment">#include &lt;stdio.h&gt;</span></div><div class="line"> <span class="comment">#include &lt;netinet/in.h&gt;</span></div><div class="line"> <span class="comment">#include &lt;arpa/inet.h&gt;</span></div><div class="line"> <span class="comment">#include &lt;unistd.h&gt;</span></div><div class="line"> <span class="comment">#include &lt;string.h&gt;</span></div><div class="line"><span class="comment">#include &lt;stdlib.h&gt;</span></div><div class="line"><span class="comment">#include &lt;fcntl.h&gt;</span></div><div class="line"><span class="comment">#include &lt;sys/shm.h&gt;</span></div><div class="line"></div><div class="line"><span class="comment">#define MYPORT  8887</span></div><div class="line"><span class="comment">#define BUFFER_SIZE 1024</span></div><div class="line"></div><div class="line">int <span class="function"><span class="title">main</span></span>()</div><div class="line">&#123;</div><div class="line">    ///定义sockfd</div><div class="line">   int sock_cli = socket(AF_INET,SOCK_STREAM, 0);</div><div class="line"></div><div class="line">   ///定义sockaddr_in</div><div class="line">    struct sockaddr_in servaddr;</div><div class="line">    memset(&amp;servaddr, 0, sizeof(servaddr));</div><div class="line">    servaddr.sin_family = AF_INET;</div><div class="line">    servaddr.sin_port = htons(MYPORT);  ///服务器端口</div><div class="line">    servaddr.sin_addr.s_addr = inet_addr(<span class="string">"192.168.1.12"</span>);  ///服务器ip</div><div class="line"></div><div class="line">    ///连接服务器，成功返回0，错误返回-1</div><div class="line">    <span class="keyword">if</span> (connect(sock_cli, (struct sockaddr *)&amp;servaddr, sizeof(servaddr)) &lt; 0)</div><div class="line">    &#123;</div><div class="line">        perror(<span class="string">"connect"</span>);</div><div class="line">        <span class="built_in">exit</span>(1);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    char sendbuf[BUFFER_SIZE];</div><div class="line">    char recvbuf[BUFFER_SIZE];</div><div class="line">    <span class="keyword">while</span> (fgets(sendbuf, sizeof(sendbuf), stdin) != NULL)</div><div class="line">    &#123;</div><div class="line">        send(sock_cli, sendbuf, strlen(sendbuf),0); ///发送</div><div class="line">        <span class="keyword">if</span>(strcmp(sendbuf,<span class="string">"exit\n"</span>)==0)</div><div class="line">          <span class="built_in">break</span>;</div><div class="line">        recv(sock_cli, recvbuf, sizeof(recvbuf),0); ///接收</div><div class="line">       fputs(recvbuf, stdout);</div><div class="line"></div><div class="line">       memset(sendbuf, 0, sizeof(sendbuf));</div><div class="line">       memset(recvbuf, 0, sizeof(recvbuf));</div><div class="line">  &#125;</div><div class="line"></div><div class="line">   close(sock_cli);</div><div class="line">    <span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>&lt;span id=&quot;busuanzi_container_page_pv&quot;&gt;</p>
<blockquote>
<p><strong>本文已被阅读 &lt;span id=&quot;busuanzi_value_page_pv&quot;&gt;&lt;/span&gt; 次。感谢您的点击！</strong>
<strong>The article has been viewed &lt;span id=&quot;busuanzi_value_page_pv&quot;&gt;&lt;/span&gt; times.Thank you for your visit!</strong>
&lt;/span&gt;</p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&amp;lt;div align=&amp;quot;left&amp;quot;&amp;gt;
&amp;lt;img src=&amp;quot;http://news.mydrivers.com/Img/20110826/2011082609513918.jpg&amp;quot; width=&amp;quot;300&amp;qu
    
    </summary>
    
      <category term="通信工程" scheme="http://hubojing.github.io/categories/%E9%80%9A%E4%BF%A1%E5%B7%A5%E7%A8%8B/"/>
    
    
      <category term="linux" scheme="http://hubojing.github.io/tags/linux/"/>
    
      <category term="嵌入式系统" scheme="http://hubojing.github.io/tags/%E5%B5%8C%E5%85%A5%E5%BC%8F%E7%B3%BB%E7%BB%9F/"/>
    
  </entry>
  
  <entry>
    <title>将hexo+github博客同步托管至coding</title>
    <link href="http://hubojing.github.io/2016/04/06/%E5%B0%86hexo-github%E5%8D%9A%E5%AE%A2%E5%90%8C%E6%AD%A5%E6%89%98%E7%AE%A1%E8%87%B3coding/"/>
    <id>http://hubojing.github.io/2016/04/06/将hexo-github博客同步托管至coding/</id>
    <published>2016-04-06T08:14:56.000Z</published>
    <updated>2016-04-06T11:07:13.218Z</updated>
    
    <content type="html"><![CDATA[<p>由于百度蜘蛛把github屏蔽了，导致百度搜不到博客文章，let me feel a little unhappy，为了扩大网站收录率，我将hexo-github博客同步托管到国内coding上。
胡博靖的个人博客：http://hubojing.coding.me
胡博靖的个人博客：http://hubojing.coding.me/hubojing
胡博靖的个人博客：http://hubojing.github.io
Both right!
<strong>外网用github，内网用coding。</strong>
&lt;!--more--&gt;</p>
<h2 id="coding创建新项目">coding创建新项目</h2>
<p><img src="http://7xrn7f.com1.z0.glb.clouddn.com/16-4-6/98344138.jpg" alt="创建页面">
项目名称最好是和你的用户名相同，这样直接访问hubojing.coding.me即可，否则需要访问hubojing.coding.me/set-name。</p>
<p><img src="http://7xrn7f.com1.z0.glb.clouddn.com/16-4-6/74537725.jpg" alt="ssh获取">
复制后写入repo中。具体看下一步。</p>
<h2 id="config文件配置">config文件配置</h2>
<p>hexo根目录文件_config.yml修改配置如下：
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">deploy:</div><div class="line">  <span class="built_in">type</span>: git</div><div class="line">  repo: </div><div class="line">        coding: git@github.com:hubojing/hubojing.github.io.git</div><div class="line">        github: git@git.coding.net:hubojing/hubojing.git</div></pre></td></tr></table></figure></p>
<h2 id="ssh设置">SSH设置</h2>
<p>这里SSH设置和github类似。我直接用的部署github时生成的SSH。
<img src="http://7xrn7f.com1.z0.glb.clouddn.com/16-4-6/370752.jpg" alt="coding中ssh设置">
打开id_rsa.pub文件，复制全部内容，填写到SSH公钥一栏中，名称自定。完成后点击“添加”即可。
<img src="http://7xrn7f.com1.z0.glb.clouddn.com/16-4-6/56664564.jpg" alt="hexo根目录下"></p>
<p>添加后，在git bash命令输入(我是在hexo根目录下bash here)：
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ssh -T git@git.coding.net</div></pre></td></tr></table></figure></p>
<p>它会弹出一个警告，是否允许操作，输入yes就可以。
接着会询问你设置的密码，如果之前部署github时设置了，就输入密码，输入时频幕上是看不到任何反应的，但当你正确输入并回车后，它会显示：
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Coding.net Tips : [Hello ! You<span class="string">'ve conected to Coding.net by SSH successfully! ]</span></div></pre></td></tr></table></figure></p>
<p>这表示你的SSH设置成功了！</p>
<h2 id="开启pages服务">开启Pages服务</h2>
<p><strong>最后一步了！</strong>
在hexo根目录下，
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">cd</span> <span class="built_in">source</span></div><div class="line">touch Staticfile  <span class="comment">#名字必须是Staticfile</span></div></pre></td></tr></table></figure></p>
<p>coding.net需要此文件来作为以静态文件部署的标志，就是说看到Staticfile就知道按照静态文件来发布。</p>
<p><img src="http://7xrn7f.com1.z0.glb.clouddn.com/16-4-6/93624849.jpg" alt="Pages服务">
<strong>注意：Pages服务分支填master！因为之前配置的分支是master。否则你将看到404 Not Found！</strong>（我不会告诉你我就是这样试了好几遍才找到原因……）</p>
<hr>
<p><strong>OK!All have done!Congratulations!</strong>
现在快去看看吧！<a href="http://hubojing.coding.me" target="_blank" rel="external">胡博靖的技术博客</a>
欢迎在github上关注我：<a href="https://github.com/hubojing" target="_blank" rel="external">hubojing</a></p>
<h2 id="参考资料">参考资料</h2>
<p><a href="http://www.jianshu.com/p/7ad9d3cd4d6e" target="_blank" rel="external">hexo干货系列（四）</a>
<a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">hexo官网文档规范</a></p>
<hr>
<p>&lt;span id=&quot;busuanzi_container_page_pv&quot;&gt;
本文已被阅读 &lt;span id=&quot;busuanzi_value_page_pv&quot;&gt;&lt;/span&gt; 次。感谢您的点击！
&lt;/span&gt;</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;由于百度蜘蛛把github屏蔽了，导致百度搜不到博客文章，let me feel a little unhappy，为了扩大网站收录率，我将hexo-github博客同步托管到国内coding上。
胡博靖的个人博客：http://hubojing.coding.me
胡博靖
    
    </summary>
    
      <category term="互联网" scheme="http://hubojing.github.io/categories/%E4%BA%92%E8%81%94%E7%BD%91/"/>
    
    
      <category term="blog" scheme="http://hubojing.github.io/tags/blog/"/>
    
      <category term="hexo" scheme="http://hubojing.github.io/tags/hexo/"/>
    
      <category term="优化" scheme="http://hubojing.github.io/tags/%E4%BC%98%E5%8C%96/"/>
    
      <category term="教程" scheme="http://hubojing.github.io/tags/%E6%95%99%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>PPT动画制作之自定义动画</title>
    <link href="http://hubojing.github.io/2016/03/22/PPT%E5%8A%A8%E7%94%BB%E5%88%B6%E4%BD%9C%E4%B9%8B%E8%87%AA%E5%AE%9A%E4%B9%89%E5%8A%A8%E7%94%BB/"/>
    <id>http://hubojing.github.io/2016/03/22/PPT动画制作之自定义动画/</id>
    <published>2016-03-22T13:18:04.000Z</published>
    <updated>2016-03-26T13:34:12.974Z</updated>
    
    <content type="html"><![CDATA[<h1 id="323更新">3.23更新</h1>
<p>昨天写完总觉得最终效果差点什么，后来发现是文字涌入时缺少了旋转效果。
现修改完整。
附上最新GIF图：（可看出差异）
<img src="http://i4.tietuku.cn/63240837be6edf98.gif" alt="修改后">
&lt;!--more--&gt;</p>
<hr>
<p>话不多说，先看效果：
<img src="http://i13.tietuku.cn/b83ea174d690471a.gif" alt="闪烁背景和文字涌入特效"></p>
<p>该动画分为两部分：<strong>闪烁背景+文字涌入特效</strong></p>
<h2 id="闪烁背景">闪烁背景</h2>
<p>** 步骤：**</p>
<h3 id="1改个色">1.改个色</h3>
<p>（背景色）</p>
<h3 id="2添个形">2.添个形</h3>
<p>（用基本形状添加）</p>
<h3 id="3改设置">3.改设置</h3>
<p>（形状外框透明、选择颜色）</p>
<h3 id="4复个制">4.复个制</h3>
<p>（多次复制，铺满画布）</p>
<h3 id="5改大小">5.改大小</h3>
<p>（不能每个形状一样大，那样闪烁不自然）</p>
<h3 id="6改透度">6.改透度</h3>
<p>（使闪烁更自然）</p>
<h3 id="7添动画">7.添动画</h3>
<p>（全选统一添加“渐变”动作）</p>
<h3 id="8调时间">8.调时间</h3>
<p>（显示高级进程表，调整时长，不要都从最开始出现；从“之前”开始）</p>
<p><strong>完成。</strong></p>
<hr>
<h2 id="文字涌入特效">文字涌入特效</h2>
<p><strong>步骤：</strong></p>
<h3 id="1抠个字">1.抠个字</h3>
<p>（用PS写几个需要的文字，依次用魔棒选中每个文字，同时复制粘贴到另一图层，然后用<strong>裁剪</strong>工具剪到合适大小，另存）</p>
<h3 id="2插个图">2.插个图</h3>
<h3 id="3复个制">3.复个制</h3>
<p>（3-4次）</p>
<h3 id="4围一圈">4.围一圈</h3>
<h3 id="5调大小">5.调大小</h3>
<h3 id="6添动画">6.添动画</h3>
<p>（外围一圈加退出中的“缩放”，缩小到屏幕中心。中间加“渐变式缩放”，下面文字“飞入”和强调里的“陀螺旋”）</p>
<h3 id="7调时间">7.调时间</h3>
<p>（时间控制好，先缩放，在渐变式缩放，最后飞入）</p>
<p><strong>完工。</strong></p>
<hr>
<p>&lt;span id=&quot;busuanzi_container_page_pv&quot;&gt;
本文已被阅读 &lt;span id=&quot;busuanzi_value_page_pv&quot;&gt;&lt;/span&gt; 次。感谢您的点击！
&lt;/span&gt;</p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;323更新&quot;&gt;3.23更新&lt;/h1&gt;
&lt;p&gt;昨天写完总觉得最终效果差点什么，后来发现是文字涌入时缺少了旋转效果。
现修改完整。
附上最新GIF图：（可看出差异）
&lt;img src=&quot;http://i4.tietuku.cn/63240837be6edf98.gif
    
    </summary>
    
      <category term="互联网" scheme="http://hubojing.github.io/categories/%E4%BA%92%E8%81%94%E7%BD%91/"/>
    
    
      <category term="PPT动画" scheme="http://hubojing.github.io/tags/PPT%E5%8A%A8%E7%94%BB/"/>
    
  </entry>
  
  <entry>
    <title>显示技术蹭课笔记 | Display Techique Learning Note</title>
    <link href="http://hubojing.github.io/2016/03/17/%E6%98%BE%E7%A4%BA%E6%8A%80%E6%9C%AF%E8%B9%AD%E8%AF%BE%E7%AC%94%E8%AE%B0/"/>
    <id>http://hubojing.github.io/2016/03/17/显示技术蹭课笔记/</id>
    <published>2016-03-17T13:55:30.000Z</published>
    <updated>2016-10-23T15:26:30.935Z</updated>
    
    <content type="html"><![CDATA[<p>&lt;div align=&quot;left&quot;&gt;
&lt;img src=&quot;http://img10.360buyimg.com/popWaterMark/g13/M02/09/0C/rBEhUlKdmzIIAAAAAAA7TyA5YywAAGS_wDaFdAAADtn918.jpg&quot; width=&quot;300&quot; height=&quot;180&quot; alt=&quot;配图&quot; style=&quot;float:right;&quot;/&gt;</p>
<p><strong>蹭课，科普为主。顺便复习一些基础电路知识。</strong>
<strong>I am not a student of this class but want to listen to the lecture for popularization of science to myself.By the way reviewing some of the basic circuit knowledge.</strong>
给这篇文章写英译好辛苦……
It is hard to write English translation for this article.
<strong>肖大大图书镇楼！</strong>
<strong>Uncle Xiao's book is superior!</strong></p>
<p>&lt;/div&gt;
&lt;!--more--&gt;</p>
<blockquote>
<p>2016.5.20 更新 Update</p>
</blockquote>
<h1 id="显示技术实验部分-experimental-part">显示技术实验部分 Experimental part</h1>
<p>学会了怎么把电路图和实物电路联系起来。学会了就好简单……果然授人以鱼不如授人以渔！
Learnt how to link circuit diagram to the phhysical diagram.It's easy enough.Give a man a fish and you feed him for a day.Teach him how to fish and you feed him for a lifetime.
但不敢去测量上万伏的高压……为自身的局限性感到难过。
But I dare not to measure the high pressure of tens of thousands of volts.I feel terrible for my own limitation.</p>
<h1 id="几个名词-several-noums">几个名词 Several noums</h1>
<h2 id="声表面波滤波器-surface-acoustic-wave-filter">声表面波滤波器 Surface acoustic wave filter</h2>
<p>声表面波滤波器(SAWF，surface acoustic wave filter)是利用石英、铌酸锂、钛酸钡晶体具有压电效应的性质做成的。所谓压电效应，即是当晶体受到机械作用时，将产生与压力成正比的电场的现象。具有压电效应的晶体，在受到电信号的作用时，也会产生弹性形变而发出机械波（声波），即可把电信号转为声信号。由于这种声波只在晶体表面传播，故称为声表面波。
SAWF uses the piezoelectric effect property of quartz,lithium niobate,barium titanate.As for piezoelectric effect,when the crystal is mechanical functioned,it will produce the electric field which is directly proportional to the pressure.Crystal which has the piezoelectric effect,when the electrical signal is added,will generate a elastic deformation and send a mechanical wave(sonic wave),so it converts electrical signal to acoustic signal.It is called surface acoustic wave for this wave only transmit on the crystal surface.</p>
<h2 id="行可变电容-line-variable-capacitor">行可变电容 Line variable capacitor</h2>
<p>&lt;img src=&quot;http://7xray0.com1.z0.glb.clouddn.com/16-5-20/33612917.jpg&quot; width=&quot;600&quot; height=&quot;400&quot; alt=&quot;行可变电容&quot;/&gt;</p>
<h2 id="行可变电感-row-variable-inductor">行可变电感 Row variable inductor</h2>
<p>&lt;img src=&quot;http://www.liheng-dg.cn/uploads/allimg/140221/1-14022115052H18.png&quot; width=&quot;600&quot; height=&quot;400&quot; alt=&quot;行可变电感&quot;/&gt;</p>
<h2 id="中周-medium-cycle-transformer">中周 Medium cycle transformer</h2>
<p>电视中周：电视机里的中周标准称呼是中频变压器。
The standard name is medium cycle transformer.
&lt;img src=&quot;http://img.qy6.com/new5/szvena/1313633487.jpg&quot; width=&quot;600&quot; height=&quot;400&quot; alt=&quot;中周&quot;/&gt;</p>
<p>电路图上，三极管外带虚线的圆圈是指带散热的三极管，同时接地表屏蔽。
On the circuit diagram,the dotted line with the circle triode refers to the triode with heat pipe,which is at earth potential to shield.</p>
<h1 id="实验现场">实验现场</h1>
<p>&lt;img src=&quot;http://7xray0.com1.z0.glb.clouddn.com/16-5-20/58196995.jpg&quot; width=&quot;400&quot; height=&quot;250&quot; alt=&quot;电路图&quot;/&gt; &lt;img src=&quot;http://7xray0.com1.z0.glb.clouddn.com/16-5-20/69333137.jpg&quot; width=&quot;400&quot; height=&quot;250&quot; alt=&quot;故障示教板&quot;/&gt; &lt;img src=&quot;http://7xray0.com1.z0.glb.clouddn.com/16-5-20/29028249.jpg&quot; width=&quot;400&quot; height=&quot;250&quot; alt=&quot;实验&quot;/&gt; （不配四张图，强迫症不要打我哟~）</p>
<blockquote>
<p>2016.5.17 更新 Update
大部分资料来自维基百科。
Most of the information comes from Wikipedia.</p>
</blockquote>
<h1 id="平板显示器-flat-panel-display">平板显示器 Flat panel display</h1>
<h2 id="简介-brief-introduction">简介 Brief introduction</h2>
<p>平板屏幕包含多种科技，使显示器（video display）比传统电视机（traditional television）或显示器（通常由阴极射线管制成）更加轻薄，厚度通常小于4英寸（100 mm）。
Flat panel display includes many technologies,which makes video display lighter than traditional television or display(usually made of cathode ray tube),and thickness is usually less than 4 inches.</p>
<h2 id="种类-type">种类 Type</h2>
<p>DLP (数位光处理) Digital light processing
等离子显示器 Plasma panel display
液晶显示器（LCDs） Liquid crystal display
薄膜晶体管液晶显示器（TFT-LCDs） Thin film transistor liquid crystal display
有机发光二极管显示器（OLEDs） Organic light emitting diode display
发光二极管显示器（LED） Light-emitting diode display
电致发光显示器（ELDs） Electroluminescent display
表面传导电子发射显示器（SEDs） Surface conduction electron emission display
场发射显示器（FEDs）（ 纳米-发射显示器（NEDs）） Field emission display</p>
<p>名字多么洋气~
The names has foreign flavour~</p>
<p>这张图有点意思~
This picture is kind of interesting~
<img src="http://7xray0.com1.z0.glb.clouddn.com/16-5-17/60641952.jpg" alt="显示器"></p>
<h1 id="crt显示器-crt-display">CRT显示器 CRT display</h1>
<h2 id="简介-brief-introduction">简介 Brief introduction</h2>
<p>阴极射线管（Cathode ray tube，缩写：CRT，又称“显像管”、布劳恩管）是一种用于显示系统的物理仪器，曾广泛应用于示波器、电视机和显示器上。它是利用阴极电子枪发射电子，在阳极高压的作用下，射向萤光屏，使萤光粉发光，同时电子束在偏转磁场的作用下，作上下左右的移动来达到扫描的目的。早期的阴极射线管仅能显示光线的强弱，展现黑白画面。而彩色阴极射线管具有红、绿色和蓝色三支电子枪，三支电子枪同时发射电子打在屏幕玻璃上磷化物上来显示颜色。
由于它笨重、耗电且较占空间，2000年代起几乎被轻巧、省电且省空间的液晶显示器取代。阴极射线管的市场剩下极重视色彩表现及低温环境下等特殊用途。
Cathode ray tube,is a physical instrument which uses to display system.It used to be applied to oscilloscope,TV and display.It uses the cathode electron gun for electron emission.Under the action of anode high voltage,it emits to the screen,which makes powder luminesce.At the same time, the electron beam moves up and down to reach the purpose of scanning by the action of the deflection magnetic field.Early cathode ray tube can only show the intensity of light,and to show black and white picture.Color cathode ray tube have red, green and blue electron guns, and this three electron guns emit electrons to hit the glass screen's phosphides to show color.
Because of its bulky, power consumption and space waste,light, power saving and space saving LCD monitor was used in the 2000s instead.A cathode ray tube market left pole attached color performance and low temperature environment and other special purposes.</p>
<p><strong>CRT在高精尖领域仍扮演着重要角色。</strong>
<strong>CRT still plays an important role in the high-tech field.</strong></p>
<h1 id="液晶显示器-liquid-crystal-display">液晶显示器 liquid-crystal display</h1>
<h2 id="简介-brief-introduction">简介 Brief introduction</h2>
<p>液晶显示器（英语：liquid-crystal display，缩写：LCD）为平面薄型的显示设备，由一定数量的彩色或黑白像素组成，放置于光源或者反射面前方。液晶显示器功耗低，因此倍受工程师青睐，适用于使用电池的电子设备。
Liquid-crystal display is the flat panel display device,which consists of a number of color or black and white pixels,and place in the light source or in front of the reflecting surface.</p>
<h2 id="显示原理-revelation-principle">显示原理 Revelation principle</h2>
<p>在不加电压下，光线会沿着液晶分子的间隙前进而转折90度，所以光可通过。但加入电压后，光顺着液晶分子的间隙直线前进，因此光被滤光板所阻隔。（让我想到偏振……）
液晶是具有流动特性的物质，所以只需外加很微小的力量即可使液晶分子运动，以最常见普遍的向列型液晶为例，液晶分子可轻易的借着电场作用使得液晶分子转向，由于液晶的光轴与其分子轴相当一致，故可借此产生光学效果，而当加于液晶的电场移除消失时，液晶将借着其本身的弹性及黏性，液晶分子将十分迅速的恢复原来未加电场前的状态。
Without voltage, the light will move along the gap between the liquid crystal molecules and turn 90 degrees, so the light can pass.But after the voltage is added,light goes along the liquid crystal molecules of the gap straight forward,so the light is blocked by the filter board. (Let me think of polarization.)</p>
<h1 id="等离子显示器-plasma-display-panel">等离子显示器 Plasma Display Panel</h1>
<h2 id="简介-brief-introduction">简介 Brief introduction</h2>
<p>等离子显示器（Plasma Display Panel）又称为电浆显示屏，是一种平面显示屏幕，光线由两块玻璃之间的离子，射向磷质而发出。与液晶显示器不同，放出的气体并无水银成分，而是使用惰性气体氖及氙混合而成，这种气体是无害气体。
等离子显示器甚为光亮（1000 lx或以上），可显示更多种颜色，也可制造出较大面积的显示屏，最大对角可达381厘米（150吋）。等离子显示屏的对比度亦高，可制造出全黑效果，对观看电影尤其适合。显示屏厚度只有6厘米，连同其他电路板，厚度亦只有10厘米。
Plasma display panel is a flat display screen.Light is emitted to phosphorous by the ion between the two classes.Unlike liquid crystal display,the gas released has no mercury,it mixed inert gas such as neon,xenon and so on,which are harmless.
The plasma display is very bright (1000 LX or above),and it can show more colors,it also can be made big screen,which the maximum diagonal up to 381 cm (150 inches).The contrast is high, and it can create a full black effect,especially suitable for watching movies.The thickness of screen is only 6 cm,combined with other circuit boards, the thickness is only 10 cm.</p>
<h2 id="原理-principle">原理 Principle</h2>
<p>等离子的发光原理是在真空玻璃管中注入惰性气体或水银蒸气，加电压之后，使气体产生等离子效应，放出紫外线，激发荧光粉而产生可见光，利用激发时间的长短来产生不同的亮度。等离子显示器中，每一个像素都是三个不同颜色（三原色）的等离子发光体所产生的。由于它是每个独立的发光体在同一时间一次点亮的，所以特别清晰鲜明。等离子显示器的使用寿命约5~6万个小时。随着使用的时间的增加，其亮度会衰退。
The principle of plasma luminescence is to inject inert gas or mercury vapor into a vacuum glass tube.After the voltage is added, the gas is produced by the plasma effect, the ultraviolet ray is emitted, and the fluorescent powder is excited to generate visible light, and the excitation time is used to generate different brightness.In the plasma display, each pixel has three different colors (RGB) of the plasma generated by the luminous body.Since each individual light body is litted at the same time, so it is clear and bright.The service life of the plasma display is about 5~6 ten thousand hours. With the increase of the use of time, the brightness of the plasma display will decline.</p>
<p>**【区别】**等离子显示器并不是液晶显示器。后者的显示器虽然也很轻薄，但是用的技术却是大不相同。液晶显示器通常会使用一到两个大型萤光灯或是LED当作其背光源，在背光源上面的液晶面板则是利用遮罩的原理让显示器显示出不同颜色。
**【Difference】**Plasma display is not liquid crystal display.Although the latter is also very thin,the technology is different.Liquid crystal display usually use one or two large fluorescent lamp or LED as the backlight,above the backlight to the LCD panel using mask principle to show different colors.</p>
<h1 id="云电视-cloud-tv">云电视 Cloud TV</h1>
<h2 id="简介-brief-introduciton">简介 Brief introduciton</h2>
<p>云电视是应用云计算、云存储技术的电视产品，是云设备的一种。通俗地讲，就是用户不需要单独再为自家的电视配备所有互联网功能或内容，将电视连上网络，就可以随时从外界调取自己需要的资源或信息，比如说，可以在云电视里安装使用各种即时通讯软件，在看电视的同时，进行社交、办公等等。
Cloud TV,which is the application of cloud computing and cloud storage technology,is a kind of cloud devices.Generally speaking,users do not need a separate device for their own television equipped with all Internet function or information.After the TV is connected to the network,you can get what you want at any times.For example, you can install and use a variety of instant messaging software, while watching TV at the same time, social, office and so on.</p>
<h1 id="3d显示器-3d-display">3D显示器 3D display</h1>
<h2 id="简介-brief-introduciton">简介 Brief introduciton</h2>
<p>传统的3D电影在荧幕上有两组图像（来源于在拍摄时的互成角度的两台摄影机），观众必须戴上偏光镜才能消除重影（让一只眼只接受一组图像），形成视差（parallax），产生立体感。利用自动立体显示（AutoSterocopic）技术，即所谓的“真3D技术”，你就不用戴上眼镜来观看立体影像了。这种技术利用所谓的“视差栅栏”，使两只眼睛分别接受不同的图像，来形成立体效果。
平面显示器要形成立体感的影象，必须至少提供两组相位不同的图像。其中，快门式3D技术和不闪式3D技术是如今显示器中最常使用的两种。
The traditional 3D movie has two sets of images on the screen (come from two cameras that are placed in angle difference),so viewers have to put on a polarizing lens to eliminate the ghost(so that a eye only accept a set of images), and form a parallax to generate a sense of three-dimensional.The use of automatic three-dimensional display (AutoSterocopic) technology, that is, the so-called &quot;true 3D technology&quot;, you do not have to wear glasses to watch the stereo image.This technology uses the so-called &quot;parallax barrier&quot;, so that the two eyes receive different images to form a three-dimensional effect.</p>
<h1 id="oled显示器-oled-display">OLED显示器 OLED display</h1>
<h2 id="简介-brief-introduction">简介 Brief introduction</h2>
<p>OLED
有机发光二极管又称为有机电激光显示（Organic Light-Emitting Diode，OLED）。OLED显示技术具有自发光的特性，采用非常薄的有机材料涂层和玻璃基板，当有电流通过时，这些有机材料就会发光，而且OLED显示屏幕可视角度大，并且能够节省电能。
对于有机电激发光器件，我们可按发光材料将其分为两种: 小分子OLED和高分子OLED（也可称为PLED）。它们的差异主要表现在器件的制备工艺不同：小分子器件主要采用真空热蒸发工艺，高分子器件则采用旋转涂覆或喷墨工艺。
有机电激发光二极管由于同时具备自发光，不需背光源、对比度高、厚度薄、视角广、反应速度快、可用于挠曲性面板、使用温度范围广、构造及制程较简单等优异之特性，被认为是下一代的平面显示器新兴应用技术。
Organic Light-Emitting Diode has the characteristic of self luminescence,which uses a thin organic material coating and glass substrate.When the current pass,these material will light.Also,OLED display screen viewing angle is big, and it can save electric energy.</p>
<h2 id="发光原理-principle-of-luminescence">发光原理 Principle of luminescence</h2>
<p>OLED发光的颜色取决于有机发光层的材料，故厂商可由改变发光层的材料而得到所需之颜色。有源阵列有机发光显示屏具有内置的电子电路系统，因此每个像素都由一个对应的电路独立驱动。OLED具备有构造简单、自发光不需背光源、对比度高、厚度薄、视角广、反应速度快、可用于挠曲性面板、使用温度范围广等优点，技术提供了浏览照片和视频的最佳方式而且对相机的设计造成的限制较少。
The color of the OLED depends on the material of the organic light emitting layer, so the manufacturer can obtain the required color by changing the material of the light emitting layer.The active array organic light emitting display screen has a built-in electronic circuit system, so each pixel is driven by a corresponding circuit.The OLED has the advantages of simple structure, no need of back light source, high contrast, thin thickness, wide viewing angle, quick reaction speed, and can be used for the flexible panel and wide temperature range,and technology offers the best way to view photos and videos and to little limit to the design of the camera.</p>
<h1 id="户外大屏幕显示器-outside-big-screen-display">户外大屏幕显示器 Outside big screen display</h1>
<p>这个范围就有点大啊……
This range is broad~
主要说来，CRT、LCD、DLP、LCOS、GLV用的较多。
Generally speaking,CRT、LCD、DLP、LCOS、GLV are used a lot.</p>
<blockquote>
<p>2016.3.17更新 update</p>
</blockquote>
<h1 id="记忆比较深的知识-knowledge-deeply-remember">记忆比较深的知识 Knowledge deeply remember</h1>
<p>1.白光透过棱镜分为紫、蓝、青、绿、黄、橙、红。波长依次减少。
White light through the prism is divided into purple, blue, green, green, yellow, orange, red.The wavelength is reduced in turn.</p>
<p>2.绝对黑体是指既不反射也不透射，完全吸收入射辐射的物体。（黑洞……）
The absolute black body is an object that absorbsthe incident radiation,neither reflected nor transmitted.(black hole~)</p>
<p>3.色温是表示光源光色的一种尺度。<strong>不是光源实际温度！只是一种光谱特性参量！</strong>
Color is a representation of the actual temperature scale.<strong>Not real temperature!Just a Spectral characteristic parameter!</strong>
例：电视屏幕是室温20℃（300K左右），但显像管显示的白颜色对应的是太阳光的那种白，那么色温是4874K！不要说温度有那么高……否则电视早就烧成灰了……
For example,the temperature of the TV screen is 20 ℃（about 200K）,but the white color is corresponding to the white sunlight,which color temperature is 4874K!Never to say it~if it is so hot,your TV is firing ash already.</p>
<p>4.人眼对绿色最敏感！从光谱光效率图看出……所以红绿灯用绿色，显眼啊。
Our eyes is sensitive to green!You can see it in spectral optical efficiency diagram.So this is why traffic light uses green color.</p>
<p>5.正好使人感到不闪烁的刷新频率称为临界闪烁频率。为45.8HZ。只要高于它，人眼就觉得不闪。
Make people feel the refresh rate does not flicker is called the critical flicker frequency,which is 45.8HZ.Only over it,we feel comfortable.
所谓市面上的不闪的电视，就是频率稍高一些的电视，如70HZ。因为部分人群的人眼敏感度较高，所以50HZ也许还是感觉到闪烁，这类人群需要不闪电视。但普通人并不需要。
The so-called &quot;not flash television&quot; in the market is a slightly higher frequency of television,70HZ,for instance.Because some people are more sensitive to it, they need &quot;not flash TV&quot;.But it isn't needed in common.</p>
<p>6.没必要追求4K的分辨率指标。人眼分辨力有限，所谓分辨，是指人眼能看清的扫描的两行。（美国比中国的扫描行数还低来着……）人眼极限就只能看清大约1K左右（这样说来1080P最好咯），高于这个指标人眼就分不清两行了，所以该指标更高便显得意义不大。4K代表我们有能力做到这么清晰，但日常我们是否需要，则并不见得。所以，往往并不需要追求最高的指标，够用就好。（买电脑一个理）
It's not necessary to persuit 4K resolution index for human eye resolution is limited.The resolution is the line we can see clearly.(The index in America is lower than that of China)Our eye resolution limit is to see about 1k(1080P maybe the best).If the index higher than this can not we distinguish the lines,so the higher index seems little meaning.4K means we have the ability to do it,but we don't need it in daily life.Therefore,is not as high index as possible,but enough is alright(Buy a computer is the same way).</p>
<p>7.看电视最佳距离：电视频幕高度的4倍。（我回家特地量了一下距离……）
The best distance to watch TV is four times the height of the TV screen.(I measure the size at home specifically~)</p>
<p>8.CRT显像管上加了上万伏高压，所以开启和关闭电视时常有静电。（我小时候还特喜欢那种有点漂浮的感觉……）
<strong>修电视技巧get</strong>：如果开机关机时仍能感觉到静电，那么说明显像管是好的！（来自我们修了三千台电视的super肖老师语录……哦……少碰静电，毕竟几万伏呢……小心白血病……）
CRT picture tube is added tens of thousands of volts,so you can feel the static electricity when open or close power supply.(I like the floating feel when I was a child~)
<strong>KEY TO REPAIR TV</strong>If you can feel the static electricity when open or close power supply,it is obvious that the picture tube is well.(From our super Mr.Xiao's quotations<s>well,do not touch the static electricity as little as possible.Pay attention to leukemia,it is tens of thousands of volts after all</s>)</p>
<p>9.彩色三要素：亮度、色调、色饱和度。色调与色饱和度合称为色度。
Three elements in color,brightness, tinge, color saturation.Tinge and color saturation are called as chromaticity.</p>
<p>10.三基色原理 The principle of three primary colors
（1）所有颜色可以由这三种基色按比例混合得到。（合成性）
(1)All colors can be made from the three primary colors mixed in proportion (synthetic).
（2）任意一种彩色可分解为三种基色。（分解性）
(2)Any color can be decomposed into three primary colors (decomposition).
（3）混合的亮度等于各基色亮度之和。（叠加性）
(3)The mixed brightness is equal to all primary colors.(addition).
（4）混合比例决定色调和色饱和度。（色度决定性）
(4)The mix proportions determine tinge and color saturation.(chromaticity determination)</p>
<p>11.三基色 Three primary colors
R、G、B.
记得小时候还学了个颜料的三原色……于是百度一下：红、黄、青
Always remember that there exists primary colors of pigment~so I search it.It is red,yellow and cyan.
<img src="http://i13.tietuku.cn/bbdb0a9ed059f7db.png" alt="上图左侧为色光三原色，右侧为美术三原色"></p>
<p>12.一个公式（亮度方程） A fomula
Y=0.30R+0.59G+0.11B
例：1R+2G+2B=浅青(light cyan)
Why?
∵1R+1G+1B=白(white)
1G+1B=青(cyan)
白+青=浅青(white+cyan=light cyan)
这个算法莫名想笑……
This idea makes me inexplicably laugh~</p>
<p>13.互补色：加起来为白色的<strong>两种</strong>颜色。
Complementary colors,the <strong>two</strong>colors mixed up in white color.</p>
<p>14.15625！15625！15625！重要的数字说三遍！Important number should be repeated three times!
行扫描的频率……听到这个数字要很快的反应过来……就像3.1415926一样……
正程52us，逆程12us，全程64us，即行扫描周期。
我国现行广播电视标准规定：帧数为25HZ，一帧图像分625行传送。所以行扫描频率25X625=15625HZ……就是这样来的……
It is line scan frequency~everyone of us should reflect on the meaning as 3.1415926~
Positive trace is 52us,negative trace is 12us,the whole trace is 64us,and it is just the line scan cycle.
The existing provisions of broadcast standards in China,frames is 25HZ,and an image is divided into 625 transmission line.So,the line scan frequency is 25X625=15625HZ,that's is.</p>
<p>15.对比度 Contrast
我之前对这个的定义确实不清楚的说……就连PS上的对比度也是怎么看着舒服怎么调……
对比度，通俗的讲，就是，实际的蓝天和白云的颜色，哦，是这么蓝和这么白，10000:100好了，反映到电视上，还是那么蓝和那么白！就100:1好了……让我想到比例尺。还是原来的配方，还是熟悉的味道！
I didn't get it clear before,and when I used PS,the contrast is adjusted to the degree that a image how to make me comfortable.Contrast, popular speaking, that is, the actual blue sky and white clouds of color,the component of blue and white is 10000:100,for example,which reflect to TV is 100:1,just like a scale.The original formula and the similar taste!</p>
<p>16.黑白全电视信号特指视频信号。
Black and white television signal refers to the video signal.</p>
<p>17.基色信号-亮度信号=色差信号
Primary signal - luminance signal = color difference signal</p>
<p>18.绿色幅值小，易受干扰，一般传送红、蓝信号。
green has small  amplitude,and it is vulnerable to be interfered,it transfers red and blue signal in general.</p>
<p>19.<strong>白！黄！青！绿！紫！红！蓝！黑！</strong>
<strong>白！黄！青！绿！紫！红！蓝！黑！</strong>
<strong>白！黄！青！绿！紫！红！蓝！黑！</strong>
<strong>WHITE!YELLOW!CYAN!GREEN!PURPLE!RED!BLUE!BLACK!</strong>
标准彩条测试信号。常识背背背！
It is the standard color test signal.We should recite it as common sense.</p>
<p>20.一个记住的电路 A curcuit to remember
<img src="/images/3.jpg" alt="亮度调节电路和对比度调节电路">
放大电路……如此的熟悉……
So familiar with it.
Rw1滑动调节对比度，Rw2滑动调节亮度！
Rw1 to adjust contrast,and Rw2 to adjust brightness!
感谢无私的好友把她上学期的书借给了我！
Thanks my selfless friend for sending her books to me！</p>
<p>21.指标如果要做到最顶级首选CRT。为什么我们现在都用薄的液晶啊什么的，因为<strong>日常使用不需要很高的指标</strong>，并且方便使用。
If you want to achieve the top indicators,CRT is preferred.You may ask why we use today is liquid crystal,the reason is <strong>Top indicators are not needed in daily use</strong>,and it is convinient.</p>
<p>22.<img src="/images/4.jpg" alt="阻尼式行输出级典型电路">
铅笔写的是我的笔记，乱max……
The writing is my note,you can ignore it~
几个专有名词要知道：阻尼二极管、逆程电容、校正电容、行输出管（行管）、行输出变压器（高压包）、行推动变压器
Several professional noums,Damping diode, reverse pass capacitor, correction capacitor, line output tube (line tube), line output transformer (high voltage package), line drive transformer.
扩展：硅堆、桥堆
Extension: silicon stack, bridge</p>
<h1 id="段子或注意的地方-something-fun-or-details-it-may-lost-its-fun-when-translated-into-english">段子或注意的地方 Something fun or details (It may lost its fun when translated into English)</h1>
<p>1.“B光源（色温4874K）近似为中午太阳光的光谱。”类似说法都不够准确，但经典教材上往往都采取这样模糊的说法。</p>
<p>2.用点燃的报纸烘烤灯丝……是为了激发电子发射。有个问题是灯坏了还是什么的，总之就是不行→_→因为激发不了电子发射。（写此文时突然短路……）</p>
<p>3.有个单位叫熙提……它的缩写………………自行百度或查书吧。（保持优雅）</p>
<p>4.隔壁的王叔叔……</p>
<p>5.南京的声音优雅的车站播音员……强调音色的问题……</p>
<p>6.列宁……（原名弗拉基米尔·伊里奇·乌里扬诺夫）（我竟然还百度了一下……）</p>
<p>7.小日本……</p>
<p>偏题了……段子很多就不说了……注意的问题是重点！咳咳~</p>
<hr>
<p>回看本文…………简直就是帮他们要考试的勾了一遍重点（除了一些公式和计算……）我真是大写的可爱啊！啊。。。
I AM CUTE~
P.S.不吹不黑  上课就要像这样愉悦才是好的课堂  快乐学习不是梦~
Pleasant classroom atmosphere is a excellent class.Happy learning is not a dream.
真是一趟愉快的蹭课之旅~
It was a pleasant trip to the class.
<strong>感谢老师 感谢校园 感谢这个和平的时代</strong>
<strong>thanks for the teacher,thanks for the campus,thanks for this peaceful time.</strong></p>
<hr>
<p>&lt;span id=&quot;busuanzi_container_page_pv&quot;&gt;</p>
<blockquote>
<p><strong>本文已被阅读 &lt;span id=&quot;busuanzi_value_page_pv&quot;&gt;&lt;/span&gt; 次。感谢您的点击！</strong>
<strong>The article has been viewed &lt;span id=&quot;busuanzi_value_page_pv&quot;&gt;&lt;/span&gt; times.Thank you for your visit!</strong>
&lt;/span&gt;</p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&amp;lt;div align=&amp;quot;left&amp;quot;&amp;gt;
&amp;lt;img src=&amp;quot;http://img10.360buyimg.com/popWaterMark/g13/M02/09/0C/rBEhUlKdmzIIAAAAAAA7TyA5YywAAG
    
    </summary>
    
      <category term="通信工程" scheme="http://hubojing.github.io/categories/%E9%80%9A%E4%BF%A1%E5%B7%A5%E7%A8%8B/"/>
    
    
      <category term="显示技术" scheme="http://hubojing.github.io/tags/%E6%98%BE%E7%A4%BA%E6%8A%80%E6%9C%AF/"/>
    
  </entry>
  
</feed>
