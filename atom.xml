<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>胡博靖的技术博客</title>
  <subtitle>小清新IT旅程|为中华崛起读书</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://hubojing.github.io/"/>
  <updated>2017-08-29T15:53:00.458Z</updated>
  <id>http://hubojing.github.io/</id>
  
  <author>
    <name>胡博靖</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>三维坐标系变换</title>
    <link href="http://hubojing.github.io/2017/08/29/%E4%B8%89%E7%BB%B4%E5%9D%90%E6%A0%87%E7%B3%BB%E5%8F%98%E6%8D%A2/"/>
    <id>http://hubojing.github.io/2017/08/29/三维坐标系变换/</id>
    <published>2017-08-29T14:23:54.000Z</published>
    <updated>2017-08-29T15:53:00.458Z</updated>
    
    <content type="html"><![CDATA[<div align="left"><br><img src="https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1504032008394&di=e99e963bf5137db65c21d19b5589cb26&imgtype=0&src=http%3A%2F%2Fpic.58pic.com%2F58pic%2F16%2F55%2F89%2F38258PICNZn_1024.jpg" width="300" height="180" style="float:right;"><br> </div>

<p>关于三维坐标变换的一些思考。　<br>从两条相交直线说起。</p>
<a id="more"></a>
<p>从最简单的情况入手，求空间两条相交直线AB、BC的夹角，AB和BC相交于B点，已知ABC三点三维坐标。<br>假设两条直线向量分别为a(x1,y1,z1),b(x2,y2,z2),根据公式cosα=a·b/(|a|*|b|)=(x1x2+y1y2+z1z2)/[√(x1^2+y1^2+z1^2)+√(x2^2+y2^2+z2^2)] 可直接求得。</p>
<p>情况变一变：<br>以此两条直线中的某一条为基准（为z’轴），求另一条直线关于基准线的x’、y’、z’轴（新的基准坐标系）夹角。</p>
<p>如果不用矩阵的做法，求解很复杂：<br>以AB为新的坐标系Z’轴为例，O为原坐标系原点。<br>B’(0,0,0)，可求AB点距离s，则A’(0,0,s)。这还是比较容易的，关键是求C’坐标。<br>首先要求z轴和AB之间的各种角度，想象从Z轴先延x轴平移绕x轴旋转，再延y轴平移绕y轴旋转，最后延z轴平移绕z轴旋转。同理，C点做同类运动，得到C’。<br>千辛万苦得到C’还没完，再将B’C’分别向x’o’y’、y’o’z’、z’o’x’面投影，求关于基准线的夹角。方可算出所求。</p>
<p>很明显，这种方法显然不适用在3D中。<br>这个问题其实等价于将世界坐标系转换为物体坐标系。,矩阵的作用就发挥广大。</p>
<p>令原坐标系为M=(i,j,k)T（转置），变换后N=(i’,j’,k’)T，i=(1,0,0),j=(0,1,0),k=(0,0,1)<br>原坐标系中一点P为(x,y,z)，则P’=((x,y,z)-O’)N^(-1)   N^(-1)指N的逆矩阵  (若N为正交矩阵，无需求逆矩阵，求转置矩阵即可。)</p>
<p>推导：∵P=O+(x,y,z)M=O’+(x’,y’,z’)N<br>∴(x’,y’,z’)=((x,y,z)M+(O-O’))N^(-1)<br>此时O’=(0，0，0),并带入M，则上式得证。</p>
<p>综上所述，讨论的情况实质就是进行了坐标系的转换。目的是求C’坐标，假设A(a1,b1,c1),B(a2,b2,c2),C(a3,b3,c3),那么根据公式C’=((a3,b3,c3)-(a2,b2,c2))N^(-1)，问题就转化为求N。记N=MK，K=M^(-1)N，也就是说，K是将i,j,k装换为i’,k’,j’的变换矩阵。<br>N^(-1)=(MK)^(-1)=K^(-1)M^(-1)<br>∴(x’,y’,z’)=((x,y,z)M+(O-O’))K^(-1)M^(-1)<br>=((x,y,z)+(-O’))K^(-1)  K=N</p>
<p>怎么求K呢？</p>
<p>可以参考这篇文章<a href="http://blog.csdn.net/jc_laoshu/article/details/69657579" target="_blank" rel="external">图形学1-三维坐标系间的变换矩阵推导</a></p>
<p>看似也挺麻烦，其实推导占据了大量篇幅，真正使用时直接套就好了。</p>
]]></content>
    
    <summary type="html">
    
      &lt;div align=&quot;left&quot;&gt;&lt;br&gt;&lt;img src=&quot;https://timgsa.baidu.com/timg?image&amp;quality=80&amp;size=b9999_10000&amp;sec=1504032008394&amp;di=e99e963bf5137db65c21d19b5589cb26&amp;imgtype=0&amp;src=http%3A%2F%2Fpic.58pic.com%2F58pic%2F16%2F55%2F89%2F38258PICNZn_1024.jpg&quot; width=&quot;300&quot; height=&quot;180&quot; style=&quot;float:right;&quot;/&gt;&lt;br&gt; &lt;/div&gt;

&lt;p&gt;关于三维坐标变换的一些思考。　&lt;br&gt;从两条相交直线说起。&lt;/p&gt;
    
    </summary>
    
      <category term="互联网" scheme="http://hubojing.github.io/categories/%E4%BA%92%E8%81%94%E7%BD%91/"/>
    
    
      <category term="线代" scheme="http://hubojing.github.io/tags/%E7%BA%BF%E4%BB%A3/"/>
    
      <category term="3D" scheme="http://hubojing.github.io/tags/3D/"/>
    
  </entry>
  
  <entry>
    <title>古风自动造句器</title>
    <link href="http://hubojing.github.io/2017/08/10/%E5%8F%A4%E9%A3%8E%E8%87%AA%E5%8A%A8%E9%80%A0%E5%8F%A5%E5%99%A8/"/>
    <id>http://hubojing.github.io/2017/08/10/古风自动造句器/</id>
    <published>2017-08-10T14:56:49.000Z</published>
    <updated>2017-08-10T14:56:49.000Z</updated>
    
    <content type="html"><![CDATA[<div align="left"><br><img src="https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1502983864&di=4ae6d79210dfb4ff7b9b0fd9c23807de&imgtype=jpg&er=1&src=http%3A%2F%2Fimg4.duitang.com%2Fuploads%2Fblog%2F201306%2F27%2F20130627144045_5KSSc.jpeg" width="300" height="180" style="float:right;"><br> </div>

<p>小桥流水肯定有人家，<br>两人对坐必须在饮茶。<br>为何提笔再难描绘出风雅。　　</p>
<p>一个C++古风自动写诗器。V1.1上线<br>【注意：有背景音乐！】</p>
<a id="more"></a>
<p>灵感来自<br><img src="http://img.blog.csdn.net/20170810230338826?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="古风"></p>
<p>今天看到这个，突然就想到文中提到的这个想法不难实现哇~那自己实现一个玩玩儿吧，主要就是个产生随机数的问题嘛~</p>
<h1 id="v10"><a href="#V1-0" class="headerlink" title="V1.0"></a>V1.0</h1><p>上代码：<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">void</span> CPoetryDlg::OnBnClickedOk()</div><div class="line">&#123;</div><div class="line">	<span class="comment">// <span class="doctag">TODO:</span>  在此添加控件通知处理程序代码</span></div><div class="line">	CStdioFile file;</div><div class="line">	CString strLine, strtemp;</div><div class="line">	<span class="keyword">char</span> *single[<span class="number">68</span>];</div><div class="line">	<span class="keyword">char</span> *wanted[<span class="number">8</span>];</div><div class="line">	<span class="keyword">if</span> (!file.Open(<span class="number">_</span>T(<span class="string">"d:\\1.txt "</span>), CFile::modeRead))</div><div class="line">	&#123;</div><div class="line">		<span class="keyword">return</span>;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">int</span> row = <span class="number">0</span>; </div><div class="line">	<span class="keyword">while</span> (file.ReadString(strLine))</div><div class="line">	&#123;</div><div class="line">		<span class="keyword">char</span> *str = strLine.GetBufferSetLength(strLine.GetLength());</div><div class="line">		<span class="keyword">char</span> *p;</div><div class="line">		</div><div class="line">		<span class="keyword">int</span> i = <span class="number">0</span>, k = <span class="number">0</span>;</div><div class="line">		<span class="keyword">char</span> *buf;</div><div class="line">		<span class="keyword">if</span> (strLine != <span class="string">""</span>)</div><div class="line">		&#123;</div><div class="line">			<span class="keyword">for</span> (p = strtok_s(str, <span class="string">"、"</span>, &amp;buf); p != <span class="literal">NULL</span>; p = strtok_s(<span class="literal">NULL</span>, <span class="string">"、"</span>, &amp;buf))</div><div class="line">			&#123;</div><div class="line">				single[i] = p;</div><div class="line">				i++;</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line"></div><div class="line">			CString strSum = <span class="string">""</span>;</div><div class="line">			srand((<span class="keyword">unsigned</span>)time(<span class="literal">NULL</span>));</div><div class="line">			<span class="keyword">for</span> (<span class="keyword">int</span> m = <span class="number">0</span>; m &lt; <span class="number">6</span>; m++)</div><div class="line">			&#123;</div><div class="line">				<span class="keyword">int</span> j = random(<span class="number">68</span>);</div><div class="line">				wanted[m] = single[j];</div><div class="line">				strtemp = wanted[m];</div><div class="line">				strSum= strSum + strtemp;</div><div class="line">			&#125;</div><div class="line">			strSum = strSum + <span class="string">"\r\n"</span>;</div><div class="line">			<span class="keyword">for</span> (<span class="keyword">int</span> m = <span class="number">0</span>; m &lt; <span class="number">4</span>; m++)</div><div class="line">			&#123;</div><div class="line">				<span class="keyword">int</span> j = random(<span class="number">68</span>);</div><div class="line">				wanted[m] = single[j];</div><div class="line">				strtemp = wanted[m];</div><div class="line">				strSum = strSum + strtemp;</div><div class="line">			&#125;</div><div class="line">			strSum = strSum + <span class="string">"\r\n"</span>;</div><div class="line"></div><div class="line">			<span class="keyword">for</span> (<span class="keyword">int</span> m = <span class="number">0</span>; m &lt; <span class="number">5</span>; m++)</div><div class="line">			&#123;</div><div class="line">				<span class="keyword">int</span> j = random(<span class="number">68</span>);</div><div class="line">				wanted[m] = single[j];</div><div class="line">				strtemp = wanted[m];</div><div class="line">				strSum = strSum + strtemp;</div><div class="line">			&#125;</div><div class="line">			strSum = strSum + <span class="string">"\r\n"</span>;</div><div class="line"></div><div class="line">			<span class="keyword">for</span> (<span class="keyword">int</span> m = <span class="number">0</span>; m &lt; <span class="number">4</span>; m++)</div><div class="line">			&#123;</div><div class="line">				<span class="keyword">int</span> j = random(<span class="number">68</span>);</div><div class="line">				wanted[m] = single[j];</div><div class="line">				strtemp = wanted[m];</div><div class="line">				strSum = strSum + strtemp;</div><div class="line">			&#125;</div><div class="line">			SetDlgItemText(IDC_EDIT2,strSum);</div><div class="line">			SetDlgItemText(IDC_EDIT1, <span class="string">"烟、倾、萧、墨、歌、弦、痴、泠、幽、离、覆、寂、情、思、恋、醉、浅、尘、念、葬、负、梦、韶、陌、落、琴、夜、君、殇、朱砂、韶华、江南、烟雨、迷离、红尘、寂寞、繁华、风华、苍老、红颜、天下、彼岸、伊人、青丝、白首、陌上、千年、倾城、断弦、长歌、悲欢、沧海、天涯、尘缘、情殇、忘川、碧落、奈何、指尖、长安、青鸾、凤凰、桃花、海棠、红妆、婆娑、轻狂、未央"</span>);</div><div class="line"></div><div class="line">	&#125;</div><div class="line"></div><div class="line">	file.Close();</div><div class="line"></div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>当然了，这个代码写的非常的粗糙，很多可以改进之处，我就是特别想先看到一个能运行的结果，后续再来慢慢改咯~丑陋的V1.0<br><img src="http://img.blog.csdn.net/20170810230733878?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="1"></p>
<p><img src="http://img.blog.csdn.net/20170810233547056?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="2"></p>
<p>P.S.哈哈哈哈哈哈好想笑这自动生成的诗句  这个时候背景音乐应该是浮夸</p>
<p>随便赋几首机器作诗：<br>未央忘川梦千年长安韶<br>尘缘君幽繁华<br>风华夜梦离红妆<br>海棠烟寂痴</p>
<p>海棠白首伊人悲欢负歌<br>红妆迷离苍老覆<br>韶华红妆尘缘萧寂寞<br>墨奈何歌白首</p>
<p>彼岸覆迷离浅烟雨伊人<br>长安倾城碧落倾<br>未央倾奈何韶华陌上<br>天下迷离朱砂千年</p>
<p>苍老覆红妆陌长安青鸾<br>繁华红尘落殇<br>迷离轻狂海棠思梦<br>恋倾凤凰浅</p>
<p>可以改进的地方：<br>1.分成动词、名词 单字、双字  放在多个txt中读取<br>2.四个暴力循环可以改一改……看着太扎心了<br>3.可以增加重复词审查过滤<br>4.扩大词库<br>5.按现代诗、古诗字数韵律等分配每个循环里的约束条件</p>
<h1 id="v11"><a href="#V1-1" class="headerlink" title="V1.1"></a>V1.1</h1><p>因为数组不定长，换成vector实现。同时扩大了词库，换了种句式……</p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div></pre></td><td class="code"><pre><div class="line">CStdioFile file;</div><div class="line">	CString strLine, strtemp;</div><div class="line">	<span class="built_in">std</span>::<span class="built_in">vector</span>&lt;CString&gt;Word;</div><div class="line">	<span class="built_in">std</span>::<span class="built_in">vector</span>&lt;CString&gt;Selected;</div><div class="line">	<span class="keyword">if</span> (!file.Open(<span class="number">_</span>T(<span class="string">"d:\\1.txt "</span>), CFile::modeRead))</div><div class="line">	&#123;</div><div class="line">		ASSERT(FALSE);</div><div class="line">		<span class="keyword">return</span>;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">while</span> (file.ReadString(strLine))</div><div class="line">	&#123;</div><div class="line">		<span class="keyword">int</span> len = strLine.GetLength();</div><div class="line">		</div><div class="line">		<span class="keyword">char</span> *str = strLine.GetBufferSetLength(strLine.GetLength());</div><div class="line">		<span class="keyword">char</span> *p;</div><div class="line">		</div><div class="line">		<span class="keyword">int</span> i = <span class="number">0</span>, k = <span class="number">0</span>;</div><div class="line">		<span class="keyword">char</span> *buf;</div><div class="line">		<span class="keyword">if</span> (strLine != <span class="string">""</span>)</div><div class="line">		&#123;</div><div class="line">			<span class="keyword">for</span> (p = strtok_s(str, <span class="string">"、"</span>, &amp;buf); p != <span class="literal">NULL</span>; p = strtok_s(<span class="literal">NULL</span>, <span class="string">"、"</span>, &amp;buf))</div><div class="line">			&#123;</div><div class="line">				Word.push_back(p);</div><div class="line">				i++;</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line"></div><div class="line">			CString strSum = <span class="string">""</span>;</div><div class="line">			srand((<span class="keyword">unsigned</span>)time(<span class="literal">NULL</span>));</div><div class="line">			<span class="keyword">for</span> (<span class="keyword">int</span> m = <span class="number">0</span>; m &lt; <span class="number">3</span>; m++)</div><div class="line">			&#123;</div><div class="line">				<span class="keyword">int</span> j = random(i);</div><div class="line">				Selected.push_back(Word.at(j));</div><div class="line">				strtemp = Selected.at(m);</div><div class="line">				strSum= strSum + strtemp;</div><div class="line">			&#125;</div><div class="line">			strSum = strSum + <span class="string">"，"</span>;</div><div class="line">			<span class="keyword">for</span> (<span class="keyword">int</span> m = <span class="number">3</span>; m &lt; <span class="number">7</span>; m++)</div><div class="line">			&#123;</div><div class="line">				<span class="keyword">int</span> j = random(i);</div><div class="line">				Selected.push_back(Word.at(j));</div><div class="line">				strtemp = Selected.at(m);</div><div class="line">				strSum = strSum + strtemp;</div><div class="line">			&#125;</div><div class="line">			strSum = strSum + <span class="string">"，"</span>;</div><div class="line">			strSum = strSum + <span class="string">"\r\n"</span>;</div><div class="line">			<span class="keyword">for</span> (<span class="keyword">int</span> m = <span class="number">7</span>; m &lt; <span class="number">10</span>; m++)</div><div class="line">			&#123;</div><div class="line">				<span class="keyword">int</span> j = random(i);</div><div class="line">				Selected.push_back(Word.at(j));</div><div class="line">				strtemp = Selected.at(m);</div><div class="line">				strSum = strSum + strtemp;</div><div class="line">			&#125;</div><div class="line">			strSum = strSum + <span class="string">"，"</span>;</div><div class="line">			<span class="keyword">for</span> (<span class="keyword">int</span> m = <span class="number">10</span>; m &lt; <span class="number">13</span>; m++)</div><div class="line">			&#123;</div><div class="line">				<span class="keyword">int</span> j = random(i);</div><div class="line">				Selected.push_back(Word.at(j));</div><div class="line">				strtemp = Selected.at(m);</div><div class="line">				strSum = strSum + strtemp;</div><div class="line">			&#125;</div><div class="line">			strSum = strSum + <span class="string">"，"</span>;</div><div class="line">			strSum = strSum + <span class="string">"\r\n"</span>;</div><div class="line">			<span class="keyword">for</span> (<span class="keyword">int</span> m = <span class="number">13</span>; m &lt; <span class="number">18</span>; m++)</div><div class="line">			&#123;</div><div class="line">				<span class="keyword">int</span> j = random(i);</div><div class="line">				Selected.push_back(Word.at(j));</div><div class="line">				strtemp = Selected.at(m);</div><div class="line">				strSum = strSum + strtemp;</div><div class="line">			&#125;</div><div class="line">			strSum = strSum + <span class="string">"，"</span>;</div><div class="line">			<span class="keyword">for</span> (<span class="keyword">int</span> m = <span class="number">18</span>; m &lt; <span class="number">20</span>; m++)</div><div class="line">			&#123;</div><div class="line">				<span class="keyword">int</span> j = random(i);</div><div class="line">				Selected.push_back(Word.at(j));</div><div class="line">				strtemp = Selected.at(m);</div><div class="line">				strSum = strSum + strtemp;</div><div class="line">			&#125;</div><div class="line">			strSum = strSum + <span class="string">"，"</span>;</div><div class="line">			strSum = strSum + <span class="string">"\r\n"</span>;</div><div class="line">			<span class="keyword">for</span> (<span class="keyword">int</span> m = <span class="number">20</span>; m &lt; <span class="number">23</span>; m++)</div><div class="line">			&#123;</div><div class="line">				<span class="keyword">int</span> j = random(i);</div><div class="line">				Selected.push_back(Word.at(j));</div><div class="line">				strtemp = Selected.at(m);</div><div class="line">				strSum = strSum + strtemp;</div><div class="line">			&#125;</div><div class="line"></div><div class="line">			strSum = strSum + <span class="string">"？"</span>;</div><div class="line">			strSum = strSum + <span class="string">"\r\n"</span>;</div><div class="line">			<span class="keyword">for</span> (<span class="keyword">int</span> m = <span class="number">23</span>; m &lt; <span class="number">25</span>; m++)</div><div class="line">			&#123;</div><div class="line">				<span class="keyword">int</span> j = random(i);</div><div class="line">				Selected.push_back(Word.at(j));</div><div class="line">				strtemp = Selected.at(m);</div><div class="line">				strSum = strSum + strtemp;</div><div class="line">			&#125;</div><div class="line">			strSum = strSum + <span class="string">"。"</span>;</div><div class="line"></div><div class="line"></div><div class="line">			SetDlgItemText(IDC_EDIT2,strSum);</div><div class="line">			TCHAR szBuf[<span class="number">1264</span>];</div><div class="line">			FILE *pfile;</div><div class="line">			fopen_s(&amp;pfile,<span class="string">"d:\\library.txt"</span>, <span class="string">"r"</span>);</div><div class="line">			fread(szBuf, <span class="number">1</span>, <span class="number">1262</span>, pfile);</div><div class="line">			SetDlgItemText(IDC_EDIT1, szBuf);</div><div class="line"></div><div class="line">			fclose(pfile); </div><div class="line"></div><div class="line">	&#125;</div><div class="line"></div><div class="line">	file.Close();</div></pre></td></tr></table></figure>
<p><img src="http://img.blog.csdn.net/20170816001549657?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="V1.1"></p>
<p>字符串尾的烫烫烫烫烫还没解决</p>
<p>随机散文诗：<br>环佩离海棠，悲欢情墨红颜，<br>古道回推敲，萧瑟繁华梳妆，<br>寂寥绮罗簌簌桑麻墨，青梅尘缘，<br>花蕊墨城郭？<br>白露陌上。</p>
<p>烟读碧绿，顾青鸾青丝古墓，<br>楚楚故里尺素，念情殇柳眉，<br>伊人亮尘缘挥毫古墓，簌簌伽蓝，<br>寂寥萧尘埃？<br>桑麻知否。</p>
<p>枝桠年华尘埃，经纬竹婆娑伽蓝，<br>一觅古筝笑靥，沧海寺轩窗，<br>泠五岳勾勒磐石江，桑麻寂，<br>一觅知否袅袅？<br>萧瑟瑶池。</p>
<p>羌笛绮罗剑鞘，枯藤乌艄断弦琴，<br>绮罗朱砂萧，寺参差寒蝉，<br>一抹长安水墨朱砂踌躇，寂凤凰，<br>渔樵红烛垂钓？<br>长歌芭蕉。</p>
<p>哈哈哈哈哈看起来好有文化的样子</p>
<p>附上一首吐槽古风乱象的歌：</p>
<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=34152526&auto=1&height=66"></iframe>
]]></content>
    
    <summary type="html">
    
      &lt;div align=&quot;left&quot;&gt;&lt;br&gt;&lt;img src=&quot;https://timgsa.baidu.com/timg?image&amp;quality=80&amp;size=b9999_10000&amp;sec=1502983864&amp;di=4ae6d79210dfb4ff7b9b0fd9c23807de&amp;imgtype=jpg&amp;er=1&amp;src=http%3A%2F%2Fimg4.duitang.com%2Fuploads%2Fblog%2F201306%2F27%2F20130627144045_5KSSc.jpeg&quot; width=&quot;300&quot; height=&quot;180&quot; style=&quot;float:right;&quot;/&gt;&lt;br&gt; &lt;/div&gt;

&lt;p&gt;小桥流水肯定有人家，&lt;br&gt;两人对坐必须在饮茶。&lt;br&gt;为何提笔再难描绘出风雅。　　&lt;/p&gt;
&lt;p&gt;一个C++古风自动写诗器。V1.1上线&lt;br&gt;【注意：有背景音乐！】&lt;/p&gt;
    
    </summary>
    
      <category term="互联网" scheme="http://hubojing.github.io/categories/%E4%BA%92%E8%81%94%E7%BD%91/"/>
    
    
      <category term="MFC" scheme="http://hubojing.github.io/tags/MFC/"/>
    
      <category term="C++" scheme="http://hubojing.github.io/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>树</title>
    <link href="http://hubojing.github.io/2017/07/23/%E6%A0%91/"/>
    <id>http://hubojing.github.io/2017/07/23/树/</id>
    <published>2017-07-23T13:16:43.000Z</published>
    <updated>2017-07-23T15:50:23.557Z</updated>
    
    <content type="html"><![CDATA[<div align="left"><br><img src="http://images.cnitblog.com/i/609598/201404/072129507785920.jpg" width="300" height="180" style="float:right;"><br><br><br>大热天敲代码与看书更配哦　　<br><br><br> </div>

<a id="more"></a>
<p>伪代码。</p>
<h1 id="二叉树的链式存储结构"><a href="#二叉树的链式存储结构" class="headerlink" title="二叉树的链式存储结构"></a>二叉树的链式存储结构</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">typedef</span> <span class="keyword">struct</span> BiTNode&#123;</div><div class="line">	ElemType data;<span class="comment">//数据域</span></div><div class="line">	<span class="keyword">struct</span> BiTNode *lchild, *rchild;<span class="comment">//左、右孩子指针</span></div><div class="line">&#125;BiTNode, *BiTree;</div></pre></td></tr></table></figure>
<h1 id="二叉树的遍历"><a href="#二叉树的遍历" class="headerlink" title="二叉树的遍历"></a>二叉树的遍历</h1><p>例：1<br> 2      3<br>   4       5<br> 6  </p>
<h2 id="先序遍历preorder"><a href="#先序遍历（PreOrder）" class="headerlink" title="先序遍历（PreOrder）"></a>先序遍历（PreOrder）</h2><p>根-&gt;左-&gt;右<br><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">PreOrder</span><span class="params">(BiTree T)</span></span>&#123;</div><div class="line">	<span class="keyword">if</span> (T != <span class="literal">NULL</span>)&#123;</div><div class="line">		visit(T);<span class="comment">//访问根节点</span></div><div class="line">		PreOrder(T-&gt;lchild);<span class="comment">//递归遍历左子树</span></div><div class="line">		PreOrder(T-&gt;rchild);<span class="comment">//递归遍历右子树</span></div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>124635</p>
<h2 id="中序遍历inorder"><a href="#中序遍历（InOrder）" class="headerlink" title="中序遍历（InOrder）"></a>中序遍历（InOrder）</h2><p>左-&gt;根-&gt;右<br><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">InOrder</span><span class="params">(BiTree T)</span></span>&#123;</div><div class="line">	<span class="keyword">if</span> (T != <span class="literal">NULL</span>)&#123;</div><div class="line">		InOrder(T-&gt;lchild);<span class="comment">//递归遍历左子树</span></div><div class="line">		visit(T);<span class="comment">//访问根节点</span></div><div class="line">		InOrder(T-&gt;rchild);<span class="comment">//递归遍历右子树</span></div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>264135</p>
<h2 id="后序遍历postorder"><a href="#后序遍历（PostOrder）" class="headerlink" title="后序遍历（PostOrder）"></a>后序遍历（PostOrder）</h2><p>左-&gt;右-&gt;根<br><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">PostOrder</span><span class="params">(BiTree T)</span></span>&#123;</div><div class="line">	<span class="keyword">if</span> (T != <span class="literal">NULL</span>)</div><div class="line">	&#123;</div><div class="line">		PostOrder(T-&gt;lchild);<span class="comment">//递归遍历左子树</span></div><div class="line">		PostOrder(T-&gt;rchild);<span class="comment">//递归遍历右子树</span></div><div class="line">		visit(T);<span class="comment">//访问根节点</span></div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>642531</p>
<p>时间复杂度都是O(n)，空间复杂度为O(n)。</p>
<h1 id="中序遍历的非递归算法"><a href="#中序遍历的非递归算法" class="headerlink" title="中序遍历的非递归算法"></a>中序遍历的非递归算法</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">InOrder2</span><span class="params">(BiTree T)</span></span>&#123;</div><div class="line">	<span class="comment">//二叉树中序遍历的非递归算法，算法需要借助一个栈</span></div><div class="line">	InitStack(S);</div><div class="line">	BiTree p = T;				<span class="comment">//初始化栈；p是遍历指针</span></div><div class="line">	<span class="keyword">while</span> (p || !IsEmpty(S))&#123;		<span class="comment">//栈不空或p不空时循环</span></div><div class="line">		<span class="keyword">if</span> (p)&#123;						<span class="comment">//根指针进展，遍历左子树</span></div><div class="line">			Push(S, p);					<span class="comment">//每遇到非空二叉树先向左走</span></div><div class="line">			p = p-&gt;lchild;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">else</span>&#123;						<span class="comment">//根指针退栈，访问根节点，遍历右子树</span></div><div class="line">			Pop(S, p); visit(p);		<span class="comment">//退栈，访问根节点</span></div><div class="line">			p = p-&gt;rchild;			<span class="comment">//再向右子树走</span></div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h1 id="二叉树的层次遍历"><a href="#二叉树的层次遍历" class="headerlink" title="二叉树的层次遍历"></a>二叉树的层次遍历</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">LevelOrder</span><span class="params">(BiTree T)</span></span>&#123;</div><div class="line">	InitQueue(Q);<span class="comment">//初始化辅助队列</span></div><div class="line">	BiTree p;</div><div class="line">	EnQueue(Q, T);<span class="comment">//将根结点入队</span></div><div class="line">	<span class="keyword">while</span> (!IsEmpty(Q))&#123;<span class="comment">//队列不空循环</span></div><div class="line">		DeQueue(Q, p);<span class="comment">//队头元素出队</span></div><div class="line">		visit(p);<span class="comment">//访问当前p所指向结点</span></div><div class="line">		<span class="keyword">if</span> (p-&gt;lchild != <span class="literal">NULL</span>)</div><div class="line">		&#123;</div><div class="line">			EnQueue(Q, p-&gt;lchild);<span class="comment">//左子树不空，则左子树入队列</span></div><div class="line">		&#125;</div><div class="line">		<span class="keyword">if</span> (p-&gt;rchild != <span class="literal">NULL</span>)</div><div class="line">		&#123;</div><div class="line">			EnQueue(Q, p-&gt;rchild);<span class="comment">//右子树不空，则右子树入队列</span></div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h1 id="树的存储结构"><a href="#树的存储结构" class="headerlink" title="树的存储结构"></a>树的存储结构</h1><h2 id="双亲表示法"><a href="#双亲表示法" class="headerlink" title="双亲表示法"></a>双亲表示法</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">define</span> MAX_TREE_SIZE 100	<span class="comment">//树中最多结点数</span></span></div><div class="line"><span class="keyword">typedef</span> <span class="keyword">struct</span>&#123;		<span class="comment">//树的结点定义</span></div><div class="line">	ElemType data;	<span class="comment">//数据元素</span></div><div class="line">	<span class="keyword">int</span> parent;	<span class="comment">//双亲位置域</span></div><div class="line">&#125;PTNode;</div><div class="line"><span class="keyword">typedef</span> <span class="keyword">struct</span>&#123;		<span class="comment">//树的类型定义</span></div><div class="line">	PTNode nodes[MAX_TREE_SIZE];	<span class="comment">//双亲表示</span></div><div class="line">	<span class="keyword">int</span> n;		<span class="comment">//结点数</span></div><div class="line">&#125;PTree;</div></pre></td></tr></table></figure>
<p>求结点的孩子时需遍历整个结构。</p>
<h2 id="孩子表示法"><a href="#孩子表示法" class="headerlink" title="孩子表示法"></a>孩子表示法</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="keyword">typedef</span> <span class="keyword">struct</span> CTNode	<span class="comment">//孩子结点</span></div><div class="line">&#123;</div><div class="line">	<span class="keyword">int</span> child;</div><div class="line">	<span class="keyword">struct</span> CTNode *next;</div><div class="line">&#125;*ChildPtr;</div><div class="line"><span class="keyword">typedef</span> <span class="keyword">struct</span></div><div class="line">&#123;</div><div class="line">	TElemType data;</div><div class="line">	ChildPtr firstchild;<span class="comment">//孩子链表头指针</span></div><div class="line">&#125;CTBox;</div><div class="line"><span class="keyword">typedef</span> <span class="keyword">struct</span></div><div class="line">&#123;</div><div class="line">	CTBox nodes[MAX_TREE_SIZE];</div><div class="line">	<span class="keyword">int</span> n, r;	<span class="comment">//结点数和根的位置</span></div><div class="line">&#125;CTree;</div></pre></td></tr></table></figure>
<p>求结点的双亲时需遍历N个结点中孩子链表指针域所指向的N个孩子链表。</p>
<h2 id="孩子兄弟表示法二叉树表示法"><a href="#孩子兄弟表示法（二叉树表示法）" class="headerlink" title="孩子兄弟表示法（二叉树表示法）"></a>孩子兄弟表示法（二叉树表示法）</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">typedef</span> <span class="keyword">struct</span> CSNode</div><div class="line">&#123;</div><div class="line">	ElemType data;	<span class="comment">//数据域</span></div><div class="line">	<span class="keyword">struct</span> CSNode *firstchild, *nextsibling;	<span class="comment">//第一个孩子和右兄弟指针</span></div><div class="line">&#125;CSNode, *CSTree;</div></pre></td></tr></table></figure>
<p>易查找结点的孩子，若为每个结点增设一个parent域指向其父节点，则查找结点的父结点也很方便。</p>
<p>树转换为二叉树的规则：每个结点左指针指向它的第一个孩子结点，右指针指向它在树中的相邻兄弟结点，可表示为“左孩子右兄弟”。由于根节点没有兄弟，所以由树转换而得的二叉树没有右子树。</p>
<p>例：<br><img src="http://img.blog.csdn.net/20160405115409687" alt="一颗具体的树"><br><img src="http://img.blog.csdn.net/20160405121851681" alt="转换后"></p>
<h1 id="c实现"><a href="#C-实现" class="headerlink" title="C++实现"></a>C++实现</h1><p>由于博主不允许转载，因此详见参考。<br>为防止程序一闪而过，在main程序末尾添加system(“pause”);使画面停留。</p>
<h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p>数据结构教材<br><a href="http://blog.csdn.net/linux_ever/article/details/51063795" target="_blank" rel="external">数据结构与算法——普通树的定义与C++实现</a><br><a href="http://blog.csdn.net/jkay_wong/article/details/6635984" target="_blank" rel="external">C++树（兄弟孩子结构实现）</a><br><a href="http://www.educity.cn/develop/478944.html" target="_blank" rel="external">VC++ 树的孩子兄弟表示法</a><br><a href="http://blog.csdn.net/insistgogo/article/details/6876867" target="_blank" rel="external">使用C++ 和 孩子兄弟表示法实现树</a><br><a href="http://blog.csdn.net/htyurencaotang/article/details/7781920" target="_blank" rel="external">孩子兄弟表示法实现树</a></p>
<hr>
<p>最近更新频繁的原因如下：<br>上周<br><img src="http://img.blog.csdn.net/20170723212235401?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="上周"></p>
<p>未来一周<br><img src="http://img.blog.csdn.net/20170723212159371?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="未来一周"></p>
<p>热成熟透的咸鱼  不如宅着做咸鱼</p>
]]></content>
    
    <summary type="html">
    
      &lt;div align=&quot;left&quot;&gt;&lt;br&gt;&lt;img src=&quot;http://images.cnitblog.com/i/609598/201404/072129507785920.jpg&quot; width=&quot;300&quot; height=&quot;180&quot; style=&quot;float:right;&quot;/&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;大热天敲代码与看书更配哦　　&lt;br&gt;&lt;br&gt;&lt;br&gt; &lt;/div&gt;
    
    </summary>
    
      <category term="互联网" scheme="http://hubojing.github.io/categories/%E4%BA%92%E8%81%94%E7%BD%91/"/>
    
    
      <category term="树" scheme="http://hubojing.github.io/tags/%E6%A0%91/"/>
    
      <category term="数据结构" scheme="http://hubojing.github.io/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
  </entry>
  
  <entry>
    <title>树状控件与列表控件交互以及XML的解析</title>
    <link href="http://hubojing.github.io/2017/07/20/%E6%A0%91%E7%8A%B6%E6%8E%A7%E4%BB%B6%E4%B8%8E%E5%88%97%E8%A1%A8%E6%8E%A7%E4%BB%B6%E4%BA%A4%E4%BA%92%E4%BB%A5%E5%8F%8AXML%E7%9A%84%E8%A7%A3%E6%9E%90/"/>
    <id>http://hubojing.github.io/2017/07/20/树状控件与列表控件交互以及XML的解析/</id>
    <published>2017-07-20T15:04:43.000Z</published>
    <updated>2017-08-05T06:51:39.476Z</updated>
    
    <content type="html"><![CDATA[<div align="left"><br><img src="http://s8.51cto.com/wyfs02/M00/5B/67/wKioL1UI1-LRY-VkAADQ3snhmcU770.jpg" width="300" height="180" style="float:right;"><br><br><br>自用记录。<br><br> </div>

<a id="more"></a>
<h1 id="msdn参考"><a href="#MSDN参考" class="headerlink" title="MSDN参考"></a>MSDN参考</h1><h2 id="msxml"><a href="#MSXML" class="headerlink" title="MSXML"></a>MSXML</h2><p>MSXML API 历史记录 <a href="https://msdn.microsoft.com/zh-cn/library/ms762314(v=vs.85).aspx" target="_blank" rel="external">https://msdn.microsoft.com/zh-cn/library/ms762314(v=vs.85).aspx</a> </p>
<p>有C++示例  感人肺腑</p>
<p>MSXML SDK 概述 <a href="https://msdn.microsoft.com/zh-cn/library/ms760399(v=vs.85).aspx" target="_blank" rel="external">https://msdn.microsoft.com/zh-cn/library/ms760399(v=vs.85).aspx</a> </p>
<p><del>机翻水平已经不错了 虽然仔细看还是略扎心</del><br>心扎穿了……机翻不如看英文系列</p>
<h2 id="treecontrol控件"><a href="#TreeControl控件" class="headerlink" title="TreeControl控件"></a>TreeControl控件</h2><p>使用 CTreeCtrl <a href="https://msdn.microsoft.com/zh-cn/library/8ws6dh1y(v=vs.120).aspx" target="_blank" rel="external">https://msdn.microsoft.com/zh-cn/library/8ws6dh1y(v=vs.120).aspx</a> </p>
<h2 id="listcontrol控件"><a href="#ListControl控件" class="headerlink" title="ListControl控件"></a>ListControl控件</h2><p>使用 CListCtrl <a href="https://msdn.microsoft.com/zh-cn/library/cc468276(v=vs.71).aspx" target="_blank" rel="external">https://msdn.microsoft.com/zh-cn/library/cc468276(v=vs.71).aspx</a><br>创建列表控件 (List Control) <a href="https://msdn.microsoft.com/zh-cn/library/cc451545(v=vs.71).aspx" target="_blank" rel="external">https://msdn.microsoft.com/zh-cn/library/cc451545(v=vs.71).aspx</a> </p>
<p>明明都是msdn，网页版就是亲切一些…</p>
<p>现有一个XML文档如下：<br><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">&lt;root&gt;</div><div class="line">	&lt;Node world = "生命"&gt;</div><div class="line">		&lt;Node animal = “动物"&gt;</div><div class="line">			&lt;Node aniname = "熊猫"&gt;</div><div class="line">			&lt;/Node&gt;</div><div class="line">			&lt;Node aniname = "兔子"&gt;</div><div class="line">			&lt;/Node&gt;</div><div class="line">		&lt;/Node&gt;</div><div class="line">		&lt;Node plant = "植物"&gt;</div><div class="line">			&lt;Node planame = "仙人掌"&gt;</div><div class="line">			&lt;/Node&gt;</div><div class="line">			&lt;Node planame = "玫瑰"&gt;</div><div class="line">			&lt;/Node&gt;</div><div class="line">		&lt;/Node&gt;</div><div class="line">	&lt;/Node&gt;</div><div class="line">&lt;/root&gt;</div></pre></td></tr></table></figure></p>
<p>要求在树状控件上显示如下：<br>–root<br>—-动物<br>—-植物</p>
<p>在树状控件上点击“动物”，在列表控件上出现<br>1 熊猫<br>2 兔子</p>
<p>同理，点击“植物”，在列表控件上出现<br>1 仙人掌<br>2 玫瑰</p>
<h1 id="思维碰撞"><a href="#思维碰撞" class="headerlink" title="思维碰撞"></a>思维碰撞</h1><p><del>之前的思路：先SelectedSingleNode(“/Node/Node”)，定位到动物这一层。然后获得该结点的属性即aniname，插入树状控件。接着指向其兄弟结点，将兄弟结点（植物）的属性同样插入树状控件。如果新插入结点，可能需递归（但都是在动物同层面）。</del><br><del>因为并没有将“熊猫”“兔子”插入树状控件，因此无法使用m_tree.GetChildItem(ht)获取。所以我想通过“动物”植物“的aniname和planame来反过来查找对应xml里的结点pNode（这里存在问题how to find it?遍历xml找同样的名字？Item能和node存在对应关系么）。找到后，只需GetChildNode之类获取孩子结点，再插入到列表控件中（也就是和列表控件交互实际是列表控件在和xml直接交互，树控件只起到选择某个item，对应到xml中）。</del><br><del>简单说来：选择树结点-&gt;获得该xml对应结点-&gt;获得每一个孩子结点-&gt;获得孩子结点的文本和其他路径属性-&gt;通过列表插入</del></p>
<p><del>就算是为树状控件和列表控件设置一个类或者一个结构，先要把xml所需的信息全部放入。毕竟投射到树状控件的结点并非全部结点，最重要的是<strong>列表控件所需结点不在树状控件中</strong>。那么添加删除时，对应的类或结构也应相应操作，是否繁琐。但感觉之前用树控件用错了，只是获取了文本，数据并没传入。</del></p>
<p>当连问题都表达不清楚时，说明很多东西压根就没懂。<del>明天好好看MSDN…还得看看DOM树</del></p>
<p>又过了一天。思路变为：为不直接操作XML，应创建一个结构体，利用MSXML解析XML将信息放入结构体中，在后续树状控件和列表控件操作时都调用该结构体而非XML。</p>
<p><del>所以当务之急是如何传数据给结构体，好像会用到std::map映射，</del><br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">~~<span class="built_in">std</span>::<span class="built_in">map</span>&lt;CString, <span class="built_in">std</span>::<span class="built_in">vector</span>&lt;信息&gt;&gt;~~</div></pre></td></tr></table></figure></p>
<p><del>学习下怎么用…</del></p>
<p><del>嗯……就说看起来没那么复杂才对………卡了几天的问题  明天终于可以实现这个demo</del> 还没实现 少立flag多做事…</p>
<p>前面那么多废话，其实说白了就是要<strong>自己生成一棵树</strong>，数据来源是xml，通过MSXML获得每个结点信息，自己生成的树中只包含所需要的xml片段信息，之后树控件根据指针来获得选择结点的孩子结点。<br>xml解析的最关键之处，就是如何将xml文件内容解析成内存中的可用、易用的程序数据—DOM(Document Object Model)树。DOM其实就是多叉树，每个节点只需知道自己的第一个子节点（first child）和下一个兄弟节点（next sibling），即可实现元素数据的解析。</p>
<p>想给脑袋植入MSDN芯片…</p>
<p>理一理六层结构：<br>map-&gt;分类节点-&gt;vector-&gt;n个小节点-&gt;结构体-&gt;xml</p>
<p>如果要求分类节点就一层，是完全OK的。但如果要求分类下面还需要小分类，这就很不ok了。换为<br>两个结构体：1）小节点结构体-&gt;xml<br>2)分类节点结构体-&gt;vector-&gt;1)<br>(比map还简单些…)</p>
<p>发现六层结构办不到时，仿佛多米诺骨牌立到最后几块，突然看到最开始的一段里有一块距离放远了……<br>但换成双结构体其实改动也没太多，又好像把那块出差错的给换了块适合长度的，整个链条还是能补完整的。<br>思维过山车  跌宕起伏</p>
<h1 id="方法记录"><a href="#方法记录" class="headerlink" title="方法记录"></a>方法记录</h1><h2 id="元素遍历"><a href="#元素遍历" class="headerlink" title="元素遍历"></a>元素遍历</h2><p>for循环取出每一个元素进行相应比较。(递归不如遍历)</p>
<h2 id="父对话框给自对话框传值"><a href="#父对话框给自对话框传值" class="headerlink" title="父对话框给自对话框传值"></a>父对话框给自对话框传值</h2><p>父对话框 BookDlg  子对话框TitleDlg<br>在父对话框中 TitleDlg dlg(this);<br>在子对话框中 CBookDlg <em>parent = (CBookDlg</em>)GetParent();<br>然后就可以使用了：<br>CString text=pParent-&gt;m_sentence;<br>m_sentence是父对话框类的成员变量</p>
<h2 id="在子对话框显示图片"><a href="#在子对话框显示图片" class="headerlink" title="在子对话框显示图片"></a>在子对话框显示图片</h2><p>给自对话框添加OnInitDlg()<br>添加OnPaint()<br>(记得加WM_ONPAINT消息)<br>在OnInitDlg中加载图片，在OnPanint()中重绘图片。（在初始化里重绘是不行的）</p>
<h2 id="vector"><a href="#vector" class="headerlink" title="vector"></a>vector</h2><p>添加头文件#include <vector><br>vector容器，std::vector&lt;类型*&gt; name;  push_back添加元素。<br>遍历元素使用迭代器iterator，for循环</vector></p>
<h2 id="map"><a href="#map" class="headerlink" title="map"></a>map</h2><p>添加头文件#include <map><br>std::map<cstring, std::vector<信息="">&gt;<br>一个CString对应一个vector。查询时也是先遍历（迭代器）再比较，it-&gt;first指代返回关键字，it-&gt;second指代数据。</cstring,></map></p>
<h2 id="父子循环"><a href="#父子循环" class="headerlink" title="父子循环"></a>父子循环</h2><p>父子循环遍历时避免使用相同的变量名。</p>
<h2 id="树控件相关"><a href="#树控件相关" class="headerlink" title="树控件相关"></a>树控件相关</h2><h3 id="插入"><a href="#插入" class="headerlink" title="插入"></a>插入</h3><p>m_tree.InsertItem((_bstr_t)variantValue, 1, 1, ht, TVI_LAST);<br>依次是：插入的数据，树前图标点击前，树前图标点击后，父节点，插在最后。</p>
<h2 id="列表控件相关"><a href="#列表控件相关" class="headerlink" title="列表控件相关"></a>列表控件相关</h2><h3 id="在列表最后插入"><a href="#在列表最后插入" class="headerlink" title="在列表最后插入"></a>在列表最后插入</h3><p>int iRow = m_list.GetItemCount();<br>m_list.InsertItem(iRow, text, 0);<br>text 插入的文本 0表示imagelist中的第一个图片<br>imagelist是由一幅幅image拼起来的长图列表</p>
<h2 id="xml操作"><a href="#xml操作" class="headerlink" title="xml操作"></a>xml操作</h2><h3 id="取属性"><a href="#取属性" class="headerlink" title="取属性"></a>取属性</h3><p>pNode-&gt;get_attributes(&amp;pAttrMap);<br>pAttrMap-&gt;get_item(0, &amp;pAttrItem);<br>pAttrItem-&gt;get_nodeTypedValue(&amp;VariantValue);</p>
<h2 id="数据类型转换"><a href="#数据类型转换" class="headerlink" title="数据类型转换"></a>数据类型转换</h2><ol>
<li>int转CString<br>iRow是int型，number是CString型。<br>CString number;<br>number.Format(“%d”, iRow);</li>
</ol>
<p>To be continued…</p>
]]></content>
    
    <summary type="html">
    
      &lt;div align=&quot;left&quot;&gt;&lt;br&gt;&lt;img src=&quot;http://s8.51cto.com/wyfs02/M00/5B/67/wKioL1UI1-LRY-VkAADQ3snhmcU770.jpg&quot; width=&quot;300&quot; height=&quot;180&quot; style=&quot;float:right;&quot;/&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;自用记录。&lt;br&gt;&lt;br&gt; &lt;/div&gt;
    
    </summary>
    
      <category term="互联网" scheme="http://hubojing.github.io/categories/%E4%BA%92%E8%81%94%E7%BD%91/"/>
    
    
      <category term="MFC" scheme="http://hubojing.github.io/tags/MFC/"/>
    
      <category term="XML" scheme="http://hubojing.github.io/tags/XML/"/>
    
      <category term="TreeControl" scheme="http://hubojing.github.io/tags/TreeControl/"/>
    
      <category term="ListControl" scheme="http://hubojing.github.io/tags/ListControl/"/>
    
  </entry>
  
  <entry>
    <title>≧∇≦</title>
    <link href="http://hubojing.github.io/2017/07/18/%E6%B1%82%E8%B4%AD/"/>
    <id>http://hubojing.github.io/2017/07/18/求购/</id>
    <published>2017-07-18T14:55:44.000Z</published>
    <updated>2017-07-23T15:13:43.450Z</updated>
    
    <content type="html"><![CDATA[<div align="left"><br><img src="http://b-ssl.duitang.com/uploads/item/201510/12/20151012094245_twKjA.jpeg" width="300" height="180" style="float:right;"><br><br> </div>

<p> 　　　　<br>　　<br>这贴适合又不适合卡吧老司机进来<br>　　<br>　　<br>　　<br> <a id="more"></a></p>
<p> <strong>不是组装电脑！让你失望了[微笑]</strong></p>
<p>直连光猫<br><img src="http://img.blog.csdn.net/20170722004202507?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="直连光猫"></p>
<p> 连接路由器<br> <img src="http://img.blog.csdn.net/20170722004135465?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="路由器"></p>
<p> 这还是最快的信道  100M的钱  10M的同等感受</p>
<p>1.求推路由器<br>100M光纤 家用 连Wifi设备还比较多 需跨墙<br>要求：性能好 性能好 性能好 性价比高</p>
<p>2.求推电视音响<br>要求：音质好 音质好 音质好 重低音强（低音炮！）<br>价格……当然性价比越高越好……价位……高中低各给一款参考？</p>
<p>能直接给京东链接最好了……</p>
<p>。。。。。。</p>
<p>之所以不去卡吧等土豪吧发帖，当然是  因为  穷</p>
<p>默默想起几年前的一首诗<br>三千预算进卡吧 加钱加到九万八 八核 E5 装上去 四路Titan抱回家<br>4K 屏幕组三屏 万元水冷温度压 固态硬盘装三块 硬盘内存使劲加 　<br>键鼠必花几千元 耳机手柄三千八 还有机箱六千元 红星炸弹劈劈啪</p>
<p>—华丽的分界线—</p>
<p>一天不能同时留2个Flag是真的<br>总有一个会打脸<br>比如上一篇写的 今天说好写MSHTML例子的  结果今天先被MSXML弄昏了<br>昨晚去云村留Flag说早睡  总要做到一个吧<br>真的！我要早点睡觉！不过12点！！！</p>
<p>附上两张公司厕所励志图…………………………<br><img src="http://img.blog.csdn.net/20170718232530408?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="1"></p>
<p><img src="http://img.blog.csdn.net/20170718232554242?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="2"></p>
<p>各位看到的大神们晚安~<br>我要做一只美丽的小菜鸟<br>⁄(⁄ ⁄•⁄ω⁄•⁄ ⁄)⁄</p>
]]></content>
    
    <summary type="html">
    
      &lt;div align=&quot;left&quot;&gt;&lt;br&gt;&lt;img src=&quot;http://b-ssl.duitang.com/uploads/item/201510/12/20151012094245_twKjA.jpeg&quot; width=&quot;300&quot; height=&quot;180&quot; style=&quot;float:right;&quot;/&gt;&lt;br&gt;&lt;br&gt; &lt;/div&gt;

&lt;p&gt; 　　　　&lt;br&gt;　　&lt;br&gt;这贴适合又不适合卡吧老司机进来&lt;br&gt;　　&lt;br&gt;　　&lt;br&gt;　　&lt;br&gt;
    
    </summary>
    
      <category term="杂谈" scheme="http://hubojing.github.io/categories/%E6%9D%82%E8%B0%88/"/>
    
    
      <category term="杂谈" scheme="http://hubojing.github.io/tags/%E6%9D%82%E8%B0%88/"/>
    
  </entry>
  
  <entry>
    <title>一个MFC利用MSXML解析XML的最简例子</title>
    <link href="http://hubojing.github.io/2017/07/13/%E4%B8%80%E4%B8%AAMFC%E5%88%A9%E7%94%A8MSXML%E8%A7%A3%E6%9E%90XML%E7%9A%84%E6%9C%80%E7%AE%80%E4%BE%8B%E5%AD%90/"/>
    <id>http://hubojing.github.io/2017/07/13/一个MFC利用MSXML解析XML的最简例子/</id>
    <published>2017-07-13T13:14:26.000Z</published>
    <updated>2017-07-16T15:48:31.000Z</updated>
    
    <content type="html"><![CDATA[<p><div align="left"><br><img src="http://p7.qhimg.com/t01ca7ccf3b4a3ffe38.png" width="300" height="180" style="float:right;"></div></p>
<p><br>　　<br>　　<br>　　<br>如题。<br>　　<br>　<br>　　　<br><a id="more"></a></p>
<h1 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h1><p>系统自带MSXML6.dll，在C盘system32下。先要导入文件，定义使用空间。</p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#import <span class="meta-string">&lt;msxml6.dll&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> MSXML2;</div></pre></td></tr></table></figure>
<p>为三个编辑框分别添加变量m_strId,m_strAuthor,m_strTitle。</p>
<p>主要代码：</p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">void</span> CXMLDlg::OnBnClickedBtncreate()</div><div class="line">&#123;</div><div class="line">	<span class="comment">// <span class="doctag">TODO:</span>  在此添加控件通知处理程序代码</span></div><div class="line">	UpdateData();</div><div class="line"></div><div class="line">	MSXML2::IXMLDOMDocumentPtr pDoc;</div><div class="line">	MSXML2::IXMLDOMElementPtr xmlRoot;</div><div class="line"></div><div class="line">	<span class="comment">//创建DOMDocument对象</span></div><div class="line">	HRESULT hr = pDoc.CreateInstance(<span class="number">__u</span>uidof(MSXML2::DOMDocument60));</div><div class="line"></div><div class="line">	<span class="comment">//根节点的名称为Book</span></div><div class="line">	<span class="comment">//创建元素并添加到文档中</span></div><div class="line">	xmlRoot = pDoc-&gt;createElement((<span class="keyword">_bstr_t</span>)<span class="string">"Book"</span>);</div><div class="line"></div><div class="line">	<span class="comment">//设置属性</span></div><div class="line">	xmlRoot-&gt;setAttribute(<span class="string">"id"</span>, (<span class="keyword">_variant_t</span>)m_strId);</div><div class="line">	pDoc-&gt;appendChild(xmlRoot);</div><div class="line">	MSXML2::IXMLDOMElementPtr pNode;</div><div class="line">	<span class="comment">//添加“author”元素</span></div><div class="line">	pNode = pDoc-&gt;createElement((<span class="keyword">_bstr_t</span>)<span class="string">"Author"</span>);</div><div class="line">	pNode-&gt;Puttext((<span class="keyword">_bstr_t</span>)m_strAuthor);</div><div class="line">	xmlRoot-&gt;appendChild(pNode);</div><div class="line"></div><div class="line">	<span class="comment">//添加“Title”元素</span></div><div class="line">	pNode = pDoc-&gt;createElement(<span class="string">"Title"</span>);</div><div class="line">	pNode-&gt;Puttext((<span class="keyword">_bstr_t</span>)m_strTitle);</div><div class="line">	xmlRoot-&gt;appendChild(pNode);</div><div class="line"></div><div class="line">	<span class="comment">//如果不存在就建立,存在就覆盖</span></div><div class="line">	pDoc-&gt;save(<span class="string">"text.xml"</span>);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">void</span> CXMLDlg::OnBnClickedBtnload()</div><div class="line">&#123;</div><div class="line">	<span class="comment">// <span class="doctag">TODO:</span>  在此添加控件通知处理程序代码</span></div><div class="line">	MSXML2::IXMLDOMDocumentPtr pDoc;</div><div class="line">	HRESULT hr = pDoc.CreateInstance(<span class="number">__u</span>uidof(MSXML2::DOMDocument60));</div><div class="line"></div><div class="line">	<span class="comment">//加载文件</span></div><div class="line">	pDoc-&gt;load(<span class="string">"text.xml"</span>);</div><div class="line"></div><div class="line">	MSXML2::IXMLDOMNodePtr pNode;</div><div class="line">	<span class="comment">//在树中查找名为Book的节点,"//"表示在任意一层查找</span></div><div class="line">	pNode = pDoc-&gt;selectSingleNode(<span class="string">"//Book"</span>);</div><div class="line">	MSXML2::DOMNodeType nodeType;</div><div class="line">	<span class="comment">//得到节点类型</span></div><div class="line">	pNode-&gt;get_nodeType(&amp;nodeType);</div><div class="line">	<span class="comment">//节点名称</span></div><div class="line">	CString strName;</div><div class="line">	strName = (<span class="keyword">char</span> *)pNode-&gt;GetnodeName();</div><div class="line">	<span class="comment">//节点属性,放在链表中</span></div><div class="line">	MSXML2::IXMLDOMNamedNodeMapPtr pAttrMap = <span class="literal">NULL</span>;</div><div class="line">	MSXML2::IXMLDOMNodePtr   pAttrItem;</div><div class="line">	<span class="keyword">_variant_t</span> variantValue;</div><div class="line">	pNode-&gt;get_attributes(&amp;pAttrMap);</div><div class="line">	<span class="keyword">long</span> count;</div><div class="line">	count = pAttrMap-&gt;get_length(&amp;count);</div><div class="line">	pAttrMap-&gt;get_item(<span class="number">0</span>, &amp;pAttrItem);</div><div class="line">	<span class="comment">//取得节点的值</span></div><div class="line">	pAttrItem-&gt;get_nodeTypedValue(&amp;variantValue);</div><div class="line">	m_strId = (<span class="keyword">char</span> *)(<span class="keyword">_bstr_t</span>)variantValue;</div><div class="line">	UpdateData(FALSE);</div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">void</span> CXMLDlg::OnBnClickedBtnclear()</div><div class="line">&#123;</div><div class="line">	<span class="comment">// <span class="doctag">TODO:</span>  在此添加控件通知处理程序代码</span></div><div class="line">	m_temp = <span class="string">""</span>;</div><div class="line">	SetDlgItemText(IDC_EDIT1, m_temp);</div><div class="line">	SetDlgItemText(IDC_EDIT2, m_temp);</div><div class="line">	SetDlgItemText(IDC_EDIT3, m_temp);</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h1 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h1><p>生成的XML:</p>
<p><img src="http://img.blog.csdn.net/20170713215940972?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="XML"></p>
<p>界面：</p>
<p><img src="http://img.blog.csdn.net/20170713220135411?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="界面"></p>
<h1 id="报错"><a href="#报错" class="headerlink" title="报错"></a>报错</h1><p>1.<br><img src="http://img.blog.csdn.net/20170713214333758?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="报错"><br>之前也遇到过类似情况。</p>
<p>解决：<br><a href="http://cs.cuc.edu.cn/huangwei/wiki/teaching_c_ds_fileio_unicode.html" target="_blank" rel="external">Unicode in the Windows API</a><br><a href="https://msdn.microsoft.com/en-us/library/windows/desktop/dd317766%28v=vs.85%29.aspx" target="_blank" rel="external">Conventions for Function Prototypes</a></p>
<p>简单说来，是因为随着版本更替，老规则渐渐不使用，现在的字符多是Unicode字符集，为了各版本的兼容，最好的方法是使用TEXT宏。即将程序改为：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">if</span> (!SUCCEEDED(hr))</div><div class="line"></div><div class="line">	&#123;</div><div class="line"></div><div class="line">		MessageBox(<span class="number">_</span>T(<span class="string">"无法创建DOMDocument对象，请检查是否安装了MS XML Parser 运行库!"</span>));</div><div class="line"></div><div class="line">		<span class="keyword">return</span>;</div><div class="line"></div><div class="line">	&#125;</div></pre></td></tr></table></figure></p>
<p>即能编译通过。</p>
<p>2.<br><img src="http://img.blog.csdn.net/20170713214741223?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="报错2"><br>这个DOMDocument40是什么？同样的程序，WIN7电脑就可以编译通过，WIN10就报错？要换成DOMDocument60才行。</p>
<p>答：MSXML SDK版本不同造成的差异。</p>
<h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p><a href="http://m.blog.csdn.net/John_ToStr/article/details/50970443" target="_blank" rel="external">MFC中利用MSXML解析XML文档</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;div align=&quot;left&quot;&gt;&lt;br&gt;&lt;img src=&quot;http://p7.qhimg.com/t01ca7ccf3b4a3ffe38.png&quot; width=&quot;300&quot; height=&quot;180&quot; style=&quot;float:right;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;/div&gt;&lt;br&gt;　　&lt;br&gt;　　&lt;br&gt;　　&lt;br&gt;如题。&lt;br&gt;　　&lt;br&gt;　&lt;br&gt;　　　&lt;br&gt;
    
    </summary>
    
      <category term="互联网" scheme="http://hubojing.github.io/categories/%E4%BA%92%E8%81%94%E7%BD%91/"/>
    
    
      <category term="MFC" scheme="http://hubojing.github.io/tags/MFC/"/>
    
      <category term="XML" scheme="http://hubojing.github.io/tags/XML/"/>
    
  </entry>
  
  <entry>
    <title>新闻杂谈</title>
    <link href="http://hubojing.github.io/2017/06/29/%E5%8B%92%E7%B4%A2%E7%97%85%E6%AF%92/"/>
    <id>http://hubojing.github.io/2017/06/29/勒索病毒/</id>
    <published>2017-06-29T15:26:53.000Z</published>
    <updated>2017-07-08T03:22:29.637Z</updated>
    
    <content type="html"><![CDATA[<div align="left"><br><img src="http://n.sinaimg.cn/translate/20170628/njjU-fyhneam5185815.jpg" width="300" height="180" style="float:right;"><br><br><br><br><br>给Petya病毒差评，比永恒之蓝的用户体验差太多了，竟然没有简体中文版！！！<br>　　<br><br><br> </div>

<a id="more"></a>
<p>QQ身份证显示，2006年加入QQ，竟然是全球第7.96亿个用户？？？？然而腾讯2008年用户数也才4.3亿吧，前不久统计全国网民也还不到十亿。<br>。。。。。。<br>好吧，我看2014年注册的号已经是第41.2亿个用户了，很强势。。。看来很多人都有多个QQ号→_→</p>
<hr>
<p><strong>三条新闻</strong></p>
<p>巴铁狗带<br>今天看新闻巴铁终于被拆了……<br>还记得当初第一回看到这个新概念视频时还觉得超酷的，然而仔细一想就漏洞百出。黑科技常有，但在众人提出质疑后却给不出解决方案的情况下一意孤行就很不地道。只能说是打着科研旗号骗国家钱的玩意儿……</p>
<hr>
<p>之前报道：<br>【微软惊呆：Win 10源代码泄漏！】外媒Theregister获得消息称，Win10源代码目前在网上被大量泄漏，这些源代码大小超过32TB。据悉，这些代码在今年三月左右在微软内部系统当中流出，包含Win10硬件驱动程序源码及USB和Wi-Fi协议栈等，获得源代码的黑客将可以查找系统中的漏洞用来破坏全球Windows系统.. ​</p>
<p>标题我都想好了：<br>震惊！！Windows系统将走向开源 国产自主研发加速</p>
<p>最新消息：微软承认遭泄露，不过只有1.2G。（这就很不新闻了）</p>
<hr>
<p>最近勒索病毒又升级了……吓得我又去看看自己win10升级没……</p>
<p>Petya病毒对勒索对象的加密，分为以下7个步骤：<br>遍历所有驱动器，对每个驱动器创建一个线程并行加密 -&gt; 生成AES-128密钥key -&gt; 遍历磁盘文件，用key对其进行AES加密 -&gt; 从程序中获取一个公钥pubkey（内置固定） -&gt; 用pubkey加密key，得到ekey -&gt; 将ekey写入README.TXT -&gt; 释放key</p>
<p><a href="https://yq.aliyun.com/articles/85783?spm=5176.100239.blogcont111587.33.CQn23O&amp;utm_content=m_24432" target="_blank" rel="external">WanaCrypt0r勒索蠕虫完全分析报告</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;div align=&quot;left&quot;&gt;&lt;br&gt;&lt;img src=&quot;http://n.sinaimg.cn/translate/20170628/njjU-fyhneam5185815.jpg&quot; width=&quot;300&quot; height=&quot;180&quot; style=&quot;float:right;&quot;/&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;给Petya病毒差评，比永恒之蓝的用户体验差太多了，竟然没有简体中文版！！！&lt;br&gt;　　&lt;br&gt;&lt;br&gt;&lt;br&gt; &lt;/div&gt;
    
    </summary>
    
      <category term="杂谈" scheme="http://hubojing.github.io/categories/%E6%9D%82%E8%B0%88/"/>
    
    
      <category term="病毒" scheme="http://hubojing.github.io/tags/%E7%97%85%E6%AF%92/"/>
    
  </entry>
  
  <entry>
    <title>HOOPS记录</title>
    <link href="http://hubojing.github.io/2017/06/25/HOOPS%E8%AE%B0%E5%BD%95/"/>
    <id>http://hubojing.github.io/2017/06/25/HOOPS记录/</id>
    <published>2017-06-25T14:54:44.000Z</published>
    <updated>2017-06-29T16:30:58.238Z</updated>
    
    <content type="html"><![CDATA[<div align="left"><br><img src="https://ss2.bdstatic.com/70cFvnSh_Q1YnxGkpoWK1HF6hhy/it/u=2467623496,1926622754&fm=15&gp=0.jpg" width="300" height="180" style="float:right;"><br><br> HOOPS初学概念小记（自用笔记）。<br>　　<br><br><br> </div>

<a id="more"></a>
<h1 id="hoops-3d-application-framework-hoops3daf"><a href="#HOOPS-3D-Application-Framework-HOOPS-3dAF" class="headerlink" title="HOOPS 3D Application Framework (HOOPS/3dAF)"></a>HOOPS 3D Application Framework (HOOPS/3dAF)</h1><p>官网描述<br>With HOOPS Visualize, you can rapidly produce eye-popping graphics across both mobile and desktop platforms. </p>
<p>At its core, HOOPS Visualize provides a flexible, hierarchical scene management engine capable of handling a range of graphics entities, together with a sophisticated graphics pipeline and high-performance graphics and interaction handling algorithms. It also delivers advanced capabilities to accelerate your application development, including an animation engine, clash detection, multi-plane sectioning, and large model visualization. </p>
<h1 id="hoops-基本图元和属性支持"><a href="#HOOPS-基本图元和属性支持" class="headerlink" title="HOOPS 基本图元和属性支持"></a>HOOPS 基本图元和属性支持</h1><blockquote>
<p>几 何</p>
<ul>
<li>Images, Unicode Text, Points, Lines, Polygons, Polylines, Polycylinders, NURBS curves, NURBS surfaces, Arcs, Ellipses, Circles, Tristrips, Trifans, Indexed Facesets, Cutting Planes, Capping Geometry<br>几何属性<br>Color, Transparency, Textures, Visibility, Patterns (Facet,edge 和 Line), Color Ramps, Lighting Interpolation, Selectability<br>渲染属性<br>Shaded, Analytic Hidden Line, Wireframe,Color Maps, Various Color Ramping Algorithms, Window Background Coloring</li>
</ul>
</blockquote>
<p>edges包含polygons,shells,meshes.<br>faces包含shells和meshes.<br>markers 单独的点.</p>
<p>标记marker</p>
<blockquote>
<p>可作为注释来使用</p>
<ul>
<li>当放大和缩小时标记的大小是不变的</li>
<li>标记的大小是朝向相机的，它并不旋转</li>
</ul>
</blockquote>
<h1 id="hoops-mvo-mvo分别是model-view-operator的缩写"><a href="#HOOPS-MVO-（MVO分别是Model、View、Operator的缩写）" class="headerlink" title="HOOPS MVO  （MVO分别是Model、View、Operator的缩写）"></a>HOOPS MVO  （MVO分别是Model、View、Operator的缩写）</h1><blockquote>
<p>段结构</p>
<ul>
<li>HDB</li>
<li>HBaseModel：处理在包含库下的段</li>
<li>HBaseView：处理在驱动段下的段和实例</li>
<li>HbaseOperator：处理图形用户界面/事件循环<br>· 相机操作<br>· 几何对象操作<br>· 选择</li>
</ul>
</blockquote>
<h1 id="3d应用程序中经常用到的函数"><a href="#3D应用程序中经常用到的函数" class="headerlink" title="3D应用程序中经常用到的函数"></a>3D应用程序中经常用到的函数</h1><ul>
<li>保存应用程序数据</li>
<li>绘制应用程序数据</li>
<li>管理应用程序数据</li>
<li>相机</li>
<li>选择</li>
<li>坐标</li>
<li>查询</li>
<li>驱动器设置</li>
</ul>
<h1 id="shell官网描述"><a href="#shell官网描述" class="headerlink" title="shell官网描述"></a>shell官网描述</h1><p>3D applications typically represent 3D objects with an “indexed face set” or “polygon-point mesh”. In Visualize, such primitives are called ‘shells’. A shell defines the boundary surface of an object in 3D using a set of planar polygons. Polygons can be multi-sided and can include holes. A shell is defined as an array of vertices (3D points) and an array of indices into the vertex array that define each polygonal face.</p>
<p>HOOPS Visualize supports a wide range of advanced functionality relating to shells, including the ability to select, highlight, and modify individual sub-entities (faces, edges, and vertices). Attributes such as normals, colors, and texture coordinates can also be set at the sub-entity level to enable a variety of complex shading and display.</p>
<p>Shell   一系列连通的Face / Wire的集合。线、面的集合，能位于实体外，也能在内部形成空洞。一个体含一个悬挂面，一个体内嵌许多和外表面相连的面都称为shell。</p>
<h2 id="shell-attributes属性"><a href="#shell-attributes属性" class="headerlink" title="shell attributes属性"></a>shell attributes属性</h2><p>1.Vertex markers<br>2.Silhouette（外表面）/perimeter/hard/adjacent edges<br>3.Cut edges/faces<br>4.Attributes on subparts<br>5.Smooth shading<br>6.Advanced rendering</p>
<h1 id="selection官网描述"><a href="#selection官网描述" class="headerlink" title="selection官网描述"></a>selection官网描述</h1><p>The Visualize libraries provide multiple operations for selection and several advanced highlighting techniques.</p>
<p>Selection</p>
<p>Control over what is targeted for selection is configurable:</p>
<p>Segments in the scene graph can be marked as available for selection<br>The selection level can be specified – entity, geometry, segment, or segment tree. Selection of individual vertices, edges and faces can be configured<br>The number of selected items to search for is configurable<br>The selection proximity can be used to select the nearest item on screen within a screen-based tolerance<br>Selections can be made of all items inside and outside a drag box, inside arbitrary screen regions defined by polylines or polygons, by a volume of 3D space, and by an arbitrary triangle mesh in 3D for clash/collision detection.</p>
<h1 id="坐标系coordinate-systems"><a href="#坐标系（Coordinate-Systems）" class="headerlink" title="坐标系（Coordinate Systems）"></a>坐标系（Coordinate Systems）</h1><p>对象（Object）-&gt;世界（World）-&gt;(-&gt;视点ViewPoint)-&gt;外窗口（Outer Window）-&gt;像素（Pixel）</p>
<h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><p><a href="http://blog.csdn.net/myan/article/details/647511" target="_blank" rel="external">理解矩阵（一）</a><br><a href="http://blog.csdn.net/myan/article/details/649018" target="_blank" rel="external">理解矩阵（二）</a><br><a href="http://blog.csdn.net/myan/article/details/1865397" target="_blank" rel="external">理解矩阵（三）</a><br><a href="https://wenku.baidu.com/view/a19bf8ec4afe04a1b071ded2.html?re=view" target="_blank" rel="external">HOOPS基础培训课程1</a><br><a href="https://wenku.baidu.com/view/a0154f28915f804d2b16c1d2.html?re=view" target="_blank" rel="external">HOOPS基础培训课程2</a><br><a href="https://wenku.baidu.com/view/84fdc0c789eb172ded63b7d2.html?re=view" target="_blank" rel="external">HOOPS基础培训课程3</a><br><a href="https://wenku.baidu.com/view/796caa5377232f60ddcca102.html?re=view" target="_blank" rel="external">HOOPS_MFC应用程序向导</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;div align=&quot;left&quot;&gt;&lt;br&gt;&lt;img src=&quot;https://ss2.bdstatic.com/70cFvnSh_Q1YnxGkpoWK1HF6hhy/it/u=2467623496,1926622754&amp;fm=15&amp;gp=0.jpg&quot; width=&quot;300&quot; height=&quot;180&quot; style=&quot;float:right;&quot;/&gt;&lt;br&gt;&lt;br&gt; HOOPS初学概念小记（自用笔记）。&lt;br&gt;　　&lt;br&gt;&lt;br&gt;&lt;br&gt; &lt;/div&gt;
    
    </summary>
    
      <category term="互联网" scheme="http://hubojing.github.io/categories/%E4%BA%92%E8%81%94%E7%BD%91/"/>
    
    
      <category term="HOOPS 3D" scheme="http://hubojing.github.io/tags/HOOPS-3D/"/>
    
  </entry>
  
  <entry>
    <title>MFC+多线程+进度条+复制文件（夹）</title>
    <link href="http://hubojing.github.io/2017/06/15/MFC-%E5%A4%9A%E7%BA%BF%E7%A8%8B-%E8%BF%9B%E5%BA%A6%E6%9D%A1-%E5%A4%8D%E5%88%B6%E6%96%87%E4%BB%B6%EF%BC%88%E5%A4%B9%EF%BC%89/"/>
    <id>http://hubojing.github.io/2017/06/15/MFC-多线程-进度条-复制文件（夹）/</id>
    <published>2017-06-15T10:00:17.000Z</published>
    <updated>2017-06-15T10:25:01.000Z</updated>
    
    <content type="html"><![CDATA[<div align="left"><br><img src="https://ss3.bdstatic.com/70cFv8Sh_Q1YnxGkpoWK1HF6hhy/it/u=1049830277,1612840852&fm=26&gp=0.jpg" width="300" height="180" style="float:right;"><br><br><br>MFC，多线程+进度条+复制文件（夹）小程序。<br><br><br> </div>

<a id="more"></a>
<p>　　多线程：</p>
<ol>
<li>做一个MFC对话框程序。</li>
<li>点击开始按钮，程序启动一个工作线程，复制指定的文件夹到目标位置。</li>
<li>同时在更新进度条，反映当前的复制进度（按文件数量计算进度）。</li>
<li>点击停止按钮时终止，但需要保证当前正在复制的文件得以复制完成。</li>
<li>工作线程访问主线程需要使用消息机制，不能直接访问。</li>
<li>主界面不能锁死，停止按钮需要随时可以响应点击。</li>
</ol>
<p>整体思路：<br>在开始按钮里的响应函数中创建一个线程，在线程里复制，通过消息机制更新进度条，在消息机制的函数中和复制过程关联显示进度。</p>
<p>需要解决的问题：<br>1.怎么创建线程<br>2.怎么更新进度条<br>3.怎么将编辑框中输入的路径被copyfile函数读取到<br>4.怎么获取文件个数（遍历）<br>5.怎么把进度条和复制文件进度关联<br>（通过文件个数 进度条范围设置为0-文件数量长度    步长为1 完成一次复制加一次）<br>6.点击取消怎么保证当前正在复制的文件得以复制完成</p>
<p>获取个数：<br>递归遍历整个文件夹，然后递归复制文件到目的文件夹。<br>在递归遍历整个文件夹的时候，就可以拿到整个文件夹的大小以及文件数量。</p>
<p>传递进度数据，用postmessage到该进度条的窗口，在进度条窗口获取该消息 设置SetPos，updatedata该控件。<br>一个对话框里有个进度条控件，当线程接收到数据（文件的总大小和收到的大小）postmessage给对话框，对话框的PreTranslateMessage(MSG* pMsg)截取该消息设置进度条控件（范围和增量，setpos）。</p>
<p>我的方案：<br>关键代码：</p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//复制函数</span></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">CopyDirectory</span><span class="params">(CString source, CString target, CCopyFoldersDlg * pDlg)</span>    </span></div><div class="line">&#123;</div><div class="line"> 	 </div><div class="line">	CreateDirectory(target,<span class="literal">NULL</span>);   </div><div class="line">  </div><div class="line">    CFileFind finder;    </div><div class="line">    CString path;    </div><div class="line">    path.Format(<span class="number">_</span>T(<span class="string">"%s\\*.*"</span>),source);    </div><div class="line">  </div><div class="line">    BOOL bWorking = finder.FindFile(path);    </div><div class="line">    <span class="keyword">while</span> (bWorking)  </div><div class="line">    &#123;   </div><div class="line">        bWorking = finder.FindNextFile();   </div><div class="line">           </div><div class="line">        <span class="keyword">if</span> (finder.IsDirectory() &amp;&amp; !finder.IsDots())  </div><div class="line">        &#123;   </div><div class="line">            CopyDirectory(finder.GetFilePath(), target+<span class="number">_</span>T(<span class="string">"\\"</span>)+finder.GetFileName(), pDlg);  <span class="comment">//递归 </span></div><div class="line">        &#125;    </div><div class="line">        <span class="keyword">else</span>  </div><div class="line">        &#123;      </div><div class="line"></div><div class="line">			WaitForSingleObject(pDlg-&gt;hEvent,INFINITE);</div><div class="line"></div><div class="line">            CopyFile(finder.GetFilePath(), target+<span class="number">_</span>T(<span class="string">"\\"</span>)+finder.GetFileName(), FALSE);   </div><div class="line">            count++;  </div><div class="line">            pDlg-&gt;PostMessage(WM_USER_PROCESS, count);  </div><div class="line">          </div><div class="line">  </div><div class="line">             Sleep(<span class="number">50</span>);   </div><div class="line">        &#125;   </div><div class="line">    &#125;    </div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function">VOID <span class="title">GetInfo</span><span class="params">(CString csPath, <span class="keyword">long</span>&amp; FoldersNum, <span class="keyword">long</span>&amp; FilesNum)</span>  </span></div><div class="line">&#123;     </div><div class="line">    SetCurrentDirectory(csPath);  </div><div class="line">    CFileFind finder;  </div><div class="line">    BOOL bWorking = finder.FindFile(<span class="number">_</span>T(<span class="string">"*.*"</span>));  </div><div class="line">    <span class="keyword">while</span>(bWorking)  </div><div class="line">    &#123;  </div><div class="line">        bWorking = finder.FindNextFile();  </div><div class="line">  </div><div class="line">        <span class="keyword">if</span>(finder.IsDots())   </div><div class="line">        &#123;  </div><div class="line">            <span class="keyword">continue</span>;  </div><div class="line">        &#125;  </div><div class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(finder.IsDirectory())  </div><div class="line">        &#123;  </div><div class="line">            ++FoldersNum;  </div><div class="line">            GetInfo(finder.GetFilePath(), FoldersNum, FilesNum);  </div><div class="line">        &#125;  </div><div class="line">        <span class="keyword">else</span>  </div><div class="line">        &#123;  </div><div class="line">            ++FilesNum;  </div><div class="line">        &#125;  </div><div class="line">    &#125;  </div><div class="line">      </div><div class="line">&#125;  </div><div class="line"></div><div class="line"><span class="comment">//复制线程</span></div><div class="line">DWORD WINAPI CCopyFoldersDlg::CopyFolders(LPVOID pParam)</div><div class="line">&#123;  </div><div class="line">	CCopyFoldersDlg* pDlg = (CCopyFoldersDlg*)pParam;  </div><div class="line"></div><div class="line">	 <span class="keyword">if</span> (!pDlg) </div><div class="line">	 &#123;</div><div class="line">		 <span class="keyword">return</span> <span class="number">0</span>;  </div><div class="line">	 &#125;</div><div class="line">	 ResetEvent(pDlg-&gt;hExit);  </div><div class="line"></div><div class="line">	<span class="keyword">long</span> FoldersNum  = <span class="number">0</span>;                 </div><div class="line">    <span class="keyword">long</span> FilesNum = <span class="number">0</span>;                  </div><div class="line">    GetInfo(pDlg-&gt;m_SrcPath,FoldersNum, FilesNum);  </div><div class="line">	pDlg-&gt;m_Progress.SetRange(<span class="number">0</span>, FilesNum);  </div><div class="line">    pDlg-&gt;m_Progress.SetStep(<span class="number">1</span>); </div><div class="line">	CopyDirectory(pDlg-&gt;m_SrcPath, pDlg-&gt;m_DesPath, pDlg);   </div><div class="line"></div><div class="line">	SetEvent(pDlg-&gt;hExit);  </div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line">LRESULT CCopyFoldersDlg::Do_process(WPARAM wParam, LPARAM lParam)   </div><div class="line">&#123;   </div><div class="line">   wParam += <span class="number">1</span>;  </div><div class="line">   m_Progress.SetPos(wParam);    </div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;  </div><div class="line">&#125;         </div><div class="line">  </div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">void</span> CCopyFoldersDlg::OnStart() </div><div class="line">&#123;</div><div class="line">	UpdateData(<span class="literal">true</span>);</div><div class="line"></div><div class="line">	<span class="keyword">if</span> ((m_SrcPath.IsEmpty() &amp;&amp; m_DesPath.IsEmpty()))</div><div class="line">	&#123;</div><div class="line">		MessageBox(<span class="string">"路径不能为空！"</span>);</div><div class="line">		<span class="keyword">return</span>;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	<span class="keyword">else</span></div><div class="line">	&#123;</div><div class="line">		<span class="comment">//创建线程</span></div><div class="line">		hThread = CreateThread(<span class="literal">NULL</span>, <span class="number">0</span>, CopyFolders, <span class="keyword">this</span>, <span class="number">0</span>, <span class="literal">NULL</span>);</div><div class="line">		hEvent = CreateEvent(<span class="literal">NULL</span>, TRUE, TRUE, <span class="literal">NULL</span>);</div><div class="line">		CloseHandle(hThread);</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">void</span> CCopyFoldersDlg::OnStop() </div><div class="line">&#123;</div><div class="line">	m_iStatus++;  </div><div class="line">         </div><div class="line">    <span class="keyword">if</span> (m_iStatus % <span class="number">2</span> == <span class="number">0</span>)  </div><div class="line">    &#123;    </div><div class="line">         SetEvent(hEvent);</div><div class="line">    &#125;   </div><div class="line">    <span class="keyword">else</span>  </div><div class="line">    &#123;  </div><div class="line">        ResetEvent(hEvent);</div><div class="line">    &#125;  </div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">void</span> CCopyFoldersDlg::OnTimer(UINT_PTR nIDEvent)  </div><div class="line">&#123;  </div><div class="line">    CDialog::OnTimer(nIDEvent);  </div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>完整代码：<br>.cpp文件</p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div><div class="line">175</div><div class="line">176</div><div class="line">177</div><div class="line">178</div><div class="line">179</div><div class="line">180</div><div class="line">181</div><div class="line">182</div><div class="line">183</div><div class="line">184</div><div class="line">185</div><div class="line">186</div><div class="line">187</div><div class="line">188</div><div class="line">189</div><div class="line">190</div><div class="line">191</div><div class="line">192</div><div class="line">193</div><div class="line">194</div><div class="line">195</div><div class="line">196</div><div class="line">197</div><div class="line">198</div><div class="line">199</div><div class="line">200</div><div class="line">201</div><div class="line">202</div><div class="line">203</div><div class="line">204</div><div class="line">205</div><div class="line">206</div><div class="line">207</div><div class="line">208</div><div class="line">209</div><div class="line">210</div><div class="line">211</div><div class="line">212</div><div class="line">213</div><div class="line">214</div><div class="line">215</div><div class="line">216</div><div class="line">217</div><div class="line">218</div><div class="line">219</div><div class="line">220</div><div class="line">221</div><div class="line">222</div><div class="line">223</div><div class="line">224</div><div class="line">225</div><div class="line">226</div><div class="line">227</div><div class="line">228</div><div class="line">229</div><div class="line">230</div><div class="line">231</div><div class="line">232</div><div class="line">233</div><div class="line">234</div><div class="line">235</div><div class="line">236</div><div class="line">237</div><div class="line">238</div><div class="line">239</div><div class="line">240</div><div class="line">241</div><div class="line">242</div><div class="line">243</div><div class="line">244</div><div class="line">245</div><div class="line">246</div><div class="line">247</div><div class="line">248</div><div class="line">249</div><div class="line">250</div><div class="line">251</div><div class="line">252</div><div class="line">253</div><div class="line">254</div><div class="line">255</div><div class="line">256</div><div class="line">257</div><div class="line">258</div><div class="line">259</div><div class="line">260</div><div class="line">261</div><div class="line">262</div><div class="line">263</div><div class="line">264</div><div class="line">265</div><div class="line">266</div><div class="line">267</div><div class="line">268</div><div class="line">269</div><div class="line">270</div><div class="line">271</div><div class="line">272</div><div class="line">273</div><div class="line">274</div><div class="line">275</div><div class="line">276</div><div class="line">277</div><div class="line">278</div><div class="line">279</div><div class="line">280</div><div class="line">281</div><div class="line">282</div><div class="line">283</div><div class="line">284</div><div class="line">285</div><div class="line">286</div><div class="line">287</div><div class="line">288</div><div class="line">289</div><div class="line">290</div><div class="line">291</div><div class="line">292</div><div class="line">293</div><div class="line">294</div><div class="line">295</div><div class="line">296</div><div class="line">297</div><div class="line">298</div><div class="line">299</div><div class="line">300</div><div class="line">301</div><div class="line">302</div><div class="line">303</div><div class="line">304</div><div class="line">305</div><div class="line">306</div><div class="line">307</div><div class="line">308</div><div class="line">309</div><div class="line">310</div><div class="line">311</div><div class="line">312</div><div class="line">313</div><div class="line">314</div><div class="line">315</div><div class="line">316</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// CopyFoldersDlg.cpp : implementation file</span></div><div class="line"><span class="comment">//</span></div><div class="line"></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"stdafx.h"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"CopyFolders.h"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"CopyFoldersDlg.h"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"windows.h"</span></span></div><div class="line"></div><div class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> _DEBUG</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> new DEBUG_NEW</span></div><div class="line"><span class="meta">#<span class="meta-keyword">undef</span> THIS_FILE</span></div><div class="line"><span class="keyword">static</span> <span class="keyword">char</span> THIS_FILE[] = <span class="number">__F</span>ILE__;</div><div class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></div><div class="line"></div><div class="line"><span class="keyword">static</span> <span class="keyword">int</span> count = <span class="number">0</span>; </div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> WM_USER_PROCESS (WM_USER+101)  </span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">CopyDirectory</span><span class="params">(CString source, CString target,CWnd * pWndMsg)</span></span>;  </div><div class="line"><span class="comment">/////////////////////////////////////////////////////////////////////////////</span></div><div class="line"><span class="comment">// CAboutDlg dialog used for App About</span></div><div class="line"></div><div class="line"><span class="keyword">class</span> CAboutDlg : <span class="keyword">public</span> CDialog</div><div class="line">&#123;</div><div class="line"><span class="keyword">public</span>:</div><div class="line">	CAboutDlg();</div><div class="line"></div><div class="line"><span class="comment">// Dialog Data</span></div><div class="line">	<span class="comment">//&#123;&#123;AFX_DATA(CAboutDlg)</span></div><div class="line">	<span class="keyword">enum</span> &#123; IDD = IDD_ABOUTBOX &#125;;</div><div class="line">	<span class="comment">//&#125;&#125;AFX_DATA</span></div><div class="line"></div><div class="line">	<span class="comment">// ClassWizard generated virtual function overrides</span></div><div class="line">	<span class="comment">//&#123;&#123;AFX_VIRTUAL(CAboutDlg)</span></div><div class="line">	<span class="keyword">protected</span>:</div><div class="line">	<span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">DoDataExchange</span><span class="params">(CDataExchange* pDX)</span></span>;    <span class="comment">// DDX/DDV support</span></div><div class="line">	<span class="comment">//&#125;&#125;AFX_VIRTUAL</span></div><div class="line"></div><div class="line"><span class="comment">// Implementation</span></div><div class="line"><span class="keyword">protected</span>:</div><div class="line">	<span class="comment">//&#123;&#123;AFX_MSG(CAboutDlg)</span></div><div class="line">	<span class="comment">//&#125;&#125;AFX_MSG</span></div><div class="line">	DECLARE_MESSAGE_MAP()</div><div class="line">&#125;;</div><div class="line"></div><div class="line">CAboutDlg::CAboutDlg() : CDialog(CAboutDlg::IDD)</div><div class="line">&#123;</div><div class="line">	<span class="comment">//&#123;&#123;AFX_DATA_INIT(CAboutDlg)</span></div><div class="line">	<span class="comment">//&#125;&#125;AFX_DATA_INIT</span></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">void</span> CAboutDlg::DoDataExchange(CDataExchange* pDX)</div><div class="line">&#123;</div><div class="line">	CDialog::DoDataExchange(pDX);</div><div class="line">	<span class="comment">//&#123;&#123;AFX_DATA_MAP(CAboutDlg)</span></div><div class="line">	<span class="comment">//&#125;&#125;AFX_DATA_MAP</span></div><div class="line">&#125;</div><div class="line"></div><div class="line">BEGIN_MESSAGE_MAP(CAboutDlg, CDialog)</div><div class="line">	<span class="comment">//&#123;&#123;AFX_MSG_MAP(CAboutDlg)</span></div><div class="line">		<span class="comment">// No message handlers</span></div><div class="line">	<span class="comment">//&#125;&#125;AFX_MSG_MAP</span></div><div class="line">END_MESSAGE_MAP()</div><div class="line"></div><div class="line"><span class="comment">/////////////////////////////////////////////////////////////////////////////</span></div><div class="line"><span class="comment">// CCopyFoldersDlg dialog</span></div><div class="line"></div><div class="line">CCopyFoldersDlg::CCopyFoldersDlg(CWnd* pParent <span class="comment">/*=NULL*/</span>)</div><div class="line">	: CDialog(CCopyFoldersDlg::IDD, pParent)</div><div class="line">&#123;</div><div class="line">	<span class="comment">//&#123;&#123;AFX_DATA_INIT(CCopyFoldersDlg)</span></div><div class="line">	m_SrcPath = <span class="number">_</span>T(<span class="string">""</span>);</div><div class="line">	m_DesPath = <span class="number">_</span>T(<span class="string">""</span>);</div><div class="line">	<span class="comment">//&#125;&#125;AFX_DATA_INIT</span></div><div class="line">	<span class="comment">// Note that LoadIcon does not require a subsequent DestroyIcon in Win32</span></div><div class="line">	m_hIcon = AfxGetApp()-&gt;LoadIcon(IDR_MAINFRAME);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">void</span> CCopyFoldersDlg::DoDataExchange(CDataExchange* pDX)</div><div class="line">&#123;</div><div class="line">	CDialog::DoDataExchange(pDX);</div><div class="line">	<span class="comment">//&#123;&#123;AFX_DATA_MAP(CCopyFoldersDlg)</span></div><div class="line">	DDX_Control(pDX, IDC_PROGRESS, m_Progress);</div><div class="line">	DDX_Text(pDX, IDC_EDIT1, m_SrcPath);</div><div class="line">	DDX_Text(pDX, IDC_EDIT2, m_DesPath);</div><div class="line">	<span class="comment">//&#125;&#125;AFX_DATA_MAP</span></div><div class="line">&#125;</div><div class="line"></div><div class="line">BEGIN_MESSAGE_MAP(CCopyFoldersDlg, CDialog)</div><div class="line">	<span class="comment">//&#123;&#123;AFX_MSG_MAP(CCopyFoldersDlg)</span></div><div class="line">	ON_WM_SYSCOMMAND()</div><div class="line">	ON_WM_PAINT()</div><div class="line">	ON_WM_QUERYDRAGICON()</div><div class="line">	ON_BN_CLICKED(IDC_START, OnStart)</div><div class="line">	ON_BN_CLICKED(IDC_STOP, OnStop)</div><div class="line">	ON_MESSAGE(WM_USER_PROCESS, Do_process)  </div><div class="line">	ON_WM_TIMER()  </div><div class="line"> </div><div class="line">	<span class="comment">//&#125;&#125;AFX_MSG_MAP</span></div><div class="line">END_MESSAGE_MAP()</div><div class="line"></div><div class="line"><span class="comment">/////////////////////////////////////////////////////////////////////////////</span></div><div class="line"><span class="comment">// CCopyFoldersDlg message handlers</span></div><div class="line"></div><div class="line">BOOL CCopyFoldersDlg::OnInitDialog()</div><div class="line">&#123;</div><div class="line">	CDialog::OnInitDialog();</div><div class="line"></div><div class="line">	<span class="comment">// Add "About..." menu item to system menu.</span></div><div class="line"></div><div class="line">	<span class="comment">// IDM_ABOUTBOX must be in the system command range.</span></div><div class="line">	ASSERT((IDM_ABOUTBOX &amp; <span class="number">0xFFF0</span>) == IDM_ABOUTBOX);</div><div class="line">	ASSERT(IDM_ABOUTBOX &lt; <span class="number">0xF000</span>);</div><div class="line"></div><div class="line">	CMenu* pSysMenu = GetSystemMenu(FALSE);</div><div class="line">	<span class="keyword">if</span> (pSysMenu != <span class="literal">NULL</span>)</div><div class="line">	&#123;</div><div class="line">		CString strAboutMenu;</div><div class="line">		strAboutMenu.LoadString(IDS_ABOUTBOX);</div><div class="line">		<span class="keyword">if</span> (!strAboutMenu.IsEmpty())</div><div class="line">		&#123;</div><div class="line">			pSysMenu-&gt;AppendMenu(MF_SEPARATOR);</div><div class="line">			pSysMenu-&gt;AppendMenu(MF_STRING, IDM_ABOUTBOX, strAboutMenu);</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	<span class="comment">// Set the icon for this dialog.  The framework does this automatically</span></div><div class="line">	<span class="comment">//  when the application's main window is not a dialog</span></div><div class="line">	SetIcon(m_hIcon, TRUE);			<span class="comment">// Set big icon</span></div><div class="line">	SetIcon(m_hIcon, FALSE);		<span class="comment">// Set small icon</span></div><div class="line">	</div><div class="line">	<span class="comment">// <span class="doctag">TODO:</span> Add extra initialization here</span></div><div class="line">	</div><div class="line">	<span class="keyword">return</span> TRUE;  <span class="comment">// return TRUE  unless you set the focus to a control</span></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">void</span> CCopyFoldersDlg::OnSysCommand(UINT nID, LPARAM lParam)</div><div class="line">&#123;</div><div class="line">	<span class="keyword">if</span> ((nID &amp; <span class="number">0xFFF0</span>) == IDM_ABOUTBOX)</div><div class="line">	&#123;</div><div class="line">		CAboutDlg dlgAbout;</div><div class="line">		dlgAbout.DoModal();</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">else</span></div><div class="line">	&#123;</div><div class="line">		CDialog::OnSysCommand(nID, lParam);</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">// If you add a minimize button to your dialog, you will need the code below</span></div><div class="line"><span class="comment">//  to draw the icon.  For MFC applications using the document/view model,</span></div><div class="line"><span class="comment">//  this is automatically done for you by the framework.</span></div><div class="line"></div><div class="line"><span class="keyword">void</span> CCopyFoldersDlg::OnPaint() </div><div class="line">&#123;</div><div class="line">	<span class="keyword">if</span> (IsIconic())</div><div class="line">	&#123;</div><div class="line">		<span class="function">CPaintDC <span class="title">dc</span><span class="params">(<span class="keyword">this</span>)</span></span>; <span class="comment">// device context for painting</span></div><div class="line"></div><div class="line">		SendMessage(WM_ICONERASEBKGND, (WPARAM) dc.GetSafeHdc(), <span class="number">0</span>);</div><div class="line"></div><div class="line">		<span class="comment">// Center icon in client rectangle</span></div><div class="line">		<span class="keyword">int</span> cxIcon = GetSystemMetrics(SM_CXICON);</div><div class="line">		<span class="keyword">int</span> cyIcon = GetSystemMetrics(SM_CYICON);</div><div class="line">		CRect rect;</div><div class="line">		GetClientRect(&amp;rect);</div><div class="line">		<span class="keyword">int</span> x = (rect.Width() - cxIcon + <span class="number">1</span>) / <span class="number">2</span>;</div><div class="line">		<span class="keyword">int</span> y = (rect.Height() - cyIcon + <span class="number">1</span>) / <span class="number">2</span>;</div><div class="line"></div><div class="line">		<span class="comment">// Draw the icon</span></div><div class="line">		dc.DrawIcon(x, y, m_hIcon);</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">else</span></div><div class="line">	&#123;</div><div class="line">		CDialog::OnPaint();</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">// The system calls this to obtain the cursor to display while the user drags</span></div><div class="line"><span class="comment">//  the minimized window.</span></div><div class="line">HCURSOR CCopyFoldersDlg::OnQueryDragIcon()</div><div class="line">&#123;</div><div class="line">	<span class="keyword">return</span> (HCURSOR) m_hIcon;</div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"><span class="comment">//复制函数</span></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">CopyDirectory</span><span class="params">(CString source, CString target, CCopyFoldersDlg * pDlg)</span>    </span></div><div class="line">&#123;</div><div class="line"> 	 </div><div class="line">	CreateDirectory(target,<span class="literal">NULL</span>);   </div><div class="line">  </div><div class="line">    CFileFind finder;    </div><div class="line">    CString path;    </div><div class="line">    path.Format(<span class="number">_</span>T(<span class="string">"%s\\*.*"</span>),source);    </div><div class="line">  </div><div class="line">    BOOL bWorking = finder.FindFile(path);    </div><div class="line">    <span class="keyword">while</span> (bWorking)  </div><div class="line">    &#123;   </div><div class="line">        bWorking = finder.FindNextFile();   </div><div class="line">           </div><div class="line">        <span class="keyword">if</span> (finder.IsDirectory() &amp;&amp; !finder.IsDots())  </div><div class="line">        &#123;   </div><div class="line">            CopyDirectory(finder.GetFilePath(), target+<span class="number">_</span>T(<span class="string">"\\"</span>)+finder.GetFileName(), pDlg);  <span class="comment">//递归 </span></div><div class="line">        &#125;    </div><div class="line">        <span class="keyword">else</span>  </div><div class="line">        &#123;      </div><div class="line"></div><div class="line">			WaitForSingleObject(pDlg-&gt;hEvent,INFINITE);</div><div class="line"></div><div class="line">            CopyFile(finder.GetFilePath(), target+<span class="number">_</span>T(<span class="string">"\\"</span>)+finder.GetFileName(), FALSE);   </div><div class="line">            count++;  </div><div class="line">            pDlg-&gt;PostMessage(WM_USER_PROCESS, count);  </div><div class="line">          </div><div class="line">  </div><div class="line">             Sleep(<span class="number">50</span>);   </div><div class="line">        &#125;   </div><div class="line">    &#125;    </div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function">VOID <span class="title">GetInfo</span><span class="params">(CString csPath, <span class="keyword">long</span>&amp; FoldersNum, <span class="keyword">long</span>&amp; FilesNum)</span>  </span></div><div class="line">&#123;     </div><div class="line">    SetCurrentDirectory(csPath);  </div><div class="line">    CFileFind finder;  </div><div class="line">    BOOL bWorking = finder.FindFile(<span class="number">_</span>T(<span class="string">"*.*"</span>));  </div><div class="line">    <span class="keyword">while</span>(bWorking)  </div><div class="line">    &#123;  </div><div class="line">        bWorking = finder.FindNextFile();  </div><div class="line">  </div><div class="line">        <span class="keyword">if</span>(finder.IsDots())   </div><div class="line">        &#123;  </div><div class="line">            <span class="keyword">continue</span>;  </div><div class="line">        &#125;  </div><div class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(finder.IsDirectory())  </div><div class="line">        &#123;  </div><div class="line">            ++FoldersNum;  </div><div class="line">            GetInfo(finder.GetFilePath(), FoldersNum, FilesNum);  </div><div class="line">        &#125;  </div><div class="line">        <span class="keyword">else</span>  </div><div class="line">        &#123;  </div><div class="line">            ++FilesNum;  </div><div class="line">        &#125;  </div><div class="line">    &#125;  </div><div class="line">      </div><div class="line">&#125;  </div><div class="line"></div><div class="line"><span class="comment">//复制线程</span></div><div class="line">DWORD WINAPI CCopyFoldersDlg::CopyFolders(LPVOID pParam)</div><div class="line">&#123;  </div><div class="line">	CCopyFoldersDlg* pDlg = (CCopyFoldersDlg*)pParam;  </div><div class="line"></div><div class="line">	 <span class="keyword">if</span> (!pDlg) </div><div class="line">	 &#123;</div><div class="line">		 <span class="keyword">return</span> <span class="number">0</span>;  </div><div class="line">	 &#125;</div><div class="line">	 ResetEvent(pDlg-&gt;hExit);  </div><div class="line"></div><div class="line">	<span class="keyword">long</span> FoldersNum  = <span class="number">0</span>;                 </div><div class="line">    <span class="keyword">long</span> FilesNum = <span class="number">0</span>;                  </div><div class="line">    GetInfo(pDlg-&gt;m_SrcPath,FoldersNum, FilesNum);  </div><div class="line">	pDlg-&gt;m_Progress.SetRange(<span class="number">0</span>, FilesNum);  </div><div class="line">    pDlg-&gt;m_Progress.SetStep(<span class="number">1</span>); </div><div class="line">	CopyDirectory(pDlg-&gt;m_SrcPath, pDlg-&gt;m_DesPath, pDlg);   </div><div class="line"></div><div class="line">	SetEvent(pDlg-&gt;hExit);  </div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line">LRESULT CCopyFoldersDlg::Do_process(WPARAM wParam, LPARAM lParam)   </div><div class="line">&#123;   </div><div class="line">   wParam += <span class="number">1</span>;  </div><div class="line">   m_Progress.SetPos(wParam);    </div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;  </div><div class="line">&#125;         </div><div class="line">  </div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">void</span> CCopyFoldersDlg::OnStart() </div><div class="line">&#123;</div><div class="line">	UpdateData(<span class="literal">true</span>);</div><div class="line"></div><div class="line">	<span class="keyword">if</span> ((m_SrcPath.IsEmpty() &amp;&amp; m_DesPath.IsEmpty()))</div><div class="line">	&#123;</div><div class="line">		MessageBox(<span class="string">"路径不能为空！"</span>);</div><div class="line">		<span class="keyword">return</span>;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	<span class="keyword">else</span></div><div class="line">	&#123;</div><div class="line">		<span class="comment">//创建线程</span></div><div class="line">		hThread = CreateThread(<span class="literal">NULL</span>, <span class="number">0</span>, CopyFolders, <span class="keyword">this</span>, <span class="number">0</span>, <span class="literal">NULL</span>);</div><div class="line">		hEvent = CreateEvent(<span class="literal">NULL</span>, TRUE, TRUE, <span class="literal">NULL</span>);</div><div class="line">		CloseHandle(hThread);</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">void</span> CCopyFoldersDlg::OnStop() </div><div class="line">&#123;</div><div class="line">	m_iStatus++;  </div><div class="line">         </div><div class="line">    <span class="keyword">if</span> (m_iStatus % <span class="number">2</span> == <span class="number">0</span>)  </div><div class="line">    &#123;    </div><div class="line">         SetEvent(hEvent);</div><div class="line">    &#125;   </div><div class="line">    <span class="keyword">else</span>  </div><div class="line">    &#123;  </div><div class="line">        ResetEvent(hEvent);</div><div class="line">    &#125;  </div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">void</span> CCopyFoldersDlg::OnTimer(UINT_PTR nIDEvent)  </div><div class="line">&#123;  </div><div class="line">    CDialog::OnTimer(nIDEvent);  </div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>.h文件：</p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// CopyFoldersDlg.h : header file</span></div><div class="line"><span class="comment">//</span></div><div class="line"></div><div class="line"><span class="meta">#<span class="meta-keyword">if</span> !defined(AFX_COPYFOLDERSDLG_H__BADF1BD0_296B_4FED_96F7_BCD2628D4B03__INCLUDED_)</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> AFX_COPYFOLDERSDLG_H__BADF1BD0_296B_4FED_96F7_BCD2628D4B03__INCLUDED_</span></div><div class="line"></div><div class="line"><span class="meta">#<span class="meta-keyword">if</span> _MSC_VER &gt; 1000</span></div><div class="line"><span class="meta">#<span class="meta-keyword">pragma</span> once</span></div><div class="line"><span class="meta">#<span class="meta-keyword">endif</span> <span class="comment">// _MSC_VER &gt; 1000</span></span></div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"><span class="comment">/////////////////////////////////////////////////////////////////////////////</span></div><div class="line"><span class="comment">// CCopyFoldersDlg dialog</span></div><div class="line"></div><div class="line"><span class="keyword">class</span> CCopyFoldersDlg : <span class="keyword">public</span> CDialog</div><div class="line">&#123;</div><div class="line"><span class="comment">// Construction</span></div><div class="line"><span class="keyword">public</span>:</div><div class="line">	CCopyFoldersDlg(CWnd* pParent = <span class="literal">NULL</span>);	<span class="comment">// standard constructor</span></div><div class="line">				</div><div class="line">	HANDLE hThread;</div><div class="line">	HANDLE hEvent;     </div><div class="line">	HANDLE hExit;  </div><div class="line"></div><div class="line">	<span class="function"><span class="keyword">static</span> DWORD WINAPI <span class="title">CopyFolders</span><span class="params">(LPVOID pParam)</span></span>;</div><div class="line">	<span class="keyword">int</span> m_iStatus;  </div><div class="line"></div><div class="line"><span class="comment">// Dialog Data</span></div><div class="line">	<span class="comment">//&#123;&#123;AFX_DATA(CCopyFoldersDlg)</span></div><div class="line">	<span class="keyword">enum</span> &#123; IDD = IDD_COPYFOLDERS_DIALOG &#125;;</div><div class="line">	CProgressCtrl	m_Progress;</div><div class="line">	CString	m_SrcPath;</div><div class="line">	CString	m_DesPath;</div><div class="line">	<span class="comment">//&#125;&#125;AFX_DATA</span></div><div class="line"></div><div class="line">	<span class="comment">// ClassWizard generated virtual function overrides</span></div><div class="line">	<span class="comment">//&#123;&#123;AFX_VIRTUAL(CCopyFoldersDlg)</span></div><div class="line">	<span class="keyword">protected</span>:</div><div class="line">	<span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">DoDataExchange</span><span class="params">(CDataExchange* pDX)</span></span>;	<span class="comment">// DDX/DDV support</span></div><div class="line">	<span class="comment">//&#125;&#125;AFX_VIRTUAL</span></div><div class="line"></div><div class="line"><span class="comment">// Implementation</span></div><div class="line"><span class="keyword">protected</span>:</div><div class="line">	HICON m_hIcon;</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line">	<span class="comment">// Generated message map functions</span></div><div class="line">	<span class="comment">//&#123;&#123;AFX_MSG(CCopyFoldersDlg)</span></div><div class="line">	<span class="function"><span class="keyword">virtual</span> BOOL <span class="title">OnInitDialog</span><span class="params">()</span></span>;</div><div class="line">	<span class="function">afx_msg <span class="keyword">void</span> <span class="title">OnSysCommand</span><span class="params">(UINT nID, LPARAM lParam)</span></span>;</div><div class="line">	<span class="function">afx_msg <span class="keyword">void</span> <span class="title">OnPaint</span><span class="params">()</span></span>;</div><div class="line">	<span class="function">afx_msg HCURSOR <span class="title">OnQueryDragIcon</span><span class="params">()</span></span>;</div><div class="line">	<span class="function">afx_msg <span class="keyword">void</span> <span class="title">OnStart</span><span class="params">()</span></span>;</div><div class="line">	<span class="function">afx_msg <span class="keyword">void</span> <span class="title">OnStop</span><span class="params">()</span></span>;</div><div class="line">	afx_msg LRESULT CCopyFoldersDlg::Do_process(WPARAM wParam,LPARAM lParam); </div><div class="line">    <span class="function">afx_msg <span class="keyword">void</span> <span class="title">OnTimer</span><span class="params">(UINT_PTR nIDEvent)</span></span>;  </div><div class="line">	<span class="comment">//&#125;&#125;AFX_MSG</span></div><div class="line">	DECLARE_MESSAGE_MAP()</div><div class="line">&#125;;</div><div class="line"></div><div class="line"><span class="comment">//&#123;&#123;AFX_INSERT_LOCATION&#125;&#125;</span></div><div class="line"><span class="comment">// Microsoft Visual C++ will insert additional declarations immediately before the previous line.</span></div><div class="line"></div><div class="line"><span class="meta">#<span class="meta-keyword">endif</span> <span class="comment">// !defined(AFX_COPYFOLDERSDLG_H__BADF1BD0_296B_4FED_96F7_BCD2628D4B03__INCLUDED_)</span></span></div></pre></td></tr></table></figure>
<p>界面：<br><img src="http://img.blog.csdn.net/20170615182222589?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="界面"></p>
<p>另一种方案（大同小异）：<br>.cpp文件<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div><div class="line">175</div><div class="line">176</div><div class="line">177</div><div class="line">178</div><div class="line">179</div><div class="line">180</div><div class="line">181</div><div class="line">182</div><div class="line">183</div><div class="line">184</div><div class="line">185</div><div class="line">186</div><div class="line">187</div><div class="line">188</div><div class="line">189</div><div class="line">190</div><div class="line">191</div><div class="line">192</div><div class="line">193</div><div class="line">194</div><div class="line">195</div><div class="line">196</div><div class="line">197</div><div class="line">198</div><div class="line">199</div><div class="line">200</div><div class="line">201</div><div class="line">202</div><div class="line">203</div><div class="line">204</div><div class="line">205</div><div class="line">206</div><div class="line">207</div><div class="line">208</div><div class="line">209</div><div class="line">210</div><div class="line">211</div><div class="line">212</div><div class="line">213</div><div class="line">214</div><div class="line">215</div><div class="line">216</div><div class="line">217</div><div class="line">218</div><div class="line">219</div><div class="line">220</div><div class="line">221</div><div class="line">222</div><div class="line">223</div><div class="line">224</div><div class="line">225</div><div class="line">226</div><div class="line">227</div><div class="line">228</div><div class="line">229</div><div class="line">230</div><div class="line">231</div><div class="line">232</div><div class="line">233</div><div class="line">234</div><div class="line">235</div><div class="line">236</div><div class="line">237</div><div class="line">238</div><div class="line">239</div><div class="line">240</div><div class="line">241</div><div class="line">242</div><div class="line">243</div><div class="line">244</div><div class="line">245</div><div class="line">246</div><div class="line">247</div><div class="line">248</div><div class="line">249</div><div class="line">250</div><div class="line">251</div><div class="line">252</div><div class="line">253</div><div class="line">254</div><div class="line">255</div><div class="line">256</div><div class="line">257</div><div class="line">258</div><div class="line">259</div><div class="line">260</div><div class="line">261</div><div class="line">262</div><div class="line">263</div><div class="line">264</div><div class="line">265</div><div class="line">266</div><div class="line">267</div><div class="line">268</div><div class="line">269</div><div class="line">270</div><div class="line">271</div><div class="line">272</div><div class="line">273</div><div class="line">274</div><div class="line">275</div><div class="line">276</div><div class="line">277</div><div class="line">278</div><div class="line">279</div><div class="line">280</div><div class="line">281</div><div class="line">282</div><div class="line">283</div><div class="line">284</div><div class="line">285</div><div class="line">286</div><div class="line">287</div><div class="line">288</div><div class="line">289</div><div class="line">290</div><div class="line">291</div><div class="line">292</div><div class="line">293</div><div class="line">294</div><div class="line">295</div><div class="line">296</div><div class="line">297</div><div class="line">298</div><div class="line">299</div><div class="line">300</div><div class="line">301</div><div class="line">302</div><div class="line">303</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// FileCopyNumDlg.cpp : implementation file</span></div><div class="line"><span class="comment">//</span></div><div class="line"></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"stdafx.h"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"FileCopyNum.h"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"FileCopyNumDlg.h"</span></span></div><div class="line"></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> WM_COPYFILE_NOTIFY_NUM WM_USER+1</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> WM_COPYFILE_NOTIFY_SUM WM_USER+8</span></div><div class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> _DEBUG</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> new DEBUG_NEW</span></div><div class="line"><span class="meta">#<span class="meta-keyword">undef</span> THIS_FILE</span></div><div class="line"><span class="keyword">static</span> <span class="keyword">char</span> THIS_FILE[] = <span class="number">__F</span>ILE__;</div><div class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></div><div class="line"></div><div class="line"><span class="comment">/////////////////////////////////////////////////////////////////////////////</span></div><div class="line"><span class="comment">// CAboutDlg dialog used for App About</span></div><div class="line"></div><div class="line"><span class="keyword">class</span> CAboutDlg : <span class="keyword">public</span> CDialog</div><div class="line">&#123;</div><div class="line"><span class="keyword">public</span>:</div><div class="line">	CAboutDlg();</div><div class="line"></div><div class="line"><span class="comment">// Dialog Data</span></div><div class="line">	<span class="comment">//&#123;&#123;AFX_DATA(CAboutDlg)</span></div><div class="line">	<span class="keyword">enum</span> &#123; IDD = IDD_ABOUTBOX &#125;;</div><div class="line">	<span class="comment">//&#125;&#125;AFX_DATA</span></div><div class="line"></div><div class="line">	<span class="comment">// ClassWizard generated virtual function overrides</span></div><div class="line">	<span class="comment">//&#123;&#123;AFX_VIRTUAL(CAboutDlg)</span></div><div class="line">	<span class="keyword">protected</span>:</div><div class="line">	<span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">DoDataExchange</span><span class="params">(CDataExchange* pDX)</span></span>;    <span class="comment">// DDX/DDV support</span></div><div class="line">	<span class="comment">//&#125;&#125;AFX_VIRTUAL</span></div><div class="line"></div><div class="line"><span class="comment">// Implementation</span></div><div class="line"><span class="keyword">protected</span>:</div><div class="line">	<span class="comment">//&#123;&#123;AFX_MSG(CAboutDlg)</span></div><div class="line">	<span class="comment">//&#125;&#125;AFX_MSG</span></div><div class="line">	DECLARE_MESSAGE_MAP()</div><div class="line">&#125;;</div><div class="line"></div><div class="line">CAboutDlg::CAboutDlg() : CDialog(CAboutDlg::IDD)</div><div class="line">&#123;</div><div class="line">	<span class="comment">//&#123;&#123;AFX_DATA_INIT(CAboutDlg)</span></div><div class="line">	<span class="comment">//&#125;&#125;AFX_DATA_INIT</span></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">void</span> CAboutDlg::DoDataExchange(CDataExchange* pDX)</div><div class="line">&#123;</div><div class="line">	CDialog::DoDataExchange(pDX);</div><div class="line">	<span class="comment">//&#123;&#123;AFX_DATA_MAP(CAboutDlg)</span></div><div class="line">	<span class="comment">//&#125;&#125;AFX_DATA_MAP</span></div><div class="line">&#125;</div><div class="line"></div><div class="line">BEGIN_MESSAGE_MAP(CAboutDlg, CDialog)</div><div class="line">	<span class="comment">//&#123;&#123;AFX_MSG_MAP(CAboutDlg)</span></div><div class="line">		<span class="comment">// No message handlers</span></div><div class="line">	<span class="comment">//&#125;&#125;AFX_MSG_MAP</span></div><div class="line">END_MESSAGE_MAP()</div><div class="line"></div><div class="line"><span class="comment">/////////////////////////////////////////////////////////////////////////////</span></div><div class="line"><span class="comment">// CFileCopyNumDlg dialog</span></div><div class="line"></div><div class="line">CFileCopyNumDlg::CFileCopyNumDlg(CWnd* pParent <span class="comment">/*=NULL*/</span>)</div><div class="line">	: CDialog(CFileCopyNumDlg::IDD, pParent)</div><div class="line">&#123;</div><div class="line">	<span class="comment">//&#123;&#123;AFX_DATA_INIT(CFileCopyNumDlg)</span></div><div class="line">	m_sourcePath = <span class="number">_</span>T(<span class="string">""</span>);</div><div class="line">	m_desPath = <span class="number">_</span>T(<span class="string">""</span>);</div><div class="line">	<span class="comment">//&#125;&#125;AFX_DATA_INIT</span></div><div class="line">	<span class="comment">// Note that LoadIcon does not require a subsequent DestroyIcon in Win32</span></div><div class="line">	m_hIcon = AfxGetApp()-&gt;LoadIcon(IDR_MAINFRAME);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">void</span> CFileCopyNumDlg::DoDataExchange(CDataExchange* pDX)</div><div class="line">&#123;</div><div class="line">	CDialog::DoDataExchange(pDX);</div><div class="line">	<span class="comment">//&#123;&#123;AFX_DATA_MAP(CFileCopyNumDlg)</span></div><div class="line">	DDX_Control(pDX, IDC_PROGRESS1, m_progress);</div><div class="line">	DDX_Text(pDX, IDC_EDIT1, m_sourcePath);</div><div class="line">	DDX_Text(pDX, IDC_EDIT2, m_desPath);</div><div class="line">	<span class="comment">//&#125;&#125;AFX_DATA_MAP</span></div><div class="line">&#125;</div><div class="line"></div><div class="line">BEGIN_MESSAGE_MAP(CFileCopyNumDlg, CDialog)</div><div class="line">	<span class="comment">//&#123;&#123;AFX_MSG_MAP(CFileCopyNumDlg)</span></div><div class="line">	ON_WM_SYSCOMMAND()</div><div class="line">	ON_WM_PAINT()</div><div class="line">	ON_WM_QUERYDRAGICON()</div><div class="line">	ON_BN_CLICKED(IDC_BTN_CHOOSEFILE1, OnBtnChoosefile1)</div><div class="line">	ON_BN_CLICKED(IDC_BTN_CHOOSEFILE2, OnBtnChoosefile2)</div><div class="line">	ON_BN_CLICKED(IDC_BTN_PAUSE, OnBtnPause)</div><div class="line">	ON_BN_CLICKED(IDC_BTN_RESUME, OnBtnResume)</div><div class="line">	ON_WM_TIMER()</div><div class="line">	ON_BN_CLICKED(IDC_BTN_BEGIN, OnBtnBegin)</div><div class="line"></div><div class="line">	ON_MESSAGE(WM_COPYFILE_NOTIFY_NUM, OnCopyFileNotifyNum)</div><div class="line">	ON_MESSAGE(WM_COPYFILE_NOTIFY_SUM, OnCopyFileNotifySum)</div><div class="line">	<span class="comment">//&#125;&#125;AFX_MSG_MAP</span></div><div class="line">END_MESSAGE_MAP()</div><div class="line"></div><div class="line"><span class="comment">/////////////////////////////////////////////////////////////////////////////</span></div><div class="line"><span class="comment">// CFileCopyNumDlg message handlers</span></div><div class="line"></div><div class="line">BOOL CFileCopyNumDlg::OnInitDialog()</div><div class="line">&#123;</div><div class="line">	CDialog::OnInitDialog();</div><div class="line"></div><div class="line">	<span class="comment">// Add "About..." menu item to system menu.</span></div><div class="line"></div><div class="line">	<span class="comment">// IDM_ABOUTBOX must be in the system command range.</span></div><div class="line">	ASSERT((IDM_ABOUTBOX &amp; <span class="number">0xFFF0</span>) == IDM_ABOUTBOX);</div><div class="line">	ASSERT(IDM_ABOUTBOX &lt; <span class="number">0xF000</span>);</div><div class="line"></div><div class="line">	CMenu* pSysMenu = GetSystemMenu(FALSE);</div><div class="line">	<span class="keyword">if</span> (pSysMenu != <span class="literal">NULL</span>)</div><div class="line">	&#123;</div><div class="line">		CString strAboutMenu;</div><div class="line">		strAboutMenu.LoadString(IDS_ABOUTBOX);</div><div class="line">		<span class="keyword">if</span> (!strAboutMenu.IsEmpty())</div><div class="line">		&#123;</div><div class="line">			pSysMenu-&gt;AppendMenu(MF_SEPARATOR);</div><div class="line">			pSysMenu-&gt;AppendMenu(MF_STRING, IDM_ABOUTBOX, strAboutMenu);</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	<span class="comment">// Set the icon for this dialog.  The framework does this automatically</span></div><div class="line">	<span class="comment">//  when the application's main window is not a dialog</span></div><div class="line">	SetIcon(m_hIcon, TRUE);			<span class="comment">// Set big icon</span></div><div class="line">	SetIcon(m_hIcon, FALSE);		<span class="comment">// Set small icon</span></div><div class="line">	</div><div class="line">	<span class="comment">// <span class="doctag">TODO:</span> Add extra initialization here</span></div><div class="line">	m_num = <span class="number">0</span>;</div><div class="line">	m_sum = <span class="number">0</span>;</div><div class="line">	m_progress.SetRange(<span class="number">0</span>, <span class="number">100</span>);</div><div class="line">	m_progress.SetPos(<span class="number">0</span>);</div><div class="line">	</div><div class="line">	<span class="keyword">return</span> TRUE;  <span class="comment">// return TRUE  unless you set the focus to a control</span></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">void</span> CFileCopyNumDlg::OnSysCommand(UINT nID, LPARAM lParam)</div><div class="line">&#123;</div><div class="line">	<span class="keyword">if</span> ((nID &amp; <span class="number">0xFFF0</span>) == IDM_ABOUTBOX)</div><div class="line">	&#123;</div><div class="line">		CAboutDlg dlgAbout;</div><div class="line">		dlgAbout.DoModal();</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">else</span></div><div class="line">	&#123;</div><div class="line">		CDialog::OnSysCommand(nID, lParam);</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">// If you add a minimize button to your dialog, you will need the code below</span></div><div class="line"><span class="comment">//  to draw the icon.  For MFC applications using the document/view model,</span></div><div class="line"><span class="comment">//  this is automatically done for you by the framework.</span></div><div class="line"></div><div class="line"><span class="keyword">void</span> CFileCopyNumDlg::OnPaint() </div><div class="line">&#123;</div><div class="line">	<span class="keyword">if</span> (IsIconic())</div><div class="line">	&#123;</div><div class="line">		<span class="function">CPaintDC <span class="title">dc</span><span class="params">(<span class="keyword">this</span>)</span></span>; <span class="comment">// device context for painting</span></div><div class="line"></div><div class="line">		SendMessage(WM_ICONERASEBKGND, (WPARAM) dc.GetSafeHdc(), <span class="number">0</span>);</div><div class="line"></div><div class="line">		<span class="comment">// Center icon in client rectangle</span></div><div class="line">		<span class="keyword">int</span> cxIcon = GetSystemMetrics(SM_CXICON);</div><div class="line">		<span class="keyword">int</span> cyIcon = GetSystemMetrics(SM_CYICON);</div><div class="line">		CRect rect;</div><div class="line">		GetClientRect(&amp;rect);</div><div class="line">		<span class="keyword">int</span> x = (rect.Width() - cxIcon + <span class="number">1</span>) / <span class="number">2</span>;</div><div class="line">		<span class="keyword">int</span> y = (rect.Height() - cyIcon + <span class="number">1</span>) / <span class="number">2</span>;</div><div class="line"></div><div class="line">		<span class="comment">// Draw the icon</span></div><div class="line">		dc.DrawIcon(x, y, m_hIcon);</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">else</span></div><div class="line">	&#123;</div><div class="line">		CDialog::OnPaint();</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">// The system calls this to obtain the cursor to display while the user drags</span></div><div class="line"><span class="comment">//  the minimized window.</span></div><div class="line">HCURSOR CFileCopyNumDlg::OnQueryDragIcon()</div><div class="line">&#123;</div><div class="line">	<span class="keyword">return</span> (HCURSOR) m_hIcon;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">void</span> CFileCopyNumDlg::OnBtnChoosefile1() </div><div class="line">&#123;</div><div class="line">    <span class="function">CFileDialog <span class="title">dlg</span><span class="params">(TRUE)</span></span>;</div><div class="line">	<span class="keyword">if</span>(IDOK==dlg.DoModal())</div><div class="line">	&#123;</div><div class="line">		strSourceFile=dlg.GetPathName();</div><div class="line">	&#125;</div><div class="line">	SetDlgItemText(IDC_EDIT1,strSourceFile);	</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">void</span> CFileCopyNumDlg::OnBtnChoosefile2() </div><div class="line">&#123;</div><div class="line">    <span class="function">CFileDialog <span class="title">dlg</span><span class="params">(TRUE)</span></span>;</div><div class="line">	<span class="keyword">if</span>(IDOK==dlg.DoModal())</div><div class="line">	&#123;</div><div class="line">		strNewFile=dlg.GetPathName();</div><div class="line">	&#125;</div><div class="line">	SetDlgItemText(IDC_EDIT2,strSourceFile);	</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">void</span> CFileCopyNumDlg::OnBtnBegin() </div><div class="line">&#123;</div><div class="line">	UpdateData(TRUE);</div><div class="line"></div><div class="line">	hThread = CreateThread(<span class="literal">NULL</span>, <span class="number">0</span>, ThreadProc_Copy, <span class="keyword">this</span>, <span class="number">0</span>, <span class="literal">NULL</span>);</div><div class="line">	hEvent = CreateEvent(<span class="literal">NULL</span>, TRUE, TRUE, <span class="literal">NULL</span>);</div><div class="line">	</div><div class="line">	</div><div class="line">&#125;</div><div class="line"></div><div class="line">DWORD WINAPI CFileCopyNumDlg::ThreadProc_Copy(LPVOID lpParam)</div><div class="line">&#123;</div><div class="line">	<span class="keyword">double</span> num = <span class="number">0</span>;</div><div class="line">	<span class="keyword">double</span> sum = <span class="number">0</span>;</div><div class="line"></div><div class="line">	CString SourcePath = ((CFileCopyNumDlg*)lpParam)-&gt;m_sourcePath;</div><div class="line">	CString DesPath = ((CFileCopyNumDlg*)lpParam)-&gt;m_desPath + <span class="string">L"\\"</span>;</div><div class="line">  </div><div class="line">	CFileFind findcount;</div><div class="line">	BOOL bRet = findcount.FindFile(((CFileCopyNumDlg*)lpParam)-&gt;m_sourcePath + CString(<span class="string">"\\*.*"</span>));</div><div class="line">	</div><div class="line">	<span class="keyword">while</span> (bRet)</div><div class="line">	&#123;</div><div class="line">		bRet = findcount.FindNextFile();</div><div class="line">		<span class="keyword">if</span> (findcount.IsDirectory())</div><div class="line">		&#123;</div><div class="line">			<span class="keyword">continue</span>;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">else</span></div><div class="line">		&#123;</div><div class="line">			((CFileCopyNumDlg*)lpParam)-&gt;PostMessage(WM_COPYFILE_NOTIFY_SUM);</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	findcount.Close();</div><div class="line"></div><div class="line">	CFileFind find;</div><div class="line">	bRet =  find.FindFile(((CFileCopyNumDlg*)lpParam)-&gt;m_sourcePath + CString(<span class="string">"\\*.*"</span>));</div><div class="line"></div><div class="line">	<span class="keyword">while</span> (bRet)</div><div class="line">	&#123;</div><div class="line">		bRet = find.FindNextFile();</div><div class="line">		<span class="keyword">if</span> (find.IsDirectory())</div><div class="line">		&#123;</div><div class="line">			<span class="keyword">continue</span>;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">else</span></div><div class="line">		&#123;</div><div class="line">			((CFileCopyNumDlg*)lpParam)-&gt;m_sourcePath = find.GetFilePath();</div><div class="line">			((CFileCopyNumDlg*)lpParam)-&gt;m_desPath = DesPath + find.GetFileName();</div><div class="line">			</div><div class="line">			WaitForSingleObject(((CFileCopyNumDlg*)lpParam)-&gt;hEvent,INFINITE);</div><div class="line"></div><div class="line">			CopyFile(((CFileCopyNumDlg*)lpParam)-&gt;m_sourcePath, ((CFileCopyNumDlg*)lpParam)-&gt;m_desPath, FALSE);</div><div class="line">			((CFileCopyNumDlg*)lpParam)-&gt;PostMessage(WM_COPYFILE_NOTIFY_NUM);</div><div class="line">			</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">   </div><div class="line">    AfxMessageBox(<span class="string">"复制成功!"</span>);</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span> ;</div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">void</span> CFileCopyNumDlg::OnBtnPause() </div><div class="line">&#123;</div><div class="line">     ResetEvent(hEvent);	</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">void</span> CFileCopyNumDlg::OnBtnResume() </div><div class="line">&#123;</div><div class="line">     SetEvent(hEvent);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">void</span> CFileCopyNumDlg::OnTimer(UINT nIDEvent) </div><div class="line">&#123;</div><div class="line">	<span class="comment">// <span class="doctag">TODO:</span> Add your message handler code here and/or call default</span></div><div class="line">	</div><div class="line">	CDialog::OnTimer(nIDEvent);</div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line">afx_msg LRESULT CFileCopyNumDlg::OnCopyFileNotifyNum(WPARAM wParam, LPARAM lParam)</div><div class="line">&#123;</div><div class="line">	m_num++;</div><div class="line">	m_progress.SetPos(<span class="keyword">int</span>(m_num / m_sum * <span class="number">100</span>));</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line">afx_msg LRESULT CFileCopyNumDlg::OnCopyFileNotifySum(WPARAM wParam, LPARAM lParam)</div><div class="line">&#123;</div><div class="line">	m_sum++;</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>.h文件<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// FileCopyNumDlg.h : header file</span></div><div class="line"><span class="comment">//</span></div><div class="line"></div><div class="line"><span class="meta">#<span class="meta-keyword">if</span> !defined(AFX_FILECOPYNUMDLG_H__02EF2204_005C_4A21_A048_ED73C9CD1F34__INCLUDED_)</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> AFX_FILECOPYNUMDLG_H__02EF2204_005C_4A21_A048_ED73C9CD1F34__INCLUDED_</span></div><div class="line"></div><div class="line"><span class="meta">#<span class="meta-keyword">if</span> _MSC_VER &gt; 1000</span></div><div class="line"><span class="meta">#<span class="meta-keyword">pragma</span> once</span></div><div class="line"><span class="meta">#<span class="meta-keyword">endif</span> <span class="comment">// _MSC_VER &gt; 1000</span></span></div><div class="line"></div><div class="line"><span class="comment">/////////////////////////////////////////////////////////////////////////////</span></div><div class="line"><span class="comment">// CFileCopyNumDlg dialog</span></div><div class="line"></div><div class="line"><span class="keyword">class</span> CFileCopyNumDlg : <span class="keyword">public</span> CDialog</div><div class="line">&#123;</div><div class="line"><span class="comment">// Construction</span></div><div class="line"><span class="keyword">public</span>:</div><div class="line">	CFileCopyNumDlg(CWnd* pParent = <span class="literal">NULL</span>);	<span class="comment">// standard constructor</span></div><div class="line"></div><div class="line"><span class="comment">// Dialog Data</span></div><div class="line">	<span class="comment">//&#123;&#123;AFX_DATA(CFileCopyNumDlg)</span></div><div class="line">	<span class="keyword">enum</span> &#123; IDD = IDD_FILECOPYNUM_DIALOG &#125;;</div><div class="line">	CProgressCtrl	m_progress;</div><div class="line">	CString	m_sourcePath;</div><div class="line">	CString	m_desPath;</div><div class="line">	<span class="comment">//&#125;&#125;AFX_DATA</span></div><div class="line"></div><div class="line">	<span class="comment">// ClassWizard generated virtual function overrides</span></div><div class="line">	<span class="comment">//&#123;&#123;AFX_VIRTUAL(CFileCopyNumDlg)</span></div><div class="line">	<span class="keyword">protected</span>:</div><div class="line">	<span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">DoDataExchange</span><span class="params">(CDataExchange* pDX)</span></span>;	<span class="comment">// DDX/DDV support</span></div><div class="line">	<span class="comment">//&#125;&#125;AFX_VIRTUAL</span></div><div class="line"></div><div class="line"><span class="comment">// Implementation</span></div><div class="line"><span class="keyword">protected</span>:</div><div class="line">	HICON m_hIcon;</div><div class="line"></div><div class="line">	<span class="comment">// Generated message map functions</span></div><div class="line">	<span class="comment">//&#123;&#123;AFX_MSG(CFileCopyNumDlg)</span></div><div class="line">	<span class="function"><span class="keyword">virtual</span> BOOL <span class="title">OnInitDialog</span><span class="params">()</span></span>;</div><div class="line">	<span class="function">afx_msg <span class="keyword">void</span> <span class="title">OnSysCommand</span><span class="params">(UINT nID, LPARAM lParam)</span></span>;</div><div class="line">	<span class="function">afx_msg <span class="keyword">void</span> <span class="title">OnPaint</span><span class="params">()</span></span>;</div><div class="line">	<span class="function">afx_msg HCURSOR <span class="title">OnQueryDragIcon</span><span class="params">()</span></span>;</div><div class="line">	<span class="function">afx_msg <span class="keyword">void</span> <span class="title">OnBtnChoosefile1</span><span class="params">()</span></span>;</div><div class="line">	<span class="function">afx_msg <span class="keyword">void</span> <span class="title">OnBtnChoosefile2</span><span class="params">()</span></span>;</div><div class="line">	<span class="function">afx_msg <span class="keyword">void</span> <span class="title">OnBtnPause</span><span class="params">()</span></span>;</div><div class="line">	<span class="function">afx_msg <span class="keyword">void</span> <span class="title">OnBtnResume</span><span class="params">()</span></span>;</div><div class="line">	<span class="function">afx_msg <span class="keyword">void</span> <span class="title">OnTimer</span><span class="params">(UINT nIDEvent)</span></span>;</div><div class="line">	<span class="function">afx_msg <span class="keyword">void</span> <span class="title">OnBtnBegin</span><span class="params">()</span></span>;</div><div class="line"></div><div class="line">	<span class="function">afx_msg LRESULT <span class="title">OnCopyFileNotifyNum</span><span class="params">(WPARAM wParam, LPARAM lParam)</span></span>;</div><div class="line">	<span class="function">afx_msg LRESULT <span class="title">OnCopyFileNotifySum</span><span class="params">(WPARAM wParam, LPARAM lParam)</span></span>;</div><div class="line">	<span class="comment">//&#125;&#125;AFX_MSG</span></div><div class="line">	DECLARE_MESSAGE_MAP()</div><div class="line"><span class="keyword">public</span>:</div><div class="line">   <span class="comment">// LPCTSTR lpExistingPathName;			//源文件</span></div><div class="line">   <span class="comment">//LPCTSTR lpNewPathName;	            //目标文件</span></div><div class="line">    HANDLE hThread;                     <span class="comment">//线程句柄</span></div><div class="line">	HANDLE hEvent;                      <span class="comment">//复制暂停事件</span></div><div class="line"></div><div class="line">    CString strSourceFile;</div><div class="line">	CString strNewFile;</div><div class="line"></div><div class="line">	<span class="keyword">double</span> m_num;</div><div class="line">	<span class="keyword">double</span> m_sum;</div><div class="line">	<span class="function"><span class="keyword">static</span> DWORD WINAPI <span class="title">ThreadProc_Copy</span><span class="params">(LPVOID lpParam)</span></span>;<span class="comment">//线程函数</span></div><div class="line">&#125;;</div><div class="line"></div><div class="line"><span class="comment">//&#123;&#123;AFX_INSERT_LOCATION&#125;&#125;</span></div><div class="line"><span class="comment">// Microsoft Visual C++ will insert additional declarations immediately before the previous line.</span></div><div class="line"></div><div class="line"><span class="meta">#<span class="meta-keyword">endif</span> <span class="comment">// !defined(AFX_FILECOPYNUMDLG_H__02EF2204_005C_4A21_A048_ED73C9CD1F34__INCLUDED_)</span></span></div></pre></td></tr></table></figure></p>
<p><img src="http://img.blog.csdn.net/20170710233959983?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
]]></content>
    
    <summary type="html">
    
      &lt;div align=&quot;left&quot;&gt;&lt;br&gt;&lt;img src=&quot;https://ss3.bdstatic.com/70cFv8Sh_Q1YnxGkpoWK1HF6hhy/it/u=1049830277,1612840852&amp;fm=26&amp;gp=0.jpg&quot; width=&quot;300&quot; height=&quot;180&quot; style=&quot;float:right;&quot;/&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;MFC，多线程+进度条+复制文件（夹）小程序。&lt;br&gt;&lt;br&gt;&lt;br&gt; &lt;/div&gt;
    
    </summary>
    
      <category term="互联网" scheme="http://hubojing.github.io/categories/%E4%BA%92%E8%81%94%E7%BD%91/"/>
    
    
      <category term="MFC 多线程" scheme="http://hubojing.github.io/tags/MFC-%E5%A4%9A%E7%BA%BF%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>MFC网页分析程序</title>
    <link href="http://hubojing.github.io/2017/06/14/MFC%E7%BD%91%E9%A1%B5%E5%88%86%E6%9E%90%E7%A8%8B%E5%BA%8F/"/>
    <id>http://hubojing.github.io/2017/06/14/MFC网页分析程序/</id>
    <published>2017-06-14T14:45:38.000Z</published>
    <updated>2017-08-12T16:32:49.867Z</updated>
    
    <content type="html"><![CDATA[<div align="left"><br><img src="http://img.blog.csdn.net/20170805145839785?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" width="300" height="180" style="float:right;"><br>  </div>

<p>　　开发一个网页分析程序，可以抓取特定网页的内容，加以分析之后将结果保存至数据库。</p>
<p>　　V1.0版本出炉，实测解析时间1分41秒。
　　
　　
　　</p>
<a id="more"></a>
<p>网页分析程序具体要求描述如下：<br>1.使用http技术获取一个博客的首页<a href="http://blog.csdn.net/jiangsheng" target="_blank" rel="external">http://blog.csdn.net/jiangsheng</a><br>2.分析这个网页的内容，从中找到博客中每一篇文章的链接。<br>3.通过这些链接，获取文章的正文网页，从内容中提取文章的标题和文章的内容。<br>4.将文章的标题与内容分别保存至数据库。<br>5.布局要求：提供一个列表框和一个多行文本框。列表框中显示从数据库中获取的文章标题列表；当点击列表框中的某一篇文章时，在文本框中显示该文章的内容。</p>
<h1 id="获取源码"><a href="#获取源码" class="headerlink" title="获取源码"></a>获取源码</h1><p>因为需多次调用获取源码功能，将它放入一个函数中。</p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div></pre></td><td class="code"><pre><div class="line">CString CGetWebDlg::DownloadCodes(CString path)</div><div class="line">&#123;</div><div class="line">	CInternetSession session;</div><div class="line">	CHttpFile *file = <span class="literal">NULL</span>;</div><div class="line">	CString strURL = path;</div><div class="line">	CString strHtml = <span class="number">_</span>T(<span class="string">""</span>); <span class="comment">//存放网页数据</span></div><div class="line">	<span class="keyword">try</span></div><div class="line">	&#123;</div><div class="line">		file = (CHttpFile*)session.OpenURL(strURL);</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">catch</span> (CInternetException *m_pException)</div><div class="line">	&#123;</div><div class="line">		file = <span class="literal">NULL</span>;</div><div class="line">		m_pException-&gt;m_dwError;</div><div class="line">		m_pException-&gt;Delete();</div><div class="line">		session.Close();</div><div class="line">		MessageBox(<span class="string">"网络连接错误！"</span>, <span class="string">"提示"</span>);</div><div class="line">	&#125;</div><div class="line">	CString strLine;</div><div class="line">	<span class="keyword">char</span> sRecived[<span class="number">1024</span>];</div><div class="line">	<span class="keyword">if</span> (file != <span class="literal">NULL</span>)</div><div class="line">	&#123;</div><div class="line">		<span class="keyword">while</span> (file-&gt;ReadString((LPTSTR)sRecived, <span class="number">1024</span>) != <span class="literal">NULL</span>)</div><div class="line">		&#123;</div><div class="line">			strHtml += sRecived;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">else</span></div><div class="line">	&#123;</div><div class="line">		AfxMessageBox(<span class="number">_</span>T(<span class="string">"失败！"</span>));</div><div class="line">	&#125;</div><div class="line">	session.Close();</div><div class="line">	file-&gt;Close();</div><div class="line">	<span class="keyword">delete</span> file;</div><div class="line">	file = <span class="literal">NULL</span>;</div><div class="line"></div><div class="line">	strHtml = ConvertUtf8ToGBK(strHtml);<span class="comment">//源码转换</span></div><div class="line"></div><div class="line">	<span class="keyword">return</span> strHtml;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="编码问题"><a href="#编码问题" class="headerlink" title="编码问题"></a>编码问题</h2><p>注意网页编码问题，因此需要格式转换，编写一个函数：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">void</span>  <span class="title">ConvertUtf8ToGBK</span><span class="params">(CString &amp;strUtf8)</span></span></div><div class="line">&#123;</div><div class="line">          </div><div class="line">    <span class="keyword">int</span> len=MultiByteToWideChar(CP_UTF8, <span class="number">0</span>, (LPCTSTR)strUtf8, <span class="number">-1</span>, <span class="literal">NULL</span>,<span class="number">0</span>);</div><div class="line">	<span class="keyword">unsigned</span> <span class="keyword">short</span> * wszGBK = <span class="keyword">new</span> <span class="keyword">unsigned</span> <span class="keyword">short</span>[len+<span class="number">1</span>];</div><div class="line">	<span class="built_in">memset</span>(wszGBK, <span class="number">0</span>, len * <span class="number">2</span> + <span class="number">2</span>);</div><div class="line">	MultiByteToWideChar(CP_UTF8, <span class="number">0</span>, (LPCTSTR)strUtf8, <span class="number">-1</span>, (LPWSTR)wszGBK, len);</div><div class="line"> </div><div class="line">	len = WideCharToMultiByte(CP_ACP, <span class="number">0</span>, (LPCWSTR)wszGBK, <span class="number">-1</span>, <span class="literal">NULL</span>, <span class="number">0</span>, <span class="literal">NULL</span>, <span class="literal">NULL</span>); </div><div class="line">	<span class="keyword">char</span> *szGBK=<span class="keyword">new</span> <span class="keyword">char</span>[len + <span class="number">1</span>];</div><div class="line">	<span class="built_in">memset</span>(szGBK, <span class="number">0</span>, len + <span class="number">1</span>);</div><div class="line">	WideCharToMultiByte (CP_ACP, <span class="number">0</span>, (LPCWSTR)wszGBK, <span class="number">-1</span>, szGBK, len, <span class="literal">NULL</span>,<span class="literal">NULL</span>);</div><div class="line"> </div><div class="line">	strUtf8 = szGBK;</div><div class="line">	 <span class="keyword">delete</span>[] szGBK;</div><div class="line">	 <span class="keyword">delete</span>[] wszGBK;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p><img src="http://img.blog.csdn.net/20170614232311302?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="显示源码"></p>
<p>有些类似网页爬虫的感觉。</p>
<p>由于我刚开始是用VC6.0创建项目，现在用VS2013打开，因此，提示报错：<br>error MSB8031: Building an MFC project for a non-Unicode character set is deprecated. You must change the project property to Unicode or download an additional library. See <a href="http://go.microsoft.com/fwlink/p/?LinkId=286820" target="_blank" rel="external">http://go.microsoft.com/fwlink/p/?LinkId=286820</a> for more information.</p>
<p>解决：用于多字节字符编码 (MBCS) 的 MFC 库 (DLL) 不再包含于 Visual Studio 中，但是可用作插件，可以在任何装有 Visual Studio Professional、Visual Studio Premium 或 Visual Studio Ultimate 的计算机上下载和安装。下载地址：<a href="https://www.microsoft.com/zh-cn/download/details.aspx?id=40770" target="_blank" rel="external">https://www.microsoft.com/zh-cn/download/details.aspx?id=40770</a></p>
<h1 id="解析"><a href="#解析" class="headerlink" title="解析"></a>解析</h1><p><del>为了接下来的操作，我去学正则表达式了……</del><br>还是学习html解析库 htmlcxx<br><a href="http://htmlcxx.sourceforge.net/" target="_blank" rel="external">官方</a><br><a href="http://blog.csdn.net/youfangyuan/article/details/7816518" target="_blank" rel="external">HtmlCxx用户手册</a></p>
<h2 id="htmlcxx"><a href="#HTMLCXX" class="headerlink" title="HTMLCXX"></a>HTMLCXX</h2><h3 id="下载htmlcxx库"><a href="#下载htmlcxx库" class="headerlink" title="下载htmlcxx库"></a>下载htmlcxx库</h3><p><a href="http://sourceforge.net/projects/htmlcxx/" target="_blank" rel="external">http://sourceforge.net/projects/htmlcxx/</a><br>并解压。</p>
<h3 id="编译"><a href="#编译" class="headerlink" title="编译"></a>编译</h3><p>打开htmlcxx.vcproj，右键属性，配置属性-C/C++-代码生成-运行库：多线程调试 DLL (/ MDd)进行编译。编译会报错，将<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">const</span> <span class="keyword">char</span> *signature = <span class="string">"﻿"</span>;</div></pre></td></tr></table></figure></p>
<p>改为<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">const</span> <span class="keyword">char</span> *signature = <span class="string">"﻿\xEF\xBB\xBF"</span>;</div></pre></td></tr></table></figure></p>
<p>即可编译成功。</p>
<h3 id="导入"><a href="#导入" class="headerlink" title="导入"></a>导入</h3><p>把生成的htmlcxx.lib和html文件夹拷贝到所需的工程中。即：<br>在所开发项目文件夹中，新建”htmlcxx“文件，里面添加两个子文件夹”lib“和”include“。将编译好的htmlcxx.lib拷贝到lib文件夹，将html文件夹中所有的.h头文件和ParserSax.tcc添加到include文件夹。添加库文件htmlcxx.lib到项目中，具体说来：</p>
<blockquote>
<p>在VS工程中，添加c/c++工程中外部头文件及库的基本步骤：<br>    1、添加工程的头文件目录：工程—属性—配置属性—c/c++—常规—附加包含目录：加上头文件存放目录。<br>    2、添加文件引用的lib静态库路径：工程—属性—配置属性—链接器—常规—附加库目录：加上lib文件存放目录。<br>         然后添加工程引用的lib文件名：工程—属性—配置属性—链接器—输入—附加依赖项：加上lib文件名。<br>    3、添加工程引用的dll动态库：把引用的dll放到工程的可执行文件所在的目录下。<br>注意：第一步可以不用，直接在工程里加入动态库的头文件，在使用代码处引用这个头文件。</p>
</blockquote>
<p>所开发的项目的头文件中添加以下内容：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"htmlcxx/include/ParserDom.h"</span></span></div><div class="line"> </div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> htmlcxx;</div><div class="line"> </div><div class="line"><span class="meta">#<span class="meta-keyword">pragma</span> comment(lib,<span class="meta-string">"htmlcxx.lib"</span>)</span></div></pre></td></tr></table></figure></p>
<h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><p>官方测试代码：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;htmlcxx/html/ParserDom.h&gt;</span></span></div><div class="line"> ...</div><div class="line"> </div><div class="line"> <span class="comment">//Parse some html code</span></div><div class="line"> <span class="built_in">string</span> html = <span class="string">"&lt;html&gt;&lt;body&gt;hey&lt;/body&gt;&lt;/html&gt;"</span>;</div><div class="line"> HTML::ParserDom parser;</div><div class="line"> tree&lt;HTML::Node&gt; dom = parser.parseTree(html);</div><div class="line"> </div><div class="line"> <span class="comment">//Print whole DOM tree</span></div><div class="line"> <span class="built_in">cout</span> &lt;&lt; dom &lt;&lt; <span class="built_in">endl</span>;</div><div class="line"> </div><div class="line"> <span class="comment">//Dump all links in the tree</span></div><div class="line"> tree&lt;HTML::Node&gt;::iterator it = dom.begin();</div><div class="line"> tree&lt;HTML::Node&gt;::iterator end = dom.end();</div><div class="line"> <span class="keyword">for</span> (; it != end; ++it)</div><div class="line"> &#123;</div><div class="line"> 	<span class="keyword">if</span> (it-&gt;tagName() == <span class="string">"A"</span>)</div><div class="line"> 	&#123;</div><div class="line"> 		it-&gt;parseAttributes();</div><div class="line"> 		<span class="built_in">cout</span> &lt;&lt; it-&gt;attributes(<span class="string">"href"</span>);</div><div class="line"> 	&#125;</div><div class="line"> &#125;</div><div class="line"> </div><div class="line"> <span class="comment">//Dump all text of the document</span></div><div class="line"> it = dom.begin();</div><div class="line"> end = dom.end();</div><div class="line"> <span class="keyword">for</span> (; it != end; ++it)</div><div class="line"> &#123;</div><div class="line"> 	<span class="keyword">if</span> ((!it-&gt;isTag()) &amp;&amp; (!it-&gt;isComment()))</div><div class="line"> 	&#123;</div><div class="line"> 		<span class="built_in">cout</span> &lt;&lt; it-&gt;text();</div><div class="line"> 	&#125;</div><div class="line"> &#125;</div></pre></td></tr></table></figure></p>
<p>  然而……</p>
<p>   <img src="http://img.blog.csdn.net/20170709011136986?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="报错1"></p>
<p>   加入#include”iostream”头文件即可。</p>
<p><img src="http://img.blog.csdn.net/20170709011240176?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="报错2"></p>
<p>修改为：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">if</span> (it-&gt;tagName() == <span class="string">"A"</span>)</div><div class="line">			&#123;</div><div class="line">				it-&gt;parseAttributes();</div><div class="line">				<span class="built_in">std</span>::pair&lt;<span class="keyword">bool</span>, <span class="built_in">std</span>::<span class="built_in">string</span>&gt; pa = it-&gt;attribute(<span class="string">"href"</span>);</div><div class="line">				<span class="built_in">cout</span> &lt;&lt; pa.second;</div><div class="line">			&#125;</div></pre></td></tr></table></figure></p>
<p>编译通过。</p>
<p>  还有其他的库也可以用，比如<a href="http://blog.csdn.net/lanuage/article/details/72825878" target="_blank" rel="external">使用MSHTML解析HTML页面</a><br>  比如<a href="http://www.oschina.net/question/565065_67992" target="_blank" rel="external">LIBXML2库使用指南</a><br>  还可以用正则表达式写库……</p>
<p>  突然发现 原来的计划里有COM组件 XML和HTML 数据库访问技术<br>  都没怎么接触过  补补补<br>  在填坑的路上不能止步…</p>
<h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><p><a href="http://www.cnblogs.com/striver-zhu/p/4451781.html" target="_blank" rel="external">C++ 使用Htmlcxx解析Html内容(VS编译库文件)</a><br><a href="http://blog.csdn.net/farcall/article/details/20378475" target="_blank" rel="external">html与xml解析库htmlcxx使用过程中的若干问题及解决方案</a><br><a href="http://www.cnblogs.com/learning-lzj2014/p/3928346.html" target="_blank" rel="external">c++ hmtlcxx 学习之旅</a> </p>
<h2 id="mshtml"><a href="#MSHTML" class="headerlink" title="MSHTML"></a>MSHTML</h2><p>  因为最近用过MSXML，就试试MSHTML。学有余力的话，htmlcxx之后还是想玩一下…<br>   <a href="https://msdn.microsoft.com/en-us/library/aa741317(v=vs.85).aspx" target="_blank" rel="external">https://msdn.microsoft.com/en-us/library/aa741317(v=vs.85).aspx</a><br>  <a href="http://blog.csdn.net/jiangsheng/article/details/3793" target="_blank" rel="external">蒋晟-关于MSHTML</a><br>   <a href="https://msdn.microsoft.com/zh-cn/library/mshtml(v=vs.110).aspx" target="_blank" rel="external">https://msdn.microsoft.com/zh-cn/library/mshtml(v=vs.110).aspx</a></p>
<h3 id="mshtml导入"><a href="#MSHTML导入" class="headerlink" title="MSHTML导入"></a>MSHTML导入</h3><p>系统中自带了mshtml，和msxml一样，在C盘windows/system32中可找到。</p>
<p><a href="http://blog.csdn.net/mimica247706624/article/details/6128239" target="_blank" rel="external">如何导入</a>  </p>
<p>先看MSDN……<br> <a href="https://msdn.microsoft.com/en-us/library/aa741317%28v=vs.85%29.aspx?f=255&amp;MSPPError=-2147217396" target="_blank" rel="external">MSDN-MSHTML</a></p>
<p> 再看各种搜集的文章<br>  <a href="http://bbs.csdn.net/topics/330214041" target="_blank" rel="external">http://bbs.csdn.net/topics/330214041</a><br>  <a href="http://www.cnblogs.com/speedmancs/archive/2010/08/11/1797442.html" target="_blank" rel="external">http://www.cnblogs.com/speedmancs/archive/2010/08/11/1797442.html</a><br>  <a href="http://blog.csdn.net/jinyaba/article/details/17097323" target="_blank" rel="external">http://blog.csdn.net/jinyaba/article/details/17097323</a><br>  <a href="https://social.msdn.microsoft.com/Search/zh-CN?query=MSHTML&amp;pgArea=header&amp;emptyWatermark=true&amp;ac=4#refinementChanges=117&amp;pageNumber=1&amp;showMore=false" target="_blank" rel="external">https://social.msdn.microsoft.com/Search/zh-CN?query=MSHTML&amp;pgArea=header&amp;emptyWatermark=true&amp;ac=4#refinementChanges=117&amp;pageNumber=1&amp;showMore=false</a><br>  <a href="https://wenku.baidu.com/view/d571abc4ec3a87c24028c4bb.html" target="_blank" rel="external">https://wenku.baidu.com/view/d571abc4ec3a87c24028c4bb.html</a><br>  <a href="http://www.codeguru.com/cpp/i-n/ieprogram/article.php/c4385/Lightweight-HTML-Parsing-Using-MSHTML.htm" target="_blank" rel="external">http://www.codeguru.com/cpp/i-n/ieprogram/article.php/c4385/Lightweight-HTML-Parsing-Using-MSHTML.htm</a><br>  <a href="http://www.yesky.com/403/1938403.shtml?qq-pf-to=pcqq.c2c" target="_blank" rel="external">http://www.yesky.com/403/1938403.shtml?qq-pf-to=pcqq.c2c</a><br>  <a href="http://www.bianceng.cn/Programming/vc/201411/46771.htm" target="_blank" rel="external">http://www.bianceng.cn/Programming/vc/201411/46771.htm</a><br>  <a href="https://wenku.baidu.com/view/299bba4a336c1eb91a375df5.html" target="_blank" rel="external">https://wenku.baidu.com/view/299bba4a336c1eb91a375df5.html</a></p>
<p> <del>思路：下载源码和获取链接是两个独立函数，会被多次调用。先获取首页源码，div id=”archive_list” 遍历该div获取各月份归档链接，再使用多线程（48个线程？？？）进入每个归档链接里下载源码，获取源码中h1的每篇文章标题,保存到数据库。</del></p>
<p> 虽然有两种方法，一种通过归档获得链接，一种通过翻页获得链接，但根据本html特点，明显通过翻页要简洁方便一些，因为翻页的链接是有规律的，可通过循环搞定。每页5篇直接获得正文链接，比从归档获得少一层。<del>两核4个逻辑处理器，所以是开2个线程好还是4个好呢……</del></p>
<p>获取每篇正文链接，下载源码，解析得正文，保存到数据库。最后从数据库中提取标题和正文显示到对应窗口(使用ADO)。</p>
<h3 id="解析过程"><a href="#解析过程" class="headerlink" title="解析过程"></a>解析过程</h3><h4 id="创建"><a href="#创建" class="headerlink" title="创建"></a>创建</h4><p>1.使用CoCreateInstance创建一个接口<br><figure class="highlight lisp"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">HRESULT hr = CoCreateInstance(<span class="name">CLSID_HTMLDocument</span>, NULL, CLSCTX_INPROC_SERVER, IID_IHTMLDocument2, (<span class="name">void**</span>)<span class="symbol">&amp;pDoc</span>)<span class="comment">;</span></div></pre></td></tr></table></figure></p>
<p>2.创建一个COM中的数组，将HTML字符串写到数组中</p>
<p>a）SafeArrayCreateVector:函数用来创建一个对应的数组结构。函数有三个参数，第一个参数表示数组中元素类型，一般给VT_VARIANT表示它是一个自动类型，第二个参数数组元素起始位置的下标，对于VC来说，数组元素总是从0开始，所以这个位置一般给0，第三个参数是数组的维数，在这将它作为一个字符数组，所以是一个一维数组。<br>b）SafeArrayAccessData：允许用户操作这个数组，在需要读写这个数组时都需要调用这个函数，以便获取这个数组的操作权。它有两个参数，第一个参数是数组变量，第二个参数是一个输出参数，当调用这个函数成功，会提供一个缓冲区，操作这个缓冲区就相当于操作了这个数组。<br>c）SafeArrayUnaccessData：每当操作数组完成时需要调用这个函数，函数与SafeArrayAccessData配套使用，用来回收这个权限，并使对数组的操作生效。</p>
<ol>
<li>调用接口的write方法，将接口与HTML字符串绑定 <figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">SAFEARRAY* psa = SafeArrayCreateVector(VT_VARIANT, <span class="number">0</span>, <span class="number">1</span>);</div><div class="line">VARIANT *param;</div><div class="line"><span class="keyword">bstr_t</span> bsData = (LPCTSTR)strHtml;</div><div class="line">hr = SafeArrayAccessData(psa, (LPVOID*)&amp;param);</div><div class="line">param-&gt;vt = VT_BSTR;</div><div class="line">param-&gt;bstrVal = (BSTR)bsData;</div><div class="line">hr = pDoc-&gt;write(psa);</div><div class="line">hr = SafeArrayUnaccessData(psa);</div></pre></td></tr></table></figure>
</li>
</ol>
<p>目标：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">&lt;span <span class="class"><span class="keyword">class</span></span>=<span class="string">"link_title"</span>&gt;<span class="xml"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/jiangsheng/article/details/9870241"</span>&gt;</span></span></div><div class="line">选择剪贴板格式顺序            </div><div class="line"><span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line">&lt;<span class="regexp">/span&gt;</span></div></pre></td></tr></table></figure>
<p>整个 \<span\> \</span\>  是元素， \<span\>  是标签，class是属性名，link_title是属性值，“选择剪贴板格式顺序”是文本。</span\></p>
<h4 id="元素遍历"><a href="#元素遍历" class="headerlink" title="元素遍历"></a>元素遍历</h4><p>至少两种方法：<br>法一：<br>获取了HTML文档的IID_IHTMLDocument2接口后，开始遍历：<br>1.get_all方法获取所有标签节点，这个函数通过一个输出参数输出IHTMLElementCollection类型的接口指针<br>2.用IHTMLElementCollection接口的get_length方法获取标签的总数量，据此写一个循环，在循环进行元素的遍历<br>3.循环中用IHTMLElementCollection接口的item方法进行迭代，获取各元素对应的IDispatch接口指针<br>4.调用IDispatch接口指针的QueryInterface方法生成对应的IHTMLElement接口。通过这个接口获取元素的各种信息</p>
<p>以下已能成功获取标题：<br><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div></pre></td><td class="code"><pre><div class="line">void CGetWebDlg::EnumElements(IHTMLDocument2* pDoc)</div><div class="line">&#123;</div><div class="line">	CComPtr&lt;IHTMLElementCollection&gt; pCollection<span class="comment">;</span></div><div class="line">	pDoc-&gt;get_all(&amp;pCollection)<span class="comment">;</span></div><div class="line">	if (NULL == pCollection)</div><div class="line">	&#123;</div><div class="line">		return<span class="comment">;</span></div><div class="line">	&#125;</div><div class="line">	VARIANT varName<span class="comment">;</span></div><div class="line">	CString strText<span class="comment">;</span></div><div class="line">	long len = <span class="number">0</span><span class="comment">;</span></div><div class="line">	pCollection-&gt;get_length(&amp;len)<span class="comment">;</span></div><div class="line">	for (int i = <span class="number">0</span><span class="comment">; i &lt; len; i++)</span></div><div class="line">	&#123;</div><div class="line">		varName.vt = VT_I4<span class="comment">;</span></div><div class="line">		varName.lVal = i<span class="comment">;</span></div><div class="line">		CComPtr&lt;IHTMLElement&gt; pElement<span class="comment">;</span></div><div class="line">		CComPtr&lt;IDispatch&gt; pDisp<span class="comment">;</span></div><div class="line">		pCollection-&gt;item(varName, varName, &amp;pDisp)<span class="comment">;</span></div><div class="line">		if (NULL == pDisp)</div><div class="line">		&#123;</div><div class="line">			continue<span class="comment">;</span></div><div class="line">		&#125;</div><div class="line"></div><div class="line">		pDisp-&gt;QueryInterface(IID_IHTMLElement, (LPVOID*)&amp;pElement)<span class="comment">;</span></div><div class="line">		if (NULL != pElement)</div><div class="line">		&#123;</div><div class="line">			<span class="keyword">BSTR </span><span class="keyword">bstrClass;	</span></div><div class="line">			pElement-&gt;get_className(&amp;<span class="keyword">bstrClass);</span></div><div class="line">			CString strClass = _com_util::ConvertBSTRToString(<span class="keyword">bstrClass);</span></div><div class="line">			if (strClass.Compare(<span class="string">"link_title"</span>) == <span class="number">0</span>)</div><div class="line">			&#123;</div><div class="line">					<span class="keyword">BSTR </span><span class="keyword">bstrText </span>= NULL<span class="comment">;</span></div><div class="line">					pElement-&gt;get_innerText(&amp;<span class="keyword">bstrText);</span></div><div class="line">					strText = <span class="keyword">bstrText;</span></div><div class="line">					m_list.<span class="keyword">InsertItem(i, </span>strText)<span class="comment">;</span></div><div class="line">			&#125;			</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>法二：<br>利用IHTMLDocument2将字符串形式的HTML转换为DOM对象，利用IHTMLDocument3的getElementByTagName等方法来操作DOM对象。<br>以下已能成功获取标题：<br><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line"><span class="symbol">MSHTML:</span>:IHTMLDocument3Ptr pDoc3<span class="comment">;</span></div><div class="line"><span class="symbol"> 	MSHTML:</span>:IHTMLElementCollectionPtr pCollection<span class="comment">;</span></div><div class="line"><span class="symbol"> 	MSHTML:</span>:IHTMLElementPtr pElement<span class="comment">;</span></div><div class="line"></div><div class="line">pDoc3 = pDoc<span class="comment">;</span></div><div class="line">pCollection = pDoc3-&gt;getElementsByTagName(L<span class="string">"span"</span>)<span class="comment">;</span></div><div class="line">for (long i = <span class="number">0</span><span class="comment">; i &lt; pCollection-&gt;length; i++)</span></div><div class="line">&#123;</div><div class="line">	pElement = pCollection-&gt;item(i, (long)<span class="number">0</span>)<span class="comment">;</span></div><div class="line">	if (pElement != NULL)</div><div class="line">	&#123;</div><div class="line">		<span class="keyword">BSTR </span><span class="keyword">bstrClass;</span></div><div class="line">		pElement-&gt;get_className(&amp;<span class="keyword">bstrClass);</span></div><div class="line">		CString strClass = _com_util::ConvertBSTRToString(<span class="keyword">bstrClass);</span></div><div class="line">		if (strClass.Compare(<span class="string">"link_title"</span>) == <span class="number">0</span>)</div><div class="line">		&#123;</div><div class="line">			<span class="keyword">BSTR </span><span class="keyword">bstrText </span>= NULL<span class="comment">;</span></div><div class="line">			pElement-&gt;get_innerText(&amp;<span class="keyword">bstrText);</span></div><div class="line">			CString strText = <span class="keyword">bstrText;</span></div><div class="line">			m_list.<span class="keyword">InsertItem(i, </span>strText)<span class="comment">;</span></div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>其实两种方法大同小异，相较而言可能数据量大的话，法二效率高些吧。因为法一是直接遍历所有的元素寻找class相同的，而法二是先定位span，然后在span中找寻class。（getElementsByTagName只有IHTMLDocument3Ptr）</p>
<p><a href="http://blog.csdn.net/lanuage/article/details/72825878" target="_blank" rel="external">使用MSHTML解析HTML页面</a><br><a href="http://www.2cto.com/kf/201305/214730.html" target="_blank" rel="external">变体VARIANT</a><br>MSDN-DOM    <a href="https://msdn.microsoft.com/en-us/library/ms766487(v=vs.85).aspx" target="_blank" rel="external">https://msdn.microsoft.com/en-us/library/ms766487(v=vs.85).aspx</a><br><a href="http://www.360doc.com/content/12/0427/19/8006573_207099529.shtml" target="_blank" rel="external">使用MSHTML接口获取链接</a></p>
<p>晚上几个小时做完了一半，抵了之前一两个月。<br>数据库这块没来得及做，没加多线程，很多细节还得调。但比起之前心有余而力不足的感觉还是好多了。  学过msxml后，学习mshtml确实强一点，比一个月前完全不知道怎么下手好很多了。</p>
<p>今晚总算做出来个半成品<br><img src="http://img.blog.csdn.net/20170802003740628?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="半成品"></p>
<h4 id="正文解析"><a href="#正文解析" class="headerlink" title="正文解析"></a>正文解析</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">void</span> CGetWebDlg::ArticleParse(CString strArticle, Blog* blog, <span class="keyword">int</span> iRow)</div><div class="line">&#123;</div><div class="line">	IHTMLDocument2* pDoc;</div><div class="line">	MSHTML::IHTMLDocument3Ptr pDoc3;</div><div class="line">	MSHTML::IHTMLElementCollectionPtr pCollection;</div><div class="line">	MSHTML::IHTMLElementPtr pElement;</div><div class="line"></div><div class="line">	HRESULT hr = CoCreateInstance(CLSID_HTMLDocument, <span class="literal">NULL</span>, CLSCTX_INPROC_SERVER, IID_IHTMLDocument2, (<span class="keyword">void</span>**)&amp;pDoc);</div><div class="line"></div><div class="line"></div><div class="line">	<span class="comment">//将代码放入安全数组并写入文档</span></div><div class="line">	SAFEARRAY* psa = SafeArrayCreateVector(VT_VARIANT, <span class="number">0</span>, <span class="number">1</span>);</div><div class="line">	<span class="keyword">if</span> (psa == <span class="literal">NULL</span> || pDoc == <span class="literal">NULL</span>)</div><div class="line">	&#123;</div><div class="line">		MessageBox(<span class="number">_</span>T(<span class="string">"创建Document2对象失败！"</span>));</div><div class="line">	&#125;</div><div class="line">	VARIANT *param;</div><div class="line">	<span class="keyword">bstr_t</span> bsData = (LPCTSTR)strArticle;</div><div class="line">	hr = SafeArrayAccessData(psa, (LPVOID*)&amp;param);</div><div class="line">	param-&gt;vt = VT_BSTR;</div><div class="line">	param-&gt;bstrVal = (BSTR)bsData;</div><div class="line">	hr = pDoc-&gt;write(psa);</div><div class="line">	<span class="comment">//hr = pDoc-&gt;close();</span></div><div class="line"></div><div class="line">	<span class="comment">//SafeArrayDestroy(psa);</span></div><div class="line">	hr = SafeArrayUnaccessData(psa);</div><div class="line">	<span class="keyword">_bstr_t</span> href;</div><div class="line">	pDoc3 = pDoc;</div><div class="line">	pCollection = pDoc3-&gt;getElementsByTagName(<span class="string">L"div"</span>);</div><div class="line">	<span class="keyword">for</span> (<span class="keyword">long</span> k = <span class="number">0</span>; k &lt; pCollection-&gt;length; k++)</div><div class="line">	&#123;</div><div class="line">		pElement = pCollection-&gt;item(k, (<span class="keyword">long</span>)<span class="number">0</span>);</div><div class="line">		<span class="keyword">if</span> (pElement != <span class="literal">NULL</span>)</div><div class="line">		&#123;</div><div class="line">			BSTR bstrClass;</div><div class="line">			pElement-&gt;get_id(&amp;bstrClass);</div><div class="line">			CString strClass = <span class="number">_</span>com_util::ConvertBSTRToString(bstrClass);</div><div class="line">			<span class="keyword">if</span> (strClass.CompareNoCase(<span class="string">"article_content"</span>) == <span class="number">0</span>)</div><div class="line">			&#123;</div><div class="line">				BSTR bstrText = <span class="literal">NULL</span>;</div><div class="line">				pElement-&gt;get_innerText(&amp;bstrText);</div><div class="line">				CString strText = bstrText;</div><div class="line">				blog-&gt;article = strText;</div><div class="line">				m_list.SetItemData(iRow, (DWORD_PTR)blog);							</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>建立了一个结构体用来存放每篇文章的标题和正文，方便点击列表控件项时读取对应的结构体。</p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">struct</span> Blog</div><div class="line">	&#123;</div><div class="line">		CString title;</div><div class="line">		CString article;</div><div class="line">	&#125;;</div></pre></td></tr></table></figure>
<h4 id="列表控件和编辑框交互"><a href="#列表控件和编辑框交互" class="headerlink" title="列表控件和编辑框交互"></a>列表控件和编辑框交互</h4><h5 id="列表控件初始化"><a href="#列表控件初始化" class="headerlink" title="列表控件初始化"></a>列表控件初始化</h5><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">CRect rectLocal;</div><div class="line">m_list.GetClientRect(rectLocal); <span class="comment">//获得当前客户区信息</span></div><div class="line">m_list.InsertColumn(<span class="number">0</span>, <span class="string">"序号"</span>, LVCFMT_LEFT, rectLocal.Width() / <span class="number">6</span>, <span class="number">0</span>);</div><div class="line">m_list.InsertColumn(<span class="number">1</span>, <span class="string">"文章列表"</span>, LVCFMT_LEFT, rectLocal.Width() / <span class="number">6</span> * <span class="number">5</span>, <span class="number">1</span>);</div></pre></td></tr></table></figure>
<p>添加多列后，单击只能选中第一列，这时需要修改风格 LVS_EX_FULLROWSELECT   表示整行。<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">m_list.SetExtendedStyle(LVS_EX_FULLROWSELECT);</div></pre></td></tr></table></figure></p>
<h5 id="添加数据"><a href="#添加数据" class="headerlink" title="添加数据"></a>添加数据</h5><p>单纯添加一项的话：    m_list.InsertItem(项的索引, 数据);<br>但要指定列的话：<br>m_list.InsertItem(项的索引, “”);<br>m_list.SetItemText(行, 列, 数据);</p>
<h5 id="onlvnitemchangedlist"><a href="#OnLvnItemchangedList" class="headerlink" title="OnLvnItemchangedList"></a>OnLvnItemchangedList</h5><p>试了多种方法，只有这一种成功了：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">void</span> CGetWebDlg::OnLvnItemchangedList1(NMHDR *pNMHDR, LRESULT *pResult)</div><div class="line">&#123;</div><div class="line">	LPNMLISTVIEW pNMLV = <span class="keyword">reinterpret_cast</span>&lt;LPNMLISTVIEW&gt;(pNMHDR);</div><div class="line">	<span class="comment">// <span class="doctag">TODO:</span>  在此添加控件通知处理程序代码</span></div><div class="line"><span class="comment">// 	m_edit.SetWindowText("");</span></div><div class="line"><span class="comment">// 	int index = m_list.GetNextItem(-1, LVNI_ALL | LVNI_SELECTED);</span></div><div class="line"><span class="comment">// 	Blog *pStructure = (Blog*)m_list.GetItemData(index);</span></div><div class="line"><span class="comment">// 	m_edit.SetWindowText(pStructure-&gt;article);</span></div><div class="line">	<span class="keyword">if</span> (pNMLV-&gt;uNewState == (LVIS_SELECTED | LVIS_FOCUSED))</div><div class="line">	&#123;</div><div class="line">		m_edit.SetWindowText(<span class="string">""</span>);</div><div class="line">		Blog *pStructure = (Blog*)m_list.GetItemData(pNMLV-&gt;iItem);</div><div class="line">		m_edit.SetWindowText(pStructure-&gt;article);</div><div class="line">	&#125;</div><div class="line">	*pResult = <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>实现列表和编辑框交互后，可以说这已经是一个可以完整运行的程序了，V1.0版本出炉。<br>实测解析时间：1分41秒<br>能够成功获取该博客111篇文章，能够正确显示正文（包括清晰显示代码）。现在的运行图：<br><img src="http://img.blog.csdn.net/20170805145839785?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="V1.0"><br>该版本未添加多线程、未和数据库关联。</p>
<p>V2.0实现数据库操作</p>
<h1 id="使用sqlite数据库"><a href="#使用sqlite数据库" class="headerlink" title="使用sqlite数据库"></a>使用sqlite数据库</h1><h2 id="下载导入"><a href="#下载导入" class="headerlink" title="下载导入"></a>下载导入</h2><p>官网下载sqlite<br>Source Code  sqlite-amalgamation-3200000.zip  有三个东西  shell.c  sqlite3.c  sqlite3.h<br>根据<a href="http://blog.csdn.net/sunnyloves/article/details/39010831" target="_blank" rel="external">VS2010下SQLite3生成lib库文件</a> 文章方法生成sqlite3.lib</p>
<p>Precompiled Binaries for Windows  sqlite-dll-win32-x86-3200000.zip  有一个所需 sqlite3.dll</p>
<p>将lib和dll放入项目工程里，在.cpp开头加上<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"sqlite3.h"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">pragma</span> comment(lib,<span class="meta-string">"sqlite3.lib"</span>)</span></div></pre></td></tr></table></figure></p>
<h2 id="sqlite在vc中的操作"><a href="#sqlite在VC中的操作" class="headerlink" title="sqlite在VC中的操作"></a>sqlite在VC中的操作</h2><pre><code class="C++"><span class="keyword">int</span> CGetWebDlg::Database(CString title, CString article)
{
    sqlite3 * pDB;
    <span class="keyword">char</span>* errMsg;
    <span class="comment">// 连接SQLite数据库</span>
    <span class="keyword">int</span> res = sqlite3_open(<span class="string">"datebase.db"</span>, &amp;pDB);
    <span class="keyword">if</span> (res != SQLITE_OK){
        MessageBox(_T(<span class="string">"数据库打开失败，请检查后再操作！"</span>), <span class="literal">NULL</span>, MB_ICONSTOP);
        sqlite3_close(pDB);
        <span class="keyword">return</span> <span class="number">-1</span>;
    }
<span class="comment">//     // 创建表</span>
    <span class="built_in">string</span> strSQL = <span class="string">"create table test (title text, article text);"</span>;
    res = sqlite3_exec(pDB, strSQL.c_str(), <span class="number">0</span>, <span class="number">0</span>, &amp;errMsg);
    <span class="keyword">if</span> (res != SQLITE_OK)
    {
        MessageBox(_T(<span class="string">"数据库打开失败，请检查后再操作！"</span>), <span class="literal">NULL</span>, MB_ICONSTOP);
        <span class="comment">//return -1;</span>
    }
    <span class="comment">// 插入数据</span>
    <span class="built_in">string</span> strSQL = <span class="string">"INSERT INTO \"blog\" VALUES(title, article); "</span>;
    sqlite3_exec(pDB, strSQL.c_str(), <span class="number">0</span>, <span class="number">0</span>, &amp;errMsg);

<span class="comment">//     int nrow = 0, ncolumn = 0;</span>
<span class="comment">//     char **azResult; //二维数组存放结果</span>


    <span class="comment">//查询数据</span>
    strSQL = <span class="string">"select * from test;"</span>;
    sqlite3_exec(pDB, strSQL.c_str(), SelectCallback, <span class="number">0</span>, &amp;errMsg);


    sqlite3_close(pDB); <span class="comment">//关闭数据库</span>

}


<span class="keyword">int</span> CGetWebDlg::SelectCallback(<span class="keyword">void</span> *notUsed, <span class="keyword">int</span> argc, <span class="keyword">char</span> **argv, <span class="keyword">char</span> **azColName)
{
    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; argc; i++)
    {
        <span class="built_in">printf</span>(<span class="string">"%s = %s"</span>, azColName[i], (argv[i] ? argv[i] : <span class="string">"NULL"</span>));
        <span class="keyword">if</span> (i != argc - <span class="number">1</span>)
        {
                <span class="built_in">printf</span>(<span class="string">", "</span>);
        }
    }
    <span class="built_in">printf</span>(<span class="string">"\n"</span>);
    <span class="keyword">return</span> <span class="number">0</span>;
}
</code></pre>
<p>还是事先把数据库和表创建好了方便……<br><img src="http://img.blog.csdn.net/20170812235933407?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="创建数据库和表"></p>
<p>思路是解析完每一篇正文后就将标题和正文数据存入数据库，添加为表中的一项。</p>
<p>1.好像和ADO没啥关系<br>2.能不能保存结构体到sqlite<br>3.数据怎么查看……没数据库管理系统可视化界面反而……<br>4.考虑用不用sqlite的封装类<br>5.select回调函数怎么用<br>6.怎么存变量到数据库<br>7.查询后怎么显示到列表控件上<br>8.从列表控件点击怎么获取正文显示到编辑框，因为数据来自数据库，就不是直接获取列表点击项的结构体了。</p>
<p>。。。白学的数据库</p>
<p><a href="http://blog.csdn.net/langxm2006/article/details/55685173" target="_blank" rel="external">MFC中使用sqlite3操作数据库 创建，插入数据，查询数据</a><br><a href="http://www.jb51.net/article/50982.htm" target="_blank" rel="external">C++操作SQLite简明教程</a><br><a href="http://blog.csdn.net/lp310018931/article/details/28706439" target="_blank" rel="external">在vc中使用sqlite3数据库</a><br><a href="http://blog.csdn.net/segen_jaa/article/details/7938959" target="_blank" rel="external">C++使用SQLite步骤及示例</a><br><a href="http://www.cnblogs.com/sunniflyer/p/4118956.html" target="_blank" rel="external">MFC中使用ADO进行数据库操作</a><br><a href="http://blog.csdn.net/auauxxx/article/details/7462410" target="_blank" rel="external">VC连接SQLite3的方法(MFC封装类)</a><br><a href="https://yq.aliyun.com/ziliao/145275" target="_blank" rel="external">VC++操作SQLite简单实例_C语言</a></p>
<p>To be continued…</p>
]]></content>
    
    <summary type="html">
    
      &lt;div align=&quot;left&quot;&gt;&lt;br&gt;&lt;img src=&quot;http://img.blog.csdn.net/20170805145839785?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast&quot; width=&quot;300&quot; height=&quot;180&quot; style=&quot;float:right;&quot;/&gt;&lt;br&gt;  &lt;/div&gt;

&lt;p&gt;　　开发一个网页分析程序，可以抓取特定网页的内容，加以分析之后将结果保存至数据库。&lt;/p&gt;
&lt;p&gt;　　V1.0版本出炉，实测解析时间1分41秒。
　　
　　
　　&lt;/p&gt;
    
    </summary>
    
      <category term="互联网" scheme="http://hubojing.github.io/categories/%E4%BA%92%E8%81%94%E7%BD%91/"/>
    
    
      <category term="MFC" scheme="http://hubojing.github.io/tags/MFC/"/>
    
      <category term="爬虫" scheme="http://hubojing.github.io/tags/%E7%88%AC%E8%99%AB/"/>
    
  </entry>
  
  <entry>
    <title>Socket点对点聊天+文件传输</title>
    <link href="http://hubojing.github.io/2017/05/07/Socket%E7%82%B9%E5%AF%B9%E7%82%B9%E8%81%8A%E5%A4%A9-%E6%96%87%E4%BB%B6%E4%BC%A0%E8%BE%93/"/>
    <id>http://hubojing.github.io/2017/05/07/Socket点对点聊天-文件传输/</id>
    <published>2017-05-07T14:58:30.000Z</published>
    <updated>2017-05-28T14:29:34.000Z</updated>
    
    <content type="html"><![CDATA[<div align="left"><br><img src="https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1494249495796&di=6e913a58ff8ec3713e96983683e150b8&imgtype=0&src=http%3A%2F%2Fimg.my.csdn.net%2Fuploads%2F201304%2F08%2F1365431054_1015.png" width="300" height="180" style="float:right;"><br><br><br>　Socket编程。　<br><br><br> </div>

<a id="more"></a>
<p>socket:<br>设计一个点对点聊天小程序。</p>
<ol>
<li>使用原生socket api实现，<strong>即不使用MFC中的socket类</strong>，也不使用其他高级socket框架</li>
<li>需要先设计一套协议</li>
<li>有GUI界面</li>
<li>可互相传递文字和文件</li>
<li>即时反应对方的在线还是离线</li>
</ol>
<h1 id="初级版"><a href="#初级版" class="headerlink" title="初级版"></a>初级版</h1><p>1.在应用程序类重载的InitInstance函数中调用AfxSocketInit()函数，加载套接字。</p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">if</span>(!AfxSocketInit())</div><div class="line">&#123;</div><div class="line">    AfxMessageBox(<span class="string">"加载套接字库失败！"</span>);</div><div class="line">    <span class="keyword">return</span> FALSE;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>2.在你的对话框类中添加如下函数InitSocket()，初始化套接字</p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line">BOOL CChatDlg::InitSocket()</div><div class="line">&#123;</div><div class="line">    m_socket=socket(AF_INET,SOCK_DGRAM,<span class="number">0</span>);</div><div class="line">    <span class="keyword">if</span>(INVALID_SOCKET==m_socket)</div><div class="line">    &#123;</div><div class="line">        MessageBox(<span class="string">"套接字创建失败！"</span>);</div><div class="line">        <span class="keyword">return</span> FALSE;</div><div class="line">    &#125;</div><div class="line">    SOCKADDR_IN addrSock;</div><div class="line">    addrSock.sin_family=AF_INET;</div><div class="line">    addrSock.sin_port=htons(<span class="number">5000</span>);</div><div class="line">    addrSock.sin_addr.S_un.S_addr=htonl(INADDR_ANY);</div><div class="line"> </div><div class="line">    <span class="keyword">int</span> retval;</div><div class="line">    retval=bind(m_socket,(SOCKADDR*)&amp;addrSock,<span class="keyword">sizeof</span>(SOCKADDR));</div><div class="line">    <span class="keyword">if</span>(SOCKET_ERROR==retval)</div><div class="line">    &#123;</div><div class="line">        closesocket(m_socket);</div><div class="line">        MessageBox(<span class="string">"绑定失败!"</span>);</div><div class="line">        <span class="keyword">return</span> FALSE;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> TRUE;</div><div class="line"> </div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>3.在对话框类的OnInitDialog()函数中调用上述InitSocket()函数，初始化套接字，同时创建一个线程接收数据：</p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">RECVPARAM *pRecvParam=<span class="keyword">new</span> RECVPARAM;</div><div class="line">pRecvParam-&gt;sock=m_socket;</div><div class="line">pRecvParam-&gt;hwnd=m_hWnd;</div><div class="line">HANDLE hThread=CreateThread(<span class="literal">NULL</span>,<span class="number">0</span>,RecvProc,(LPVOID)pRecvParam,<span class="number">0</span>,<span class="literal">NULL</span>);</div><div class="line">CloseHandle(hThread);</div></pre></td></tr></table></figure>
<p>其中</p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">struct</span> RECVPARAM</div><div class="line">&#123;</div><div class="line">    SOCKET sock;</div><div class="line">    HWND hwnd;</div><div class="line">&#125;;</div></pre></td></tr></table></figure>
<p>是自定义结构体</p>
<p>4.接收线程函数RecvProc:</p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">DWORD WINAPI CChatDlg::RecvProc(LPVOID lpParameter)</div><div class="line">&#123;</div><div class="line">    SOCKET sock=((RECVPARAM*)lpParameter)-&gt;sock;</div><div class="line">    HWND hwnd=((RECVPARAM*)lpParameter)-&gt;hwnd;</div><div class="line">    <span class="keyword">delete</span> lpParameter;   </div><div class="line">    SOCKADDR_IN addrFrom;</div><div class="line">    <span class="keyword">int</span> len=<span class="keyword">sizeof</span>(SOCKADDR); </div><div class="line">    <span class="keyword">char</span> recvBuf[<span class="number">200</span>];</div><div class="line">    <span class="keyword">int</span> retval;</div><div class="line">    <span class="keyword">while</span>(TRUE)</div><div class="line">    &#123;</div><div class="line">        retval=recvfrom(sock,recvBuf,<span class="number">200</span>,<span class="number">0</span>,(SOCKADDR*)&amp;addrFrom,&amp;len);</div><div class="line">        <span class="keyword">if</span>(SOCKET_ERROR==retval)</div><div class="line">            <span class="keyword">break</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>recvBuf中就保存了你要的数据。<br><img src="http://img.blog.csdn.net/20170508183259821?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="初级版"></p>
<h1 id="中级版"><a href="#中级版" class="headerlink" title="中级版"></a>中级版</h1><h2 id="界面"><a href="#界面" class="headerlink" title="界面"></a>界面</h2><p><img src="http://img.blog.csdn.net/20170508181716901?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="原始界面"></p>
<p>聊天：<br><img src="http://img.blog.csdn.net/20170508181451922?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="TCP"></p>
<p>传文件：<br>服务器<br><img src="http://img.blog.csdn.net/20170508181526914?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="传文件"></p>
<p>客户端<br><img src="http://img.blog.csdn.net/20170508181625735?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="传文件2"></p>
<p>显示文件传输进度：<br><img src="http://img.blog.csdn.net/20170508181907845?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="传输过程"></p>
<p>传输成功，可以正常打开文件。<br><img src="http://img.blog.csdn.net/20170508181937814?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="传输成功"></p>
<p>下线：<br><img src="http://img.blog.csdn.net/20170508182031143?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="下线"></p>
<p>关于：<br><img src="http://img.blog.csdn.net/20170508182628147?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="关于"></p>
<p>源程序：</p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div><div class="line">175</div><div class="line">176</div><div class="line">177</div><div class="line">178</div><div class="line">179</div><div class="line">180</div><div class="line">181</div><div class="line">182</div><div class="line">183</div><div class="line">184</div><div class="line">185</div><div class="line">186</div><div class="line">187</div><div class="line">188</div><div class="line">189</div><div class="line">190</div><div class="line">191</div><div class="line">192</div><div class="line">193</div><div class="line">194</div><div class="line">195</div><div class="line">196</div><div class="line">197</div><div class="line">198</div><div class="line">199</div><div class="line">200</div><div class="line">201</div><div class="line">202</div><div class="line">203</div><div class="line">204</div><div class="line">205</div><div class="line">206</div><div class="line">207</div><div class="line">208</div><div class="line">209</div><div class="line">210</div><div class="line">211</div><div class="line">212</div><div class="line">213</div><div class="line">214</div><div class="line">215</div><div class="line">216</div><div class="line">217</div><div class="line">218</div><div class="line">219</div><div class="line">220</div><div class="line">221</div><div class="line">222</div><div class="line">223</div><div class="line">224</div><div class="line">225</div><div class="line">226</div><div class="line">227</div><div class="line">228</div><div class="line">229</div><div class="line">230</div><div class="line">231</div><div class="line">232</div><div class="line">233</div><div class="line">234</div><div class="line">235</div><div class="line">236</div><div class="line">237</div><div class="line">238</div><div class="line">239</div><div class="line">240</div><div class="line">241</div><div class="line">242</div><div class="line">243</div><div class="line">244</div><div class="line">245</div><div class="line">246</div><div class="line">247</div><div class="line">248</div><div class="line">249</div><div class="line">250</div><div class="line">251</div><div class="line">252</div><div class="line">253</div><div class="line">254</div><div class="line">255</div><div class="line">256</div><div class="line">257</div><div class="line">258</div><div class="line">259</div><div class="line">260</div><div class="line">261</div><div class="line">262</div><div class="line">263</div><div class="line">264</div><div class="line">265</div><div class="line">266</div><div class="line">267</div><div class="line">268</div><div class="line">269</div><div class="line">270</div><div class="line">271</div><div class="line">272</div><div class="line">273</div><div class="line">274</div><div class="line">275</div><div class="line">276</div><div class="line">277</div><div class="line">278</div><div class="line">279</div><div class="line">280</div><div class="line">281</div><div class="line">282</div><div class="line">283</div><div class="line">284</div><div class="line">285</div><div class="line">286</div><div class="line">287</div><div class="line">288</div><div class="line">289</div><div class="line">290</div><div class="line">291</div><div class="line">292</div><div class="line">293</div><div class="line">294</div><div class="line">295</div><div class="line">296</div><div class="line">297</div><div class="line">298</div><div class="line">299</div><div class="line">300</div><div class="line">301</div><div class="line">302</div><div class="line">303</div><div class="line">304</div><div class="line">305</div><div class="line">306</div><div class="line">307</div><div class="line">308</div><div class="line">309</div><div class="line">310</div><div class="line">311</div><div class="line">312</div><div class="line">313</div><div class="line">314</div><div class="line">315</div><div class="line">316</div><div class="line">317</div><div class="line">318</div><div class="line">319</div><div class="line">320</div><div class="line">321</div><div class="line">322</div><div class="line">323</div><div class="line">324</div><div class="line">325</div><div class="line">326</div><div class="line">327</div><div class="line">328</div><div class="line">329</div><div class="line">330</div><div class="line">331</div><div class="line">332</div><div class="line">333</div><div class="line">334</div><div class="line">335</div><div class="line">336</div><div class="line">337</div><div class="line">338</div><div class="line">339</div><div class="line">340</div><div class="line">341</div><div class="line">342</div><div class="line">343</div><div class="line">344</div><div class="line">345</div><div class="line">346</div><div class="line">347</div><div class="line">348</div><div class="line">349</div><div class="line">350</div><div class="line">351</div><div class="line">352</div><div class="line">353</div><div class="line">354</div><div class="line">355</div><div class="line">356</div><div class="line">357</div><div class="line">358</div><div class="line">359</div><div class="line">360</div><div class="line">361</div><div class="line">362</div><div class="line">363</div><div class="line">364</div><div class="line">365</div><div class="line">366</div><div class="line">367</div><div class="line">368</div><div class="line">369</div><div class="line">370</div><div class="line">371</div><div class="line">372</div><div class="line">373</div><div class="line">374</div><div class="line">375</div><div class="line">376</div><div class="line">377</div><div class="line">378</div><div class="line">379</div><div class="line">380</div><div class="line">381</div><div class="line">382</div><div class="line">383</div><div class="line">384</div><div class="line">385</div><div class="line">386</div><div class="line">387</div><div class="line">388</div><div class="line">389</div><div class="line">390</div><div class="line">391</div><div class="line">392</div><div class="line">393</div><div class="line">394</div><div class="line">395</div><div class="line">396</div><div class="line">397</div><div class="line">398</div><div class="line">399</div><div class="line">400</div><div class="line">401</div><div class="line">402</div><div class="line">403</div><div class="line">404</div><div class="line">405</div><div class="line">406</div><div class="line">407</div><div class="line">408</div><div class="line">409</div><div class="line">410</div><div class="line">411</div><div class="line">412</div><div class="line">413</div><div class="line">414</div><div class="line">415</div><div class="line">416</div><div class="line">417</div><div class="line">418</div><div class="line">419</div><div class="line">420</div><div class="line">421</div><div class="line">422</div><div class="line">423</div><div class="line">424</div><div class="line">425</div><div class="line">426</div><div class="line">427</div><div class="line">428</div><div class="line">429</div><div class="line">430</div><div class="line">431</div><div class="line">432</div><div class="line">433</div><div class="line">434</div><div class="line">435</div><div class="line">436</div><div class="line">437</div><div class="line">438</div><div class="line">439</div><div class="line">440</div><div class="line">441</div><div class="line">442</div><div class="line">443</div><div class="line">444</div><div class="line">445</div><div class="line">446</div><div class="line">447</div><div class="line">448</div><div class="line">449</div><div class="line">450</div><div class="line">451</div><div class="line">452</div><div class="line">453</div><div class="line">454</div><div class="line">455</div><div class="line">456</div><div class="line">457</div><div class="line">458</div><div class="line">459</div><div class="line">460</div><div class="line">461</div><div class="line">462</div><div class="line">463</div><div class="line">464</div><div class="line">465</div><div class="line">466</div><div class="line">467</div><div class="line">468</div><div class="line">469</div><div class="line">470</div><div class="line">471</div><div class="line">472</div><div class="line">473</div><div class="line">474</div><div class="line">475</div><div class="line">476</div><div class="line">477</div><div class="line">478</div><div class="line">479</div><div class="line">480</div><div class="line">481</div><div class="line">482</div><div class="line">483</div><div class="line">484</div><div class="line">485</div><div class="line">486</div><div class="line">487</div><div class="line">488</div><div class="line">489</div><div class="line">490</div><div class="line">491</div><div class="line">492</div><div class="line">493</div><div class="line">494</div><div class="line">495</div><div class="line">496</div><div class="line">497</div><div class="line">498</div><div class="line">499</div><div class="line">500</div><div class="line">501</div><div class="line">502</div><div class="line">503</div><div class="line">504</div><div class="line">505</div><div class="line">506</div><div class="line">507</div><div class="line">508</div><div class="line">509</div><div class="line">510</div><div class="line">511</div><div class="line">512</div><div class="line">513</div><div class="line">514</div><div class="line">515</div><div class="line">516</div><div class="line">517</div><div class="line">518</div><div class="line">519</div><div class="line">520</div><div class="line">521</div><div class="line">522</div><div class="line">523</div><div class="line">524</div><div class="line">525</div><div class="line">526</div><div class="line">527</div><div class="line">528</div><div class="line">529</div><div class="line">530</div><div class="line">531</div><div class="line">532</div><div class="line">533</div><div class="line">534</div><div class="line">535</div><div class="line">536</div><div class="line">537</div><div class="line">538</div><div class="line">539</div><div class="line">540</div><div class="line">541</div><div class="line">542</div><div class="line">543</div><div class="line">544</div><div class="line">545</div><div class="line">546</div><div class="line">547</div><div class="line">548</div><div class="line">549</div><div class="line">550</div><div class="line">551</div><div class="line">552</div><div class="line">553</div><div class="line">554</div><div class="line">555</div><div class="line">556</div><div class="line">557</div><div class="line">558</div><div class="line">559</div><div class="line">560</div><div class="line">561</div><div class="line">562</div><div class="line">563</div><div class="line">564</div><div class="line">565</div><div class="line">566</div><div class="line">567</div><div class="line">568</div><div class="line">569</div><div class="line">570</div><div class="line">571</div><div class="line">572</div><div class="line">573</div><div class="line">574</div><div class="line">575</div><div class="line">576</div><div class="line">577</div><div class="line">578</div><div class="line">579</div><div class="line">580</div><div class="line">581</div><div class="line">582</div><div class="line">583</div><div class="line">584</div><div class="line">585</div><div class="line">586</div><div class="line">587</div><div class="line">588</div><div class="line">589</div><div class="line">590</div><div class="line">591</div><div class="line">592</div><div class="line">593</div><div class="line">594</div><div class="line">595</div><div class="line">596</div><div class="line">597</div><div class="line">598</div><div class="line">599</div><div class="line">600</div><div class="line">601</div><div class="line">602</div><div class="line">603</div><div class="line">604</div><div class="line">605</div><div class="line">606</div><div class="line">607</div><div class="line">608</div><div class="line">609</div><div class="line">610</div><div class="line">611</div><div class="line">612</div><div class="line">613</div><div class="line">614</div><div class="line">615</div><div class="line">616</div><div class="line">617</div><div class="line">618</div><div class="line">619</div><div class="line">620</div><div class="line">621</div><div class="line">622</div><div class="line">623</div><div class="line">624</div><div class="line">625</div><div class="line">626</div><div class="line">627</div><div class="line">628</div><div class="line">629</div><div class="line">630</div><div class="line">631</div><div class="line">632</div><div class="line">633</div><div class="line">634</div><div class="line">635</div><div class="line">636</div><div class="line">637</div><div class="line">638</div><div class="line">639</div><div class="line">640</div><div class="line">641</div><div class="line">642</div><div class="line">643</div><div class="line">644</div><div class="line">645</div><div class="line">646</div><div class="line">647</div><div class="line">648</div><div class="line">649</div><div class="line">650</div><div class="line">651</div><div class="line">652</div><div class="line">653</div><div class="line">654</div><div class="line">655</div><div class="line">656</div><div class="line">657</div><div class="line">658</div><div class="line">659</div><div class="line">660</div><div class="line">661</div><div class="line">662</div><div class="line">663</div><div class="line">664</div><div class="line">665</div><div class="line">666</div><div class="line">667</div><div class="line">668</div><div class="line">669</div><div class="line">670</div><div class="line">671</div><div class="line">672</div><div class="line">673</div><div class="line">674</div><div class="line">675</div><div class="line">676</div><div class="line">677</div><div class="line">678</div><div class="line">679</div><div class="line">680</div><div class="line">681</div><div class="line">682</div><div class="line">683</div><div class="line">684</div><div class="line">685</div><div class="line">686</div><div class="line">687</div><div class="line">688</div><div class="line">689</div><div class="line">690</div><div class="line">691</div><div class="line">692</div><div class="line">693</div><div class="line">694</div><div class="line">695</div><div class="line">696</div><div class="line">697</div><div class="line">698</div><div class="line">699</div><div class="line">700</div><div class="line">701</div><div class="line">702</div><div class="line">703</div><div class="line">704</div><div class="line">705</div><div class="line">706</div><div class="line">707</div><div class="line">708</div><div class="line">709</div><div class="line">710</div><div class="line">711</div><div class="line">712</div><div class="line">713</div><div class="line">714</div><div class="line">715</div><div class="line">716</div><div class="line">717</div><div class="line">718</div><div class="line">719</div><div class="line">720</div><div class="line">721</div><div class="line">722</div><div class="line">723</div><div class="line">724</div><div class="line">725</div><div class="line">726</div><div class="line">727</div><div class="line">728</div><div class="line">729</div><div class="line">730</div><div class="line">731</div><div class="line">732</div><div class="line">733</div><div class="line">734</div><div class="line">735</div><div class="line">736</div><div class="line">737</div><div class="line">738</div><div class="line">739</div><div class="line">740</div><div class="line">741</div><div class="line">742</div><div class="line">743</div><div class="line">744</div><div class="line">745</div><div class="line">746</div><div class="line">747</div><div class="line">748</div><div class="line">749</div><div class="line">750</div><div class="line">751</div><div class="line">752</div><div class="line">753</div><div class="line">754</div><div class="line">755</div><div class="line">756</div><div class="line">757</div><div class="line">758</div><div class="line">759</div><div class="line">760</div><div class="line">761</div><div class="line">762</div><div class="line">763</div><div class="line">764</div><div class="line">765</div><div class="line">766</div><div class="line">767</div><div class="line">768</div><div class="line">769</div><div class="line">770</div><div class="line">771</div><div class="line">772</div><div class="line">773</div><div class="line">774</div><div class="line">775</div><div class="line">776</div><div class="line">777</div><div class="line">778</div><div class="line">779</div><div class="line">780</div><div class="line">781</div><div class="line">782</div><div class="line">783</div><div class="line">784</div><div class="line">785</div><div class="line">786</div><div class="line">787</div><div class="line">788</div><div class="line">789</div><div class="line">790</div><div class="line">791</div><div class="line">792</div><div class="line">793</div><div class="line">794</div><div class="line">795</div><div class="line">796</div><div class="line">797</div><div class="line">798</div><div class="line">799</div><div class="line">800</div><div class="line">801</div><div class="line">802</div><div class="line">803</div><div class="line">804</div><div class="line">805</div><div class="line">806</div><div class="line">807</div><div class="line">808</div><div class="line">809</div><div class="line">810</div><div class="line">811</div><div class="line">812</div><div class="line">813</div><div class="line">814</div><div class="line">815</div><div class="line">816</div><div class="line">817</div><div class="line">818</div><div class="line">819</div><div class="line">820</div><div class="line">821</div><div class="line">822</div><div class="line">823</div><div class="line">824</div><div class="line">825</div><div class="line">826</div><div class="line">827</div><div class="line">828</div><div class="line">829</div><div class="line">830</div><div class="line">831</div><div class="line">832</div><div class="line">833</div><div class="line">834</div><div class="line">835</div><div class="line">836</div><div class="line">837</div><div class="line">838</div><div class="line">839</div><div class="line">840</div><div class="line">841</div><div class="line">842</div><div class="line">843</div><div class="line">844</div><div class="line">845</div><div class="line">846</div><div class="line">847</div><div class="line">848</div><div class="line">849</div><div class="line">850</div><div class="line">851</div><div class="line">852</div><div class="line">853</div><div class="line">854</div><div class="line">855</div><div class="line">856</div><div class="line">857</div><div class="line">858</div><div class="line">859</div><div class="line">860</div><div class="line">861</div><div class="line">862</div><div class="line">863</div><div class="line">864</div><div class="line">865</div><div class="line">866</div><div class="line">867</div><div class="line">868</div><div class="line">869</div><div class="line">870</div><div class="line">871</div><div class="line">872</div><div class="line">873</div><div class="line">874</div><div class="line">875</div><div class="line">876</div><div class="line">877</div><div class="line">878</div><div class="line">879</div><div class="line">880</div><div class="line">881</div><div class="line">882</div><div class="line">883</div><div class="line">884</div><div class="line">885</div><div class="line">886</div><div class="line">887</div><div class="line">888</div><div class="line">889</div><div class="line">890</div><div class="line">891</div><div class="line">892</div><div class="line">893</div><div class="line">894</div><div class="line">895</div><div class="line">896</div><div class="line">897</div><div class="line">898</div><div class="line">899</div><div class="line">900</div><div class="line">901</div><div class="line">902</div><div class="line">903</div><div class="line">904</div><div class="line">905</div><div class="line">906</div><div class="line">907</div><div class="line">908</div><div class="line">909</div><div class="line">910</div><div class="line">911</div><div class="line">912</div><div class="line">913</div><div class="line">914</div><div class="line">915</div><div class="line">916</div><div class="line">917</div><div class="line">918</div><div class="line">919</div><div class="line">920</div><div class="line">921</div><div class="line">922</div><div class="line">923</div><div class="line">924</div><div class="line">925</div><div class="line">926</div><div class="line">927</div><div class="line">928</div><div class="line">929</div><div class="line">930</div><div class="line">931</div><div class="line">932</div><div class="line">933</div><div class="line">934</div><div class="line">935</div><div class="line">936</div><div class="line">937</div><div class="line">938</div><div class="line">939</div><div class="line">940</div><div class="line">941</div><div class="line">942</div><div class="line">943</div><div class="line">944</div><div class="line">945</div><div class="line">946</div><div class="line">947</div><div class="line">948</div><div class="line">949</div><div class="line">950</div><div class="line">951</div><div class="line">952</div><div class="line">953</div><div class="line">954</div><div class="line">955</div><div class="line">956</div><div class="line">957</div><div class="line">958</div><div class="line">959</div><div class="line">960</div><div class="line">961</div><div class="line">962</div><div class="line">963</div><div class="line">964</div><div class="line">965</div><div class="line">966</div><div class="line">967</div><div class="line">968</div><div class="line">969</div><div class="line">970</div><div class="line">971</div><div class="line">972</div><div class="line">973</div><div class="line">974</div><div class="line">975</div><div class="line">976</div><div class="line">977</div><div class="line">978</div><div class="line">979</div><div class="line">980</div><div class="line">981</div><div class="line">982</div><div class="line">983</div><div class="line">984</div><div class="line">985</div><div class="line">986</div><div class="line">987</div><div class="line">988</div><div class="line">989</div><div class="line">990</div><div class="line">991</div><div class="line">992</div><div class="line">993</div><div class="line">994</div><div class="line">995</div><div class="line">996</div><div class="line">997</div><div class="line">998</div><div class="line">999</div><div class="line">1000</div><div class="line">1001</div><div class="line">1002</div><div class="line">1003</div><div class="line">1004</div><div class="line">1005</div><div class="line">1006</div><div class="line">1007</div><div class="line">1008</div><div class="line">1009</div><div class="line">1010</div><div class="line">1011</div><div class="line">1012</div><div class="line">1013</div><div class="line">1014</div><div class="line">1015</div><div class="line">1016</div><div class="line">1017</div><div class="line">1018</div><div class="line">1019</div><div class="line">1020</div><div class="line">1021</div><div class="line">1022</div><div class="line">1023</div><div class="line">1024</div><div class="line">1025</div><div class="line">1026</div><div class="line">1027</div><div class="line">1028</div><div class="line">1029</div><div class="line">1030</div><div class="line">1031</div><div class="line">1032</div><div class="line">1033</div><div class="line">1034</div><div class="line">1035</div><div class="line">1036</div><div class="line">1037</div><div class="line">1038</div><div class="line">1039</div><div class="line">1040</div><div class="line">1041</div><div class="line">1042</div><div class="line">1043</div><div class="line">1044</div><div class="line">1045</div><div class="line">1046</div><div class="line">1047</div><div class="line">1048</div><div class="line">1049</div><div class="line">1050</div><div class="line">1051</div><div class="line">1052</div><div class="line">1053</div><div class="line">1054</div><div class="line">1055</div><div class="line">1056</div><div class="line">1057</div><div class="line">1058</div><div class="line">1059</div><div class="line">1060</div><div class="line">1061</div><div class="line">1062</div><div class="line">1063</div><div class="line">1064</div><div class="line">1065</div><div class="line">1066</div><div class="line">1067</div><div class="line">1068</div><div class="line">1069</div><div class="line">1070</div><div class="line">1071</div><div class="line">1072</div><div class="line">1073</div><div class="line">1074</div><div class="line">1075</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="comment">// traDlg.cpp : implementation file</span></div><div class="line"><span class="comment">//</span></div><div class="line"></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"stdafx.h"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"tra.h"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"traDlg.h"</span></span></div><div class="line"></div><div class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> _DEBUG</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> new DEBUG_NEW</span></div><div class="line"><span class="meta">#<span class="meta-keyword">undef</span> THIS_FILE</span></div><div class="line"><span class="keyword">static</span> <span class="keyword">char</span> THIS_FILE[] = <span class="number">__F</span>ILE__;</div><div class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></div><div class="line"></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;dlgs.h&gt;</span></span></div><div class="line"><span class="comment">/////////////////////////////////////////////////////////////////////////////</span></div><div class="line"><span class="comment">// CAboutDlg dialog used for App About</span></div><div class="line"></div><div class="line"><span class="keyword">class</span> CAboutDlg : <span class="keyword">public</span> CDialog</div><div class="line">&#123;</div><div class="line"><span class="keyword">public</span>:</div><div class="line">	CAboutDlg();</div><div class="line">	</div><div class="line">	<span class="comment">// Dialog Data</span></div><div class="line">	<span class="comment">//&#123;&#123;AFX_DATA(CAboutDlg)</span></div><div class="line">	<span class="keyword">enum</span> &#123; IDD = IDD_ABOUTBOX &#125;;</div><div class="line">	<span class="comment">//&#125;&#125;AFX_DATA</span></div><div class="line">	</div><div class="line">	<span class="comment">// ClassWizard generated virtual function overrides</span></div><div class="line">	<span class="comment">//&#123;&#123;AFX_VIRTUAL(CAboutDlg)</span></div><div class="line"><span class="keyword">protected</span>:</div><div class="line">	<span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">DoDataExchange</span><span class="params">(CDataExchange* pDX)</span></span>;    <span class="comment">// DDX/DDV support</span></div><div class="line">	<span class="comment">//&#125;&#125;AFX_VIRTUAL</span></div><div class="line">	</div><div class="line">	<span class="comment">// Implementation</span></div><div class="line"><span class="keyword">protected</span>:</div><div class="line">	<span class="comment">//&#123;&#123;AFX_MSG(CAboutDlg)</span></div><div class="line">	<span class="comment">//&#125;&#125;AFX_MSG</span></div><div class="line">	DECLARE_MESSAGE_MAP()</div><div class="line">&#125;;</div><div class="line"></div><div class="line">CAboutDlg::CAboutDlg() : CDialog(CAboutDlg::IDD)</div><div class="line">&#123;</div><div class="line">	<span class="comment">//&#123;&#123;AFX_DATA_INIT(CAboutDlg)</span></div><div class="line">	<span class="comment">//&#125;&#125;AFX_DATA_INIT</span></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">void</span> CAboutDlg::DoDataExchange(CDataExchange* pDX)</div><div class="line">&#123;</div><div class="line">	CDialog::DoDataExchange(pDX);</div><div class="line">	<span class="comment">//&#123;&#123;AFX_DATA_MAP(CAboutDlg)</span></div><div class="line">	<span class="comment">//&#125;&#125;AFX_DATA_MAP</span></div><div class="line">&#125;</div><div class="line"></div><div class="line">BEGIN_MESSAGE_MAP(CAboutDlg, CDialog)</div><div class="line"><span class="comment">//&#123;&#123;AFX_MSG_MAP(CAboutDlg)</span></div><div class="line"><span class="comment">// No message handlers</span></div><div class="line"><span class="comment">//&#125;&#125;AFX_MSG_MAP</span></div><div class="line">END_MESSAGE_MAP()</div><div class="line"></div><div class="line"></div><div class="line"><span class="comment">/////////////////////////////////////////////////////////////////////////////</span></div><div class="line"><span class="comment">// CtraDlg dialog</span></div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> PORT		34567</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> FLAG		2</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> SIZEFILE	1024</span></div><div class="line"></div><div class="line"><span class="keyword">const</span> <span class="keyword">int</span> SOCK_TCP	= <span class="number">0</span>;	<span class="comment">//TCP模式</span></div><div class="line"><span class="keyword">const</span> <span class="keyword">int</span> SOCK_UDP  = <span class="number">1</span>;	<span class="comment">//UDP模式</span></div><div class="line"></div><div class="line">CWinThread	*pThreadSendFile;	<span class="comment">//发送文件线程--&gt;_SendFileThread</span></div><div class="line">CWinThread	*pThreadSendMsg;		<span class="comment">//发送消息线程</span></div><div class="line">CWinThread	*pThreadLisen;		<span class="comment">//监听线程--&gt;_ListenTcpThread</span></div><div class="line">CWinThread	*pReceiveThread;		<span class="comment">//接受线程--&gt;_ReceiveThread</span></div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"><span class="comment">//////////////////////////////////////////////////////////////////////////////</span></div><div class="line"></div><div class="line"></div><div class="line">CtraDlg::CtraDlg(CWnd* pParent <span class="comment">/*=NULL*/</span>)</div><div class="line">: CDialog(CtraDlg::IDD, pParent)</div><div class="line">&#123;</div><div class="line">	<span class="comment">//&#123;&#123;AFX_DATA_INIT(CtraDlg)</span></div><div class="line">	m_MsgSend = <span class="number">_</span>T(<span class="string">""</span>);</div><div class="line">	<span class="comment">//&#125;&#125;AFX_DATA_INIT</span></div><div class="line">	<span class="comment">// Note that LoadIcon does not require a subsequent DestroyIcon in Win32</span></div><div class="line">	m_hIcon = AfxGetApp()-&gt;LoadIcon(IDR_MAINFRAME);</div><div class="line">	m_nSockType = <span class="number">0</span>;<span class="comment">//TCP</span></div><div class="line">	m_WorkType = <span class="number">2</span>;<span class="comment">//两者</span></div><div class="line">	m_client = <span class="number">0</span>;</div><div class="line">	m_server = <span class="number">0</span>;</div><div class="line">	FileWork = <span class="literal">false</span>;</div><div class="line">	FileStop = <span class="literal">false</span>;</div><div class="line">	StopServer = <span class="literal">false</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">void</span> CtraDlg::DoDataExchange(CDataExchange* pDX)</div><div class="line">&#123;</div><div class="line">	CDialog::DoDataExchange(pDX);</div><div class="line">	<span class="comment">//&#123;&#123;AFX_DATA_MAP(CtraDlg)</span></div><div class="line">	DDX_Control(pDX, IDC_PROGRESS_SEND_FILE, m_Progress);</div><div class="line">	DDX_Control(pDX, IDC_LIST_BOX_ADDMSG, m_AddMsgLIst);</div><div class="line">	DDX_Control(pDX, IDC_IPADDRESS, m_You_IP);</div><div class="line">	DDX_Text(pDX, IDC_EDIT_SENDMSG, m_MsgSend);</div><div class="line">	<span class="comment">//&#125;&#125;AFX_DATA_MAP</span></div><div class="line">&#125;</div><div class="line"></div><div class="line">BEGIN_MESSAGE_MAP(CtraDlg, CDialog)</div><div class="line"><span class="comment">//&#123;&#123;AFX_MSG_MAP(CtraDlg)</span></div><div class="line">ON_WM_SYSCOMMAND()</div><div class="line">ON_WM_PAINT()</div><div class="line">ON_WM_QUERYDRAGICON()</div><div class="line">ON_BN_CLICKED(IDC_BUTTON_CONNECT, OnButtonConnect)</div><div class="line">ON_BN_CLICKED(IDC_BUTTON_DISCONNECT, OnButtonDisconnect)</div><div class="line">ON_BN_CLICKED(IDC_BUTTON_SEND_MSG, OnButtonSendMsg)</div><div class="line">ON_BN_CLICKED(IDC_BUTTON_SEND_FILE, OnButtonSendFile)</div><div class="line">ON_BN_CLICKED(IDC_BUTTON_CLEAR, OnButtonClear)</div><div class="line">ON_BN_CLICKED(IDC_RADIO_TCP, OnRadioTcp)</div><div class="line">ON_BN_CLICKED(IDC_RADIO_UDP, OnRadioUdp)</div><div class="line">ON_BN_CLICKED(IDC_RADIO_SERVER, OnRadioServer)</div><div class="line">ON_BN_CLICKED(IDC_RADIO_CLIENT, OnRadioClient)</div><div class="line">ON_BN_CLICKED(IDC_RADIO_BOTH, OnRadioBoth)</div><div class="line">ON_BN_CLICKED(IDC_BUTTON_STOP_FILE, OnButtonStopFile)</div><div class="line">ON_MESSAGE(WM_KSEND,OnKSend)</div><div class="line"><span class="comment">//ON_BN_CLICKED(IDC_BUTTON_CAPUTER, OnButtonCaputer)</span></div><div class="line"><span class="comment">//&#125;&#125;AFX_MSG_MAP</span></div><div class="line">END_MESSAGE_MAP()</div><div class="line"></div><div class="line"><span class="comment">/////////////////////////////////////////////////////////////////////////////</span></div><div class="line"><span class="comment">// CtraDlg message handlers</span></div><div class="line"></div><div class="line">BOOL CtraDlg::OnInitDialog()</div><div class="line">&#123;</div><div class="line">	CDialog::OnInitDialog();</div><div class="line">	</div><div class="line">	<span class="comment">// Add "About..." menu item to system menu.</span></div><div class="line">	</div><div class="line">	<span class="comment">// IDM_ABOUTBOX must be in the system command range.</span></div><div class="line">	ASSERT((IDM_ABOUTBOX &amp; <span class="number">0xFFF0</span>) == IDM_ABOUTBOX);</div><div class="line">	ASSERT(IDM_ABOUTBOX &lt; <span class="number">0xF000</span>);</div><div class="line">	</div><div class="line">	CMenu* pSysMenu = GetSystemMenu(FALSE);</div><div class="line">	<span class="keyword">if</span> (pSysMenu != <span class="literal">NULL</span>)</div><div class="line">	&#123;</div><div class="line">		CString strAboutMenu;</div><div class="line">		strAboutMenu.LoadString(IDS_ABOUTBOX);</div><div class="line">		<span class="keyword">if</span> (!strAboutMenu.IsEmpty())</div><div class="line">		&#123;</div><div class="line">			pSysMenu-&gt;AppendMenu(MF_SEPARATOR);</div><div class="line">			pSysMenu-&gt;AppendMenu(MF_STRING, IDM_ABOUTBOX, strAboutMenu);</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	</div><div class="line">	<span class="comment">// Set the icon for this dialog.  The framework does this automatically</span></div><div class="line">	<span class="comment">//  when the application's main window is not a dialog</span></div><div class="line">	SetIcon(m_hIcon, TRUE);			<span class="comment">// Set big icon</span></div><div class="line">	SetIcon(m_hIcon, FALSE);		<span class="comment">// Set small icon</span></div><div class="line">	</div><div class="line">	<span class="comment">// <span class="doctag">TODO:</span> Add extra initialization here</span></div><div class="line">	<span class="comment">/////////////////////////////////////////////////////////</span></div><div class="line">	CString strLocalName;</div><div class="line">	GetLocalHostName(strLocalName);</div><div class="line">	CString strLocalIP;</div><div class="line">	GetIpAddress(strLocalName,strLocalIP);</div><div class="line">	m_You_IP.SetWindowText(<span class="string">"127.0.0.1"</span>);	<span class="comment">//设置默认IP</span></div><div class="line">	<span class="comment">/////////////////////////////////////////////////////////</span></div><div class="line">	((CButton*)GetDlgItem(IDC_RADIO_BOTH))-&gt;SetCheck(BST_CHECKED);<span class="comment">//默认为服务器、客户端一体</span></div><div class="line">	SetWindowText(<span class="string">"博靖牌聊天+文件传输小工具"</span>);</div><div class="line"></div><div class="line">	GetDlgItem(IDC_BUTTON_CONNECT)-&gt;SetWindowText(<span class="string">"启动"</span>);</div><div class="line">	GetDlgItem(IDC_BUTTON_DISCONNECT)-&gt;SetWindowText(<span class="string">"关闭"</span>);</div><div class="line">	</div><div class="line">	<span class="comment">//GetDlgItem(IDC_BUTTON_CAPUTER)-&gt;EnableWindow(false);//默认为不可用</span></div><div class="line">	((CButton*)GetDlgItem(IDC_RADIO_TCP))-&gt;SetCheck(BST_CHECKED);<span class="comment">//默认为TCP</span></div><div class="line">	GetDlgItem(IDC_BUTTON_SEND_MSG)-&gt;EnableWindow(<span class="literal">false</span>);<span class="comment">//发送消息不可用</span></div><div class="line">	GetDlgItem(IDC_BUTTON_SEND_FILE)-&gt;EnableWindow(<span class="literal">false</span>);<span class="comment">//发送文件不可用</span></div><div class="line">	GetDlgItem(IDC_BUTTON_CLEAR)-&gt;EnableWindow(<span class="literal">false</span>);<span class="comment">//清除不可用</span></div><div class="line">	GetDlgItem(IDC_BUTTON_DISCONNECT)-&gt;EnableWindow(<span class="literal">false</span>);<span class="comment">//断开连接不可用</span></div><div class="line">	GetDlgItem(IDC_PROGRESS_SEND_FILE)-&gt;ShowWindow(SW_HIDE);</div><div class="line">	<span class="keyword">return</span> TRUE;  <span class="comment">// return TRUE  unless you set the focus to a control</span></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">void</span> CtraDlg::OnSysCommand(UINT nID, LPARAM lParam)</div><div class="line">&#123;</div><div class="line">	<span class="keyword">if</span> ((nID &amp; <span class="number">0xFFF0</span>) == IDM_ABOUTBOX)</div><div class="line">	&#123;</div><div class="line">		CAboutDlg dlgAbout;</div><div class="line">		dlgAbout.DoModal();</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">else</span></div><div class="line">	&#123;</div><div class="line">		CDialog::OnSysCommand(nID, lParam);</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">// If you add a minimize button to your dialog, you will need the code below</span></div><div class="line"><span class="comment">//  to draw the icon.  For MFC applications using the document/view model,</span></div><div class="line"><span class="comment">//  this is automatically done for you by the framework.</span></div><div class="line"></div><div class="line"><span class="keyword">void</span> CtraDlg::OnPaint() </div><div class="line">&#123;</div><div class="line">	<span class="keyword">if</span> (IsIconic())</div><div class="line">	&#123;</div><div class="line">		<span class="function">CPaintDC <span class="title">dc</span><span class="params">(<span class="keyword">this</span>)</span></span>; <span class="comment">// device context for painting</span></div><div class="line">		</div><div class="line">		SendMessage(WM_ICONERASEBKGND, (WPARAM) dc.GetSafeHdc(), <span class="number">0</span>);</div><div class="line">		</div><div class="line">		<span class="comment">// Center icon in client rectangle</span></div><div class="line">		<span class="keyword">int</span> cxIcon = GetSystemMetrics(SM_CXICON);</div><div class="line">		<span class="keyword">int</span> cyIcon = GetSystemMetrics(SM_CYICON);</div><div class="line">		CRect rect;</div><div class="line">		GetClientRect(&amp;rect);</div><div class="line">		<span class="keyword">int</span> x = (rect.Width() - cxIcon + <span class="number">1</span>) / <span class="number">2</span>;</div><div class="line">		<span class="keyword">int</span> y = (rect.Height() - cyIcon + <span class="number">1</span>) / <span class="number">2</span>;</div><div class="line">		</div><div class="line">		<span class="comment">// Draw the icon</span></div><div class="line">		dc.DrawIcon(x, y, m_hIcon);</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">else</span></div><div class="line">	&#123;</div><div class="line">		CDialog::OnPaint();</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">// The system calls this to obtain the cursor to display while the user drags</span></div><div class="line"><span class="comment">//  the minimized window.</span></div><div class="line">HCURSOR CtraDlg::OnQueryDragIcon()</div><div class="line">&#123;</div><div class="line">	<span class="keyword">return</span> (HCURSOR) m_hIcon;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">/**************************************线程************************************************/</span></div><div class="line"></div><div class="line"><span class="comment">/******************************服务器线程开始***********************************************/</span></div><div class="line"><span class="comment">//TCP监听线程</span></div><div class="line">UINT <span class="number">_L</span>istenTcpThread(LPVOID lparam)</div><div class="line">&#123;</div><div class="line">	CtraDlg *pDlg=(CtraDlg *)lparam;</div><div class="line">	<span class="keyword">if</span> (pDlg-&gt;StopServer==<span class="literal">true</span>)	</div><div class="line">	&#123;</div><div class="line">		<span class="keyword">return</span> <span class="number">-1</span>;</div><div class="line">	&#125;</div><div class="line">	CSocket sockSrvr;</div><div class="line">	pDlg-&gt;m_Potr = PORT+pDlg-&gt;m_server;<span class="comment">//保存当前使用端口，用于关闭</span></div><div class="line">	<span class="keyword">int</span> createSucceed=sockSrvr.Create(pDlg-&gt;m_Potr);</div><div class="line">	<span class="keyword">if</span> (createSucceed == <span class="number">0</span>)</div><div class="line">	&#123;</div><div class="line">		AfxMessageBox(<span class="string">"ListenTcpThread Create错误!"</span>+pDlg-&gt;GetError(GetLastError()));</div><div class="line">		<span class="keyword">return</span> <span class="number">-1</span>;</div><div class="line">	&#125;</div><div class="line">	</div><div class="line">	<span class="keyword">int</span> listenSucceed=sockSrvr.Listen();	<span class="comment">//开始监听</span></div><div class="line">	<span class="keyword">if</span>(listenSucceed==<span class="number">0</span>)</div><div class="line">	&#123;</div><div class="line">		AfxMessageBox(<span class="string">"ListenTcpThread Listen错误!"</span>+pDlg-&gt;GetError(GetLastError()));</div><div class="line">		<span class="keyword">return</span> <span class="number">-1</span>;</div><div class="line">	&#125;</div><div class="line">	</div><div class="line">	CSocket recSo;</div><div class="line">	SOCKADDR_IN client;</div><div class="line">	<span class="keyword">int</span> iAddrSize=<span class="keyword">sizeof</span>(client);</div><div class="line">	</div><div class="line">	<span class="keyword">int</span> acceptSucceed=sockSrvr.Accept(recSo,(SOCKADDR *)&amp;client,&amp;iAddrSize);	<span class="comment">//接受连接并取得对方IP</span></div><div class="line">	<span class="keyword">if</span> (acceptSucceed==<span class="number">0</span>)</div><div class="line">	&#123;</div><div class="line">		AfxMessageBox(<span class="string">"ListenTcpThread Accept错误!"</span>+pDlg-&gt;GetError(GetLastError()));</div><div class="line">		<span class="keyword">return</span> <span class="number">-1</span>;</div><div class="line">	&#125;</div><div class="line">	sockSrvr.Close();</div><div class="line">	<span class="keyword">char</span> flag[FLAG] = &#123;<span class="number">0</span>&#125;;		</div><div class="line">	<span class="keyword">if</span> (recSo.Receive(flag,FLAG) != <span class="number">2</span>) </div><div class="line">	&#123;</div><div class="line">		<span class="keyword">return</span> <span class="number">-1</span>;	</div><div class="line">	&#125;</div><div class="line">	pDlg-&gt;m_type=flag[<span class="number">0</span>];</div><div class="line">	<span class="keyword">if</span> (pDlg-&gt;m_type==<span class="string">'D'</span>) </div><div class="line">	&#123;</div><div class="line">		<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">	&#125;</div><div class="line">	pThreadLisen=::AfxBeginThread(<span class="number">_L</span>istenTcpThread,pDlg);</div><div class="line">	pDlg-&gt;ReceiveFileMsg(recSo,client);</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div><div class="line">UINT <span class="number">_U</span>DPThread(LPVOID lparam)	<span class="comment">//UDP接受信息线程开始</span></div><div class="line">&#123;</div><div class="line">	</div><div class="line">	CtraDlg *pDlg=(CtraDlg *)lparam;</div><div class="line">	<span class="keyword">if</span> (pDlg-&gt;StopServer == <span class="literal">true</span>)	</div><div class="line">	&#123;</div><div class="line">		<span class="keyword">return</span> <span class="number">-1</span>;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	CSocket sockSrvrUdp;</div><div class="line">	sockSrvrUdp.Create(PORT+pDlg-&gt;m_client,SOCK_DGRAM);</div><div class="line">	<span class="keyword">char</span> buff[<span class="number">100</span>] = &#123;<span class="number">0</span>&#125;;</div><div class="line">	<span class="keyword">int</span> ret=<span class="number">0</span>;</div><div class="line">	CString ipStr;</div><div class="line">	CString msg;</div><div class="line">	UINT port;</div><div class="line">	<span class="keyword">for</span>(;;)</div><div class="line">	&#123;</div><div class="line">		</div><div class="line">		ret=sockSrvrUdp.ReceiveFrom(buff,<span class="number">100</span>,ipStr,port);<span class="comment">//IP和port均为返回值</span></div><div class="line">		</div><div class="line">		<span class="keyword">if</span> (buff[<span class="number">0</span>]==<span class="string">'D'</span>) </div><div class="line">		&#123;</div><div class="line">			<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">if</span> (ret==SOCKET_ERROR) </div><div class="line">		&#123;</div><div class="line">			<span class="keyword">break</span>;</div><div class="line">		&#125;</div><div class="line">		msg.Format(buff);</div><div class="line">		pDlg-&gt;AddMsgList(ipStr,msg);</div><div class="line">	&#125;</div><div class="line">	sockSrvrUdp.Close();</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div><div class="line"><span class="comment">//服务器线程结束</span></div><div class="line"><span class="comment">/*********************************************客户端线程开始*****************************************************/</span></div><div class="line"><span class="comment">//发送文件线程</span></div><div class="line">UINT <span class="number">_</span>SendFileThread(LPVOID lparam)</div><div class="line">&#123;</div><div class="line">	</div><div class="line">	CtraDlg *pDlg = (CtraDlg *)lparam;</div><div class="line">	<span class="keyword">if</span> (pDlg-&gt;StopServer == <span class="literal">true</span>)	</div><div class="line">	&#123;</div><div class="line">		<span class="keyword">return</span> <span class="number">-1</span>;</div><div class="line">	&#125;</div><div class="line">	CSocket sockClient;</div><div class="line">	sockClient.Create();</div><div class="line">	CString ip;</div><div class="line">	pDlg-&gt;m_You_IP.GetWindowText(ip);</div><div class="line">	sockClient.Connect(ip, PORT+pDlg-&gt;m_client); </div><div class="line">	<span class="comment">//首先发送标记F为文件,2</span></div><div class="line">	<span class="keyword">int</span> end = <span class="number">0</span>;</div><div class="line">	end = sockClient.Send(<span class="string">"F"</span>, FLAG);</div><div class="line">	</div><div class="line">	<span class="comment">//发送标志是否成功</span></div><div class="line">	<span class="keyword">if</span> (end == SOCKET_ERROR)										</div><div class="line">	&#123;</div><div class="line">		AfxMessageBox(<span class="string">"_SendFileThread Send错误!"</span>+pDlg-&gt;GetError(GetLastError()));</div><div class="line">		<span class="keyword">return</span> <span class="number">-1</span>;</div><div class="line">	&#125;</div><div class="line">	</div><div class="line">	<span class="keyword">else</span> <span class="keyword">if</span> (end != <span class="number">2</span>) </div><div class="line">	&#123;</div><div class="line">		AfxMessageBox(<span class="string">"文件头错误！"</span>);</div><div class="line">		<span class="keyword">return</span> <span class="number">-1</span>;</div><div class="line">	&#125;</div><div class="line">	<span class="comment">///////////////////////////////////////////////////////////////////</span></div><div class="line">	CFile myFile;</div><div class="line">	FILEINFO myFileInfo;</div><div class="line">	<span class="keyword">if</span> (!myFile.Open(pDlg-&gt;m_fileName, CFile::modeRead | CFile::typeBinary))</div><div class="line">	&#123;</div><div class="line">		<span class="keyword">return</span> <span class="number">-1</span>;</div><div class="line">	&#125;</div><div class="line">	myFileInfo.fileLength=myFile.GetLength();		<span class="comment">//得到文件大小</span></div><div class="line">	<span class="built_in">strcpy</span>(myFileInfo.fileName,myFile.GetFileName());<span class="comment">//得到文件名称</span></div><div class="line">	</div><div class="line">	sockClient.Send(&amp;myFileInfo,<span class="keyword">sizeof</span>(myFileInfo));	<span class="comment">//发送文件信息</span></div><div class="line">	</div><div class="line">	pDlg-&gt;m_Progress.SetRange32(<span class="number">0</span>, myFileInfo.fileLength);</div><div class="line">	</div><div class="line">	myFile.Seek(<span class="number">0</span>, CFile::begin);</div><div class="line">	<span class="keyword">char</span> m_buf[SIZEFILE] = &#123;<span class="number">0</span>&#125;;</div><div class="line">	CString strError;</div><div class="line">	<span class="keyword">int</span> num = <span class="number">0</span>;</div><div class="line">	end = <span class="number">0</span>;</div><div class="line">	<span class="keyword">int</span> temp = <span class="number">0</span>;</div><div class="line">	pDlg-&gt;GetDlgItem(IDC_BUTTON_STOP_FILE)-&gt;EnableWindow(<span class="literal">true</span>);</div><div class="line">	</div><div class="line">	<span class="keyword">for</span> (;;)</div><div class="line">	&#123;</div><div class="line">		<span class="keyword">if</span> (pDlg-&gt;FileWork == <span class="literal">false</span>)</div><div class="line">		&#123;</div><div class="line">			pDlg-&gt;FileWork = <span class="literal">true</span>;</div><div class="line">			pDlg-&gt;GetDlgItem(IDCANCEL)-&gt;EnableWindow(<span class="literal">false</span>);</div><div class="line">			pDlg-&gt;GetDlgItem(IDC_BUTTON_DISCONNECT)-&gt;EnableWindow(<span class="literal">false</span>);</div><div class="line">		&#125;</div><div class="line">		num = myFile.Read(m_buf, SIZEFILE);</div><div class="line">		<span class="keyword">if</span> (num == <span class="number">0</span>) </div><div class="line">		&#123;</div><div class="line">			<span class="keyword">break</span>;</div><div class="line">		&#125;</div><div class="line">		end = sockClient.Send(m_buf, num); </div><div class="line">		temp += end;</div><div class="line">		pDlg-&gt;m_Progress.SetPos(temp);</div><div class="line">		<span class="keyword">if</span> (pDlg-&gt;FileStop == <span class="literal">true</span>) </div><div class="line">		&#123;</div><div class="line">			pDlg-&gt;FileStop = <span class="literal">false</span>;</div><div class="line">			pDlg-&gt;FileWork = <span class="literal">false</span>;</div><div class="line">			<span class="keyword">break</span>;</div><div class="line">		&#125;</div><div class="line">		</div><div class="line">		<span class="keyword">if</span> (end == SOCKET_ERROR)</div><div class="line">		&#123;</div><div class="line">			AfxMessageBox(<span class="string">"_SendFileThread Send错误!"</span>+pDlg-&gt;GetError(GetLastError()));</div><div class="line">			<span class="keyword">break</span>;</div><div class="line">			</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	pDlg-&gt;m_Progress.SetPos(<span class="number">0</span>);</div><div class="line">	CString strLocalName;</div><div class="line">	pDlg-&gt;GetLocalHostName(strLocalName);</div><div class="line">	CString strLocalIP;</div><div class="line">	pDlg-&gt;GetIpAddress(strLocalName,strLocalIP);</div><div class="line">	<span class="keyword">if</span>(temp == myFileInfo.fileLength)</div><div class="line">	&#123;</div><div class="line">		pDlg-&gt;AddMsgList(strLocalName, <span class="string">"文件发送成功！"</span>);</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">else</span></div><div class="line">	&#123;</div><div class="line">		pDlg-&gt;AddMsgList(strLocalName, <span class="string">"文件发送失败！"</span>);</div><div class="line">	&#125;</div><div class="line">	myFile.Close();</div><div class="line">	sockClient.Close();</div><div class="line">	pDlg-&gt;FileWork = <span class="literal">false</span>;</div><div class="line">	pDlg-&gt;GetDlgItem(IDC_PROGRESS_SEND_FILE)-&gt;ShowWindow(SW_HIDE);</div><div class="line">	pDlg-&gt;GetDlgItem(IDC_BUTTON_STOP_FILE)-&gt;EnableWindow(<span class="literal">false</span>);</div><div class="line"></div><div class="line">	pDlg-&gt;GetDlgItem(IDCANCEL)-&gt;EnableWindow(<span class="literal">true</span>);</div><div class="line">	pDlg-&gt;GetDlgItem(IDC_BUTTON_DISCONNECT)-&gt;EnableWindow(<span class="literal">true</span>);</div><div class="line">	</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line">UINT <span class="number">_</span>SendMsgThread(LPVOID lparam)	<span class="comment">//TCP发送信息线程</span></div><div class="line">&#123;</div><div class="line">	</div><div class="line">	CtraDlg *pDlg=(CtraDlg *)lparam;</div><div class="line">	<span class="keyword">if</span> (pDlg-&gt;StopServer == <span class="literal">true</span>)	</div><div class="line">	&#123;</div><div class="line">		<span class="keyword">return</span> <span class="number">-1</span>;</div><div class="line">	&#125;</div><div class="line">	CSocket sockClient;</div><div class="line">	sockClient.Create();</div><div class="line">	CString ip,strError;</div><div class="line">	pDlg-&gt;m_You_IP.GetWindowText(ip);</div><div class="line">	<span class="keyword">int</span> conn = sockClient.Connect(ip, PORT+pDlg-&gt;m_client);</div><div class="line">	<span class="keyword">if</span> (conn == <span class="number">0</span>)</div><div class="line">	&#123;</div><div class="line">		AfxMessageBox(<span class="string">"_SendMsgThread Connect错误!"</span>+pDlg-&gt;GetError(GetLastError()));</div><div class="line">		sockClient.ShutDown(<span class="number">2</span>);</div><div class="line">		sockClient.Close();</div><div class="line">		AfxEndThread(<span class="number">1L</span>);</div><div class="line">		<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">		</div><div class="line">	&#125;</div><div class="line">	<span class="comment">//首先发送标记M为信息,2</span></div><div class="line">	<span class="keyword">int</span> end = <span class="number">0</span>;</div><div class="line">	end = sockClient.Send(<span class="string">"M"</span>,FLAG); </div><div class="line">	<span class="keyword">if</span>(end == SOCKET_ERROR)</div><div class="line">	&#123;</div><div class="line">		AfxMessageBox(<span class="string">"_SendMsgThread Send错误!"</span>+pDlg-&gt;GetError(GetLastError()));</div><div class="line">		<span class="keyword">return</span> <span class="number">-1</span>;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">else</span> <span class="keyword">if</span>(end != <span class="number">2</span>)</div><div class="line">	&#123;</div><div class="line">		AfxMessageBox(<span class="string">"消息头错误！"</span>);</div><div class="line">		<span class="keyword">return</span> <span class="number">-1</span>;</div><div class="line">	&#125;</div><div class="line">	CString strMsg = pDlg-&gt;m_MsgSend;</div><div class="line">	end = sockClient.Send(strMsg,strMsg.GetLength()); </div><div class="line">	<span class="keyword">if</span> (end == SOCKET_ERROR)</div><div class="line">	&#123;</div><div class="line">		AfxMessageBox(<span class="string">"_SendMsgThread Send错误!"</span>+pDlg-&gt;GetError(GetLastError()));</div><div class="line">		<span class="keyword">return</span> <span class="number">-1</span>;</div><div class="line">	&#125;</div><div class="line">	CString strLocalName;</div><div class="line">	pDlg-&gt;GetLocalHostName(strLocalName);</div><div class="line">	CString strLocalIP;</div><div class="line">	pDlg-&gt;GetIpAddress(strLocalName,strLocalIP);</div><div class="line">	pDlg-&gt;AddMsgList(strLocalName,strMsg);</div><div class="line">	<span class="keyword">int</span> i=<span class="number">0</span>;</div><div class="line">	sockClient.Close();</div><div class="line"></div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">///////////////////////////////////////////////////////////////////</span></div><div class="line">UINT <span class="number">_</span>SendMsgUdpThread(LPVOID lparam)	<span class="comment">//UDP发送信息</span></div><div class="line">&#123;</div><div class="line">	</div><div class="line">	CtraDlg *pDlg = (CtraDlg *)lparam;</div><div class="line">	<span class="keyword">if</span> (pDlg-&gt;StopServer == <span class="literal">true</span>)	</div><div class="line">	&#123;</div><div class="line">		<span class="keyword">return</span> <span class="number">-1</span>;</div><div class="line">	&#125;</div><div class="line">	CSocket sockClientUdp;</div><div class="line">	pDlg-&gt;m_type = PORT+pDlg-&gt;m_client+<span class="number">10</span>;</div><div class="line">	sockClientUdp.Create(pDlg-&gt;m_type, SOCK_DGRAM);</div><div class="line">	CString strMsg = pDlg-&gt;m_MsgSend;</div><div class="line">	<span class="keyword">int</span> ret = <span class="number">0</span>;</div><div class="line">	CString ipStr;</div><div class="line">	pDlg-&gt;m_You_IP.GetWindowText(ipStr);</div><div class="line">	UINT port = PORT+pDlg-&gt;m_server;</div><div class="line">	ret=sockClientUdp.SendTo(strMsg, strMsg.GetLength(), port, ipStr);</div><div class="line">	<span class="keyword">if</span> (ret == SOCKET_ERROR) </div><div class="line">	&#123;</div><div class="line">		DWORD error = GetLastError();</div><div class="line">		</div><div class="line">	&#125;</div><div class="line">	CString strLocalName;</div><div class="line">	pDlg-&gt;GetLocalHostName(strLocalName);</div><div class="line">	CString strLocalIP;</div><div class="line">	pDlg-&gt;GetIpAddress(strLocalName, strLocalIP);</div><div class="line">	pDlg-&gt;AddMsgList(strLocalName, strMsg);</div><div class="line">	sockClientUdp.Close();</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">	</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">/************************************客户端线程结束**********************************/</span></div><div class="line"></div><div class="line"><span class="comment">/*************************************函数****************************************/</span></div><div class="line"></div><div class="line"><span class="keyword">int</span> CtraDlg::ReceiveFileMsg(CSocket &amp;recSo,SOCKADDR_IN &amp;client)<span class="comment">//接受函数</span></div><div class="line">&#123;</div><div class="line">		<span class="keyword">if</span> (m_type == <span class="string">'F'</span>)			<span class="comment">//文件</span></div><div class="line">	&#123;</div><div class="line">		SaveYouFile(recSo, client);</div><div class="line">	&#125;</div><div class="line">	</div><div class="line">	<span class="keyword">else</span> <span class="keyword">if</span> (m_type == <span class="string">'M'</span>)	<span class="comment">//信息</span></div><div class="line">	&#123;</div><div class="line">		<span class="keyword">char</span> buff[<span class="number">100</span>] = &#123;<span class="number">0</span>&#125;;</div><div class="line">		CString msg;</div><div class="line">		<span class="keyword">int</span> ret = <span class="number">0</span>;</div><div class="line">		<span class="keyword">for</span> (;;)</div><div class="line">		&#123;</div><div class="line">			ret = recSo.Receive(buff,<span class="number">100</span>);</div><div class="line">			<span class="keyword">if</span> (ret == <span class="number">0</span>)</div><div class="line">			&#123;</div><div class="line">				<span class="keyword">break</span>;</div><div class="line">			&#125;</div><div class="line">			msg += buff;</div><div class="line">		&#125;</div><div class="line">		CString strOut,strIn;</div><div class="line">		m_You_IP.GetWindowText(strIn);</div><div class="line">		GetNamebyAddress(strIn,strOut);</div><div class="line">		CString youName;</div><div class="line">	<span class="comment">//	youName.Format(inet_ntoa(client.sin_addr));</span></div><div class="line">	<span class="comment">//	CString str = youName+"&lt;-"+strOut;</span></div><div class="line">		CString str = strOut;</div><div class="line">		AddMsgList(str, msg);</div><div class="line">	&#125;</div><div class="line">	recSo.Close();	</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">int</span> CtraDlg::SaveYouFile(CSocket &amp;recSo, SOCKADDR_IN &amp;client)<span class="comment">//接受文件</span></div><div class="line">&#123;</div><div class="line">	CString fname;</div><div class="line">	<span class="function">CFileDialog <span class="title">dlg</span><span class="params">(<span class="literal">false</span>)</span></span>;	<span class="comment">//另存文件</span></div><div class="line">	FILEINFO myFileInfo;</div><div class="line">	recSo.Receive(&amp;myFileInfo, <span class="keyword">sizeof</span>(FILEINFO));</div><div class="line">	<span class="keyword">int</span> fileLength=myFileInfo.fileLength;</div><div class="line">	CString strfileIp,strfileName,strfileLength;</div><div class="line">	strfileIp.Format(inet_ntoa(client.sin_addr));</div><div class="line">	strfileName.Format(myFileInfo.fileName);</div><div class="line">	strfileLength.Format(<span class="string">"%f"</span>, myFileInfo.fileLength/<span class="number">1024.0</span>);</div><div class="line">	CString title = <span class="string">"文件"</span>+strfileName + <span class="string">" 大小"</span> + strfileLength + <span class="string">"KB "</span> + <span class="string">"来自"</span> + strfileIp + <span class="string">" 是否接受？"</span>;</div><div class="line">	dlg.m_ofn.lpstrTitle = title;<span class="comment">//标题条</span></div><div class="line">	<span class="keyword">char</span> fileme[<span class="number">500</span>] = &#123;<span class="number">0</span>&#125;;<span class="comment">//必须足够大小</span></div><div class="line">	<span class="built_in">strcpy</span>(fileme, strfileName);</div><div class="line">	dlg.m_ofn.lpstrFile = fileme;	<span class="comment">//文件名称</span></div><div class="line">	<span class="keyword">if</span> (dlg.DoModal() == IDOK)</div><div class="line">	&#123;</div><div class="line">		fname = dlg.GetPathName();	<span class="comment">//得到文件名名称、路径</span></div><div class="line">		GetDlgItem(IDC_PROGRESS_SEND_FILE)-&gt;ShowWindow(SW_SHOW);</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">else</span></div><div class="line">	&#123;</div><div class="line">		GetDlgItem(IDC_PROGRESS_SEND_FILE)-&gt;ShowWindow(SW_HIDE);</div><div class="line">		GetDlgItem(IDC_BUTTON_STOP_FILE)-&gt;EnableWindow(<span class="literal">false</span>);</div><div class="line">		</div><div class="line">		GetDlgItem(IDC_BUTTON_DISCONNECT)-&gt;EnableWindow(<span class="literal">true</span>);</div><div class="line">		GetDlgItem(IDCANCEL)-&gt;EnableWindow(<span class="literal">true</span>);</div><div class="line">		</div><div class="line">		recSo.Close();	</div><div class="line">		<span class="keyword">return</span> <span class="number">0</span>;	</div><div class="line">		</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">char</span> buf[SIZEFILE] = &#123;<span class="number">0</span>&#125;;</div><div class="line">	<span class="function">CFile <span class="title">f</span><span class="params">(fname, CFile::modeCreate|CFile::modeWrite)</span></span>;	<span class="comment">//存文件</span></div><div class="line">	</div><div class="line">	m_Progress.SetRange32(<span class="number">0</span>,fileLength);</div><div class="line">	</div><div class="line">	<span class="keyword">int</span> n = <span class="number">0</span>;	<span class="comment">//接受的字节数 0表示结束</span></div><div class="line">	<span class="keyword">int</span> temp = <span class="number">0</span>;</div><div class="line">	GetDlgItem(IDC_BUTTON_STOP_FILE)-&gt;EnableWindow(<span class="literal">true</span>);</div><div class="line">	</div><div class="line">	GetDlgItem(IDCANCEL)-&gt;EnableWindow(<span class="literal">false</span>);</div><div class="line">	GetDlgItem(IDC_BUTTON_DISCONNECT)-&gt;EnableWindow(<span class="literal">false</span>);</div><div class="line">	</div><div class="line">	</div><div class="line">	<span class="keyword">for</span> (;;)</div><div class="line">	&#123;</div><div class="line">		n = recSo.Receive(buf,SIZEFILE);	<span class="comment">//接受</span></div><div class="line">		<span class="keyword">if</span> (n == <span class="number">0</span>)		<span class="comment">//0表示结束</span></div><div class="line">		&#123;</div><div class="line">			<span class="keyword">break</span>;<span class="comment">//接受完毕</span></div><div class="line">		&#125;	</div><div class="line">		f.Write(buf,n);</div><div class="line">		temp += n;</div><div class="line">		m_Progress.SetPos(temp);</div><div class="line">		<span class="keyword">if</span> (FileWork == <span class="literal">false</span>) </div><div class="line">		&#123;</div><div class="line">			FileWork = <span class="literal">true</span>;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">if</span> (FileStop == <span class="literal">true</span>) </div><div class="line">		&#123;</div><div class="line">			FileStop = <span class="literal">false</span>;</div><div class="line">			FileWork = <span class="literal">false</span>;</div><div class="line">			<span class="keyword">break</span>;</div><div class="line">		&#125;</div><div class="line">		</div><div class="line">	&#125;</div><div class="line">	f.Close();</div><div class="line">	m_Progress.SetPos(<span class="number">0</span>);</div><div class="line">	<span class="keyword">if</span> (temp == fileLength)</div><div class="line">	&#123;</div><div class="line">		AddMsgList(inet_ntoa(client.sin_addr),<span class="string">"文件接收成功！"</span>);</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">else</span></div><div class="line">	&#123;</div><div class="line">		AddMsgList(inet_ntoa(client.sin_addr),<span class="string">"文件接收失败！"</span>);</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	FileWork = <span class="literal">false</span>;</div><div class="line">	GetDlgItem(IDC_PROGRESS_SEND_FILE)-&gt;ShowWindow(SW_HIDE);</div><div class="line">	GetDlgItem(IDC_BUTTON_STOP_FILE)-&gt;EnableWindow(<span class="literal">false</span>);</div><div class="line">	</div><div class="line">	GetDlgItem(IDCANCEL)-&gt;EnableWindow(<span class="literal">true</span>);</div><div class="line">	GetDlgItem(IDC_BUTTON_DISCONNECT)-&gt;EnableWindow(<span class="literal">true</span>);</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">/*********************************************按钮*****************************************/</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">void</span> CtraDlg::OnButtonConnect() <span class="comment">//开始连接</span></div><div class="line">&#123;</div><div class="line">	<span class="comment">// <span class="doctag">TODO:</span> Add your control notification handler code here</span></div><div class="line">	CString str;</div><div class="line">	m_You_IP.GetWindowText(str);</div><div class="line">	CString strOut,strIn;</div><div class="line">	m_You_IP.GetWindowText(strIn);</div><div class="line">	<span class="keyword">if</span>(GetNamebyAddress(strIn,strOut) == <span class="number">-1</span>)</div><div class="line">	&#123;</div><div class="line">		GetDlgItem(IDC_BUTTON_CONNECT)-&gt;EnableWindow(<span class="literal">true</span>);<span class="comment">//连接不可用</span></div><div class="line">		<span class="keyword">return</span>;</div><div class="line">	&#125;</div><div class="line">	<span class="comment">//m_MsgSend = "你好" + strOut + "!";</span></div><div class="line">	m_MsgSend =<span class="string">" "</span>;</div><div class="line">	UpdateData(<span class="literal">false</span>);</div><div class="line"></div><div class="line">	<span class="keyword">if</span> (m_nSockType == SOCK_TCP)</div><div class="line">	&#123;</div><div class="line">		</div><div class="line">		pThreadLisen=::AfxBeginThread(<span class="number">_L</span>istenTcpThread,<span class="keyword">this</span>);	<span class="comment">//开始TCP线程</span></div><div class="line">		GetDlgItem(IDC_BUTTON_SEND_MSG)-&gt;EnableWindow(<span class="literal">true</span>);<span class="comment">//发送消息可用</span></div><div class="line">		GetDlgItem(IDC_BUTTON_SEND_FILE)-&gt;EnableWindow(<span class="literal">true</span>);<span class="comment">//文件可用</span></div><div class="line">		</div><div class="line">		<span class="comment">//显示上线</span></div><div class="line">		CString strLocalName;</div><div class="line">		GetLocalHostName(strLocalName);</div><div class="line">		AddMsgList(strLocalName, <span class="string">"上线！"</span>);</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">else</span></div><div class="line">	&#123;</div><div class="line">		pThreadLisen=::AfxBeginThread(<span class="number">_U</span>DPThread,<span class="keyword">this</span>);	<span class="comment">//开始UDP线程</span></div><div class="line">		GetDlgItem(IDC_BUTTON_SEND_MSG)-&gt;EnableWindow(<span class="literal">true</span>);<span class="comment">//发送可用</span></div><div class="line">		GetDlgItem(IDC_BUTTON_SEND_FILE)-&gt;EnableWindow(<span class="literal">false</span>);<span class="comment">//文件不可用</span></div><div class="line"></div><div class="line">		<span class="comment">//显示上线</span></div><div class="line">		CString strLocalName;</div><div class="line">		GetLocalHostName(strLocalName);</div><div class="line">		AddMsgList(strLocalName, <span class="string">"上线！"</span>);</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	GetDlgItem(IDC_RADIO_TCP)-&gt;EnableWindow(<span class="literal">false</span>);<span class="comment">//单选不可用</span></div><div class="line">	GetDlgItem(IDC_RADIO_UDP)-&gt;EnableWindow(<span class="literal">false</span>);<span class="comment">//单选不可用</span></div><div class="line">	GetDlgItem(IDC_BUTTON_DISCONNECT)-&gt;EnableWindow(<span class="literal">true</span>);<span class="comment">//断开可用</span></div><div class="line">	GetDlgItem(IDC_BUTTON_CONNECT)-&gt;EnableWindow(<span class="literal">false</span>);<span class="comment">//连接不可用</span></div><div class="line">	GetDlgItem(IDC_RADIO_SERVER)-&gt;EnableWindow(<span class="literal">false</span>);</div><div class="line">	GetDlgItem(IDC_RADIO_CLIENT)-&gt;EnableWindow(<span class="literal">false</span>);</div><div class="line">	GetDlgItem(IDC_RADIO_BOTH)-&gt;EnableWindow(<span class="literal">false</span>);</div><div class="line">	GetDlgItem(IDC_IPADDRESS)-&gt;EnableWindow(<span class="literal">false</span>);</div><div class="line"></div><div class="line">	</div><div class="line">	</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">void</span> CtraDlg::OnButtonDisconnect() <span class="comment">//关闭</span></div><div class="line">&#123;</div><div class="line">	<span class="comment">// <span class="doctag">TODO:</span> Add your control notification handler code here</span></div><div class="line">	GetDlgItem(IDC_BUTTON_CONNECT)-&gt;EnableWindow(<span class="literal">true</span>);</div><div class="line">	GetDlgItem(IDC_RADIO_TCP)-&gt;EnableWindow(<span class="literal">true</span>);</div><div class="line">	((CButton*)GetDlgItem(IDC_RADIO_UDP))-&gt;EnableWindow(<span class="literal">true</span>);</div><div class="line">	GetDlgItem(IDC_BUTTON_DISCONNECT)-&gt;EnableWindow(<span class="literal">false</span>);</div><div class="line">	GetDlgItem(IDC_BUTTON_SEND_MSG)-&gt;EnableWindow(<span class="literal">false</span>);</div><div class="line">	GetDlgItem(IDC_BUTTON_SEND_FILE)-&gt;EnableWindow(<span class="literal">false</span>);</div><div class="line">	m_AddMsgLIst.ResetContent();</div><div class="line">	GetDlgItem(IDC_BUTTON_CLEAR)-&gt;EnableWindow(<span class="literal">false</span>);</div><div class="line">	((CButton*)GetDlgItem(IDC_RADIO_SERVER))-&gt;EnableWindow(<span class="literal">true</span>);</div><div class="line">	((CButton*)GetDlgItem(IDC_RADIO_CLIENT))-&gt;EnableWindow(<span class="literal">true</span>);</div><div class="line">	((CButton*)GetDlgItem(IDC_RADIO_BOTH))-&gt;EnableWindow(<span class="literal">true</span>);</div><div class="line">	GetDlgItem(IDC_IPADDRESS)-&gt;EnableWindow(<span class="literal">true</span>);</div><div class="line">	m_AddMsgLIst.SendMessage(LB_SETHORIZONTALEXTENT,<span class="number">0</span>,<span class="number">0</span>);</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"><span class="comment">/**********************************************发送结束***********************************************/</span></div><div class="line">	<span class="keyword">if</span>(m_nSockType == SOCK_TCP)</div><div class="line">	&#123;</div><div class="line">		DWORD   dwStatus;</div><div class="line">		<span class="keyword">if</span> (pThreadLisen != <span class="literal">NULL</span>)</div><div class="line">		&#123;</div><div class="line">			<span class="keyword">if</span>(::GetExitCodeThread(pThreadLisen-&gt;m_hThread, &amp;dwStatus)==<span class="number">0</span>)</div><div class="line">			&#123;</div><div class="line">				<span class="keyword">int</span> errror = GetLastError();</div><div class="line">				<span class="keyword">return</span>;</div><div class="line">			&#125;</div><div class="line">			<span class="keyword">if</span> (dwStatus == STILL_ACTIVE)</div><div class="line">			&#123;</div><div class="line">				CSocket sockClient;</div><div class="line">				sockClient.Create();</div><div class="line">				CString ip,strError;</div><div class="line">				ip=<span class="string">"127.0.0.1"</span>;</div><div class="line">				<span class="keyword">int</span> conn = sockClient.Connect(ip, m_Potr);</div><div class="line">				<span class="keyword">if</span> (conn == <span class="number">0</span>)	</div><div class="line">				&#123;</div><div class="line">					AfxMessageBox(<span class="string">"关闭错误!"</span>+GetError(GetLastError()));</div><div class="line">					sockClient.ShutDown(<span class="number">2</span>);</div><div class="line">					sockClient.Close();</div><div class="line">					<span class="keyword">return</span>;</div><div class="line">					</div><div class="line">				&#125;</div><div class="line">				sockClient.Send(<span class="string">"D"</span>,FLAG); <span class="comment">//结束</span></div><div class="line">				</div><div class="line">			&#125;</div><div class="line">			<span class="keyword">else</span></div><div class="line">			&#123;</div><div class="line">				<span class="keyword">delete</span> pThreadLisen;</div><div class="line">				pThreadLisen = <span class="literal">NULL</span>;</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">else</span></div><div class="line">	&#123;</div><div class="line">		CSocket sockClientUdp;</div><div class="line">		<span class="keyword">int</span> succeedCreate = sockClientUdp.Create(m_type, SOCK_DGRAM);</div><div class="line">		CString strMsg = <span class="string">"D"</span>;</div><div class="line">		<span class="keyword">int</span> ret = <span class="number">0</span>;</div><div class="line">		CString ipStr;</div><div class="line">		m_You_IP.GetWindowText(ipStr);</div><div class="line">		UINT port = PORT+m_server;</div><div class="line">		ret = sockClientUdp.SendTo(strMsg, <span class="number">1</span>, port, ipStr);</div><div class="line">		</div><div class="line">	&#125;</div><div class="line">		<span class="comment">//显示下线</span></div><div class="line">		CString strLocalName;</div><div class="line">		GetLocalHostName(strLocalName);</div><div class="line">		AddMsgList(strLocalName, <span class="string">"下线！"</span>);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">void</span> CtraDlg::OnButtonSendMsg() <span class="comment">//发送消息</span></div><div class="line">&#123;</div><div class="line">	<span class="comment">// <span class="doctag">TODO:</span> Add your control notification handler code here</span></div><div class="line">	UpdateData(<span class="literal">true</span>);</div><div class="line">	<span class="keyword">if</span> (m_MsgSend.GetLength() == <span class="number">0</span>) </div><div class="line">	&#123;</div><div class="line">		<span class="keyword">return</span>;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">if</span> (m_nSockType == SOCK_TCP)</div><div class="line">	&#123;</div><div class="line">		::AfxBeginThread(<span class="number">_</span>SendMsgThread, <span class="keyword">this</span>);</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">else</span></div><div class="line">	&#123;	</div><div class="line">		::AfxBeginThread(<span class="number">_</span>SendMsgUdpThread, <span class="keyword">this</span>);</div><div class="line">	&#125;</div><div class="line">	SetDlgItemText(IDC_EDIT_SENDMSG, <span class="string">""</span>);</div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">void</span> CtraDlg::OnButtonSendFile() <span class="comment">//发送文件</span></div><div class="line">&#123;</div><div class="line">	<span class="comment">// <span class="doctag">TODO:</span> Add your control notification handler code here</span></div><div class="line">	<span class="function">CFileDialog <span class="title">dlg</span><span class="params">(<span class="literal">true</span>)</span></span>;</div><div class="line">	CString ip;</div><div class="line">	m_You_IP.GetWindowText(ip);</div><div class="line">	CString title = <span class="string">"文件发往"</span> + ip + <span class="string">"请选择"</span>;</div><div class="line">	dlg.m_ofn.lpstrTitle = title;<span class="comment">//标题条</span></div><div class="line">	<span class="keyword">if</span> (dlg.DoModal() == IDOK)</div><div class="line">	&#123;</div><div class="line">		m_fileName = dlg.GetPathName();</div><div class="line">		GetDlgItem(IDC_PROGRESS_SEND_FILE)-&gt;ShowWindow(SW_SHOW);</div><div class="line">		pThreadSendFile=::AfxBeginThread(<span class="number">_</span>SendFileThread, <span class="keyword">this</span>);	<span class="comment">//开始传送文件线程</span></div><div class="line">	&#125;</div><div class="line">	</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">void</span> CtraDlg::AddMsgList(CString IP,CString str) <span class="comment">//添加信息于LISTBOX 控件中</span></div><div class="line">&#123;</div><div class="line">	SYSTEMTIME tm;</div><div class="line">	GetLocalTime(&amp;tm);</div><div class="line">	CString time;</div><div class="line">	time.Format(<span class="number">_</span>T(<span class="string">" %d:%02.2d "</span>), tm.wHour, tm.wMinute);</div><div class="line">	m_AddMsgLIst.AddString(IP+<span class="string">"("</span>+time+<span class="string">")"</span>+str);</div><div class="line">	<span class="keyword">int</span> numList = m_AddMsgLIst.GetCount()<span class="number">-1</span>;</div><div class="line">	GetDlgItem(IDC_BUTTON_CLEAR)-&gt;EnableWindow(<span class="literal">true</span>);</div><div class="line">	m_AddMsgLIst.SetTopIndex(numList);</div><div class="line">	m_AddMsgLIst.SetCurSel(numList);</div><div class="line">	<span class="comment">//水平滚动</span></div><div class="line">	<span class="keyword">int</span> max_width = <span class="number">0</span>;</div><div class="line">	CSize sz;</div><div class="line">	<span class="function">CClientDC <span class="title">dc</span><span class="params">(<span class="keyword">this</span>)</span></span>;</div><div class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;m_AddMsgLIst.GetCount(); i++)</div><div class="line">	&#123;</div><div class="line">		m_AddMsgLIst.GetText(i,str);</div><div class="line">		sz = dc.GetTextExtent(str);</div><div class="line">		<span class="keyword">if</span> (max_width &lt; sz.cx)</div><div class="line">		&#123;</div><div class="line">			max_width = sz.cx;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	m_AddMsgLIst.SendMessage(LB_SETHORIZONTALEXTENT,max_width,<span class="number">0</span>);</div><div class="line"></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">void</span> CtraDlg::OnButtonClear() <span class="comment">//清除聊天内容</span></div><div class="line">&#123;</div><div class="line">	<span class="comment">// <span class="doctag">TODO:</span> Add your control notification handler code here</span></div><div class="line">	m_AddMsgLIst.ResetContent();</div><div class="line">	GetDlgItem(IDC_BUTTON_CLEAR)-&gt;EnableWindow(<span class="literal">false</span>);</div><div class="line">	m_AddMsgLIst.SendMessage(LB_SETHORIZONTALEXTENT,<span class="number">0</span>,<span class="number">0</span>);</div><div class="line"></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">void</span> CtraDlg::OnRadioTcp()		<span class="comment">//选择TCP模式</span></div><div class="line">&#123;</div><div class="line">	<span class="comment">// <span class="doctag">TODO:</span> Add your control notification handler code here</span></div><div class="line">	m_nSockType = SOCK_TCP;</div><div class="line">	CString text;</div><div class="line">	<span class="keyword">if</span> (m_WorkType== <span class="number">0</span>) </div><div class="line">	&#123;</div><div class="line">		text = <span class="string">"服务器"</span>;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">else</span> <span class="keyword">if</span> (m_WorkType == <span class="number">1</span>) </div><div class="line">	&#123;</div><div class="line">		text = <span class="string">"客户端"</span>;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">else</span> </div><div class="line">	&#123;</div><div class="line">		text = <span class="string">"小工具"</span>;</div><div class="line">	&#125;</div><div class="line">	SetWindowText(text + <span class="string">"TCP方式"</span>);</div><div class="line"></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">void</span> CtraDlg::OnRadioUdp()		<span class="comment">//选择UDP模式</span></div><div class="line">&#123;</div><div class="line">	<span class="comment">// <span class="doctag">TODO:</span> Add your control notification handler code here</span></div><div class="line">	m_nSockType = SOCK_UDP;</div><div class="line">	CString text;</div><div class="line">	<span class="keyword">if</span> (m_WorkType == <span class="number">0</span>) </div><div class="line">	&#123;</div><div class="line">		text = <span class="string">"服务器"</span>;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">else</span> <span class="keyword">if</span> (m_WorkType == <span class="number">1</span>) </div><div class="line">	&#123;</div><div class="line">		text = <span class="string">"客户端"</span>;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">else</span> </div><div class="line">	&#123;</div><div class="line">		text = <span class="string">"小工具"</span>;</div><div class="line">	&#125;</div><div class="line">	SetWindowText(text + <span class="string">"UDP方式"</span>);</div><div class="line"></div><div class="line">	</div><div class="line">&#125;</div><div class="line"></div><div class="line">CString CtraDlg::GetError(DWORD error)	<span class="comment">//返回错误信息</span></div><div class="line">&#123;</div><div class="line">	CString strError;</div><div class="line">	<span class="keyword">switch</span>(error)</div><div class="line">	&#123;</div><div class="line">	<span class="keyword">case</span> WSANOTINITIALISED:</div><div class="line">		strError = <span class="string">"初始化错误"</span>;</div><div class="line">		<span class="keyword">break</span>;</div><div class="line">	<span class="keyword">case</span> WSAENOTCONN:</div><div class="line">		strError = <span class="string">"对方没有启动"</span>;</div><div class="line">		<span class="keyword">break</span>;</div><div class="line">	<span class="keyword">case</span> WSAEWOULDBLOCK :</div><div class="line">		strError = <span class="string">"对方已经关闭"</span>;</div><div class="line">		<span class="keyword">break</span>;</div><div class="line">	<span class="keyword">case</span> WSAECONNREFUSED:</div><div class="line">		strError = <span class="string">"连接的尝试被拒绝"</span>;</div><div class="line">		<span class="keyword">break</span>;</div><div class="line">	<span class="keyword">case</span> WSAENOTSOCK:</div><div class="line">		strError = <span class="string">"在一个非套接字上尝试了一个操作"</span>;</div><div class="line">		<span class="keyword">break</span>;</div><div class="line">	<span class="keyword">case</span> WSAEADDRINUSE:</div><div class="line">		strError = <span class="string">"特定的地址已在使用中"</span>;</div><div class="line">		<span class="keyword">break</span>;</div><div class="line">	<span class="keyword">case</span> WSAECONNRESET:</div><div class="line">		strError = <span class="string">"与主机的连接被关闭"</span>;</div><div class="line">		<span class="keyword">break</span>;</div><div class="line">	<span class="keyword">default</span>:</div><div class="line">		strError = <span class="string">"一般错误"</span>;	</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">return</span> strError;</div><div class="line">	</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">int</span> CtraDlg::GetLocalHostName(CString &amp;sHostName)	<span class="comment">//获得本地计算机名称</span></div><div class="line">&#123;</div><div class="line">	<span class="keyword">char</span> szHostName[<span class="number">256</span>];</div><div class="line">	<span class="keyword">int</span> nRetCode;</div><div class="line">	nRetCode = gethostname(szHostName,<span class="keyword">sizeof</span>(szHostName));</div><div class="line">	<span class="keyword">if</span>(nRetCode!=<span class="number">0</span>)</div><div class="line">	&#123;</div><div class="line">		<span class="comment">//产生错误</span></div><div class="line">		sHostName = <span class="number">_</span>T(<span class="string">"获取不到主机名！"</span>);</div><div class="line">		<span class="keyword">return</span> GetLastError();</div><div class="line">	&#125;</div><div class="line">	sHostName = szHostName;</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">int</span> CtraDlg::GetIpAddress(<span class="keyword">const</span> CString &amp;sHostName, CString &amp;sIpAddress)<span class="comment">//获得本地IP</span></div><div class="line">&#123;</div><div class="line">	<span class="keyword">struct</span> hostent FAR * lpHostEnt=gethostbyname(sHostName);</div><div class="line">	<span class="keyword">if</span>(lpHostEnt==<span class="literal">NULL</span>)</div><div class="line">	&#123;</div><div class="line">		<span class="comment">//产生错误</span></div><div class="line">		sIpAddress = <span class="number">_</span>T(<span class="string">""</span>);</div><div class="line">		<span class="keyword">return</span> GetLastError();</div><div class="line">	&#125;</div><div class="line">	<span class="comment">//获取IP</span></div><div class="line">	LPSTR lpAddr = lpHostEnt-&gt;h_addr_list[<span class="number">0</span>];</div><div class="line">	<span class="keyword">if</span>(lpAddr)</div><div class="line">	&#123;</div><div class="line">		<span class="keyword">struct</span> in_addr inAddr;</div><div class="line">		memmove(&amp;inAddr, lpAddr, <span class="number">4</span>);</div><div class="line">		<span class="comment">//转换为标准格式</span></div><div class="line">		sIpAddress = inet_ntoa(inAddr);</div><div class="line">		<span class="keyword">if</span> (sIpAddress.IsEmpty())</div><div class="line">		&#123;</div><div class="line">			sIpAddress = <span class="number">_</span>T(<span class="string">"获取不到IP！"</span>);</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">int</span> CtraDlg::GetNamebyAddress(<span class="keyword">const</span> CString &amp;IpAddress,CString &amp;sYouName)<span class="comment">//获得对方计算机名称</span></div><div class="line">&#123;</div><div class="line">	<span class="keyword">unsigned</span> <span class="keyword">long</span> addr;</div><div class="line">	addr = inet_addr(IpAddress);</div><div class="line">	<span class="keyword">struct</span> hostent FAR * lpHostEnt = gethostbyaddr((<span class="keyword">char</span> *)&amp;addr, <span class="number">4</span>, AF_INET);</div><div class="line">	<span class="keyword">if</span> (lpHostEnt == <span class="literal">NULL</span>)</div><div class="line">	&#123;</div><div class="line">		<span class="comment">//产生错误</span></div><div class="line">		sYouName = <span class="number">_</span>T(<span class="string">""</span>);</div><div class="line"></div><div class="line">		AfxMessageBox(<span class="string">"无法连接！"</span>);<span class="comment">//应该取得其错误</span></div><div class="line">		<span class="keyword">return</span> <span class="number">-1</span>;</div><div class="line">	&#125;</div><div class="line">	CString name = lpHostEnt-&gt;h_name;</div><div class="line">	sYouName = name;</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line"></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">void</span> CtraDlg::OnRadioServer() </div><div class="line">&#123;</div><div class="line">	<span class="comment">// <span class="doctag">TODO:</span> Add your control notification handler code here</span></div><div class="line">	CString text;</div><div class="line">	<span class="keyword">if</span> (m_nSockType == SOCK_TCP) </div><div class="line">	&#123;</div><div class="line">		text = <span class="string">"TCP方式"</span>;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">else</span> </div><div class="line">	&#123;</div><div class="line">		text = <span class="string">"UDP方式"</span>;</div><div class="line">	&#125;</div><div class="line">	m_server = <span class="number">1</span>;</div><div class="line">	m_client = <span class="number">2</span>;</div><div class="line">	m_WorkType = <span class="number">0</span>;</div><div class="line">	SetWindowText(<span class="string">"服务器 "</span> + text);</div><div class="line">	GetDlgItem(IDC_BUTTON_CONNECT)-&gt;SetWindowText(<span class="string">"启动服务"</span>);</div><div class="line">	GetDlgItem(IDC_BUTTON_DISCONNECT)-&gt;SetWindowText(<span class="string">"关闭服务"</span>);</div><div class="line">	</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">void</span> CtraDlg::OnRadioClient() </div><div class="line">&#123;</div><div class="line">	<span class="comment">// <span class="doctag">TODO:</span> Add your control notification handler code here</span></div><div class="line">	CString text;</div><div class="line">	<span class="keyword">if</span> (m_nSockType == SOCK_TCP) </div><div class="line">	&#123;</div><div class="line">		text = <span class="string">"TCP方式"</span>;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">else</span> </div><div class="line">	&#123;</div><div class="line">		text = <span class="string">"UDP方式"</span>;</div><div class="line">	&#125;</div><div class="line">	m_server = <span class="number">2</span>;</div><div class="line">	m_client = <span class="number">1</span>;</div><div class="line">	m_WorkType = <span class="number">1</span>;</div><div class="line">	SetWindowText(<span class="string">"客户端 "</span> + text);</div><div class="line">	GetDlgItem(IDC_BUTTON_CONNECT)-&gt;SetWindowText(<span class="string">"连接"</span>);</div><div class="line">	GetDlgItem(IDC_BUTTON_DISCONNECT)-&gt;SetWindowText(<span class="string">"断开连接"</span>);</div><div class="line">	</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">void</span> CtraDlg::OnRadioBoth() </div><div class="line">&#123;</div><div class="line">	<span class="comment">// <span class="doctag">TODO:</span> Add your control notification handler code here</span></div><div class="line">	CString text;</div><div class="line">	<span class="keyword">if</span> (m_nSockType == SOCK_TCP) </div><div class="line">	&#123;</div><div class="line">		text = <span class="string">"TCP方式"</span>;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">else</span> </div><div class="line">	&#123;</div><div class="line">		text = <span class="string">"UDP方式"</span>;</div><div class="line">	&#125;</div><div class="line">	m_server = m_client = <span class="number">0</span>;</div><div class="line">	m_WorkType = <span class="number">2</span>;</div><div class="line">	SetWindowText(text);</div><div class="line">	GetDlgItem(IDC_BUTTON_CONNECT)-&gt;SetWindowText(<span class="string">"启动"</span>);</div><div class="line">	GetDlgItem(IDC_BUTTON_DISCONNECT)-&gt;SetWindowText(<span class="string">"关闭"</span>);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">void</span> CtraDlg::OnButtonStopFile() </div><div class="line">&#123;</div><div class="line">	<span class="comment">// <span class="doctag">TODO:</span> Add your control notification handler code here</span></div><div class="line">	FileStop = <span class="literal">true</span>;</div><div class="line">	FileWork = <span class="literal">false</span>;</div><div class="line">	GetDlgItem(IDCANCEL)-&gt;EnableWindow(<span class="literal">true</span>);</div><div class="line">	GetDlgItem(IDC_BUTTON_DISCONNECT)-&gt;EnableWindow(<span class="literal">true</span>);</div><div class="line">&#125;</div><div class="line"></div><div class="line">LRESULT CtraDlg::OnKSend(WPARAM wParam,LPARAM lParam)</div><div class="line">&#123;</div><div class="line">	OnButtonSendMsg();</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line">BOOL CtraDlg::PreTranslateMessage(MSG* pMsg) </div><div class="line">&#123;</div><div class="line">	<span class="comment">// <span class="doctag">TODO:</span> Add your specialized code here and/or call the base class</span></div><div class="line">	<span class="keyword">if</span> (pMsg-&gt;message == WM_KEYDOWN &amp;&amp; pMsg-&gt;wParam == VK_RETURN)</div><div class="line">	&#123;	</div><div class="line">		<span class="keyword">if</span> (GetFocus()-&gt;GetDlgCtrlID()==IDC_EDIT_SENDMSG || GetFocus()-&gt;GetDlgCtrlID()==IDC_BUTTON_SEND_MSG)</div><div class="line">		&#123;</div><div class="line">			AfxGetMainWnd()-&gt;SendMessage(WM_KSEND);</div><div class="line">			<span class="keyword">return</span> TRUE;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">return</span> CDialog::PreTranslateMessage(pMsg);</div><div class="line"></div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// traDlg.h : header file</span></div><div class="line"><span class="comment">//</span></div><div class="line"></div><div class="line"><span class="meta">#<span class="meta-keyword">if</span> !defined(AFX_traDLG_H__F42FE5AC_E2CC_44AB_9D0A_748191BC989F__INCLUDED_)</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> AFX_traDLG_H__F42FE5AC_E2CC_44AB_9D0A_748191BC989F__INCLUDED_</span></div><div class="line"></div><div class="line"><span class="meta">#<span class="meta-keyword">if</span> _MSC_VER &gt; 1000</span></div><div class="line"><span class="meta">#<span class="meta-keyword">pragma</span> once</span></div><div class="line"><span class="meta">#<span class="meta-keyword">endif</span> <span class="comment">// _MSC_VER &gt; 1000</span></span></div><div class="line"></div><div class="line"><span class="comment">//#include "ColorListBox.h"</span></div><div class="line"><span class="comment">/////////////////////////////////////////////////////////////////////////////</span></div><div class="line"><span class="comment">// CtraDlg dialog</span></div><div class="line"></div><div class="line"><span class="keyword">class</span> CtraDlg : <span class="keyword">public</span> CDialog</div><div class="line">&#123;</div><div class="line"><span class="comment">// Construction</span></div><div class="line"><span class="keyword">public</span>:</div><div class="line">	CtraDlg(CWnd* pParent = <span class="literal">NULL</span>);	<span class="comment">// standard constructor</span></div><div class="line"></div><div class="line"><span class="comment">// Dialog Data</span></div><div class="line">	<span class="comment">//&#123;&#123;AFX_DATA(CtraDlg)</span></div><div class="line">	<span class="keyword">enum</span> &#123; IDD = IDD_tra_DIALOG &#125;;</div><div class="line">	CProgressCtrl	m_Progress;</div><div class="line">	CListBox	m_AddMsgLIst;</div><div class="line">	CIPAddressCtrl	m_You_IP;</div><div class="line">	CString	m_MsgSend;</div><div class="line">	<span class="comment">//&#125;&#125;AFX_DATA</span></div><div class="line"></div><div class="line">	<span class="comment">// ClassWizard generated virtual function overrides</span></div><div class="line">	<span class="comment">//&#123;&#123;AFX_VIRTUAL(CtraDlg)</span></div><div class="line">	<span class="keyword">public</span>:</div><div class="line">	<span class="function"><span class="keyword">virtual</span> BOOL <span class="title">PreTranslateMessage</span><span class="params">(MSG* pMsg)</span></span>;</div><div class="line">	<span class="keyword">protected</span>:</div><div class="line">	<span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">DoDataExchange</span><span class="params">(CDataExchange* pDX)</span></span>;	<span class="comment">// DDX/DDV support</span></div><div class="line">	<span class="comment">//&#125;&#125;AFX_VIRTUAL</span></div><div class="line"></div><div class="line"><span class="comment">// Implementation</span></div><div class="line"><span class="keyword">protected</span>:</div><div class="line">	HICON m_hIcon;</div><div class="line"></div><div class="line">	<span class="comment">// Generated message map functions</span></div><div class="line">	<span class="comment">//&#123;&#123;AFX_MSG(CtraDlg)</span></div><div class="line">	<span class="function"><span class="keyword">virtual</span> BOOL <span class="title">OnInitDialog</span><span class="params">()</span></span>;</div><div class="line">	<span class="function">afx_msg <span class="keyword">void</span> <span class="title">OnSysCommand</span><span class="params">(UINT nID, LPARAM lParam)</span></span>;</div><div class="line">	<span class="function">afx_msg <span class="keyword">void</span> <span class="title">OnPaint</span><span class="params">()</span></span>;</div><div class="line">	<span class="function">afx_msg HCURSOR <span class="title">OnQueryDragIcon</span><span class="params">()</span></span>;</div><div class="line">	<span class="function">afx_msg <span class="keyword">void</span> <span class="title">OnButtonConnect</span><span class="params">()</span></span>;</div><div class="line">	<span class="function">afx_msg <span class="keyword">void</span> <span class="title">OnButtonDisconnect</span><span class="params">()</span></span>;</div><div class="line">	<span class="function">afx_msg <span class="keyword">void</span> <span class="title">OnButtonSendMsg</span><span class="params">()</span></span>;</div><div class="line">	<span class="function">afx_msg <span class="keyword">void</span> <span class="title">OnButtonSendFile</span><span class="params">()</span></span>;</div><div class="line">	<span class="function">afx_msg <span class="keyword">void</span> <span class="title">OnButtonClear</span><span class="params">()</span></span>;</div><div class="line">	<span class="function">afx_msg <span class="keyword">void</span> <span class="title">OnRadioTcp</span><span class="params">()</span></span>;</div><div class="line">	<span class="function">afx_msg <span class="keyword">void</span> <span class="title">OnRadioUdp</span><span class="params">()</span></span>;</div><div class="line">	<span class="function">afx_msg <span class="keyword">void</span> <span class="title">OnRadioServer</span><span class="params">()</span></span>;</div><div class="line">	<span class="function">afx_msg <span class="keyword">void</span> <span class="title">OnRadioClient</span><span class="params">()</span></span>;</div><div class="line">	<span class="function">afx_msg <span class="keyword">void</span> <span class="title">OnRadioBoth</span><span class="params">()</span></span>;</div><div class="line">	<span class="function">afx_msg <span class="keyword">void</span> <span class="title">OnButtonStopFile</span><span class="params">()</span></span>;</div><div class="line">	<span class="function">afx_msg LRESULT <span class="title">OnKSend</span><span class="params">(WPARAM wParam,LPARAM lParam)</span></span>;<span class="comment">//发送消息</span></div><div class="line">	<span class="comment">//afx_msg void OnButtonCaputer();</span></div><div class="line">	<span class="comment">//&#125;&#125;AFX_MSG</span></div><div class="line">	DECLARE_MESSAGE_MAP()</div><div class="line"></div><div class="line"><span class="keyword">public</span>:</div><div class="line">	<span class="function"><span class="keyword">int</span> <span class="title">SaveYouFile</span><span class="params">(CSocket &amp;recSo,SOCKADDR_IN &amp;client)</span></span>;</div><div class="line">	<span class="function"><span class="keyword">int</span> <span class="title">ReceiveFileMsg</span><span class="params">(CSocket &amp; socket,SOCKADDR_IN &amp;client)</span></span>;</div><div class="line">	<span class="function"><span class="keyword">int</span> <span class="title">GetIpAddress</span><span class="params">(<span class="keyword">const</span> CString &amp; sHostName,CString &amp; sIpAddress)</span></span>;</div><div class="line">	<span class="function"><span class="keyword">int</span> <span class="title">GetLocalHostName</span><span class="params">(CString &amp;sHostName)</span></span>;</div><div class="line">	<span class="function">CString <span class="title">GetError</span><span class="params">(DWORD error)</span></span>;</div><div class="line">	<span class="keyword">int</span>	m_nSockType;	<span class="comment">//连接类型</span></div><div class="line">	<span class="keyword">int</span> m_WorkType;		<span class="comment">//工作方式 server0,client1,both2</span></div><div class="line">	<span class="function"><span class="keyword">void</span> <span class="title">AddMsgList</span><span class="params">(CString IP, CString str)</span></span>; <span class="comment">//LISTBOX控件添加信息</span></div><div class="line">	<span class="keyword">int</span> m_client, m_server;</div><div class="line">	CString m_fileName;</div><div class="line">	<span class="keyword">bool</span> FileWork, FileStop, StopServer;</div><div class="line">	<span class="keyword">char</span> m_type;<span class="comment">//接受类型/F-文件，C-抓平，D-关闭,M-消息</span></div><div class="line">	<span class="keyword">int</span> m_Potr;<span class="comment">//当前使用端口</span></div><div class="line">	<span class="function"><span class="keyword">int</span> <span class="title">GetNamebyAddress</span><span class="params">(<span class="keyword">const</span> CString &amp;IpAddress,CString &amp;sYouName)</span></span>;<span class="comment">//获得对方计算机名称</span></div><div class="line"></div><div class="line">&#125;;</div><div class="line"><span class="keyword">struct</span> FILEINFO</div><div class="line">&#123;</div><div class="line">	<span class="keyword">int</span> fileLength;</div><div class="line">	<span class="keyword">char</span> fileName[<span class="number">100</span>];</div><div class="line"></div><div class="line">&#125;;</div><div class="line"></div><div class="line"><span class="comment">//&#123;&#123;AFX_INSERT_LOCATION&#125;&#125;</span></div><div class="line"><span class="comment">// Microsoft Visual C++ will insert additional declarations immediately before the previous line.</span></div><div class="line"></div><div class="line"><span class="meta">#<span class="meta-keyword">endif</span> <span class="comment">// !defined(AFX_traDLG_H__F42FE5AC_E2CC_44AB_9D0A_748191BC989F__INCLUDED_)</span></span></div></pre></td></tr></table></figure>
<hr>
<h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><p>网上的资料，查到的大部分都是用的MFC的socket类做的……</p>
<p>高级版→→→→<br>1.<a href="https://wenku.baidu.com/view/69afd693dd88d0d233d46a49.html" target="_blank" rel="external">基于MFC仿QQ聊天程序设计完整实例教程</a><br>2.<a href="http://blog.csdn.net/akof1314/article/details/5983443" target="_blank" rel="external">CRichEditCtrlEx支持静态表情聊天类的使用</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;div align=&quot;left&quot;&gt;&lt;br&gt;&lt;img src=&quot;https://timgsa.baidu.com/timg?image&amp;quality=80&amp;size=b9999_10000&amp;sec=1494249495796&amp;di=6e913a58ff8ec3713e96983683e150b8&amp;imgtype=0&amp;src=http%3A%2F%2Fimg.my.csdn.net%2Fuploads%2F201304%2F08%2F1365431054_1015.png&quot; width=&quot;300&quot; height=&quot;180&quot; style=&quot;float:right;&quot;/&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;　Socket编程。　&lt;br&gt;&lt;br&gt;&lt;br&gt; &lt;/div&gt;
    
    </summary>
    
      <category term="互联网" scheme="http://hubojing.github.io/categories/%E4%BA%92%E8%81%94%E7%BD%91/"/>
    
    
      <category term="MFC" scheme="http://hubojing.github.io/tags/MFC/"/>
    
      <category term="C++" scheme="http://hubojing.github.io/tags/C/"/>
    
      <category term="socket" scheme="http://hubojing.github.io/tags/socket/"/>
    
  </entry>
  
  <entry>
    <title>四大组件之ContentProvider记录</title>
    <link href="http://hubojing.github.io/2017/05/05/ContentProvider%E8%AE%B0%E5%BD%95/"/>
    <id>http://hubojing.github.io/2017/05/05/ContentProvider记录/</id>
    <published>2017-05-05T14:00:42.000Z</published>
    <updated>2017-05-05T15:05:43.000Z</updated>
    
    <content type="html"><![CDATA[<div align="left"><br><img src="https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1493829797406&di=c1112aa632e463c9a69b23a84b37c681&imgtype=0&src=http%3A%2F%2Fs15.sinaimg.cn%2Fmiddle%2F448dd084gaa5d8b13a09e%26690" width="300" height="180" style="float:right;"><br><br><br>ContentProvider记录。<br><br><br> </div>

<a id="more"></a>
<p>数据存储方式：</p>
<ul>
<li>Shared Preferences</li>
<li>文件存储</li>
<li>SQLite</li>
<li>其他还有网络存储等</li>
</ul>
<p>上述不可完成的任务：都只是在单独的一个应用程序之中达到一个数据的共享</p>
<p><img src="http://img.blog.csdn.net/20170505230346413?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="ContentProvider"><br><img src="http://img.blog.csdn.net/20170505230425672?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="Uri"><br><img src="http://img.blog.csdn.net/20170505230442148?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="UriMatcher类"></p>
<h1 id="contentprovider"><a href="#ContentProvider" class="headerlink" title="ContentProvider"></a>ContentProvider</h1><ol>
<li>使用 ContentResolver 操作 ContentProvider 中的数据：<br>当外部应用需要对 ContentProvider 中的数据进行增删改查的时候，可以使用 ContentResolver 类来完成。</li>
<li>使用 Activity 提供的 getContentResolver() 方法获取 ContentResolver 对象。</li>
<li>ContentResolver 类提供了与 ContentProvider 类相同签名的四个方法：</li>
</ol>
<ul>
<li>public Uri insert(Uri uri,ContentValues values)<br>该方法用于往ContentProvider里面添加数据</li>
<li>public int delete(Uri uri,String selection,String[] selectionArgs)<br>该方法从ContentProvider中删除数据</li>
<li>public int update(Uri uri,ContentValues values,String selection,String[] selectionArgs)<br>该方法用于更新ContentProvider里面的数据</li>
<li>public Cursor query(Uri uri,String[] projection,String selection,String[] selectionArgs,String sortOrder)<br>该方法用于从ContentProvider中获取数据</li>
</ul>
<h1 id="使用系统提供的contentprovider"><a href="#使用系统提供的ContentProvider" class="headerlink" title="使用系统提供的ContentProvider"></a>使用系统提供的ContentProvider</h1><h2 id="查询联系人"><a href="#查询联系人" class="headerlink" title="查询联系人"></a>查询联系人</h2><p>MyContentProvider.java</p>
<figure class="highlight less"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div></pre></td><td class="code"><pre><div class="line">package com<span class="selector-class">.abc</span><span class="selector-class">.contentproviderdemo1</span>;</div><div class="line"></div><div class="line">import android<span class="selector-class">.content</span><span class="selector-class">.ContentProvider</span>;</div><div class="line">import android<span class="selector-class">.content</span><span class="selector-class">.ContentValues</span>;</div><div class="line">import android<span class="selector-class">.database</span><span class="selector-class">.Cursor</span>;</div><div class="line">import android<span class="selector-class">.net</span><span class="selector-class">.Uri</span>;</div><div class="line"></div><div class="line"><span class="selector-tag">public</span> <span class="selector-tag">class</span> <span class="selector-tag">MyContentProvider</span> <span class="selector-tag">extends</span> <span class="selector-tag">ContentProvider</span> &#123;</div><div class="line"></div><div class="line">	<span class="variable">@Override</span> <span class="comment">// 在ContentProvider创建后被调用</span></div><div class="line">	public boolean onCreate() &#123;</div><div class="line">		<span class="comment">// TODO Auto-generated method stub</span></div><div class="line">		return false;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	<span class="variable">@Override</span> <span class="comment">// 根据uri查询出selection指定的条件所匹配的全部记录，并且可以指定查询哪些列 以什么方式（order）排序</span></div><div class="line">	public Cursor query(Uri uri, String[] projection, String selection, String[] selectionArgs, String sortOrder) &#123;</div><div class="line">		<span class="comment">// TODO Auto-generated method stub</span></div><div class="line">		return null;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	<span class="variable">@Override</span> <span class="comment">// 返回当前uri的MIME类型，如果该URI对应的数据可能包括多条记录</span></div><div class="line">	<span class="comment">// 如果该URI对应的数据只有一条记录 该MIME类型字符串 就是以vnd.android.cursor.item/开头</span></div><div class="line">	public String getType(Uri uri) &#123;</div><div class="line">		<span class="comment">// TODO Auto-generated method stub</span></div><div class="line">		return null;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	<span class="variable">@Override</span> <span class="comment">// 根据uri插入Values对应的数据</span></div><div class="line">	public Uri insert(Uri uri, ContentValues values) &#123;</div><div class="line">		<span class="comment">// TODO Auto-generated method stub</span></div><div class="line">		return null;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	<span class="variable">@Override</span> <span class="comment">// 根据Uri删除selection指定的条件所匹配的全部记录</span></div><div class="line">	public int delete(Uri uri, String selection, String[] selectionArgs) &#123;</div><div class="line">		<span class="comment">// TODO Auto-generated method stub</span></div><div class="line">		return 0;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	<span class="variable">@Override</span> <span class="comment">// 根据uri修改selection指定的条件所匹配的全部记录</span></div><div class="line">	public int update(Uri uri, ContentValues values, String selection, String[] selectionArgs) &#123;</div><div class="line">		<span class="comment">// TODO Auto-generated method stub</span></div><div class="line">		return 0;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>MainActivity.java</p>
<figure class="highlight scala"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> com.abc.contentproviderdemo1;</div><div class="line"></div><div class="line"><span class="keyword">import</span> android.app.<span class="type">Activity</span>;</div><div class="line"><span class="keyword">import</span> android.content.<span class="type">ContentResolver</span>;</div><div class="line"><span class="keyword">import</span> android.database.<span class="type">Cursor</span>;</div><div class="line"><span class="keyword">import</span> android.os.<span class="type">Bundle</span>;</div><div class="line"><span class="keyword">import</span> android.provider.<span class="type">ContactsContract</span>.<span class="type">CommonDataKinds</span>.<span class="type">Email</span>;</div><div class="line"><span class="keyword">import</span> android.provider.<span class="type">ContactsContract</span>.<span class="type">CommonDataKinds</span>.<span class="type">Phone</span>;</div><div class="line"><span class="keyword">import</span> android.provider.<span class="type">ContactsContract</span>.<span class="type">Contacts</span>;</div><div class="line"><span class="keyword">import</span> android.util.<span class="type">Log</span>;</div><div class="line"></div><div class="line">public <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">Activity</span> </span>&#123;</div><div class="line"></div><div class="line">	<span class="meta">@Override</span></div><div class="line">	<span class="keyword">protected</span> void onCreate(<span class="type">Bundle</span> savedInstanceState) &#123;</div><div class="line">		<span class="keyword">super</span>.onCreate(savedInstanceState);</div><div class="line">		setContentView(<span class="type">R</span>.layout.activity_main);</div><div class="line"></div><div class="line">		<span class="type">ContentResolver</span> cr = getContentResolver();</div><div class="line">		<span class="type">Cursor</span> c = cr.query(<span class="type">Contacts</span>.<span class="type">CONTENT_URI</span>, <span class="keyword">new</span> <span class="type">String</span>[] &#123; <span class="type">Contacts</span>._ID, <span class="type">Contacts</span>.<span class="type">DISPLAY_NAME</span> &#125;, <span class="literal">null</span>, <span class="literal">null</span>,</div><div class="line">				<span class="literal">null</span>);</div><div class="line">		<span class="keyword">if</span> (c != <span class="literal">null</span>) &#123;</div><div class="line">			<span class="keyword">while</span> (c.moveToNext()) &#123;</div><div class="line">				int id = c.getInt(c.getColumnIndex(<span class="string">"_id"</span>));</div><div class="line">				<span class="type">Log</span>.i(<span class="string">"info"</span>, <span class="string">"_id"</span> + id);</div><div class="line">				<span class="type">Log</span>.i(<span class="string">"info"</span>, <span class="string">"name:"</span> + c.getString(c.getColumnIndex(<span class="string">"display_name"</span>)));</div><div class="line">				<span class="type">Cursor</span> c1 = cr.query(<span class="type">Phone</span>.<span class="type">CONTENT_URI</span>, <span class="keyword">new</span> <span class="type">String</span>[] &#123; <span class="type">Phone</span>.<span class="type">NUMBER</span>, <span class="type">Phone</span>.<span class="type">TYPE</span> &#125;,</div><div class="line">						<span class="type">Phone</span>.<span class="type">CONTACT_ID</span> + <span class="string">"="</span> + id, <span class="literal">null</span>, <span class="literal">null</span>);</div><div class="line">				<span class="comment">// 根据联系人ID查询出联系人的电话号码</span></div><div class="line">				<span class="keyword">if</span> (c1 != <span class="literal">null</span>) &#123;</div><div class="line">					<span class="keyword">while</span> (c1.moveToNext()) &#123;</div><div class="line">						int <span class="class"><span class="keyword">type</span> </span>= c1.getInt(c1.getColumnIndex(<span class="type">Phone</span>.<span class="type">TYPE</span>));</div><div class="line">						<span class="keyword">if</span> (<span class="class"><span class="keyword">type</span> <span class="title">==</span> <span class="title">Phone</span>.<span class="title">TYPE_HOME</span>) </span>&#123;</div><div class="line">							<span class="type">Log</span>.i(<span class="string">"info"</span>, <span class="string">"家庭电话："</span> + c1.getString(c1.getColumnIndex(<span class="type">Phone</span>.<span class="type">NUMBER</span>)));</div><div class="line">						&#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="class"><span class="keyword">type</span> <span class="title">==</span> <span class="title">Phone</span>.<span class="title">TYPE_MOBILE</span>) </span>&#123;</div><div class="line">							<span class="type">Log</span>.i(<span class="string">"info"</span>, <span class="string">"手机"</span> + c1.getString(c1.getColumnIndex(<span class="type">Phone</span>.<span class="type">NUMBER</span>)));</div><div class="line">						&#125;</div><div class="line">					&#125;</div><div class="line">					c1.close();</div><div class="line">				&#125;</div><div class="line">				<span class="comment">// 根据联系人的ID去查询出联系人的邮箱地址</span></div><div class="line">				<span class="type">Cursor</span> c2 = cr.query(<span class="type">Email</span>.<span class="type">CONTENT_URI</span>, <span class="keyword">new</span> <span class="type">String</span>[] &#123; <span class="type">Email</span>.<span class="type">DATA</span>, <span class="type">Email</span>.<span class="type">TYPE</span> &#125;,</div><div class="line">						<span class="type">Email</span>.<span class="type">CONTACT_ID</span> + <span class="string">"="</span> + id, <span class="literal">null</span>, <span class="literal">null</span>);</div><div class="line"></div><div class="line">				<span class="keyword">if</span> (c2 != <span class="literal">null</span>) &#123;</div><div class="line">					<span class="keyword">while</span> (c2.moveToNext()) &#123;</div><div class="line">						int <span class="class"><span class="keyword">type</span> </span>= c2.getInt(c2.getColumnIndex(<span class="type">Email</span>.<span class="type">TYPE</span>));</div><div class="line">						<span class="keyword">if</span> (<span class="class"><span class="keyword">type</span> <span class="title">==</span> <span class="title">Email</span>.<span class="title">TYPE_WORK</span>) </span>&#123;</div><div class="line">							<span class="type">Log</span>.i(<span class="string">"info"</span>, <span class="string">"工作邮箱："</span> + c2.getString(c2.getColumnIndex(<span class="type">Email</span>.<span class="type">DATA</span>)));</div><div class="line">						&#125;</div><div class="line">					&#125;</div><div class="line">					c2.close();</div><div class="line">				&#125;</div><div class="line">			&#125;</div><div class="line">			c.close();</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>AndroidManifest.xml注册</p>
<figure class="highlight applescript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;uses-permission android:<span class="built_in">name</span>=<span class="string">"android.permission.READ_CONTACTS"</span>/&gt;</div></pre></td></tr></table></figure>
<h2 id="增加联系人"><a href="#增加联系人" class="headerlink" title="增加联系人"></a>增加联系人</h2><p>MainActivity.java</p>
<figure class="highlight less"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div></pre></td><td class="code"><pre><div class="line">package com<span class="selector-class">.abc</span><span class="selector-class">.contentproviderdemo2</span>;</div><div class="line"></div><div class="line">import android<span class="selector-class">.app</span><span class="selector-class">.Activity</span>;</div><div class="line">import android<span class="selector-class">.content</span><span class="selector-class">.ContentResolver</span>;</div><div class="line">import android<span class="selector-class">.content</span><span class="selector-class">.ContentUris</span>;</div><div class="line">import android<span class="selector-class">.content</span><span class="selector-class">.ContentValues</span>;</div><div class="line">import android<span class="selector-class">.net</span><span class="selector-class">.Uri</span>;</div><div class="line">import android<span class="selector-class">.os</span><span class="selector-class">.Bundle</span>;</div><div class="line">import android<span class="selector-class">.provider</span><span class="selector-class">.ContactsContract</span><span class="selector-class">.CommonDataKinds</span><span class="selector-class">.Phone</span>;</div><div class="line">import android<span class="selector-class">.provider</span><span class="selector-class">.ContactsContract</span><span class="selector-class">.CommonDataKinds</span><span class="selector-class">.StructuredName</span>;</div><div class="line">import android<span class="selector-class">.provider</span><span class="selector-class">.ContactsContract</span><span class="selector-class">.Data</span>;</div><div class="line">import android<span class="selector-class">.provider</span><span class="selector-class">.ContactsContract</span><span class="selector-class">.RawContacts</span>;</div><div class="line"></div><div class="line"><span class="selector-tag">public</span> <span class="selector-tag">class</span> <span class="selector-tag">MainActivity</span> <span class="selector-tag">extends</span> <span class="selector-tag">Activity</span> &#123;</div><div class="line"></div><div class="line">	<span class="variable">@Override</span></div><div class="line">	protected void onCreate(Bundle savedInstanceState) &#123;</div><div class="line">		super<span class="selector-class">.onCreate</span>(savedInstanceState);</div><div class="line">		setContentView(R<span class="selector-class">.layout</span><span class="selector-class">.activity_main</span>);</div><div class="line">		ContentResolver cr = getContentResolver();</div><div class="line">		<span class="comment">// 向联系人中插入一行数据</span></div><div class="line">		ContentValues values = new ContentValues();</div><div class="line">		Uri uri = cr<span class="selector-class">.insert</span>(RawContacts.CONTENT_URI, values);</div><div class="line">		Long raw_contact_id = ContentUris<span class="selector-class">.parseId</span>(uri);</div><div class="line">		values<span class="selector-class">.clear</span>();</div><div class="line">		values<span class="selector-class">.put</span>(StructuredName.RAW_CONTACT_ID, raw_contact_id);</div><div class="line">		values<span class="selector-class">.put</span>(StructuredName.DISPLAY_NAME, <span class="string">"胡博靖"</span>);</div><div class="line">		values<span class="selector-class">.put</span>(StructuredName.MIMETYPE, StructuredName.CONTENT_ITEM_TYPE);</div><div class="line">		uri = cr<span class="selector-class">.insert</span>(Data.CONTENT_URI, values);</div><div class="line">		<span class="comment">// 插入电话信息</span></div><div class="line">		values<span class="selector-class">.clear</span>();</div><div class="line">		values<span class="selector-class">.put</span>(Phone.RAW_CONTACT_ID, raw_contact_id);</div><div class="line">		values<span class="selector-class">.put</span>(Phone.NUMBER, <span class="string">"12345678910"</span>);</div><div class="line">		values<span class="selector-class">.put</span>(Phone.MIMETYPE, Phone.CONTENT_ITEM_TYPE);</div><div class="line">		uri = cr<span class="selector-class">.insert</span>(Data.CONTENT_URI, values);</div><div class="line">	&#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>在AndroidManifest.xml中注册</p>
<figure class="highlight applescript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;uses-permission android:<span class="built_in">name</span>=<span class="string">"android.permission.WRITE_CONTACTS"</span>/&gt;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;div align=&quot;left&quot;&gt;&lt;br&gt;&lt;img src=&quot;https://timgsa.baidu.com/timg?image&amp;quality=80&amp;size=b9999_10000&amp;sec=1493829797406&amp;di=c1112aa632e463c9a69b23a84b37c681&amp;imgtype=0&amp;src=http%3A%2F%2Fs15.sinaimg.cn%2Fmiddle%2F448dd084gaa5d8b13a09e%26690&quot; width=&quot;300&quot; height=&quot;180&quot; style=&quot;float:right;&quot;/&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;ContentProvider记录。&lt;br&gt;&lt;br&gt;&lt;br&gt; &lt;/div&gt;
    
    </summary>
    
      <category term="互联网" scheme="http://hubojing.github.io/categories/%E4%BA%92%E8%81%94%E7%BD%91/"/>
    
    
      <category term="Android" scheme="http://hubojing.github.io/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>四大组件之Service记录</title>
    <link href="http://hubojing.github.io/2017/05/01/Service%E8%AE%B0%E5%BD%95/"/>
    <id>http://hubojing.github.io/2017/05/01/Service记录/</id>
    <published>2017-05-01T08:14:00.000Z</published>
    <updated>2017-05-03T13:44:34.000Z</updated>
    
    <content type="html"><![CDATA[<div align="left"><br><img src="https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1493829797406&di=c1112aa632e463c9a69b23a84b37c681&imgtype=0&src=http%3A%2F%2Fs15.sinaimg.cn%2Fmiddle%2F448dd084gaa5d8b13a09e%26690" width="300" height="180" style="float:right;"><br>　　根据广大程序员经验，初学者请告别Eclipse，拥抱Android Studio！<br>　　原因：<br>　　1. 未来是Android Studio的天下（Google自己出品）。<br>　　2. Eclipse的配置和相关安装可以磨灭初学者一半的耐心，简直是拦路虎。（比如和我一样做类似题目毕设的同学已经哭晕在厕所）<br>　　3. 促使你换一台高配电脑。（心累，Android Studio在垃圾本上跑，几分钟编译一次，卡到怀疑人生，其实垃圾本四年前还是一条能跑lol的好本本，岁月催laptop老）<br> </div>

<a id="more"></a>
<p>　　Android sdk文件夹到了80几G…撑爆了我的硬盘……电脑里装的软件过于多了…趁着五一大好春光（下雨）都给卸载了！包括毕设用的eclipse和各种版本的VS，以及以前用过现在用的少的各种专业软件（每一个都是10G大户）。不过我还是毅然留下了常年没有玩耍的游戏们（加起来也才80多G！相比之下，sdk里都放了些什么！）。</p>
<p>　　但毕设是要做的。<br>　　所以Android套装们需要重新下载下来，当年安装的时候，对JDK、SDK、ADT这种东西一点儿不了解，现在重新来一遍。<br>这几天写了一些文字，但不能发上来，因为放入我的毕业论文里了。</p>
<p>－－－－－－－－－－－－－－－－－－－－－－－－废话终结线－－－－－－－－－－－－－－－－－－－－－－－－</p>
<h1 id="service生命周期"><a href="#Service生命周期" class="headerlink" title="Service生命周期"></a>Service生命周期</h1><p><img src="https://timgsa.baidu.com/timg?image&amp;quality=80&amp;size=b9999_10000&amp;sec=1493825041654&amp;di=c2451aea42f042f63f4de6675f5659d3&amp;imgtype=0&amp;src=http%3A%2F%2Fstatic.oschina.net%2Fuploads%2Fimg%2F201210%2F16102027_blLg.gif" alt="Service生命周期"></p>
<p><strong>注意</strong></p>
<ul>
<li>运行在主线程，不能用它做耗时的请求或动作</li>
<li>可在服务中开一个线程，在线程中做耗时动作</li>
</ul>
<h1 id="两种方式本地服务"><a href="#两种方式（本地服务）" class="headerlink" title="两种方式（本地服务）"></a>两种方式（本地服务）</h1><p>Start方式：</p>
<ul>
<li>服务跟启动页没有任何联系</li>
<li>无法得到服务对象</li>
</ul>
<p>Bind方式（支持数据回传）：</p>
<ul>
<li>通过Ibinder接口实例，返回一个ServiceConnection对象给启动源。</li>
<li>通过ServiceConnection对象的相关方法可以得到Service对象</li>
</ul>
<h1 id="start启动"><a href="#Start启动" class="headerlink" title="Start启动"></a>Start启动</h1><p>activity_main.xml</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div></pre></td><td class="code"><pre><div class="line">&lt;LinearLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;</div><div class="line">    xmlns:tools=&quot;http://schemas.android.com/tools&quot;</div><div class="line">    android:layout_width=&quot;match_parent&quot;</div><div class="line">    android:layout_height=&quot;match_parent&quot;</div><div class="line">    android:orientation=&quot;vertical&quot;</div><div class="line">    android:paddingBottom=&quot;@dimen/activity_vertical_margin&quot;</div><div class="line">    android:paddingLeft=&quot;@dimen/activity_horizontal_margin&quot;</div><div class="line">    android:paddingRight=&quot;@dimen/activity_horizontal_margin&quot;</div><div class="line">    android:paddingTop=&quot;@dimen/activity_vertical_margin&quot;</div><div class="line">    tools:context=&quot;com.abc.service.MainActivity&quot; &gt;</div><div class="line"></div><div class="line">    &lt;TextView</div><div class="line">        android:id=&quot;@+id/textView1&quot;</div><div class="line">        android:layout_width=&quot;wrap_content&quot;</div><div class="line">        android:layout_height=&quot;wrap_content&quot;</div><div class="line">        android:text=&quot;start:&quot; /&gt;</div><div class="line"></div><div class="line">    &lt;Button</div><div class="line">        android:id=&quot;@+id/start&quot;</div><div class="line">        android:onClick=&quot;doClick&quot;</div><div class="line">        android:layout_width=&quot;match_parent&quot;</div><div class="line">        android:layout_height=&quot;wrap_content&quot;</div><div class="line">        android:text=&quot;StartService&quot; /&gt;</div><div class="line"></div><div class="line">    &lt;Button</div><div class="line">        android:id=&quot;@+id/stop&quot;</div><div class="line">        android:onClick=&quot;doClick&quot;</div><div class="line">        android:layout_width=&quot;match_parent&quot;</div><div class="line">        android:layout_height=&quot;wrap_content&quot;</div><div class="line">        android:text=&quot;StopService&quot; /&gt;</div><div class="line"></div><div class="line">    &lt;TextView</div><div class="line">        android:id=&quot;@+id/textView2&quot;</div><div class="line">        android:layout_width=&quot;wrap_content&quot;</div><div class="line">        android:layout_height=&quot;wrap_content&quot;</div><div class="line">        android:text=&quot;Bind:&quot; /&gt;</div><div class="line"></div><div class="line">    &lt;Button</div><div class="line">        android:id=&quot;@+id/bind&quot;</div><div class="line">         android:onClick=&quot;doClick&quot;</div><div class="line">        android:layout_width=&quot;match_parent&quot;</div><div class="line">        android:layout_height=&quot;wrap_content&quot;</div><div class="line">        android:text=&quot;BindService&quot; /&gt;</div><div class="line"></div><div class="line">    &lt;Button</div><div class="line">        android:id=&quot;@+id/play&quot;</div><div class="line">        android:onClick=&quot;doClick&quot;</div><div class="line">        android:layout_width=&quot;match_parent&quot;</div><div class="line">        android:layout_height=&quot;wrap_content&quot;</div><div class="line">        android:text=&quot;播放&quot; /&gt;</div><div class="line"></div><div class="line">    &lt;Button</div><div class="line">        android:id=&quot;@+id/pause&quot;</div><div class="line">        android:onClick=&quot;doClick&quot;</div><div class="line">        android:layout_width=&quot;match_parent&quot;</div><div class="line">        android:layout_height=&quot;wrap_content&quot;</div><div class="line">        android:text=&quot;暂停&quot; /&gt;</div><div class="line"></div><div class="line">    &lt;Button</div><div class="line">        android:id=&quot;@+id/next&quot;</div><div class="line">         android:onClick=&quot;doClick&quot;</div><div class="line">        android:layout_width=&quot;match_parent&quot;</div><div class="line">        android:layout_height=&quot;wrap_content&quot;</div><div class="line">        android:text=&quot;下一首&quot; /&gt;</div><div class="line"></div><div class="line">    &lt;Button</div><div class="line">        android:id=&quot;@+id/pervious&quot;</div><div class="line">        android:onClick=&quot;doClick&quot;</div><div class="line">        android:layout_width=&quot;match_parent&quot;</div><div class="line">        android:layout_height=&quot;wrap_content&quot;</div><div class="line">        android:text=&quot;上一首&quot; /&gt;</div><div class="line"></div><div class="line">    &lt;Button</div><div class="line">        android:id=&quot;@+id/unbind&quot;</div><div class="line">        android:onClick=&quot;doClick&quot;</div><div class="line">        android:layout_width=&quot;match_parent&quot;</div><div class="line">        android:layout_height=&quot;wrap_content&quot;</div><div class="line">        android:text=&quot;UnBindService&quot; /&gt;</div><div class="line"></div><div class="line">&lt;/LinearLayout&gt;</div></pre></td></tr></table></figure>
<p>如图。</p>
<p><img src="http://img.blog.csdn.net/20170503214551276?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="样式"></p>
<p>MainActivity.java</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div></pre></td><td class="code"><pre><div class="line">package com.abc.service;</div><div class="line"></div><div class="line">import android.app.Activity;</div><div class="line">import android.content.Intent;</div><div class="line">import android.os.Bundle;</div><div class="line">import android.view.Menu;</div><div class="line">import android.view.MenuItem;</div><div class="line">import android.view.View;</div><div class="line"></div><div class="line">public class MainActivity extends Activity &#123;</div><div class="line">	Intent intent1;</div><div class="line"></div><div class="line">	@Override</div><div class="line">	protected void onCreate(Bundle savedInstanceState) &#123;</div><div class="line">		super.onCreate(savedInstanceState);</div><div class="line">		setContentView(R.layout.activity_main);</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	public void doClick(View v) &#123;</div><div class="line">		switch (v.getId()) &#123;</div><div class="line">		case R.id.start:</div><div class="line">			intent1 = new Intent(MainActivity.this, MyStartService.class);</div><div class="line">			startService(intent1);</div><div class="line">			break;</div><div class="line">		case R.id.stop:</div><div class="line">			stopService(intent1);</div><div class="line">			break;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	@Override</div><div class="line">	public boolean onCreateOptionsMenu(Menu menu) &#123;</div><div class="line">		// Inflate the menu; this adds items to the action bar if it is present.</div><div class="line">		getMenuInflater().inflate(R.menu.main, menu);</div><div class="line">		return true;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	@Override</div><div class="line">	public boolean onOptionsItemSelected(MenuItem item) &#123;</div><div class="line">		// Handle action bar item clicks here. The action bar will</div><div class="line">		// automatically handle clicks on the Home/Up button, so long</div><div class="line">		// as you specify a parent activity in AndroidManifest.xml.</div><div class="line">		int id = item.getItemId();</div><div class="line">		if (id == R.id.action_settings) &#123;</div><div class="line">			return true;</div><div class="line">		&#125;</div><div class="line">		return super.onOptionsItemSelected(item);</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>MyStartService.java</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div></pre></td><td class="code"><pre><div class="line">package com.abc.service;</div><div class="line"></div><div class="line">import android.app.Service;</div><div class="line">import android.content.Intent;</div><div class="line">import android.os.IBinder;</div><div class="line">import android.util.Log;</div><div class="line"></div><div class="line">public class MyStartService extends Service &#123;</div><div class="line">	@Override</div><div class="line">	public void onCreate() &#123;</div><div class="line">		// TODO Auto-generated method stub</div><div class="line">		Log.i(&quot;info&quot;, &quot;Service--onCreate()&quot;);</div><div class="line">		super.onCreate();</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	@Override</div><div class="line">	public int onStartCommand(Intent intent, int flags, int startId) &#123;</div><div class="line">		// TODO Auto-generated method stub</div><div class="line">		Log.i(&quot;info&quot;, &quot;Service--onStartCommand()&quot;);</div><div class="line">		return super.onStartCommand(intent, flags, startId);</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	@Override</div><div class="line">	public void onDestroy() &#123;</div><div class="line">		// TODO Auto-generated method stub</div><div class="line">		Log.i(&quot;info&quot;, &quot;Service--onDestroy()&quot;);</div><div class="line">		super.onDestroy();</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	@Override</div><div class="line">	public IBinder onBind(Intent intent) &#123;</div><div class="line">		// TODO Auto-generated method stub</div><div class="line">		Log.i(&quot;info&quot;, &quot;Service--onBind()&quot;);</div><div class="line">		return null;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>注册</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</div><div class="line">&lt;manifest xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;</div><div class="line">    package=&quot;com.abc.service&quot;</div><div class="line">    android:versionCode=&quot;1&quot;</div><div class="line">    android:versionName=&quot;1.0&quot; &gt;</div><div class="line"></div><div class="line">    &lt;uses-sdk</div><div class="line">        android:minSdkVersion=&quot;14&quot;</div><div class="line">        android:targetSdkVersion=&quot;25&quot; /&gt;</div><div class="line"></div><div class="line">    &lt;application</div><div class="line">        android:allowBackup=&quot;true&quot;</div><div class="line">        android:icon=&quot;@drawable/ic_launcher&quot;</div><div class="line">        android:label=&quot;@string/app_name&quot;</div><div class="line">        android:theme=&quot;@style/AppTheme&quot; &gt;</div><div class="line">        &lt;activity</div><div class="line">            android:name=&quot;.MainActivity&quot;</div><div class="line">            android:label=&quot;@string/app_name&quot; &gt;</div><div class="line">            &lt;intent-filter&gt;</div><div class="line">                &lt;action android:name=&quot;android.intent.action.MAIN&quot; /&gt;</div><div class="line"></div><div class="line">                &lt;category android:name=&quot;android.intent.category.LAUNCHER&quot; /&gt;</div><div class="line">            &lt;/intent-filter&gt;</div><div class="line">        &lt;/activity&gt;</div><div class="line">        &lt;service android:name=&quot;com.abc.service.MyStartService&quot;&gt;&lt;/service&gt;</div><div class="line">    &lt;/application&gt;</div><div class="line"></div><div class="line">&lt;/manifest&gt;</div></pre></td></tr></table></figure>
<p>可在LogCat中看到执行情况。</p>
<h1 id="bind启动"><a href="#Bind启动" class="headerlink" title="Bind启动"></a>Bind启动</h1><p>注册新类</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;service android:name=&quot;com.abc.service.MyBindService&quot;&gt;&lt;/service&gt;</div></pre></td></tr></table></figure>
<p>MyBindService.java</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div></pre></td><td class="code"><pre><div class="line">package com.abc.service;</div><div class="line"></div><div class="line">import android.app.Service;</div><div class="line">import android.content.Intent;</div><div class="line">import android.content.ServiceConnection;</div><div class="line">import android.os.Binder;</div><div class="line">import android.os.IBinder;</div><div class="line">import android.util.Log;</div><div class="line"></div><div class="line">public class MyBindService extends Service &#123;</div><div class="line">	@Override</div><div class="line">	public void onCreate() &#123;</div><div class="line">		// TODO Auto-generated method stub</div><div class="line">		super.onCreate();</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	public class MyBinder extends Binder &#123;</div><div class="line">		public MyBindService getService() &#123;</div><div class="line">			return MyBindService.this;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	@Override</div><div class="line">	public IBinder onBind(Intent intent) &#123;</div><div class="line">		// TODO Auto-generated method stub</div><div class="line">		Log.i(&quot;info&quot;, &quot;onBind--onCreate()&quot;);</div><div class="line">		return new MyBinder();</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	@Override</div><div class="line">	public void unbindService(ServiceConnection conn) &#123;</div><div class="line">		// TODO Auto-generated method stub</div><div class="line">		Log.i(&quot;info&quot;, &quot;BindService--unbindService()&quot;);</div><div class="line">		super.unbindService(conn);</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	@Override</div><div class="line">	public void onDestroy() &#123;</div><div class="line">		// TODO Auto-generated method stub</div><div class="line">		Log.i(&quot;info&quot;, &quot;BindService--onDestroy()&quot;);</div><div class="line">		super.onDestroy();</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	public void Play() &#123;</div><div class="line">		Log.i(&quot;info&quot;, &quot;播放&quot;);</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	public void Pause() &#123;</div><div class="line">		Log.i(&quot;info&quot;, &quot;暂停&quot;);</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	public void Pervious() &#123;</div><div class="line">		Log.i(&quot;info&quot;, &quot;上一首&quot;);</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	public void next() &#123;</div><div class="line">		Log.i(&quot;info&quot;, &quot;下一首&quot;);</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>MainActivity.java</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div></pre></td><td class="code"><pre><div class="line">package com.abc.service;</div><div class="line"></div><div class="line">import com.abc.service.MyBindService.MyBinder;</div><div class="line"></div><div class="line">import android.app.Activity;</div><div class="line">import android.app.Service;</div><div class="line">import android.content.ComponentName;</div><div class="line">import android.content.Intent;</div><div class="line">import android.content.ServiceConnection;</div><div class="line">import android.os.Bundle;</div><div class="line">import android.os.IBinder;</div><div class="line">import android.view.Menu;</div><div class="line">import android.view.MenuItem;</div><div class="line">import android.view.View;</div><div class="line"></div><div class="line">public class MainActivity extends Activity &#123;</div><div class="line">	Intent intent1;</div><div class="line">	Intent intent2;</div><div class="line">	MyBindService service;</div><div class="line">	ServiceConnection conn = new ServiceConnection() &#123;</div><div class="line"></div><div class="line">		@Override // 当启动源跟Service的连接意外丢失的时候会调用这个方法</div><div class="line">		// 比如当Service崩溃了或者被强行杀死了</div><div class="line">		public void onServiceDisconnected(ComponentName name) &#123;</div><div class="line">			// TODO Auto-generated method stub</div><div class="line"></div><div class="line">		&#125;</div><div class="line"></div><div class="line">		@Override // 当启动页跟Service成功连接之后将会在自动调用这个方法</div><div class="line">		public void onServiceConnected(ComponentName name, IBinder binder) &#123;</div><div class="line">			// TODO Auto-generated method stub</div><div class="line">			service = ((MyBinder) binder).getService();</div><div class="line">		&#125;</div><div class="line">	&#125;;</div><div class="line"></div><div class="line">	@Override</div><div class="line">	protected void onCreate(Bundle savedInstanceState) &#123;</div><div class="line">		super.onCreate(savedInstanceState);</div><div class="line">		setContentView(R.layout.activity_main);</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	public void doClick(View v) &#123;</div><div class="line">		switch (v.getId()) &#123;</div><div class="line">		case R.id.start:</div><div class="line">			intent1 = new Intent(MainActivity.this, MyStartService.class);</div><div class="line">			startService(intent1);</div><div class="line">			break;</div><div class="line"></div><div class="line">		case R.id.stop:</div><div class="line">			stopService(intent1);</div><div class="line">			break;</div><div class="line"></div><div class="line">		case R.id.play:</div><div class="line">			service.Play();</div><div class="line">			break;</div><div class="line"></div><div class="line">		case R.id.pause:</div><div class="line">			service.Pause();</div><div class="line">			break;</div><div class="line"></div><div class="line">		case R.id.pervious:</div><div class="line">			service.Pervious();</div><div class="line">			break;</div><div class="line"></div><div class="line">		case R.id.next:</div><div class="line">			service.next();</div><div class="line">			break;</div><div class="line"></div><div class="line">		case R.id.bind:</div><div class="line">			intent2 = new Intent(MainActivity.this, MyBindService.class);</div><div class="line">			bindService(intent2, conn, Service.BIND_AUTO_CREATE);</div><div class="line">			break;</div><div class="line"></div><div class="line">		case R.id.unbind:</div><div class="line">			unbindService(conn);</div><div class="line">			break;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	@Override</div><div class="line">	public boolean onCreateOptionsMenu(Menu menu) &#123;</div><div class="line">		// Inflate the menu; this adds items to the action bar if it is present.</div><div class="line">		getMenuInflater().inflate(R.menu.main, menu);</div><div class="line">		return true;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	@Override</div><div class="line">	public boolean onOptionsItemSelected(MenuItem item) &#123;</div><div class="line">		// Handle action bar item clicks here. The action bar will</div><div class="line">		// automatically handle clicks on the Home/Up button, so long</div><div class="line">		// as you specify a parent activity in AndroidManifest.xml.</div><div class="line">		int id = item.getItemId();</div><div class="line">		if (id == R.id.action_settings) &#123;</div><div class="line">			return true;</div><div class="line">		&#125;</div><div class="line">		return super.onOptionsItemSelected(item);</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><strong>UnBindService只能点击一次，否则会报错。</strong></p>
<h1 id="两种方法混用"><a href="#两种方法混用" class="headerlink" title="两种方法混用"></a>两种方法混用</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div></pre></td><td class="code"><pre><div class="line">package com.abc.service;</div><div class="line"></div><div class="line">import com.abc.service.MyBindService.MyBinder;</div><div class="line"></div><div class="line">import android.app.Activity;</div><div class="line">import android.app.Service;</div><div class="line">import android.content.ComponentName;</div><div class="line">import android.content.Intent;</div><div class="line">import android.content.ServiceConnection;</div><div class="line">import android.os.Bundle;</div><div class="line">import android.os.IBinder;</div><div class="line">import android.view.Menu;</div><div class="line">import android.view.MenuItem;</div><div class="line">import android.view.View;</div><div class="line"></div><div class="line">public class MainActivity extends Activity &#123;</div><div class="line">	Intent intent1;</div><div class="line">	Intent intent2;</div><div class="line">	MyBindService service;</div><div class="line">	ServiceConnection conn = new ServiceConnection() &#123;</div><div class="line"></div><div class="line">		@Override // 当启动源跟Service的连接意外丢失的时候会调用这个方法</div><div class="line">		// 比如当Service崩溃了或者被强行杀死了</div><div class="line">		public void onServiceDisconnected(ComponentName name) &#123;</div><div class="line">			// TODO Auto-generated method stub</div><div class="line"></div><div class="line">		&#125;</div><div class="line"></div><div class="line">		@Override // 当启动页跟Service成功连接之后将会在自动调用这个方法</div><div class="line">		public void onServiceConnected(ComponentName name, IBinder binder) &#123;</div><div class="line">			// TODO Auto-generated method stub</div><div class="line">			service = ((MyBinder) binder).getService();</div><div class="line">		&#125;</div><div class="line">	&#125;;</div><div class="line"></div><div class="line">	@Override</div><div class="line">	protected void onCreate(Bundle savedInstanceState) &#123;</div><div class="line">		super.onCreate(savedInstanceState);</div><div class="line">		setContentView(R.layout.activity_main);</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	public void doClick(View v) &#123;</div><div class="line">		switch (v.getId()) &#123;</div><div class="line">		case R.id.start:</div><div class="line">			intent1 = new Intent(MainActivity.this, MyStartService.class);</div><div class="line">			startService(intent1);</div><div class="line">			break;</div><div class="line"></div><div class="line">		case R.id.stop:</div><div class="line">			stopService(intent1);</div><div class="line">			break;</div><div class="line"></div><div class="line">		case R.id.play:</div><div class="line">			service.Play();</div><div class="line">			break;</div><div class="line"></div><div class="line">		case R.id.pause:</div><div class="line">			service.Pause();</div><div class="line">			break;</div><div class="line"></div><div class="line">		case R.id.pervious:</div><div class="line">			service.Pervious();</div><div class="line">			break;</div><div class="line"></div><div class="line">		case R.id.next:</div><div class="line">			service.next();</div><div class="line">			break;</div><div class="line"></div><div class="line">		case R.id.bind:</div><div class="line">			intent2 = new Intent(MainActivity.this, MyBindService.class);</div><div class="line">			startService(intent2);</div><div class="line">			bindService(intent2, conn, Service.BIND_AUTO_CREATE);</div><div class="line">			break;</div><div class="line"></div><div class="line">		case R.id.unbind:</div><div class="line">			unbindService(conn);</div><div class="line">			break;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	@Override</div><div class="line">	protected void onDestroy() &#123;</div><div class="line">		// TODO Auto-generated method stub</div><div class="line">		stopService(intent2);</div><div class="line">		unbindService(conn);</div><div class="line">		super.onDestroy();</div><div class="line">	&#125;</div><div class="line">	@Override</div><div class="line">	public boolean onCreateOptionsMenu(Menu menu) &#123;</div><div class="line">		// Inflate the menu; this adds items to the action bar if it is present.</div><div class="line">		getMenuInflater().inflate(R.menu.main, menu);</div><div class="line">		return true;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	@Override</div><div class="line">	public boolean onOptionsItemSelected(MenuItem item) &#123;</div><div class="line">		// Handle action bar item clicks here. The action bar will</div><div class="line">		// automatically handle clicks on the Home/Up button, so long</div><div class="line">		// as you specify a parent activity in AndroidManifest.xml.</div><div class="line">		int id = item.getItemId();</div><div class="line">		if (id == R.id.action_settings) &#123;</div><div class="line">			return true;</div><div class="line">		&#125;</div><div class="line">		return super.onOptionsItemSelected(item);</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;div align=&quot;left&quot;&gt;&lt;br&gt;&lt;img src=&quot;https://timgsa.baidu.com/timg?image&amp;quality=80&amp;size=b9999_10000&amp;sec=1493829797406&amp;di=c1112aa632e463c9a69b23a84b37c681&amp;imgtype=0&amp;src=http%3A%2F%2Fs15.sinaimg.cn%2Fmiddle%2F448dd084gaa5d8b13a09e%26690&quot; width=&quot;300&quot; height=&quot;180&quot; style=&quot;float:right;&quot;/&gt;&lt;br&gt;　　根据广大程序员经验，初学者请告别Eclipse，拥抱Android Studio！&lt;br&gt;　　原因：&lt;br&gt;　　1. 未来是Android Studio的天下（Google自己出品）。&lt;br&gt;　　2. Eclipse的配置和相关安装可以磨灭初学者一半的耐心，简直是拦路虎。（比如和我一样做类似题目毕设的同学已经哭晕在厕所）&lt;br&gt;　　3. 促使你换一台高配电脑。（心累，Android Studio在垃圾本上跑，几分钟编译一次，卡到怀疑人生，其实垃圾本四年前还是一条能跑lol的好本本，岁月催laptop老）&lt;br&gt; &lt;/div&gt;
    
    </summary>
    
      <category term="互联网" scheme="http://hubojing.github.io/categories/%E4%BA%92%E8%81%94%E7%BD%91/"/>
    
    
      <category term="Android" scheme="http://hubojing.github.io/tags/Android/"/>
    
      <category term="eclipse" scheme="http://hubojing.github.io/tags/eclipse/"/>
    
  </entry>
  
  <entry>
    <title>MFC绘制时钟</title>
    <link href="http://hubojing.github.io/2017/04/23/MFC%E7%BB%98%E5%88%B6%E6%97%B6%E9%92%9F/"/>
    <id>http://hubojing.github.io/2017/04/23/MFC绘制时钟/</id>
    <published>2017-04-23T08:14:07.000Z</published>
    <updated>2017-04-27T12:31:16.000Z</updated>
    
    <content type="html"><![CDATA[<div align="left"><br><img src="http://img.blog.csdn.net/20170424220400837?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" width="300" height="180" style="float:right;"><br><br> 　　使用GDI接口在视图上绘制一个时钟。<br>　　<br><br><br> </div>

<a id="more"></a>
<blockquote>
<p>　　GDI是Graphics Device Interface的缩写，含义是图形设备接口，它的主要任务是负责系统与绘图程序之间的信息交换，处理所有Windows程序的图形输出。<br>　　在Windows操作系统下，绝大多数具备图形界面的应用程序都离不开GDI，我们利用GDI所提供的众多函数就可以方便的在屏幕、打印机及其它输出设备上输出图形，文本等操作。<br>GDI函数大致可分类为：<br>　　设备上下文函数(如GetDC、CreateDC、DeleteDC)、 画线函数(如LineTo、Polyline、Arc)、填充画图函数(如Ellipse、FillRect、Pie)、画图属性函数(如SetBkColor、SetBkMode、SetTextColor)、文本、字体函数(如TextOut、GetFontData)、位图函数(如SetPixel、BitBlt、StretchBlt)、坐标函数(如DPtoLP、LPtoDP、ScreenToClient、ClientToScreen)、映射函数(如SetMapMode、SetWindowExtEx、SetViewportExtEx)、元文件函数(如PlayMetaFile、SetWinMetaFileBits)、区域函数(如FillRgn、FrameRgn、InvertRgn)、路径函数(如BeginPath、EndPath、StrokeAndFillPath)、裁剪函数(如SelectClipRgn、SelectClipPath)等。<br>                                            　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　——百度百科</p>
</blockquote>
<p>最初想法：<br>建立一个单文档工程，在OnDraw利用<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="function">CClientDC <span class="title">dc</span><span class="params">(<span class="keyword">this</span>)</span></span>;</div><div class="line">dc.Ellipse(CRect(<span class="number">100</span>,<span class="number">100</span>,<span class="number">500</span>,<span class="number">500</span>));</div></pre></td></tr></table></figure></p>
<p>画圆，但是打开的窗口太大了。于是，想初始化窗口，在CMainFrame里的PreCreateWindow设置窗口大小：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">BOOL CMainFrame::PreCreateWindow(CREATESTRUCT&amp; cs)</div><div class="line">&#123;</div><div class="line">	<span class="keyword">if</span>( !CFrameWnd::PreCreateWindow(cs) )</div><div class="line">		<span class="keyword">return</span> FALSE;</div><div class="line">	<span class="comment">// <span class="doctag">TODO:</span> Modify the Window class or styles here by modifying</span></div><div class="line">	<span class="comment">//  the CREATESTRUCT cs</span></div><div class="line">	cs.cx = <span class="number">630</span>;</div><div class="line">	cs.cy = <span class="number">680</span>;</div><div class="line"></div><div class="line">	<span class="keyword">return</span> TRUE;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>接下来画钟面上的格子。用MoveTo和LineTo确定线段起始点和终点。我用了一个比较蠢的方法：手算坐标！于是，产生了这样的代码：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">void</span> CClockView::OnDraw(CDC* pDC)</div><div class="line">&#123;</div><div class="line">	CClockDoc* pDoc = GetDocument();</div><div class="line">	ASSERT_VALID(pDoc);</div><div class="line">	<span class="comment">// <span class="doctag">TODO:</span> add draw code for native data here</span></div><div class="line">	<span class="function">CClientDC <span class="title">dc</span><span class="params">(<span class="keyword">this</span>)</span></span>;</div><div class="line">	dc.Ellipse(CRect(<span class="number">100</span>,<span class="number">100</span>,<span class="number">500</span>,<span class="number">500</span>));</div><div class="line">	<span class="comment">//上</span></div><div class="line">	dc.MoveTo(<span class="number">300</span>,<span class="number">140</span>);</div><div class="line">	dc.LineTo(<span class="number">300</span>,<span class="number">100</span>);</div><div class="line">	<span class="comment">//下</span></div><div class="line">	dc.MoveTo(<span class="number">300</span>,<span class="number">460</span>);</div><div class="line">	dc.LineTo(<span class="number">300</span>,<span class="number">500</span>);</div><div class="line">	<span class="comment">//左</span></div><div class="line">	dc.MoveTo(<span class="number">140</span>,<span class="number">300</span>);</div><div class="line">	dc.LineTo(<span class="number">100</span>,<span class="number">300</span>);</div><div class="line">	<span class="comment">//右</span></div><div class="line">	dc.MoveTo(<span class="number">460</span>,<span class="number">300</span>);</div><div class="line">	dc.LineTo(<span class="number">500</span>,<span class="number">300</span>);</div><div class="line">	<span class="comment">//第一区间第二点</span></div><div class="line">	dc.MoveTo(<span class="number">380</span>,<span class="number">300</span><span class="number">-80</span>*<span class="number">1.73</span>);</div><div class="line">	dc.LineTo(<span class="number">400</span>,<span class="number">300</span><span class="number">-100</span>*<span class="number">1.73</span>);</div><div class="line">	<span class="comment">//第一区间第三点</span></div><div class="line">	dc.MoveTo(<span class="number">300</span>+<span class="number">80</span>*<span class="number">1.73</span>,<span class="number">220</span>);</div><div class="line">	dc.LineTo(<span class="number">300</span>+<span class="number">100</span>*<span class="number">1.73</span>,<span class="number">200</span>);</div><div class="line">	<span class="comment">//第二区间第二点</span></div><div class="line">	dc.MoveTo(<span class="number">300</span>+<span class="number">80</span>*<span class="number">1.73</span>,<span class="number">380</span>);</div><div class="line">	dc.LineTo(<span class="number">300</span>+<span class="number">100</span>*<span class="number">1.73</span>,<span class="number">400</span>);</div><div class="line">	<span class="comment">//第二区间第三点</span></div><div class="line">	dc.MoveTo(<span class="number">380</span>,<span class="number">300</span>+<span class="number">80</span>*<span class="number">1.73</span>);</div><div class="line">	dc.LineTo(<span class="number">400</span>,<span class="number">300</span>+<span class="number">100</span>*<span class="number">1.73</span>);</div><div class="line">	<span class="comment">//第三区间第二点</span></div><div class="line">	dc.MoveTo(<span class="number">220</span>,<span class="number">300</span>+<span class="number">80</span>*<span class="number">1.73</span>);</div><div class="line">	dc.LineTo(<span class="number">200</span>,<span class="number">300</span>+<span class="number">100</span>*<span class="number">1.73</span>);</div><div class="line">	<span class="comment">//第三区间第三点</span></div><div class="line">	dc.MoveTo(<span class="number">300</span><span class="number">-80</span>*<span class="number">1.73</span>,<span class="number">380</span>);</div><div class="line">	dc.LineTo(<span class="number">300</span><span class="number">-100</span>*<span class="number">1.73</span>,<span class="number">400</span>);</div><div class="line">	<span class="comment">//第四区间第二点</span></div><div class="line">	dc.MoveTo(<span class="number">300</span><span class="number">-80</span>*<span class="number">1.73</span>,<span class="number">220</span>);</div><div class="line">	dc.LineTo(<span class="number">300</span><span class="number">-100</span>*<span class="number">1.73</span>,<span class="number">200</span>);</div><div class="line">	<span class="comment">//第四区间第三点</span></div><div class="line">	dc.MoveTo(<span class="number">220</span>,<span class="number">300</span><span class="number">-80</span>*<span class="number">1.73</span>);</div><div class="line">	dc.LineTo(<span class="number">200</span>,<span class="number">300</span><span class="number">-100</span>*<span class="number">1.73</span>);</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>[连三角函数都近似等于的我……等会儿会谈优化问题]</p>
<p>效果是这样：<br><img src="http://img.blog.csdn.net/20170423165107245?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<p>在视类添加ＷＭ_CREATE响应函数，设置一个定时器，1秒发送一次消息。<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">int</span> CClockView::OnCreate(LPCREATESTRUCT lpCreateStruct) </div><div class="line">&#123;</div><div class="line">	<span class="keyword">if</span> (CView::OnCreate(lpCreateStruct) == <span class="number">-1</span>)</div><div class="line">		<span class="keyword">return</span> <span class="number">-1</span>;</div><div class="line">	</div><div class="line">	<span class="comment">// <span class="doctag">TODO:</span> Add your specialized creation code here</span></div><div class="line">	SetTimer(<span class="number">1</span>, <span class="number">1000</span>, <span class="literal">NULL</span>);</div><div class="line"></div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>因为指针是在动的，所以要及时刷新页面，在视类添加WM_TIMER响应函数：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">void</span> CClockView::OnTimer(UINT nIDEvent) </div><div class="line">&#123;</div><div class="line">	<span class="comment">// <span class="doctag">TODO:</span> Add your message handler code here and/or call default</span></div><div class="line">	InvalidateRect(<span class="literal">NULL</span>, TRUE);</div><div class="line">	UpdateWindow();</div><div class="line"></div><div class="line">	CView::OnTimer(nIDEvent);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>为了和系统时间一致，就要获取时间，在OnDraw中加入：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">CTime Time = CTime::GetCurrentTime();</div></pre></td></tr></table></figure></p>
<p>接下来就是创建三个指针：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">double</span> Radians;</div><div class="line"></div><div class="line"><span class="comment">//时针</span></div><div class="line">Radians = Time.GetHour() + Time.GetMinute()/<span class="number">60.0</span> + Time.GetSecond()/<span class="number">3600.0</span>;</div><div class="line">Radians *= <span class="number">2</span> * <span class="number">3.14</span> / <span class="number">12.0</span>;</div><div class="line">dc.MoveTo(<span class="number">300</span>, <span class="number">300</span>);</div><div class="line">dc.LineTo(<span class="number">300</span> + (<span class="keyword">int</span>)((<span class="keyword">double</span>)<span class="number">100</span> * <span class="built_in">sin</span>(Radians)), <span class="number">300</span> - (<span class="keyword">int</span>)((<span class="keyword">double</span>)<span class="number">100</span> * <span class="built_in">cos</span>(Radians)));  <span class="comment">//取半径的1/2</span></div><div class="line"></div><div class="line"><span class="comment">//分针</span></div><div class="line">Radians = Time.GetMinute() + Time.GetSecond()/<span class="number">60</span>;</div><div class="line">Radians *= <span class="number">2</span> * <span class="number">3.14</span> / <span class="number">60.0</span>;</div><div class="line">dc.MoveTo(<span class="number">300</span>, <span class="number">300</span>);</div><div class="line">dc.LineTo(<span class="number">300</span> + (<span class="keyword">int</span>)((<span class="keyword">double</span>)<span class="number">150</span> * <span class="built_in">sin</span>(Radians)), <span class="number">300</span> - (<span class="keyword">int</span>)((<span class="keyword">double</span>)<span class="number">150</span> * <span class="built_in">cos</span>(Radians)));	<span class="comment">//取半径的3/4</span></div><div class="line"></div><div class="line"><span class="comment">//秒针</span></div><div class="line">Radians = Time.GetSecond();</div><div class="line">Radians *= <span class="number">2</span> * <span class="number">3.14</span> / <span class="number">60.0</span>;</div><div class="line">dc.MoveTo(<span class="number">300</span>, <span class="number">300</span>);</div><div class="line">dc.LineTo(<span class="number">300</span> + (<span class="keyword">int</span>)((<span class="keyword">double</span>)<span class="number">190</span> * <span class="built_in">sin</span>(Radians)), <span class="number">300</span> - (<span class="keyword">int</span>)((<span class="keyword">double</span>)<span class="number">190</span> * <span class="built_in">cos</span>(Radians))); <span class="comment">//取半径的19/20</span></div></pre></td></tr></table></figure></p>
<p>为了三角函数能用，在函数头部添加<code>#include &quot;math.h&quot;</code>。<br><img src="http://img.blog.csdn.net/20170423180359516?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<p>美化界面：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">BOOL CClockApp::InitInstance()</div><div class="line">&#123;</div><div class="line">…</div><div class="line">	m_pMainWnd-&gt;SetWindowText(<span class="string">"博靖牌时钟 V1.0"</span>);</div><div class="line"></div><div class="line">	<span class="keyword">return</span> TRUE;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>隐藏菜单、状态栏、工具条：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">int</span> CMainFrame::OnCreate(LPCREATESTRUCT lpCreateStruct)</div><div class="line">&#123;</div><div class="line">	…</div><div class="line">	</div><div class="line">	SetMenu(<span class="literal">NULL</span>); <span class="comment">//隐藏菜单  </span></div><div class="line">    ShowControlBar(&amp;m_wndToolBar,FALSE,FALSE); <span class="comment">//隐藏工具条  </span></div><div class="line">    ShowControlBar(&amp;m_wndStatusBar,FALSE,FALSE); <span class="comment">//隐藏状态栏  </span></div><div class="line"></div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>效果：<br><img src="http://img.blog.csdn.net/20170423202811199?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<p>详解：<br>InvalidateRect是一个函数，该函数向指定的窗体更新区域添加一个矩形，然后窗口客户区域的这一部分将被重新绘制。</p>
<p>ShowControlBar：<br>void ShowControlBar(CControlBar* pBar,BOOL bShow,Bool bDelay);<br>参数：<br>pBar 指向要显示或隐含的控件条<br>bShow 如果为TRUE ,指定控件条将显示；如果为FALSE，则隐藏。<br>bDelay 如果为TRUE，延迟显示控件条；如果为FALSE,则立即显示<br>说明：<br>调用该函数显示或隐藏一个控件条。</p>
<p>缺点：1.不能修改指针和线条样式（例如颜色、粗细等）。<br>2.窗口拉伸后，钟面不能随窗口拉伸。</p>
<p>改进版：<br><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div></pre></td><td class="code"><pre><div class="line">void CClock2View::OnDraw(CDC* pDC)</div><div class="line">&#123;</div><div class="line">	CClock2Doc* pDoc = GetDocument();</div><div class="line">	ASSERT_VALID(pDoc);</div><div class="line">	// TODO: add draw code for native data here</div><div class="line">	CRect r1;  </div><div class="line">    GetClientRect(&amp;r1);</div><div class="line">	</div><div class="line">	CTime Time = CTime::GetCurrentTime();  </div><div class="line">	</div><div class="line">	//创建画笔</div><div class="line">	CPen pen(PS_SOLID, 10, RGB(139, 115, 8));  </div><div class="line">	CPen *pOldPen = pDC-&gt;SelectObject(&amp;pen);  </div><div class="line">	</div><div class="line">	//创建钟面</div><div class="line">	pDC-&gt;Ellipse(CRect(30, 30, r1.right-30, r1.bottom-30));</div><div class="line">	CPoint pt = r1.CenterPoint();</div><div class="line">	pDC-&gt;SetTextColor(RGB(255,0,0));  </div><div class="line">	CString strNumber;</div><div class="line">	CSize size;</div><div class="line">	double Radians;</div><div class="line"></div><div class="line">	//设置钟面数字</div><div class="line">	 for (int i = 1; i &lt;= 12; i++)  </div><div class="line">    &#123;  </div><div class="line">        strNumber.Format("%d",i);</div><div class="line">		Radians = (double)i*2*3.14/12.0; </div><div class="line">        size = pDC-&gt;GetTextExtent(strNumber,strNumber.GetLength());  </div><div class="line">		//计算钟点放置位置 </div><div class="line">		//x = CenterX - (size.cx/2) + (int)((double)(CenterX - 20) * sin(Radians));  </div><div class="line">        //y = CenterY - (size.cy/2) - (int)((double)(CenterY - 20) * cos(Radians));  </div><div class="line"></div><div class="line">		double x = pt.x - (size.cx/2) + (int)((double)(pt.x - 70) * sin(Radians));  </div><div class="line">		double y = pt.y - (size.cy/2) - (int)((double)(pt.y - 70) * cos(Radians));  </div><div class="line"></div><div class="line">         </div><div class="line">       //double x = pt.x + (double)(r1.right - 50 - pt.x) * sin(Radians);  </div><div class="line">       //double y = pt.y - (double)(r1.bottom - 60 - pt.y) * cos(Radians);  </div><div class="line">        pDC-&gt;TextOut(x, y, strNumber);</div><div class="line"></div><div class="line">    &#125;  </div><div class="line"> 		</div><div class="line">	//设置钟面上的格子</div><div class="line">		</div><div class="line">	 for (int j = 1; j &lt;= 12; j++)  </div><div class="line">    &#123;  </div><div class="line">		Radians = (double)j*2*3.14/12.0; 	</div><div class="line">        int x = pt.x  + (int)((double)(pt.x - 30) * sin(Radians));  </div><div class="line">		int y = pt.y  - (int)((double)(pt.y - 30) * cos(Radians));  </div><div class="line">		int m = pt.x  + (int)((double)(pt.x - 50) * sin(Radians));  </div><div class="line">		int n = pt.y  - (int)((double)(pt.y - 50) * cos(Radians));  </div><div class="line">		pDC-&gt;MoveTo(m, n);</div><div class="line">		pDC-&gt;LineTo(x, y);</div><div class="line">		</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	//时针</div><div class="line">	 CPen HourPen(PS_SOLID, 6, RGB(255, 20, 147));  </div><div class="line">    pDC-&gt;SelectObject(&amp;HourPen);  </div><div class="line">	Radians = Time.GetHour() + Time.GetMinute()/60.0 + Time.GetSecond()/3600.0;</div><div class="line">	Radians *= 2 * 3.14 / 12.0;</div><div class="line">	pDC-&gt;MoveTo(pt.x, pt.y);  </div><div class="line">    pDC-&gt;LineTo(pt.x + (int)((double)(pt.x/3) * sin(Radians)), pt.y - (int)((double)(pt.y/3) * cos(Radians)));  </div><div class="line"></div><div class="line">	//分针</div><div class="line">	CPen MinPen(PS_SOLID, 4, RGB(78, 238, 148));  </div><div class="line">    pDC-&gt;SelectObject(&amp;MinPen);  </div><div class="line">	Radians = Time.GetMinute() + Time.GetSecond()/60;</div><div class="line">	Radians *= 2 * 3.14 / 60.0;</div><div class="line">	pDC-&gt;MoveTo(pt.x, pt.y);  </div><div class="line">    pDC-&gt;LineTo(pt.x + (int)((double)(pt.y*1/2) * sin(Radians)), pt.y - (int)((double)(pt.y*1/2) * cos(Radians)));  </div><div class="line"></div><div class="line">	//秒针</div><div class="line">	CPen SecPen(PS_SOLID, 2, RGB(0, 0, 205));  </div><div class="line">    pDC-&gt;SelectObject(&amp;SecPen); </div><div class="line">	Radians = Time.GetSecond();</div><div class="line">	Radians *= 2 * 3.14 / 60.0;</div><div class="line">	pDC-&gt;MoveTo(pt.x, pt.y);  </div><div class="line">    pDC-&gt;LineTo(pt.x + (int)((double)(pt.x*2/3) * sin(Radians)), pt.y - (int)((double)(pt.y*2/3) * cos(Radians)));  </div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>详解：<br>弧长公式：时针：α=l/r=(2πr/12)/r=2π/12  分针、秒针同理。<br>GetTextExtent<br>函数功能：使用该函数获得所选字体中指定字符串的高度和宽度<br>函数原型一：CSize GetTextExtent(LPCTSTR lpszString, int nCount) const；<br>参数：<br>lpszString是字符串的指针，也可以用CString 对象<br>nCount是指字符串的长度<br>函数原型二： CSize GetTextExtent( const CString&amp; str) const;<br>参数：<br>str是一个字符串对象，包含指定的字符。<br>返回值：<br>以逻辑单位返回字符串的尺寸，保存在一个CSize对象中。</p>
<p>TextOut，函数名。该函数用当前选择的字体、背景颜色和正文颜色将一个字符串写到指定位置。</p>
<p>效果：<br><img src="http://img.blog.csdn.net/20170424220400837?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<p>值得改进处：<br>1.每秒刷新时整个频幕闪动较大。<br>2.可以突出12、3、6、9的格子长度。<br>3.调整数字的大小和字体。<br>4.指针做的更美观，考虑用位图或图片替代。</p>
]]></content>
    
    <summary type="html">
    
      &lt;div align=&quot;left&quot;&gt;&lt;br&gt;&lt;img src=&quot;http://img.blog.csdn.net/20170424220400837?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast&quot; width=&quot;300&quot; height=&quot;180&quot; style=&quot;float:right;&quot;/&gt;&lt;br&gt;&lt;br&gt; 　　使用GDI接口在视图上绘制一个时钟。&lt;br&gt;　　&lt;br&gt;&lt;br&gt;&lt;br&gt; &lt;/div&gt;
    
    </summary>
    
      <category term="互联网" scheme="http://hubojing.github.io/categories/%E4%BA%92%E8%81%94%E7%BD%91/"/>
    
    
      <category term="MFC" scheme="http://hubojing.github.io/tags/MFC/"/>
    
      <category term="C++" scheme="http://hubojing.github.io/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>折腾才是人生</title>
    <link href="http://hubojing.github.io/2017/04/21/%E6%8A%98%E8%85%BE%E6%89%8D%E6%98%AF%E4%BA%BA%E7%94%9F/"/>
    <id>http://hubojing.github.io/2017/04/21/折腾才是人生/</id>
    <published>2017-04-20T16:02:54.000Z</published>
    <updated>2017-04-20T16:35:27.230Z</updated>
    
    <content type="html"><![CDATA[<div align="left"><br><img src="https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1492716014892&di=39eb7cb27e728bbbea6be20b6d2501c8&imgtype=0&src=http%3A%2F%2Fjrsh.hangzhou.com.cn%2Fsale%2Fcontent%2Fattachement%2Fjpg%2Fsite2%2F20151215%2F90b11c6dae5a17da23d850.jpg" width="300" height="180" style="float:right;"><br><br> 　　其实是一篇吐槽贴和一个标准的Flag。<br>　　<br><br><br> </div>

<a id="more"></a>
<p>　　虽然现在天色已深，哦，应该说是凌晨了，明天还要早起。但！我真的还是想吐槽……</p>
<p>　　一篇文章怎么可以没有目录？ 啊？啊？啊？ 要我一篇上万字的文章怎么翻…… （于是抛弃了yilia,hueman）<br>（认真脸：我试过给hueman加目录的，一个toc函数，明明很简单的样子……然后就把主题玩崩了，其实要还原还是可以的，只是我对没目录的怨念很深呐）</p>
<p>　　为什么每一种主题评论的格式都不能统一一下……我终于找到每换一次主题就丢评论的解决方法了……（虽然数据量有点庞大，周末看有没有时间搞定）</p>
<p>　　为什么换个主题，不蒜子计数就从头开始！（尤其是近期更换频繁）现在都打算不显示点击数（网站点击和每篇文章浏览量）了（几千的点击噢，好气）……（百度统计什么的用过，然而还是直接显示出来方便（主要是显得网站有人气哈哈哈）其实到底有几个人看，无所谓啦~）</p>
<p>　　快五月了，好愁，多说到底用什么替换？？</p>
<p>　　另外，真的，图床贴图还没有CSDN博客上图来得方便。（比如刚才上传三十几张图，要是图床的话自己要不停复制外链，那效率可想而知。）</p>
<p>　　综上所述，<br>　　<strong>这都是自己不会写主题的后果！！！</strong></p>
<p>　　Flag: 　　<br>　　现在不敢说完全独立写一个主题出来（主要是时间、精力、学习工作、学习方向的问题），毕竟博客以文章质量为主，但我希望今年能修改出自己满意的样子来……</p>
<p><span id="busuanzi_container_page_pv"><br>本文已被阅读 <span id="busuanzi_value_page_pv"></span> 次。感谢您的点击！</span></p>
]]></content>
    
    <summary type="html">
    
      &lt;div align=&quot;left&quot;&gt;&lt;br&gt;&lt;img src=&quot;https://timgsa.baidu.com/timg?image&amp;quality=80&amp;size=b9999_10000&amp;sec=1492716014892&amp;di=39eb7cb27e728bbbea6be20b6d2501c8&amp;imgtype=0&amp;src=http%3A%2F%2Fjrsh.hangzhou.com.cn%2Fsale%2Fcontent%2Fattachement%2Fjpg%2Fsite2%2F20151215%2F90b11c6dae5a17da23d850.jpg&quot; width=&quot;300&quot; height=&quot;180&quot; style=&quot;float:right;&quot;/&gt;&lt;br&gt;&lt;br&gt; 　　其实是一篇吐槽贴和一个标准的Flag。&lt;br&gt;　　&lt;br&gt;&lt;br&gt;&lt;br&gt; &lt;/div&gt;
    
    </summary>
    
      <category term="杂谈" scheme="http://hubojing.github.io/categories/%E6%9D%82%E8%B0%88/"/>
    
    
      <category term="主题" scheme="http://hubojing.github.io/tags/%E4%B8%BB%E9%A2%98/"/>
    
  </entry>
  
  <entry>
    <title>MFC傻瓜式教程</title>
    <link href="http://hubojing.github.io/2017/04/13/MFC%E5%82%BB%E7%93%9C%E5%BC%8F%E6%95%99%E7%A8%8B/"/>
    <id>http://hubojing.github.io/2017/04/13/MFC傻瓜式教程/</id>
    <published>2017-04-13T14:26:01.000Z</published>
    <updated>2017-08-13T11:45:32.156Z</updated>
    
    <content type="html"><![CDATA[<div align="left"><br><img src="http://img.blog.csdn.net/20170413231922633?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" width="300" height="180" style="float:right;"><br><br> </div>


<blockquote>
<p>2017.8.13已更新新章节</p>
</blockquote>
<p>　　<br>　　本教程重操作，轻理论，为操作减负。需了解详细原理的朋友可以自行看各种书籍。<br>　　直接上菜。</p>
<a id="more"></a>
<p>MFC：Microsoft Foundation Class ，微软基础类库。</p>
<h1 id="对话框"><a href="#对话框" class="headerlink" title="对话框"></a>对话框</h1><h2 id="对话框的创建和显示"><a href="#对话框的创建和显示" class="headerlink" title="对话框的创建和显示"></a>对话框的创建和显示</h2><ol>
<li>新建MFC AppWizard(exe)工程，单文档类型。工程名：Mybole。编译运行。<br><img src="http://img.blog.csdn.net/20170413231922633?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="新建"></li>
<li><p>点击帮助-关于Mybole。这是MFC自动创建的。<br><img src="http://img.blog.csdn.net/20170413231954758?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="关于"></p>
</li>
<li><p>创建自己的对话框。点击Insert-Resource。选择Dialog，点击New。VC++自动将其标识设置为IDD_DIALOG1，并自动添加到ResourceView-Dialog项中。Dialog项下还有一个对话框资源标识：IDD_ABOUTBOX，即上一步中的“关于”对话框。<br><img src="http://img.blog.csdn.net/20170413232035196?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="Insert Resource对话框"></p>
</li>
</ol>
<p> <img src="http://img.blog.csdn.net/20170413232222055?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="新建的对话框资源"></p>
<ol>
<li>选中对话框本身，右键点击属性。将Caption设置为“测试”。</li>
<li>选择View-ClassWizard，点击create a new class，OK。出现下图，并输入下图选项。<br><img src="http://img.blog.csdn.net/20170413232907845?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="New Class"></li>
<li>在随后出现的MFC ClassWizard对话框上点击OK。<br><img src="http://img.blog.csdn.net/20170413233804513?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="列表"><br><strong>注意</strong>：看看左侧类列表中是否添加好了CTestDlg，否则会影响后续操作。</li>
</ol>
<p>接下来，我们希望在程序中显示这个对话窗口。</p>
<ol>
<li><p>点击右侧菜单Menu，选中IDR_MAINFRAME。点击帮助旁边的虚线框。<br><img src="http://img.blog.csdn.net/20170413233914861?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="Menu"></p>
</li>
<li><p>对虚线框右键属性，修改为下图。<br><img src="http://img.blog.csdn.net/20170413234011986?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="属性"></p>
</li>
<li><p>关闭属性。点击View-ClassWizard（中文是建立类向导），选择CMyboleView，用COMMAND命令消息响应函数。如图。<br><img src="http://img.blog.csdn.net/20170414000004060?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="COMMAND"></p>
</li>
</ol>
<h3 id="模态对话框的创建"><a href="#模态对话框的创建" class="headerlink" title="模态对话框的创建"></a>模态对话框的创建</h3><p>　　需要调用CDialog类的成员函数：DoModal，它能创建并显示一个模态对话框，其返回值将作为CDialog类的另一个成员函数：EndDialog的参数，后者功能是关闭模态对话框。</p>
<p>　　在FileView中选择MyboleView.cpp，编写程序。<br>　　记得在开头添加头文件 #include “testdlg.h” （头文件大小写问题，linux区分，windows不区分）<br> <img src="http://img.blog.csdn.net/20170414000303079?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="编程"><br>　　显示模态对话框的具体实现代码：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">void</span> CMyboleView::OnDialog() </div><div class="line">&#123;</div><div class="line">	<span class="comment">// <span class="doctag">TODO:</span> Add your command handler code here</span></div><div class="line">	CTestDlg dlg;</div><div class="line">	dlg.DoModal();</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>编译运行，点击对话框。会发现若不确认该窗口，将无法点击其他窗口。<br> <img src="http://img.blog.csdn.net/20170414000500779?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="模态对话框1"></p>
<p><img src="http://img.blog.csdn.net/20170414000612202?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="模态对话框2"></p>
<h3 id="非模态对话框的创建"><a href="#非模态对话框的创建" class="headerlink" title="非模态对话框的创建"></a>非模态对话框的创建</h3><p>将上面的模态对话框代码注释掉。</p>
<p>改为：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">void</span> CMyboleView::OnDialog() </div><div class="line">&#123;</div><div class="line">	<span class="comment">// <span class="doctag">TODO:</span> Add your command handler code here</span></div><div class="line">	<span class="comment">//CTestDlg dlg;</span></div><div class="line">	<span class="comment">//dlg.DoModal();</span></div><div class="line"></div><div class="line">	CTestDlg *pDlg = <span class="keyword">new</span> CTestDlg;</div><div class="line">	pDlg-&gt;Create(IDD_DIALOG1,<span class="keyword">this</span>);</div><div class="line">	pDlg-&gt;ShowWindow(SW_SHOW);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p><strong>注意</strong>：需要把之前运行的对话框关掉才能编译成功。</p>
<p>然而，当它生命周期结束时，所保存的内存地址就丢失了，那么程序中也就无法再引用到它所指向的那块内存。于是，我们这样解决该问题。<br><img src="http://img.blog.csdn.net/20170414000901869?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="MFC ClassWizard"></p>
<p><strong>注意</strong>：Message里双击添加函数或者点击add Class…</p>
<p>void CTestDlg::PostNcDestroy()<br>{<br>    // TODO: Add your specialized code here and/or call the base class<br>    delete this;<br>    CDialog::PostNcDestroy();<br>}</p>
<p><strong>区别</strong>：点击确定，对话框都会消失。但是，模态对话框窗口对象被销毁了。对非模态对话框来说，只是隐藏起来了，并未被销毁。<br>因此，若要销毁对话框，若有一个ID为IDOK的按钮，就必须重写基类的OnOK这个虚函数，并在重写的函数中调用DestroyWindow函数，完成销毁。并不要再调用基类的OnOK函数。<br>同样地，若有一个ID为IDCANCEL的按钮，也必须重写基类的OnCancel虚函数，并在重写的函数中调用DestroyWindow函数，完成销毁。并不要再调用基类的OnCancel函数。</p>
<h1 id="动态创建按钮"><a href="#动态创建按钮" class="headerlink" title="动态创建按钮"></a>动态创建按钮</h1><p>注释掉非模态对话框代码，还原模态对话框代码。</p>
<p>点击ResourceView-IDD_DIALOG1，打开资源，用鼠标拖出控件面板上的Button按钮控件，对按钮右键，选择属性，设置如下。<br> <img src="http://img.blog.csdn.net/20170414001008658?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="按钮"></p>
<p>接下来，我们实现当单击Add按钮时，在对话框中动态创建一个按钮这一功能。</p>
<ol>
<li>为CTestDlg类添加一个私有的CButton成员变量。<br>　　点击ClassView标签页右键，如图点击。<br><img src="http://img.blog.csdn.net/20170414001252061?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="ClassView"></li>
</ol>
<p>　　填入信息。<br> <img src="http://img.blog.csdn.net/20170414001335972?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="添加成员变量"></p>
<ol>
<li>添加Add按钮单击消息的响应函数。<br>　　按钮点右键，选ClassWizard（建立类向导），如图。<br><img src="http://img.blog.csdn.net/20170414001137294?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="建立类向导"></li>
</ol>
<p>　　单击Edit Code，即可定位到该函数定义处。<br>　　添加一下代码：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">void</span> CTestDlg::OnBtnAdd() </div><div class="line">&#123;</div><div class="line">	<span class="comment">// <span class="doctag">TODO:</span> Add your control notification handler code here</span></div><div class="line">	m_btn.Create(<span class="string">"New"</span>,BS_DEFPUSHBUTTON | WS_VISIBLE | WS_CHILD,</div><div class="line">				 CRect(<span class="number">0</span>,<span class="number">0</span>,<span class="number">100</span>,<span class="number">100</span>),<span class="keyword">this</span>,<span class="number">123</span>);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>　　为避免多次点击Add出现非法操作，我们需要进行如下步骤。</p>
<ol>
<li><p>为CTestDlg类增加一个私有的BOOL类型成员变量。<br>变量类型：BOOL<br>变量名称：m_bIsCreated<br>Access: private</p>
</li>
<li><p>在TestDlg.cpp中找到构造函数，将m_bIsCreated初始为FALSE。如图所示。<br><img src="http://img.blog.csdn.net/20170415152155489?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
</li>
</ol>
<p>　　或者改为如下亦可。<br>Static BOOL bIsCreated = FALSE;</p>
<ol>
<li>回到Add，双击它，进入代码部分，改之。<figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">void</span> CTestDlg::OnBtnAdd() </div><div class="line">&#123;</div><div class="line">	<span class="comment">// <span class="doctag">TODO:</span> Add your control notification handler code here</span></div><div class="line">	<span class="keyword">if</span>(m_bIsCreated==FALSE)</div><div class="line">	&#123;</div><div class="line">	m_btn.Create(<span class="string">"New"</span>,BS_DEFPUSHBUTTON | WS_VISIBLE | WS_CHILD,</div><div class="line">				CRect(<span class="number">0</span>,<span class="number">0</span>,<span class="number">100</span>,<span class="number">100</span>),<span class="keyword">this</span>,<span class="number">123</span>);</div><div class="line">	m_bIsCreated = TRUE;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">else</span></div><div class="line">	&#123;</div><div class="line">		m_btn.DestroyWindow();</div><div class="line">		m_bIsCreated = FALSE;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
</ol>
<p>　　或者以下亦能实现。<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">void</span> CTestDlg::OnBtnAdd() </div><div class="line">&#123;</div><div class="line">	<span class="comment">// <span class="doctag">TODO:</span> Add your control notification handler code here</span></div><div class="line">	<span class="keyword">if</span>(!m_btn.m_hWnd)</div><div class="line">	&#123;</div><div class="line">	m_btn.Create(<span class="string">"New"</span>,BS_DEFPUSHBUTTON | WS_VISIBLE | WS_CHILD,</div><div class="line">				CRect(<span class="number">0</span>,<span class="number">0</span>,<span class="number">100</span>,<span class="number">100</span>),<span class="keyword">this</span>,<span class="number">123</span>);</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">else</span></div><div class="line">	&#123;</div><div class="line">		m_btn.DestroyWindow();</div><div class="line">	&#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>　　效果：<br>　　<img src="http://img.blog.csdn.net/20170415152224880?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<p>　　点击Add出现New窗口，再点击就销毁。</p>
<h2 id="控件的访问"><a href="#控件的访问" class="headerlink" title="控件的访问"></a>控件的访问</h2><h3 id="控件的调整"><a href="#控件的调整" class="headerlink" title="控件的调整"></a>控件的调整</h3><p>用Layout-Align，Layout-Make Same Size，Layout-Space Evenly里的选项进行调整。<br><img src="http://img.blog.csdn.net/20170415152247131?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<h3 id="静态文本控件"><a href="#静态文本控件" class="headerlink" title="静态文本控件"></a>静态文本控件</h3><p>　　查看三个静态文本框，它们ID相同。我们可以更改第一个静态文本框ID为IDC_NUMBER1，再打开ClassWizard，可以在ObjectIDs看到新ID。<br> <img src="http://img.blog.csdn.net/20170415152324147?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"><br>　　对BN_CLICKED进行Add Function，并Edit Code:</p>
<p>　　此时运行程序点击第一个静态文本框并没有反应。这是因为：<strong>静态文本控件在默认状态下是不发送通告消息的</strong>。</p>
<p>　　为了该控件能向父窗口发送鼠标事件，我们对该文本框右键-属性，切换到styles选项卡，勾上Notify。<br> <img src="http://img.blog.csdn.net/20170415152341882?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<p>　　现在可以显示了：<br>　　点击就改变。<br> <img src="http://img.blog.csdn.net/20170415152354773?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<p>　　<strong>总结：为了使一个静态文本控件能够响应鼠标单击消息，那么需要进行两个特殊的步骤：第一步，改变它的ID；第二步，在它的属性对话框中选中Notify选项。</strong></p>
<h3 id="编辑框控件"><a href="#编辑框控件" class="headerlink" title="编辑框控件"></a>编辑框控件</h3><p>利用上面的对话框实现这样的功能：在前两个编辑框中分别输入一个数字，然后单击Add按钮，对前两个编辑框中的数字求和，并将结果显示在第三个编辑框中。</p>
<h4 id="第一种方式"><a href="#第一种方式" class="headerlink" title="第一种方式"></a>第一种方式</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">void</span> CTestDlg::OnBtnAdd() </div><div class="line">&#123;</div><div class="line">	<span class="keyword">int</span> num1, num2, num3; </div><div class="line">	<span class="keyword">char</span> ch1[<span class="number">10</span>], ch2[<span class="number">10</span>], ch3[<span class="number">10</span>]; </div><div class="line">	GetDlgItem(IDC_EDIT1)-&gt;GetWindowText(ch1,<span class="number">10</span>); </div><div class="line">	GetDlgItem(IDC_EDIT2)-&gt;GetWindowText(ch2,<span class="number">10</span>);</div><div class="line"></div><div class="line">	num1 = atoi(ch1); </div><div class="line">	num2 = atoi(ch2); </div><div class="line">	num3 = num1 + num2; </div><div class="line"></div><div class="line">	itoa(num3,ch3,<span class="number">10</span>);</div><div class="line">	GetDlgItem(IDC_EDIT3)-&gt;SetWindowText(ch3);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>C语言转换函数：atoi 将一个由数字组成的字符串转换为相应的数值<br>itoa 数值转换为文本<br>itoa函数的第三个参数表示转换的进制，数字10表示十进制。</p>
<p>效果：<br> <img src="http://img.blog.csdn.net/20170415152409742?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<h4 id="第二种方式"><a href="#第二种方式" class="headerlink" title="第二种方式"></a>第二种方式</h4><p>　　代码如下：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">void</span> CTestDlg::OnBtnAdd() </div><div class="line">&#123;</div><div class="line">	<span class="keyword">int</span> num1, num2, num3; </div><div class="line">	<span class="keyword">char</span> ch1[<span class="number">10</span>], ch2[<span class="number">10</span>], ch3[<span class="number">10</span>]; </div><div class="line">	<span class="comment">//GetDlgItem(IDC_EDIT1)-&gt;GetWindowText(ch1,10); </span></div><div class="line">	<span class="comment">//GetDlgItem(IDC_EDIT2)-&gt;GetWindowText(ch2,10);</span></div><div class="line">	</div><div class="line">	GetDlgItemText(IDC_EDIT1,ch1,<span class="number">10</span>);</div><div class="line">	GetDlgItemText(IDC_EDIT2,ch2,<span class="number">10</span>);</div><div class="line"></div><div class="line">	num1 = atoi(ch1); </div><div class="line">	num2 = atoi(ch2); </div><div class="line">	num3 = num1 + num2; </div><div class="line"></div><div class="line">	itoa(num3,ch3,<span class="number">10</span>);</div><div class="line">	<span class="comment">//GetDlgItem(IDC_EDIT3)-&gt;SetWindowText(ch3);</span></div><div class="line">	SetDlgItemText(IDC_EDIT3,ch3);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>　　GetDlgItemText 将返回对话框中指定ID的控件上的文本，相当于将上面的GetDlgItem和GetWindowText这两个函数功能组合起来了。<br>与之对应的是SetDlgItemText，用来设置对话框中指定ID的控件上的文本。</p>
<h4 id="第三种方式"><a href="#第三种方式" class="headerlink" title="第三种方式"></a>第三种方式</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">void</span> CTestDlg::OnBtnAdd() </div><div class="line">&#123;</div><div class="line">	<span class="keyword">int</span> num1, num2, num3; </div><div class="line">	<span class="comment">//char ch1[10], ch2[10], ch3[10]; </span></div><div class="line">	<span class="comment">//GetDlgItem(IDC_EDIT1)-&gt;GetWindowText(ch1,10); </span></div><div class="line">	<span class="comment">//GetDlgItem(IDC_EDIT2)-&gt;GetWindowText(ch2,10);</span></div><div class="line">	</div><div class="line">	<span class="comment">//GetDlgItemText(IDC_EDIT1,ch1,10);</span></div><div class="line">	<span class="comment">//GetDlgItemText(IDC_EDIT2,ch2,10);</span></div><div class="line"></div><div class="line">	num1 = GetDlgItemInt(IDC_EDIT1);</div><div class="line">	num2 = GetDlgItemInt(IDC_EDIT2);</div><div class="line"></div><div class="line">	<span class="comment">//num1 = atoi(ch1); </span></div><div class="line">	<span class="comment">//num2 = atoi(ch2); </span></div><div class="line">	num3 = num1 + num2; </div><div class="line"></div><div class="line">	<span class="comment">//itoa(num3,ch3,10);</span></div><div class="line">	<span class="comment">//GetDlgItem(IDC_EDIT3)-&gt;SetWindowText(ch3);</span></div><div class="line">	<span class="comment">//SetDlgItemText(IDC_EDIT3,ch3);</span></div><div class="line">	SetDlgItemInt(IDC_EDIT3,num3);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="第四种方式"><a href="#第四种方式" class="headerlink" title="第四种方式"></a>第四种方式</h4><p>　　将这三个编辑框分别与对话框类的三个成员变量相关联，然后通过这些成员变量来检索和设置编辑框的文本，这是最简单的访问控件的方式。<br>打开ClassWizard对话框，切换到Member Variables选项卡，如图。<br> <img src="http://img.blog.csdn.net/20170415152431039?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"><br>　　首先为IDC_EDIT1编辑框添加一个关联的成员变量，方法是在Control IDs列表中选中IDC_EDIT1，再单击Add Variable按钮，如图。<br><img src="http://img.blog.csdn.net/20170415152451118?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"><br> <img src="http://img.blog.csdn.net/20170415152505259?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<p>　　同样地，为IDC_EDIT2和IDC_EDIT3分别添加好成员变量。<br>　　接着修改代码：</p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">void</span> CTestDlg::OnBtnAdd() </div><div class="line">&#123;</div><div class="line">	UpdateData();</div><div class="line">	m_num3 = m_num1 + m_num2;</div><div class="line">	UpdateData(FALSE);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>　　对编辑框控件中输入的数值设定一个范围：<br>　　打开ClassWizard-Member Variable，选中IDC_EDIT1，下方输入0和100。同样为IDC_EDIT2也设置好。<br><img src="http://img.blog.csdn.net/20170415152522025?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<h4 id="第五种方式"><a href="#第五种方式" class="headerlink" title="第五种方式"></a>第五种方式</h4><p>　　将编辑框控件再与一个变量相关联，代表控件本身。为IDC_EDIT1增加一个控件类型的变量：m_edit1，类别为Control。同样地，也为IDC_EDIT2和IDC_EDIT3添加。<br> <img src="http://img.blog.csdn.net/20170415152547447?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<p>　　修改代码：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">void</span> CTestDlg::OnBtnAdd() </div><div class="line">&#123;</div><div class="line">	<span class="keyword">int</span> num1, num2, num3; </div><div class="line">	<span class="keyword">char</span> ch1[<span class="number">10</span>], ch2[<span class="number">10</span>], ch3[<span class="number">10</span>]; </div><div class="line">	</div><div class="line">	m_edit1.GetWindowText(ch1,<span class="number">10</span>);</div><div class="line">	m_edit2.GetWindowText(ch2,<span class="number">10</span>);</div><div class="line"></div><div class="line">	<span class="comment">//num1 = GetDlgItemInt(IDC_EDIT1);</span></div><div class="line">	<span class="comment">//num2 = GetDlgItemInt(IDC_EDIT2);</span></div><div class="line"></div><div class="line">	num1 = atoi(ch1); </div><div class="line">	num2 = atoi(ch2); </div><div class="line">	num3 = num1 + num2; </div><div class="line"></div><div class="line">	itoa(num3,ch3,<span class="number">10</span>);</div><div class="line">	m_edit3.SetWindowText(ch3);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h4 id="第六种方式"><a href="#第六种方式" class="headerlink" title="第六种方式"></a>第六种方式</h4><p>　　修改代码：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">void</span> CTestDlg::OnBtnAdd() </div><div class="line">&#123;</div><div class="line">	<span class="keyword">int</span> num1, num2, num3; </div><div class="line">	<span class="keyword">char</span> ch1[<span class="number">10</span>], ch2[<span class="number">10</span>], ch3[<span class="number">10</span>]; </div><div class="line"></div><div class="line">	::SendMessage(GetDlgItem(IDC_EDIT1)-&gt;m_hWnd, WM_GETTEXT, <span class="number">10</span>, (LPARAM)ch1);</div><div class="line">	::SendMessage(m_edit2.m_hWnd, WM_GETTEXT, <span class="number">10</span>, (LPARAM)ch2);</div><div class="line"></div><div class="line">	num1 = atoi(ch1); </div><div class="line">	num2 = atoi(ch2); </div><div class="line">	num3 = num1 + num2; </div><div class="line"></div><div class="line">	itoa(num3,ch3,<span class="number">10</span>);</div><div class="line">	m_edit3.SendMessage(WM_SETTEXT, <span class="number">0</span>, (LPARAM)ch3);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h4 id="第七种方式"><a href="#第七种方式" class="headerlink" title="第七种方式"></a>第七种方式</h4><p>　　修改代码：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">void</span> CTestDlg::OnBtnAdd() </div><div class="line">&#123;</div><div class="line">	<span class="keyword">int</span> num1, num2, num3; </div><div class="line">	<span class="keyword">char</span> ch1[<span class="number">10</span>], ch2[<span class="number">10</span>], ch3[<span class="number">10</span>]; </div><div class="line">	</div><div class="line">	SendDlgItemMessage(IDC_EDIT1, WM_GETTEXT, <span class="number">10</span>, (LPARAM)ch1);</div><div class="line">	SendDlgItemMessage(IDC_EDIT2, WM_GETTEXT, <span class="number">10</span>, (LPARAM)ch2);</div><div class="line">	</div><div class="line">num1 = atoi(ch1); </div><div class="line">	num2 = atoi(ch2); </div><div class="line">	num3 = num1 + num2; </div><div class="line"></div><div class="line">	itoa(num3,ch3,<span class="number">10</span>);</div><div class="line">	SendDlgItemMessage(IDC_EDIT3, WM_SETTEXT, <span class="number">0</span>, (LPARAM)ch3);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>　　获得编辑框复选的内容：<br>　　在上述代码最后添加：<br>    SendDlgItemMessage(IDC_EDIT3, EM_SETSEL, 0, -1); //0,-1表示全选若1,3表示选中1-3位复选<br>    m_edit3.SetFocus();</p>
<p>　　效果：<br> <img src="http://img.blog.csdn.net/20170415152614010?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<h4 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h4><p>1    GetDlgItem()-&gt;Get(Set)WindowTest()<br>2    GetDlgItemText()/SetDlgItemText()<br>3    GetDlgItemInt()/SetDlgItemInt()<br>4    将控件和整型变量相关联<br>5    将控件和控件变量相关联<br>6    SendMessage()<br>7    SendDlgItemMessage()<br>　　最常用是1、4、5。在利用MFC编程时，6、7用得少。</p>
<h2 id="对话框伸缩功能的实现"><a href="#对话框伸缩功能的实现" class="headerlink" title="对话框伸缩功能的实现"></a>对话框伸缩功能的实现</h2><p>　　对话框上再添加一个按钮，Caption设置为“收缩&lt;&lt;”点击ClassWizard，添加一个命令相应函数（BN_CLICKED）。具体实现代码为：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">void</span> CTestDlg::OnButton1() </div><div class="line">&#123;</div><div class="line">	CString str; </div><div class="line">	<span class="keyword">if</span>(GetDlgItemText(IDC_BUTTON1,str), str == <span class="string">"收缩&lt;&lt;"</span>)</div><div class="line">	&#123;</div><div class="line">		SetDlgItemText(IDC_BUTTON1, <span class="string">"拓展&gt;&gt;"</span>);</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">else</span></div><div class="line">	&#123;</div><div class="line">		SetDlgItemText(IDC_BUTTON1, <span class="string">"收缩&lt;&lt;"</span>);</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>　　拖动一个图像控件来划分对话框中要动态切除的部分。<br> <img src="http://img.blog.csdn.net/20170415152648992?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<p>　　修改该控件ID为IDC_SEPATATOR，styles选项卡勾上Sunken选项。<br>　　修改代码：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">void</span> CTestDlg::OnButton1() </div><div class="line">&#123;</div><div class="line">	CString str; </div><div class="line">	<span class="keyword">if</span>(GetDlgItemText(IDC_BUTTON1,str), str == <span class="string">"收缩&lt;&lt;"</span>)</div><div class="line">	&#123;</div><div class="line">		SetDlgItemText(IDC_BUTTON1, <span class="string">"拓展&gt;&gt;"</span>);</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">else</span></div><div class="line">	&#123;</div><div class="line">		SetDlgItemText(IDC_BUTTON1, <span class="string">"收缩&lt;&lt;"</span>);</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">static</span> CRect rectLarge;</div><div class="line">	<span class="keyword">static</span> CRect rectSmall;</div><div class="line"></div><div class="line">	<span class="function">CRect <span class="title">rect1</span><span class="params">(<span class="number">10</span>,<span class="number">10</span>,<span class="number">10</span>,<span class="number">10</span>)</span></span>;</div><div class="line">	<span class="function">CRect <span class="title">rect2</span><span class="params">(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>)</span></span>;</div><div class="line"></div><div class="line">	<span class="keyword">if</span>(rectLarge.IsRectNull())</div><div class="line">	&#123;</div><div class="line">		CRect rectSeparator;</div><div class="line">		GetWindowRect(&amp;rectLarge);</div><div class="line">		GetDlgItem(IDC_SEPARATOR)-&gt;GetWindowRect(&amp;rectSeparator);</div><div class="line"></div><div class="line">		rectSmall.left=rectLarge.left;</div><div class="line">		rectSmall.top=rectLarge.top;</div><div class="line">		rectSmall.right=rectLarge.right;</div><div class="line">		rectSmall.bottom=rectSeparator.bottom;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">if</span>(str == <span class="string">"收缩&lt;&lt;"</span>)</div><div class="line">	&#123;</div><div class="line">		SetWindowPos(<span class="literal">NULL</span>, <span class="number">0</span>, <span class="number">0</span>, rectSmall.Width(), rectSmall.Height(), SWP_NOMOVE | SWP_NOZORDER);</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">else</span></div><div class="line">	&#123;</div><div class="line">		SetWindowPos(<span class="literal">NULL</span>, <span class="number">0</span>, <span class="number">0</span>, rectLarge.Width(), rectLarge.Height(), SWP_NOMOVE | SWP_NOZORDER);</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>　　效果：<br> <img src="http://img.blog.csdn.net/20170415152705855?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<p>　　点击“收缩&lt;&lt;”：<br> <img src="http://img.blog.csdn.net/20170415152725793?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<p>　　若希望隐藏分隔条，则设置属性去掉“Visible”前的勾。</p>
<h2 id="输入焦点的传递"><a href="#输入焦点的传递" class="headerlink" title="输入焦点的传递"></a>输入焦点的传递</h2><p>　　为了屏蔽掉默认的回车键关闭对话框这一功能，应该在对话框子类（此处是CTestDlg类）中重写OK按钮的消息响应函数。<br>　　首先点击OK按钮，添加鼠标单击消息响应函数。注释掉原有函数。</p>
<h3 id="法一"><a href="#法一" class="headerlink" title="法一"></a>法一</h3><p>　　在ClassView选项卡的CTestDlg类添加WM_INITDIALOG消息的响应函数。对类右键，选择Add Windows Message Handler，在弹出的框左侧选择WM_INITDIALOG，直接单击Add and Edit，跳转。<br>　　修改代码为：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">void</span> CTestDlg::OnOK() </div><div class="line">&#123;</div><div class="line">	<span class="comment">// <span class="doctag">TODO:</span> Add extra validation here</span></div><div class="line">	</div><div class="line">	<span class="comment">//CDialog::OnOK();</span></div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line">WNDPROC prevProc;</div><div class="line">	<span class="function">LRESULT CALLBACK <span class="title">NewEditProc</span><span class="params">(</span></span></div><div class="line">		HWND hwnd,</div><div class="line">		UINT uMsg,</div><div class="line">		WPARAM wParam,</div><div class="line">		LPARAM lParam</div><div class="line">		)</div><div class="line">	&#123;</div><div class="line">		<span class="keyword">if</span>(uMsg == WM_CHAR &amp;&amp; wParam == <span class="number">0x0d</span>)</div><div class="line">		&#123;</div><div class="line">			::SetFocus(GetNextWindow(hwnd,GW_HWNDNEXT));</div><div class="line">			<span class="keyword">return</span> <span class="number">1</span>;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">else</span></div><div class="line">		&#123;</div><div class="line">			<span class="keyword">return</span> prevProc(hwnd,uMsg,wParam,lParam);</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">BOOL CTestDlg::OnInitDialog() </div><div class="line">&#123;</div><div class="line">	CDialog::OnInitDialog();</div><div class="line">	prevProc=(WNDPROC)SetWindowLong(GetDlgItem(IDC_EDIT1)-&gt;m_hWnd,</div><div class="line">		GWL_WNDPROC, (LONG)NewEditProc);</div><div class="line">	<span class="keyword">return</span> TRUE;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>　　查看第一个编辑框的属性，打开styles选项卡，勾上MultiLine（多行）。即可实现焦点的传递。</p>
<h3 id="法二"><a href="#法二" class="headerlink" title="法二"></a>法二</h3><p>　　只需要改变一行代码：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">WNDPROC prevProc;</div><div class="line">	<span class="function">LRESULT CALLBACK <span class="title">NewEditProc</span><span class="params">(</span></span></div><div class="line">		HWND hwnd,</div><div class="line">		UINT uMsg,</div><div class="line">		WPARAM wParam,</div><div class="line">		LPARAM lParam</div><div class="line">		)</div><div class="line">	&#123;</div><div class="line">		<span class="keyword">if</span>(uMsg == WM_CHAR &amp;&amp; wParam == <span class="number">0x0d</span>)</div><div class="line">		&#123;</div><div class="line">			<span class="comment">//::SetFocus(GetNextWindow(hwnd,GW_HWNDNEXT));</span></div><div class="line">			SetFocus(::GetWindow(hwnd,GW_HWNDNEXT));</div><div class="line">			<span class="keyword">return</span> <span class="number">1</span>;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">else</span></div><div class="line">		&#123;</div><div class="line">			<span class="keyword">return</span> prevProc(hwnd,uMsg,wParam,lParam);</div><div class="line">		&#125;</div><div class="line">	&#125;</div></pre></td></tr></table></figure></p>
<h3 id="法三"><a href="#法三" class="headerlink" title="法三"></a>法三</h3><p>　　编辑框属性有一个WS_TABSTOP，如果勾选了，则在对话框中按下Tab键后，输入焦点可以转移到此控件上。</p>
<p>　　修改一行代码：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">WNDPROC prevProc;</div><div class="line">	<span class="function">LRESULT CALLBACK <span class="title">NewEditProc</span><span class="params">(</span></span></div><div class="line">		HWND hwnd,</div><div class="line">		UINT uMsg,</div><div class="line">		WPARAM wParam,</div><div class="line">		LPARAM lParam</div><div class="line">		)</div><div class="line">	&#123;</div><div class="line">		<span class="keyword">if</span>(uMsg == WM_CHAR &amp;&amp; wParam == <span class="number">0x0d</span>)</div><div class="line">		&#123;</div><div class="line">			SetFocus(::GetNextDlgTabItem(::GetParent(hwnd),hwnd,FALSE));</div><div class="line">			<span class="comment">//::SetFocus(GetNextWindow(hwnd,GW_HWNDNEXT));</span></div><div class="line">			<span class="comment">//SetFocus(::GetWindow(hwnd,GW_HWNDNEXT));</span></div><div class="line">			<span class="keyword">return</span> <span class="number">1</span>;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">else</span></div><div class="line">		&#123;</div><div class="line">			<span class="keyword">return</span> prevProc(hwnd,uMsg,wParam,lParam);</div><div class="line">		&#125;</div><div class="line">	&#125;</div></pre></td></tr></table></figure></p>
<p>　　三种方法的缺点：只修改了第一个编辑框的窗口过程，因此从第二到第三个编辑框的焦点转移无法实现，除非继续修改第二个编辑窗口。</p>
<p>　　再介绍一种方法解决这个问题。</p>
<h3 id="法四"><a href="#法四" class="headerlink" title="法四"></a>法四</h3><p>　　在MFC中，默认情况下，当在对话框窗口中按下回车键时，会调用对话框的默认按钮的响应函数，我们可以在此默认按钮的响应函数中把焦点依次向下传递。</p>
<p>　　首先取消第一个编辑框的MultiLine。<br>　　接着修改OnOK函数为：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">void</span> CTestDlg::OnOK() </div><div class="line">&#123;</div><div class="line">	<span class="comment">// <span class="doctag">TODO:</span> Add extra validation here</span></div><div class="line">	<span class="comment">//GetDlgItem(IDC_EDIT1)-&gt;GetNextWindow()-&gt;SetFocus();</span></div><div class="line">	<span class="comment">//GetFocus()-&gt;GetNextWindow()-&gt;SetFocus();</span></div><div class="line">	<span class="comment">//GetFocus()-&gt;GetWindow(GW_HWNDNEXT)-&gt;SetFocus();</span></div><div class="line">	GetNextDlgTabItem(GetFocus())-&gt;SetFocus();</div><div class="line">	<span class="comment">//CDialog::OnOK();</span></div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>　　注释掉的部分是各种失败的尝试，各有各的bug。现在程序是正常的。</p>
<pre><code>**注意：然而该屏蔽回车键的方法并非是常规做法，应该在PreTranslateMessage中进行拦截。（return TRUE即拦截）**
</code></pre><p>　　具体做法：<br>　　现在Testdlg.h中添加：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">class</span> CTestDlg : <span class="keyword">public</span> CDialog</div><div class="line">&#123;</div><div class="line"></div><div class="line"><span class="keyword">protected</span>:</div><div class="line">	<span class="function"><span class="keyword">virtual</span> BOOL <span class="title">PreTranslateMessage</span><span class="params">(MSG* pMsg)</span></span>;</div><div class="line"></div><div class="line"><span class="keyword">public</span>:</div><div class="line">	<span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">OnOK</span><span class="params">()</span></span>;</div><div class="line">……</div></pre></td></tr></table></figure></p>
<p>　　接着：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line">CTestDlg::PreTranslateMessage(MSG* pMsg)</div><div class="line">&#123;</div><div class="line">	<span class="comment">//屏蔽ESC关闭窗体</span></div><div class="line">	<span class="keyword">if</span> (pMsg-&gt;message == WM_KEYDOWN &amp;&amp; pMsg-&gt;wParam == VK_ESCAPE)</div><div class="line">	&#123;</div><div class="line">		<span class="keyword">return</span> TRUE;</div><div class="line">	&#125;</div><div class="line">	<span class="comment">//屏蔽回车关闭窗体，但会导致回车在窗体上失效.</span></div><div class="line">	<span class="comment">/*</span></div><div class="line">	if (pMsg-&gt;message == WM_KEYDOWN &amp;&amp; pMsg-&gt;wParam == VK_RETURN &amp;&amp; pMsg-&gt;wParam)</div><div class="line">	&#123;</div><div class="line">		return TRUE;</div><div class="line">	&#125;</div><div class="line">	*/</div><div class="line">	<span class="keyword">else</span> </div><div class="line">	&#123;</div><div class="line">		<span class="keyword">return</span> CDialog::PreTranslateMessage(pMsg);</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">void</span> CTestDlg::OnOK() </div><div class="line">&#123;</div><div class="line">	<span class="comment">// <span class="doctag">TODO:</span> Add extra validation here</span></div><div class="line">	</div><div class="line">	<span class="comment">//CDialog::OnOK();</span></div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>　　点击Layout-Tab order，这些序号就是各控件的Tab顺序。顺序可改变，依次点击希望的顺序控件即可。</p>
<p>　　调用顺序：当用户按下回车键时，Windows将查看对话框中是否存在指定的默认按钮，如果有，就调用该默认按钮单击消息的响应函数。如果没有，就会调用虚拟的OnOK函数，即使对话框没有包含默认的OK按钮（这个默认OK按钮的ID是IDOK）。</p>
<h1 id="文件和注册表操作"><a href="#文件和注册表操作" class="headerlink" title="文件和注册表操作"></a>文件和注册表操作</h1><h2 id="c语言对文件操作的支持"><a href="#C语言对文件操作的支持" class="headerlink" title="C语言对文件操作的支持"></a>C语言对文件操作的支持</h2><p>　　新建单文档类型的MFC应用程序，工程名为File，并为主菜单添加一个子菜单，名称为“文件操作”，然后为其添加两个菜单项，并分别为它们添加相应的命令响应函数（通过COMMAND），让CFileView类接收这些菜单项的命令响应。<br> <img src="http://img.blog.csdn.net/20170420224900928?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"><br> <img src="http://img.blog.csdn.net/20170420224921428?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<h3 id="文件的打开和写入"><a href="#文件的打开和写入" class="headerlink" title="文件的打开和写入"></a>文件的打开和写入</h3><p>　　代码：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">void</span> CFileView::OnFileWrite() </div><div class="line">&#123;</div><div class="line">	FILE *pFile = fopen(<span class="string">"1.txt"</span>,<span class="string">"w"</span>);</div><div class="line">	fwrite(<span class="string">"http://www.sunxin.org"</span>, <span class="number">1</span>, <span class="built_in">strlen</span>(<span class="string">"http://www.sunxin.org"</span>), pFile); </div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>　　编译后可看到文件夹中生成了1.txt，打开有一行网址。</p>
<h3 id="文件的关闭"><a href="#文件的关闭" class="headerlink" title="文件的关闭"></a>文件的关闭</h3><p>　　增加一行代码：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">void</span> CFileView::OnFileWrite() </div><div class="line">&#123;</div><div class="line">	FILE *pFile = fopen(<span class="string">"1.txt"</span>,<span class="string">"w"</span>);</div><div class="line">	fwrite(<span class="string">"http://www.sunxin.org"</span>, <span class="number">1</span>, <span class="built_in">strlen</span>(<span class="string">"http://www.sunxin.org"</span>), pFile); </div><div class="line">	fclose(pFile);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h3 id="文件指针定位"><a href="#文件指针定位" class="headerlink" title="文件指针定位"></a>文件指针定位</h3><p>　　代码：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">void</span> CFileView::OnFileWrite() </div><div class="line">&#123;</div><div class="line">	FILE *pFile = fopen(<span class="string">"1.txt"</span>,<span class="string">"w"</span>);</div><div class="line">	fwrite(<span class="string">"http://www.sunxin.org"</span>, <span class="number">1</span>, <span class="built_in">strlen</span>(<span class="string">"http://www.sunxin.org"</span>), pFile); </div><div class="line">	fwrite(<span class="string">"欢迎访问"</span>, <span class="number">1</span>, <span class="built_in">strlen</span>(<span class="string">"欢迎访问"</span>), pFile);</div><div class="line">	fclose(pFile);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>　　显示：<a href="http://www.sunxin.org欢迎访问" target="_blank" rel="external">http://www.sunxin.org欢迎访问</a></p>
<p>　　将文件指针移动到文件的开始位置处：<br>　　代码：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">void</span> CFileView::OnFileWrite() </div><div class="line">&#123;</div><div class="line">	FILE *pFile = fopen(<span class="string">"1.txt"</span>,<span class="string">"w"</span>);</div><div class="line">	fwrite(<span class="string">"http://www.sunxin.org"</span>, <span class="number">1</span>, <span class="built_in">strlen</span>(<span class="string">"http://www.sunxin.org"</span>), pFile); </div><div class="line">	fseek(pFile, <span class="number">0</span>, SEEK_SET);</div><div class="line">	fwrite(<span class="string">"ftp:"</span>, <span class="number">1</span>, <span class="built_in">strlen</span>(<span class="string">"ftp:"</span>),pFile);</div><div class="line">	<span class="comment">//fwrite("欢迎访问", 1, strlen("欢迎访问"), pFile);</span></div><div class="line">	fclose(pFile);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>　　显示：ftp:://www.sunxin.org</p>
<h3 id="文件的读取"><a href="#文件的读取" class="headerlink" title="文件的读取"></a>文件的读取</h3><p>　　在OnFileRead函数中写入代码：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">void</span> CFileView::OnFileRead() </div><div class="line">&#123;</div><div class="line">	FILE *pFile = fopen(<span class="string">"1.txt"</span>,<span class="string">"r"</span>);</div><div class="line">	<span class="keyword">char</span> ch[<span class="number">100</span>];</div><div class="line">	fread(ch, <span class="number">1</span>, <span class="number">100</span>, pFile);</div><div class="line">	fclose(pFile);</div><div class="line">	MessageBox(ch);</div><div class="line">	</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>　　编译运行：<br>　　<br> <img src="http://img.blog.csdn.net/20170420224951225?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<p>　　原因：C语言以“\0”结束。</p>
<p>　　解决方法：<br>　　法一：<br>　　修改代码：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">void</span> CFileView::OnFileWrite() </div><div class="line">&#123;</div><div class="line">	FILE *pFile = fopen(<span class="string">"1.txt"</span>,<span class="string">"w"</span>);</div><div class="line">	<span class="keyword">char</span> buf[<span class="number">22</span>] = <span class="string">"http://www.sunxin.org"</span>;</div><div class="line">	buf[<span class="number">21</span>] = <span class="string">'\0'</span>;</div><div class="line">	fwrite(buf, <span class="number">1</span>, <span class="number">22</span>, pFile);</div><div class="line">	fclose(pFile);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>　　先点击写入文件，再点击读取文件，就可以看到正确的内容。<br>　　缺点：增加了文件大小。</p>
<p>法二：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">void</span> CFileView::OnFileRead() </div><div class="line">&#123;</div><div class="line">	FILE *pFile = fopen(<span class="string">"1.txt"</span>,<span class="string">"r"</span>);</div><div class="line">	<span class="keyword">char</span> ch[<span class="number">100</span>];</div><div class="line">	<span class="built_in">memset</span>(ch, <span class="number">0</span>, <span class="number">100</span>);</div><div class="line">	fread(ch, <span class="number">1</span>, <span class="number">100</span>, pFile);</div><div class="line">	fclose(pFile);</div><div class="line">	MessageBox(ch);</div><div class="line">	</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>法三：<br>　　读取文件时，不知道文件大小时的做法。<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">void</span> CFileView::OnFileRead() </div><div class="line">&#123;</div><div class="line">	FILE *pFile = fopen(<span class="string">"1.txt"</span>,<span class="string">"r"</span>);</div><div class="line">	<span class="keyword">char</span> *pBuf;</div><div class="line">	fseek(pFile, <span class="number">0</span>, SEEK_END);</div><div class="line">	<span class="keyword">int</span> len=ftell(pFile);</div><div class="line">	pBuf = <span class="keyword">new</span> <span class="keyword">char</span>[len+<span class="number">1</span>];</div><div class="line">	rewind(pFile);</div><div class="line">	fread(pBuf, <span class="number">1</span>, len, pFile);</div><div class="line">	pBuf[len] = <span class="number">0</span>;</div><div class="line">	fclose(pFile);</div><div class="line">	MessageBox(pBuf);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h3 id="二进制文件和文本文件"><a href="#二进制文件和文本文件" class="headerlink" title="二进制文件和文本文件"></a>二进制文件和文本文件</h3><p>　　代码：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">void</span> CFileView::OnFileWrite() </div><div class="line">&#123;</div><div class="line">	FILE *pFile = fopen(<span class="string">"2.txt"</span>, <span class="string">"w"</span>);</div><div class="line">	<span class="keyword">char</span> ch[<span class="number">3</span>];</div><div class="line">	ch[<span class="number">0</span>] = <span class="string">'a'</span>;</div><div class="line">	ch[<span class="number">1</span>] = <span class="number">10</span>;</div><div class="line">	ch[<span class="number">2</span>] = <span class="string">'b'</span>;</div><div class="line">	fwrite(ch, <span class="number">1</span>, <span class="number">3</span>, pFile);</div><div class="line">	fclose(pFile);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">void</span> CFileView::OnFileRead() </div><div class="line">&#123;</div><div class="line">	FILE *pFile = fopen(<span class="string">"2.txt"</span>,<span class="string">"r"</span>);</div><div class="line">	<span class="keyword">char</span> ch[<span class="number">100</span>];</div><div class="line">	fread(ch, <span class="number">1</span>, <span class="number">3</span>, pFile);</div><div class="line">	ch[<span class="number">3</span>] = <span class="number">0</span>;</div><div class="line">	fclose(pFile);</div><div class="line">	MessageBox(ch);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>　　效果：<br>　　<br> <img src="http://img.blog.csdn.net/20170420225018961?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<p>　　文本方式：10实际上是换行符的ASCII码。</p>
<p>　　以文本方式和二进制方式读取文件是有明显的区别的。</p>
<h3 id="文本方式和二进制方式"><a href="#文本方式和二进制方式" class="headerlink" title="文本方式和二进制方式"></a>文本方式和二进制方式</h3><p>　　二进制方式：换行是由两个字符组成的，即ASCII码10（回车符）和13（换行符）。<br>　　写入和读取文件时要保持一致。如果采用文本方式写入，应采用文本方式读取；如果采用二进制方式写入数据，在读取时也应采用二进制方式。</p>
<p>　　面试题：给你一个整数，如：98341，将这个整数保存到文件中，要求在以记事本程序打开该文件时，显示的是：98341。<br>　　法一：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">void</span> CFileView::OnFileWrite() </div><div class="line">&#123;</div><div class="line">	FILE *pFile = fopen(<span class="string">"3.txt"</span>, <span class="string">"w"</span>);</div><div class="line">	<span class="keyword">char</span> ch[<span class="number">5</span>];</div><div class="line">	ch[<span class="number">0</span>] = <span class="number">9</span> + <span class="number">48</span>;</div><div class="line">	ch[<span class="number">1</span>] = <span class="number">8</span> + <span class="number">48</span>;</div><div class="line">	ch[<span class="number">2</span>] = <span class="number">3</span> + <span class="number">48</span>;</div><div class="line">	ch[<span class="number">3</span>] = <span class="number">4</span> + <span class="number">48</span>;</div><div class="line">	ch[<span class="number">4</span>] = <span class="number">1</span> + <span class="number">48</span>;</div><div class="line"></div><div class="line">	fwrite(ch, <span class="number">1</span>, <span class="number">5</span>, pFile);</div><div class="line">	fclose(pFile);</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>　　或</p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">void</span> CFileView::OnFileWrite() </div><div class="line">&#123;</div><div class="line">	FILE *pFile = fopen(<span class="string">"3.txt"</span>, <span class="string">"w"</span>);</div><div class="line">	<span class="keyword">int</span> i = <span class="number">98341</span>;</div><div class="line">	<span class="keyword">char</span> ch[<span class="number">5</span>];</div><div class="line">	itoa(i, ch, <span class="number">10</span>);</div><div class="line"></div><div class="line">	fwrite(ch, <span class="number">1</span>, <span class="number">5</span>, pFile);</div><div class="line">	fclose(pFile);</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>　　面试题：给定一个字符串，其中既有数字字符，又有26个英文字母中的几个字符，让你判断一下哪些是数字字符。</p>
<p>　　对这种问题，实际上就是判断各字符的ASCII码，对于数字字符来说，它们的ASCII码大于等于48，小于等于57。</p>
<h2 id="c对文件操作的支持"><a href="#C-对文件操作的支持" class="headerlink" title="C++对文件操作的支持"></a>C++对文件操作的支持</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">void</span> CFileView::OnFileWrite() </div><div class="line">&#123;</div><div class="line">	<span class="function">ofstream <span class="title">ofs</span><span class="params">(<span class="string">"4.txt"</span>)</span></span>;</div><div class="line">	ofs.write(<span class="string">"http://www.sunxin.org"</span>,<span class="built_in">strlen</span>(<span class="string">"http://www.sunxin.org"</span>));</div><div class="line">	ofs.close;</div><div class="line"></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">void</span> CFileView::OnFileRead() </div><div class="line">&#123;</div><div class="line">	<span class="function">ifstream <span class="title">ifs</span><span class="params">(<span class="string">"4.txt"</span>)</span></span>;</div><div class="line">	<span class="keyword">char</span> ch[<span class="number">100</span>];</div><div class="line">	<span class="built_in">memset</span>(ch, <span class="number">0</span>, <span class="number">100</span>);</div><div class="line">	ifs.read(ch,<span class="number">100</span>);</div><div class="line">	ifs.close();</div><div class="line">	MessageBox(ch);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="win32-api-对文件操作的支持"><a href="#Win32-API-对文件操作的支持" class="headerlink" title="Win32 API 对文件操作的支持"></a>Win32 API 对文件操作的支持</h2><h3 id="文件的创建-打开和写入"><a href="#文件的创建、打开和写入" class="headerlink" title="文件的创建、打开和写入"></a>文件的创建、打开和写入</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">void</span> CFileView::OnFileWrite() </div><div class="line">&#123;</div><div class="line">	<span class="comment">//定义一个句柄变量</span></div><div class="line">	HANDLE hFile;</div><div class="line">	<span class="comment">//创建文件</span></div><div class="line">	hFile = CreateFile(<span class="string">"5.txt"</span>, GENERIC_WRITE, <span class="number">0</span>, <span class="literal">NULL</span>, CREATE_NEW, </div><div class="line">		FILE_ATTRIBUTE_NORMAL, <span class="literal">NULL</span>);</div><div class="line">	<span class="comment">//接收实际写入的字节数</span></div><div class="line">	DWORD dwWrites;</div><div class="line">	<span class="comment">//写入数据</span></div><div class="line">	WriteFile(hFile,<span class="string">"http://www.sunxin.org"</span>,<span class="built_in">strlen</span>(<span class="string">"http://www.sunxin.org"</span>),</div><div class="line">		&amp;dwWrites, <span class="literal">NULL</span>);</div><div class="line">	<span class="comment">//关闭文件句柄</span></div><div class="line">	CloseHandle(hFile);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="文件的读取"><a href="#文件的读取-1" class="headerlink" title="文件的读取"></a>文件的读取</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">void</span> CFileView::OnFileRead() </div><div class="line">&#123;</div><div class="line">	HANDLE hFile;</div><div class="line">	<span class="comment">//打开文件</span></div><div class="line">	hFile = CreateFile(<span class="string">"5.txt"</span>, GENERIC_READ, <span class="number">0</span>, <span class="literal">NULL</span>, OPEN_EXISTING, FILE_ATTRIBUTE_NORMAL, <span class="literal">NULL</span>);</div><div class="line">	<span class="comment">//接收实际收到的数据</span></div><div class="line">	<span class="keyword">char</span> ch[<span class="number">100</span>];</div><div class="line">	<span class="comment">//接收实际读取到的字节数</span></div><div class="line">	DWORD dwReads;</div><div class="line">	<span class="comment">//读取数据</span></div><div class="line">	ReadFile(hFile, ch, <span class="number">100</span>, &amp;dwReads, <span class="literal">NULL</span>);</div><div class="line">	<span class="comment">//设置字符串结束字符</span></div><div class="line">	ch[dwReads] = <span class="number">0</span>;</div><div class="line">	<span class="comment">//关闭打开的文件对象的句柄</span></div><div class="line">	CloseHandle(hFile);</div><div class="line">	<span class="comment">//显示读取到的数据</span></div><div class="line">	MessageBox(ch);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h1 id="菜单"><a href="#菜单" class="headerlink" title="菜单"></a>菜单</h1><h2 id="菜单命令响应函数"><a href="#菜单命令响应函数" class="headerlink" title="菜单命令响应函数"></a>菜单命令响应函数</h2><p>　　新建一个单文档的MFC AppWizard(exe)工程，工程名为Menu。Build运行。</p>
<p> <img src="http://img.blog.csdn.net/20170420225058617?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"><br>　　左上角点击按钮，可以让属性框始终显示，不会因为点击对话框以外的地方就消失。<br>　　去掉Pop-up弹出前的勾，将ID改为ID_TEST。给Test添加响应函数在CMainFrame中，在函数中加入    MessageBox(“MainFrame Clicked”);<br>　　效果：<br> <img src="http://img.blog.csdn.net/20170420225116851?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<h2 id="菜单命令的路由"><a href="#菜单命令的路由" class="headerlink" title="菜单命令的路由"></a>菜单命令的路由</h2><h3 id="程序类对菜单命令的响应顺序"><a href="#程序类对菜单命令的响应顺序" class="headerlink" title="程序类对菜单命令的响应顺序"></a>程序类对菜单命令的响应顺序</h3><p>　　响应Test<br>　　菜单项命令的顺序依次是：视类、文档类、框架类，最后才是应用程序类。</p>
<h3 id="windows消息的分类"><a href="#Windows消息的分类" class="headerlink" title="Windows消息的分类"></a>Windows消息的分类</h3><p>　　凡是从CWnd派生的类，它们既可以接收标准消息，也可以接收命令消息和通告消息。而对于那些从CCmdTarget派生的类，则只能接收命令消息和通告消息，不能接收标准消息。<br>本例中的文档类（CMenuDoc）和应用程序类（CWinApp），因为它们都派生于CCmdTarget类，所以它们可以接收菜单命令消息。但它们不是从CWnd类派生的，所以不能接收标准消息。</p>
<h3 id="菜单命令的路由"><a href="#菜单命令的路由-1" class="headerlink" title="菜单命令的路由"></a>菜单命令的路由</h3><p>　　菜单命令消息路由的具体过程：当点击某个菜单项时，最先接收到这个菜单命令消息的是框架类。框架类将把接收到的这个消息交给它的子窗口，即视类，由视类首先进行处理。视类首先根据命令消息映射机制查找自身是否对此消息进行了响应，如果响应了，就调用相应响应函数对这个消息进行处理，消息路由过程结束；如果视类没有对此命令消息做出响应，就交由文档类，文档类同样查找自身是否对这个菜单命令进行了响应，如果响应了，就由文档类的命令消息响应函数进行处理，路由过程结束。如果文档类也未做出响应，就把这个命令消息交还给视类，后者又把该消息交还给框架类。框架类查看自己是否对这个命令消息进行了响应，如果它也没有做出响应，就把这个菜单命令消息交给应用程序类，由后者来进行处理。</p>
<h2 id="基本菜单操作"><a href="#基本菜单操作" class="headerlink" title="基本菜单操作"></a>基本菜单操作</h2><h3 id="标记菜单"><a href="#标记菜单" class="headerlink" title="标记菜单"></a>标记菜单</h3><p>　　运行刚才创建的Menu程序，点击查看，前面都有一个对号，这种类型就是标记菜单。<br>在CMainFrame类的OnCreate的return语句之前添加这句代码    GetMenu()-&gt;GetSubMenu(0)-&gt;CheckMenuItem(0, MF_BYPOSITION | MF_CHECKED);  或者GetMenu()-&gt;GetSubMenu(0)-&gt;CheckMenuItem(ID_FILE_NEW, MF_BYCOMMAND | MF_CHECKED);<br>　　Build并运行，可发现新建左边已添加一个复选标记。</p>
<h3 id="默认菜单项"><a href="#默认菜单项" class="headerlink" title="默认菜单项"></a>默认菜单项</h3><p>　　在刚才的代码下，添加    GetMenu()-&gt;GetSubMenu(0)-&gt;SetDefaultItem(1, TRUE); 或者GetMenu()-&gt;GetSubMenu(0)-&gt;SetDefaultItem(ID_FILE_OPEN,  FALSE);  编译运行，会发现“打开”变成了粗体。</p>
<p>　　<strong>注意：“打印”的索引是5，不是4。计算菜单项索引时，一定要把分割栏菜单项计算在内。并且，一个子菜单只能有一个默认菜单项。</strong></p>
<h3 id="图形标记菜单"><a href="#图形标记菜单" class="headerlink" title="图形标记菜单"></a>图形标记菜单</h3><p>　　Insert-Resource-Bitmap，创建一个位图资源。如图。<br> <img src="http://img.blog.csdn.net/20170420225150945?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"><br>　　为CMainFrame类添加一个CBitmap类型的成员变量：m_bitmap。</p>
<p>　　接着添加代码：<br>    CString str;<br>    str.Format(“x=%d”,y=%d”, GetSystemMetrics(SM_CXMENUCHECK),GetSystemMetrics(SM_CYMENUCHECK));<br>    MessageBox(str);<br>    m_bitmap.LoadBitmap(IDB_BITMAP1);<br>    GetMenu()-&gt;GetSubMenu(0)-&gt;SetMenuItemBitmaps(0, MF_BYPOSITION, &amp;m_bitmap, &amp;m_bitmap);</p>
<h3 id="禁用菜单项"><a href="#禁用菜单项" class="headerlink" title="禁用菜单项"></a>禁用菜单项</h3><p>　　通常把MF_GRAYED和MF_DISABLED这两个标志放在一起使用。不过这么做并不是必需的。<br>　　删除之前的代码，写入    GetMenu()-&gt;GetSubMenu(0)-&gt;EnableMenuItem(1, MF_BYPOSITION | MF_DISABLED | MF_GRAYED);<br>　　打开“文件”子菜单，发现“打开”菜单栏变灰，点击不起作用。</p>
<h3 id="移除和装载菜单"><a href="#移除和装载菜单" class="headerlink" title="移除和装载菜单"></a>移除和装载菜单</h3><p>　　再添加一行代码：    SetMenu(NULL);  此时菜单栏被移除了。<br>　　再添加几行代码：<br>CMenu menu;<br>    menu.LoadMenu(IDR_MAINFRAME);<br>    SetMenu(&amp;menu);<br>    menu.Detach();<br>　　此时菜单栏又装载了。<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">CMenu menu;</div><div class="line">menu.CreateMenu();</div><div class="line">GetMenu()-&gt;AppendMenu(MF_POPUP, (UINT)menu.m_hMenu, <span class="string">"Test1"</span>);</div><div class="line">menu.AppendMenu(MF_STRING, <span class="number">111</span>, <span class="string">"Hello"</span>);</div><div class="line">menu.AppendMenu(MF_STRING, <span class="number">112</span>, <span class="string">"Bye"</span>);</div><div class="line">menu.AppendMenu(MF_STRING, <span class="number">113</span>, <span class="string">"Mybole"</span>);</div><div class="line"></div><div class="line"></div><div class="line">menu.Detach();</div><div class="line"></div><div class="line">CMenu menu1;</div><div class="line">menu1.CreateMenu();</div><div class="line">GetMenu()-&gt;InsertMenu(<span class="number">2</span>, MF_POPUP | MF_BYPOSITION, (UINT)menu1. m_hMenu,<span class="string">"Test"</span>);</div><div class="line"></div><div class="line"></div><div class="line">menu1.Detach();</div><div class="line"></div><div class="line">GetMenu()-&gt;GetSubMenu(<span class="number">2</span>)-&gt;AppendMenu(MF_STRING, <span class="number">118</span>, <span class="string">"Welcome"</span>);</div><div class="line">GetMenu()-&gt;GetSubMenu(<span class="number">0</span>)-&gt;AppendMenu(MF_STRING, <span class="number">114</span>, <span class="string">"Welcome"</span>);</div><div class="line">GetMenu()-&gt;GetSubMenu(<span class="number">0</span>)-&gt;InsertMenu(ID_FILE_OPEN, MF_BYCOMMAND | MF_STRING, <span class="number">115</span>, <span class="string">"VC编程"</span>);</div></pre></td></tr></table></figure></p>
<h3 id="mfc菜单命令更新机制"><a href="#MFC菜单命令更新机制" class="headerlink" title="MFC菜单命令更新机制"></a>MFC菜单命令更新机制</h3><p> <img src="http://img.blog.csdn.net/20170420225218087?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<p>　　MFC命令更新机制：当要显示菜单时，操作系统发出WM_INITMENUPOPOP消息，然后由程序窗口的基类如CFrameWnd接管，它会创建一个CCmdUI对象，并与程序的第一个菜单项相关联，调用该对象的一个成员函数DoUpdate()。这个函数发出CN_UPDATE_COMMAND_UI消息，这条消息带有一个指向CCmdUI对象的指针。这时，系统会判断是否存在一个ON_UPDATE_COMMAND_UI宏去捕获这个菜单项消息。如果找到这样一个宏，就调用相应的消息响应函数进行处理，在这个函数中，可以利用传递过来的CCmdUI对象去调用相应的函数，使该菜单项可以使用，或禁用该菜单项。当更新完第一个菜单项后，同一个CCmdUI对象就设置为与第二个菜单项相关联，依此顺序进行，直到完成所有菜单项的处理。</p>
<p>　　添加代码：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">void</span> CMainFrame::OnUpdateEditCut(CCmdUI* pCmdUI) </div><div class="line">&#123;</div><div class="line">	<span class="comment">// <span class="doctag">TODO:</span> Add your command update UI handler code here</span></div><div class="line">	pCmdUI-&gt;Enable();</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>　　编辑-剪切 可用了。<br>　　如果要把工具栏上的一个工具按钮与菜单栏中的某个菜单项相关联，只要将它们的ID设置为同一个标识就可以了。</p>
<p>　　如果希望禁用文件-新建，为ID_FILE_NEW添加UPDATE_COMMAND_UI消息响应函数。<br>　　代码如下：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="keyword">void</span> CMainFrame::OnUpdateFileNew(CCmdUI* pCmdUI) </div><div class="line">&#123;</div><div class="line">	<span class="comment">// <span class="doctag">TODO:</span> Add your command update UI handler code here</span></div><div class="line">	pCmdUI-&gt;Enable(FALSE);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>　　或者<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">void</span> CMainFrame::OnUpdateFileNew(CCmdUI* pCmdUI) </div><div class="line">&#123;</div><div class="line">	<span class="keyword">if</span> (<span class="number">2</span> == pCmdUI-&gt;m_nIndex)</div><div class="line">	pCmdUI-&gt;Enable();</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h3 id="快捷菜单"><a href="#快捷菜单" class="headerlink" title="快捷菜单"></a>快捷菜单</h3><p>　　1. 新增一个新的菜单资源。点开，顶级菜单设置任意的文本，如abc。添加两个菜单项：<br>　　显示 IDM_SHOW<br>　　退出 IDM_EXIT<br>　　2. 给CMenuView类添加WM_RBUTTONDOWN消息响应函数。<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">void</span> CMenu2View::OnRButtonDown(UINT nFlags, CPoint point) </div><div class="line">&#123;</div><div class="line">	CMenu menu;</div><div class="line">	menu.LoadMenu(IDR_MENU1);</div><div class="line">	CMenu* pPopup = menu.GetSubMenu(<span class="number">0</span>);</div><div class="line">	ClientToScreen(&amp;point);</div><div class="line">	pPopup-&gt;TrackPopupMenu(TPM_LEFTALIGN | TPM_RIGHTBUTTON, point.x, point.y, <span class="keyword">this</span>);</div><div class="line"></div><div class="line">	CView::OnRButtonDown(nFlags, point);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>　　效果：<br>　　<br> <img src="http://img.blog.csdn.net/20170420225352728?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt=""></p>
<p>　　3.对“显示”右键ClassWizard，可以取消创建新类的询问。分别为CMainFrame类和CMenuView类添加一个响应。<br>　　代码：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">void</span> CMenu2View::OnShow() </div><div class="line">&#123;</div><div class="line">	MessageBox(<span class="string">"View show"</span>);	</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">void</span> CMainFrame::OnShow() </div><div class="line">&#123;</div><div class="line">	MessageBox(<span class="string">"Main show"</span>);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>　　结果是显示“View show”。说明只有视类才能对快捷菜单项命令做出响应。若想让CMainView类对此快捷菜单项进行响应的话，修改代码：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">void</span> CMenu2View::OnRButtonDown(UINT nFlags, CPoint point) </div><div class="line">&#123;</div><div class="line">	CMenu menu;</div><div class="line">	menu.LoadMenu(IDR_MENU1);</div><div class="line">	CMenu* pPopup = menu.GetSubMenu(<span class="number">0</span>);</div><div class="line">	ClientToScreen(&amp;point);</div><div class="line">	<span class="comment">//pPopup-&gt;TrackPopupMenu(TPM_LEFTALIGN | TPM_RIGHTBUTTON, point.x, point.y, this);</span></div><div class="line">	pPopup-&gt;TrackPopupMenu(TPM_LEFTALIGN | TPM_RIGHTBUTTON, point.x, point.y, GetParent());</div><div class="line"></div><div class="line">	CView::OnRButtonDown(nFlags, point);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>　　同时删去视类的显示。</p>
<h2 id="动态菜单操作"><a href="#动态菜单操作" class="headerlink" title="动态菜单操作"></a>动态菜单操作</h2><h3 id="添加菜单项目"><a href="#添加菜单项目" class="headerlink" title="添加菜单项目"></a>添加菜单项目</h3><p>　　在CMainFrame类的OnCreate函数中添加代码：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">CMenu menu;</div><div class="line">menu.CreateMenu();</div><div class="line">GetMenu()-&gt;AppendMenu(MF_POPUP, (UINT)menu.m_hMenu, <span class="string">"Test"</span>);</div><div class="line">menu.Detach();</div></pre></td></tr></table></figure></p>
<h3 id="插入菜单项目"><a href="#插入菜单项目" class="headerlink" title="插入菜单项目"></a>插入菜单项目</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">CMenu menu;</div><div class="line">menu.CreateMenu();</div><div class="line"><span class="comment">/*GetMenu()-&gt;AppendMenu(MF_POPUP, (UINT)menu.m_hMenu, "Test");</span></div><div class="line">menu.Detach();*/</div><div class="line">GetMenu()-&gt;InsertMenu(<span class="number">2</span>, MF_POPUP | MF_BYPOSITION, (UINT)menu. m_hMenu,<span class="string">"Test"</span>);</div><div class="line">menu.Detach();</div></pre></td></tr></table></figure>
<p>　　如果要在新插入的子菜单中添加菜单项的话，同样可以使用AppendMenu函数来实现。<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">CMenu menu;</div><div class="line">	menu.CreateMenu();</div><div class="line">	<span class="comment">/*GetMenu()-&gt;AppendMenu(MF_POPUP, (UINT)menu.m_hMenu, "Test");</span></div><div class="line">	menu.Detach();*/</div><div class="line">	GetMenu()-&gt;InsertMenu(<span class="number">2</span>, MF_POPUP | MF_BYPOSITION, (UINT)menu. m_hMenu,<span class="string">"Test"</span>);</div><div class="line"></div><div class="line">	menu.AppendMenu(MF_STRING, <span class="number">111</span>, <span class="string">"Hello"</span>);</div><div class="line">	menu.AppendMenu(MF_STRING, <span class="number">112</span>, <span class="string">"Bye"</span>);</div><div class="line">	menu.AppendMenu(MF_STRING, <span class="number">113</span>, <span class="string">"Mybole"</span>);</div><div class="line">	menu.Detach();</div></pre></td></tr></table></figure></p>
<p>　　111、112、113是随便赋予的ID号。<br>　　<br> <img src="http://img.blog.csdn.net/20170420230125731?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<p>　　若要在“文件”子菜单下添加一个菜单项Welcome，再添加一行代码：    GetMenu()-&gt;GetSubMenu(0)-&gt;AppendMenu(MF_STRING, 114, “Welcome”);<br>　　若要在“文件”中的“新建”和“打开”插入一个菜单项VC编程，再添加一行代码：<br>    GetMenu()-&gt;GetSubMenu(0)-&gt;InsertMenu(ID_FILE_OPEN, MF_BYCOMMAND | MF_STRING, 115， “VC编程”);</p>
<h3 id="删除菜单"><a href="#删除菜单" class="headerlink" title="删除菜单"></a>删除菜单</h3><p>　　删除“编辑”：在CMainFrame类的OnCreate函数最后（return之前）添加：<br>　　GetMenu()-&gt;DeleteMenu(1, MF_BYPOSITION);<br>　　删除“文件”下的“打开”：<br>　　GetMenu()-&gt;GetSubMenu(0)-&gt;DeleteMenu(2, MF_BYPOSITION);</p>
<h3 id="动态添加的菜单项的命令响应"><a href="#动态添加的菜单项的命令响应" class="headerlink" title="动态添加的菜单项的命令响应"></a>动态添加的菜单项的命令响应</h3><p>　　Resource.h中添加新ID<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">define</span> IDM_HELLO	111</span></div></pre></td></tr></table></figure></p>
<p>将menu.AppendMenu(MF_STRING, 111, “Hello”); 改为 menu.AppendMenu(MF_STRING, IDM_HELLO, “Hello”);</p>
<p>　　三部曲：<br>　　1.    点开MainFrm.h，增加为<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//&#123;&#123;AFX_MSG(CMainFrame)</span></div><div class="line">	<span class="function">afx_msg <span class="keyword">int</span> <span class="title">OnCreate</span><span class="params">(LPCREATESTRUCT lpCreateStruct)</span></span>;</div><div class="line">	<span class="function">afx_msg <span class="keyword">void</span> <span class="title">OnShow</span><span class="params">()</span></span>;</div><div class="line">	<span class="comment">//&#125;&#125;AFX_MSG</span></div><div class="line">	<span class="function">afx_msg <span class="keyword">void</span> <span class="title">OnHello</span><span class="params">()</span></span>;</div><div class="line">	DECLARE_MESSAGE_MAP()</div></pre></td></tr></table></figure></p>
<p>　　2. 点开MainFrm.cpp，增加为<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">BEGIN_MESSAGE_MAP(CMainFrame, CFrameWnd)</div><div class="line">	<span class="comment">//&#123;&#123;AFX_MSG_MAP(CMainFrame)</span></div><div class="line">	ON_WM_CREATE()</div><div class="line">	ON_COMMAND(IDM_SHOW, OnShow)</div><div class="line">	ON_COMMAND(IDM_HELLO, OnHello)</div><div class="line">	<span class="comment">//&#125;&#125;AFX_MSG_MAP</span></div><div class="line">END_MESSAGE_MAP()</div></pre></td></tr></table></figure></p>
<p>　　3. CMainFrame类中添加<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">void</span> CMainFrame::OnHello()</div><div class="line">&#123;</div><div class="line">	MessageBox(<span class="string">"Hello"</span>);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h2 id="电话本示例程序"><a href="#电话本示例程序" class="headerlink" title="电话本示例程序"></a>电话本示例程序</h2><p>　　删除之前写入CMainFrame类的OnCreate函数，留下原始函数。</p>
<h3 id="动态添加子菜单的实现"><a href="#动态添加子菜单的实现" class="headerlink" title="动态添加子菜单的实现"></a>动态添加子菜单的实现</h3><p>　　利用ClassWizard添加WM_CHAR消息。在Menu2View.h中添加：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">private</span>:</div><div class="line">	<span class="keyword">int</span> m_nIndex;</div><div class="line">	CMenu m_menu;</div></pre></td></tr></table></figure></p>
<p>在Menu2View.cpp里，添加：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">CMenu2View::CMenu2View()</div><div class="line">&#123;</div><div class="line">	<span class="comment">// <span class="doctag">TODO:</span> add construction code here</span></div><div class="line">	m_nIndex = <span class="number">-1</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h3 id="显示输入的字符"><a href="#显示输入的字符" class="headerlink" title="显示输入的字符"></a>显示输入的字符</h3><h3 id="添加菜单项及其命令响应函数"><a href="#添加菜单项及其命令响应函数" class="headerlink" title="添加菜单项及其命令响应函数"></a>添加菜单项及其命令响应函数</h3><p>　　在资源编辑器中打开程序的菜单，在“帮助”后添加一个新菜单abc，添加4个菜单项。名称为1，ID为IDM_PHONE1，以此类推。用ClassWizard为CMenu2View类分别加上这四个菜单项的命令响应函数。<br>　　修改CMenu2View类的头文件，如下：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">protected</span>:</div><div class="line">	<span class="comment">//&#123;&#123;AFX_MSG(CMenu2View)</span></div><div class="line">	<span class="function">afx_msg <span class="keyword">void</span> <span class="title">OnRButtonDown</span><span class="params">(UINT nFlags, CPoint point)</span></span>;</div><div class="line">	<span class="function">afx_msg <span class="keyword">void</span> <span class="title">OnChar</span><span class="params">(UINT nChar, UINT nRepCnt, UINT nFlags)</span></span>;</div><div class="line">	<span class="function">afx_msg <span class="keyword">void</span> <span class="title">OnPhone1</span><span class="params">()</span></span>;</div><div class="line">	<span class="function">afx_msg <span class="keyword">void</span> <span class="title">OnPhone2</span><span class="params">()</span></span>;</div><div class="line">	<span class="function">afx_msg <span class="keyword">void</span> <span class="title">OnPhone3</span><span class="params">()</span></span>;</div><div class="line">	<span class="function">afx_msg <span class="keyword">void</span> <span class="title">OnPhone4</span><span class="params">()</span></span>;</div><div class="line">	<span class="comment">//&#125;&#125;AFX_MSG</span></div><div class="line">	DECLARE_MESSAGE_MAP()</div></pre></td></tr></table></figure></p>
<p>CMenu2View.cpp中，<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">	<span class="comment">//&#123;&#123;AFX_MSG_MAP(CMenu2View)</span></div><div class="line">	ON_WM_CHAR()</div><div class="line">	<span class="comment">//&#125;&#125;AFX_MSG_MAP</span></div><div class="line">	ON_COMMAND(IDM_PHONE1, OnPhone1)</div><div class="line">	ON_COMMAND(IDM_PHONE2, OnPhone2)</div><div class="line">	ON_COMMAND(IDM_PHONE3, OnPhone3)</div><div class="line">	ON_COMMAND(IDM_PHONE4, OnPhone4)</div><div class="line">	<span class="comment">// Standard printing commands</span></div><div class="line">	ON_COMMAND(ID_FILE_PRINT, CView::OnFilePrint)</div><div class="line">	ON_COMMAND(ID_FILE_PRINT_DIRECT, CView::OnFilePrint)</div><div class="line">	ON_COMMAND(ID_FILE_PRINT_PREVIEW, CView::OnFilePrintPreview)</div><div class="line">END_MESSAGE_MAP()</div></pre></td></tr></table></figure></p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">void</span> CMenu2View::OnPhone1() </div><div class="line">&#123;</div><div class="line">	<span class="function">CClientDC <span class="title">dc</span><span class="params">(<span class="keyword">this</span>)</span></span>;</div><div class="line">	dc.TextOut(<span class="number">0</span>, <span class="number">0</span>, m_strArray.GetAt(<span class="number">0</span>));</div><div class="line">	</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">void</span> CMenu2View::OnPhone2() </div><div class="line">&#123;</div><div class="line">	<span class="function">CClientDC <span class="title">dc</span><span class="params">(<span class="keyword">this</span>)</span></span>;</div><div class="line">	dc.TextOut(<span class="number">0</span>, <span class="number">0</span>, m_strArray.GetAt(<span class="number">1</span>));</div><div class="line">	</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">void</span> CMenu2View::OnPhone3() </div><div class="line">&#123;</div><div class="line">	<span class="function">CClientDC <span class="title">dc</span><span class="params">(<span class="keyword">this</span>)</span></span>;</div><div class="line">	dc.TextOut(<span class="number">0</span>, <span class="number">0</span>, m_strArray.GetAt(<span class="number">2</span>));</div><div class="line">	</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">void</span> CMenu2View::OnPhone4() </div><div class="line">&#123;</div><div class="line">	<span class="function">CClientDC <span class="title">dc</span><span class="params">(<span class="keyword">this</span>)</span></span>;</div><div class="line">	dc.TextOut(<span class="number">0</span>, <span class="number">0</span>, m_strArray.GetAt(<span class="number">3</span>));</div><div class="line">	</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="框架类窗口截获菜单命令消息"><a href="#框架类窗口截获菜单命令消息" class="headerlink" title="框架类窗口截获菜单命令消息"></a>框架类窗口截获菜单命令消息</h3><p>　　右键单击CMainFrame，选择Add Virtual Functions-OnCommand，单击Add Handler，再点击Edit Existing。<br> <img src="http://img.blog.csdn.net/20170420230209594?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"><br>　　代码：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">BOOL CMainFrame::OnCommand(WPARAM wParam, LPARAM lParam) </div><div class="line">&#123;</div><div class="line">	<span class="keyword">int</span> MenuCmdID = LOWORD(wParam);</div><div class="line">	CMenu2View *pView = (CMenu2View *)GetActiveView();</div><div class="line">	<span class="keyword">if</span> (MenuCmdID &gt;= IDM_PHONE1 &amp;&amp; MenuCmdID &lt; IDM_PHONE1 + pView-&gt;m_strArray.GetSize())</div><div class="line">	&#123;</div><div class="line">	<span class="comment">//MessageBox("Test");</span></div><div class="line">	<span class="function">CClientDC <span class="title">dc</span><span class="params">(pView)</span></span>;</div><div class="line">	dc.TextOut(<span class="number">0</span>, <span class="number">0</span>, pView-&gt;m_strArray.GetAt(MenuCmdID - IDM_PHONE1));</div><div class="line">	<span class="keyword">return</span> TRUE;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">return</span> CFrameWnd::OnCommand(wParam, lParam);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>　　将MainFrm.cpp里添加#include “Menu2View.h” 。<br>　　将Menu2View.cpp中的#include “Menu2Doc.h”剪切到Menu2View.h文件的前部（#endif // _MSC_VER &gt; 1000下面）。</p>
<p>　　最终代码：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="keyword">void</span> CMenu2View::OnChar(UINT nChar, UINT nRepCnt, UINT nFlags) </div><div class="line">&#123;</div><div class="line">	<span class="function">CClientDC <span class="title">dc</span><span class="params">(<span class="keyword">this</span>)</span></span>;</div><div class="line">	<span class="keyword">if</span> (<span class="number">0x0d</span> == nChar)</div><div class="line">	&#123;</div><div class="line">		<span class="keyword">if</span> (<span class="number">0</span> == ++m_nIndex)</div><div class="line">		&#123;</div><div class="line">			m_menu.CreatePopupMenu();</div><div class="line">			GetParent()-&gt;GetMenu()-&gt;AppendMenu(MF_POPUP, (UINT)m_menu.m_hMenu, <span class="string">"PhoneBook"</span>);</div><div class="line">			GetParent()-&gt;DrawMenuBar();</div><div class="line">		&#125;</div><div class="line">		m_menu.AppendMenu(MF_STRING, IDM_PHONE1 + m_nIndex, m_strLine.Left(m_strLine.Find(<span class="string">' '</span>)));</div><div class="line">		m_strArray.Add(m_strLine);</div><div class="line">		m_strLine.Empty();</div><div class="line">		Invalidate();</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">else</span></div><div class="line">	&#123;</div><div class="line">		m_strLine += nChar;</div><div class="line">		dc.TextOut(<span class="number">0</span>, <span class="number">0</span>, m_strLine);</div><div class="line">	&#125;</div><div class="line">	CView::OnChar(nChar, nRepCnt, nFlags);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>　　效果：<br> <img src="http://img.blog.csdn.net/20170420230235013?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<h1 id="简单绘图"><a href="#简单绘图" class="headerlink" title="简单绘图"></a>简单绘图</h1><h2 id="mfc消息映射机制"><a href="#MFC消息映射机制" class="headerlink" title="MFC消息映射机制"></a>MFC消息映射机制</h2><p>　　与消息有关的三处信息：1.头文件XXXX.h中 2.源文件XXXX.cpp中 3.源文件XXXX.cpp的响应函数中</p>
<h2 id="绘制线条"><a href="#绘制线条" class="headerlink" title="绘制线条"></a>绘制线条</h2><p>　　对CDrawView右键点击Add Member Variable，变量名称：m_ptOrigin，类型：CPoint，访问权限设置：Private。<br>　　代码：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">void</span> CDrawView::OnLButtonDown(UINT nFlags, CPoint point) </div><div class="line">&#123;</div><div class="line">	m_ptOrigin = point;</div><div class="line">	CView::OnLButtonDown(nFlags, point);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">void</span> CDrawView::OnLButtonUp(UINT nFlags, CPoint point) </div><div class="line">&#123;</div><div class="line">	<span class="comment">//首先获得窗口的设备描述表</span></div><div class="line">	HDC hdc;</div><div class="line">	hdc = ::GetDC(m_hWnd);</div><div class="line">	<span class="comment">//移动到线条的起点</span></div><div class="line">	MoveToEx(hdc, m_ptOrigin.x, m_ptOrigin.y, <span class="literal">NULL</span>);</div><div class="line">	<span class="comment">//画线</span></div><div class="line">	LineTo(hdc, point.x, point.y);</div><div class="line">	<span class="comment">//释放设备描述表</span></div><div class="line">	::ReleaseDC(m_hWnd, hdc);</div><div class="line"></div><div class="line">	CView::OnLButtonUp(nFlags, point);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><img src="http://img.blog.csdn.net/20170420230302938?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<h3 id="利用mfc的cdc类实现画线功能"><a href="#利用MFC的CDC类实现画线功能" class="headerlink" title="利用MFC的CDC类实现画线功能"></a>利用MFC的CDC类实现画线功能</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">void</span> CDrawView::OnLButtonUp(UINT nFlags, CPoint point) </div><div class="line">&#123;</div><div class="line">	<span class="comment">/*//首先获得窗口的设备描述表</span></div><div class="line">	HDC hdc;</div><div class="line">	hdc = ::GetDC(m_hWnd);</div><div class="line">	//移动到线条的起点</div><div class="line">	MoveToEx(hdc, m_ptOrigin.x, m_ptOrigin.y, NULL);</div><div class="line">	//画线</div><div class="line">	LineTo(hdc, point.x, point.y);</div><div class="line">	//释放设备描述表</div><div class="line">	::ReleaseDC(m_hWnd, hdc);*/</div><div class="line"></div><div class="line">	CDC* pDC = GetDC();</div><div class="line">	pDC-&gt;MoveTo(m_ptOrigin);</div><div class="line">	pDC-&gt;LineTo(point);</div><div class="line">	ReleaseDC(pDC);</div><div class="line"></div><div class="line">	CView::OnLButtonUp(nFlags, point);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="利用mfc的cwindowdc类实现画线功能"><a href="#利用MFC的CWindowDC类实现画线功能" class="headerlink" title="利用MFC的CWindowDC类实现画线功能"></a>利用MFC的CWindowDC类实现画线功能</h3><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">void CDrawView::OnLButtonUp(UINT nFlags, CPoint point) </div><div class="line">&#123;</div><div class="line">	CWindowDC dc(GetParent());</div><div class="line">	dc.MoveTo(m_ptOrigin);</div><div class="line">	dc.LineTo(point);</div><div class="line"></div><div class="line">	CView::OnLButtonUp(nFlags, point);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p> <img src="http://img.blog.csdn.net/20170420230346873?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<h3 id="在桌面窗口中画线"><a href="#在桌面窗口中画线" class="headerlink" title="在桌面窗口中画线"></a>在桌面窗口中画线</h3><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">void CDrawView::OnLButtonUp(UINT nFlags, CPoint point) </div><div class="line">&#123;</div><div class="line">	CWindowDC dc(GetDesktopWindow());</div><div class="line">	dc.MoveTo(m_ptOrigin);</div><div class="line">	dc.LineTo(point);</div><div class="line"></div><div class="line">	CView::OnLButtonUp(nFlags, point);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p> <img src="http://img.blog.csdn.net/20170420230404138?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<p>　　<strong>注意</strong>：在桌面上画图需要权限（一般写代码时需要避免软件以外的操作）。</p>
<h3 id="绘制彩色线条"><a href="#绘制彩色线条" class="headerlink" title="绘制彩色线条"></a>绘制彩色线条</h3><p>　　在程序中，当构造一个GDI对象后，该对象并不会立即生效，必须选入设备描述表，它才会在以后的绘制操作中生效。<br>一般情况下，在完成绘图操作之后，都要利用SelectObject函数把之前的GDI对象选入设备描述表，以便使其恢复到先前的状态。<br><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">void CDrawView::OnLButtonUp(UINT nFlags, CPoint point) </div><div class="line">&#123;</div><div class="line">	CPen pen(PS_SOLID, 1, RGB(255, 0, 0));</div><div class="line">	CClientDC dc(this);</div><div class="line">	CPen* pOldPen = dc.SelectObject(&amp;pen);</div><div class="line">	dc.MoveTo(m_ptOrigin);</div><div class="line">	dc.LineTo(point);</div><div class="line">	dc.SelectObject(pOldPen);</div><div class="line"></div><div class="line">	CView::OnLButtonUp(nFlags, point);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>　　运行的效果是红色线条。</p>
<p>　　改为    CPen pen(PS_DASH, 1, RGB(255, 0, 0));  是虚线。（其中第二个参数需小于等于10）<br>    CPen pen(PS_DOT, 1, RGB(255, 0, 0)); 是点线。</p>
<h2 id="使用画刷绘图"><a href="#使用画刷绘图" class="headerlink" title="使用画刷绘图"></a>使用画刷绘图</h2><h3 id="简单画刷"><a href="#简单画刷" class="headerlink" title="简单画刷"></a>简单画刷</h3><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">void CDrawView::OnLButtonUp(UINT nFlags, CPoint point) </div><div class="line">&#123;</div><div class="line">	//创建一个红色画刷</div><div class="line">	CBrush brush(RGB(255, 0, 0));</div><div class="line">	//创建并获得设备描述表</div><div class="line">	CClientDC dc(this);</div><div class="line">	//利用红色画刷填充鼠标拖拽过程中形成的矩形区域</div><div class="line">	dc.FillRect(CRect(m_ptOrigin, point),&amp;brush);</div><div class="line"></div><div class="line">	CView::OnLButtonUp(nFlags, point);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p> <img src="http://img.blog.csdn.net/20170420230440190?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<h3 id="位图画刷"><a href="#位图画刷" class="headerlink" title="位图画刷"></a>位图画刷</h3><p>　　Insert-Resource-Bitmap-New，在这里发挥灵魂画手的天赋吧！<br>　　代码：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">void</span> CDrawView::OnLButtonUp(UINT nFlags, CPoint point) </div><div class="line">&#123;</div><div class="line">	<span class="comment">//创建位图对象</span></div><div class="line">	CBitmap bitmap;</div><div class="line">	<span class="comment">//加载位图资源</span></div><div class="line">	bitmap.LoadBitmap(IDB_BITMAP1);</div><div class="line">	<span class="comment">//创建位图画刷</span></div><div class="line">	<span class="function">CBrush <span class="title">brush</span><span class="params">(&amp;bitmap)</span></span>;</div><div class="line">	<span class="comment">//创建并获得设备描述表</span></div><div class="line">	<span class="function">CClientDC <span class="title">dc</span><span class="params">(<span class="keyword">this</span>)</span></span>;</div><div class="line">	<span class="comment">//利用位图画刷填充鼠标拖拽过程中形成的矩形区域</span></div><div class="line">	dc.FillRect(CRect(m_ptOrigin, point),&amp;brush);</div><div class="line"></div><div class="line">	CView::OnLButtonUp(nFlags, point);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p> <img src="http://img.blog.csdn.net/20170420230503092?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"><br>　　我画的是不是很滑稽（手动滑稽）</p>
<h3 id="透明画刷"><a href="#透明画刷" class="headerlink" title="透明画刷"></a>透明画刷</h3><p>　　先进行一种尝试：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">void</span> CDrawView::OnLButtonUp(UINT nFlags, CPoint point) </div><div class="line">&#123;</div><div class="line">	<span class="comment">//创建并获得设备描述表</span></div><div class="line">	<span class="function">CClientDC <span class="title">dc</span><span class="params">(<span class="keyword">this</span>)</span></span>;</div><div class="line">	<span class="comment">//绘制一个矩形</span></div><div class="line">	dc.Rectangle(CRect(m_ptOrigin,point));</div><div class="line"></div><div class="line">	CView::OnLButtonUp(nFlags, point);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p> <img src="http://img.blog.csdn.net/20170420230521295?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"><br>　　如果希望矩形内部是透明的，能够看到被遮挡的图形，就要创建一个透明画刷。<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">void</span> CDrawView::OnLButtonUp(UINT nFlags, CPoint point) </div><div class="line">&#123;</div><div class="line">	<span class="comment">//创建并获得设备描述表</span></div><div class="line">	<span class="function">CClientDC <span class="title">dc</span><span class="params">(<span class="keyword">this</span>)</span></span>;</div><div class="line">	<span class="comment">//创建一个空画刷</span></div><div class="line">	CBrush *pBrush = CBrush::FromHandle((HBRUSH)GetStockObject(NULL_BRUSH));</div><div class="line">	<span class="comment">//将空画刷选入设备描述表</span></div><div class="line">	CBrush *pOldBrush = dc.SelectObject(pBrush);</div><div class="line">	<span class="comment">//绘制一个矩形</span></div><div class="line">	dc.Rectangle(CRect(m_ptOrigin, point));</div><div class="line">	<span class="comment">//恢复先前的画刷</span></div><div class="line">	dc.SelectObject(pOldBrush);</div><div class="line"></div><div class="line">	CView::OnLButtonUp(nFlags, point);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p><img src="http://img.blog.csdn.net/20170420230550253?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<h2 id="绘制连续线条"><a href="#绘制连续线条" class="headerlink" title="绘制连续线条"></a>绘制连续线条</h2><p>　　首先为视类增加鼠标移动消息（WM_MOUSEMOVE）的响应函数（默认OnMouseMove），并为视类添加一个BOOL型的私有成员变量m_bDraw。<br>在视类头文件定义：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">　Private:</div><div class="line">　BOOL m_bDraw;</div></pre></td></tr></table></figure></p>
<p>在视类的构造函数中：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">m_bDraw = FALSE;</div></pre></td></tr></table></figure></p>
<p>在OnLButtonDown中：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">m_bDraw = TRUE;</div></pre></td></tr></table></figure></p>
<p>在OnLButtonUp中：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">m_bDraw = FALSE;</div></pre></td></tr></table></figure></p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">void</span> CDrawView::OnMouseMove(UINT nFlags, CPoint point) </div><div class="line">&#123;</div><div class="line">	<span class="function">CClientDC <span class="title">dc</span><span class="params">(<span class="keyword">this</span>)</span></span>;</div><div class="line">	<span class="keyword">if</span>(m_bDraw == TRUE)</div><div class="line">	&#123;</div><div class="line">		dc.MoveTo(m_ptOrigin);</div><div class="line">		dc.LineTo(point);</div><div class="line">		<span class="comment">//修改线段的起点</span></div><div class="line">		m_ptOrigin = point;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	CView::OnMouseMove(nFlags, point);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><img src="http://img.blog.csdn.net/20170420230616957?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<p>给线条换色：<br><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">void CDrawView::OnMouseMove(UINT nFlags, CPoint point) </div><div class="line">&#123;</div><div class="line">	CClientDC dc(this);</div><div class="line">		//创建一个红色的、宽度为1的实线画笔</div><div class="line">		CPen pen(PS_SOLID, 1, RGB(255, 0, 0));</div><div class="line">		//把创建的画笔选入设备描述表</div><div class="line">		CPen *pOldPen = dc.SelectObject(&amp;pen);</div><div class="line">		if (m_bDraw == TRUE)</div><div class="line">		&#123;</div><div class="line">		dc.MoveTo(m_ptOrigin);</div><div class="line">		dc.LineTo(point);</div><div class="line">		//修改线段的起点</div><div class="line">		m_ptOrigin = point;</div><div class="line">	&#125;</div><div class="line">	//恢复设备描述表</div><div class="line">		dc.SelectObject(pOldPen);</div><div class="line"></div><div class="line">	CView::OnMouseMove(nFlags, point);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h2 id="绘制扇形效果的线条"><a href="#绘制扇形效果的线条" class="headerlink" title="绘制扇形效果的线条"></a>绘制扇形效果的线条</h2><p>　　去掉上述代码中的     m_ptOrigin = point;</p>
<p>　　效果：<br>　　<img src="http://img.blog.csdn.net/20170420230636254?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<p>　　绘制一个带边线的扇形：<br>　　为CDrawView类增加一个CPoint类型的私有成员变量m_ptOld，用来保存鼠标上一个移动点。</p>
<p>　　在OnLButton中：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">m_ptOld = point;</div></pre></td></tr></table></figure></p>
<p>　　在OnMouseMove中：<br><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line">void CDrawView::OnMouseMove(UINT nFlags, CPoint point) </div><div class="line">&#123;</div><div class="line">	CClientDC dc(this);</div><div class="line">		//创建一个红色的、宽度为1的实线画笔</div><div class="line">		CPen pen(PS_SOLID, 1, RGB(255, 0, 0));</div><div class="line">		//把创建的画笔选入设备描述表</div><div class="line">		CPen *pOldPen = dc.SelectObject(&amp;pen);</div><div class="line">		if (m_bDraw == TRUE)</div><div class="line">		&#123;</div><div class="line">		dc.MoveTo(m_ptOrigin);</div><div class="line">		dc.LineTo(point);</div><div class="line">		dc.LineTo(m_ptOld);</div><div class="line">		//修改线段的起点</div><div class="line">		//m_ptOrigin = point;</div><div class="line">		m_ptOld = point;</div><div class="line">	&#125;</div><div class="line">	//恢复设备描述表</div><div class="line">		dc.SelectObject(pOldPen);</div><div class="line"></div><div class="line">	CView::OnMouseMove(nFlags, point);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>　　最好将OnLButtonUp里原来写的代码删除或注释之。<br>　　效果：<br> <img src="http://img.blog.csdn.net/20170420230656311?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<p>　　MFC提供一个设置绘图模式的函数SetROP2，带有一个参数R2_BLACK、R2_WHITE、R2_MERGENOTPEN等。<br>　　例如，在CClientDC dc(this); 下方添加代码：     dc.SetROP2(R2_MERGENOTPEN);  编译运行后看不到绘制的线条，这就是设置了R2_MERGENOTPEN这种绘图模式。<br>使用R2_BLACK，将会发现绘制的线条颜色始终都是黑色的。</p>
<h1 id="文本编程"><a href="#文本编程" class="headerlink" title="文本编程"></a>文本编程</h1><h2 id="插入符"><a href="#插入符" class="headerlink" title="插入符"></a>插入符</h2><h3 id="创建文本插入符"><a href="#创建文本插入符" class="headerlink" title="创建文本插入符"></a>创建文本插入符</h3><p>　　创建一个单文档类型的MFC AppWizard(exe)工程，取名为Text。<br>为CTextView类添加WM_CREATE消息的响应函数OnCreate，在此函数中创建一个宽度为20、高度为100的插入符。代码如下。<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">int</span> CTextView::OnCreate(LPCREATESTRUCT lpCreateStruct) </div><div class="line">&#123;</div><div class="line">	<span class="keyword">if</span> (CView::OnCreate(lpCreateStruct) == <span class="number">-1</span>)</div><div class="line">		<span class="keyword">return</span> <span class="number">-1</span>;</div><div class="line">	</div><div class="line">	CreateSolidCaret(<span class="number">20</span>,<span class="number">100</span>);</div><div class="line">	ShowCaret();</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p><img src="http://img.blog.csdn.net/20170420230721832?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<p>　　让插入符适应于当前字体的大小：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">int</span> CTextView::OnCreate(LPCREATESTRUCT lpCreateStruct) </div><div class="line">&#123;</div><div class="line">	<span class="keyword">if</span> (CView::OnCreate(lpCreateStruct) == <span class="number">-1</span>)</div><div class="line">		<span class="keyword">return</span> <span class="number">-1</span>;</div><div class="line">	</div><div class="line">	<span class="comment">//创建设备描述表</span></div><div class="line">	<span class="function">CClientDC <span class="title">dc</span><span class="params">(<span class="keyword">this</span>)</span></span>;</div><div class="line">	<span class="comment">//定义文本信息结构体变量</span></div><div class="line">	TEXTMETRIC tm;</div><div class="line">	<span class="comment">//获得设备描述表中的文本信息</span></div><div class="line">	dc.GetTextMetrics(&amp;tm);</div><div class="line">	<span class="comment">//根据字体大小，创建何时的插入符（除以8是经验值）</span></div><div class="line">	CreateSolidCaret(tm.tmAveCharWidth/<span class="number">8</span>, tm.tmHeight);</div><div class="line">	<span class="comment">//显示插入符</span></div><div class="line">	ShowCaret();</div><div class="line"></div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>　　运行结果就比较符合常规了。</p>
<h3 id="创建图形插入符"><a href="#创建图形插入符" class="headerlink" title="创建图形插入符"></a>创建图形插入符</h3><p>　　新建一个位图资源，画一个图形。<br>在TextView.h中添加<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">private</span>:</div><div class="line">		CBitmap bitmap;</div></pre></td></tr></table></figure></p>
<p>代码：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">int</span> CTextView::OnCreate(LPCREATESTRUCT lpCreateStruct) </div><div class="line">&#123;</div><div class="line">	<span class="keyword">if</span> (CView::OnCreate(lpCreateStruct) == <span class="number">-1</span>)</div><div class="line">		<span class="keyword">return</span> <span class="number">-1</span>;</div><div class="line">	</div><div class="line"></div><div class="line">	bitmap.LoadBitmap(IDB_BITMAP1);</div><div class="line">	CreateCaret(&amp;bitmap);</div><div class="line">	ShowCaret();</div><div class="line"></div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p><img src="http://img.blog.csdn.net/20170420230741630?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<h2 id="窗口重绘"><a href="#窗口重绘" class="headerlink" title="窗口重绘"></a>窗口重绘</h2><h3 id="ondraw函数"><a href="#OnDraw函数" class="headerlink" title="OnDraw函数"></a>OnDraw函数</h3><p>　　实现在程序窗口中输出一串文字的功能。<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">void</span> CTextView::OnDraw(CDC* pDC)</div><div class="line">&#123;</div><div class="line">	CTextDoc* pDoc = GetDocument();</div><div class="line">	ASSERT_VALID(pDoc);</div><div class="line"></div><div class="line">	<span class="function">CString <span class="title">str</span><span class="params">(<span class="string">"VC++ 深入编程"</span>)</span></span>;</div><div class="line">	pDC-&gt;TextOut(<span class="number">50</span>, <span class="number">50</span>, str);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p> <img src="http://img.blog.csdn.net/20170420230758895?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<h3 id="添加字符串资源"><a href="#添加字符串资源" class="headerlink" title="添加字符串资源"></a>添加字符串资源</h3><p>　　点击Resource View-String Table选项，在此字符串表最底部的空行上双击，即可弹出添加新字符串资源的对话框。ID：IDS_STRINGVC，Caption：“VC++编程 文本编程”。代码如下。<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">void</span> CTextView::OnDraw(CDC* pDC)</div><div class="line">&#123;</div><div class="line">	CTextDoc* pDoc = GetDocument();</div><div class="line">	ASSERT_VALID(pDoc);</div><div class="line"></div><div class="line">	<span class="comment">//CString str("VC++ 深入编程");</span></div><div class="line">	CString str;</div><div class="line">	str = <span class="string">"VC++ 深入编程"</span>;</div><div class="line">	pDC-&gt;TextOut(<span class="number">50</span>, <span class="number">50</span>, str);</div><div class="line"></div><div class="line">	str.LoadString(IDS_STRINGVC);</div><div class="line">	pDC-&gt;TextOut(<span class="number">0</span>, <span class="number">200</span>, str);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p><img src="http://img.blog.csdn.net/20170420230814077?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<h3 id="路径"><a href="#路径" class="headerlink" title="路径"></a>路径</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="keyword">void</span> CTextView::OnDraw(CDC* pDC)</div><div class="line">&#123;</div><div class="line">	CTextDoc* pDoc = GetDocument();</div><div class="line">	ASSERT_VALID(pDoc);</div><div class="line"></div><div class="line">	<span class="comment">//CString str("VC++ 深入编程");</span></div><div class="line">	CString str;</div><div class="line">	str = <span class="string">"VC++ 深入编程"</span>;</div><div class="line">	pDC-&gt;TextOut(<span class="number">50</span>, <span class="number">50</span>, str);</div><div class="line"></div><div class="line">	CSize sz = pDC-&gt;GetTextExtent(str);</div><div class="line"></div><div class="line">	str.LoadString(IDS_STRINGVC);</div><div class="line">	pDC-&gt;TextOut(<span class="number">0</span>, <span class="number">200</span>, str);</div><div class="line"></div><div class="line">	pDC-&gt;BeginPath();</div><div class="line">	pDC-&gt;Rectangle(<span class="number">50</span>, <span class="number">50</span>, <span class="number">50</span>+sz.cx, <span class="number">50</span>+sz.cy);</div><div class="line">	pDC-&gt;EndPath();</div><div class="line"></div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;<span class="number">300</span>; i+=<span class="number">10</span>)</div><div class="line">	&#123;</div><div class="line">		pDC-&gt;MoveTo(<span class="number">0</span>, i);</div><div class="line">		pDC-&gt;LineTo(<span class="number">300</span>, i);</div><div class="line">		pDC-&gt;MoveTo(i,<span class="number">0</span>);</div><div class="line">		pDC-&gt;LineTo(i,<span class="number">300</span>);</div><div class="line">	&#125;</div></pre></td></tr></table></figure>
<p> <img src="http://img.blog.csdn.net/20170420230830380?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">void</span> CTextView::OnDraw(CDC* pDC)</div><div class="line">&#123;</div><div class="line">	CTextDoc* pDoc = GetDocument();</div><div class="line">	ASSERT_VALID(pDoc);</div><div class="line"></div><div class="line">	<span class="comment">//CString str("VC++ 深入编程");</span></div><div class="line">	CString str;</div><div class="line">	str = <span class="string">"VC++ 深入编程"</span>;</div><div class="line">	pDC-&gt;TextOut(<span class="number">50</span>, <span class="number">50</span>, str);</div><div class="line"></div><div class="line">	CSize sz = pDC-&gt;GetTextExtent(str);</div><div class="line"></div><div class="line">	str.LoadString(IDS_STRINGVC);</div><div class="line">	pDC-&gt;TextOut(<span class="number">0</span>, <span class="number">200</span>, str);</div><div class="line"></div><div class="line">	pDC-&gt;BeginPath();</div><div class="line">	pDC-&gt;Rectangle(<span class="number">50</span>, <span class="number">50</span>, <span class="number">50</span>+sz.cx, <span class="number">50</span>+sz.cy);</div><div class="line">	pDC-&gt;EndPath();</div><div class="line">	pDC-&gt;SelectClipPath(RGN_DIFF);</div><div class="line"></div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;<span class="number">300</span>; i+=<span class="number">10</span>)</div><div class="line">	&#123;</div><div class="line">		pDC-&gt;MoveTo(<span class="number">0</span>, i);</div><div class="line">		pDC-&gt;LineTo(<span class="number">300</span>, i);</div><div class="line">		pDC-&gt;MoveTo(i,<span class="number">0</span>);</div><div class="line">		pDC-&gt;LineTo(i,<span class="number">300</span>);</div><div class="line">	&#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p> <img src="http://img.blog.csdn.net/20170420230849318?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"><br>　　这正是RGN_DIFF模式的效果。<br>　　如果是RGN_AND，效果是新的裁剪区域是当前裁剪区域和当前路径层的交集。</p>
<p>　　路径层的作用：实现特殊效果。如，希望整幅图形中某一部分与其他部分有所区别，就可以把这部分的图形设置到一个路径层中，然后利用SelectClipPath函数设置一种模式，让路径层和裁剪区域进行互操作以达到一种特殊效果。</p>
<h2 id="字符输入"><a href="#字符输入" class="headerlink" title="字符输入"></a>字符输入</h2><p>　　当用户在键盘上按下某个字符按键后，要把该字符输出到程序窗口上。<br>首先让CTextView捕获WM_CHAR消息，接着为该类定义一个CString类型的成员变量：m_strLine，并在CTextView类的构造函数中将这个变量初始化：m_strLine = “”;<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">void</span> CTextView::OnLButtonDown(UINT nFlags, CPoint point) </div><div class="line">&#123;</div><div class="line">	SetCaretPos(point);</div><div class="line"></div><div class="line">	CView::OnLButtonDown(nFlags, point);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p><img src="http://img.blog.csdn.net/20170420230906115?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"><br>　　为CTextView类再增加一个CPoint类型的成员变量，取名m_ptOrigin，权限为私有。在CTextView类的构造函数中设置其初值为0。<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">void</span> CTextView::OnLButtonDown(UINT nFlags, CPoint point) </div><div class="line">&#123;</div><div class="line">	SetCaretPos(point);</div><div class="line">	m_strLine.Empty();</div><div class="line">	m_ptOrigin = point;</div><div class="line"></div><div class="line">	CView::OnLButtonDown(nFlags, point);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>　　<strong>注意：回车字符的ASCII码十六进制是0x0d，退格键的ASCII码十六进制值是0x08。</strong></p>
<p>　　最终代码：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">void</span> CTextView::OnChar(UINT nChar, UINT nRepCnt, UINT nFlags) </div><div class="line">&#123;</div><div class="line">	<span class="function">CClientDC <span class="title">dc</span><span class="params">(<span class="keyword">this</span>)</span></span>;</div><div class="line">	TEXTMETRIC tm;</div><div class="line">	dc.GetTextMetrics(&amp;tm);</div><div class="line">	<span class="keyword">if</span> (<span class="number">0x0d</span> == nChar)</div><div class="line">	&#123;</div><div class="line">	m_strLine.Empty();</div><div class="line">	m_ptOrigin.y += tm.tmHeight;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">else</span> <span class="keyword">if</span>(<span class="number">0x08</span> == nChar)</div><div class="line">	&#123;</div><div class="line">		COLORREF clr = dc.SetTextColor(dc.GetBkColor());</div><div class="line">		dc.TextOut(m_ptOrigin.x, m_ptOrigin.y, m_strLine);</div><div class="line">		m_strLine = m_strLine.Left(m_strLine.GetLength() - <span class="number">1</span>);</div><div class="line">		dc.SetTextColor(clr);</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">else</span></div><div class="line">	&#123;</div><div class="line">		m_strLine += nChar; </div><div class="line">	&#125;</div><div class="line">	CSize sz = dc.GetTextExtent(m_strLine);</div><div class="line">	CPoint pt;</div><div class="line">	pt.x = m_ptOrigin.x + sz.cx;</div><div class="line">	pt.y = m_ptOrigin.y;</div><div class="line">	SetCaretPos(pt);</div><div class="line"></div><div class="line">	dc.TextOut(m_ptOrigin.x, m_ptOrigin.y, m_strLine);</div><div class="line"></div><div class="line">	</div><div class="line">	CView::OnChar(nChar, nRepCnt, nFlags);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p><img src="http://img.blog.csdn.net/20170420230925890?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<h3 id="设置字体"><a href="#设置字体" class="headerlink" title="设置字体"></a>设置字体</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">void</span> CTextView::OnChar(UINT nChar, UINT nRepCnt, UINT nFlags) </div><div class="line">&#123;</div><div class="line">	<span class="function">CClientDC <span class="title">dc</span><span class="params">(<span class="keyword">this</span>)</span></span>;</div><div class="line">	CFont font;</div><div class="line">	font.CreatePointFont(<span class="number">300</span>, <span class="string">"华文行楷"</span>, <span class="literal">NULL</span>);</div><div class="line">	CFont *pOldFont = dc.SelectObject(&amp;font);</div><div class="line">……</div><div class="line">	dc.SelectObject(pOldFont);</div><div class="line">	</div><div class="line">	CView::OnChar(nChar, nRepCnt, nFlags);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p> <img src="http://img.blog.csdn.net/20170420230949366?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<h3 id="字幕变色功能的实现"><a href="#字幕变色功能的实现" class="headerlink" title="字幕变色功能的实现"></a>字幕变色功能的实现</h3><p>　　在这个Text例子中，我们在视类的OnCreate 函数中设置定时器，设置一个时间间隔为100ms，标识为1的定时器。<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">int</span> CTextView::OnCreate(LPCREATESTRUCT lpCreateStruct) </div><div class="line">&#123;</div><div class="line">	……</div><div class="line"></div><div class="line">	SetTimer(<span class="number">1</span>, <span class="number">100</span>, <span class="literal">NULL</span>);</div><div class="line"></div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>　　给CTextView类添加WM_TIMER消息的响应函数。<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">void</span> CTextView::OnTimer(UINT nIDEvent) </div><div class="line">&#123;</div><div class="line">	m_nWidth += <span class="number">5</span>;</div><div class="line"></div><div class="line">	<span class="function">CClientDC <span class="title">dc</span><span class="params">(<span class="keyword">this</span>)</span></span>;</div><div class="line">	TEXTMETRIC tm;</div><div class="line">	dc.GetTextMetrics(&amp;tm);</div><div class="line">	CRect rect;</div><div class="line">	rect.left =<span class="number">0</span>;</div><div class="line">	rect.top = <span class="number">200</span>;</div><div class="line">	rect.right = m_nWidth;</div><div class="line">	rect.bottom = rect.top + tm.tmHeight;</div><div class="line"></div><div class="line">	dc.SetTextColor(RGB(<span class="number">255</span>, <span class="number">0</span>, <span class="number">0</span>));</div><div class="line">	CString str;</div><div class="line">	str.LoadString(IDS_STRINGVC);</div><div class="line">	dc.DrawText(str, rect, DT_LEFT);</div><div class="line">	</div><div class="line">	rect.top = <span class="number">150</span>;</div><div class="line">	rect.bottom = rect.top + tm.tmHeight;</div><div class="line">	dc.DrawText(str, rect, DT_RIGHT);</div><div class="line">	</div><div class="line">	CSize sz = dc.GetTextExtent(str);</div><div class="line">	<span class="keyword">if</span> (m_nWidth &gt; sz.cx)</div><div class="line">	&#123;</div><div class="line">		m_nWidth = <span class="number">0</span>;</div><div class="line">		dc.SetTextColor(RGB(<span class="number">0</span>, <span class="number">255</span>, <span class="number">0</span>));</div><div class="line">		dc.TextOut(<span class="number">0</span>, <span class="number">200</span>, str);</div><div class="line">	&#125;</div><div class="line">	</div><div class="line">	CView::OnTimer(nIDEvent);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>　　红色渐变效果可看到。<br><img src="http://img.blog.csdn.net/20170420231009906?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<h1 id="绘图控制"><a href="#绘图控制" class="headerlink" title="绘图控制"></a>绘图控制</h1><h2 id="简单绘图"><a href="#简单绘图-1" class="headerlink" title="简单绘图"></a>简单绘图</h2><p>　　新建一个单文档类型的MFC AppWizard(exe)工程，取名：Graphic。<br>　　添加的菜单项：<br> <img src="http://img.blog.csdn.net/20170420231023694?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"><br>　　给CGraphicView类中添加一个私有变量：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">UINT m_nDrawType;</div></pre></td></tr></table></figure></p>
<p>　　在视类构造函数中将此变量初始化为0。</p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">void</span> CGraphicView::OnDot() </div><div class="line">&#123;</div><div class="line">	m_nDrawType = <span class="number">1</span>;</div><div class="line">	</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">void</span> CGraphicView::OnLine() </div><div class="line">&#123;</div><div class="line">	m_nDrawType = <span class="number">2</span>;	</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">void</span> CGraphicView::OnRectangle() </div><div class="line">&#123;</div><div class="line">	m_nDrawType = <span class="number">3</span>;	</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">void</span> CGraphicView::OnEllipse() </div><div class="line">&#123;</div><div class="line">	m_nDrawType = <span class="number">4</span>;	</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>　　CGraphicView类再增加一个CPoint类型的私有成员变量：m_ptOrigin。在CGraphicView类构造函数中，将该变量的值设置为0。<br><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div></pre></td><td class="code"><pre><div class="line">void CGraphicView::OnLButtonDown(UINT nFlags, CPoint point) </div><div class="line">&#123;</div><div class="line">	m_ptOrigin = point;</div><div class="line">	</div><div class="line">	CView::OnLButtonDown(nFlags, point);</div><div class="line">&#125;</div><div class="line"></div><div class="line">void CGraphicView::OnLButtonUp(UINT nFlags, CPoint point) </div><div class="line">&#123;</div><div class="line">	CClientDC dc(this);</div><div class="line">	//为边框设定颜色</div><div class="line">	CPen pen(PS_SOLID, 1, RGB(255, 0, 0));</div><div class="line">	dc.SelectObject(&amp;pen);</div><div class="line">	//能看到图形内部内容(透明)</div><div class="line">	CBrush *pBrush = CBrush::FromHandle((HBRUSH)GetStockObject(NULL_BRUSH));</div><div class="line">	dc.SelectObject(pBrush);</div><div class="line"></div><div class="line">	switch(m_nDrawType)</div><div class="line">	&#123;</div><div class="line">	case 1:</div><div class="line">		dc.SetPixel(point,RGB(255, 0, 0));</div><div class="line">		break;</div><div class="line">	case 2:</div><div class="line">		dc.MoveTo(m_ptOrigin);</div><div class="line">		dc.LineTo(point);</div><div class="line">		break;</div><div class="line">	case 3:</div><div class="line">		dc.Rectangle(CRect(m_ptOrigin,point));</div><div class="line">		break;</div><div class="line">	case 4:</div><div class="line">		dc.Ellipse(CRect(m_ptOrigin, point));</div><div class="line">		break;</div><div class="line">	&#125;</div><div class="line">	CView::OnLButtonUp(nFlags, point);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p> <img src="http://img.blog.csdn.net/20170420231045554?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<h2 id="设置对话框"><a href="#设置对话框" class="headerlink" title="设置对话框"></a>设置对话框</h2><p>　　再增加一个对话框资源，ID为IDD_DLG_SETTING，Caption为Setting，Font为宋体。</p>
<h3 id="设置线宽"><a href="#设置线宽" class="headerlink" title="设置线宽"></a>设置线宽</h3><p>　　添加一个静态文本框，并将Caption设为“线宽”。再添加一个编辑框，ID：IDC_LINE_WIDTH。为此对话框资源创建一个响应的对话框类，类名为CSettingDlg。对编辑框右键，ClassWizard，为它添加一个成员变量：m_nLineWidth，类型为UINT。为绘图菜单下再增加一个菜单项为“设置”，ID为IDM_SETTING。为此菜单项添加一个命令响应，选择视类做出响应。为CGraphicView类添加一个私有成员变量：m_nLineWidth，类型：UINT，并在CGraphicView类的构造函数初始化为0。<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">void</span> CGraphicView::OnSetting() </div><div class="line">&#123;</div><div class="line">	CSettingDlg dlg;</div><div class="line">	dlg.m_nLineWidth = m_nLineWidth; <span class="comment">//将保存的用户先前设置的线宽再传回给该设置对话框</span></div><div class="line">	<span class="keyword">if</span>(IDOK == dlg.DoModal())<span class="comment">//点击OK才保持线宽值</span></div><div class="line">	&#123;</div><div class="line">		m_nLineWidth = dlg.m_nLineWidth;</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>　　在源文件前部添加：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Include “SettingDlg.h”</div></pre></td></tr></table></figure></p>
<p>　　修改OnLButtonUp函数：<br><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">void CGraphicView::OnLButtonUp(UINT nFlags, CPoint point) </div><div class="line">&#123;</div><div class="line">	CClientDC dc(this);</div><div class="line">	//为边框设定颜色(m_nLineWidth定义线宽)</div><div class="line">	CPen pen(PS_SOLID, m_nLineWidth, RGB(255, 0, 0));</div><div class="line">……</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h3 id="设置线型"><a href="#设置线型" class="headerlink" title="设置线型"></a>设置线型</h3><p>　　为对话框资源添加一个组框，Caption设为线型。ID为IDC_LINE_STYLE。在组框内放三个单选按钮，ID不变，名称分别为：实线、虚线、点线（不要改变顺序）。在第一个单选按钮上右键，属性勾上Group，使三个按钮成为一组。再为CGraphicView类添加一个Int类型的私有成员变量m_nLineStyle，在构造函数中初始化为0。<br>　　由于WINGDI.h定义了一些符号常量，（可以在PS_SOLID右键，Go To Definition Of PS_SOLID），刚好PS_SOLID（实线）值本身就是0；PS_DASH（虚线）是1；PS_DOT（点线）是2。所以此处的排列是故意为之。<br> <img src="http://img.blog.csdn.net/20170424215210507?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"><br> <img src="http://img.blog.csdn.net/20170424215239306?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<p>　　<strong>注意：若要画出虚线和点线，线宽只能为0或1。</strong></p>
<h2 id="颜色对话框"><a href="#颜色对话框" class="headerlink" title="颜色对话框"></a>颜色对话框</h2><p>　　在绘图下增加一个子菜单，ID为IDM_COLOR，Caption为颜色。为其在视类增加一个命令响应，代码：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">void</span> CGraphicView::OnColor() </div><div class="line">&#123;</div><div class="line">	CColorDialog dlg;</div><div class="line">	dlg.m_cc.Flags |= CC_RGBINIT;</div><div class="line">	dlg.m_cc.rgbResult = m_clr;</div><div class="line">	<span class="keyword">if</span> (IDOK == dlg.DoModal())</div><div class="line">	&#123;</div><div class="line">		m_clr = dlg.m_cc.rgbResult;</div><div class="line">		<span class="comment">//dlg.m_cc.Flags |= CC_RGBINIT | CC_FULLOPEN;//让颜色对话框完全展开</span></div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>　　为CGraphicView类再增加一个COLORREF类型的私有成员变量：m_clr，并在构造函数中初始化为红色：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">m_clr = RGB(<span class="number">255</span>, <span class="number">0</span>, <span class="number">0</span>);</div></pre></td></tr></table></figure></p>
<p>　　修改该函数两处位置：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">void</span> CGraphicView::OnLButtonUp(UINT nFlags, CPoint point) </div><div class="line">&#123;</div><div class="line">	<span class="function">CClientDC <span class="title">dc</span><span class="params">(<span class="keyword">this</span>)</span></span>;</div><div class="line">	<span class="comment">//为边框设定颜色(m_nLineStyle定义线型，m_nLineWidth定义线宽，m_clr定义颜色)</span></div><div class="line">	<span class="function">CPen <span class="title">pen</span><span class="params">(m_nLineStyle, m_nLineWidth, m_clr)</span></span>;</div><div class="line">	dc.SelectObject(&amp;pen);</div><div class="line">	<span class="comment">//能看到图形内部内容(透明)</span></div><div class="line">	CBrush *pBrush = CBrush::FromHandle((HBRUSH)GetStockObject(NULL_BRUSH));</div><div class="line">	dc.SelectObject(pBrush);</div><div class="line"></div><div class="line">	<span class="keyword">switch</span>(m_nDrawType)</div><div class="line">	&#123;</div><div class="line">	<span class="keyword">case</span> <span class="number">1</span>:</div><div class="line">		dc.SetPixel(point,m_clr);</div><div class="line">		<span class="keyword">break</span>;</div><div class="line">	<span class="keyword">case</span> <span class="number">2</span>:</div><div class="line">		dc.MoveTo(m_ptOrigin);</div><div class="line">		dc.LineTo(point);</div><div class="line">		<span class="keyword">break</span>;</div><div class="line">	<span class="keyword">case</span> <span class="number">3</span>:</div><div class="line">		dc.Rectangle(CRect(m_ptOrigin,point));</div><div class="line">		<span class="keyword">break</span>;</div><div class="line">	<span class="keyword">case</span> <span class="number">4</span>:</div><div class="line">		dc.Ellipse(CRect(m_ptOrigin, point));</div><div class="line">		<span class="keyword">break</span>;</div><div class="line">	&#125;</div><div class="line">	CView::OnLButtonUp(nFlags, point);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p> <img src="http://img.blog.csdn.net/20170424215308947?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<p>　　注意：//dlg.m_cc.Flags |= CC_RGBINIT | CC_FULLOPEN;//让颜色对话框完全展开<br>这句我没能实现展开效果。</p>
<h2 id="字体对话框"><a href="#字体对话框" class="headerlink" title="字体对话框"></a>字体对话框</h2><p>　　增加一个菜单，ID为IDM_FONT，Caption为字体。在视类增加命令响应，代码：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">void</span> CGraphicView::OnFont() </div><div class="line">&#123;</div><div class="line">	CFontDialog dlg;</div><div class="line">	<span class="keyword">if</span> (IDOK == dlg.DoModal())</div><div class="line">	&#123;</div><div class="line">		<span class="keyword">if</span> (m_font.m_hObject) <span class="comment">//m_font对象是否已经与某字体资源相关联</span></div><div class="line">			m_font.DeleteObject();</div><div class="line">		m_font.CreateFontIndirect(dlg.m_cf.lpLogFont);</div><div class="line">		m_strFontName = dlg.m_cf.lpLogFont-&gt;lfFaceName;</div><div class="line">	&#125;</div><div class="line">	</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="keyword">void</span> CGraphicView::OnDraw(CDC* pDC)</div><div class="line">&#123;</div><div class="line">	CGraphicDoc* pDoc = GetDocument();</div><div class="line">	ASSERT_VALID(pDoc);</div><div class="line">	<span class="comment">// <span class="doctag">TODO:</span> add draw code for native data here</span></div><div class="line">	CFont *pOldFont = pDC-&gt;SelectObject(&amp;m_font);</div><div class="line">	pDC-&gt;TextOut(<span class="number">0</span>, <span class="number">0</span>, m_strFontName);</div><div class="line">	pDC-&gt;SelectObject(pOldFont);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="示例对话框"><a href="#示例对话框" class="headerlink" title="示例对话框"></a>示例对话框</h2><p>　　在对话框中增加一个组框，Caption:示例，ID：IDC_SAMPLE。为CSettingDlg类添加编辑框控件的EN_CHANCE响应函数，对三个单选按钮都选择BN_CLICKED消息。<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">void</span> CSettingDlg::OnRadio1() </div><div class="line">&#123;</div><div class="line">	<span class="comment">// <span class="doctag">TODO:</span> Add your control notification handler code here</span></div><div class="line">	Invalidate();	</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">void</span> CSettingDlg::OnRadio2() </div><div class="line">&#123;</div><div class="line">	<span class="comment">// <span class="doctag">TODO:</span> Add your control notification handler code here</span></div><div class="line">	Invalidate();	</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">void</span> CSettingDlg::OnRadio3() </div><div class="line">&#123;</div><div class="line">	<span class="comment">// <span class="doctag">TODO:</span> Add your control notification handler code here</span></div><div class="line">	Invalidate();	</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">void</span> CSettingDlg::OnPaint() </div><div class="line">&#123;</div><div class="line">	<span class="function">CPaintDC <span class="title">dc</span><span class="params">(<span class="keyword">this</span>)</span></span>; <span class="comment">// device context for painting</span></div><div class="line">	</div><div class="line">	<span class="comment">// <span class="doctag">TODO:</span> Add your message handler code here</span></div><div class="line">	UpdateData();</div><div class="line">	<span class="function">CPen <span class="title">pen</span><span class="params">(m_nLineStyle, m_nLineWidth, m_clr)</span></span>;</div><div class="line">	dc.SelectObject(&amp;pen);</div><div class="line"></div><div class="line">	CRect rect;</div><div class="line">	GetDlgItem(IDC_SAMPLE)-&gt;GetWindowRect(&amp;rect);</div><div class="line">	ScreenToClient(&amp;rect);</div><div class="line"></div><div class="line">	dc.MoveTo(rect.left+<span class="number">20</span>, rect.top+rect.Height()/<span class="number">2</span>);</div><div class="line">	dc.LineTo(rect.right<span class="number">-20</span>, rect.top+rect.Height()/<span class="number">2</span>);</div><div class="line">	<span class="comment">// Do not call CDialog::OnPaint() for painting messages</span></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><img src="http://img.blog.csdn.net/20170424215335853?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<p>　　现在可以实时修改了。</p>
<h2 id="106-改变对话框和控件的背景及文本颜色"><a href="#10-6-改变对话框和控件的背景及文本颜色" class="headerlink" title="10.6 改变对话框和控件的背景及文本颜色"></a>10.6 改变对话框和控件的背景及文本颜色</h2><h3 id="改变整个对话框及其子控件的背景色"><a href="#改变整个对话框及其子控件的背景色" class="headerlink" title="改变整个对话框及其子控件的背景色"></a>改变整个对话框及其子控件的背景色</h3><p>　　为CSettingDlg类添加WM_CTLCOLOR消息，并定义一个CBrush类型的私有成员变量：m_brush，并在构造函数中初始化一个蓝色画刷：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">m_brush.CreateSolidBrush (RGB(<span class="number">0</span>, <span class="number">0</span>, <span class="number">255</span>));</div></pre></td></tr></table></figure></p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">HBRUSH CSettingDlg::OnCtlColor(CDC* pDC, CWnd* pWnd, UINT nCtlColor) </div><div class="line">&#123;</div><div class="line">	HBRUSH hbr = CDialog::OnCtlColor(pDC, pWnd, nCtlColor);</div><div class="line">	</div><div class="line">	<span class="comment">// <span class="doctag">TODO:</span> Change any attributes of the DC here</span></div><div class="line">	</div><div class="line">	<span class="comment">// <span class="doctag">TODO:</span> Return a different brush if the default is not desired</span></div><div class="line">	<span class="comment">//return hbr;</span></div><div class="line">	<span class="keyword">return</span> m_brush;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p> <img src="http://img.blog.csdn.net/20170424215356165?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<h3 id="仅改变某个子控件的背景及文本颜色"><a href="#仅改变某个子控件的背景及文本颜色" class="headerlink" title="仅改变某个子控件的背景及文本颜色"></a>仅改变某个子控件的背景及文本颜色</h3><h1 id="图形的保存和重绘"><a href="#图形的保存和重绘" class="headerlink" title="图形的保存和重绘"></a>图形的保存和重绘</h1><h2 id="坐标空间和转换"><a href="#坐标空间和转换" class="headerlink" title="坐标空间和转换"></a>坐标空间和转换</h2><h3 id="坐标空间"><a href="#坐标空间" class="headerlink" title="坐标空间"></a>坐标空间</h3><p>　　Win32应用程序编程接口（API）使用四种坐标空间：世界坐标系空间、页面空间、设备空间和物理设备空间。Win32 API把世界坐标系空间和页面空间称为逻辑空间。</p>
<h3 id="转换"><a href="#转换" class="headerlink" title="转换"></a>转换</h3><p>　　转换是把对象从一个坐标空间复制到另一个坐标空间时改变（或转变）这一对象的大小、方位和形态。</p>
<h2 id="图形的保存和重绘"><a href="#图形的保存和重绘-1" class="headerlink" title="图形的保存和重绘"></a>图形的保存和重绘</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">HBRUSH CSettingDlg::OnCtlColor(CDC* pDC, CWnd* pWnd, UINT nCtlColor) </div><div class="line">&#123;</div><div class="line">	HBRUSH hbr = CDialog::OnCtlColor(pDC, pWnd, nCtlColor);</div><div class="line">	</div><div class="line">	<span class="comment">// <span class="doctag">TODO:</span> Change any attributes of the DC here</span></div><div class="line">	</div><div class="line">	<span class="comment">// <span class="doctag">TODO:</span> Return a different brush if the default is not desired</span></div><div class="line">	<span class="comment">//return hbr;</span></div><div class="line">	<span class="keyword">if</span> (pWnd -&gt; GetDlgCtrlID() == IDC_LINE_STYLE)</div><div class="line">	&#123;</div><div class="line">		pDC-&gt;SetTextColor(RGB(<span class="number">255</span>, <span class="number">0</span>, <span class="number">0</span>));</div><div class="line">		<span class="keyword">return</span> m_brush;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">return</span> hbr;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p> <img src="http://img.blog.csdn.net/20170424215530885?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<p>　　上述程序再加一行：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">pDC-&gt;SetBkMode(TRANSPARENT);</div></pre></td></tr></table></figure></p>
<p> <img src="http://img.blog.csdn.net/20170424215545651?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line">HBRUSH CSettingDlg::OnCtlColor(CDC* pDC, CWnd* pWnd, UINT nCtlColor) </div><div class="line">&#123;</div><div class="line">	HBRUSH hbr = CDialog::OnCtlColor(pDC, pWnd, nCtlColor);</div><div class="line">	</div><div class="line">	<span class="comment">// <span class="doctag">TODO:</span> Change any attributes of the DC here</span></div><div class="line">	</div><div class="line">	<span class="comment">// <span class="doctag">TODO:</span> Return a different brush if the default is not desired</span></div><div class="line">	<span class="comment">//return hbr;</span></div><div class="line">	<span class="keyword">if</span> (pWnd -&gt; GetDlgCtrlID() == IDC_LINE_STYLE)</div><div class="line">	&#123;</div><div class="line">		pDC-&gt;SetTextColor(RGB(<span class="number">255</span>, <span class="number">0</span>, <span class="number">0</span>));</div><div class="line">		pDC-&gt;SetBkMode(TRANSPARENT);</div><div class="line">		<span class="keyword">return</span> m_brush;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">if</span> (pWnd-&gt;GetDlgCtrlID() == IDC_LINE_WIDTH)</div><div class="line">	&#123;</div><div class="line">		pDC-&gt;SetTextColor(RGB(<span class="number">255</span>, <span class="number">0</span>, <span class="number">0</span>));</div><div class="line">		<span class="comment">//pDC-&gt;SetBkMode(TRANSPARENT);</span></div><div class="line">		pDC-&gt;SetBkColor(RGB(<span class="number">0</span>, <span class="number">0</span>, <span class="number">255</span>));</div><div class="line">		<span class="keyword">return</span> m_brush;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">return</span> hbr;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p> <img src="http://img.blog.csdn.net/20170424215606416?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<h3 id="改变控件上的文本字体"><a href="#改变控件上的文本字体" class="headerlink" title="改变控件上的文本字体"></a>改变控件上的文本字体</h3><p>　　为对话框增加一个静态文本控件，ID:IDC_TEXT，Caption:程序员，为CSettingDlg类增加一个CFont类型的私有成员变量：m_font，在构造函数中添加<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">m_font.CreatePointFont(<span class="number">200</span>, <span class="string">"华文行楷"</span>);</div></pre></td></tr></table></figure></p>
<p>　　在OnCtlColor函数中添加：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">if</span> (pWnd-&gt;GetDlgCtrlID() == IDC_TEXT)</div><div class="line">&#123;</div><div class="line">	pDC-&gt;SelectObject(&amp;m_font);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p> <img src="http://img.blog.csdn.net/20170424215622479?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<h3 id="改变按钮控件的背景色及文本颜色"><a href="#改变按钮控件的背景色及文本颜色" class="headerlink" title="改变按钮控件的背景色及文本颜色"></a>改变按钮控件的背景色及文本颜色</h3><p>　　在CSettingDlg类OnCtlColor函数中添加：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">	<span class="keyword">if</span> (pWnd-&gt;GetDlgCtrlID() == IDOK)</div><div class="line">	&#123;</div><div class="line">		pDC-&gt;SetTextColor(RGB(<span class="number">255</span>, <span class="number">0</span>, <span class="number">0</span>));</div><div class="line">		<span class="keyword">return</span> m_brush;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">return</span> hbr;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>　　点Insert-New Class，选择MFC Class，新增类名：CTestBtn，基类CButton。<br>　　为此类添加DrawItem虚函数重写。<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">void</span> CTestBtn::DrawItem(LPDRAWITEMSTRUCT lpDrawItemStruct) </div><div class="line">&#123;</div><div class="line">	<span class="comment">// <span class="doctag">TODO:</span> Add your code to draw the specified item</span></div><div class="line">	UINT uStyle = DFCS_BUTTONPUSH;</div><div class="line"></div><div class="line">	ASSERT(lpDrawItemStruct-&gt;CtlType == ODT_BUTTON);</div><div class="line"></div><div class="line">	<span class="keyword">if</span> (lpDrawItemStruct-&gt;itemState &amp; ODS_SELECTED)</div><div class="line">		uStyle |= DFCS_PUSHED;</div><div class="line"></div><div class="line">	::DrawFrameControl(lpDrawItemStruct-&gt;hDC, &amp;lpDrawItemStruct-&gt;rcItem, DFC_BUTTON, uStyle);</div><div class="line"></div><div class="line">	CString strText;</div><div class="line">	GetWindowText(strText);</div><div class="line"></div><div class="line">	COLORREF crOldColor = ::SetTextColor(lpDrawItemStruct-&gt;hDC, RGB(<span class="number">255</span>, <span class="number">0</span>, <span class="number">0</span>));</div><div class="line">	::DrawText(lpDrawItemStruct-&gt;hDC, strText, strText.GetLength(),</div><div class="line">		&amp;lpDrawItemStruct-&gt;rcItem, DT_SINGLELINE | DT_VCENTER | DT_CENTER);</div><div class="line">	::SetTextColor(lpDrawItemStruct-&gt;hDC, crOldColor);</div><div class="line">	</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>　　然而，此时我返回双击OK键显示“Cannot add new member”……</p>
<p>　　按理，接下来应该是：<br>　　利用ClassWizard打开Add Member Variable对话框，为OK按钮关联一个成员变量，名称为m_btnTest，类型CTestBtn。在SettingDlg.h文件前部添加<code>#include “TestBtn.h”</code>。对OK右键属性，打开Styles，选中Owner draw选项。此时OK文字变红色。</p>
<h2 id="位图的显示"><a href="#位图的显示" class="headerlink" title="位图的显示"></a>位图的显示</h2><h1 id="定制应用程序外观"><a href="#定制应用程序外观" class="headerlink" title="定制应用程序外观"></a>定制应用程序外观</h1><h2 id="修改应用程序窗口的外观"><a href="#修改应用程序窗口的外观" class="headerlink" title="修改应用程序窗口的外观"></a>修改应用程序窗口的外观</h2><h3 id="在窗口创建之前修改"><a href="#在窗口创建之前修改" class="headerlink" title="在窗口创建之前修改"></a>在窗口创建之前修改</h3><p>　　创建前，打开CMainFrame类的PreCreateWindow成员函数，修改CREATETRUCT结构体中的cx和cy成员。<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">BOOL CMainFrame::PreCreateWindow(CREATESTRUCT&amp; cs)</div><div class="line">&#123;</div><div class="line">	<span class="keyword">if</span>( !CFrameWnd::PreCreateWindow(cs) )</div><div class="line">		<span class="keyword">return</span> FALSE;</div><div class="line">	<span class="comment">// <span class="doctag">TODO:</span> Modify the Window class or styles here by modifying</span></div><div class="line">	<span class="comment">//  the CREATESTRUCT cs</span></div><div class="line">	cs.cx = <span class="number">300</span>;</div><div class="line">	cs.cy = <span class="number">200</span>;</div><div class="line">	<span class="keyword">return</span> TRUE;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>　　创建运行，可看到初始大小为300x200的应用程序窗口。</p>
<p>　　修改窗口标题：在上述 return TRUE; 前添加：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">cs.style &amp;= ~FWS_ADDTOTITLE;</div><div class="line">cs.lpszName = <span class="string">"http://www.sunxin.org"</span>;</div></pre></td></tr></table></figure></p>
<h2 id="在窗口创建之后修改"><a href="#在窗口创建之后修改" class="headerlink" title="在窗口创建之后修改"></a>在窗口创建之后修改</h2><p>　　注释掉之前添加的代码。在OnCreate函数中添加：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">int</span> CMainFrame::OnCreate(LPCREATESTRUCT lpCreateStruct)</div><div class="line">&#123;</div><div class="line">	…</div><div class="line"></div><div class="line">	<span class="comment">// <span class="doctag">TODO:</span> Delete these three lines if you don't want the toolbar to</span></div><div class="line">	<span class="comment">//  be dockable</span></div><div class="line">	m_wndToolBar.EnableDocking(CBRS_ALIGN_ANY);</div><div class="line">	EnableDocking(CBRS_ALIGN_ANY);</div><div class="line">	DockControlBar(&amp;m_wndToolBar);</div><div class="line"></div><div class="line">	SetWindowLong(m_hWnd, GWL_STYLE, WS_OVERLAPPEDWINDOW);</div><div class="line"></div><div class="line"></div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>　　创建运行后可看到文档标题去掉了。</p>
<p>　　去掉窗口最大化框类型：<br>　　将上述SetWindowLong函数替换为<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">SetWindowLong(m_hWnd, GWL_STYLE, GetWindowLong(m_hWnd, GWL_STYLE) &amp; ~WS_MAXIMIZEBOX);</div></pre></td></tr></table></figure></p>
<p>　　创建运行发现最大化框变灰，不能放大窗口了。</p>
<h2 id="修改窗口的光标-图标和背景"><a href="#修改窗口的光标、图标和背景" class="headerlink" title="修改窗口的光标、图标和背景"></a>修改窗口的光标、图标和背景</h2><h3 id="在窗口创建之前修改"><a href="#在窗口创建之前修改-1" class="headerlink" title="在窗口创建之前修改"></a>在窗口创建之前修改</h3><h1 id="网络编程"><a href="#网络编程" class="headerlink" title="网络编程"></a>网络编程</h1><h2 id="计算机网络基本知识"><a href="#计算机网络基本知识" class="headerlink" title="计算机网络基本知识"></a>计算机网络基本知识</h2><p>ISO/OSI七层参考模型<br>应用层——处理网络应用<br>Telnet、FTP、HTTP、DNS、SMTP、POP3</p>
<p>表示层——数据表示<br>TCP、UDP</p>
<p>会话层——主机间通信<br>传输层——端到端的连接<br>网络层——寻址和最短路径<br>IP、ICMP、IGMP</p>
<p>数据链路层——介质访问（接入）<br>物理层——二进制传输</p>
<h2 id="基于tcp的网络应用程序的编写"><a href="#基于TCP的网络应用程序的编写" class="headerlink" title="基于TCP的网络应用程序的编写"></a>基于TCP的网络应用程序的编写</h2><h3 id="服务器端程序"><a href="#服务器端程序" class="headerlink" title="服务器端程序"></a>服务器端程序</h3><p>　　关闭先前的工作区，新建一个工程，选择Win32 Console Application类型，名为TCPSrv。选择An empty project选项，创建一个空工程。再新建一个C++源文件：TcpSrv.cpp。<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;Winsock2.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line">	<span class="comment">//加载套接字库</span></div><div class="line">	WORD wVersionRequested;</div><div class="line">	WSADATA wsaData;</div><div class="line">	<span class="keyword">int</span> err;</div><div class="line"></div><div class="line">	wVersionRequested = MAKEWORD(<span class="number">1</span>, <span class="number">1</span>);</div><div class="line"></div><div class="line">	err = WSAStartup(wVersionRequested, &amp;wsaData);</div><div class="line">	<span class="keyword">if</span> (err != <span class="number">0</span>)&#123;</div><div class="line">		<span class="keyword">return</span>;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	<span class="keyword">if</span> (LOBYTE(wsaData.wVersion) != <span class="number">1</span> ||</div><div class="line">		HIBYTE(wsaData.wVersion) != <span class="number">1</span>)&#123;</div><div class="line">		WSACleanup();</div><div class="line">		<span class="keyword">return</span>;</div><div class="line">	&#125;</div><div class="line">	<span class="comment">//创建用于监听的套接字</span></div><div class="line">	SOCKET sockSrv = socket(AF_INET, SOCK_STREAM, <span class="number">0</span>);</div><div class="line"></div><div class="line">	SOCKADDR_IN addrSrv;</div><div class="line">	addrSrv.sin_addr.S_un.S_addr = htonl(INADDR_ANY);</div><div class="line">	addrSrv.sin_family = AF_INET;</div><div class="line">	addrSrv.sin_port = htons(<span class="number">7000</span>);</div><div class="line"></div><div class="line">	<span class="comment">//绑定套接字</span></div><div class="line">	bind(sockSrv, (SOCKADDR*)&amp;addrSrv, <span class="keyword">sizeof</span>(SOCKADDR));</div><div class="line">	<span class="comment">//将套接字设为监听模式，准备接收客户请求</span></div><div class="line">	listen(sockSrv, <span class="number">5</span>);</div><div class="line"></div><div class="line">	SOCKADDR_IN addrClient;</div><div class="line">	<span class="keyword">int</span> len = <span class="keyword">sizeof</span>(SOCKADDR);</div><div class="line"></div><div class="line">	<span class="keyword">while</span> (<span class="number">1</span>)</div><div class="line">	&#123;</div><div class="line">		<span class="comment">//等待客户请求到来</span></div><div class="line">		SOCKET sockConn = accept(sockSrv, (SOCKADDR*)&amp;addrClient, &amp;len);</div><div class="line">		<span class="keyword">char</span> sendBuf[<span class="number">100</span>];</div><div class="line">		<span class="built_in">sprintf</span>(sendBuf, <span class="string">"Welcome %s to http://www.sunxin.org"</span>, inet_ntoa(addrClient.sin_addr));</div><div class="line">		<span class="comment">//发送数据</span></div><div class="line">		send(sockConn, sendBuf, <span class="built_in">strlen</span>(sendBuf)+<span class="number">1</span>, <span class="number">0</span>);</div><div class="line">		<span class="keyword">char</span> recvBuf[<span class="number">100</span>];</div><div class="line">		<span class="comment">//接收数据</span></div><div class="line">		recv(sockConn, recvBuf, <span class="number">100</span>, <span class="number">0</span>);</div><div class="line">		<span class="comment">//打印接收的数据</span></div><div class="line">		<span class="built_in">printf</span>(<span class="string">"%s\n"</span>, recvBuf);</div><div class="line">		<span class="comment">//关闭套接字</span></div><div class="line">		closesocket(sockConn);</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>　　Project-Setting-Link，在Object/library modules编辑框中添加ws2_32.lib文件，注意输入的库文件与前面的库文件之间一定 要有一个空格。<br><img src="http://img.blog.csdn.net/20170428102011032?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<h3 id="客户端程序"><a href="#客户端程序" class="headerlink" title="客户端程序"></a>客户端程序</h3><p>　　在工作区名称上单击鼠标右键，选择Add New Project to Workspace，再创建一个Win32 Console Application类型的应用程序，创建一个空工程。为此增加一个C++源文件：TcpClient.cpp。<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;Winsock2.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line">	<span class="comment">//加载套接字库</span></div><div class="line">	WORD wVersionRequested;</div><div class="line">	WSADATA wsaData;</div><div class="line">	<span class="keyword">int</span> err;</div><div class="line"></div><div class="line">	wVersionRequested = MAKEWORD(<span class="number">1</span>, <span class="number">1</span>);</div><div class="line"></div><div class="line">	err = WSAStartup(wVersionRequested, &amp;wsaData);</div><div class="line">	<span class="keyword">if</span> (err != <span class="number">0</span>)&#123;</div><div class="line">		<span class="keyword">return</span>;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	<span class="keyword">if</span> (LOBYTE(wsaData.wVersion) != <span class="number">1</span> || </div><div class="line">		HIBYTE(wsaData.wVersion) != <span class="number">1</span>)&#123;</div><div class="line">		WSACleanup();</div><div class="line">		<span class="keyword">return</span>;</div><div class="line">	&#125;</div><div class="line">	<span class="comment">//创建套接字</span></div><div class="line">	SOCKET sockClient = socket(AF_INET, SOCK_STREAM, <span class="number">0</span>);</div><div class="line"></div><div class="line">	SOCKADDR_IN addrSrv;</div><div class="line">	addrSrv.sin_addr.S_un.S_addr = inet_addr(<span class="string">"127.0.0.1"</span>);</div><div class="line">	addrSrv.sin_family = AF_INET;</div><div class="line">	addrSrv.sin_port = htons(<span class="number">7000</span>);</div><div class="line"></div><div class="line">	<span class="comment">//向服务器发出连接请求</span></div><div class="line">	connect(sockClient, (SOCKADDR*)&amp;addrSrv, <span class="keyword">sizeof</span>(SOCKADDR));</div><div class="line"></div><div class="line">	<span class="comment">//接收数据</span></div><div class="line">	<span class="keyword">char</span> recvBuf[<span class="number">100</span>];</div><div class="line">	recv(sockClient, recvBuf, <span class="number">100</span>, <span class="number">0</span>);</div><div class="line">	<span class="built_in">printf</span>(<span class="string">"%s\n"</span>,recvBuf);</div><div class="line">	<span class="comment">//发送数据</span></div><div class="line">	send(sockClient, <span class="string">"This is lisi"</span>, <span class="built_in">strlen</span>(<span class="string">"This is lisi"</span>)+<span class="number">1</span>, <span class="number">0</span>);</div><div class="line">	<span class="comment">//关闭套接字</span></div><div class="line">	closesocket(sockClient);</div><div class="line">	WSACleanup();</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>　　链接库文件：ws2_32.lib。<br>　　创建运行，首先运行服务器程序，然后再运行客户端程序。</p>
<p><img src="http://img.blog.csdn.net/20170428102101643?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<p>　　<strong>注意</strong>：当没有报错，服务器端运行结果为“烫烫……烫”（N个烫）时，尝试换一个端口号，有可能你设置的端口号被其它的应用程序占用了。</p>
<h2 id="基于udp的网络应用程序的编写"><a href="#基于UDP的网络应用程序的编写" class="headerlink" title="基于UDP的网络应用程序的编写"></a>基于UDP的网络应用程序的编写</h2><h3 id="服务器端程序"><a href="#服务器端程序-1" class="headerlink" title="服务器端程序"></a>服务器端程序</h3><p>　　关闭先前的工作区，新建一个工程，选择Win32 Console Application类型，名为UdpSrv。选择An empty project选项，创建一个空工程。再新建一个C++源文件：UdpSrv.cpp。<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;Winsock2.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line">	<span class="comment">//加载套接字库</span></div><div class="line">	WORD wVersionRequired;</div><div class="line">	WSADATA wsaData;</div><div class="line">	<span class="keyword">int</span> err;</div><div class="line"></div><div class="line">	wVersionRequired = MAKEWORD(<span class="number">1</span>, <span class="number">1</span>);</div><div class="line"></div><div class="line">	err = WSAStartup(wVersionRequired, &amp;wsaData);</div><div class="line">	<span class="keyword">if</span> (err != <span class="number">0</span>)</div><div class="line">	&#123;</div><div class="line">		<span class="keyword">return</span>;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	<span class="keyword">if</span> (LOBYTE(wsaData.wVersion) != <span class="number">1</span> ||</div><div class="line">		HIBYTE(wsaData.wVersion) !=<span class="number">1</span>)</div><div class="line">	&#123;</div><div class="line">		WSACleanup();</div><div class="line">		<span class="keyword">return</span>;</div><div class="line">	&#125;</div><div class="line">	<span class="comment">//创建套接字</span></div><div class="line">	SOCKET sockSrv = socket(AF_INET, SOCK_DGRAM, <span class="number">0</span>);</div><div class="line">	SOCKADDR_IN addrSrv;</div><div class="line">	addrSrv.sin_addr.S_un.S_addr = htonl(INADDR_ANY);</div><div class="line">	addrSrv.sin_family = AF_INET;</div><div class="line">	addrSrv.sin_port = htons(<span class="number">7000</span>);</div><div class="line">	<span class="comment">//绑定套接字</span></div><div class="line">	bind(sockSrv, (SOCKADDR*)&amp;addrSrv, <span class="keyword">sizeof</span>(SOCKADDR));</div><div class="line"></div><div class="line">	<span class="comment">//等待并接收数据</span></div><div class="line">	SOCKADDR_IN addrClient;</div><div class="line">	<span class="keyword">int</span> len = <span class="keyword">sizeof</span>(SOCKADDR);</div><div class="line">	<span class="keyword">char</span> recvBuf[<span class="number">100</span>];</div><div class="line">	recvfrom(sockSrv, recvBuf, <span class="number">100</span>, <span class="number">0</span>, (SOCKADDR*)&amp;addrClient, &amp;len);</div><div class="line">	<span class="built_in">printf</span>(<span class="string">"%s\n"</span>,recvBuf);</div><div class="line">	<span class="comment">//关闭套接字</span></div><div class="line">	closesocket(sockSrv);</div><div class="line">	WSACleanup();</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>　　在工程设置对话框的链接选项卡下添加库文件：Ws2_32.lib的链接。</p>
<h3 id="客户端程序"><a href="#客户端程序-1" class="headerlink" title="客户端程序"></a>客户端程序</h3><p>　　在同一个UdpSrv工作区中创建客户端应用程序。创建一个空的Win32 Console Application类型的工程，名为：UdpClient。为该工程添加一个C++源文件：UdpClient.cpp。<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;Winsock2.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line">	<span class="comment">//加载套接字库</span></div><div class="line">	WORD wVersionRequired;</div><div class="line">	WSADATA wsaData;</div><div class="line">	<span class="keyword">int</span> err;</div><div class="line"></div><div class="line">	wVersionRequired = MAKEWORD(<span class="number">1</span>, <span class="number">1</span>);</div><div class="line"></div><div class="line">	err = WSAStartup(wVersionRequired, &amp;wsaData);</div><div class="line">	<span class="keyword">if</span> (err != <span class="number">0</span>)</div><div class="line">	&#123;</div><div class="line">		<span class="keyword">return</span>;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	<span class="keyword">if</span> (LOBYTE(wsaData.wVersion) != <span class="number">1</span> ||</div><div class="line">		HIBYTE(wsaData.wVersion) !=<span class="number">1</span>)</div><div class="line">	&#123;</div><div class="line">		WSACleanup();</div><div class="line">		<span class="keyword">return</span>;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	<span class="comment">//创建套接字</span></div><div class="line">	SOCKET sockClient = socket(AF_INET, SOCK_DGRAM, <span class="number">0</span>);</div><div class="line">	SOCKADDR_IN addrSrv;</div><div class="line">	addrSrv.sin_addr.S_un.S_addr = inet_addr(<span class="string">"127.0.0.1"</span>);</div><div class="line">	addrSrv.sin_family = AF_INET;</div><div class="line">	addrSrv.sin_port = htons(<span class="number">7000</span>);</div><div class="line">	<span class="comment">//发送数据</span></div><div class="line">	sendto(sockClient, <span class="string">"Hello"</span>, <span class="built_in">strlen</span>(<span class="string">"Hello"</span>)+<span class="number">1</span>, <span class="number">0</span>, </div><div class="line">		(SOCKADDR*)&amp;addrSrv, <span class="keyword">sizeof</span>(SOCKADDR));</div><div class="line">	<span class="comment">//关闭套接字</span></div><div class="line">	closesocket(sockClient);</div><div class="line">	WSACleanup();</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>　　链接库文件：ws2_32.lib。</p>
<p>　　创建运行。服务器端程序应先启动，然后启动客户端程序。</p>
<p><img src="http://img.blog.csdn.net/20170428102150065?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<p>　　<strong>基于TCP和基于UDP的网络应用程序在发送和接收数据时使用的函数是不一样的：前者使用send和recv，后者使用sendto和recvfrom。</strong></p>
<h2 id="基于udp的简单聊天程序"><a href="#基于UDP的简单聊天程序" class="headerlink" title="基于UDP的简单聊天程序"></a>基于UDP的简单聊天程序</h2><p>　　在新工作区新建一个空的Win32 Console Application类型的应用程序，名为NetSrv。为该工程添加一个C++源文件：NetSrv.cpp。接着为该工程添加对WinSock库的链接，即在工程设置对话框的Link选项卡上添加ws2_32.lib文件的链接。<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;Winsock2.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></div><div class="line"> <span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line"> &#123;</div><div class="line">	 <span class="comment">//加载套接字库</span></div><div class="line">	 WORD wVersionRequested;</div><div class="line">	 WSADATA wsaData;</div><div class="line">	 <span class="keyword">int</span> err;</div><div class="line"></div><div class="line">	 wVersionRequested = MAKEWORD(<span class="number">1</span>, <span class="number">1</span>);</div><div class="line"></div><div class="line">	 err = WSAStartup(wVersionRequested, &amp;wsaData);</div><div class="line">	 <span class="keyword">if</span> (err != <span class="number">0</span>)</div><div class="line">	 &#123;</div><div class="line">		 <span class="keyword">return</span>;</div><div class="line">	 &#125;</div><div class="line"></div><div class="line">		<span class="keyword">if</span> (LOBYTE(wsaData.wVersion) != <span class="number">1</span> ||</div><div class="line">		HIBYTE(wsaData.wVersion) !=<span class="number">1</span>)</div><div class="line">	&#123;</div><div class="line">		WSACleanup();</div><div class="line">		<span class="keyword">return</span>;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	 <span class="comment">//创建套接字</span></div><div class="line">	 SOCKET sockSrv = socket(AF_INET, SOCK_DGRAM, <span class="number">0</span>);</div><div class="line"></div><div class="line">	 SOCKADDR_IN addrSrv;</div><div class="line">	 addrSrv.sin_addr.S_un.S_addr = htonl(INADDR_ANY);</div><div class="line">	 addrSrv.sin_family = AF_INET;</div><div class="line">	 addrSrv.sin_port = htons(<span class="number">7000</span>);</div><div class="line"></div><div class="line">	 <span class="comment">//绑定套接字</span></div><div class="line">	 bind(sockSrv, (SOCKADDR*)&amp;addrSrv, <span class="keyword">sizeof</span>(SOCKADDR));</div><div class="line"></div><div class="line">	 <span class="keyword">char</span> recvBuf[<span class="number">100</span>];</div><div class="line">	 <span class="keyword">char</span> sendBuf[<span class="number">100</span>];</div><div class="line">	 <span class="keyword">char</span> tempBuf[<span class="number">200</span>];</div><div class="line"></div><div class="line">	 SOCKADDR_IN addrClient;</div><div class="line">	 <span class="keyword">int</span> len = <span class="keyword">sizeof</span>(SOCKADDR);</div><div class="line">	 <span class="keyword">while</span>(<span class="number">1</span>)</div><div class="line">	 &#123;</div><div class="line">		 <span class="comment">//等待并接收数据</span></div><div class="line">		 recvfrom(sockSrv, recvBuf, <span class="number">100</span>, <span class="number">0</span>, (SOCKADDR*)&amp;addrClient, &amp;len);</div><div class="line">		 <span class="keyword">if</span> (<span class="string">'q'</span> == recvBuf[<span class="number">0</span>])</div><div class="line">		 &#123;</div><div class="line">			 sendto(sockSrv, <span class="string">"q"</span>, <span class="built_in">strlen</span>(<span class="string">"q"</span>)+<span class="number">1</span>, <span class="number">0</span>, (SOCKADDR*)&amp;addrClient, len);</div><div class="line">			 <span class="built_in">printf</span>(<span class="string">"Chat end!\n"</span>);</div><div class="line">			 <span class="keyword">break</span>;</div><div class="line">		 &#125;</div><div class="line">		 <span class="built_in">sprintf</span>(tempBuf, <span class="string">"%s say : %s"</span>, inet_ntoa(addrClient.sin_addr), recvBuf);</div><div class="line">		 <span class="built_in">printf</span>(<span class="string">"%s\n"</span>, tempBuf);</div><div class="line">		 <span class="comment">//发送数据</span></div><div class="line">		 <span class="built_in">printf</span>(<span class="string">"Please input data:\n"</span>);</div><div class="line">		 gets(sendBuf);</div><div class="line">		 sendto(sockSrv, sendBuf, <span class="built_in">strlen</span>(sendBuf)+<span class="number">1</span>, <span class="number">0</span>, (SOCKADDR*)&amp;addrClient, len);</div><div class="line">	&#125;</div><div class="line">	 <span class="comment">//关闭套接字</span></div><div class="line">	 closesocket(sockSrv);</div><div class="line">	 WSACleanup();</div><div class="line"> &#125;</div></pre></td></tr></table></figure></p>
<h3 id="客户端程序"><a href="#客户端程序-2" class="headerlink" title="客户端程序"></a>客户端程序</h3><p>　　向已有工作区增加一个空的Win32 Console Application类型的工程：NetClient。为此添加一个C++源文件：NetClient.cpp。为该工程添加ws2_32.lib文件的链接。<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;Winsock2.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></div><div class="line"> <span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line"> &#123;</div><div class="line">	 <span class="comment">//加载套接字库</span></div><div class="line">	 WORD wVersionRequested;</div><div class="line">	 WSADATA wsaData;</div><div class="line">	 <span class="keyword">int</span> err;</div><div class="line"></div><div class="line">	 wVersionRequested = MAKEWORD(<span class="number">1</span>, <span class="number">1</span>);</div><div class="line"></div><div class="line">	 err = WSAStartup(wVersionRequested, &amp;wsaData);</div><div class="line">	 <span class="keyword">if</span> (err != <span class="number">0</span>)</div><div class="line">	 &#123;</div><div class="line">		 <span class="keyword">return</span>;</div><div class="line">	 &#125;</div><div class="line"></div><div class="line">		<span class="keyword">if</span> (LOBYTE(wsaData.wVersion) != <span class="number">1</span> ||</div><div class="line">		HIBYTE(wsaData.wVersion) !=<span class="number">1</span>)</div><div class="line">	&#123;</div><div class="line">		WSACleanup();</div><div class="line">		<span class="keyword">return</span>;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	 <span class="comment">//创建套接字</span></div><div class="line">	 SOCKET sockClient = socket(AF_INET, SOCK_DGRAM, <span class="number">0</span>);</div><div class="line"></div><div class="line">	 SOCKADDR_IN addrSrv;</div><div class="line">	 addrSrv.sin_addr.S_un.S_addr = inet_addr(<span class="string">"127.0.0.1"</span>);</div><div class="line">	 addrSrv.sin_family = AF_INET;</div><div class="line">	 addrSrv.sin_port = htons(<span class="number">7000</span>);</div><div class="line"></div><div class="line">	 <span class="keyword">char</span> recvBuf[<span class="number">100</span>];</div><div class="line">	 <span class="keyword">char</span> sendBuf[<span class="number">100</span>];</div><div class="line">	 <span class="keyword">char</span> tempBuf[<span class="number">200</span>];</div><div class="line"></div><div class="line">	 <span class="keyword">int</span> len = <span class="keyword">sizeof</span>(SOCKADDR);</div><div class="line"></div><div class="line">	 <span class="keyword">while</span>(<span class="number">1</span>)</div><div class="line">	 &#123;</div><div class="line">		 <span class="comment">//发送数据</span></div><div class="line">		 <span class="built_in">printf</span>(<span class="string">"Please input data:\n"</span>);</div><div class="line">		 gets(sendBuf);</div><div class="line">		 sendto(sockClient, sendBuf, <span class="built_in">strlen</span>(sendBuf)+<span class="number">1</span>, <span class="number">0</span>, (SOCKADDR*)&amp;addrSrv, len);</div><div class="line">		 <span class="comment">//等待并接收数据</span></div><div class="line"></div><div class="line">		 recvfrom(sockClient, recvBuf, <span class="number">100</span>, <span class="number">0</span>, (SOCKADDR*)&amp;addrSrv, &amp;len);</div><div class="line">		 <span class="keyword">if</span>(<span class="string">'q'</span> == recvBuf[<span class="number">0</span>])</div><div class="line">		 &#123;</div><div class="line">			 sendto(sockClient, <span class="string">"q"</span>, <span class="built_in">strlen</span>(<span class="string">"q"</span>)+<span class="number">1</span>, <span class="number">0</span>, (SOCKADDR*)&amp;addrSrv, len);</div><div class="line">			 <span class="built_in">printf</span>(<span class="string">"Chat end!\n"</span>);</div><div class="line">			 <span class="keyword">break</span>;</div><div class="line">		 &#125;</div><div class="line">		 <span class="built_in">sprintf</span>(tempBuf, <span class="string">"%s say : %s"</span>, inet_ntoa(addrSrv.sin_addr), recvBuf);</div><div class="line">		 <span class="built_in">printf</span>(<span class="string">"%s\n"</span>, tempBuf);</div><div class="line">	 &#125;</div><div class="line">	 <span class="comment">//关闭套接字</span></div><div class="line">	 closesocket(sockClient);</div><div class="line">	 WSACleanup();</div><div class="line"> &#125;</div></pre></td></tr></table></figure></p>
<p><img src="http://img.blog.csdn.net/20170428102229597?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<h1 id="多线程"><a href="#多线程" class="headerlink" title="多线程"></a>多线程</h1><h2 id="进程"><a href="#进程" class="headerlink" title="进程"></a>进程</h2><h3 id="程序和进程"><a href="#程序和进程" class="headerlink" title="程序和进程"></a>程序和进程</h3><h2 id="简单多线程示例"><a href="#简单多线程示例" class="headerlink" title="简单多线程示例"></a>简单多线程示例</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;windows.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream.h&gt;</span></span></div><div class="line"></div><div class="line">    <span class="function">DWORD WINAPI <span class="title">Fun1Proc</span><span class="params">(</span></span></div><div class="line">	LPVOID lpParameter  <span class="comment">//thread data					 </span></div><div class="line">	);</div><div class="line">	<span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line">	&#123;</div><div class="line">		HANDLE hThread1;</div><div class="line">		hThread1 = CreateThread(<span class="literal">NULL</span>, <span class="number">0</span>, Fun1Proc, <span class="literal">NULL</span>, <span class="number">0</span>, <span class="literal">NULL</span>);</div><div class="line">		CloseHandle(hThread1);</div><div class="line">		<span class="built_in">cout</span>&lt;&lt;<span class="string">"main thread is running"</span>&lt;&lt;<span class="built_in">endl</span>;</div><div class="line">		Sleep(<span class="number">10</span>);<span class="comment">//让主线程暂停运行，进入分线程</span></div><div class="line">	&#125;</div><div class="line"></div><div class="line">	<span class="comment">//线程1的入口函数</span></div><div class="line">	<span class="function">DWORD WINAPI <span class="title">Fun1Proc</span><span class="params">(</span></span></div><div class="line">		LPVOID lpParameter  <span class="comment">//thread data</span></div><div class="line">		)</div><div class="line">	&#123;</div><div class="line">		<span class="built_in">cout</span>&lt;&lt;<span class="string">"thread1 is running"</span>&lt;&lt;<span class="built_in">endl</span>;</div><div class="line">		<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">	&#125;</div></pre></td></tr></table></figure>
<p> <img src="http://img.blog.csdn.net/20170424215653701?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<p>　　交替运行：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;windows.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream.h&gt;</span></span></div><div class="line"></div><div class="line">    <span class="function">DWORD WINAPI <span class="title">Fun1Proc</span><span class="params">(</span></span></div><div class="line">	LPVOID lpParameter  <span class="comment">//thread data					 </span></div><div class="line">	);</div><div class="line">	</div><div class="line">	<span class="keyword">int</span> index = <span class="number">0</span>;</div><div class="line"></div><div class="line">	<span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line">	&#123;</div><div class="line">		HANDLE hThread1;</div><div class="line">		hThread1 = CreateThread(<span class="literal">NULL</span>, <span class="number">0</span>, Fun1Proc, <span class="literal">NULL</span>, <span class="number">0</span>, <span class="literal">NULL</span>);</div><div class="line">		CloseHandle(hThread1);</div><div class="line">		</div><div class="line">		<span class="keyword">while</span> (index ++&lt; <span class="number">100</span>)</div><div class="line">		&#123;</div><div class="line">			<span class="built_in">cout</span>&lt;&lt;<span class="string">"main thread is running"</span>&lt;&lt;<span class="built_in">endl</span>;</div><div class="line">		&#125;</div><div class="line">			<span class="comment">//Sleep(10);//让主线程暂停运行，进入分线程</span></div><div class="line">	&#125;</div><div class="line"></div><div class="line">	<span class="comment">//线程1的入口函数</span></div><div class="line"></div><div class="line">	<span class="function">DWORD WINAPI <span class="title">Fun1Proc</span><span class="params">(</span></span></div><div class="line">			</div><div class="line">		LPVOID lpParameter  <span class="comment">//thread data</span></div><div class="line">		)</div><div class="line"></div><div class="line">	&#123;</div><div class="line">		<span class="keyword">while</span> (index++&lt; <span class="number">100</span>)</div><div class="line">		<span class="built_in">cout</span>&lt;&lt;<span class="string">"thread1 is running"</span>&lt;&lt;<span class="built_in">endl</span>;</div><div class="line">		<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">	&#125;</div></pre></td></tr></table></figure></p>
<p> <img src="http://img.blog.csdn.net/20170424215712448?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<h2 id="线程同步"><a href="#线程同步" class="headerlink" title="线程同步"></a>线程同步</h2><h3 id="火车站售票系统模拟程序"><a href="#火车站售票系统模拟程序" class="headerlink" title="火车站售票系统模拟程序"></a>火车站售票系统模拟程序</h3><p>　　由主线程创建的两个线程（1和2）负责销售火车票。<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;windows.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream.h&gt;</span></span></div><div class="line"></div><div class="line">    <span class="function">DWORD WINAPI <span class="title">Fun1Proc</span><span class="params">(</span></span></div><div class="line">	LPVOID lpParameter  <span class="comment">//thread data					 </span></div><div class="line">	);</div><div class="line">	</div><div class="line">	 <span class="function">DWORD WINAPI <span class="title">Fun2Proc</span><span class="params">(</span></span></div><div class="line">	LPVOID lpParameter  <span class="comment">//thread data					 </span></div><div class="line">	);</div><div class="line"></div><div class="line">	<span class="keyword">int</span> index = <span class="number">0</span>;</div><div class="line">	<span class="keyword">int</span> tickets = <span class="number">100</span>;</div><div class="line">	HANDLE hMutex;</div><div class="line"></div><div class="line">	<span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line">	&#123;</div><div class="line">		HANDLE hThread1;</div><div class="line">		HANDLE hThread2;</div><div class="line"></div><div class="line">		<span class="comment">//创建互斥对象</span></div><div class="line">		hMutex = CreateMutex(<span class="literal">NULL</span>, FALSE, <span class="literal">NULL</span>);</div><div class="line"></div><div class="line">		<span class="comment">//创建线程</span></div><div class="line">		hThread1 = CreateThread(<span class="literal">NULL</span>, <span class="number">0</span>, Fun1Proc, <span class="literal">NULL</span>, <span class="number">0</span>, <span class="literal">NULL</span>);</div><div class="line">		hThread2 = CreateThread(<span class="literal">NULL</span>, <span class="number">0</span>, Fun2Proc, <span class="literal">NULL</span>, <span class="number">0</span>, <span class="literal">NULL</span>);</div><div class="line">		CloseHandle(hThread1);</div><div class="line">		CloseHandle(hThread2);</div><div class="line">		Sleep(<span class="number">4000</span>);</div><div class="line">	&#125;</div><div class="line">	</div><div class="line">	</div><div class="line"></div><div class="line">	</div><div class="line"></div><div class="line">	<span class="comment">//线程1的入口函数</span></div><div class="line">	<span class="function">DWORD WINAPI <span class="title">Fun1Proc</span><span class="params">(</span></span></div><div class="line">			</div><div class="line">		LPVOID lpParameter  <span class="comment">//thread data</span></div><div class="line">		)</div><div class="line"></div><div class="line">	&#123;</div><div class="line">	<span class="keyword">while</span> (TRUE)</div><div class="line">		&#123;</div><div class="line">			WaitForSingleObject(hMutex, INFINITE);<span class="comment">//实现线程同步</span></div><div class="line">			<span class="keyword">if</span> (tickets &gt; <span class="number">0</span>)</div><div class="line">			&#123;</div><div class="line">				Sleep(<span class="number">1</span>);</div><div class="line">				<span class="built_in">cout</span>&lt;&lt;<span class="string">"thread1 sell ticket:"</span>&lt;&lt;tickets--&lt;&lt;<span class="built_in">endl</span>;</div><div class="line">			&#125;</div><div class="line">			<span class="keyword">else</span> </div><div class="line">				<span class="keyword">break</span>;</div><div class="line">			ReleaseMutex(hMutex);<span class="comment">//释放当前线程对互斥对象的所有权</span></div><div class="line">		&#125;</div><div class="line">		<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line"></div><div class="line">	&#125;</div><div class="line">	</div><div class="line"></div><div class="line">		<span class="comment">//线程2的入口函数</span></div><div class="line">	<span class="function">DWORD WINAPI <span class="title">Fun2Proc</span><span class="params">(</span></span></div><div class="line">			</div><div class="line">		LPVOID lpParameter  <span class="comment">//thread data</span></div><div class="line">		)</div><div class="line"></div><div class="line"></div><div class="line">	&#123;</div><div class="line">		<span class="keyword">while</span> (TRUE)</div><div class="line">		&#123;</div><div class="line">			WaitForSingleObject(hMutex,INFINITE);</div><div class="line">			<span class="keyword">if</span> (tickets &gt; <span class="number">0</span>)</div><div class="line">			&#123;</div><div class="line">				Sleep(<span class="number">1</span>);</div><div class="line">				<span class="built_in">cout</span>&lt;&lt;<span class="string">"thread2 sell ticket:"</span>&lt;&lt;tickets--&lt;&lt;<span class="built_in">endl</span>;</div><div class="line">			&#125;</div><div class="line">			<span class="keyword">else</span> </div><div class="line">				<span class="keyword">break</span>;</div><div class="line">			ReleaseMutex(hMutex);</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p> <img src="http://img.blog.csdn.net/20170424215734652?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"><br>　　这时所销售的票号正常，没有看到销售了号码为0的票。</p>
<p>　　对互斥对象来说，谁拥有谁释放。</p>
<h2 id="保证应用程序只有一个实例运行"><a href="#保证应用程序只有一个实例运行" class="headerlink" title="保证应用程序只有一个实例运行"></a>保证应用程序只有一个实例运行</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;windows.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream.h&gt;</span></span></div><div class="line"></div><div class="line">    <span class="function">DWORD WINAPI <span class="title">Fun1Proc</span><span class="params">(</span></span></div><div class="line">	LPVOID lpParameter  <span class="comment">//thread data					 </span></div><div class="line">	);</div><div class="line">	</div><div class="line">	 <span class="function">DWORD WINAPI <span class="title">Fun2Proc</span><span class="params">(</span></span></div><div class="line">	LPVOID lpParameter  <span class="comment">//thread data					 </span></div><div class="line">	);</div><div class="line"></div><div class="line">	<span class="keyword">int</span> index = <span class="number">0</span>;</div><div class="line">	<span class="keyword">int</span> tickets = <span class="number">100</span>;</div><div class="line">	HANDLE hMutex;</div><div class="line"></div><div class="line">	<span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line">	&#123;</div><div class="line">		HANDLE hThread1;</div><div class="line">		HANDLE hThread2;</div><div class="line"></div><div class="line">		<span class="comment">//创建互斥对象(注意命名)</span></div><div class="line">		hMutex = CreateMutex(<span class="literal">NULL</span>, FALSE, <span class="string">"1"</span>);</div><div class="line">		<span class="keyword">if</span> (hMutex)</div><div class="line">		&#123;</div><div class="line">			<span class="keyword">if</span> (ERROR_ALREADY_EXISTS == GetLastError())</div><div class="line">			&#123;</div><div class="line">				<span class="built_in">cout</span>&lt;&lt;<span class="string">"only one instance can run!"</span>&lt;&lt;<span class="built_in">endl</span>;</div><div class="line">				<span class="keyword">return</span>;</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line"></div><div class="line">		<span class="comment">//创建线程</span></div><div class="line">		hThread1 = CreateThread(<span class="literal">NULL</span>, <span class="number">0</span>, Fun1Proc, <span class="literal">NULL</span>, <span class="number">0</span>, <span class="literal">NULL</span>);</div><div class="line">		hThread2 = CreateThread(<span class="literal">NULL</span>, <span class="number">0</span>, Fun2Proc, <span class="literal">NULL</span>, <span class="number">0</span>, <span class="literal">NULL</span>);</div><div class="line">		CloseHandle(hThread1);</div><div class="line">		CloseHandle(hThread2);</div><div class="line">		WaitForSingleObject(hMutex, INFINITE);</div><div class="line">		ReleaseMutex(hMutex);</div><div class="line">		ReleaseMutex(hMutex);</div><div class="line">		Sleep(<span class="number">4000</span>);</div><div class="line">	&#125;</div><div class="line">	</div><div class="line">	<span class="comment">//线程1的入口函数</span></div><div class="line">	<span class="function">DWORD WINAPI <span class="title">Fun1Proc</span><span class="params">(</span></span></div><div class="line">			</div><div class="line">		LPVOID lpParameter  <span class="comment">//thread data</span></div><div class="line">		)</div><div class="line"></div><div class="line">	&#123;</div><div class="line">	<span class="keyword">while</span> (TRUE)</div><div class="line">		&#123;</div><div class="line">			WaitForSingleObject(hMutex, INFINITE);<span class="comment">//实现线程同步</span></div><div class="line">			<span class="keyword">if</span> (tickets &gt; <span class="number">0</span>)</div><div class="line">			&#123;</div><div class="line">				Sleep(<span class="number">1</span>);</div><div class="line">				<span class="built_in">cout</span>&lt;&lt;<span class="string">"thread1 sell ticket:"</span>&lt;&lt;tickets--&lt;&lt;<span class="built_in">endl</span>;</div><div class="line">			&#125;</div><div class="line">			<span class="keyword">else</span> </div><div class="line">				<span class="keyword">break</span>;</div><div class="line">			ReleaseMutex(hMutex);<span class="comment">//释放当前线程对互斥对象的所有权</span></div><div class="line">		&#125;</div><div class="line">		<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line"></div><div class="line">	&#125;</div><div class="line">	</div><div class="line"></div><div class="line">		<span class="comment">//线程2的入口函数</span></div><div class="line">	<span class="function">DWORD WINAPI <span class="title">Fun2Proc</span><span class="params">(</span></span></div><div class="line">			</div><div class="line">		LPVOID lpParameter  <span class="comment">//thread data</span></div><div class="line">		)</div><div class="line"></div><div class="line"></div><div class="line">	&#123;</div><div class="line">		<span class="keyword">while</span> (TRUE)</div><div class="line">		&#123;</div><div class="line">			WaitForSingleObject(hMutex,INFINITE);</div><div class="line">			<span class="keyword">if</span> (tickets &gt; <span class="number">0</span>)</div><div class="line">			&#123;</div><div class="line">				Sleep(<span class="number">1</span>);</div><div class="line">				<span class="built_in">cout</span>&lt;&lt;<span class="string">"thread2 sell ticket:"</span>&lt;&lt;tickets--&lt;&lt;<span class="built_in">endl</span>;</div><div class="line">			&#125;</div><div class="line">			<span class="keyword">else</span> </div><div class="line">				<span class="keyword">break</span>;</div><div class="line">			ReleaseMutex(hMutex);</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="网络聊天室程序的实现"><a href="#网络聊天室程序的实现" class="headerlink" title="网络聊天室程序的实现"></a>网络聊天室程序的实现</h2><p>　　新建一个基于对话框的工程，名为：Chat。<br><img src="http://img.blog.csdn.net/20170428102440017?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"><br><img src="http://img.blog.csdn.net/20170428102449366?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<h3 id="加载套接字库"><a href="#加载套接字库" class="headerlink" title="加载套接字库"></a>加载套接字库</h3><p>　　在CChatApp类的InitInstance函数开始位置<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">BOOL CChatApp::InitInstance()</div><div class="line">&#123;</div><div class="line">	<span class="keyword">if</span> (!AfxSocketInit())</div><div class="line">	&#123;</div><div class="line">		AfxMessageBox(<span class="string">"加载套接字库失败！"</span>);</div><div class="line">		<span class="keyword">return</span> FALSE;</div><div class="line">	&#125;</div><div class="line">……</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>　　在stdafx.h中，添加头文件<code>#include &lt;Afxsock.h&gt;</code>。</p>
<h3 id="创建并初始化套接字"><a href="#创建并初始化套接字" class="headerlink" title="创建并初始化套接字"></a>创建并初始化套接字</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line">BOOL CChatDlg::InitSocket()</div><div class="line">&#123;</div><div class="line">	<span class="comment">//创建套接字</span></div><div class="line">	m_socket = socket(AF_INET, SOCK_DGRAM, <span class="number">0</span>);</div><div class="line">	<span class="keyword">if</span> (INVALID_SOCKET == m_socket)</div><div class="line">	&#123;</div><div class="line">		MessageBox(<span class="string">"套接字创建失败！"</span>);</div><div class="line">		<span class="keyword">return</span> FALSE;</div><div class="line">	&#125;</div><div class="line">	SOCKADDR_IN addrSock;</div><div class="line">	addrSock.sin_family = AF_INET;</div><div class="line">	addrSock.sin_port = htons(<span class="number">7000</span>);</div><div class="line">	addrSock.sin_addr.S_un.S_addr = htonl(INADDR_ANY);</div><div class="line"></div><div class="line">	<span class="keyword">int</span> retval;</div><div class="line">	<span class="comment">//绑定套接字</span></div><div class="line">	retval = bind(m_socket, (SOCKADDR*)&amp;addrSock, <span class="keyword">sizeof</span>(SOCKADDR));</div><div class="line">	<span class="keyword">if</span> (SOCKET_ERROR == retval)</div><div class="line">	&#123;</div><div class="line">		closesocket(m_socket);</div><div class="line">		MessageBox(<span class="string">"绑定失败！"</span>);</div><div class="line">		<span class="keyword">return</span> TRUE;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">return</span> TRUE;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">BOOL CChatDlg::OnInitDialog()</div><div class="line">&#123;</div><div class="line">……</div><div class="line">	</div><div class="line">	<span class="comment">// <span class="doctag">TODO:</span> Add extra initialization here</span></div><div class="line">	InitSocket();</div><div class="line"></div><div class="line">	<span class="keyword">return</span> TRUE;  <span class="comment">// return TRUE  unless you set the focus to a control</span></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="实现接收端功能"><a href="#实现接收端功能" class="headerlink" title="实现接收端功能"></a>实现接收端功能</h3><p>　　在CChatDlg类中定义：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/////////////////////////////////////////////////////////////////////////////</span></div><div class="line"><span class="comment">// CChatDlg dialog</span></div><div class="line"></div><div class="line"><span class="keyword">struct</span> RECVPARAM</div><div class="line">&#123;</div><div class="line">	SOCKET sock; <span class="comment">//已创建的套接字</span></div><div class="line">	HWND hwnd; <span class="comment">//对话框句柄</span></div><div class="line">&#125;;</div></pre></td></tr></table></figure></p>
<p>　　在Chatdlg.h中添加：<code>static DWORD WINAPI RecvProc(LPVOID lpParameter);</code><br>在OnInitDialog()中添加：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">BOOL CChatDlg::OnInitDialog()</div><div class="line">&#123;</div><div class="line"></div><div class="line">……</div><div class="line"></div><div class="line"><span class="comment">// <span class="doctag">TODO:</span> Add extra initialization here</span></div><div class="line">	InitSocket();</div><div class="line">	RECVPARAM *pRecvParam = <span class="keyword">new</span> RECVPARAM;</div><div class="line">	pRecvParam-&gt;sock = m_socket;</div><div class="line">	pRecvParam-&gt;hwnd = m_hWnd;</div><div class="line">	<span class="comment">//创建接收线程</span></div><div class="line">	HANDLE hThread = CreateThread(<span class="literal">NULL</span>, <span class="number">0</span>, RecvProc, (LPVOID)pRecvParam, <span class="number">0</span>, <span class="literal">NULL</span>);</div><div class="line">	<span class="comment">//关闭该接收程句柄，释放其引用计数</span></div><div class="line">	CloseHandle(hThread);</div><div class="line"></div><div class="line"></div><div class="line">	<span class="keyword">return</span> TRUE;  <span class="comment">// return TRUE  unless you set the focus to a control</span></div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>　　在CChatDlg类中添加：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">DWORD WINAPI CChatDlg::RecvProc(LPVOID lpParameter)</div><div class="line">&#123;</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>　　若要求采用完全面向对象的思想来编程，不能使用全局函数和全局变量了，可以采用静态成员函数和静态成员变量的方法来解决。<br>　　<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line">DWORD WINAPI CChatDlg::RecvProc(LPVOID lpParameter)</div><div class="line">&#123;</div><div class="line">	<span class="comment">//获取主线程传递的套接字和窗口句柄</span></div><div class="line">	SOCKET sock = ((RECVPARAM*)lpParameter)-&gt;sock;</div><div class="line">	HWND hwnd = ((RECVPARAM*)lpParameter)-&gt;hwnd;</div><div class="line">	<span class="keyword">delete</span> lpParameter;</div><div class="line"></div><div class="line">	SOCKADDR_IN addrFrom;</div><div class="line">	<span class="keyword">int</span> len = <span class="keyword">sizeof</span>(SOCKADDR);</div><div class="line"></div><div class="line">	<span class="keyword">char</span> recvBuf[<span class="number">200</span>];</div><div class="line">	<span class="keyword">char</span> tempBuf[<span class="number">300</span>];</div><div class="line">	<span class="keyword">int</span> retval;</div><div class="line">	<span class="keyword">while</span>(TRUE)</div><div class="line">	&#123;</div><div class="line">		<span class="comment">//接收数据</span></div><div class="line">		retval = recvfrom(sock, recvBuf, <span class="number">200</span>, <span class="number">0</span>, (SOCKADDR*)&amp;addrFrom, &amp;len);</div><div class="line">		<span class="keyword">if</span> (SOCKET_ERROR == retval)</div><div class="line">			<span class="keyword">break</span>;</div><div class="line">		<span class="built_in">sprintf</span>(tempBuf, <span class="string">"%s 说： %s"</span>, inet_ntoa(addrFrom.sin_addr), recvBuf);</div><div class="line">		::PostMessage(hwnd, WM_RECVDATA, <span class="number">0</span>, (LPARAM)tempBuf);</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>　　在该类添加头文件 <code>#define WM_RECVDATA    WM_USER+1</code></p>
<p>在CChatDlg类头文件中编写该消息响应函数原型的声明：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// Generated message map functions</span></div><div class="line"><span class="comment">//&#123;&#123;AFX_MSG(CChatDlg)</span></div><div class="line"><span class="function"><span class="keyword">virtual</span> BOOL <span class="title">OnInitDialog</span><span class="params">()</span></span>;</div><div class="line"><span class="function">afx_msg <span class="keyword">void</span> <span class="title">OnSysCommand</span><span class="params">(UINT nID, LPARAM lParam)</span></span>;</div><div class="line"><span class="function">afx_msg <span class="keyword">void</span> <span class="title">OnPaint</span><span class="params">()</span></span>;</div><div class="line"><span class="function">afx_msg HCURSOR <span class="title">OnQueryDragIcon</span><span class="params">()</span></span>;</div><div class="line"><span class="comment">//&#125;&#125;AFX_MSG</span></div><div class="line"><span class="function">afx_msg <span class="keyword">void</span> <span class="title">OnRecvData</span><span class="params">(WPARAM wParam, LPARAM lParam)</span></span>;</div><div class="line">DECLARE_MESSAGE_MAP()</div></pre></td></tr></table></figure></p>
<p>在CChatDlg类的源文件中添加WM_RECVDATA消息映射。<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">BEGIN_MESSAGE_MAP(CChatDlg, CDialog)</div><div class="line">	<span class="comment">//&#123;&#123;AFX_MSG_MAP(CChatDlg)</span></div><div class="line">	ON_WM_SYSCOMMAND()</div><div class="line">	ON_WM_PAINT()</div><div class="line">	ON_WM_QUERYDRAGICON()</div><div class="line">	<span class="comment">//&#125;&#125;AFX_MSG_MAP</span></div><div class="line">	ON_MESSAGE(WM_RECVDATA, OnRecvData)</div><div class="line">END_MESSAGE_MAP()</div></pre></td></tr></table></figure></p>
<p>在构造函数中<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">void</span> CChatDlg::OnRecvData(WPARAM wParam, LPARAM lParam)</div><div class="line">&#123;</div><div class="line">	<span class="comment">//取出接收到的数据</span></div><div class="line">	CString str = (<span class="keyword">char</span>*)lParam;</div><div class="line">	CString strTemp;</div><div class="line">	<span class="comment">//获得已有数据</span></div><div class="line">	GetDlgItemText(IDC_EDIT_RECV, strTemp);</div><div class="line">	str += <span class="string">"\r\n"</span>;</div><div class="line">	str += strTemp;</div><div class="line">	<span class="comment">//显示所有接收到的数据</span></div><div class="line">	SetDlgItemText(IDC_EDIT_RECV, str);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h3 id="实现发送端功能"><a href="#实现发送端功能" class="headerlink" title="实现发送端功能"></a>实现发送端功能</h3><p>双击发送，添加响应函数。<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">void</span> CChatDlg::OnBtnSend() </div><div class="line">&#123;</div><div class="line">	<span class="comment">//获取对方IP</span></div><div class="line"><span class="comment">// <span class="doctag">TODO:</span> Add your control notification handler code here</span></div><div class="line">	DWORD dwIP;</div><div class="line">	((CIPAddressCtrl*)GetDlgItem(IDC_IPADDRESS1))-&gt;GetAddress(dwIP);</div><div class="line"></div><div class="line">	SOCKADDR_IN addrTo;</div><div class="line">	addrTo.sin_family = AF_INET;</div><div class="line">	addrTo.sin_port = htons(<span class="number">7000</span>);</div><div class="line">	addrTo.sin_addr.S_un.S_addr = htonl(dwIP);</div><div class="line"></div><div class="line">	CString strSend;</div><div class="line">	<span class="comment">//获得待发送数据</span></div><div class="line">	GetDlgItemText(IDC_EDIT_SEND, strSend);</div><div class="line">	<span class="comment">//发送数据</span></div><div class="line">	sendto(m_socket, strSend, strSend.GetLength()+<span class="number">1</span>, <span class="number">0</span>,</div><div class="line">		(SOCKADDR*)&amp;addrTo, <span class="keyword">sizeof</span>(SOCKADDR));</div><div class="line">	<span class="comment">//清空发送编辑框中的内容</span></div><div class="line">	SetDlgItemText(IDC_EDIT_SEND, <span class="string">""</span>);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>　　为了让编辑框控件接受换行符，必须设置该控件支持多行数据这一属性。<br><img src="http://img.blog.csdn.net/20170428102525898?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<p>　　将“发送”设置为Default button，还可以选择取消Visible选项。<br>　　本例在一个程序中同时实现了接收端和发送端的功能，所以只需在聊天双方各自的机器上安装本程序，在聊天时，通过输入对方主机的IP地址，就可以与对方进行通信了。</p>
<h1 id="activex控件"><a href="#ActiveX控件" class="headerlink" title="ActiveX控件"></a>ActiveX控件</h1><h2 id="activex控件"><a href="#ActiveX控件-1" class="headerlink" title="ActiveX控件"></a>ActiveX控件</h2><p>OCX是ActiveX控件的一种后缀名。但ActiveX控件对应的文件也可以是其他后缀名，例如DLL。作为一个典型的ActiveX控件，它具有方法、属性、事件这三种特性。在一个文件中可以包含多个ActiveX控件。</p>
<h3 id="mfc-activex-controlwizard"><a href="#MFC-ActiveX-ControlWizard" class="headerlink" title="MFC ActiveX ControlWizard"></a>MFC ActiveX ControlWizard</h3><h1 id="动态链接库"><a href="#动态链接库" class="headerlink" title="动态链接库"></a>动态链接库</h1><p>　　动态链接库有两种加载方式：隐式链接和显式加载</p>
<h2 id="win32-dll的创建和使用"><a href="#Win32-DLL的创建和使用" class="headerlink" title="Win32 DLL的创建和使用"></a>Win32 DLL的创建和使用</h2><p>　　新建一个Win32 Dynamic-Link Library类型的工程，取名为Dll1。并在AppWizard的第一步选择“An empty Dll project”，即创建一个空的动态链接库工程。然后添加一个C++源文件：Dll1.cpp。添加代码：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span></div><div class="line">&#123;</div><div class="line">	<span class="keyword">return</span> a + b;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">subtract</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span></div><div class="line">&#123;</div><div class="line">	<span class="keyword">return</span> a - b;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>　　Build生成Dll1程序。在该工程的Debug目录下，可看到一个Dll1.dll文件，这就是生成的动态链接库文件。</p>
<h3 id="dumpbin命令"><a href="#Dumpbin命令" class="headerlink" title="Dumpbin命令"></a>Dumpbin命令</h3><p>　　应用程序如果想要访问某个DLL中的函数，那么该函数必须是已经被导出的函数。为了查看有哪些导出函数，可以用VS提供的命令行工具：Dumpbin实现。    </p>
<h3 id="从dll中导出函数"><a href="#从DLL中导出函数" class="headerlink" title="从DLL中导出函数"></a>从DLL中导出函数</h3><p>　　为导出函数，需在每一个将被导出的函数前添加标识符：_declspec(dllexport)。修改上述代码：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="number">_</span>declspec(dllexport) <span class="function"><span class="keyword">int</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span></div><div class="line">&#123;</div><div class="line">	<span class="keyword">return</span> a + b;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="number">_</span>declspec(dllexport) <span class="function"><span class="keyword">int</span> <span class="title">subtract</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span></div><div class="line">&#123;</div><div class="line">	<span class="keyword">return</span> a - b;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>　　编译后可看到又生成了两个新文件，Dll1.lib，它保存Dll1.dll中导出的函数和变量的符号名。以及DALL1.EXP文件。</p>
<h2 id="隐式链接方式加载dll"><a href="#隐式链接方式加载DLL" class="headerlink" title="隐式链接方式加载DLL"></a>隐式链接方式加载DLL</h2><p>　　编写一个测试程序测试这个动态链接库。新建一个基于对话框的MFC应用程序，取名DllTest，放置两个按钮，ID和Caption分别为：IDC_BTN_ADD，Add，IDC_BTN_SUBTRACT，Subtract。</p>
<h3 id="利用extern声明外部函数"><a href="#利用extern声明外部函数" class="headerlink" title="利用extern声明外部函数"></a>利用extern声明外部函数</h3><p>　　为让编译器知道这两个函数，需作出声明，注意放在OnBtnAdd函数和OnBtnSubtract函数前面。<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">extern</span> <span class="keyword">int</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span>;</div><div class="line"><span class="function"><span class="keyword">extern</span> <span class="keyword">int</span> <span class="title">subtract</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span>;</div><div class="line"></div><div class="line"><span class="keyword">void</span> CDllTestDlg::OnBtnAdd() </div><div class="line">&#123;</div><div class="line">	<span class="comment">// <span class="doctag">TODO:</span> Add your control notification handler code here</span></div><div class="line">	CString str;</div><div class="line">	str.Format(<span class="string">"5 + 3 = %d"</span>, add(<span class="number">5</span>, <span class="number">3</span>));</div><div class="line">	MessageBox(str);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">void</span> CDllTestDlg::OnBtnSubtract() </div><div class="line">&#123;</div><div class="line">	<span class="comment">// <span class="doctag">TODO:</span> Add your control notification handler code here</span></div><div class="line">	CString str;</div><div class="line">	str.Format(<span class="string">"5 - 3 = %d"</span>, subtract(<span class="number">5</span>, <span class="number">3</span>));</div><div class="line">	MessageBox(str);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>　　Build后报错：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">--------------------Configuration: DllTest - Win32 Debug--------------------</div><div class="line">Compiling resources...</div><div class="line">Compiling...</div><div class="line">StdAfx.cpp</div><div class="line">Compiling...</div><div class="line">DllTest.cpp</div><div class="line">DllTestDlg.cpp</div><div class="line">Generating Code...</div><div class="line">Linking...</div><div class="line">DllTestDlg.obj : error LNK2001: unresolved external symbol <span class="string">"int __cdecl add(int,int)"</span> (?add@@YAHHH@Z)</div><div class="line">DllTestDlg.obj : error LNK2001: unresolved external symbol <span class="string">"int __cdecl subtract(int,int)"</span> (?subtract@@YAHHH@Z)</div><div class="line">Debug/DllTest.exe : fatal error LNK1120: <span class="number">2</span> unresolved externals</div><div class="line">执行 link.exe 时出错.</div><div class="line"></div><div class="line">DllTest.exe - <span class="number">1</span> error(s), <span class="number">0</span> warning(s)</div></pre></td></tr></table></figure></p>
<p>　　可看到编译成功，错误发生在链接时。为解决该问题，需利用动态链接库的引入库文件。<br>　　在Dll1.dll文件所在目录下，复制Dll1.lib文件，并将其复制到DllTest程序所在目录下，这个文件中就包含了Dll1.dll中导出函数的符号名。<br>　　然后在DllTest中，选择Porject\Settings\link，在Object/library modules中输入dll1.lib。<br>　　再次编译，成功生成DllTest.exe文件。<br>　　（可利用dumpbin -imports dlltest.exe查看输入信息）</p>
<p>　　运行程序，弹出报错对话框：<br><img src="http://img.blog.csdn.net/20170709130424898?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="报错"></p>
<p>　　将Dll1.dll放置在DllTest工程所在目录下，就好了。</p>
<p>　　效果如图。<br><img src="http://img.blog.csdn.net/20170709130702138?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="效果"></p>
<h3 id="depends工具"><a href="#Depends工具" class="headerlink" title="Depends工具"></a>Depends工具</h3><p>　　在Microsoft Visual Studio\Common\Tools中有一个DEPENDS.EXE，该工具可以查看可执行程序，还可以查看动态链接库，主要是看它们依赖于哪些动态链接库。<br>　　打开该工具，单击File\Open，选择DllText.exe，将会看到：<br><img src="http://img.blog.csdn.net/20170709132044018?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="DEPENDS"></p>
<p>　　DllTest程序需访问Dll1.dll这一动态链接库，但该文件名前有一个问号，说明没有找到Dll1.dll这个动态链接库。这是因为前面将动态链接库文件放在了\DllTest\Debug目录的上一级目录下了。这里，可将Dll1.dll文件再复制到\DllTest\Debug目录下，然后重启Depends工具。这时问号就没有了。（因为Dll1.dll与DllTest.exe位于同一目录，在打开DllTest.exe时，就可找到该动态链接库。）</p>
<p><img src="http://img.blog.csdn.net/20170709132630578?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="成功"></p>
<h3 id="利用_declspecdllimport声明外部函数"><a href="#利用-declspec-dllimport-声明外部函数" class="headerlink" title="利用_declspec(dllimport)声明外部函数"></a>利用_declspec(dllimport)声明外部函数</h3><p>　　除了使用extern关键字表明函数是外部定义的之外，还可以使用标识符：_declspec(dllimport)来表明函数是从动态链接库中引入的。将之前的extern声明注释起来。添加：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="number">_</span>declspec(dllimport) <span class="function"><span class="keyword">int</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span>;</div><div class="line"><span class="number">_</span>declspec(dllimport) <span class="function"><span class="keyword">int</span> <span class="title">subtract</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span>;</div></pre></td></tr></table></figure></p>
<p>　　若调用的函数来自于动态链接库，应采用这种方式声明外部函数，编译器可以生成运行效率更高的代码。</p>
<h2 id="完善win32-dll例子"><a href="#完善Win32-DLL例子" class="headerlink" title="完善Win32 DLL例子"></a>完善Win32 DLL例子</h2><p>　　为知道DLL有哪些导出函数，通常在编写动态链接库时，会提供一个头文件，在此提供DLL导出函数原型的声明，以及函数有关注释文档。</p>
<p>　　为DLL1工程添加一个头文件：Dll1.h，并添加代码<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="number">_</span>declspec(dllimport) <span class="function"><span class="keyword">int</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span>;</div><div class="line"><span class="number">_</span>declspec(dllimport) <span class="function"><span class="keyword">int</span> <span class="title">subtract</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span>;</div></pre></td></tr></table></figure></p>
<p>　　然后将DllTestDlg.cpp先前添加的声明语句注释起来，并在前部添加下面的语句：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"dll1.h"</span></span></div></pre></td></tr></table></figure></p>
<p>　　Build并运行，结果和之前一样。</p>
<p>　　所以在发布Dll1.dll动态链接库时，可将Dll1.h头文件一起提供给使用者。</p>
<p>　　下面对Dll.h进行改造，使其不仅能为调用动态链接库的客户端程序服务，也能由动态链接库程序自身来使用。修改头文件：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> DLL1_API</span></div><div class="line"><span class="meta">#<span class="meta-keyword">else</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> DLL1_API _declspec(dllimport)</span></div><div class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></div><div class="line"></div><div class="line"><span class="number">_</span>declspec(dllimport) <span class="function"><span class="keyword">int</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span>;</div><div class="line"><span class="number">_</span>declspec(dllimport) <span class="function"><span class="keyword">int</span> <span class="title">subtract</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span>;</div></pre></td></tr></table></figure></p>
<p>　　修改Dll1.cpp<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">define</span> DLL1_API _declspec(dllexport)</span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"Dll1.h"</span></span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span></div><div class="line">&#123;</div><div class="line">	<span class="keyword">return</span> a + b;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">subtract</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span></div><div class="line">&#123;</div><div class="line">	<span class="keyword">return</span> a - b;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>　　将重新生成的文件复制，运行，结果也是正确的。</p>
<h2 id="从dll中导出c类"><a href="#从DLL中导出C-类" class="headerlink" title="从DLL中导出C++类"></a>从DLL中导出C++类</h2><p>　　在一个动态链接库中还可以导出一个C++类。<br>　　在Dll1.h中添加如下代码：</p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">class</span> DLL1_API Point</div><div class="line">&#123;</div><div class="line"><span class="keyword">public</span>:</div><div class="line">	<span class="function"><span class="keyword">void</span> <span class="title">output</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span>;</div><div class="line">&#125;;</div></pre></td></tr></table></figure>
<p>　　在Dll1.cpp中改为：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">define</span> DLL1_API _declspec(dllexport)</span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"Dll1.h"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;Windows.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span></div><div class="line">&#123;</div><div class="line">	<span class="keyword">return</span> a + b;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">subtract</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span></div><div class="line">&#123;</div><div class="line">	<span class="keyword">return</span> a - b;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">void</span> Point::output(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</div><div class="line">&#123;</div><div class="line">	<span class="comment">//返回调用者进程当前正在使用的那个窗口的句柄</span></div><div class="line">	HWND hwnd = GetForegroundWindow();</div><div class="line">	<span class="comment">//获取DC</span></div><div class="line">	HDC hdc = GetDC(hwnd);</div><div class="line">	<span class="keyword">char</span> buf[<span class="number">20</span>];</div><div class="line">	<span class="built_in">memset</span>(buf, <span class="number">0</span>, <span class="number">20</span>);</div><div class="line">	<span class="built_in">sprintf</span>(buf, <span class="string">"x = %d, y = %d"</span>, x, y);</div><div class="line">	<span class="comment">//输出坐标</span></div><div class="line">	TextOut(hdc, <span class="number">0</span>, <span class="number">0</span>, buf, <span class="built_in">strlen</span>(buf));</div><div class="line">	<span class="comment">//释放DC</span></div><div class="line">	ReleaseDC(hwnd, hdc);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>　　将Dll1.dll和Dll1.lib复制到测试工程DllTest所在目录下（本例将对应Dll1.h也放在了DllTest项目工程下，所以Dll1.h也应相应复制过来）。为避免麻烦，也可以把动态链接库文件所在目录添加到系统的环境变量Path中。这样就无需复制。<br>　　为测试这个新生成的DLL，打开DllTest工程，在对话框中增加一个按钮，属性为IDC_BTN_OUTPUT，Capition为Output。双击按钮添加响应函数OnBtnOutput。</p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">void</span> CDllTestDlg::OnBtnOutput() </div><div class="line">&#123;</div><div class="line">	<span class="comment">// <span class="doctag">TODO:</span> Add your control notification handler code here</span></div><div class="line">	Point pt;</div><div class="line">	pt.output(<span class="number">5</span>, <span class="number">3</span>);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>　　记得删除Debug下的旧Dll1.dll，放入新的，否则会报错。<br><img src="http://img.blog.csdn.net/20170813113649482?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="Output"><br>　　可利用Dumpbin命令的exports选项查看Dll1.dll这一动态链接库的导出情况，利用imports选项查看测试程序的导入情况。</p>
<p>另外，在实现动态链接库时，可以不导出整个类，而只导出该类中的某些函数。<br>打开Dll1工程，在Dll1.h中将声明Point类时使用的DLL1_API宏注释起来，然后在output函数的声明前放置DLL1_API宏。这样就表示只导出Point类中的成员函数output。为证实这一点，为Point类再添加一个成员函数test，<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">class</span> <span class="comment">/*DLL1_API*/</span> Point</div><div class="line">&#123;</div><div class="line"><span class="keyword">public</span>:</div><div class="line">	<span class="function"><span class="keyword">void</span> DLL1_API <span class="title">output</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span>;</div><div class="line">	<span class="function"><span class="keyword">void</span> <span class="title">test</span><span class="params">()</span></span>;</div><div class="line">&#125;;</div></pre></td></tr></table></figure></p>
<p>接着在Dll1.cpp中添加test函数的实现：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">void</span> Point::test()</div><div class="line">&#123;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>Build后，利用dumpbin命令的exports可查看Dll1.dll的导出信息。<br>可将所需文件再次复制到DllTest工程中，运行结果和之前相同。<br>在导出类的成员函数时，该函数必须具有public类型的访问权限，否则即使能被导出也不能被其他程序访问。</p>
<h2 id="解决名字改编问题"><a href="#解决名字改编问题" class="headerlink" title="解决名字改编问题"></a>解决名字改编问题</h2><p>C++编译器在生产厂DLL时，会对导出的函数进行名字改编，由于不同编译器改编规则不同，所以改编后名字不同。若利用不同编译器分别生成DLL和访问该DLL的客户端程序时，后者在访问该DLL的导出函数时就会出现问题。因此希望动态链接库在编译时，导出函数的名称不要发生改变。为此，在定义导出函数时，需加上限定符：extern “C”。C一定要大写。<br>打开Dll1工程，找到Dll1.cpp和Dll1.h中定义DLL1_API宏的代码，添加限定符。<br>此时，Dll1.h为<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> DLL1_API</span></div><div class="line"><span class="meta">#<span class="meta-keyword">else</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> DLL1_API extern <span class="meta-string">"C"</span> _declspec(dllimport)</span></div><div class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></div><div class="line"></div><div class="line"><span class="function">DLL1_API <span class="keyword">int</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span>;</div><div class="line"><span class="function">DLL1_API <span class="keyword">int</span> <span class="title">subtract</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span>;</div><div class="line"></div><div class="line"><span class="comment">/*class  Point</span></div><div class="line">&#123;</div><div class="line">public:</div><div class="line">	void DLL1_API output(int x, int y);</div><div class="line">	void test();</div><div class="line">&#125;;*/</div></pre></td></tr></table></figure></p>
<p>Dll1.cpp为<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">define</span> DLL1_API extern <span class="meta-string">"C"</span> _declspec(dllexport)</span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"Dll1.h"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;Windows.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span></div><div class="line">&#123;</div><div class="line">	<span class="keyword">return</span> a + b;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">subtract</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span></div><div class="line">&#123;</div><div class="line">	<span class="keyword">return</span> a - b;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">/*</span></div><div class="line">void Point::output(int x, int y)</div><div class="line">&#123;</div><div class="line">	//返回调用者进程当前正在使用的那个窗口的句柄</div><div class="line">	HWND hwnd = GetForegroundWindow();</div><div class="line">	//获取DC</div><div class="line">	HDC hdc = GetDC(hwnd);</div><div class="line">	char buf[20];</div><div class="line">	memset(buf, 0, 20);</div><div class="line">	sprintf(buf, "x = %d, y = %d", x, y);</div><div class="line">	//输出坐标</div><div class="line">	TextOut(hdc, 0, 0, buf, strlen(buf));</div><div class="line">	//释放DC</div><div class="line">	ReleaseDC(hwnd, hdc);</div><div class="line">&#125;</div><div class="line"></div><div class="line">void Point::test()</div><div class="line">&#123;</div><div class="line">&#125;</div><div class="line">*/</div></pre></td></tr></table></figure></p>
<p>Build后生成Dll1.dll，用dumpbin命令的exports选项查看该动态链接库的导出信息，发现add和subtract函数名没有被改编。然后利用DllTest工程测试，将Point类的代码注释起来，将发现客户端可访问Dll1中的导出函数。</p>
<p>缺陷：extern “C”只能导出全局函数，不能导出一个类的成员函数。另外，如果导出函数的调用约定发生了改变，即使使用了extern “C”，函数名仍会发生改编。<br>例如，在Dll1.h中add和subtract函数添加_stdcall关键字标准调用约定。<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> DLL1_API</span></div><div class="line"><span class="meta">#<span class="meta-keyword">else</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> DLL1_API extern <span class="meta-string">"C"</span> _declspec(dllimport)</span></div><div class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></div><div class="line"></div><div class="line">DLL1_API <span class="number">_</span><span class="function">stdcall <span class="keyword">int</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span>;</div><div class="line">DLL1_API <span class="number">_</span><span class="function">stdcall <span class="keyword">int</span> <span class="title">subtract</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span>;</div></pre></td></tr></table></figure></p>
<p>在Dll1.cpp中<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">define</span> DLL1_API extern <span class="meta-string">"C"</span> _declspec(dllexport)</span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"Dll1.h"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;Windows.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></div><div class="line"></div><div class="line"><span class="keyword">int</span> <span class="number">_</span><span class="function">stdcall <span class="title">add</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span></div><div class="line">&#123;</div><div class="line">	<span class="keyword">return</span> a + b;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">int</span> <span class="number">_</span><span class="function">stdcall <span class="title">subtract</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span></div><div class="line">&#123;</div><div class="line">	<span class="keyword">return</span> a - b;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>没有_stdcall关键字，函数的调用约定就是C调用约定，标准调用约定是WINAPI调用约定，与C调用约定不同。<br>Build后生成最新Dll1.dll，利用Dumpbin的exports选项查看该动态链接库的导出情况，可看到名字变为_add@8。</p>
<p>这种情况下，可通过模型定义文件（DEF）的方式来解决名字改编问题。<br>新建一个Win32 Dynamic-Link Library类型的工程，取名为Dll2，在AppWizard第一步选择“An empty Dll project”选项。添加Dll2.cpp，<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span></div><div class="line">&#123;</div><div class="line">	<span class="keyword">return</span> a + b;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">subtract</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span></div><div class="line">&#123;</div><div class="line">	<span class="keyword">return</span> a - b;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>在Dll2工程目录下新建一个空文本文件，改后缀为.def，添加到工程Source文件并打开：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">LIBRARY Dll2</div><div class="line"></div><div class="line">EXPORTS</div><div class="line">add</div><div class="line">subtract</div></pre></td></tr></table></figure></p>
<p>Bulid后利用Dumpbin的exports查看证明没有发生名字改编。</p>
<h2 id="显示加载方式加载dll"><a href="#显示加载方式加载DLL" class="headerlink" title="显示加载方式加载DLL"></a>显示加载方式加载DLL</h2><p>将最新的Dll2.dll复制到DllTest工程目录下。将DllTestDlg.cpp包含Dll1.h的那行代码注释起来，在link选项卡上删除对Dll1.lib的链接。<br>需用到LoadLibrary函数。</p>
<p>　　To be continued…<br>　　听听那冷雨</p>
]]></content>
    
    <summary type="html">
    
      &lt;div align=&quot;left&quot;&gt;&lt;br&gt;&lt;img src=&quot;http://img.blog.csdn.net/20170413231922633?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast&quot; width=&quot;300&quot; height=&quot;180&quot; style=&quot;float:right;&quot;/&gt;&lt;br&gt;&lt;br&gt; &lt;/div&gt;


&lt;blockquote&gt;
&lt;p&gt;2017.8.13已更新新章节&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;　　&lt;br&gt;　　本教程重操作，轻理论，为操作减负。需了解详细原理的朋友可以自行看各种书籍。&lt;br&gt;　　直接上菜。&lt;/p&gt;
    
    </summary>
    
      <category term="互联网" scheme="http://hubojing.github.io/categories/%E4%BA%92%E8%81%94%E7%BD%91/"/>
    
    
      <category term="MFC" scheme="http://hubojing.github.io/tags/MFC/"/>
    
      <category term="C++" scheme="http://hubojing.github.io/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>多说关闭引发的麻烦</title>
    <link href="http://hubojing.github.io/2017/04/05/%E5%A4%9A%E8%AF%B4%E5%85%B3%E9%97%AD%E5%BC%95%E5%8F%91%E7%9A%84%E9%BA%BB%E7%83%A6/"/>
    <id>http://hubojing.github.io/2017/04/05/多说关闭引发的麻烦/</id>
    <published>2017-04-05T08:44:21.000Z</published>
    <updated>2017-07-09T07:51:07.000Z</updated>
    
    <content type="html"><![CDATA[<p><div align="left"><br><img src="https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1491392241106&di=d26487a68371b445aa7b604ab2883ce1&imgtype=0&src=http%3A%2F%2Fimage103.360doc.com%2FDownloadImg%2F2017%2F02%2F1715%2F91672979_2.png" width="300" height="180" style="float:right;"><br> </div><br>我以为短期内我不可能再更新这篇文章了。没想到……</p>
<h1 id="201779-网页云跟帖停止服务"><a href="#2017-7-9-网页云跟帖停止服务" class="headerlink" title="2017.7.9 网页云跟帖停止服务"></a>2017.7.9 网页云跟帖停止服务</h1><p><img src="http://img.blog.csdn.net/20170709154958703?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="跟帖关闭"><br>此刻我只想说：<br>哈哈哈哈哈哈哈哈！</p>
<p>跟帖服务跟不上，最终还是被畅言玩死了。幸好早早换了disqus。</p>
<p>同时，为这个商业社会默哀一秒钟。</p>
<a id="more"></a>
<h1 id="201773-disqus不用翻墙即可评论"><a href="#2017-7-3-disqus不用翻墙即可评论" class="headerlink" title="2017.7.3 disqus不用翻墙即可评论"></a>2017.7.3 disqus不用翻墙即可评论</h1><p>　　不审核，直接显示。并且，可以回访！</p>
<p>　　这次折腾好后短期内应该不会再弄评论框了  专注工作专注工作</p>
<p>　　墙内换成网易云跟帖后，评论量就跳水式下降，仿佛被打入冷宫？加上跟帖各种缺陷，还是用disqus吧，刚好听说了可以不翻墙就能用的方法，遂试之。</p>
<p>之前的600条评论又只能暂以json的形式躺在电脑里了。为什么大家的格式都不一样呢？这真的很不和谐，很不！和！谐！！</p>
<h2 id="登录服务器"><a href="#登录服务器" class="headerlink" title="登录服务器"></a>登录服务器</h2><p>我用的xshell，ssh连接服务器。我的服务器是DigitalOcean买的 512M的……(它已经被闲置了三个月了，心疼money)<br>详见<a href="http://hubojing.me/2017/03/28/DigitalOcean%E8%B4%AD%E4%B9%B0%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%95%99%E7%A8%8B/" target="_blank" rel="external">DigitalOcean购买服务器教程</a></p>
<h2 id="安装面板"><a href="#安装面板" class="headerlink" title="安装面板"></a>安装面板</h2><p>在服务器上安装<a href="https://www.bt.cn/bbs/thread-1186-1-1.html" target="_blank" rel="external">宝塔Linux面板</a><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">yum install -y wget &amp;&amp; wget -O install.sh http://download.bt.cn/install/install.sh &amp;&amp; sh install.sh</div></pre></td></tr></table></figure></p>
<p>然后在浏览器中打开面板。</p>
<h2 id="新建站点"><a href="#新建站点" class="headerlink" title="新建站点"></a>新建站点</h2><p>在网站中添加站点，输入一个域名。（可勾选FTP）</p>
<h2 id="配置api"><a href="#配置API" class="headerlink" title="配置API"></a>配置API</h2><p><a href="https://github.com/fooleap/disqus-php-api" target="_blank" rel="external">利用 PHP cURL 转发 Disqus API 请求</a> ，将文件clone到本地。在config中按要求配置。</p>
<p>将API打包上传到面板，解压。再将dist文件夹下的两个文件上传上去。</p>
<h2 id="域名解析"><a href="#域名解析" class="headerlink" title="域名解析"></a>域名解析</h2><p>接着打开解析博客的地址，我用的腾讯云。<a href="https://www.dnspod.cn" target="_blank" rel="external">DNSPOD</a> 添加域名。<br>主机记录填对应的新建的站点名（不带网站一级域名），记录类型A，记录值为服务器地址。</p>
<h2 id="disqus配置"><a href="#disqus配置" class="headerlink" title="disqus配置"></a>disqus配置</h2><p>disqus后台中勾选允许匿名评论。</p>
<h2 id="修改主题中评论文件"><a href="#修改主题中评论文件" class="headerlink" title="修改主题中评论文件"></a>修改主题中评论文件</h2><p>完工。</p>
<p>部署时，<br><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">fatal: Unable <span class="built_in">to</span> <span class="built_in">create</span> <span class="string">'E:/hexo/.deploy_git/.git/index.lock'</span>: File exists.</div><div class="line"></div><div class="line">Another git <span class="built_in">process</span> seems <span class="built_in">to</span> be running <span class="keyword">in</span> this repository, e.g.</div><div class="line"><span class="keyword">an</span> editor opened <span class="keyword">by</span> <span class="string">'git commit'</span>. Please make sure all processes</div><div class="line">are terminated <span class="keyword">then</span> <span class="keyword">try</span> again. If <span class="keyword">it</span> still fails, <span class="keyword">a</span> git <span class="built_in">process</span></div><div class="line">may have crashed <span class="keyword">in</span> this repository earlier:</div><div class="line">remove <span class="keyword">the</span> <span class="built_in">file</span> manually <span class="built_in">to</span> continue.</div><div class="line">FATAL Something<span class="string">'s wrong. Maybe you can find the solution here: http://hexo.io/docs/troubleshooting.html</span></div></pre></td></tr></table></figure></p>
<p>解决：删除对应的index.lock。</p>
<hr>
<blockquote>
<h1 id="2017527-已更换为disqus"><a href="#2017-5-27-已更换为Disqus" class="headerlink" title="2017.5.27 已更换为Disqus"></a>2017.5.27 已更换为Disqus</h1></blockquote>
<p>由于Disqus被墙，可能需要科学上网后才能看到评论。<br>若墙内的朋友们需要评论，可以直接点击QQ图标（PC端在左边栏，移动端在页面上方），和我进行在线对话。</p>
<hr>
<blockquote>
<h1 id="2017530-已导入历史评论"><a href="#2017-5-30-已导入历史评论" class="headerlink" title="2017.5.30 已导入历史评论"></a>2017.5.30 已导入历史评论</h1></blockquote>
<p>虽然比不上多说，比网易云跟帖还是好很多了。<br>目前发现有一篇文章的评论导入失败，Disqus的显示如下：<br>Missing or invalid message 或 Unable to find parent post<br>我再看看怎么解决，是否需要手工导入。<br>参考：<a href="http://urouge.github.io/migrate-to-disqus/" target="_blank" rel="external">多说评论迁移至Disqus</a></p>
<hr>
<p>多说八百年不发邮件通知我有评论，在我换为网易云跟帖后，竟然邮件通知我有评论了！</p>
<p>多说关闭带来的评论区何去何从让我颇为困扰。<br>现在能用的大概只有这些：畅言（需备案）、网易云跟帖（github.io不支持）、友言（也有倒闭趋势）、来必力（韩国）。</p>
<p>没有一个像多说这样好用的！</p>
<p>虽然多说也有很多问题，但它至少解决了核心问题：<br>1.评论显示正确的网友名称。<br>来看看我换上网易云跟帖后的效果：<br><img src="http://img.blog.csdn.net/20170405161942419?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="网易云跟帖"></p>
<p>都是有态度网友…… 我压根分不清谁是谁！</p>
<p>2.点击头像可以回访人家的独立博客。<br>这一点真的很重要，这往往是我们小众的独立博客人交朋友的主要途径啊！</p>
<p>3.可以自定义。<br>头像旋转、评论框自定义，真的可以很好看。这些跟帖做不到。</p>
<p>4.盖楼模式多样。<br>而跟帖只能一种，我不太喜欢，重复率太高，我还是喜欢多说的嵌套。</p>
<p>多说名字没起好啊！多说无益必自毙→_→<br>先换回多说吧，再等一个月看看。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;div align=&quot;left&quot;&gt;&lt;br&gt;&lt;img src=&quot;https://timgsa.baidu.com/timg?image&amp;quality=80&amp;size=b9999_10000&amp;sec=1491392241106&amp;di=d26487a68371b445aa7b604ab2883ce1&amp;imgtype=0&amp;src=http%3A%2F%2Fimage103.360doc.com%2FDownloadImg%2F2017%2F02%2F1715%2F91672979_2.png&quot; width=&quot;300&quot; height=&quot;180&quot; style=&quot;float:right;&quot;/&gt;&lt;br&gt; &lt;/div&gt;&lt;br&gt;我以为短期内我不可能再更新这篇文章了。没想到……&lt;/p&gt;
&lt;h1 id=&quot;2017-7-9-网页云跟帖停止服务&quot;&gt;&lt;a href=&quot;#2017-7-9-网页云跟帖停止服务&quot; class=&quot;headerlink&quot; title=&quot;2017.7.9 网页云跟帖停止服务&quot;&gt;&lt;/a&gt;2017.7.9 网页云跟帖停止服务&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;http://img.blog.csdn.net/20170709154958703?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast&quot; alt=&quot;跟帖关闭&quot;&gt;&lt;br&gt;此刻我只想说：&lt;br&gt;哈哈哈哈哈哈哈哈！&lt;/p&gt;
&lt;p&gt;跟帖服务跟不上，最终还是被畅言玩死了。幸好早早换了disqus。&lt;/p&gt;
&lt;p&gt;同时，为这个商业社会默哀一秒钟。&lt;/p&gt;
    
    </summary>
    
      <category term="杂谈" scheme="http://hubojing.github.io/categories/%E6%9D%82%E8%B0%88/"/>
    
    
      <category term="多说" scheme="http://hubojing.github.io/tags/%E5%A4%9A%E8%AF%B4/"/>
    
  </entry>
  
  <entry>
    <title>DigitalOcean购买服务器教程</title>
    <link href="http://hubojing.github.io/2017/03/28/DigitalOcean%E8%B4%AD%E4%B9%B0%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%95%99%E7%A8%8B/"/>
    <id>http://hubojing.github.io/2017/03/28/DigitalOcean购买服务器教程/</id>
    <published>2017-03-28T13:50:20.000Z</published>
    <updated>2017-04-16T09:14:42.267Z</updated>
    
    <content type="html"><![CDATA[<div align="left"><br><img src="http://img.blog.csdn.net/20170326174446026?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" width="300" height="180" style="float:right;"><br><br>GitHub教育礼包有50美金优惠券，加上朋友的链接送的10美金，自己充值的5美金，正好可以买一个服务器用一年了。<br>　<br>　<br><br> </div>




<a id="more"></a>
<h1 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h1><h2 id="注册-优惠码"><a href="#注册、优惠码" class="headerlink" title="注册、优惠码"></a>注册、优惠码</h2><p>1.点击<a href="https://m.do.co/c/9d7b9b7b94ba/" target="_blank" rel="external">https://m.do.co/c/9d7b9b7b94ba/</a> 进入DigitalOcean注册。<br>（通过以上链接，你可以多获得10美金！同时，我也将得到10美金。）</p>
<p>注册时，需要支付5美金完成支付，最好用paypal支付（可以去注册一个账号），最好不要用信用卡（土豪可以用……）。</p>
<p>2.点击头像下的Setting，再点击右侧的Billing<br><img src="http://img.blog.csdn.net/20170326174446026?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="Billing"></p>
<p>3.输入教育礼包优惠码<br><img src="http://img.blog.csdn.net/20170326174542642?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="Promo code"></p>
<p><strong>注意</strong>：很有可能显示“ Account not eligible to use this promo code.”可能滥用优惠码却不是学生的人太多，DO加强了监管，审查比较严格。反正我的是没有通过。<br>于是，需要向客服反映情况。<br>点击Support，<br><img src="http://img.blog.csdn.net/20170326174844940?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="Support"><br>点击Create ticket，把你的情况写清楚，最好说明你是学生，并附带你的优惠码。之后官方会帮你搞定。（在三小时后就处理好了我的）</p>
<h2 id="购买服务器"><a href="#购买服务器" class="headerlink" title="购买服务器"></a>购买服务器</h2><p>点击创建Droplet，</p>
<p><img src="http://img.blog.csdn.net/20170326175306708?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="Create Droplet"></p>
<p><img src="http://img.blog.csdn.net/20170326180620758?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="服务器价格"></p>
<p>学生……穷啊……只能买最便宜的……这样刚好可以用一年。</p>
<p><img src="http://img.blog.csdn.net/20170326175420319?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="选择服务器系统"></p>
<p>选择centos6.8x64</p>
<p><img src="http://img.blog.csdn.net/20170326175528071?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="选择地址"></p>
<p>旧金山比较快。</p>
<p><img src="http://img.blog.csdn.net/20170326175607599?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="可选项"></p>
<p>这个的第一个和第三个可以选，最好不选第三个。</p>
<p>改名</p>
<p><img src="http://img.blog.csdn.net/20170326175720964?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="改名"></p>
<p>点击create，服务器购买成功。<br>DO会给你发送一封带有初始密码的邮件。</p>
<h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p>下载puTTY或xshell。<br>puTTY<br><img src="http://img.blog.csdn.net/20170326180124352?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="puTTY"></p>
<p>我以shell为例，<br><img src="http://img.blog.csdn.net/20170326180208206?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="初始页"></p>
<p>新建会话。<br><img src="http://img.blog.csdn.net/20170326180245618?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="属性"></p>
<p>IP地址填你的服务器IP，接受并保存你的主机密钥。<br>输入用户名。<br>输入初始密码。<br>再修改密码。（密码最好复杂一点）</p>
<p>完成。<br>可以愉快地使用你的服务器啦！</p>
<h1 id="致谢"><a href="#致谢" class="headerlink" title="致谢"></a>致谢</h1><p>感谢<a href="https://www.domeyi.com/" target="_blank" rel="external">小忆</a>的耐心指导和大力帮助！</p>
]]></content>
    
    <summary type="html">
    
      &lt;div align=&quot;left&quot;&gt;&lt;br&gt;&lt;img src=&quot;http://img.blog.csdn.net/20170326174446026?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast&quot; width=&quot;300&quot; height=&quot;180&quot; style=&quot;float:right;&quot;/&gt;&lt;br&gt;&lt;br&gt;GitHub教育礼包有50美金优惠券，加上朋友的链接送的10美金，自己充值的5美金，正好可以买一个服务器用一年了。&lt;br&gt;　&lt;br&gt;　&lt;br&gt;&lt;br&gt; &lt;/div&gt;
    
    </summary>
    
      <category term="互联网" scheme="http://hubojing.github.io/categories/%E4%BA%92%E8%81%94%E7%BD%91/"/>
    
    
      <category term="DigitalOcean" scheme="http://hubojing.github.io/tags/DigitalOcean/"/>
    
      <category term="服务器" scheme="http://hubojing.github.io/tags/%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
  </entry>
  
  <entry>
    <title>更换为.me域名教程</title>
    <link href="http://hubojing.github.io/2017/03/26/%E6%9B%B4%E6%8D%A2%E4%B8%BA.me%E5%9F%9F%E5%90%8D%E6%95%99%E7%A8%8B/"/>
    <id>http://hubojing.github.io/2017/03/26/更换为.me域名教程/</id>
    <published>2017-03-26T13:01:21.000Z</published>
    <updated>2017-04-16T09:15:29.091Z</updated>
    
    <content type="html"><![CDATA[<div align="left"><br><img src="http://img.blog.csdn.net/20170326164253754?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" width="300" height="180" style="float:right;"><br><br>既然申请得到Github教育礼包，就应开始使用。<br>我的博客是基于Hexo搭建于Github的博客，原域名：<a href="http://hubojing.github.io/">http://hubojing.github.io/</a> ，现在的新域名是 <a href="http://www.hubojing.me/" target="_blank" rel="external">http://www.hubojing.me/</a> 。<br>　<br>　<br>　<br><br> </div>



<a id="more"></a>
<h1 id="注册me域名"><a href="#注册-me域名" class="headerlink" title="注册.me域名"></a>注册.me域名</h1><p>1.打开教育礼包中的namecheap优惠页面<a href="https://nc.me/，使用你的github账号登录。" target="_blank" rel="external">https://nc.me/，使用你的github账号登录。</a><br><img src="http://img.blog.csdn.net/20170326164253754?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="登录"></p>
<p>登陆后，显示已成功。</p>
<p><img src="http://img.blog.csdn.net/20170326164344646?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="成功"></p>
<p>搜索你想要的域名。</p>
<p><img src="http://img.blog.csdn.net/20170326164007734?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="查询页面"></p>
<p>2.如果该域名未被注册，那么你可以注册该域名。<br><img src="http://img.blog.csdn.net/20170326164441564?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="注册页面"></p>
<p>点击ADD。</p>
<p><img src="http://img.blog.csdn.net/20170326164524022?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="付款"></p>
<p>点击Complete Order。</p>
<p><img src="http://img.blog.csdn.net/20170326164625924?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="详情"></p>
<p>点击下方的Finish Up完成注册，这样该域名就属于你了。</p>
<p>紧接着，会要求你登录你的namecheap账号，如果之前没有用过该网站，就点register注册一个账号。</p>
<p><img src="http://img.blog.csdn.net/20170326164750097?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="注册"></p>
<p>注册完成后，是以下的页面显示。</p>
<p><img src="http://img.blog.csdn.net/20170326164921653?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="注册完成"></p>
<p>在和你的Github账户绑定在一起：<br><img src="http://img.blog.csdn.net/20170326165006630?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="绑定成功"></p>
<p>这样.me域名注册就算是全部完成了。</p>
<h1 id="域名管理"><a href="#域名管理" class="headerlink" title="域名管理"></a>域名管理</h1><p>打开网址<a href="http://www.namecheap.com/，登录自己的账户。" target="_blank" rel="external">http://www.namecheap.com/，登录自己的账户。</a><br>点击Domain List，<br><img src="http://img.blog.csdn.net/20170326165302596?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="点击"></p>
<p>你将看到域名列表。</p>
<p><img src="http://img.blog.csdn.net/20170326165359413?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="域名列表"></p>
<p>由于国外的DNS可能很慢，于是最好托管到国内的服务商来。我选择的是腾讯云。</p>
<h1 id="转移到腾讯云"><a href="#转移到腾讯云" class="headerlink" title="转移到腾讯云"></a>转移到腾讯云</h1><p>进入<a href="https://www.dnspod.cn/，注册新账号（可以用QQ、微信等直接登录免注册）。" target="_blank" rel="external">https://www.dnspod.cn/，注册新账号（可以用QQ、微信等直接登录免注册）。</a></p>
<p>点击添加域名，将刚才的.me域名输入。保存。<br><img src="http://img.blog.csdn.net/20170326165806508?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="添加域名"></p>
<p>控制台全局外观：<br><img src="http://img.blog.csdn.net/20170326170148387?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="控制台"></p>
<p>再回到namecheap控制台，修改NAMESERVERS，选择Custom DNS，如图。<br><img src="http://img.blog.csdn.net/20170326170503918?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="修改DNS"></p>
<p>需要等待一会儿才能成功。（最晚48h，我就等了几分钟就好了。）</p>
<p><img src="http://img.blog.csdn.net/20170326170702856?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="成功提示"></p>
<p>回到腾讯云，域名是红的。<br><img src="http://img.blog.csdn.net/20170326170821412?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="红色"></p>
<p>点击进去看看，再返回，等待一下，再刷新。<br>变成蓝色，说明已经更新成功了。</p>
<p>点击进入，点击添加记录，</p>
<p><img src="http://img.blog.csdn.net/20170326171042541?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="添加记录"></p>
<p>保存。</p>
<h1 id="github博客项目设置"><a href="#GitHub博客项目设置" class="headerlink" title="GitHub博客项目设置"></a>GitHub博客项目设置</h1><p>进入项目页（是博客项目页，非个人资料页），点击Setting，<br><img src="http://img.blog.csdn.net/20170326171232078?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="GitHub Pages"></p>
<p>将Custom domain改为你刚才解析的域名，比如我的 www.hubojing.me ，点击Save保存。</p>
<p><img src="http://img.blog.csdn.net/20170326171403280?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="保存成功"></p>
<p>大功告成！你的新域名已能正常使用，并且也能通过旧域名自动跳转到新域名！（记得重启浏览器，或者使用IE或Edge浏览器打开查看效果！）<br><img src="http://img.blog.csdn.net/20170326171616595?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="大功告成"></p>
<h1 id="致谢"><a href="#致谢" class="headerlink" title="致谢"></a>致谢</h1><p>感谢 <a href="https://www.domeyi.com/" target="_blank" rel="external">小忆</a> 在我更换域名时提供的大力帮助！</p>
]]></content>
    
    <summary type="html">
    
      &lt;div align=&quot;left&quot;&gt;&lt;br&gt;&lt;img src=&quot;http://img.blog.csdn.net/20170326164253754?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast&quot; width=&quot;300&quot; height=&quot;180&quot; style=&quot;float:right;&quot;/&gt;&lt;br&gt;&lt;br&gt;既然申请得到Github教育礼包，就应开始使用。&lt;br&gt;我的博客是基于Hexo搭建于Github的博客，原域名：&lt;a href=&quot;http://hubojing.github.io/&quot;&gt;http://hubojing.github.io/&lt;/a&gt; ，现在的新域名是 &lt;a href=&quot;http://www.hubojing.me/&quot;&gt;http://www.hubojing.me/&lt;/a&gt; 。&lt;br&gt;　&lt;br&gt;　&lt;br&gt;　&lt;br&gt;&lt;br&gt; &lt;/div&gt;
    
    </summary>
    
      <category term="互联网" scheme="http://hubojing.github.io/categories/%E4%BA%92%E8%81%94%E7%BD%91/"/>
    
    
      <category term="教程" scheme="http://hubojing.github.io/tags/%E6%95%99%E7%A8%8B/"/>
    
      <category term="域名" scheme="http://hubojing.github.io/tags/%E5%9F%9F%E5%90%8D/"/>
    
  </entry>
  
  <entry>
    <title>Github教育礼包</title>
    <link href="http://hubojing.github.io/2017/03/25/Github%E6%95%99%E8%82%B2%E7%A4%BC%E5%8C%85/"/>
    <id>http://hubojing.github.io/2017/03/25/Github教育礼包/</id>
    <published>2017-03-25T03:21:23.000Z</published>
    <updated>2017-04-16T09:13:21.975Z</updated>
    
    <content type="html"><![CDATA[<div align="left"><br><img src="http://img.blog.csdn.net/20170325152139513?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" width="300" height="180" style="float:right;"><br><br><br>　<br>感谢小伙伴让我知道github教育礼包，并教我怎么申请：<br><br><br> </div>


<a id="more"></a>
<ol>
<li>到教育优惠页面申请：<a href="https://education.github.com/" target="_blank" rel="external">https://education.github.com/</a></li>
<li>填写学校信息及申请理由，如果有edu邮箱一般很快就通过了；如果没有，需要提供证件来证明。</li>
<li>一般来说一小时到几天就申请成功了。（我当天晚上收到了邮件）<br>有用的主要三个东西：</li>
<li>me域名免费一年</li>
<li>DO的免费VPS代金券50美金（有效期1年），可以使用最低配置11个月</li>
<li>免费SSL证书</li>
</ol>
<p>收到的邮件（截取片段）：<br>If you need help getting started with Git and GitHub, check out:</p>
<p><a href="https://help.github.com/articles/good-resources-for-learning-git-and-github" target="_blank" rel="external">https://help.github.com/articles/good-resources-for-learning-git-and-github</a></p>
<p>We’ve also given you access to the Student Developer Pack, available at:</p>
<p><a href="https://education.github.com/pack" target="_blank" rel="external">https://education.github.com/pack</a></p>
<p>If you have any questions, contact us:</p>
<p><a href="https://education.github.com/contact" target="_blank" rel="external">https://education.github.com/contact</a></p>
<p>Spread the word: we love giving educational discounts to students, teachers, administrators, and researchers! Please send them to:</p>
<p><a href="https://education.github.com" target="_blank" rel="external">https://education.github.com</a></p>
<p>Have an Octotastic day!（这个 Octotastic 我不造是什么意思……词典也没这个词 望大神解答）</p>
<p>My Pack:<br><img src="http://img.blog.csdn.net/20170325152139513?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="ATOM"><br>A hackable text editor for the 21st Century<br>来自21世纪的可定制文本编辑器<br>免费使用</p>
<p><img src="http://img.blog.csdn.net/20170325152259545?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="aws educate"><br>Access to the AWS cloud, free training, and collaboration resources<br>AWS云，免费教程和资源。</p>
<p><img src="http://img.blog.csdn.net/20170325152452545?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="bitnami"><br>Install cloud applications in a single click<br>轻松安装云应用</p>
<p><img src="http://img.blog.csdn.net/20170325152601503?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="CARTO"><br>An open and powerful platform for spatial data analysis, visualization, and application creation.<br>一个开放有力的空间、视觉、应用创建数据分析平台。</p>
<p><img src="http://img.blog.csdn.net/20170325152759640?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="CrowdFlower"><br>Crowdsourcing and data enrichment platform<br>众包与数据富集平台</p>
<p><img src="http://img.blog.csdn.net/20170325152955501?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="DATADOG"><br>Cloud-based infrastructure monitoring<br>云基础设施监控</p>
<p><img src="http://img.blog.csdn.net/20170325153132065?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="DigitalOcean"><br>Simple cloud hosting, built for developers<br>简单云托管，为开发者而生</p>
<p><img src="http://img.blog.csdn.net/20170325153307467?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="dnsimple"><br>Simple DNS management with one-click services and a robust API<br>简单的DNS管理，包括一键服务和强大的API</p>
<p><img src="http://img.blog.csdn.net/20170325153539661?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="FLATIRON SCHOOL"><br>Learn Web Development from the premier coding bootcamp for launching developers.<br>从最开始的代码集训营开始学习Web开发成为开发者。</p>
<p><img src="http://img.blog.csdn.net/20170325153827865?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="Github"><br>Powerful collaboration, code review, and code management<br>强大的协作、代码审查和代码管理</p>
<p><img src="http://img.blog.csdn.net/20170325153937663?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="GitKraken"><br>The downright luxurious Git client for Windows, Mac and Linux<br>Windows，Mac和Linux上的超级豪华Git客户端</p>
<p><img src="http://img.blog.csdn.net/20170325154114898?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="HACKHANDS"><br>Live programming help available 24/7<br>编程帮助</p>
<p><img src="http://img.blog.csdn.net/20170325154256511?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="Microsoft Imagine"><br>A suite of Microsoft Azure cloud services and developer tools, including the Visual Studio IDE<br>一套微软Azure的云服务和开发工具，包括Visual Studio IDE</p>
<p><img src="http://img.blog.csdn.net/20170325154446405?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="namecheap"><br>Affordable registration, hosting, and domain management<br>便宜的注册，托管和域管理</p>
<p><img src="http://img.blog.csdn.net/20170325154612806?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="SendGrid"><br>Email infrastructure as a service<br>电子邮件基础设施服务</p>
<p><img src="http://img.blog.csdn.net/20170325154722190?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="stripe"><br>Web and mobile payments, built for developers<br>网络和移动支付，为开发者而生</p>
<p><img src="http://img.blog.csdn.net/20170325154820863?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="TAPLYTICS"><br>Dynamic A/B testing, smart push notifications and custom analytics for native mobile apps<br>动态A / B测试，智能推送通知和自定义分析本地移动应用程序</p>
<p><img src="http://img.blog.csdn.net/20170325155641561?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="transifex"><br>Localization platform that easily integrates with your code base<br>易于与代码库集成的本地化平台</p>
<p><img src="http://img.blog.csdn.net/20170325155750954?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="Travis CI"><br>Continuous integration platform for open source and private projects<br>开源和私有项目的连续集成平台</p>
<p><img src="http://img.blog.csdn.net/20170325155909190?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="UDACITY"><br>Enroll in a Nanodegree program, and launch your career in Web and Mobile Development, Machine Learning, Data Science, and more.</p>
<p>Enroll in a Nanodegree program, and launch your career in Web and Mobile Development, Machine Learning, Data Science, and more.<br>报名参加一个nanodegree项目，在Web、移动开发、机器学习、数据科学以及等多方面，开启你的职业生涯。</p>
<p><img src="http://img.blog.csdn.net/20170325162245096?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="UNREAL"><br>A complete suite of game development tools for PC, console, mobile, web and VR<br>一套完整的游戏开发工具，用于PC，控制台，移动，网络和虚拟现实</p>
<p>正在学习其中一些工具的使用中……未完待续。</p>
]]></content>
    
    <summary type="html">
    
      &lt;div align=&quot;left&quot;&gt;&lt;br&gt;&lt;img src=&quot;http://img.blog.csdn.net/20170325152139513?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast&quot; width=&quot;300&quot; height=&quot;180&quot;  style=&quot;float:right;&quot;/&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;　&lt;br&gt;感谢小伙伴让我知道github教育礼包，并教我怎么申请：&lt;br&gt;&lt;br&gt;&lt;br&gt; &lt;/div&gt;
    
    </summary>
    
      <category term="杂谈" scheme="http://hubojing.github.io/categories/%E6%9D%82%E8%B0%88/"/>
    
    
      <category term="Github" scheme="http://hubojing.github.io/tags/Github/"/>
    
  </entry>
  
</feed>
