<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[上海决赛之旅 | the trip for contest in Shanghai]]></title>
      <url>http://hubojing.github.io/2016/08/27/%E4%B8%8A%E6%B5%B7%E5%86%B3%E8%B5%9B%E4%B9%8B%E6%97%85/</url>
      <content type="html"><![CDATA[<p><div align="left"><br><img src="http://7xray0.com1.z0.glb.clouddn.com/IMG_20160823_183005.jpg" width="300" height="180" alt="配图" style="float:right;"></div></p>
<p>从上海比赛回来，说说几点感受：<br>1.大神技术过硬。<br>2.大神为作品倾注很多。<br>3.创意和灵感的重要性。<br>4.团队合作，找到志同道合的朋友。<br>5.大神演讲能力极强，不怯场。<br>6.自己的心态和学习程度都需要改正加强，差距是明显可见的。</p>
<p>衷心感谢学校的支持，能为学院和学校争取荣誉，同时实现自己初涉竞赛的心愿，找到自己和大神的距离，不虚此行。</p>
<p>I would like to spare my thoughts after my coming back from Shanghai for my competition.<br>1.Superiors are excellent in technology.<br>2.Superiors take times in their work.<br>3.Idea and inspiration are insignificant.<br>4.Team-work is needed,and we should find like-minded firends.<br>5.Superiors have ability in giving a speech and never afraid of it.<br>6.My attitude and learning need to be changed and improved,and the distance between superior and me is clearly to see.</p>
<p>Thank you for the support from my university,and I’m prond of doing credit to my school and university.In the meanwhile,I realise my dream for first involve in contest.<br>附自拍上海美景 P.S.the view of Shanghai<br><img src="http://7xray0.com1.z0.glb.clouddn.com/IMG_20160823_203221.jpg" alt="上海"></p>
<p><span id="busuanzi_container_page_pv"><br>本文已被阅读 <span id="busuanzi_value_page_pv"></span> 次。感谢您的点击！<br>The article has been viewed <span id="busuanzi_value_page_pv"></span> times.Thank you for your visit!<br></span></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[说明]]></title>
      <url>http://hubojing.github.io/2016/07/16/%E8%AF%B4%E6%98%8E/</url>
      <content type="html"><![CDATA[<p><div align="left"><br><img src="http://i2.w.yun.hjfile.cn/doc/201304/bc1b70e4e74d48c4ab99e3db21a052f0.png" width="300" height="180" alt="配图" style="float:right;"></div></p>
<p>有朋友问我为何最近github和博客都没有较多的维护和更新，现作出<code>说明</code>：</p>
<p>因本人自身发展问题，正积极备考研究生考试，直至考研结束，所以github和博客的维护和更新会延缓，但<strong>不会停止维护</strong>。<br>希望完全回归时，自己能收获理想！<br>学习，永不止步。<br>望各位朋友理解！谢谢大家！</p>
<a id="more"></a>
<p><span id="busuanzi_container_page_pv"><br>本文已被阅读 <span id="busuanzi_value_page_pv"></span> 次。感谢您的点击！<br>The article has been viewed <span id="busuanzi_value_page_pv"></span> times.Thank you for your visit!<br></span></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[P图集 | PS picture album]]></title>
      <url>http://hubojing.github.io/2016/06/29/P%E5%9B%BE%E9%9B%86/</url>
      <content type="html"><![CDATA[<p><div align="left"><br><img src="http://7xray0.com1.z0.glb.clouddn.com/16-6-29/63527525.jpg" width="300" height="180" alt="配图" style="float:right;"></div></p>
<p>自从学会Photoshop这个好用的工具后，对照片的处理更得心应手了。<br>这是我的P图集。<br>I use photoshop more effectively after I learned it.<br>This is my PS picture album.</p>
<p> <br><a id="more"></a><br><strong>1</strong><br><img src="/images/y1.jpg" alt="原图"><br><img src="/images/p1_1.jpg" alt="冷色"><br><img src="/images/p1_2.jpg" alt="暖色"></p>
<p><strong>2</strong><br><img src="/images/y2.jpg" alt="原图"><br><img src="/images/p2.jpg" alt="修后"></p>
<p>我是想调成新海诚动漫画风效果的…不过水平还欠佳……<br>I want to do it as Makoto Shinkai’s animation style,but my level just not reachs that high apparently.</p>
<p><span id="busuanzi_container_page_pv"><br>本文已被阅读 <span id="busuanzi_value_page_pv"></span> 次。感谢您的点击！<br>The article has been viewed <span id="busuanzi_value_page_pv"></span> times.Thank you for your visit!<br></span></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Linux菜鸟初尝鲜 | First try on Linux]]></title>
      <url>http://hubojing.github.io/2016/06/14/Linux%E8%8F%9C%E9%B8%9F%E5%88%9D%E5%B0%9D%E9%B2%9C/</url>
      <content type="html"><![CDATA[<p><div align="left"><br><img src="http://news.mydrivers.com/Img/20110826/2011082609513918.jpg" width="300" height="180" alt="配图" style="float:right;"></div></p>
<p>大三学技术学到天昏地暗，常叹为何不早入技术门！<br>I have learned technology to my best in my junior time,and I feel I should step into the technological world earlier!</p>
<p> <br><a id="more"></a></p>
<p>奈何大三事务多，惟愿考研考上给我又几年自学的机会……更认真地对待技术！<br>Too busy in the junior,may I can gain another several years to learn in the postgraduate stage.I will be more hard-working!<br>这一年，接触git、css、html，前端知识，尝试java，这学期又选了数据库sql，嵌入式系统Linux，还学了好用的工具Labview，这学期选的课都很实用！只是知识需要消化……</p>
<p>This year,I get to know git,css,html and fore-end knowledge,try java,and chose sql,linux and labview this semester,which are practical nowadays!Indeed,it takes time to understand them deeply.<br>一直想了解Linux，无从下手，最后还是在课堂上被老师带着走入了linux的世界。<br>Always want to know something about linux,but I just have no idea about it.Luckliy,I become to see you finally,linux.</p>
<h1 id="2016-6-22更新-Update-一要点"><a href="#2016-6-22更新-Update-一要点" class="headerlink" title="2016.6.22更新 Update 一要点"></a>2016.6.22更新 Update 一要点</h1><p>昨天考完了嵌入式系统实验考试，get一个简单的要点：<br>I got a small but esstenial point in my linux exam,<br>armv4l-unknown-linux-gcc -o 开发板上的编译 winSCP’s compiler<br>gcc -o 虚拟机上的编译 VM’s compiler<br>分清两种编译器。Please make sure your compiler is right.<br>考试内容是开发板与虚拟机通信。开发板是client，虚拟机是server.（和之前的记录是相反的）<br>My exam is VM communicate with winSCP.The winCSP is client,and the VM is server.</p>
<h1 id="2016-6-14更新-Update-基础实验-熟悉Linux开发环境-Basic-experiment-Be-familiar-with-Linux-development-environment"><a href="#2016-6-14更新-Update-基础实验-熟悉Linux开发环境-Basic-experiment-Be-familiar-with-Linux-development-environment" class="headerlink" title="2016.6.14更新 Update 基础实验    熟悉Linux开发环境   Basic experiment      Be familiar with Linux development environment"></a>2016.6.14更新 Update 基础实验    熟悉Linux开发环境   Basic experiment      Be familiar with Linux development environment</h1><p>熟悉Linux开发环境，学会基于S3C2410的Linux开发环境的配置和使用。使用Linux的armv4l-unknown-linux-gcc编译，使用基于NFS方式的下载调试，了解嵌入式开发的基本过程。<br>Be familiar with Linux development environment and learn configuration of Linux development environment based on S3C2410.Use compile of armv41-unknown-linux-gcc，use download and debug based on NFS mode,to learn the embedded development process.</p>
<h2 id="实验步骤-Experiment-steps"><a href="#实验步骤-Experiment-steps" class="headerlink" title="实验步骤        Experiment steps"></a>实验步骤        Experiment steps</h2><p>1、建立工作目录 Create work directory<br>2、编写程序源代码 Write code<br>3、编写Makefile Write makefile<br>4、编译应用程序    Compile program<br>5、下载调试    Download and debug</p>
<h2 id="重难点-Important-point"><a href="#重难点-Important-point" class="headerlink" title="重难点 Important point"></a>重难点 Important point</h2><p>Makefile文件定义了一系列的规则，它指明了哪些文件需要编译，哪些文件需要先编译，哪些文件需要重新编译等等更为复杂的命令。使用它带来的好处就是自动编译，你只需要敲一个“make”命令整个工程就可以实现自动编译。<br>Makefile definite a series of rules,and it shows which files need compile,which first to be compiled,and which need recompile.The benefit is a simple “make” can finish automatic compilation.</p>
<p>mount -t nfs -o nolock 192.168.0.56:/arm2410cl /host //超级终端中执行 carried out under the super terminal<br><strong>注意：IP地址需要根据宿主PC机的实际情况修改成对应arm2410cl目录。</strong><br><strong>Attention:IP should be changed according to the real condition.</strong> </p>
<p>编译、修改程序都是在宿主机（本地PC机）上进行，不能在超级终端下进行。<br>Compile and modify the program both in the host (local PC), and it can not be carried out under the super terminal.</p>
<h2 id="课堂笔记备忘"><a href="#课堂笔记备忘" class="headerlink" title="课堂笔记备忘"></a>课堂笔记备忘</h2><h3 id="服务器与客户端通信"><a href="#服务器与客户端通信" class="headerlink" title="服务器与客户端通信"></a>服务器与客户端通信</h3><p>虚拟机上（地址192.168.1.12）VM：<br>cd /arm2410cl/<br>cd exp<br>cd basic<br>cd server（先把server.c和client.c拷入对应文件夹下 into right files）<br>ls<br>gcc -o client client.c //编译compile<br>armv41-unkown-linux-gcc -o server server.c //编译compile<br><strong>注意：修改了源文件记得要编译，保存还不够。</strong><br><strong>Attention:It is vital to compile,not just save file.</strong></p>
<p>./client<br>123456</p>
<p>开发板(地址192.168.1.121)winSCP：<br>ifconfig eth0 192.168.1.121<br>mount -t nfs -o nolock 192.168.1.12:/arm2410c1 /host （挂载mount）<br>cd /host<br>cd exp<br>cd basic<br>cd server<br>ls<br>（可以ping 192.168.1.12检查一下是否连通 test if it is linked.）<br>./server<br>123456</p>
<p>exit退出连接</p>
<p>程序只能是客户端向服务端发送信息，不能反过来。<br>Information can only be sent to the server from client which can’t be reversed because of the program setting.</p>
<p>原程序Original program：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div></pre></td><td class="code"><pre><div class="line">int <span class="function"><span class="title">main</span></span>()</div><div class="line">&#123;</div><div class="line">     char buffer[BUFFER_SIZE];</div><div class="line">    struct sockaddr_in client_addr;</div><div class="line">    socklen_t length;</div><div class="line">	   int conn;</div><div class="line">	  int len;</div><div class="line">	//int fork_id;</div><div class="line">///定义sockfd</div><div class="line">   int server_sockfd = socket(AF_INET,SOCK_STREAM, 0);</div><div class="line"> </div><div class="line">   ///定义sockaddr_in</div><div class="line">   struct sockaddr_in server_sockaddr;</div><div class="line">   server_sockaddr.sin_family = AF_INET;</div><div class="line">    server_sockaddr.sin_port = htons(MYPORT);</div><div class="line">    server_sockaddr.sin_addr.s_addr = htonl(INADDR_ANY);</div><div class="line"></div><div class="line">    ///<span class="built_in">bind</span>，成功返回0，出错返回-1</div><div class="line">   <span class="keyword">if</span>(<span class="built_in">bind</span>(server_sockfd,(struct sockaddr *)&amp;server_sockaddr,sizeof(server_sockaddr))==-1)</div><div class="line">    &#123;</div><div class="line">        perror(<span class="string">"bind"</span>);</div><div class="line">        <span class="built_in">exit</span>(1);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    ///listen，成功返回0，出错返回-1</div><div class="line">    <span class="keyword">if</span>(listen(server_sockfd,QUEUE) == -1)</div><div class="line">    &#123;</div><div class="line">        perror(<span class="string">"listen"</span>);</div><div class="line">         <span class="built_in">exit</span>(1);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    ///客户端套接字</div><div class="line">   </div><div class="line">   length = sizeof(client_addr);</div><div class="line"></div><div class="line">     ///成功返回非负描述字，出错返回-1</div><div class="line">	//<span class="keyword">while</span>(1)</div><div class="line">	//&#123;</div><div class="line">    conn = accept(server_sockfd, (struct sockaddr*)&amp;client_addr, &amp;length);</div><div class="line">    <span class="keyword">if</span>(conn&lt;0)</div><div class="line">     &#123;</div><div class="line">        perror(<span class="string">"connect"</span>);</div><div class="line">         <span class="built_in">exit</span>(1);</div><div class="line">     &#125;</div><div class="line">	fork_id=fork();</div><div class="line">	<span class="keyword">if</span>(fork_id==0)</div><div class="line">	&#123;</div><div class="line">   <span class="keyword">while</span>(1)</div><div class="line">     &#123;</div><div class="line">        memset(buffer,0,sizeof(buffer));</div><div class="line">       len = recv(conn, buffer, sizeof(buffer),0);</div><div class="line">       <span class="keyword">if</span>(strcmp(buffer,<span class="string">"exit\n"</span>)==0)</div><div class="line">           <span class="built_in">break</span>;</div><div class="line">       fputs(buffer, stdout);</div><div class="line">        send(conn, buffer, len, 0);</div><div class="line">    &#125;</div><div class="line">    close(conn);</div><div class="line">    close(server_sockfd);</div><div class="line">	<span class="built_in">return</span>(0);//新程序去掉了这一行</div><div class="line">   //<span class="built_in">exit</span>(0);</div><div class="line">&#125;</div><div class="line">/*<span class="keyword">else</span></div><div class="line">&#123;</div><div class="line"></div><div class="line">&#125;</div><div class="line">&#125;*/</div><div class="line"> &#125;</div></pre></td></tr></table></figure></p>
<p>原程序是一个服务器只能挂载一个客户端。 The original program is a server which can only mount one client.<br>程序修改了下，使一个服务器可以挂载两个客户端（可以构建聊天系统）。 After modifing program,it can mount two clients(which can create a chat system).<br>要先连接服务器，再连接客户端。 Connect the server first,then connect the client.</p>
<p>rm server 删除server文件 delete server file<br>两端ps -a看一下是否退出。  use”ps -a” to see if the system exits.</p>
<h3 id="挂载驱动-Mount-the-drive"><a href="#挂载驱动-Mount-the-drive" class="headerlink" title="挂载驱动    Mount the drive"></a>挂载驱动    Mount the drive</h3><p>在开发板上winSCP：<br>mount -t nfs -o nolock 192.168.1.12:/arm2410cl /host<br>cd host<br>cd exp<br>cd basic<br>cd pwm_motor<br>lsmod pwm_ad.o<br>cd pwm_AD<br>insmod pwm_ad.o<br>//rmmod pwm_ad.o 删除<br>cd pwm_test<br>./test_dcm_main</p>
<p>虚拟机上VM：<br>cd pwm_motor<br>cd pwm_test<br>make clean<br>make<br>cd ..<br>cd pwm_test</p>
<h2 id="附录-客户端和服务器程序-Appendix-Client-c-amp-Server-c"><a href="#附录-客户端和服务器程序-Appendix-Client-c-amp-Server-c" class="headerlink" title="附录    客户端和服务器程序    Appendix  Client.c &amp; Server.c"></a>附录    客户端和服务器程序    Appendix  Client.c &amp; Server.c</h2><h3 id="server-c"><a href="#server-c" class="headerlink" title="server.c"></a>server.c</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include &lt;sys/types.h&gt;</span></div><div class="line"> <span class="comment">#include &lt;sys/socket.h&gt;</span></div><div class="line"> <span class="comment">#include &lt;stdio.h&gt;</span></div><div class="line"><span class="comment">#include &lt;netinet/in.h&gt;</span></div><div class="line"> <span class="comment">#include &lt;arpa/inet.h&gt;</span></div><div class="line"><span class="comment">#include &lt;unistd.h&gt;</span></div><div class="line"><span class="comment">#include &lt;string.h&gt;</span></div><div class="line"> <span class="comment">#include &lt;stdlib.h&gt;</span></div><div class="line"> <span class="comment">#include &lt;fcntl.h&gt;</span></div><div class="line"><span class="comment">#include &lt;sys/shm.h&gt;</span></div><div class="line"></div><div class="line"> <span class="comment">#define MYPORT  8887</span></div><div class="line"> <span class="comment">#define QUEUE   20</span></div><div class="line"> <span class="comment">#define BUFFER_SIZE 1024</span></div><div class="line"></div><div class="line">int <span class="function"><span class="title">main</span></span>()</div><div class="line">&#123;</div><div class="line">     char buffer[BUFFER_SIZE];</div><div class="line">    struct sockaddr_in client_addr;</div><div class="line">    socklen_t length;</div><div class="line">	   int conn;</div><div class="line">	  int len;</div><div class="line">///定义sockfd</div><div class="line">   int server_sockfd = socket(AF_INET,SOCK_STREAM, 0);</div><div class="line"> </div><div class="line">   ///定义sockaddr_in</div><div class="line">   struct sockaddr_in server_sockaddr;</div><div class="line">   server_sockaddr.sin_family = AF_INET;</div><div class="line">    server_sockaddr.sin_port = htons(MYPORT);</div><div class="line">    server_sockaddr.sin_addr.s_addr = htonl(INADDR_ANY);</div><div class="line"></div><div class="line">    ///<span class="built_in">bind</span>，成功返回0，出错返回-1</div><div class="line">   <span class="keyword">if</span>(<span class="built_in">bind</span>(server_sockfd,(struct sockaddr *)&amp;server_sockaddr,sizeof(server_sockaddr))==-1)</div><div class="line">    &#123;</div><div class="line">        perror(<span class="string">"bind"</span>);</div><div class="line">        <span class="built_in">exit</span>(1);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    ///listen，成功返回0，出错返回-1</div><div class="line">    <span class="keyword">if</span>(listen(server_sockfd,QUEUE) == -1)</div><div class="line">    &#123;</div><div class="line">        perror(<span class="string">"listen"</span>);</div><div class="line">         <span class="built_in">exit</span>(1);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    ///客户端套接字</div><div class="line">   </div><div class="line">   length = sizeof(client_addr);</div><div class="line"></div><div class="line">     ///成功返回非负描述字，出错返回-1</div><div class="line">    conn = accept(server_sockfd, (struct sockaddr*)&amp;client_addr, &amp;length);</div><div class="line">    <span class="keyword">if</span>(conn&lt;0)</div><div class="line">     &#123;</div><div class="line">        perror(<span class="string">"connect"</span>);</div><div class="line">         <span class="built_in">exit</span>(1);</div><div class="line">     &#125;</div><div class="line"></div><div class="line">   <span class="keyword">while</span>(1)</div><div class="line">     &#123;</div><div class="line">        memset(buffer,0,sizeof(buffer));</div><div class="line">       len = recv(conn, buffer, sizeof(buffer),0);</div><div class="line">       <span class="keyword">if</span>(strcmp(buffer,<span class="string">"exit\n"</span>)==0)</div><div class="line">           <span class="built_in">break</span>;</div><div class="line">       fputs(buffer, stdout);</div><div class="line">        send(conn, buffer, len, 0);</div><div class="line">    &#125;</div><div class="line">    close(conn);</div><div class="line">    close(server_sockfd);</div><div class="line">   <span class="built_in">return</span> 0;</div><div class="line"> &#125;</div></pre></td></tr></table></figure>
<h3 id="client-c"><a href="#client-c" class="headerlink" title="client.c"></a>client.c</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div></pre></td><td class="code"><pre><div class="line"> <span class="comment">#include &lt;sys/types.h&gt;</span></div><div class="line"> <span class="comment">#include &lt;sys/socket.h&gt;</span></div><div class="line"> <span class="comment">#include &lt;stdio.h&gt;</span></div><div class="line"> <span class="comment">#include &lt;netinet/in.h&gt;</span></div><div class="line"> <span class="comment">#include &lt;arpa/inet.h&gt;</span></div><div class="line"> <span class="comment">#include &lt;unistd.h&gt;</span></div><div class="line"> <span class="comment">#include &lt;string.h&gt;</span></div><div class="line"><span class="comment">#include &lt;stdlib.h&gt;</span></div><div class="line"><span class="comment">#include &lt;fcntl.h&gt;</span></div><div class="line"><span class="comment">#include &lt;sys/shm.h&gt;</span></div><div class="line"></div><div class="line"><span class="comment">#define MYPORT  8887</span></div><div class="line"><span class="comment">#define BUFFER_SIZE 1024</span></div><div class="line"></div><div class="line">int <span class="function"><span class="title">main</span></span>()</div><div class="line">&#123;</div><div class="line">    ///定义sockfd</div><div class="line">   int sock_cli = socket(AF_INET,SOCK_STREAM, 0);</div><div class="line"></div><div class="line">   ///定义sockaddr_in</div><div class="line">    struct sockaddr_in servaddr;</div><div class="line">    memset(&amp;servaddr, 0, sizeof(servaddr));</div><div class="line">    servaddr.sin_family = AF_INET;</div><div class="line">    servaddr.sin_port = htons(MYPORT);  ///服务器端口</div><div class="line">    servaddr.sin_addr.s_addr = inet_addr(<span class="string">"192.168.1.12"</span>);  ///服务器ip</div><div class="line"></div><div class="line">    ///连接服务器，成功返回0，错误返回-1</div><div class="line">    <span class="keyword">if</span> (connect(sock_cli, (struct sockaddr *)&amp;servaddr, sizeof(servaddr)) &lt; 0)</div><div class="line">    &#123;</div><div class="line">        perror(<span class="string">"connect"</span>);</div><div class="line">        <span class="built_in">exit</span>(1);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    char sendbuf[BUFFER_SIZE];</div><div class="line">    char recvbuf[BUFFER_SIZE];</div><div class="line">    <span class="keyword">while</span> (fgets(sendbuf, sizeof(sendbuf), stdin) != NULL)</div><div class="line">    &#123;</div><div class="line">        send(sock_cli, sendbuf, strlen(sendbuf),0); ///发送</div><div class="line">        <span class="keyword">if</span>(strcmp(sendbuf,<span class="string">"exit\n"</span>)==0)</div><div class="line">          <span class="built_in">break</span>;</div><div class="line">        recv(sock_cli, recvbuf, sizeof(recvbuf),0); ///接收</div><div class="line">       fputs(recvbuf, stdout);</div><div class="line"></div><div class="line">       memset(sendbuf, 0, sizeof(sendbuf));</div><div class="line">       memset(recvbuf, 0, sizeof(recvbuf));</div><div class="line">  &#125;</div><div class="line"></div><div class="line">   close(sock_cli);</div><div class="line">    <span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><span id="busuanzi_container_page_pv"><br>本文已被阅读 <span id="busuanzi_value_page_pv"></span> 次。感谢您的点击！<br>The article has been viewed <span id="busuanzi_value_page_pv"></span> times.Thank you for your visit!<br></span></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[将hexo+github博客同步托管至coding]]></title>
      <url>http://hubojing.github.io/2016/04/06/%E5%B0%86hexo-github%E5%8D%9A%E5%AE%A2%E5%90%8C%E6%AD%A5%E6%89%98%E7%AE%A1%E8%87%B3coding/</url>
      <content type="html"><![CDATA[<p>由于百度蜘蛛把github屏蔽了，导致百度搜不到博客文章，let me feel a little unhappy，为了扩大网站收录率，我将hexo-github博客同步托管到国内coding上。<br>胡博靖的个人博客：<a href="http://hubojing.coding.me" target="_blank" rel="external">http://hubojing.coding.me</a><br>胡博靖的个人博客：<a href="http://hubojing.coding.me/hubojing" target="_blank" rel="external">http://hubojing.coding.me/hubojing</a><br>胡博靖的个人博客：<a href="http://hubojing.github.io">http://hubojing.github.io</a><br>Both right!<br><strong>外网用github，内网用coding。</strong><br><a id="more"></a></p>
<h2 id="coding创建新项目"><a href="#coding创建新项目" class="headerlink" title="coding创建新项目"></a>coding创建新项目</h2><p><img src="http://7xrn7f.com1.z0.glb.clouddn.com/16-4-6/98344138.jpg" alt="创建页面"><br>项目名称最好是和你的用户名相同，这样直接访问hubojing.coding.me即可，否则需要访问hubojing.coding.me/set-name。</p>
<p><img src="http://7xrn7f.com1.z0.glb.clouddn.com/16-4-6/74537725.jpg" alt="ssh获取"><br>复制后写入repo中。具体看下一步。</p>
<h2 id="config文件配置"><a href="#config文件配置" class="headerlink" title="config文件配置"></a>config文件配置</h2><p>hexo根目录文件_config.yml修改配置如下：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">deploy:</div><div class="line">  <span class="built_in">type</span>: git</div><div class="line">  repo: </div><div class="line">        coding: git@github.com:hubojing/hubojing.github.io.git</div><div class="line">        github: git@git.coding.net:hubojing/hubojing.git</div></pre></td></tr></table></figure></p>
<h2 id="SSH设置"><a href="#SSH设置" class="headerlink" title="SSH设置"></a>SSH设置</h2><p>这里SSH设置和github类似。我直接用的部署github时生成的SSH。<br><img src="http://7xrn7f.com1.z0.glb.clouddn.com/16-4-6/370752.jpg" alt="coding中ssh设置"><br>打开id_rsa.pub文件，复制全部内容，填写到SSH公钥一栏中，名称自定。完成后点击“添加”即可。<br><img src="http://7xrn7f.com1.z0.glb.clouddn.com/16-4-6/56664564.jpg" alt="hexo根目录下"></p>
<p>添加后，在git bash命令输入(我是在hexo根目录下bash here)：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ssh -T git@git.coding.net</div></pre></td></tr></table></figure></p>
<p>它会弹出一个警告，是否允许操作，输入yes就可以。<br>接着会询问你设置的密码，如果之前部署github时设置了，就输入密码，输入时频幕上是看不到任何反应的，但当你正确输入并回车后，它会显示：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Coding.net Tips : [Hello ! You<span class="string">'ve conected to Coding.net by SSH successfully! ]</span></div></pre></td></tr></table></figure></p>
<p>这表示你的SSH设置成功了！</p>
<h2 id="开启Pages服务"><a href="#开启Pages服务" class="headerlink" title="开启Pages服务"></a>开启Pages服务</h2><p><strong>最后一步了！</strong><br>在hexo根目录下，<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">cd</span> <span class="built_in">source</span></div><div class="line">touch Staticfile  <span class="comment">#名字必须是Staticfile</span></div></pre></td></tr></table></figure></p>
<p>coding.net需要此文件来作为以静态文件部署的标志，就是说看到Staticfile就知道按照静态文件来发布。</p>
<p><img src="http://7xrn7f.com1.z0.glb.clouddn.com/16-4-6/93624849.jpg" alt="Pages服务"><br><strong>注意：Pages服务分支填master！因为之前配置的分支是master。否则你将看到404 Not Found！</strong>（我不会告诉你我就是这样试了好几遍才找到原因……）</p>
<hr>
<p><strong>OK!All have done!Congratulations!</strong><br>现在快去看看吧！<a href="http://hubojing.coding.me" target="_blank" rel="external">胡博靖的技术博客</a><br>欢迎在github上关注我：<a href="https://github.com/hubojing" target="_blank" rel="external">hubojing</a></p>
<h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p><a href="http://www.jianshu.com/p/7ad9d3cd4d6e" target="_blank" rel="external">hexo干货系列（四）</a><br><a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">hexo官网文档规范</a></p>
<hr>
<p><span id="busuanzi_container_page_pv"><br>本文已被阅读 <span id="busuanzi_value_page_pv"></span> 次。感谢您的点击！<br></span></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[PPT动画制作之自定义动画]]></title>
      <url>http://hubojing.github.io/2016/03/22/PPT%E5%8A%A8%E7%94%BB%E5%88%B6%E4%BD%9C%E4%B9%8B%E8%87%AA%E5%AE%9A%E4%B9%89%E5%8A%A8%E7%94%BB/</url>
      <content type="html"><![CDATA[<h1 id="3-23更新"><a href="#3-23更新" class="headerlink" title="3.23更新"></a>3.23更新</h1><p>昨天写完总觉得最终效果差点什么，后来发现是文字涌入时缺少了旋转效果。<br>现修改完整。<br>附上最新GIF图：（可看出差异）<br><img src="http://i4.tietuku.cn/63240837be6edf98.gif" alt="修改后"><br><a id="more"></a></p>
<hr>
<p>话不多说，先看效果：<br><img src="http://i13.tietuku.cn/b83ea174d690471a.gif" alt="闪烁背景和文字涌入特效"></p>
<p>该动画分为两部分：<strong>闪烁背景+文字涌入特效</strong></p>
<h2 id="闪烁背景"><a href="#闪烁背景" class="headerlink" title="闪烁背景"></a>闪烁背景</h2><p><strong> 步骤：</strong></p>
<h3 id="1-改个色"><a href="#1-改个色" class="headerlink" title="1.改个色"></a>1.改个色</h3><p>（背景色）</p>
<h3 id="2-添个形"><a href="#2-添个形" class="headerlink" title="2.添个形"></a>2.添个形</h3><p>（用基本形状添加）</p>
<h3 id="3-改设置"><a href="#3-改设置" class="headerlink" title="3.改设置"></a>3.改设置</h3><p>（形状外框透明、选择颜色）</p>
<h3 id="4-复个制"><a href="#4-复个制" class="headerlink" title="4.复个制"></a>4.复个制</h3><p>（多次复制，铺满画布）</p>
<h3 id="5-改大小"><a href="#5-改大小" class="headerlink" title="5.改大小"></a>5.改大小</h3><p>（不能每个形状一样大，那样闪烁不自然）</p>
<h3 id="6-改透度"><a href="#6-改透度" class="headerlink" title="6.改透度"></a>6.改透度</h3><p>（使闪烁更自然）</p>
<h3 id="7-添动画"><a href="#7-添动画" class="headerlink" title="7.添动画"></a>7.添动画</h3><p>（全选统一添加“渐变”动作）</p>
<h3 id="8-调时间"><a href="#8-调时间" class="headerlink" title="8.调时间"></a>8.调时间</h3><p>（显示高级进程表，调整时长，不要都从最开始出现；从“之前”开始）</p>
<p><strong>完成。</strong></p>
<hr>
<h2 id="文字涌入特效"><a href="#文字涌入特效" class="headerlink" title="文字涌入特效"></a>文字涌入特效</h2><p><strong>步骤：</strong></p>
<h3 id="1-抠个字"><a href="#1-抠个字" class="headerlink" title="1.抠个字"></a>1.抠个字</h3><p>（用PS写几个需要的文字，依次用魔棒选中每个文字，同时复制粘贴到另一图层，然后用<strong>裁剪</strong>工具剪到合适大小，另存）</p>
<h3 id="2-插个图"><a href="#2-插个图" class="headerlink" title="2.插个图"></a>2.插个图</h3><h3 id="3-复个制"><a href="#3-复个制" class="headerlink" title="3.复个制"></a>3.复个制</h3><p>（3-4次）</p>
<h3 id="4-围一圈"><a href="#4-围一圈" class="headerlink" title="4.围一圈"></a>4.围一圈</h3><h3 id="5-调大小"><a href="#5-调大小" class="headerlink" title="5.调大小"></a>5.调大小</h3><h3 id="6-添动画"><a href="#6-添动画" class="headerlink" title="6.添动画"></a>6.添动画</h3><p>（外围一圈加退出中的“缩放”，缩小到屏幕中心。中间加“渐变式缩放”，下面文字“飞入”和强调里的“陀螺旋”）</p>
<h3 id="7-调时间"><a href="#7-调时间" class="headerlink" title="7.调时间"></a>7.调时间</h3><p>（时间控制好，先缩放，在渐变式缩放，最后飞入）</p>
<p><strong>完工。</strong></p>
<hr>
<p><span id="busuanzi_container_page_pv"><br>本文已被阅读 <span id="busuanzi_value_page_pv"></span> 次。感谢您的点击！<br></span></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[显示技术蹭课笔记 | Display Techique Learning Note]]></title>
      <url>http://hubojing.github.io/2016/03/17/%E6%98%BE%E7%A4%BA%E6%8A%80%E6%9C%AF%E8%B9%AD%E8%AF%BE%E7%AC%94%E8%AE%B0/</url>
      <content type="html"><![CDATA[<p><div align="left"><br><img src="http://img10.360buyimg.com/popWaterMark/g13/M02/09/0C/rBEhUlKdmzIIAAAAAAA7TyA5YywAAGS_wDaFdAAADtn918.jpg" width="300" height="180" alt="配图" style="float:right;"></div></p>
<p><strong>蹭课，科普为主。顺便复习一些基础电路知识。</strong><br><strong>I am not a student of this class but want to listen to the lecture for popularization of science to myself.By the way reviewing some of the basic circuit knowledge.</strong><br>给这篇文章写英译好辛苦……<br>It is hard to write English translation for this article.<br><strong>肖大大图书镇楼！</strong><br><strong>Uncle Xiao’s book is superior!</strong></p>
<p> <br><a id="more"></a> </p>
<h1 id="2016-5-20-更新-Update"><a href="#2016-5-20-更新-Update" class="headerlink" title="2016.5.20 更新 Update"></a>2016.5.20 更新 Update</h1><h2 id="显示技术实验部分-Experimental-part"><a href="#显示技术实验部分-Experimental-part" class="headerlink" title="显示技术实验部分 Experimental part"></a>显示技术实验部分 Experimental part</h2><p>学会了怎么把电路图和实物电路联系起来。学会了就好简单……果然授人以鱼不如授人以渔！<br>Learnt how to link circuit diagram to the phhysical diagram.It’s easy enough.Give a man a fish and you feed him for a day.Teach him how to fish and you feed him for a lifetime.<br>但不敢去测量上万伏的高压……为自身的局限性感到难过。<br>But I dare not to measure the high pressure of tens of thousands of volts.I feel terrible for my own limitation.</p>
<h2 id="几个名词-Several-noums"><a href="#几个名词-Several-noums" class="headerlink" title="几个名词 Several noums"></a>几个名词 Several noums</h2><h3 id="声表面波滤波器-Surface-acoustic-wave-filter"><a href="#声表面波滤波器-Surface-acoustic-wave-filter" class="headerlink" title="声表面波滤波器 Surface acoustic wave filter"></a>声表面波滤波器 Surface acoustic wave filter</h3><p>声表面波滤波器(SAWF，surface acoustic wave filter)是利用石英、铌酸锂、钛酸钡晶体具有压电效应的性质做成的。所谓压电效应，即是当晶体受到机械作用时，将产生与压力成正比的电场的现象。具有压电效应的晶体，在受到电信号的作用时，也会产生弹性形变而发出机械波（声波），即可把电信号转为声信号。由于这种声波只在晶体表面传播，故称为声表面波。<br>SAWF uses the piezoelectric effect property of quartz,lithium niobate,barium titanate.As for piezoelectric effect,when the crystal is mechanical functioned,it will produce the electric field which is directly proportional to the pressure.Crystal which has the piezoelectric effect,when the electrical signal is added,will generate a elastic deformation and send a mechanical wave(sonic wave),so it converts electrical signal to acoustic signal.It is called surface acoustic wave for this wave only transmit on the crystal surface.</p>
<h3 id="行可变电容-Line-variable-capacitor"><a href="#行可变电容-Line-variable-capacitor" class="headerlink" title="行可变电容 Line variable capacitor"></a>行可变电容 Line variable capacitor</h3><p><img src="http://7xray0.com1.z0.glb.clouddn.com/16-5-20/33612917.jpg" width="600" height="400" alt="行可变电容"></p>
<h3 id="行可变电感-Row-variable-inductor"><a href="#行可变电感-Row-variable-inductor" class="headerlink" title="行可变电感 Row variable inductor"></a>行可变电感 Row variable inductor</h3><p><img src="http://www.liheng-dg.cn/uploads/allimg/140221/1-14022115052H18.png" width="600" height="400" alt="行可变电感"></p>
<h3 id="中周-Medium-cycle-transformer"><a href="#中周-Medium-cycle-transformer" class="headerlink" title="中周 Medium cycle transformer"></a>中周 Medium cycle transformer</h3><p>电视中周：电视机里的中周标准称呼是中频变压器。<br>The standard name is medium cycle transformer.<br><img src="http://img.qy6.com/new5/szvena/1313633487.jpg" width="600" height="400" alt="中周"></p>
<p>电路图上，三极管外带虚线的圆圈是指带散热的三极管，同时接地表屏蔽。<br>On the circuit diagram,the dotted line with the circle triode refers to the triode with heat pipe,which is at earth potential to shield.</p>
<h2 id="实验现场"><a href="#实验现场" class="headerlink" title="实验现场"></a>实验现场</h2><p><img src="http://7xray0.com1.z0.glb.clouddn.com/16-5-20/58196995.jpg" width="400" height="250" alt="电路图"> <img src="http://7xray0.com1.z0.glb.clouddn.com/16-5-20/69333137.jpg" width="400" height="250" alt="故障示教板"> <img src="http://7xray0.com1.z0.glb.clouddn.com/16-5-20/29028249.jpg" width="400" height="250" alt="实验"> （不配四张图，强迫症不要打我哟~）</p>
<h1 id="2016-5-17-更新-Update"><a href="#2016-5-17-更新-Update" class="headerlink" title="2016.5.17 更新 Update"></a>2016.5.17 更新 Update</h1><p>大部分资料来自维基百科。<br>Most of the information comes from Wikipedia.</p>
<h1 id="平板显示器-Flat-panel-display"><a href="#平板显示器-Flat-panel-display" class="headerlink" title="平板显示器 Flat panel display"></a>平板显示器 Flat panel display</h1><h2 id="简介-Brief-introduction"><a href="#简介-Brief-introduction" class="headerlink" title="简介 Brief introduction"></a>简介 Brief introduction</h2><p>平板屏幕包含多种科技，使显示器（video display）比传统电视机（traditional television）或显示器（通常由阴极射线管制成）更加轻薄，厚度通常小于4英寸（100 mm）。<br>Flat panel display includes many technologies,which makes video display lighter than traditional television or display(usually made of cathode ray tube),and thickness is usually less than 4 inches.</p>
<h2 id="种类-Type"><a href="#种类-Type" class="headerlink" title="种类 Type"></a>种类 Type</h2><p>DLP (数位光处理) Digital light processing<br>等离子显示器 Plasma panel display<br>液晶显示器（LCDs） Liquid crystal display<br>薄膜晶体管液晶显示器（TFT-LCDs） Thin film transistor liquid crystal display<br>有机发光二极管显示器（OLEDs） Organic light emitting diode display<br>发光二极管显示器（LED） Light-emitting diode display<br>电致发光显示器（ELDs） Electroluminescent display<br>表面传导电子发射显示器（SEDs） Surface conduction electron emission display<br>场发射显示器（FEDs）（ 纳米-发射显示器（NEDs）） Field emission display</p>
<p>名字多么洋气~<br>The names has foreign flavour~</p>
<p>这张图有点意思~<br>This picture is kind of interesting~<br><img src="http://7xray0.com1.z0.glb.clouddn.com/16-5-17/60641952.jpg" alt="显示器"></p>
<h1 id="CRT显示器-CRT-display"><a href="#CRT显示器-CRT-display" class="headerlink" title="CRT显示器 CRT display"></a>CRT显示器 CRT display</h1><h2 id="简介-Brief-introduction-1"><a href="#简介-Brief-introduction-1" class="headerlink" title="简介 Brief introduction"></a>简介 Brief introduction</h2><p>阴极射线管（Cathode ray tube，缩写：CRT，又称“显像管”、布劳恩管）是一种用于显示系统的物理仪器，曾广泛应用于示波器、电视机和显示器上。它是利用阴极电子枪发射电子，在阳极高压的作用下，射向萤光屏，使萤光粉发光，同时电子束在偏转磁场的作用下，作上下左右的移动来达到扫描的目的。早期的阴极射线管仅能显示光线的强弱，展现黑白画面。而彩色阴极射线管具有红、绿色和蓝色三支电子枪，三支电子枪同时发射电子打在屏幕玻璃上磷化物上来显示颜色。<br>由于它笨重、耗电且较占空间，2000年代起几乎被轻巧、省电且省空间的液晶显示器取代。阴极射线管的市场剩下极重视色彩表现及低温环境下等特殊用途。<br>Cathode ray tube,is a physical instrument which uses to display system.It used to be applied to oscilloscope,TV and display.It uses the cathode electron gun for electron emission.Under the action of anode high voltage,it emits to the screen,which makes powder luminesce.At the same time, the electron beam moves up and down to reach the purpose of scanning by the action of the deflection magnetic field.Early cathode ray tube can only show the intensity of light,and to show black and white picture.Color cathode ray tube have red, green and blue electron guns, and this three electron guns emit electrons to hit the glass screen’s phosphides to show color.<br>Because of its bulky, power consumption and space waste,light, power saving and space saving LCD monitor was used in the 2000s instead.A cathode ray tube market left pole attached color performance and low temperature environment and other special purposes.</p>
<p><strong>CRT在高精尖领域仍扮演着重要角色。</strong><br><strong>CRT still plays an important role in the high-tech field.</strong></p>
<h1 id="液晶显示器-liquid-crystal-display"><a href="#液晶显示器-liquid-crystal-display" class="headerlink" title="液晶显示器 liquid-crystal display"></a>液晶显示器 liquid-crystal display</h1><h2 id="简介-Brief-introduction-2"><a href="#简介-Brief-introduction-2" class="headerlink" title="简介 Brief introduction"></a>简介 Brief introduction</h2><p>液晶显示器（英语：liquid-crystal display，缩写：LCD）为平面薄型的显示设备，由一定数量的彩色或黑白像素组成，放置于光源或者反射面前方。液晶显示器功耗低，因此倍受工程师青睐，适用于使用电池的电子设备。<br>Liquid-crystal display is the flat panel display device,which consists of a number of color or black and white pixels,and place in the light source or in front of the reflecting surface.</p>
<h2 id="显示原理-Revelation-principle"><a href="#显示原理-Revelation-principle" class="headerlink" title="显示原理 Revelation principle"></a>显示原理 Revelation principle</h2><p>在不加电压下，光线会沿着液晶分子的间隙前进而转折90度，所以光可通过。但加入电压后，光顺着液晶分子的间隙直线前进，因此光被滤光板所阻隔。（让我想到偏振……）<br>液晶是具有流动特性的物质，所以只需外加很微小的力量即可使液晶分子运动，以最常见普遍的向列型液晶为例，液晶分子可轻易的借着电场作用使得液晶分子转向，由于液晶的光轴与其分子轴相当一致，故可借此产生光学效果，而当加于液晶的电场移除消失时，液晶将借着其本身的弹性及黏性，液晶分子将十分迅速的恢复原来未加电场前的状态。<br>Without voltage, the light will move along the gap between the liquid crystal molecules and turn 90 degrees, so the light can pass.But after the voltage is added,light goes along the liquid crystal molecules of the gap straight forward,so the light is blocked by the filter board. (Let me think of polarization.)</p>
<h1 id="等离子显示器-Plasma-Display-Panel"><a href="#等离子显示器-Plasma-Display-Panel" class="headerlink" title="等离子显示器 Plasma Display Panel"></a>等离子显示器 Plasma Display Panel</h1><h2 id="简介-Brief-introduction-3"><a href="#简介-Brief-introduction-3" class="headerlink" title="简介 Brief introduction"></a>简介 Brief introduction</h2><p>等离子显示器（Plasma Display Panel）又称为电浆显示屏，是一种平面显示屏幕，光线由两块玻璃之间的离子，射向磷质而发出。与液晶显示器不同，放出的气体并无水银成分，而是使用惰性气体氖及氙混合而成，这种气体是无害气体。<br>等离子显示器甚为光亮（1000 lx或以上），可显示更多种颜色，也可制造出较大面积的显示屏，最大对角可达381厘米（150吋）。等离子显示屏的对比度亦高，可制造出全黑效果，对观看电影尤其适合。显示屏厚度只有6厘米，连同其他电路板，厚度亦只有10厘米。<br>Plasma display panel is a flat display screen.Light is emitted to phosphorous by the ion between the two classes.Unlike liquid crystal display,the gas released has no mercury,it mixed inert gas such as neon,xenon and so on,which are harmless.<br>The plasma display is very bright (1000 LX or above),and it can show more colors,it also can be made big screen,which the maximum diagonal up to 381 cm (150 inches).The contrast is high, and it can create a full black effect,especially suitable for watching movies.The thickness of screen is only 6 cm,combined with other circuit boards, the thickness is only 10 cm.</p>
<h2 id="原理-Principle"><a href="#原理-Principle" class="headerlink" title="原理 Principle"></a>原理 Principle</h2><p>等离子的发光原理是在真空玻璃管中注入惰性气体或水银蒸气，加电压之后，使气体产生等离子效应，放出紫外线，激发荧光粉而产生可见光，利用激发时间的长短来产生不同的亮度。等离子显示器中，每一个像素都是三个不同颜色（三原色）的等离子发光体所产生的。由于它是每个独立的发光体在同一时间一次点亮的，所以特别清晰鲜明。等离子显示器的使用寿命约5~6万个小时。随着使用的时间的增加，其亮度会衰退。<br>The principle of plasma luminescence is to inject inert gas or mercury vapor into a vacuum glass tube.After the voltage is added, the gas is produced by the plasma effect, the ultraviolet ray is emitted, and the fluorescent powder is excited to generate visible light, and the excitation time is used to generate different brightness.In the plasma display, each pixel has three different colors (RGB) of the plasma generated by the luminous body.Since each individual light body is litted at the same time, so it is clear and bright.The service life of the plasma display is about 5~6 ten thousand hours. With the increase of the use of time, the brightness of the plasma display will decline.</p>
<p><strong>【区别】</strong>等离子显示器并不是液晶显示器。后者的显示器虽然也很轻薄，但是用的技术却是大不相同。液晶显示器通常会使用一到两个大型萤光灯或是LED当作其背光源，在背光源上面的液晶面板则是利用遮罩的原理让显示器显示出不同颜色。<br><strong>【Difference】</strong>Plasma display is not liquid crystal display.Although the latter is also very thin,the technology is different.Liquid crystal display usually use one or two large fluorescent lamp or LED as the backlight,above the backlight to the LCD panel using mask principle to show different colors.</p>
<h1 id="云电视-Cloud-TV"><a href="#云电视-Cloud-TV" class="headerlink" title="云电视 Cloud TV"></a>云电视 Cloud TV</h1><h2 id="简介-Brief-introduciton"><a href="#简介-Brief-introduciton" class="headerlink" title="简介 Brief introduciton"></a>简介 Brief introduciton</h2><p>云电视是应用云计算、云存储技术的电视产品，是云设备的一种。通俗地讲，就是用户不需要单独再为自家的电视配备所有互联网功能或内容，将电视连上网络，就可以随时从外界调取自己需要的资源或信息，比如说，可以在云电视里安装使用各种即时通讯软件，在看电视的同时，进行社交、办公等等。<br>Cloud TV,which is the application of cloud computing and cloud storage technology,is a kind of cloud devices.Generally speaking,users do not need a separate device for their own television equipped with all Internet function or information.After the TV is connected to the network,you can get what you want at any times.For example, you can install and use a variety of instant messaging software, while watching TV at the same time, social, office and so on.</p>
<h1 id="3D显示器-3D-display"><a href="#3D显示器-3D-display" class="headerlink" title="3D显示器 3D display"></a>3D显示器 3D display</h1><h2 id="简介-Brief-introduciton-1"><a href="#简介-Brief-introduciton-1" class="headerlink" title="简介 Brief introduciton"></a>简介 Brief introduciton</h2><p>传统的3D电影在荧幕上有两组图像（来源于在拍摄时的互成角度的两台摄影机），观众必须戴上偏光镜才能消除重影（让一只眼只接受一组图像），形成视差（parallax），产生立体感。利用自动立体显示（AutoSterocopic）技术，即所谓的“真3D技术”，你就不用戴上眼镜来观看立体影像了。这种技术利用所谓的“视差栅栏”，使两只眼睛分别接受不同的图像，来形成立体效果。<br>平面显示器要形成立体感的影象，必须至少提供两组相位不同的图像。其中，快门式3D技术和不闪式3D技术是如今显示器中最常使用的两种。<br>The traditional 3D movie has two sets of images on the screen (come from two cameras that are placed in angle difference),so viewers have to put on a polarizing lens to eliminate the ghost(so that a eye only accept a set of images), and form a parallax to generate a sense of three-dimensional.The use of automatic three-dimensional display (AutoSterocopic) technology, that is, the so-called “true 3D technology”, you do not have to wear glasses to watch the stereo image.This technology uses the so-called “parallax barrier”, so that the two eyes receive different images to form a three-dimensional effect.</p>
<h1 id="OLED显示器-OLED-display"><a href="#OLED显示器-OLED-display" class="headerlink" title="OLED显示器 OLED display"></a>OLED显示器 OLED display</h1><h2 id="简介-Brief-introduction-4"><a href="#简介-Brief-introduction-4" class="headerlink" title="简介 Brief introduction"></a>简介 Brief introduction</h2><p>OLED<br>有机发光二极管又称为有机电激光显示（Organic Light-Emitting Diode，OLED）。OLED显示技术具有自发光的特性，采用非常薄的有机材料涂层和玻璃基板，当有电流通过时，这些有机材料就会发光，而且OLED显示屏幕可视角度大，并且能够节省电能。<br>对于有机电激发光器件，我们可按发光材料将其分为两种: 小分子OLED和高分子OLED（也可称为PLED）。它们的差异主要表现在器件的制备工艺不同：小分子器件主要采用真空热蒸发工艺，高分子器件则采用旋转涂覆或喷墨工艺。<br>有机电激发光二极管由于同时具备自发光，不需背光源、对比度高、厚度薄、视角广、反应速度快、可用于挠曲性面板、使用温度范围广、构造及制程较简单等优异之特性，被认为是下一代的平面显示器新兴应用技术。<br>Organic Light-Emitting Diode has the characteristic of self luminescence,which uses a thin organic material coating and glass substrate.When the current pass,these material will light.Also,OLED display screen viewing angle is big, and it can save electric energy.</p>
<h2 id="发光原理-Principle-of-luminescence"><a href="#发光原理-Principle-of-luminescence" class="headerlink" title="发光原理 Principle of luminescence"></a>发光原理 Principle of luminescence</h2><p>OLED发光的颜色取决于有机发光层的材料，故厂商可由改变发光层的材料而得到所需之颜色。有源阵列有机发光显示屏具有内置的电子电路系统，因此每个像素都由一个对应的电路独立驱动。OLED具备有构造简单、自发光不需背光源、对比度高、厚度薄、视角广、反应速度快、可用于挠曲性面板、使用温度范围广等优点，技术提供了浏览照片和视频的最佳方式而且对相机的设计造成的限制较少。<br>The color of the OLED depends on the material of the organic light emitting layer, so the manufacturer can obtain the required color by changing the material of the light emitting layer.The active array organic light emitting display screen has a built-in electronic circuit system, so each pixel is driven by a corresponding circuit.The OLED has the advantages of simple structure, no need of back light source, high contrast, thin thickness, wide viewing angle, quick reaction speed, and can be used for the flexible panel and wide temperature range,and technology offers the best way to view photos and videos and to little limit to the design of the camera.</p>
<h1 id="户外大屏幕显示器-Outside-big-screen-display"><a href="#户外大屏幕显示器-Outside-big-screen-display" class="headerlink" title="户外大屏幕显示器 Outside big screen display"></a>户外大屏幕显示器 Outside big screen display</h1><p>这个范围就有点大啊……<br>This range is broad~<br>主要说来，CRT、LCD、DLP、LCOS、GLV用的较多。<br>Generally speaking,CRT、LCD、DLP、LCOS、GLV are used a lot.</p>
<p>2016.3.17更新 update</p>
<h2 id="记忆比较深的知识-Knowledge-deeply-remember"><a href="#记忆比较深的知识-Knowledge-deeply-remember" class="headerlink" title="记忆比较深的知识 Knowledge deeply remember"></a>记忆比较深的知识 Knowledge deeply remember</h2><p>1.白光透过棱镜分为紫、蓝、青、绿、黄、橙、红。波长依次减少。<br>White light through the prism is divided into purple, blue, green, green, yellow, orange, red.The wavelength is reduced in turn.</p>
<p>2.绝对黑体是指既不反射也不透射，完全吸收入射辐射的物体。（黑洞……）<br>The absolute black body is an object that absorbsthe incident radiation,neither reflected nor transmitted.(black hole~)</p>
<p>3.色温是表示光源光色的一种尺度。<strong>不是光源实际温度！只是一种光谱特性参量！</strong><br>Color is a representation of the actual temperature scale.<strong>Not real temperature!Just a Spectral characteristic parameter!</strong><br>例：电视屏幕是室温20℃（300K左右），但显像管显示的白颜色对应的是太阳光的那种白，那么色温是4874K！不要说温度有那么高……否则电视早就烧成灰了……<br>For example,the temperature of the TV screen is 20 ℃（about 200K）,but the white color is corresponding to the white sunlight,which color temperature is 4874K!Never to say it~if it is so hot,your TV is firing ash already.</p>
<p>4.人眼对绿色最敏感！从光谱光效率图看出……所以红绿灯用绿色，显眼啊。<br>Our eyes is sensitive to green!You can see it in spectral optical efficiency diagram.So this is why traffic light uses green color.</p>
<p>5.正好使人感到不闪烁的刷新频率称为临界闪烁频率。为45.8HZ。只要高于它，人眼就觉得不闪。<br>Make people feel the refresh rate does not flicker is called the critical flicker frequency,which is 45.8HZ.Only over it,we feel comfortable.<br>所谓市面上的不闪的电视，就是频率稍高一些的电视，如70HZ。因为部分人群的人眼敏感度较高，所以50HZ也许还是感觉到闪烁，这类人群需要不闪电视。但普通人并不需要。<br>The so-called “not flash television” in the market is a slightly higher frequency of television,70HZ,for instance.Because some people are more sensitive to it, they need “not flash TV”.But it isn’t needed in common.</p>
<p>6.没必要追求4K的分辨率指标。人眼分辨力有限，所谓分辨，是指人眼能看清的扫描的两行。（美国比中国的扫描行数还低来着……）人眼极限就只能看清大约1K左右（这样说来1080P最好咯），高于这个指标人眼就分不清两行了，所以该指标更高便显得意义不大。4K代表我们有能力做到这么清晰，但日常我们是否需要，则并不见得。所以，往往并不需要追求最高的指标，够用就好。（买电脑一个理）<br>It’s not necessary to persuit 4K resolution index for human eye resolution is limited.The resolution is the line we can see clearly.(The index in America is lower than that of China)Our eye resolution limit is to see about 1k(1080P maybe the best).If the index higher than this can not we distinguish the lines,so the higher index seems little meaning.4K means we have the ability to do it,but we don’t need it in daily life.Therefore,is not as high index as possible,but enough is alright(Buy a computer is the same way).</p>
<p>7.看电视最佳距离：电视频幕高度的4倍。（我回家特地量了一下距离……）<br>The best distance to watch TV is four times the height of the TV screen.(I measure the size at home specifically~)</p>
<p>8.CRT显像管上加了上万伏高压，所以开启和关闭电视时常有静电。（我小时候还特喜欢那种有点漂浮的感觉……）<br><strong>修电视技巧get</strong>：如果开机关机时仍能感觉到静电，那么说明显像管是好的！（来自我们修了三千台电视的super肖老师语录……哦……少碰静电，毕竟几万伏呢……小心白血病……）<br>CRT picture tube is added tens of thousands of volts,so you can feel the static electricity when open or close power supply.(I like the floating feel when I was a child~)<br><strong>KEY TO REPAIR TV</strong>If you can feel the static electricity when open or close power supply,it is obvious that the picture tube is well.(From our super Mr.Xiao’s quotations<del>well,do not touch the static electricity as little as possible.Pay attention to leukemia,it is tens of thousands of volts after all</del>)</p>
<p>9.彩色三要素：亮度、色调、色饱和度。色调与色饱和度合称为色度。<br>Three elements in color,brightness, tinge, color saturation.Tinge and color saturation are called as chromaticity.</p>
<p>10.三基色原理 The principle of three primary colors<br>（1）所有颜色可以由这三种基色按比例混合得到。（合成性）<br> (1)All colors can be made from the three primary colors mixed in proportion (synthetic).<br>（2）任意一种彩色可分解为三种基色。（分解性）<br> (2)Any color can be decomposed into three primary colors (decomposition).<br>（3）混合的亮度等于各基色亮度之和。（叠加性）<br> (3)The mixed brightness is equal to all primary colors.(addition).<br>（4）混合比例决定色调和色饱和度。（色度决定性）<br> (4)The mix proportions determine tinge and color saturation.(chromaticity determination)</p>
<p>11.三基色 Three primary colors<br>R、G、B.<br>记得小时候还学了个颜料的三原色……于是百度一下：红、黄、青<br>Always remember that there exists primary colors of pigment~so I search it.It is red,yellow and cyan.<br><img src="http://i13.tietuku.cn/bbdb0a9ed059f7db.png" alt="上图左侧为色光三原色，右侧为美术三原色"></p>
<p>12.一个公式（亮度方程） A fomula<br>Y=0.30R+0.59G+0.11B<br>例：1R+2G+2B=浅青(light cyan)<br>Why?<br>∵1R+1G+1B=白(white)<br>1G+1B=青(cyan)<br>白+青=浅青(white+cyan=light cyan)<br>这个算法莫名想笑……<br>This idea makes me inexplicably laugh~</p>
<p>13.互补色：加起来为白色的<strong>两种</strong>颜色。<br>Complementary colors,the <strong>two</strong>colors mixed up in white color. </p>
<p>14.15625！15625！15625！重要的数字说三遍！Important number should be repeated three times!<br>行扫描的频率……听到这个数字要很快的反应过来……就像3.1415926一样……<br>正程52us，逆程12us，全程64us，即行扫描周期。<br>我国现行广播电视标准规定：帧数为25HZ，一帧图像分625行传送。所以行扫描频率25X625=15625HZ……就是这样来的……<br>It is line scan frequency~everyone of us should reflect on the meaning as 3.1415926~<br>Positive trace is 52us,negative trace is 12us,the whole trace is 64us,and it is just the line scan cycle.<br>The existing provisions of broadcast standards in China,frames is 25HZ,and an image is divided into 625 transmission line.So,the line scan frequency is 25X625=15625HZ,that’s is.</p>
<p>15.对比度 Contrast<br>我之前对这个的定义确实不清楚的说……就连PS上的对比度也是怎么看着舒服怎么调……<br>对比度，通俗的讲，就是，实际的蓝天和白云的颜色，哦，是这么蓝和这么白，10000:100好了，反映到电视上，还是那么蓝和那么白！就100:1好了……让我想到比例尺。还是原来的配方，还是熟悉的味道！<br>I didn’t get it clear before,and when I used PS,the contrast is adjusted to the degree that a image how to make me comfortable.Contrast, popular speaking, that is, the actual blue sky and white clouds of color,the component of blue and white is 10000:100,for example,which reflect to TV is 100:1,just like a scale.The original formula and the similar taste!</p>
<p>16.黑白全电视信号特指视频信号。<br>Black and white television signal refers to the video signal.</p>
<p>17.基色信号-亮度信号=色差信号<br>Primary signal - luminance signal = color difference signal</p>
<p>18.绿色幅值小，易受干扰，一般传送红、蓝信号。<br>green has small  amplitude,and it is vulnerable to be interfered,it transfers red and blue signal in general.</p>
<p>19.<strong>白！黄！青！绿！紫！红！蓝！黑！</strong><br><strong>白！黄！青！绿！紫！红！蓝！黑！</strong><br><strong>白！黄！青！绿！紫！红！蓝！黑！</strong><br><strong>WHITE!YELLOW!CYAN!GREEN!PURPLE!RED!BLUE!BLACK!</strong><br>标准彩条测试信号。常识背背背！<br>It is the standard color test signal.We should recite it as common sense.</p>
<p>20.一个记住的电路 A curcuit to remember<br><img src="/images/3.jpg" alt="亮度调节电路和对比度调节电路"><br>放大电路……如此的熟悉……<br>So familiar with it.<br>Rw1滑动调节对比度，Rw2滑动调节亮度！<br>Rw1 to adjust contrast,and Rw2 to adjust brightness!<br>感谢无私的好友把她上学期的书借给了我！<br>Thanks my selfless friend for sending her books to me！</p>
<p>21.指标如果要做到最顶级首选CRT。为什么我们现在都用薄的液晶啊什么的，因为<strong>日常使用不需要很高的指标</strong>，并且方便使用。<br>If you want to achieve the top indicators,CRT is preferred.You may ask why we use today is liquid crystal,the reason is <strong>Top indicators are not needed in daily use</strong>,and it is convinient.</p>
<p>22.<img src="/images/4.jpg" alt="阻尼式行输出级典型电路"><br>铅笔写的是我的笔记，乱max……<br>The writing is my note,you can ignore it~<br>几个专有名词要知道：阻尼二极管、逆程电容、校正电容、行输出管（行管）、行输出变压器（高压包）、行推动变压器<br>Several professional noums,Damping diode, reverse pass capacitor, correction capacitor, line output tube (line tube), line output transformer (high voltage package), line drive transformer.<br>扩展：硅堆、桥堆<br>Extension: silicon stack, bridge</p>
<h2 id="段子或注意的地方-Something-fun-or-details-It-may-lost-its-fun-when-translated-into-English"><a href="#段子或注意的地方-Something-fun-or-details-It-may-lost-its-fun-when-translated-into-English" class="headerlink" title="段子或注意的地方 Something fun or details (It may lost its fun when translated into English)"></a>段子或注意的地方 Something fun or details (It may lost its fun when translated into English)</h2><p>1.“B光源（色温4874K）近似为中午太阳光的光谱。”类似说法都不够准确，但经典教材上往往都采取这样模糊的说法。</p>
<p>2.用点燃的报纸烘烤灯丝……是为了激发电子发射。有个问题是灯坏了还是什么的，总之就是不行→_→因为激发不了电子发射。（写此文时突然短路……）</p>
<p>3.有个单位叫熙提……它的缩写………………自行百度或查书吧。（保持优雅）</p>
<p>4.隔壁的王叔叔……</p>
<p>5.南京的声音优雅的车站播音员……强调音色的问题……</p>
<p>6.列宁……（原名弗拉基米尔·伊里奇·乌里扬诺夫）（我竟然还百度了一下……）</p>
<p>7.小日本……</p>
<p>偏题了……段子很多就不说了……注意的问题是重点！咳咳~</p>
<hr>
<p>回看本文…………简直就是帮他们要考试的勾了一遍重点（除了一些公式和计算……）我真是大写的可爱啊！啊。。。<br>I AM CUTE~<br>P.S.不吹不黑  上课就要像这样愉悦才是好的课堂  快乐学习不是梦~<br>Pleasant classroom atmosphere is a excellent class.Happy learning is not a dream.<br>真是一趟愉快的蹭课之旅~<br>It was a pleasant trip to the class.<br><strong>感谢老师 感谢校园 感谢这个和平的时代</strong><br><strong>thanks for the teacher,thanks for the campus,thanks for this peaceful time.</strong></p>
<hr>
<p><span id="busuanzi_container_page_pv"><br>本文已被阅读 <span id="busuanzi_value_page_pv"></span> 次。感谢您的点击！<br></span></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[java自学笔记]]></title>
      <url>http://hubojing.github.io/2016/03/14/java%E8%87%AA%E5%AD%A6%E7%AC%94%E8%AE%B0/</url>
      <content type="html"><![CDATA[<p><strong>现将以前分散的java自学笔记归总，方便查阅。</strong><br><a id="more"></a></p>
<h3 id="2016-3-26更新"><a href="#2016-3-26更新" class="headerlink" title="2016.3.26更新"></a>2016.3.26更新</h3><h2 id="快速打法与Scanner"><a href="#快速打法与Scanner" class="headerlink" title="快速打法与Scanner"></a>快速打法与Scanner</h2><blockquote>
<ul>
<li><strong>两个快速打法</strong></li>
</ul>
</blockquote>
<p>syso<br>alt+/<br>快速打出 System.out.println();</p>
<p>main<br>alt+/  回车<br>快速打出：<br>public static void main(String[] args) {</p>
<p>}</p>
<blockquote>
<ul>
<li><strong>使用Scanner工具类来获取用户输入信息</strong></li>
</ul>
</blockquote>
<p>Scanner类似于java.util包中，使用时需要导入此包<br>步骤：<br>1.导入java.util.Scanner<br>2.创建Scanner对象<br>3.接收并保存用户输入的值<br>package com;<br>import java.util.Scanner;</p>
<p>main函数里<br>Scanner input=new Scanner(System.in);//创建Scanner对象<br>System.out.println(“请输入信息：”);<br>int a=input.nextInt();//获取用户输入的信息并保存在变量中</p>
<p><strong>print和println区别：println输出信息后会换行，而print不会换行</strong></p>
<hr>
<h3 id="2016-3-15更新"><a href="#2016-3-15更新" class="headerlink" title="2016.3.15更新"></a>2016.3.15更新</h3><h2 id="java基础知识"><a href="#java基础知识" class="headerlink" title="java基础知识"></a>java基础知识</h2><blockquote>
<ul>
<li><strong>关键字</strong></li>
</ul>
</blockquote>
<p><img src="http://img.mukewang.com/53588ce900019bee05190178.jpg" alt="java常用关键字"></p>
<blockquote>
<ul>
<li><strong>优秀攻城师的习惯</strong></li>
</ul>
</blockquote>
<p>1、变量名由多单词组成时，第一个单词的首字母小写，其后单词的首字母大写，俗称骆驼式命名法（也称驼峰命名法），如 myAge<br>2、变量命名时，尽量简短且能清楚的表达变量的作用，做到见名知意。如：定义变量名<br>stuName 保存“学生姓名”信息</p>
<blockquote>
<ul>
<li><strong>java的数据结构</strong></li>
</ul>
</blockquote>
<p><img src="http://img.mukewang.com/535a6fc10001b8f604930247.jpg" alt="数据结构"></p>
<blockquote>
<ul>
<li><strong>常见的基本数据类型</strong></li>
</ul>
</blockquote>
<p><img src="http://img.mukewang.com/540d468d000167bd07000130.jpg" alt="数据类型"></p>
<blockquote>
<ul>
<li><strong>强制转换</strong></li>
</ul>
</blockquote>
<p><img src="http://img.mukewang.com/53688a9a0001f73404330109.jpg" alt="强制转换"><br>强制类型转换将 75.8 赋值给 int 型变量后，结果为 75，数值上并未进行四舍五入，而是直接将小数位截断。<br><strong>强制类型转换可能会造成数据的丢失。</strong></p>
<p>常量名一般使用大写字符。</p>
<blockquote>
<ul>
<li><strong>注释</strong></li>
</ul>
</blockquote>
<p>Java 中注释有三种类型：单行注释、多行注释、文档注释<br>单行：//<br>多行：/<em>
</em><br><em>
</em>/<br>文档：/<em>*
</em><br><em>
</em>/<br>我们可以通过 javadoc 命令从文档注释中提取内容，生成程序的 API 帮助文档。<br><img src="http://img.mukewang.com/53689f74000187be03800330.jpg" alt="javadoc"></p>
<p>使用文档注释时还可以使用 javadoc 标记，生成更详细的文档信息：<br>       @author 标明开发该类模块的作者<br>       @version 标明该类模块的版本<br>       @see 参考转向，也就是相关主题<br>       @param 对方法中某参数的说明<br>       @return 对方法返回值的说明<br>       @exception 对方法可能抛出的异常进行说明</p>
<blockquote>
<ul>
<li><strong>java常用的比较运算符</strong></li>
</ul>
</blockquote>
<p><img src="http://img.mukewang.com/536063f00001b7b904350145.jpg" alt="比较运算符"><br><strong>  &gt; 、 &lt; 、 &gt;= 、 &lt;= 只支持左右两边操作数是数值类型</strong><br><strong> == 、 != 两边的操作数既可以是数值类型，也可以是引用类型</strong></p>
<blockquote>
<ul>
<li><strong>运算符优先级</strong></li>
</ul>
</blockquote>
<p><img src="http://img.mukewang.com/5360ffb90001b4f002620224.jpg" alt="优先级"><br>级别为 1 的优先级最高，级别 11 的优先级最低。</p>
<blockquote>
<ul>
<li><strong>条件语句之 switch</strong></li>
</ul>
</blockquote>
<p>可以把功能相同的 case 语句合并起来，如<br><img src="http://img.mukewang.com/5364f6950001a57604280064.jpg" alt="case合并"></p>
<blockquote>
<ul>
<li><strong>循环语句之 for</strong></li>
</ul>
</blockquote>
<p>for 循环变量初始化和循环变量变化部分，可以是使用 “,” 同时初始化或改变多个循环</p>
<blockquote>
<ul>
<li><strong>变量的值</strong></li>
</ul>
</blockquote>
<p><img src="http://img.mukewang.com/536c8b620001eb1005560086.jpg" alt="for"></p>
<blockquote>
<ul>
<li><strong>循环跳转语句之 continue</strong></li>
</ul>
</blockquote>
<p>continue 的作用是跳过循环体中剩余的语句执行下一次循环。</p>
<hr>
<h3 id="2016-3-14更新"><a href="#2016-3-14更新" class="headerlink" title="2016.3.14更新"></a>2016.3.14更新</h3><h2 id="java初体验"><a href="#java初体验" class="headerlink" title="java初体验"></a>java初体验</h2><blockquote>
<ul>
<li><strong>环境变量配置</strong></li>
</ul>
</blockquote>
<p>1.jdk安装目录<br>2.jdk下bin安装目录<br>3.jdk下lib安装目录</p>
<blockquote>
<ul>
<li><strong>第一个java程序</strong></li>
</ul>
</blockquote>
<p>win8.1系统下<br>win+R，输入cmd。<br>dir查看磁盘文件<br>java HelloWorld.java<br>错误：java HelloWorld.class<br><strong>java命令后不能跟文件后缀</strong><br>java HelloWorld</p>
<p><img src="http://7xrn7f.com1.z0.glb.clouddn.com/16-3-12/55943714.jpg" alt="第一个java程序"></p>
<blockquote>
<ul>
<li><strong>使用Eclipse开发Java程序</strong></li>
</ul>
</blockquote>
<p>安装eclipse后，弹出<img src="http://7xrn7f.com1.z0.glb.clouddn.com/16-3-12/73609369.jpg" alt="错误"><br>这是因为eclipse与JDK的版本不一致。<br>（在cmd中输入java -version查看版本）</p>
<p><img src="http://7xrn7f.com1.z0.glb.clouddn.com/16-3-12/9491861.jpg" alt="两种IDE"><br>我选择的是下面这种。<br>步骤：<br>1.创建Java项目<br>2.创建程序包<br>3.编写Java源程序<br>4.运行Java程序</p>
<p><strong>使用myeclipse的步骤相同。</strong></p>
<hr>
<p><span id="busuanzi_container_page_pv"><br>本文已被阅读 <span id="busuanzi_value_page_pv"></span> 次。感谢您的点击！<br></span></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[靖靖的脑洞大开 | Jinger's Special Ideas]]></title>
      <url>http://hubojing.github.io/2016/03/12/%E9%9D%96%E9%9D%96%E7%9A%84%E8%84%91%E6%B4%9E%E5%A4%A7%E5%BC%80%EF%BC%88%E4%B8%80%EF%BC%89/</url>
      <content type="html"><![CDATA[<p><div align="left"><br><img src="http://7xray0.com1.z0.glb.clouddn.com/16-6-14/19192858.jpg" width="300" height="180" alt="配图" style="float:right;"></div></p>
<p> <br>本文属于胡博靖的创意（偶尔天马行空的脑洞）。<br>稀奇古怪的idea有时就像柯南每次推理正确时被闪电般电流击中一样……<br>愿创造力永不枯竭……</p>
<a id="more"></a>
<hr>
<h1 id="2016-6-13更新-关于电"><a href="#2016-6-13更新-关于电" class="headerlink" title="2016.6.13更新 关于电"></a>2016.6.13更新 关于电</h1><p>严格说是我室友的想法。<br>她说，要是电像wifi一样不用线传输多好……（一个被各种电线搅的烦躁的girl的抱怨）<br>→<em>→→</em>→→<em>→→</em>→→<em>→→</em>→“用一种气体包裹着电，这样就不会电死啦……”<br>我百度了一下，发现真的可以耶……</p>
<h2 id="电能无线传输技术"><a href="#电能无线传输技术" class="headerlink" title="电能无线传输技术"></a>电能无线传输技术</h2><p>原理：利用电磁场，把电能像信号一样发射到用电设备上去，有点类似WiFi。电器不需再用电线，只需一个电能的发射装置和一个接收装置。<br>看来，无线时代正在向我们走来。</p>
<h1 id="2016-3-15更新-关于人工智能"><a href="#2016-3-15更新-关于人工智能" class="headerlink" title="2016.3.15更新    关于人工智能"></a>2016.3.15更新    关于人工智能</h1><p>今天看到一篇评论，写的不错，发上来。其中有几句话说的很好：<br><strong>技术群体战胜了天赋极高的自然个体。</strong><br><strong>就算真的有“征服”发生，那也是新人类征服了旧人类，而不是人类的末日。</strong><br>该文还提到了“虚拟现实”的概念，让我瞬间想到了柯南剧场版：贝克街的亡灵。带着头盔，仿佛身处他处。<br>**人工智能是让人类生活的劳作性内容越来越少，而虚拟现实是让人类生存生活的创造性意义大规模扩充。<br><img src="/images/2.jpg" alt="整面"><br><img src="/images/1.jpg" alt="部分"></p>
<hr>
<h2 id="AI向"><a href="#AI向" class="headerlink" title="AI向"></a>AI向</h2><p>最近阿尔法狗赢李世石的新闻响遍全世界。（阿尔法狗是一种什么狗→_→）<br>人工智能，这个神秘又让人畏惧的高科技哟…</p>
<h2 id="人工智能"><a href="#人工智能" class="headerlink" title="人工智能"></a>人工智能</h2><p>人工智能（Artificial Intelligence），英文缩写为AI。它是研究、开发用于模拟、延伸和扩展人的智能的理论、方法、技术及应用系统的一门新的技术科学。 人工智能是计算机科学的一个分支，它企图了解智能的实质，并生产出一种新的能以人类智能相似的方式做出反应的智能机器，该领域的研究包括机器人、语言识别、图像识别、自然语言处理和专家系统等。人工智能从诞生以来，理论和技术日益成熟，应用领域也不断扩大，可以设想，未来人工智能带来的科技产品，将会是人类智慧的“容器”。</p>
<p>看它涉及的范围之广：实际应用<br>机器视觉，指纹识别，人脸识别，视网膜识别，虹膜识别，掌纹识别，专家系统，自动规划，智能搜索，定理证明，博弈，自动程序设计，智能控制，机器人学，语言和图像理解，遗传编程等。</p>
<p>人工智能就其本质而言，是对人的思维的信息过程的模拟。</p>
<p>对于人的思维模拟可以从两条道路进行，一是结构模拟，仿照人脑的结构机制，制造出“类人脑”的机器；二是功能模拟，暂时撇开人脑的内部结构，而从其功能过程进行模拟。现代电子计算机的产生便是对人脑思维功能的模拟，是对人脑思维的信息过程的模拟。</p>
<p><strong>以上转自百度百科……</strong></p>
<hr>
<p>和室友辩论，阿尔法狗是否能赢所有人。我觉得可以，如果算法足够精确，存储足够大到可以容纳全部走法。（这个数量级是10^172次方……目前也许是远远达不到这个指标的。不知道从理论上讲，存储可以达到这么多吗？）</p>
<p><strong>脑洞</strong>：我相信人类开发AI的初始目的一定是<strong>服务人类</strong>的。但是，人类不得不警惕，拥有人类智慧的机器人（或者其他形态的机器），在各个方面都优于人类机体时，是否有<strong>灭亡人类</strong>的可能性。有人和我辩论，认为机器永远不可能比人类有智慧。对此我持保留态度。也许现在的机器的核心是人类输入的程序算法，但当病毒入侵或机器足够智能化到可以自我优化代码时，甚至结合仿生学或者神经学相关，使机器能<strong>自我学习</strong>，具备类似于人类情感的机能，将是人类最大的敌人。（机器内心OS：我比你强比你壮，为什么还要服务于人……）况且总有些野心科学家……将这种技术用于战争→_→其结果还是世界大战，人类遭殃。<br><strong>所以AI发展也应该有个底线，就和克隆人一样，任何人不能触碰。</strong></p>
<p><span id="busuanzi_container_page_pv"><br>本文已被阅读 <span id="busuanzi_value_page_pv"></span> 次。感谢您的点击！<br></span></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[PPT动画制作之登录等待]]></title>
      <url>http://hubojing.github.io/2016/03/08/PPT%E5%8A%A8%E7%94%BB%E5%88%B6%E4%BD%9C%E4%B9%8B%E7%99%BB%E5%BD%95%E7%AD%89%E5%BE%85/</url>
      <content type="html"><![CDATA[<p>坐在电脑前，我们常看见电脑页面等待的画面，就是一个圆不停的转。常让人等得怒火直冒，想碾碎电脑。（这么暴力的并不是我~）<br>现在就来说说，怎么制作这个动画效果。并不难。<br>先来看看效果怎么样：<br><img src="http://7xrn7f.com1.z0.glb.clouddn.com/16-3-8/29180966.jpg" alt="效果图"><br><a id="more"></a></p>
<h2 id="具体步骤"><a href="#具体步骤" class="headerlink" title="具体步骤"></a>具体步骤</h2><h1 id="画个圆"><a href="#画个圆" class="headerlink" title="画个圆"></a>画个圆</h1><h1 id="调个色"><a href="#调个色" class="headerlink" title="调个色"></a>调个色</h1><h1 id="添个动作路径"><a href="#添个动作路径" class="headerlink" title="添个动作路径"></a>添个动作路径</h1><h1 id="复个制"><a href="#复个制" class="headerlink" title="复个制"></a>复个制</h1><h1 id="减个透明度"><a href="#减个透明度" class="headerlink" title="减个透明度"></a>减个透明度</h1><h1 id="对个齐"><a href="#对个齐" class="headerlink" title="对个齐"></a>对个齐</h1><h1 id="延个时"><a href="#延个时" class="headerlink" title="延个时"></a>延个时</h1><p><strong>搞定！</strong></p>
<p>是不是还挺酷的~~~</p>
<p><span id="busuanzi_container_page_pv"><br>本文已被阅读 <span id="busuanzi_value_page_pv"></span> 次。感谢您的点击！<br></span></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[markdown语法简记]]></title>
      <url>http://hubojing.github.io/2016/03/08/markdown%E8%AF%AD%E6%B3%95%E7%AE%80%E8%AE%B0/</url>
      <content type="html"><![CDATA[<p><strong>本文属于我的自查笔记，将持续更新。</strong><br><a id="more"></a></p>
<h1 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h1><p># 一级标题<br>## 二级标题<br>### 三级标题<br>#### 四级标题</p>
<p>例：</p>
<h1 id="一级标题"><a href="#一级标题" class="headerlink" title="一级标题"></a>一级标题</h1><h2 id="二级标题"><a href="#二级标题" class="headerlink" title="二级标题"></a>二级标题</h2><h3 id="三级标题"><a href="#三级标题" class="headerlink" title="三级标题"></a>三级标题</h3><h4 id="四级标题"><a href="#四级标题" class="headerlink" title="四级标题"></a>四级标题</h4><p>(这个一级标题和二级标题样式不够科学啊→_→)</p>
<h2 id="加粗"><a href="#加粗" class="headerlink" title="加粗"></a>加粗</h2><p>*斜体文本*<br>_斜体文本_<br>**粗体文本**<br>__粗体文本__<br>***粗斜体文本***<br>___粗斜体文本___</p>
<h2 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h2><p>文字链接 [](<a href="http://网址" target="_blank" rel="external">http://网址</a>)<br>网址链接 \<a href="http://网址\" target="_blank" rel="external">http://网址\</a></p>
<h1 id="高级链接"><a href="#高级链接" class="headerlink" title="高级链接"></a>高级链接</h1><p>链接用 1 作为网址变量[例子1][1].<br>链接用 hubojing 作为网址变量[例子2][hubojing].<br>然后在文档的结尾为变量赋值（网址）<br>[1]:hubojing.github.io<br>[hubojing]:hubojing.github.io</p>
<h2 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h2><p>!(引用名称)[引用地址]</p>
<h1 id="高级引用"><a href="#高级引用" class="headerlink" title="高级引用"></a>高级引用</h1><p>链接用 1 作为网址变量 [hubojing][1].<br>然后在文档的结尾位变量赋值（网址）<br>[1]:hubojing.github.io</p>
<h2 id="分隔符"><a href="#分隔符" class="headerlink" title="分隔符"></a>分隔符</h2><p>三个星号***<br>三个减号---(要与上一行文字空一行)</p>
<h2 id="转义符"><a href="#转义符" class="headerlink" title="转义符"></a>转义符</h2><p>如果描述中用到 markdown 符号，比如 <em> # * 等，又不想它被转义，此时可在这些符号前加反斜杠，如 \</em> \# \* 进行避免。<br>例：<br><strong>不想加粗</strong><br>**不想加粗**</p>
<h2 id="强调"><a href="#强调" class="headerlink" title="强调"></a>强调</h2><p>- ></p>
<ul>
<li>是这样？<blockquote>
<p>like this.</p>
</blockquote>
</li>
</ul>
<hr>
<p>参考文章：<br>1.<a href="https://segmentfault.com/markdown" target="_blank" rel="external">Markdown编辑器语法指南</a><br>2.<a href="http://www.360doc.com/content/13/1119/13/3300331_330476656.shtml" target="_blank" rel="external">Markdown入门</a></p>
<p><span id="busuanzi_container_page_pv"><br>本文已被阅读 <span id="busuanzi_value_page_pv"></span> 次。感谢您的点击！<br></span></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[1602+24C08+4X4键盘密码锁]]></title>
      <url>http://hubojing.github.io/2016/03/07/1602-24C08-4X4%E9%94%AE%E7%9B%98%E5%AF%86%E7%A0%81%E9%94%81/</url>
      <content type="html"><![CDATA[<p>【注】我的单片机课程设计选题是单片机密码锁。但是课题并没有要求用存储器存储密码，所以当时我的设计还是比较简陋的。那个设计只能设定一个内部密码，断电后又恢复到初始密码状态。但是实际生活中，必须能够存储密码。并且，在课程设计里我用的是数码管显示密码，在这里我用的是1602液晶显示。于是以下的设计着重于存储与1602相关，且代码是重新编写（参考了网上的案例），没有用课程设计的代码。<br>在此提供我课程设计的单片机密码锁链接：<a href="https://github.com/hubojing/simple-keylock" target="_blank" rel="external">胡博靖的单片机课程设计</a><br><a id="more"></a></p>
<h2 id="设计思路"><a href="#设计思路" class="headerlink" title="设计思路"></a>设计思路</h2><p>现在程序内设定一个初始密码，然后用液晶显示提示用户输入密码，通过矩阵键盘输入密码，然后进行比较。如果密码正确，则绿灯亮起，否则红灯亮1S，并提示输入密码错误次数。如果输入错误次数达到三次则蜂鸣器报警并锁定键盘。</p>
<h2 id="自用笔记"><a href="#自用笔记" class="headerlink" title="自用笔记"></a>自用笔记</h2><h3 id="数码管编码表（0到f）"><a href="#数码管编码表（0到f）" class="headerlink" title="数码管编码表（0到f）"></a>数码管编码表（0到f）</h3><p>共阳：0xc0,0xf9,0xa4,0xb0,0x99,0x92,0x82,0xf8,0x80,0x90,0x88,0x83,0xc6,0xa1,0x86,0x8e<br>共阴：0x3f,0x06,0x5b,0x4f,0x66,0x6d,0x7d,0x07,0x7f,0x6f,0x77,0x7c,0x39,0x5e,0x79,0x71</p>
<h3 id="protues仿真记载"><a href="#protues仿真记载" class="headerlink" title="protues仿真记载"></a>protues仿真记载</h3><p>1602——LM016<br>晶振——crystal<br>蜂鸣器——buzzer/sounder/speaker<br>可调电阻——pot-hg(课本写的是pot-lin,不过protues7.8没有)</p>
<h2 id="不错的资料和方法"><a href="#不错的资料和方法" class="headerlink" title="不错的资料和方法"></a>不错的资料和方法</h2><p><a href="http://wenku.baidu.com/link?url=zes1HpZOINL7CQVvqCdr4moFsoXpkEsH-x3QAq4urZ2cTDnSUGH7U2AJD2BsKjhzZ6H3hqE9_AxiJD3MY35hrZfCGnDJC-SX3K-fxoVn3Oi" target="_blank" rel="external">I2C总线简介</a><br><a href="https://github.com/hubojing/row-reverse" target="_blank" rel="external">矩阵键盘行反转法</a></p>
<hr>
<h2 id="过程中所犯的低级错误"><a href="#过程中所犯的低级错误" class="headerlink" title="过程中所犯的低级错误"></a>过程中所犯的低级错误</h2><p><img src="http://7xrn7f.com1.z0.glb.clouddn.com/16-3-8/85097816.jpg" alt="led"><br>如图，LED所连接的电阻阻值太大，电流完全达不到使LED发光的值。<br>改正后，LED正常发光。<br><img src="http://7xrn7f.com1.z0.glb.clouddn.com/16-3-8/39755099.jpg" alt="led"></p>
<h2 id="尚未解决的问题"><a href="#尚未解决的问题" class="headerlink" title="尚未解决的问题"></a>尚未解决的问题</h2><h3 id="蜂鸣器不响。"><a href="#蜂鸣器不响。" class="headerlink" title="蜂鸣器不响。"></a>蜂鸣器不响。</h3><p>程序应该正确，蜂鸣器旁的控制点红蓝色变化正确，改过蜂鸣器电压值，12V、5V、3V、1.5V都试过，但是就是不响。<br><strong>可能的原因：</strong><br>蜂鸣器是用方波驱动的，若仅输出单一的高电平或低电平是没用的。<br>蜂鸣器发出的声波也要靠人耳来听取，过高或过低的频率人耳是无法听到的。<br>蜂鸣器的仿真模型应选择下图中后面两种，才能听到声音。（然而我并没有听到声音）<br><img src="http://7xrn7f.com1.z0.glb.clouddn.com/16-3-8/46445685.jpg" alt="蜂鸣器"></p>
<p>Speaker &amp; Sounders</p>
<p> BUZZER         DEVICE        Generic buzzer symbol<br> BUZZER         ACTIVE        DC Operated Buzzer - Outputs Via Sound Card<br> SOUNDER        ACTIVE        Piezo Sounder model (Digital) - Outputs Via Sound Card<br> SPEAKER        DEVICE        Generic loudspeaker symbol<br> SPEAKER        ACTIVE        loudspeaker model (Analog) - Outputs Via Sound Card</p>
<p>依次解释如下：</p>
<p> 蜂鸣器                      通用蜂鸣器符号               无仿真模型<br> 蜂鸣器        活动的        阻抗12Ω直流蜂鸣器            仿真时通过声卡发声<br> 讯响器        活动的        压电讯响器数字模型           仿真时通过声卡发声<br> 扬声器                      通用扬声器符号<br> 扬声器        活动的        阻抗8Ω扬声器模拟模型         仿真时通过声卡发声</p>
<h3 id="存储有问题。"><a href="#存储有问题。" class="headerlink" title="存储有问题。"></a>存储有问题。</h3><p>程序代码严格按照标准代码写的，常见的delay();的延时问题应该没有。但是明显仿真结果没有存储到新的修改密码，一直是初始密码。<br>请各位指教。</p>
<h2 id="源程序和仿真图"><a href="#源程序和仿真图" class="headerlink" title="源程序和仿真图"></a>源程序和仿真图</h2><p><img src="http://7xrn7f.com1.z0.glb.clouddn.com/16-3-8/89430789.jpg" alt="仿真图"><br>若需要下载，<a href="https://github.com/hubojing/key-lock" target="_blank" rel="external">请点击！</a></p>
<p>#include<reg52.h></reg52.h></p>
<p>#define uint unsigned int</p>
<p>#define uchar unsigned char<br>void key_scan();<br>uchar count0,count1,count3,num,n=0,temp,a,j,count4;<br>uchar mima[8];                            //初始密码存储区<br>uchar tab<em>key[50];                        //输入密码存储区<br>uchar code table[]={ 0xc0,0xf9,0xa4,0xb0,0x99,0x92,0x82,0xf8,0x80,0x90,0x88,0x83,0xc6,0xa1,0x86,0x8e<br>};//led共阳数码管<br>/<em>uchar code table[]={<br>0x3f,0x06,0x5b,0x4f,<br>0x66,0x6d,0x7d,0x07,<br>0x7f,0x6f,0x77,0x7c,<br>0x39,0x5e,0x79,0x71};    //led共阴数码管       </em>/<br>bit enterflag;                            //确认键按下与否的标志<br>bit mimaflag;                            //密码正确与否的标志<br>bit xiugaiflag;                            //修改密码标志<br>bit enter1flag;                        //修改密码确认键标志<br>sbit red=P2^1;<br>sbit green=P2^0;<br>sbit bell=P2^2;<br>sbit rs=P2^6;<br> sbit rw=P2^5;<br>sbit lcden=P2^7;<br>sbit scl=P3^0;<br>sbit sda=P3^1;<br>uchar code table1[]=”input the passco”;<br>uchar code table2[]=”de:     ——–”;<br>uchar code table3[]=”*”;<br>uchar code table4[]=”right   (^</em>^)   “;<br>uchar code table5[]=”first  error!!!!”;<br>uchar code table6[]=”second error!!!!”;<br>uchar code table7[]=”third error see “;<br>uchar code table8[]=”u tomorrow (^_^)”;<br>uchar code table9[]=”define the passc”;<br>uchar code table10[]=”ode:    ——–”;<br>uchar code table11[]=”code   is    new”;<br>//<strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong>**</strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong>键盘消抖函数<strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><em>*</em></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong><br>void delay1()<br>{ ;; }<br>void delay2(uchar x)<br>{<br>    uchar a,b;<br>    for(a=x;a&gt;0;a–)<br>     for(b=100;b&gt;0;b–);<br>}<br>void delay3(uchar x)<br>{<br>    uchar a,b;<br>    for(a=x;a&gt;0;a–)<br>     for(b=200;b&gt;0;b–);<br>     }<br>void delay(uint z)<br>{<br>    uint x,y;<br>    for(x=z;x&gt;0;x–)<br>        for(y=110;y&gt;0;y–);<br>}</p>
<p>//<strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong>**</strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong>e^2room的初始化<strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><em>**</em></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong><br>void start()  //开始信号<br>{<br>    sda=1;     //书P171 时钟SCL线为高电平时，数据线SDA出现由高电平向低电平变化的情形时，启动I^2C总线数据传送。<br>    delay1();<br>    scl=1;     //<br>    delay1();<br>    sda=0;     //<br>    delay1();<br>}</p>
<p>void stop()   //停止<br>{<br>    sda=0;      //书P171时钟SCL线为高电平时，数据线SDA出现由低电平到高电平的变化的情形时，将停止I^2C总线数据传送。<br>    delay1();<br>    scl=1;<br>    delay1();<br>    sda=1;<br>    delay1();<br>}<br>//<strong><strong><strong><strong><strong><strong><em>**</em></strong></strong></strong></strong></strong></strong>应答信号<strong><strong><strong><strong><strong><strong><strong><strong><strong>*</strong></strong></strong></strong></strong></strong></strong></strong></strong><br>void respond()<br>{<br>    uchar i;<br>    scl=1;<br>    delay1();<br>    while((sda==1)&amp;&amp;(i&lt;250))i++;    //书P176 应答sda为0，非应答为1<br>    scl=0;                            //释放总线        ？<br>    delay1();<br>}</p>
<p>void noack()<br>{<br>scl=1;<br>delay1();<br>scl=1;delay1();<br>scl=0;delay1();<br>sda=0;delay1();<br>}<br>//<strong><strong><strong><strong><strong><strong><strong>*</strong></strong></strong></strong></strong></strong></strong>写字节操作函数<strong><strong><strong><strong><strong><strong><strong><strong>**</strong></strong></strong></strong></strong></strong></strong></strong><br>void write_byte(uchar date)<br>{<br>    uchar i,temp;<br>    temp=date;<br>    for(i=0;i&lt;8;i++)<br>    {<br>        temp=temp&lt;&lt;1;            //保持最高位，左移到进位CY<br>        scl=0;                //scl上跳沿写入<br>        delay1();<br>        sda=CY;              //溢出位<br>        delay1();<br>        scl=1;<br>        delay1();<br>        scl=0;delay1();<br>    }<br>    scl=0;<br>    delay1();<br>    sda=1;//总线释放 ？<br>    delay1();<br>}<br>//<strong><strong><strong><strong><strong><strong><strong><em>*</em></strong></strong></strong></strong></strong></strong></strong>读字节操作函数<strong><strong><strong><strong><strong><strong><strong>*</strong></strong></strong></strong></strong></strong></strong><br>uchar read_byte()<br>{<br>    uchar i,k;<br>    scl=0;<br>    delay1();<br>    sda=1;<br>    delay1();<br>    for(i=0;i&lt;8;i++)<br>    {<br>        scl=1;<br>        delay1();<br>        k=(k&lt;&lt;1)|sda;    //或运算，放到最低位<br>        scl=0;<br>        delay1();<br>    }<br>    return k;<br>}<br>//<strong><strong><strong><strong><strong><strong><strong><strong>**</strong></strong></strong></strong></strong></strong></strong></strong>写地址函数<strong><strong><strong><strong><strong><strong><strong>**</strong></strong></strong></strong></strong></strong></strong><br>void write_add(uchar address,uchar date)<br>{<br>    start();<br>    write_byte(0xa0);    //设备地址<br>    respond();<br>    write_byte(address);<br>    respond();<br>    write_byte(date);<br>    respond();<br>    stop();<br>}<br>//<strong><strong><strong><strong><strong><strong><strong><em>*</em></strong></strong></strong></strong></strong></strong></strong>读地址函数<strong><strong><strong><strong><strong><strong><strong><strong><strong>*</strong></strong></strong></strong></strong></strong></strong></strong></strong><br>uchar read_add(uchar address)<br>{<br>    uchar date;<br>    start();<br>    write_byte(0xa0);<br>    respond();<br>    write_byte(address);<br>    respond();<br>    start();<br>    write_byte(0xa1);      //表示接收地址<br>    respond();<br>    date=read_byte();<br>    noack();<br>    stop();<br>    return date;<br>}<br>//<strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><em>*</em></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong>LCD1602的初始化<strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong>**</strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong><br>void write_com(uchar com)           //书P154   写命令函数<br>{<br>    rs=0;         //RS为寄存器选择，高电平1时选择数据寄存器、低电平0时选择指令寄存器。<br>    lcden=0;<br>    P0=com;<br>    delay(5);<br>    lcden=1;     //LCD的使能端高电平有效<br>    delay(5);<br>    lcden=0;<br>}</p>
<p>void write_date(uchar date)         //写数据函数<br>{<br>    rs=1;<br>    lcden=0;<br>    P0=date;<br>    delay(5);<br>    lcden=1;<br>    delay(5);<br>    lcden=0;<br>}<br>//<strong><strong><strong><strong><strong><strong><strong><strong><strong><em>*</em></strong></strong></strong></strong></strong></strong></strong></strong></strong>密码比较函数<strong><strong><strong><strong><strong><strong><strong><em>**</em></strong></strong></strong></strong></strong></strong></strong><br>bit mimacmp()<br>{<br>    bit flag;<br>    uchar i;<br>    for(i=0;i&lt;8;i++)<br>        {<br>            if(mima[i]==tab_key[i])<br>                flag=1;<br>            else<br>                {<br>                flag=0;<br>                i=8;<br>                }<br>        }<br>    return(flag);                            //返回flag<br>}<br>//<strong><strong><strong><strong><strong><strong><strong><strong>**</strong></strong></strong></strong></strong></strong></strong></strong>LCD显示函数开始<strong><strong><strong><strong><strong><strong><strong><strong><strong>**</strong></strong></strong></strong></strong></strong></strong></strong></strong><br>void lcd_display()<br>{<br>uchar i=0;<br>write_com(0x80+0x40+8);//液晶操作中的写入，地址是0x80开头的，加0x40为写入第二行，加8则为确定地址。<br>for(i=0;i&lt;n;i++)<br>{<br>write_date(table3[0]);    //uchar code table3[]=”<em>“<br>}<br>}<br>//<strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong>**</strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></em>键盘功能分配函数群开始<strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><em>*</em></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong><br>// 0          1            2              3<br>// 4          5            6              7<br>// 8          9           确认（A）       无效（B）<br>//取消（C）修改密码键（D）确认修改键（E） 无效（F）<br>void key_manage1()<br>{<br>tab_key[n]=0;     //数组的存储顺序是从n=0开始的，因此无论是哪个键先按下都会存入tab_key[0]<br>n++;<br>if(xiugaiflag==1)    //如果按下了修改键<br>{<br>mima[count4]=0;<br>count4++;<br>}<br>}</p>
<p>void key_manage2()<br>{</p>
<p>tab_key[n]=1;<br>n++;<br>if(xiugaiflag==1)<br>{<br>mima[count4]=1;<br>count4++;<br>}<br>}</p>
<p>void key_manage3()<br>{</p>
<p>tab_key[n]=2;<br>n++;<br>if(xiugaiflag==1)<br>{<br>mima[count4]=2;<br>count4++;<br>}<br>}</p>
<p>void key_manage4()<br>{<br>tab_key[n]=3;<br>n++;<br>if(xiugaiflag==1)<br>{<br>mima[count4]=3;<br>count4++;<br>}<br>}</p>
<p>void key_manage5()<br>{<br>tab_key[n]=4;<br>n++;<br>if(xiugaiflag==1)<br>{<br>mima[count4]=4;<br>count4++;<br>}<br>}</p>
<p>void key_manage6()<br>{<br>tab_key[n]=5;<br>n++;<br>if(xiugaiflag==1)<br>{<br>mima[count4]=5;<br>count4++;<br>}<br>}<br>void key_manage7()<br>{<br>tab_key[n]=6;<br>n++;<br>if(xiugaiflag==1)<br>{<br>mima[count4]=6;<br>count4++;<br>}<br>}<br>void key_manage8()<br>{<br>tab_key[n]=7;<br>n++;<br>if(xiugaiflag==1)<br>{<br>mima[count4]=7;<br>count4++;<br>}<br>}</p>
<p>void key_manage9()<br>{<br>tab_key[n]=8;<br>n++;<br>if(xiugaiflag==1)<br>{<br>mima[count4]=8;<br>count4++;<br>}<br>}<br>void key_manage10()<br>{<br>tab_key[n]=9;<br>n++;<br>if(xiugaiflag==1)<br>{<br>mima[count4]=9;<br>count4++;<br>}<br>}<br>//<strong><strong><strong><strong><strong><strong><strong><strong>**</strong></strong></strong></strong></strong></strong></strong></strong>确认键<strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong>**</strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong><br>void key_manage11()<br>{<br>    enterflag=1;                    //确认键按下<br>    if(n==8)                       //只有输入8个密码后按确认才做比较<br>    {    mimaflag=mimacmp();<br>    }<br>    else<br>    {    mimaflag=0;<br>     }<br>     if(enterflag==1)<br>        {<br>            enterflag=0;  //标志位清零<br>            n=0;<br>            //用FFFFFFFF清除已经输入的密码<br>            for(count3=0;count3&lt;8;count3++)<br>            {<br>                delay(5);<br>                tab_key[count3]=0x0f;<br>            }<br>            TR1=1;                                    //打开计数器1<br>            count1=0;                                //定时器1由50MS累计到1S所用的计数器<br>            if(mimaflag==1)<br>            {<br>                a=0;</p>
<pre><code>            write_com(0x01);
            write_com(0x80);
            for(count3=0;count3&lt;16;count3++)
            {
                write_date(table4[count3]);    //密码正确，显示RIGHT，绿灯亮
                green=0;red=1;
                bell=1;
                delay(5);
            }
        }

        else
        {   
             n=0;
             red=0;
            bell=0;
            a++;
            if(a==1)
            {
                for(count3=0;count3&lt;8;count3++) //ffffffff清除密码
                {    
                    delay(5);
                    tab_key[count3]=0x0f;        
                }
                write_com(0x01);                                        
                write_com(0x80);
                for(count3=0;count3&lt;16;count3++)
                {
                    write_date(table5[count3]);    //密码错误，显示 first error，红灯亮
                    green=1;red=0;
                    bell=1;
                    delay(5);
                }
                    TR1=1;
            }
            if(a==2)
            {    
                for(count3=0;count3&lt;8;count3++) //ffffffff清除密码
                {    
                    delay(5);
                    tab_key[count3]=0x0f;        
                }
                    write_com(0x01);
                    write_com(0x80);
                    for(count3=0;count3&lt;16;count3++)
                    {
                        write_date(table6[count3]);    //密码错误，显示SECOND ERROR，红灯亮
                        green=1;red=0;
                        bell=1;
                        delay(5);
                    }
                        TR1=1;
            }

              if(a==3)
                {    
                    for(count3=0;count3&lt;8;count3++) //ffffffff清除密码
                    {    
                        delay(5);
                        tab_key[count3]=0x0f;        
                    }
                    write_com(0x01);
                    write_com(0x80);
                    for(count3=0;count3&lt;16;count3++)
                    {
                        write_date(table7[count3]);    //密码错误，显示third error see，红灯亮
                        green=1;red=0;
                        bell=0;//蜂鸣器报警
                        delay(5);
                    }
                    write_com(0x80+0x40);
                    for(count3=0;count3&lt;16;count3++)
                    {
                        write_date(table8[count3]);//密码错误，显示 U TOMORROW ,红灯亮
                        green=1;red=0;
                        bell=0;//蜂鸣器报警
                        delay(5);
                    }
                        TR1=0;

                }

    }
}
</code></pre><p>}<br>void key_manage12()<br>{<br>tab_key[n]=11;<br>n++;                          //密码计数清零</p>
<p>}<br>//<strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><em>**</em></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong>取消键<strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><em>**</em></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong><br>void key_manage13()<br>{</p>
<p>n=0;                          //密码计数清零<br>write_com(0x80);                        //指针所指位置       第一行<br>for(count3=0;count3&lt;16;count3++)<br>{<br>    write_date(table1[count3]);        //第一行显示INPUT THE PASSPORD:<br>    delay(5);<br>}<br>write_com(0x80+0x40);                 //第二行<br>for(count3=0;count3&lt;16;count3++)<br>{<br>    write_date(table2[count3]);    //开机显示——–<br>    delay(5);<br>    tab_key[count3]=0x0f;            //用FFFFFFFF清除已经输入的密码<br>}</p>
<p>}<br>//<strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><em>*</em></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong>修改密码键<strong><strong><strong><strong><strong><strong><strong><strong>**</strong></strong></strong></strong></strong></strong></strong></strong><br>void key_manage14()<br>{<br>    uchar aa=0;<br>    n=0;<br>    xiugaiflag=1;<br>    write_com(0x01);<br>    write_com(0x80);<br>for(count3=0;count3&lt;16;count3++)<br>{<br>    write_date(table9[count3]);    //显示define the password<br>    delay(5);<br>    tab_key[count3]=0x0f;            //用FFFFFFFF清楚已经输入的密码<br>}<br>    write_com(0x80+0x40);<br>for(count3=0;count3&lt;16;count3++)<br>{<br>    write_date(table10[count3]);    //显示——–<br>    delay(5);<br>}<br>TR0=1;</p>
<p>}<br>//<strong><strong><strong><strong><strong><strong><strong><strong><strong><strong>**</strong></strong></strong></strong></strong></strong></strong></strong></strong></strong>修改密码键的确认键<strong><strong><strong><strong><strong><strong><strong><em>**</em></strong></strong></strong></strong></strong></strong></strong><br>void key_manage15()<br>{<br>n=0;<br>enter1flag=1;<br>if(enter1flag==1)<br>{<br>    enter1flag=0;<br>    count4=0;<br>    for(count3=0;count3&lt;16;count3++)<br>    {<br>    tab_key[count3]=0x0f;            //用FFFFFFFF清除已经输入的密码<br>     }<br>    write_com(0x01);<br>    write_com(0x80);<br>    for(count3=0;count3&lt;16;count3++)<br>    {<br>        write_date(table11[count3]);<br>        delay(100);<br>    }<br>    TR1=1;<br>    count1=0;<br>}<br>}<br>void key_manage16()<br>{<br>tab_key[n]=15;<br>n++;<br>}</p>
<p>//<strong><strong><strong><strong><strong><strong><strong><strong><strong><em>**</em></strong></strong></strong></strong></strong></strong></strong></strong></strong>定时器1的50MS,共延时1秒<strong><strong><strong><strong><strong><strong><strong>*</strong></strong></strong></strong></strong></strong></strong><br>void time_1() interrupt 3<br>{    </p>
<pre><code>TH1=(65536-50000)/256;
TL1=(65536-50000)%256;
if(count1&lt;20)
{
    count1++;
}
else                             //计时到1S
{
    TR1=0;
    count1=0;
    mimaflag=0;

    red=1;
    bell=1;
    //显示FFFFFFFF
    write_com(0x01);
    write_com(0x80);
    for(count3=0;count3&lt;16;count3++)
        {
            write_date(table1[count3]);    //显示INPUT THE PASSCODE
            delay(5);
        }
    write_com(0x80+0x40);
    for(count3=0;count3&lt;16;count3++)
        {
            write_date(table2[count3]);    //开机显示FFFFFFFF
            delay(5);
        }
}
</code></pre><p>}<br>//<strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><em>*</em></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong>定时0<strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong>**</strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong><br>void time_0() interrupt 1<br>{    </p>
<pre><code>TH0=(65536-50000)/256;
TL0=(65536-50000)%256;
</code></pre><p>if(count4&lt;8)<br>{<br>    key_scan();<br>}<br>else<br>{<br>    TR0=0;<br>    count4=0;<br>}<br>}</p>
<p>//初始化函数<br>void init()<br>{<br>    uchar i;<br>    lcden=0;<br>    write_com(0x38);                    //打开显示模式设置<br>    write_com(0x0c);                    //打开显示，光标等等设置为零<br>    write_com(0x06);                    //当读或写一个字符后地址指针加一，且光标加一，当写一个字符后整频显示左移，<br>    write_com(0x01);                    //清零指令<br>    write_com(0x80);                    //指针所指位置</p>
<pre><code>//定时器初始化
TMOD=0x11;                            //T0,T1工作方式1
TH0=(65536-2000)/256;
TL0=(65536-2000)%256;                //T0初始化2MS

TH1=(65536-50000)/256;
TL1=(65536-50000)%256;                //T1初始化50MS

TR1=0;
ET1=1;
EA=1;
TR0=0;
ET0=1;

count0=0;                            //初始没有密码输入，故为零
enterflag=0;                        //没有确认键按下
mimaflag=0;                            //密码正确与否键先置零

red=1;                                //红灯不亮
</code></pre><p>//<strong><strong><em>**</em></strong></strong>密码存入EPROM中<strong><strong><strong><strong><strong><strong><strong><strong>**</strong></strong></strong></strong></strong></strong></strong></strong><br>    sda=1;<br>    delay(5);<br>    scl=1;// SDA=1,SCL=1,使主从设备处于空闲状态<br>    delay(5);<br>    for(i=0;i&lt;8;i++)<br>    {<br>        write_add(i,8);<br>        delay3(100);<br>    }<br>    for(i=0;i&lt;8;i++)<br>    {<br>        mima[i]=read_add(i);<br>        delay(5);<br>    }</p>
<p>}<br>void main()<br>{    rw=0;<br>    init();<br>    write_com(0x80);                        //给com一个数值，com连着单片机<br>    for(count3=0;count3&lt;16;count3++)<br>    {<br>        write_date(table1[count3]);        //第一行显示INPUT THE PASSPORD:<br>        delay(5);<br>    }<br>    write_com(0x80+0x40);<br>    for(count3=0;count3&lt;16;count3++)<br>    {<br>        write_date(table2[count3]);        //开机显示FFFFFFFF<br>        delay(5);<br>    }<br>    while(1)<br>    {<br>        key_scan();                              //调用键盘扫描函数<br>        lcd_display();<br>    }</p>
<p>}<br>//<strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong>**</strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong>键盘扫描函数开始<strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><em>*</em></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong><br>void key_scan()<br>{<br>//<strong><strong>**</strong></strong>扫描第一行<strong><strong>*</strong></strong><br>P1=0xfe;<br>temp=P1;<br>temp=temp&0xf0;<br>if(temp!=0xf0)<br>{<br>delay(100);<br>if(temp!=0xf0)<br>{<br>temp=P1;<br>switch(temp)<br>{<br>case 0xee:<br>key_manage1();<br>break;</p>
<p>case 0xde:<br>key_manage2();<br>break;</p>
<p>case 0xbe:<br>key_manage3();<br>break;</p>
<p>case 0x7e:<br>key_manage4();<br>break;<br>}<br>while(temp!=0xf0)<br>{<br>temp=P1;<br>temp=temp&0xf0;<br>}<br>}<br>}<br>//<strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong>**</strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong>扫描第二行<strong><strong><strong><strong><strong><strong><strong><strong><em>*</em></strong></strong></strong></strong></strong></strong></strong></strong><br>P1=0xfd;<br>temp=P1;<br>temp=temp&0xf0;<br>if(temp!=0xf0)<br>{<br>delay(100);<br>if(temp!=0xf0)<br>{<br>temp=P1;<br>switch(temp)<br>{<br>case 0xed:<br>key_manage5();<br>break;</p>
<p>case 0xdd:<br>key_manage6();<br>break;</p>
<p>case 0xbd:<br>key_manage7();<br>break;</p>
<p>case 0x7d:<br>key_manage8();<br>break;<br>}<br>while(temp!=0xf0)<br>{<br>temp=P1;<br>temp=temp&0xf0;<br>}<br>}<br>}<br>//<strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong>*</strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong>扫描第三行<strong><strong><strong><strong><strong><strong><strong><strong><em>*</em></strong></strong></strong></strong></strong></strong></strong></strong><br>P1=0xfb;<br>temp=P1;<br>temp=temp&0xf0;<br>if(temp!=0xf0)<br>{<br>delay(100);<br>if(temp!=0xf0)<br>{<br>temp=P1;<br>switch(temp)<br>{<br>case 0xeb:<br>key_manage9();<br>break;</p>
<p>case 0xdb:<br>key_manage10();<br>break;</p>
<p>case 0xbb:<br>key_manage11();<br>break;</p>
<p>case 0x7b:<br>key_manage12();<br>break;<br>}<br>while(temp!=0xf0)<br>{<br>temp=P1;<br>temp=temp&0xf0;<br>}<br>}<br>}</p>
<p>//<strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><em>*</em></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong>扫描第四行<strong><strong><strong><strong><strong><strong><strong><strong><strong><em>**</em></strong></strong></strong></strong></strong></strong></strong></strong></strong><br>P1=0xf7;<br>temp=P1;<br>temp=temp&0xf0;<br>if(temp!=0xf0)<br>{<br>delay(100);<br>if(temp!=0xf0)<br>{<br>temp=P1;<br>switch(temp)<br>{<br>case 0xe7:<br>key_manage13();<br>break;</p>
<p>case 0xd7:<br>key_manage14();<br>break;</p>
<p>case 0xb7:<br>key_manage15();<br>break;</p>
<p>case 0x77:<br>key_manage16();<br>break;<br>}<br>while(temp!=0xf0)<br>{<br>temp=P1;<br>temp=temp&0xf0;<br>}<br>}<br>}<br>} </p>
<p><span id="busuanzi_container_page_pv"><br>本文已被阅读 <span id="busuanzi_value_page_pv"></span> 次。感谢您的点击！<br></span></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[零碎知识记录]]></title>
      <url>http://hubojing.github.io/2016/01/04/%E9%9B%B6%E7%A2%8E%E7%9F%A5%E8%AF%86%E8%AE%B0%E5%BD%95/</url>
      <content type="html"><![CDATA[<p>位选就是要亮哪一个数码管,段选就是让这个数码管显示哪个数!!!</p>
<p>#define uchar unsigned char<br>unsigned char 用来声明无符号字符变量的，上面这个语句的作用就是在其之后 可以用uchar来代替unsigned char 简化编写，就是说 写了这条 下面在写 uchar i; 效果跟 unsigned char i; 一样<br><a id="more"></a><br>蓝色是低电平。红色是高电平。黄色一般为不正常的情况，灰色为不确定（高阻？）</p>
<p>0xe0 P2.4<br>P1=0x10 P1的第5位<br>0x04是十六进制数，对应的二进制数为0000 0100，从低位到高位一次对应p1.0-p1.7，所以p1.2为高电平，其余为低电平。</p>
<p>  temp=P3&0xf0;<br>是个位与运算符<br>0x80=1000 0000<br>temp转换为二进制<br>假设temp=1010 1010<br>&amp;后temp=1000 0000<br>如果temp=0010 1010<br>&amp;后temp=0000 0000<br>可见temp低7位无论是什么&amp;后都是0<br>最高位由temp决定<br>结果就是最高位保持其余全为0从而取出了最高位</p>
<p>&amp;是按位与的意思，就是说只将P3口的高四位读入，低四位为0，放到 temp里面 </p>
<p>P2=0x01 对应 P2^0=1<br>P2=0x02 对应 P2^1=1<br>P2=0x04 对应 P2^2=1<br>P2=0x08 对应 P2^3=1<br>P2=0x10 对应 P2^4=1<br>P2=0x20 对应 P2^5=1<br>P2=0x40 对应 P2^6=1<br>P2=0x80 对应 P2^7=1<br>P2=0x11 对应 P2^4=1 与 P2^0=1<br>P2=0xff 对应 P2^7=1 与 P2^6=1、P2^5=1、P2^4=1、P2^3=1、P2^2=1、P2^1=1、P2^0=1 </p>
<p>数字信号处理 问题<br>1.正弦型模拟信号xa(t)=Asin(Ω0t+φ)中t是时间变量，单位是秒（s），去连续数值，而正弦序列中x(n)=Asin(ω0n+φ)中n是无量纲数，取离散数值，因而造成Ω0越大，则xa(t)变化越快；但由于x(n)=sin(ω0n+φ)=sin[(ω0+2πm)n+φ]，当ω0变化时，x(n)是以2π为周期的，并不是ω0越大，x(n)变化越快。<br>连续和离散的不都是以2π为周期的吗？为什么一个越来越大，一个却有周期性？</p>
<p><span id="busuanzi_container_page_pv"><br>本文已被阅读 <span id="busuanzi_value_page_pv"></span> 次。感谢您的点击！<br></span></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Flash动画制作学习心得]]></title>
      <url>http://hubojing.github.io/2015/12/06/Flash%E5%8A%A8%E7%94%BB%E5%88%B6%E4%BD%9C%E5%AD%A6%E4%B9%A0%E5%BF%83%E5%BE%97/</url>
      <content type="html"><![CDATA[<h1 id="制作过程中发现的问题及解决方案："><a href="#制作过程中发现的问题及解决方案：" class="headerlink" title="制作过程中发现的问题及解决方案："></a>制作过程中发现的问题及解决方案：</h1><p><strong>1.音频不能导入</strong><br>最简单的解决方案：使用Adobe Adition内录。注意保存比特率不要高于160KHZ。（320KHZ导入不了）</p>
<p><strong>2.按钮制作了没反应</strong><br>解决方案：首先新建一个图层，把按钮拖进去。在第一帧（注意是帧）动作里写上语句stop();然后在按钮的动作里写上语句on (release){play();}<br><a id="more"></a><br><strong>3.“开始”按钮控制不了声音</strong><br>最简单粗暴的方法：声音从第二帧开始。</p>
<p><strong>4.点击“暂停”按钮声音停止不了</strong><br>动作里写上语句stopAllSounds();</p>
<p><strong>5.声音会不断循环</strong><br>在最后一帧（记住加入关键帧）动作里写上stopAllSounds();</p>
<p><strong>6.mc总是一闪而过</strong><br>是mc的长度没设置好。拖过到合适的长度即可。</p>
<p><strong>7.按钮上的文字怎么改</strong><br>在按钮元件内部有一层是text，把默认的文本框删掉，在自己加一个上去。</p>
<p>还有一些细枝末节的问题，这儿就不提了。</p>
<h1 id="实践后发现需要注意的地方："><a href="#实践后发现需要注意的地方：" class="headerlink" title="实践后发现需要注意的地方："></a>实践后发现需要注意的地方：</h1><p><strong>1.名字标清楚</strong><br>方便修改！做到后来，图层、元件各种文件越来越多，一定要在新建的时候就尽量标明。</p>
<p><strong>2.多建图层</strong><br>最好声音一个图层，按钮一个图层，背景一个图层，遮罩一个图层，mc一个图层，分好类！</p>
<p><strong>3.把同一类文件放入一个文件夹</strong><br>如逐帧动画的素材，一个小动画就有几十张，放入文件夹方便查看。</p>
<p><strong>4.分清“插入帧”、“插入关键帧”、“插入空白关键帧”、“删除帧”、“清除关键帧”的区别</strong><br>插入帧：就是插入普通帧，是在前面一帧地基础上操作。<br>插入关键帧：关键帧的前后都可以和这一帧毫无关联！<br>删除帧：一点痕迹也不留。<br>清除关键帧：关键帧是没了，还是一个普通帧。</p>
<p><strong>5.已做逐帧动画的素材图片分类放入文件夹中时，不要剪切！</strong><br>可以直接拖进文件夹，千万不能剪切再粘贴进文件夹，否则之前做好的逐帧动画就都没了……我自己毁了两次才发现这个问题，上百帧啊……</p>
<p><strong>6.动画太快，把每一帧后面空一帧</strong><br>相当于延时的作用。</p>
<p><strong>7.记住几个快捷键</strong><br>ctrl+F3 调出属性面板<br>F5插入普通帧<br>F6插入关键帧<br>F7插入空白关键帧 </p>
<p><span id="busuanzi_container_page_pv"><br>本文已被阅读 <span id="busuanzi_value_page_pv"></span> 次。感谢您的点击！<br></span></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[STC89C52RC单片机学习记录（1602篇）]]></title>
      <url>http://hubojing.github.io/2015/11/17/STC89C52RC%E5%8D%95%E7%89%87%E6%9C%BA%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/</url>
      <content type="html"><![CDATA[<h1 id="1-老式51单片机内部没有AD和DA转换模块"><a href="#1-老式51单片机内部没有AD和DA转换模块" class="headerlink" title="1.老式51单片机内部没有AD和DA转换模块"></a>1.老式51单片机内部没有AD和DA转换模块</h1><p>51单片机是一种比较经典的单片机，因此问世时间比avr时间长，它的芯片内部没有集成ad转换，而avr单片机芯片内部集成了ad转换，因此传统的51需要外接ad转换芯片，而avr不需要。不过随着时间的发展，新型的51单片机也有内部集成了ad芯片的，比如stc12c2052ad。<br><strong>这也是为什么我们的课本上学AD、DA转换时，书上的例题都加了一个转换器如DAC0832、ADC0809的原因。</strong><br><a id="more"></a></p>
<h1 id="2-nop"><a href="#2-nop" class="headerlink" title="2._nop_()"></a>2._nop_()</h1><p>这个函数是延时一个机器周期的意思，它包含在头文件intrins.h中，只要程序应用到_nop_()，就需要有头文件intrins.h的声明。</p>
<p><strong>1602液晶相关</strong></p>
<h1 id="3-几个引脚功能备注"><a href="#3-几个引脚功能备注" class="headerlink" title="3.几个引脚功能备注"></a>3.几个引脚功能备注</h1><p><img src="http://i13.tietuku.com/8693823f522c8700.png" alt=""></p>
<p>第4脚：RS为寄存器选择，高电平1时选择数据寄存器、低电平0时选择指令寄存器。<br>第5脚：RW为读写信号线，高电平(1)时进行读操作，低电平(0)时进行写操作。<br>第6脚：E(或EN)端为使能(enable)端,高电平（1）时读取信息，负跳变时执行指令。</p>
<h1 id="4-液晶显示程序的几点注释："><a href="#4-液晶显示程序的几点注释：" class="headerlink" title="4.液晶显示程序的几点注释："></a>4.液晶显示程序的几点注释：</h1><p><strong>LCD1602测忙：</strong><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">result = (bit)(P0 &amp; 0x80)</div></pre></td></tr></table></figure></p>
<p>(bit)强制转换成位，P0与0X80：0X80换成二进制就10000000也就是P0口的P0^7位。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">lcd_write(0,pos|0x80);</div></pre></td></tr></table></figure>
<p>变量pos按位或0x80，也就是取出变量pos的最高位数据，传递给函数lcd_write()。此函数下面应该会有用到变量pos的地方，那里得到的pos不再是原来的数据了，按位或0x80后，就只有最高位是pos原来最高位的数据，其它位全部置位0。这个函数是设定DDRAM地址，也就是设定字符显示的首地址，它只执行了一个指令“向控制器写入0x80|pos的值（这是一个或表达式，表示POS变量与0X80相或，取其结果，0x80是KS0066内部指令的关键字，是表示指定DDRAM首地址的）。</p>
<p>忙还是那么忙，累却到了一个极点。但还是感到莫大的幸福。</p>
<p><span id="busuanzi_container_page_pv"><br>本文已被阅读 <span id="busuanzi_value_page_pv"></span> 次。感谢您的点击！<br></span></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[matlab函数杂谈]]></title>
      <url>http://hubojing.github.io/2015/11/10/matlab%E5%87%BD%E6%95%B0%E6%9D%82%E8%B0%88/</url>
      <content type="html"><![CDATA[<p>写了两篇正儿八经的技术文，我觉得这好像不是我的风格，我是小清新啊小清新[微笑]<br>我是大家的开心果啊[微笑]  所以，学技术也要感受到快乐。来来，回归自己。</p>
<h1 id="浅谈最近用matlab遇到的几个函数："><a href="#浅谈最近用matlab遇到的几个函数：" class="headerlink" title="浅谈最近用matlab遇到的几个函数："></a>浅谈最近用matlab遇到的几个函数：</h1><p>1.num2str   str2num<br>对于一个刚学matlab不久的人，看到回调函数里满篇num2str、str2num内心满满的问号……这感觉就和十年前学英语一样……<br>然而这个2，让我觉得这个函数很有意思……<br>是的，2就是two啊！two音同to啊！<br>num2str，顾名思义，number to string，把数值转化成字符串。同理str2num我就不解释了。<br>嗯，程序员都是懒人，能省就省必须的。<br><a id="more"></a><br>2.ezplot<br>Easy to use function plotter！E Z PLOT 懒人的智慧<br>翻译：易用的一元函数绘图函数<br><strong>使用之前要定义！要定义！要定义！</strong><br>符号函数定义法则：syms x;<br>那么问题来了，syms是什么鬼？<br>syms是定义符号变量。哦，我们就记得了，进行符号运算前要定义它，就用syms。</p>
<p>3.conv<br>数字信号处理，嗯哼，眼熟是不是？<br>卷积卷积卷积！</p>
<p><strong>辨析：filter、conv、impz函数的区别</strong><br>在MATLAB中，可以用函数y=filter(p,d,x)实现差分方程的仿真，也可以用函数 y=conv(x,h)计算卷积，用y=impz(p,d,N)求系统的冲激响应。具体例子百度一大推。</p>
<p>4.stem<br>同样数字信号处理里出现的。Stem函数用于绘图，它是绘制针状图的好手。<br>调用格式都为stem(n,x,’filled’);<br>只需要将需要绘制的数据存放在一个数组中，然后将这个数组作为参数传递给“stem”函数就可以得到输出图形。例如，下面的代码可以绘制正弦函数的图形：<br>n=1:50; %定义序列的长度是50<br>x=zeros(1,50); %注意：MATLAB中数组下标从1开始<br>x(1)=1; %冲击函数<br>stem(x); %绘制函数图形</p>
<p>5.impulse<br>函数impulse（）将绘出由向量 a 和 b 表示的连续系统在指定时间范围内的冲激响应h(t)的时域波形图，并能求出指定时间范围内冲激响应的数值解。<br>impulse（）函数有如下四种调用格式：<br>（1）impulse(b,a)：该调用格式以默认方式绘出向量 A和B定义的连续系统的冲激响应的时域波形。<br>（2）impulse(b,a,t)：绘出系统在 0～t 时间范围内冲激响应的时域波形。<br>（3）impulse(b,a,t1:p:t2)：绘出在 t1~t2 时间范围内，且以时间间隔 p均匀取样的冲激响应波形。<br>（4）y=impulse(b,a,t1:p:t2)：不绘出波形，而是求出系统冲激响应的数值解。</p>
<p>6.step<br>step（）函数可绘出连续系统的阶跃响应 g(t)在指定时间范围的时域波形并能求出其数值解，和impulse（）函数一样也有四种调用格式。<br>（1）step(b,a)：该调用格式以默认方式绘出向量 A和B定义的连续系统的阶跃响应的时域波形。<br>（2）step(b,a,t)：绘出系统在 0～t 时间范围内阶跃响应的时域波形。<br>（3）step(b,a,t1:p:t2)：绘出在 t1~t2 时间范围内，且以时间间隔p均匀取样的阶跃响应波形。<br>（4）y=step(b,a,t1:p:t2)：不绘出波形，而是求出系统阶跃响应的数值解。</p>
<p>惊人相似有木有！impulse 和 step 一定是一家人~~</p>
<p>先说这么多。最近比较忙。</p>
<p><span id="busuanzi_container_page_pv"><br>本文已被阅读 <span id="busuanzi_value_page_pv"></span> 次。感谢您的点击！<br></span></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[hexo优化·年轻就是折腾]]></title>
      <url>http://hubojing.github.io/2015/11/10/hexo%E4%BC%98%E5%8C%96/</url>
      <content type="html"><![CDATA[<div align="left"><br><img src="http://7xray0.com1.z0.glb.clouddn.com/16-4-23/6883630.jpg" width="300" height="180" alt="配图" style="float:right;"><br><br><br><strong>说明：本博客会长期优化，因此将之前所写相关文章合并到同一篇中，按倒序编排，以便查询。</strong><br><br><br> </div>


<a id="more"></a>
<h1 id="2016-4-23更新"><a href="#2016-4-23更新" class="headerlink" title="2016.4.23更新"></a>2016.4.23更新</h1><h2 id="提交sitemap给google和百度"><a href="#提交sitemap给google和百度" class="headerlink" title="提交sitemap给google和百度"></a>提交sitemap给google和百度</h2><p>目的：使谷歌和百度能够搜索到本博客<br>测试：可在浏览器中输入<br>谷歌：<br>site:hubojing.github.io<br>百度：<br>site:hubojing.coding.me</p>
<p>效果：<br><img src="http://7xray0.com1.z0.glb.clouddn.com/16-4-23/57096767.jpg" alt="百度搜索"><br><img src="http://7xray0.com1.z0.glb.clouddn.com/16-4-23/13459328.jpg" alt="谷歌搜索"></p>
<p>说明：百度蜘蛛爬不了github的网址，所以只好将博客同步部署到coding。详细步骤见：<a href="http://hubojing.github.io/2016/04/06/%E5%B0%86hexo-github%E5%8D%9A%E5%AE%A2%E5%90%8C%E6%AD%A5%E6%89%98%E7%AE%A1%E8%87%B3coding/">将hexo-github博客同步托管至coding</a></p>
<p><strong>步骤</strong><br>百度提交sitemap:</p>
<h3 id="install"><a href="#install" class="headerlink" title="install"></a>install</h3><p>if your hexo version is 2.x.x, you should install as follow:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install hexo-generator-baidu-sitemap@0.0.8 --save</div></pre></td></tr></table></figure></p>
<p>if version is 3.x.x, you should install as follow:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install hexo-generator-baidu-sitemap@0.1.1 --save</div></pre></td></tr></table></figure></p>
<h3 id="Update"><a href="#Update" class="headerlink" title="Update"></a>Update</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ npm remove hexo-generator-baidu-sitemap</div><div class="line">$ npm install hexo-generator-baidu-sitemap --save</div></pre></td></tr></table></figure>
<h3 id="Options"><a href="#Options" class="headerlink" title="Options"></a>Options</h3><p>if your hexo version is 2.x.x, you can configure this plugin in _config.yml.<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">baidusitemap:</div><div class="line">    path: baidusitemap.xml</div></pre></td></tr></table></figure></p>
<p>if version is 3.x.x, you should configure this plugin in _config.yml.<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">baidusitemap:</div><div class="line">path: baidusitemap.xml</div></pre></td></tr></table></figure></p>
<p>path - Sitemap path. (Default: baidusitemap.xml)</p>
<h3 id="Errors"><a href="#Errors" class="headerlink" title="Errors"></a>Errors</h3><p>Maybe response is “hexo is not definded”,then you should:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">cd</span> node_modules/hexo-generator-baidu-sitemap/</div><div class="line">npm install</div></pre></td></tr></table></figure></p>
<p>谷歌的提交方法是类似的。</p>
<h1 id="2016-3-1更新"><a href="#2016-3-1更新" class="headerlink" title="2016.3.1更新"></a>2016.3.1更新</h1><h2 id="公共-独立空间评论切换"><a href="#公共-独立空间评论切换" class="headerlink" title="公共/独立空间评论切换"></a>公共/独立空间评论切换</h2><p>yelee/layout/_partial/article.ejs, 把 “key: post.path” 改为 “key: post.slug”，主题多说配置 domain: true<br>这样就恢复到 Yilia 的公共评论了。</p>
<h2 id="将“more”改为“阅读全文”"><a href="#将“more”改为“阅读全文”" class="headerlink" title="将“more”改为“阅读全文”"></a>将“more”改为“阅读全文”</h2><p>主题配置_config.yml里更改：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">excerpt_link: 阅读全文</div></pre></td></tr></table></figure></p>
<h1 id="2016-2-28更新"><a href="#2016-2-28更新" class="headerlink" title="2016.2.28更新"></a>2016.2.28更新</h1><p>这轮优化很多都挺成功，就是之前的评论都丢失了……桑心。欢迎大家留言安慰我^_^</p>
<h2 id="主题更换"><a href="#主题更换" class="headerlink" title="主题更换"></a>主题更换</h2><p>采取了更为美观的主题，并且有了文章内检索目录，我很喜欢。<br><strong>记得修改 Hexo 根目录对应配置文件。</strong><br>theme: yelee</p>
<h2 id="图片插入"><a href="#图片插入" class="headerlink" title="图片插入"></a>图片插入</h2><p>对于hexo，有两种方式：<br>1.使用本地路径：在hexo/source目录下新建一个img文件夹，将图片放入该文件夹下，插入图片时链接即为/img/图片名称。<br>2.使用微博图床，地址<a href="http://weibotuchuang.sinaapp.com" target="_blank" rel="external">http://weibotuchuang.sinaapp.com</a> ，将图片拖入区域中，会生成图片的URL，这就是链接地址。<br>以上是查找的资料。</p>
<h1 id="2016-3-1更新-1"><a href="#2016-3-1更新-1" class="headerlink" title="2016.3.1更新"></a>2016.3.1更新</h1><h2 id="本地图片插入问题解决"><a href="#本地图片插入问题解决" class="headerlink" title="本地图片插入问题解决"></a>本地图片插入问题解决</h2><p>效果：<img src="/images/test.jpg" alt="测试图片"><br>之前本地服务器浏览可以看到图片，但部署上去就无法加载。<br>这是因为!<a href="E:/hexo/source/images/test.jpg" target="_blank" rel="external">测试图片</a>是<strong>绝对地址</strong>。但有相关文章说绝对地址也是可以的，但我一直没有实现，这一点有待考察。<br>而上述成功用的是相对地址。!<a href="/images/test.jpg">测试图片</a>  </p>
<p>后来准备用七牛作图床，用极简图床真是特别方便……</p>
<h2 id="About-Page-关于我页面"><a href="#About-Page-关于我页面" class="headerlink" title="About Page 关于我页面"></a>About Page 关于我页面</h2><p>使用以下代码添加一个新页面：<br>$ hexo new page about</p>
<h2 id="Tags-Cloud-Page-标签云页面"><a href="#Tags-Cloud-Page-标签云页面" class="headerlink" title="Tags Cloud Page 标签云页面"></a>Tags Cloud Page 标签云页面</h2><p>$ hexo new page tags</p>
<h2 id="Comment-评论"><a href="#Comment-评论" class="headerlink" title="Comment 评论"></a>Comment 评论</h2><p>多说: <a href="http://duoshuo.com/create-site/" target="_blank" rel="external">http://duoshuo.com/create-site/</a> 登陆你的多说并创建站点，在 “domain” 中填入你设定的域名的前半部分。比如完整域名是:  <a href="http://ABC.duoshuo.com" target="_blank" rel="external">http://ABC.duoshuo.com</a> ，只需填入  ABC  即可。<br>我之前就没设置站点……不知道还能不能找回来评论？</p>
<h2 id="主页链接"><a href="#主页链接" class="headerlink" title="主页链接"></a>主页链接</h2><p>我把我网易云音乐的主页链接放上来了，欢迎大家和我交流<strong>轻音乐</strong>。（移动端看不到我的主页，只有PC端可以看到。）</p>
<h2 id="细节"><a href="#细节" class="headerlink" title="细节"></a>细节</h2><p>一些细节改变挺多，不知道看过我之前博客样子的访客能找到多少改变之处？欢迎评论。</p>
<h1 id="2015-11-10更新"><a href="#2015-11-10更新" class="headerlink" title="2015.11.10更新"></a>2015.11.10更新</h1><h2 id="关于主题"><a href="#关于主题" class="headerlink" title="关于主题"></a>关于主题</h2><p><strong>安装</strong><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ git <span class="built_in">clone</span> git@github.com:XXX/xxx.git themes/xxx</div></pre></td></tr></table></figure></p>
<p><strong>更新</strong><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ <span class="built_in">cd</span> themes/xxx</div><div class="line">$ git pull</div></pre></td></tr></table></figure></p>
<h2 id="关于统计"><a href="#关于统计" class="headerlink" title="关于统计"></a>关于统计</h2><p>两种方法：<br>1.google/baidu统计<br>google登不上去，就用百度吧。先去百度统计注册一个账号，把你的域名输入作为被统计的网页。<br>它会自动生成一段代码，复制下来。<br>在主题下的_config.yml添加：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ baidu_tongji: <span class="literal">true</span></div></pre></td></tr></table></figure></p>
<p>接着，在主题目录下的layout\ _partial找到head.ejs<br>打开它，在 &lt; head&gt; 和 &lt; /head&gt; 中粘贴代码即可。</p>
<p>2.不蒜子<br><a href="http://ibruce.info/2015/04/04/busuanzi/" target="_blank" rel="external">不蒜子</a><br>两行代码解决。只不过只能显示总人数或每篇文章浏览数。</p>
<h2 id="网站小图标"><a href="#网站小图标" class="headerlink" title="网站小图标"></a>网站小图标</h2><p>把.ico图标放入<strong>themes主题里</strong>的source目录下！<br>推荐<a href="http://www.bitbug.net/" target="_blank" rel="external">比特虫</a>，在线制作图标。<br>同时加入代码。</p>
<h2 id="categories、tags"><a href="#categories、tags" class="headerlink" title="categories、tags"></a>categories、tags</h2><p>在主题目录的_config.yml中修改成 XXX: /categories/XXX 或 XXX: /tags/XXX<br><strong>注意空格和英文的冒号。</strong></p>
<h2 id="更改相关字体、颜色等细节"><a href="#更改相关字体、颜色等细节" class="headerlink" title="更改相关字体、颜色等细节"></a>更改相关字体、颜色等细节</h2><p>这个简单，找到hexo\themes\light\source\css_partial\main.styl,里面就是基本构架，就是代码有点长，耐心找找。</p>
<p>以上。</p>
<h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><p><a href="http://ibruce.info/2015/04/04/busuanzi/" target="_blank" rel="external">不蒜子</a><br><a href="http://www.tuicool.com/articles/7rIbuen/" target="_blank" rel="external">为hexo主题添加多种图片样式</a><br><a href="http://blog.fens.me/hexo-blog-github/" target="_blank" rel="external">hexo在github上构建免费的Web应用</a><br><a href="http://yotuku.cn/" target="_blank" rel="external">极简图床</a><br><a href="http://www.netcan666.com/2015/11/22/%E8%A7%A3%E5%86%B3Hexo%E7%BD%AE%E9%A1%B6%E9%97%AE%E9%A2%98/" target="_blank" rel="external">解决hexo置顶问题</a><br><a href="https://github.com/hexojs/hexo/wiki/Themes/" target="_blank" rel="external">hexo全部模板</a><br><a href="http://www.bitbug.net/" target="_blank" rel="external">比特虫</a><br><a href="http://www.tuicool.com/articles/AfQnQjy/" target="_blank" rel="external">hexo你的博客</a><br><a href="https://github.com/coneycode/hexo-generator-baidu-sitemap" target="_blank" rel="external">Sitemap generation</a><br><a href="http://www.tuicool.com/articles/YneiAzy" target="_blank" rel="external">Hexo ：（三）高级进阶</a><br><a href="http://www.tuicool.com/articles/fYZ7Zrj" target="_blank" rel="external">hexo主题中添加相册功能</a></p>
<p><span id="busuanzi_container_page_pv"><br>本文已被阅读 <span id="busuanzi_value_page_pv"></span> 次。感谢您的点击！<br></span></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[hexo+github博客搭建中出现的问题及解决方法]]></title>
      <url>http://hubojing.github.io/2015/11/06/hexo+github%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E4%B8%AD%E5%87%BA%E7%8E%B0%E7%9A%84%E9%97%AE%E9%A2%98%E5%8F%8A%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/</url>
      <content type="html"><![CDATA[<p><div align="left"><br><img src="http://cms.csdnimg.cn/article/201303/07/513845b040c30.jpg" width="300" height="180" alt="配图" style="float:right;"></div></p>
<p>【查看全文请注意<strong>前方高能</strong>】<br>【WARNING!】</p>
<p> <br> <a id="more"></a> </p>
<ul>
<li>2016.8.28更新 Update</li>
</ul>
<h1 id="插件"><a href="#插件" class="headerlink" title="插件"></a>插件</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">npm install hexo-generator-index --save</div><div class="line">npm install hexo-generator-archive --save</div><div class="line">npm install hexo-generator-category --save</div><div class="line">npm install hexo-generator-tag --save</div><div class="line">npm install hexo-server --save</div><div class="line">npm install hexo-deployer-git --save</div><div class="line">npm install hexo-generator-sitemap --save</div><div class="line">npm install hexo-generator-feed --save</div><div class="line">npm install hexo-git-backup --save</div></pre></td></tr></table></figure>
<p><a href="https://hexo.io/plugins/" target="_blank" rel="external">hexo插件</a></p>
<ul>
<li>2016.4.7更新 Update<br>每次hexo d之后都要输入密码，很影响心情，于是决定重新设定SSH，这次不再设定密码。现把流程记录下来备忘。<br>It affects mood to input password everytime I execute hexo d.So I decide to reset SSH and no password.Now write the steps down.</li>
</ul>
<h1 id="几条重要指令-Several-important-instructions"><a href="#几条重要指令-Several-important-instructions" class="headerlink" title="几条重要指令 Several important instructions"></a>几条重要指令 Several important instructions</h1><p>查看是否存在SSH文件。<br>To cheak if SSH file exists.<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ls -al ~/.ssh</div></pre></td></tr></table></figure></p>
<p>存在的话，直接删除.ssh文件夹里面所有文件，同时在github上删除SSH。<br>Delete all the files if it exist and delete SSH on the github.</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ssh-keygen -t rsa -C <span class="string">"4177997456@qq.com"</span></div></pre></td></tr></table></figure>
<p>回车三次（因为密码为空）。<br>Press enter three times(for keyword is empty).</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ssh-agent <span class="_">-s</span></div></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ssh-add ~/.ssh/id_rsa</div></pre></td></tr></table></figure>
<p>出错。Something wrong.<br>换成 Change into<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">eval</span> `ssh-agent <span class="_">-s</span>`</div><div class="line">ssh-add</div></pre></td></tr></table></figure></p>
<p>完成。Finish.<br>可以直接打开.ssh文件夹里的id_rsa.pub复制全部内容，也可以输入<br>You can copy id_rsa.pub in the .ssh file,or input<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">clip &lt; ~/.ssh/id_rsa.pub</div></pre></td></tr></table></figure></p>
<p>然后在github里设置好SSH即可。<br>then set SSH on the github.<br>最后测试一下：<br>Test it finally,<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ssh -T git@github.com</div></pre></td></tr></table></figure></p>
<p>如果出现 <img src="http://7xrn7f.com1.z0.glb.clouddn.com/16-4-7/51107885.jpg" alt="成功画面"> 证明设置好了。<br>If it shows<img src="http://7xrn7f.com1.z0.glb.clouddn.com/16-4-7/51107885.jpg" alt="sucess"> that all is done.</p>
<p>然而……<br>However~<br>依！然！报！错！<br>Still wrong!<br><img src="http://7xrn7f.com1.z0.glb.clouddn.com/16-4-7/11484824.jpg" alt="报错画面wrong"></p>
<p>这是为什么……在hexo d好几次后的我凌乱在风中……<br>WHY?!After several times hexo d,I was messy in the wind~<br>但我没有放弃……毕竟不能把博客玩废啊是不是:-D<br>But I’m never give up~I can’t destory my blog after all :D</p>
<p>我想起来昨天把博客同步托管在github和coding上了。<br>I remind of having got my blog hosted on GitHub and coding yesterday.<br>因为我的repo先写的coding，再写的github，所以服务器先连接coding，后连接github！！！<br>My repo place coding to the front,so the sever links coding first,then the github!!!</p>
<p><strong>两个托管网站都要设置好SSH之后，才能顺利部署！</strong><br><strong>Only two host webs be setted SSH,can it be well deployed!</strong></p>
<p>完工！<br>Finish!<br>再也不用打密码啦~say goodbye to you~<br>Never using password~</p>
<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="298" height="52" src="http://music.163.com/outchain/player?type=2&id=27896490&auto=1&height=32"></iframe>



<ul>
<li>2015.11.06更新 Update<br>今天建好了大体的框架，细节还需不断调整。现把我搭建过程中出现的若干问题以及解决方案写下来，方便自己及读者不再为这些地方犯难。<br>Today the frame generally build,and details needs improving. Now I note my problems and solutions for the readers no longer to puzzle again.</li>
</ul>
<h1 id="安装-Install"><a href="#安装-Install" class="headerlink" title="安装 Install"></a>安装 Install</h1><p>安装顺序不要错，出现WARN不用管。<br>Installation sequence is important,and you can ignore the warning in the process.<br>我们都知道需要安装git和node.js，然后才能安装hexo。<br>We know that git and node.js are needed,and then hexo can be installed.<br>简单介绍：Hexo 是一个快速、简洁且高效的基于Node的静态博客框架。<br>In brief,hexo is a fast, simple and efficient static blog framework which bases on Node.<br>按理来说，从官网把软件下载下来安装，一路next就行。<br>Having downloaded the software and installed,and then you just click “next”.<br>打开git bash命令行，输入：<br>Input this in the git bash:</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ npm install -g hexo-cli</div></pre></td></tr></table></figure>
<p>这时会发现，和很多教程所授不同啊！出现了多个WARN。不要慌！WARN可以不用管。我当时查了很久，怎么才能不WARN，后来发现其实不影响之后的搭建。<br>At this moment you will puzzle that it is different with many tutorials.It turns out some warning!Calm down,guys,you can ignore them.It doesn’t matter.</p>
<h1 id="开始建站-Set"><a href="#开始建站-Set" class="headerlink" title="开始建站 Set"></a>开始建站 Set</h1><p>建站前直接在目标盘建立一个hexo文档，对hexo右键git bash。<br>At first,you should create a hexo file,and git bash with right click.<br><strong>记住一定在目标目录里建站！</strong><br><strong>Remember to set your blog in the target file!</strong><br>一开始我不清楚，点击桌面上的git bash就输命令，后来都不好找hexo文件在哪，严重影响之后的体验！<br>I made the mistake that git bash on the desktop,which resulted in the loss of hexo file.It’s bad for later set.<br>之后同样的，npm加到目标目录中！<br>And then,the same,add npm to the target file!</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ npm install</div></pre></td></tr></table></figure>
<p>就这三步，本地的网站其实就建立好了！看起来好简单！运气不好的话就会像我一样，卡在最开始耽误了很多时间。<br>Having done these three steps,our local web is already set!Is it really easy?But you may waste much time as I did.</p>
<h1 id="本地预览-Local-preview"><a href="#本地预览-Local-preview" class="headerlink" title="本地预览 Local preview"></a>本地预览 Local preview</h1><p>因为在Hexo 3.0后server被单独出来了,需要安装server,记住打下面一行代码：<br>Because server was divided after hexo 3.0,you should install server,and remember these code,<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ npm install hexo-server --save</div></pre></td></tr></table></figure></p>
<p>之后是：<br>and then,<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure></p>
<p>本地端口已经打开，通过浏览器访问<a href="http://localhost:4000/" target="_blank" rel="external">http://localhost:4000/</a> 可以看到网站。<br>The local port has set,and you can cheak on <a href="http://localhost:4000/" target="_blank" rel="external">http://localhost:4000/</a> through browser.</p>
<h1 id="注意细节-Pay-attention-to-details"><a href="#注意细节-Pay-attention-to-details" class="headerlink" title="注意细节 Pay attention to details"></a>注意细节 Pay attention to details</h1><p>下载一个编辑器，我下载的是Sublime Text 2，一定要有编辑器，否则很多属性不能修改。<br>To download a editor.What I use now is Sublime 2.You need a editor for modify attributes.<br>找到hexo文件夹，打开_config.yml，这里面就是网站的配置信息。具体配置hexo讲的很明白，我就不解释了。<br>The _config.yml in the hexo file is the web configuration information.The specific configuration I won’t say it here.<br>我刚开始就是胡乱搭建，找不到hexo文件，更不用谈之后的配置。这里要擅用电脑里的文件搜索，有它还是可以方便的找出文件。<br>I structures it at random at first,because I couldn’t find hexo file.A good tip is to use file search to find what you want conveniently.<br>Hexo采用markdown语法格式书写博客，其中我们的博文就放在source里的_posts目录。<br>Hexo uses markdown grammer to write,and our articles are saved in the _posts file.</p>
<h1 id="写新文章-Create-a-new-article"><a href="#写新文章-Create-a-new-article" class="headerlink" title="写新文章 Create a new article"></a>写新文章 Create a new article</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new title</div></pre></td></tr></table></figure>
<p>其中title为你的博文文件的文件名，不一定是博文的标题，只要自己看得懂就行。然后点开source里的_posts目录，打开title.md，我们就可以在里面进行写作了。当然，有一些语法规定及格式要求，我也还在学习中。<br>The title is your article file name,not your article name,so just you understand is alright.</p>
<p>之后需要静态化页面：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>
<p>hexo部署：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure></p>
<p>此时本地站点大体搭建好了。<br>Now the local site is set.</p>
<p><strong>如果配置_config.yml出错，本地网站是一定搭不好的！</strong><br><strong>If the _config.yml is wrong,your site can’t be create.</strong><br><strong>而_config.yml中比较难发现的就是，每一个红体单词冒号后要空格！！！</strong><br><strong>The detail easy to overlook is that there leaves a blank space after colon!!!</strong></p>
<p>接下来把网站部署到github上。<br>The following thing is to deploy the site on the github.<br>当然首先去github上注册个账号。<br>At the beginning,you should have a github account.<br>再建立一个新的repositories。名称是username.github.io，这也是最终搭建好的博客的链接地址。<br>Then you should create a new repositories,which name is username.github.io,and it is your blog link address.</p>
<h1 id="不要用github的自动页面生成器-Do-not-use-the-github-automatic-page-generator"><a href="#不要用github的自动页面生成器-Do-not-use-the-github-automatic-page-generator" class="headerlink" title="不要用github的自动页面生成器 Do not use the github automatic page generator"></a>不要用github的自动页面生成器 Do not use the github automatic page generator</h1><p>尤其初学者！否则之后的hexo博客很难部署上去！<br>Exspecially a beginer!<br>如果已经用了自动页面生成器，可以删除这一个repositories，再新建一个。<br>If you use it already,you can delete this repositories,and create another.<br>在完成上述操作后，到Hexo文件夹下的_config.yml文件，将最下方的deploy部分修改为<br>After all the steps done,revise the deploy of the _config.yml as<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ deploy</div><div class="line">	<span class="built_in">type</span>: git</div><div class="line">	repo: git@github.com:username/username.github.io.git</div></pre></td></tr></table></figure></p>
<p><strong>每个冒号后有一个空格！！！</strong><br><strong>There leaves a blank space after each colon!!!*</strong><br>到此，github配置完成。<br>So much for that,the deploy is done.</p>
<p>现在要把hexo和github联系在一起，还需要SSH。<br>If hexo links to github,SSH is needed.<br>首先,打开git bash:<br>Open git bash,</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ git config --global user.name <span class="string">"XXX"</span></div><div class="line">$ git config --global user.email <span class="string">"XXXXXX@mail.com"</span></div></pre></td></tr></table></figure>
<p>邮箱是你注册github的邮箱。<br>The e-mail is your github e-mail.<br>生成密钥：<br>Create private key,<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ ssh-keygen -t rsa -C “XXXXXX@mail.com”</div></pre></td></tr></table></figure></p>
<p>然后设置路径，最好不要更改id_rsa和id_rsa.pub的名字。<br>Set path,and don’t change id_rsa and id_rsa.pub name.<br>密码可有可无(最好无)，但输入时你也看不到自己输的密码的。<br>The password is not esstial(none maybe convinent),but you can’t see it when you enter the code.<br>登录github，在右上角settings（不是repositories里的settings）有SSH keys。<br>Then you sign in the github,and finds SSH keys in the setting(not setting in the repositories).<br>复制你设置路径里的id_rsa.pub用编辑器打开得到的代码，粘贴到SSH keys，标题自定义。<br>Copy your code in the id_rsa.pub,and paste it to SSH keys.Customizable title is needed.<br>验证：<br>Verity,</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ ssh -T git@github.com</div></pre></td></tr></table></figure>
<p>一般来说，是会报错的。Permission denied (publickey).让多少人揪心的一句话。<br>Generally,something goes wrong.”Permission denied (publickey)”,may let you not happy.</p>
<h1 id="复制公钥-Copy-public-key"><a href="#复制公钥-Copy-public-key" class="headerlink" title="复制公钥 Copy public key"></a>复制公钥 Copy public key</h1><p>用计算机搜索文件.ssh文件，找出目标路径，之前设置的id_rsa和id_rsa.pub复制到这里来！<br>Search .ssh file in the computer,and paste id_rsa and id_rsa.pub to it.<br>同时，如果多次设置SSH，最好把其中一个known开头的文件里前几次的公钥清空。<br>If you set SSH many times,you’d better clear the previous public key in the known-start file.<br>成功的标志：<br>The success sign,<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ Hi username! You<span class="string">'ve successfully authenticated, but GitHub does not provide shell access.</span></div></pre></td></tr></table></figure></p>
<p>最后，<br>In the end,<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ npm install hexo-deployer-git --save</div><div class="line">$ hexo deploy</div></pre></td></tr></table></figure></p>
<h1 id="基本指令-Basic-instructions"><a href="#基本指令-Basic-instructions" class="headerlink" title="基本指令 Basic instructions"></a>基本指令 Basic instructions</h1><p>每次修改或者发文后，这两条命令一定要打，否则博客不能更新：<br>Everytime you revise or create a article,two instrucions are needed,or your post can’t be updated.<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div><div class="line">$ hexo deploy</div></pre></td></tr></table></figure></p>
<p>$ hexo server 为在本地端口打开。<br>(简记abbreviation   hexo g   hexo s   hexo d)<br>期间还遇到一些小问题，不典型，就不说啦。总之，初学者刚开始搭建一定要有耐心，我仅是node.js就重装了五遍以上，有时候看教程很复杂，其实一步步做不难！不要放弃！跟着一个教程做出现问题时，及时在网上寻求答案，查看其它的教程。我在搭建此博客时，查阅的教程几十种了，很多人的方法很好，也算是走捷径了！<br>There exists many small problems in the process.In short,the patience is vital during the course.According to me,I reset node.js for more than five times.The tutorial maybe complex,but you can feel easy if you do it step by step!Never give up!When any problem arise,it is useful to search solutions on the internet or looking up in another tutorial.I call the tips a shortcut.</p>
<p>以上，就是我搭建过程中出现的问题及解决方案。<br>Above,it is the problems and solutions in the process.</p>
<hr>
<h1 id="参考资料-Reference-material"><a href="#参考资料-Reference-material" class="headerlink" title="参考资料 Reference material"></a>参考资料 Reference material</h1><p>1.<a href="http://d12mnit.github.io/2015/10/13/hexo%E4%B8%8Egithub_pages%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E6%95%99%E7%A8%8B/" target="_blank" rel="external">hexo与github_pages搭建博客教程</a><br>2.<a href="http://www.tuicool.com/articles/AfQnQjy/" target="_blank" rel="external">hexo你的博客</a><br>3.<a href="http://www.jianshu.com/p/ba76165ca84d" target="_blank" rel="external">hexo干货系列（一）</a></p>
<hr>
<p><span id="busuanzi_container_page_pv"><br>本文已被阅读 <span id="busuanzi_value_page_pv"></span> 次。感谢您的点击！<br>The article has been viewed <span id="busuanzi_value_page_pv"></span> times.Thank you for your visit!<br></span></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Hello World！]]></title>
      <url>http://hubojing.github.io/2015/11/06/Hello%20World/</url>
      <content type="html"><![CDATA[<div align="left"><br><img src="http://7xray0.com1.z0.glb.clouddn.com/16-5-13/17269536.jpg" width="300" height="180" alt="配图" style="float:right;"><br><br><br><strong>利用一周零零碎碎的时间搭建起来，使用hexo在github上的个人独立博客初见雏形。</strong><br><br><br> </div>


<a id="more"></a> 
<p>作为一名通信人，始终要记住科学技术是第一生产力！<br>大三已至，也算入了互联网+通信领域的门。入门不难，深造不易。将把自己在学习中和实践中的技术经验以及点滴收获记录下来，作为自己在技术之路的见证和成长。<br>读者可以随时在文章下方评论，以及与我联系，欢迎学术交流，难题沟通，批评指正，尤其是专业相关（比如数模电）、数学方面（数学虐我千百遍，我待数学如初恋[笑]）。自觉天资不高，但对于技术，心向往之，但愿各位指点一二。</p>
<p>I manage to find time to build this blog for a week,which used hexo static frame on the github,and it is finished preliminarily.<br>As a Communication man,we should always keep in mind that science and technology are primary productive force!<br>I’m already learn elementary courses since I’m a junior student today. To cross the threshold is not difficult, but mastery is another question.Therefore,I will take notes on the blog through the learning and practice process,to witness my growth on the way.<br>Readers can commit on the bottom of the article,and contact with me.Welcome academic exchange and question communication.You can oblige me with your valuable comments about major related(digital electronic technology or analog electronic technology,for instance),especially math problem(^_^I am fond of mathematic).I’m not talent,but I’m adore of IT.I would appreciate it if you give me some guidance.</p>
<p><strong>Talk is cheap,show me the code!</strong><br><strong>Just do IT！</strong></p>
<!--more-->
<p><span id="busuanzi_container_page_pv"><br>本文已被阅读 <span id="busuanzi_value_page_pv"></span> 次。感谢您的点击！<br></span></p>
]]></content>
    </entry>
    
  
  
</search>
