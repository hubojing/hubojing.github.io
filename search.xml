<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[组装PC]]></title>
      <url>http://hubojing.github.io/2017/09/17/%E7%BB%84%E8%A3%85PC/</url>
      <content type="html"><![CDATA[<div align="left"><br><img src="https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1505674422344&di=a8ab789e32fb918dff6341a7ca58a94b&imgtype=0&src=http%3A%2F%2Fpica.nipic.com%2F2007-08-07%2F20078717255666_2.jpg" width="300" height="180" style="float:right;"><br><br> 目标：高性能<br>要求：大型游戏（看门狗系列……）、程序员办公需求（编译速度提升）、能做和3D有关的工作<br>所需设备： 除显示器、主机机箱、键鼠、音响、散热器暂不考虑外的一切硬件。<br>预算：暂定5k~6k吧，优先考虑性能<br><br><br>看了一下午，列个清单：<br>CPU：<br>锐龙 AMD Ryzen 7 1700 处理器8核AM4接口 3.0GHz 盒装<br>京东价：2199<br>链接：<a href="https://item.jd.com/3885181.html" target="_blank" rel="external">https://item.jd.com/3885181.html</a><br><br>主板：<br>华硕（ASUS）TUF B350M-PLUS GAMING 主板（AMD B350/socket AM4）<br>京东价：799<br>链接：<a href="https://item.jd.com/5001445.html#crumb-wrap" target="_blank" rel="external">https://item.jd.com/5001445.html#crumb-wrap</a><br><br>或<br><br>技嘉（GIGABYTE）AB350M-Gaming 3 主板 (AMD B350/Socket AM4)  （送散热+硅胶）<br>京东价：699<br>链接：<a href="https://item.jd.com/4482434.html#none" target="_blank" rel="external">https://item.jd.com/4482434.html#none</a><br><br>内存条：<br>十铨（Team） DDR4 2400 4GB 台式机内存   两根<br>京东价：279*2=558<br>链接：<a href="https://item.jd.com/1801667.html" target="_blank" rel="external">https://item.jd.com/1801667.html</a><br><br>或<br>十铨（Team） DDR4 2400 8GB 台式机内存  一根（以后再双通道）<br>京东价：509<br><a href="https://item.jd.com/1801660.html" target="_blank" rel="external">https://item.jd.com/1801660.html</a><br><br>本想8Gx2的，可是现在的内存条是不是太贵了点。。。<br><br>独立显卡：<br>七彩虹（Colorful）iGame1060 烈焰战神S-6GD5 Top GTX1060 1594-1809MHz/8008MHz 6G/192bit GDDR5游戏显卡<br>京东价：2099<br>链接：<a href="https://item.jd.com/3342660.html#crumb-wrap" target="_blank" rel="external">https://item.jd.com/3342660.html#crumb-wrap</a><br><br>硬盘：<br>西部数据(WD)日常存储解决方案 (蓝盘1TB HDD + Green系列120G SSD)<br>京东价：666<br><a href="https://item.jd.com/4242118.html" target="_blank" rel="external">https://item.jd.com/4242118.html</a><br><br>电源：<br>长城（GreatWall） 额定600W HOPE-7000DS电源 （60cm超长输出线/主动式PFC/静音风扇）<br>京东价：369<br>链接：<a href="https://item.jd.com/1237194.html" target="_blank" rel="external">https://item.jd.com/1237194.html</a><br><br>散热硅胶：<br><del>酷冷至尊（CoolerMaster）黄金导热硅脂</del><br><del>京东价：19.9</del><br><del>链接：<a href="https://item.jd.com/100391.html" target="_blank" rel="external">https://item.jd.com/100391.html</a></del><br>还是电脑维修店里几块钱的便宜……<br><br>总计：6690<br><br><br><del>卡吧逛一圈，感叹一秒土豪之多，50万跑分入不了门</del><br>观望一段时间，看看有没有更合理（低价又不失性能）的配置。<br>总之未来要吃土<br>　　<br><br><br> </div>

<a id="more"></a>
]]></content>
      
        <categories>
            
            <category> 通信工程 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 装机 </tag>
            
            <tag> 硬件 </tag>
            
            <tag> 数码 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[网件R7000评测]]></title>
      <url>http://hubojing.github.io/2017/09/12/%E7%BD%91%E4%BB%B6R7000%E8%AF%84%E6%B5%8B/</url>
      <content type="html"><![CDATA[<div align="left"><br><img src="https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1505329097424&di=d41ee8551a7dc53b1862bbb892050dfc&imgtype=0&src=http%3A%2F%2Fwww.happysm.cn%2Fupfile%2Fproimage%2F201512914511662165.jpg" width="300" height="180" style="float:right;"><br><br> 等了一个月不降价，昨天到货今天就降价。。。。。。<br>　　<br><br><br> </div>

<a id="more"></a>
<p>前言：11日到货，12日凌晨R8000就降价，比R7000只贵100元。 求我的心理阴影面积？</p>
<h1 id="开包"><a href="#开包" class="headerlink" title="开包"></a>开包</h1><p><img src="http://img.blog.csdn.net/20170912233339989?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="包裹"><br>评测文里总是要拍一下包装，来证明自己是亲测不是盗图。。。。。。（忽略粉粉的码）</p>
<h1 id="实物"><a href="#实物" class="headerlink" title="实物"></a>实物</h1><p><img src="http://img.blog.csdn.net/20170912233557678?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="正面"><br><img src="http://img.blog.csdn.net/20170912233625250?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="背面"><br><img src="http://img.blog.csdn.net/20170912233654422?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="开盒"><br><img src="http://img.blog.csdn.net/20170912233722773?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="内含"><br><img src="http://img.blog.csdn.net/20170912233759091?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="接口"><br><img src="http://img.blog.csdn.net/20170912233833433?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="外观"></p>
<p>AC1900智能无线路由器R7000 × 1 天线 × 3 安装指导 × 1 电源适配器 × 1<br><strong>实拍，无滤镜，无P图！让你看到一个真实的关机状态没绚丽闪光的买家秀。</strong></p>
<p>不拍了，安路由器五分钟，拍照半小时……</p>
<h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><ol>
<li>把天线装上<br>只能逆时针旋转……这个反人道的设计</li>
<li>拔掉原来的路由器</li>
<li>拔掉光猫电源</li>
<li>再插上光猫电源（why？重新接入网路？）</li>
<li>连上新路由器</li>
<li>插上新路由器电源</li>
<li>按下新路由器开关</li>
<li>等待指示灯闪到正常</li>
<li>连上网线<br>这样就安好了…</li>
</ol>
<h1 id="设置"><a href="#设置" class="headerlink" title="设置"></a>设置</h1><p>打开浏览器，第一次会自动进入，以后需输入：www.routerlogin.net访问。<br>傻瓜式设置（二次截图使图片有些高糊）：<br><img src="http://img.blog.csdn.net/20170913000131365?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="1"><br><img src="http://img.blog.csdn.net/20170913000248884?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="2"><br><img src="http://img.blog.csdn.net/20170913231227081?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="3"><br><img src="http://img.blog.csdn.net/20170913231323903?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="4"><br><img src="http://img.blog.csdn.net/20170913231442361?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="5"><br><img src="http://img.blog.csdn.net/20170913231514495?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="6"><br><img src="http://img.blog.csdn.net/20170913231547902?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="7"><br><img src="http://img.blog.csdn.net/20170913231645967?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="8"><br><img src="http://img.blog.csdn.net/20170913231726620?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="9"><br><img src="http://img.blog.csdn.net/20170913231813695?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="10"><br><img src="http://img.blog.csdn.net/20170913231906606?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="11"><br><img src="http://img.blog.csdn.net/20170913232002043?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="12"><br><img src="http://img.blog.csdn.net/20170913232058110?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="13"><br><img src="http://img.blog.csdn.net/20170913232143914?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="14"><br><img src="http://img.blog.csdn.net/20170913232501930?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="15"><br><img src="http://img.blog.csdn.net/20170913233050401?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="16"><br><img src="http://img.blog.csdn.net/20170913233159198?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="17"><br><img src="http://img.blog.csdn.net/20170913233247869?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="18"><br><img src="http://img.blog.csdn.net/20170913234326095?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="19"></p>
<h1 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h1><p>抱着了解的态度，不能当小白…</p>
<p>AC1900 Nighthawk R7000 双频千兆无线路由器<br>博通双核1G处理器  256M内存  并发双频  5个千兆端口 USB3.0  双USB接口 动态QoS  ReadyCLOUD</p>
<p>网件R7000上市时间是2014年6月<br>R7000P上市时间是2017年<br>R8500上市时间是2015年末<br>R9000上市时间是2016年</p>
<p>接着了解一些参数：<br>传输频段：<br>2.4G频段和5G频段:<br>2.4G 穿透性好 传输距离近<br>5G穿透性差 传输距离远</p>
<p>R7000 2.4G最高600M(200Mbps x 3)<br>5G最高1300M（433Mbps x 3）<br>（电视能搜到5G频段、笔记本却搜不到…）</p>
<p>无线桥接：无线桥接技术是一种局域网络无线连接的技术，是无线射频技术和传统的有线网桥技术相结合的产物，它可以无缝地将相隔数十公里的局域网络连接在一起，创建统一的企业或城域网络系统。在最简单的网络构架中，网桥的以太网端口连接到局域网中的某个集线器或交换机上，信号发射端口则通过电缆和天线相连接；通过这样的方式实现网络系统的扩展。<br>无线路由器的好处是：无需连接网线，手机、电脑同时共享网络。缺点是：有效距离短，还会被墙壁等障碍物屏蔽或减弱讯号。简单地说就是使用多个路由器扩大无线网络的范围。</p>
<p>WPS：路由器中WPS是由Wi-Fi联盟所推出的全新Wi-Fi安全防护设定(Wi-Fi Protected Setup)标准，该标准推出的主要原因是为了解决长久以来无线网络加密认证设定的步骤过于繁杂艰难之弊病，使用者往往会因为步骤太过麻烦，以致干脆不做任何加密安全设定，因而引发许多安全上的问题。WPS用于简化Wi-Fi无线的安全设置和网络管理。它支持两种模式：个人识别码(PIN)模式和按钮(PBC)模式。只要网卡支持WPS，路由也支持，只要电脑上点击WPS配对，然后按一下路由器上的WPS系统会自动的在两个设备之间建立连接，这种方式比输入密码更方便，更安全。</p>
<p>Qos：QoS（Quality of Service）服务质量，是网络的一种安全机制, 是用来解决网络延迟和阻塞等问题的一种技术。 在正常情况下，如果网络只用于特定的无时间限制的应用系统，并不需要QoS，比如Web应用，或E-mail设置等。但是对关键应用和多媒体应用就十分必要。当网络过载或拥塞时，QoS 能确保重要业务量不受延迟或丢弃，同时保证网络的高效运行。QoS限速对局域网内各个IP地址进行流量控制，以达到稳定而优质的上网的目的。这个功能对局域网内使用P2P下载占用大量带宽的情形有非常好的改善。</p>
<p>传输标准：IEEE 802.11n；IEEE 802.11g；IEEE 802.11b；IEEE 802.11.ac；IEEE 802.11.a<br>这个没什么说的。。。</p>
<p>电源    12V 3.5A</p>
<p>内网穿透：内网穿透即NAT穿透，网络连接时术语，计算机是局域网内时，外网与内网的计算机节点需要连接通信，有时就会出现不支持内网穿透。就是说映射端口,能让外网的电脑找到处于内网的电脑,提高下载速度。不管是内网穿透还是其他类型的网络穿透，都是网络穿透的统一方法来研究和解决。端口映射，其实就是常说的NAT地址转换的一种，其功能就是把在公网的地址转翻译成私有地址， 采用路由方式的ADSL宽带路由器拥有一个动态或固定的公网IP，ADSL直接接在HUB或交换机上，所有的电脑共享上网。在局域网内部的任一PC或服务器上运行到花生壳内网穿透客户端，此时域名解析到的IP地址是局域网网关出口处的公网IP地址，再在网关处做端口映射指向监控设备即可。</p>
<p>R7000不支持内网穿透。</p>
<p>R7000P比R7000多一个MU-MIMO<br>MU-MIMO：“Multi-User Multiple-Input Multiple-Output”的缩写，“多用户多入多出技术”，让路由器同时与多个设备沟通的技术。</p>
<h1 id="网速测试"><a href="#网速测试" class="headerlink" title="网速测试"></a>网速测试</h1><p>100M光纤</p>
<p>1笔记本：<br><img src="http://img.blog.csdn.net/20170913000407719?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="laptop"></p>
<p>1台式：<br><img src="http://img.blog.csdn.net/20170913000445094?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="pc"></p>
<p>相比以前的TP老路由器，网速一脸满足…</p>
<p>一天下来，路由器有点发热。查了下，R7000是BCM芯片，ARM架构CPU，性能高但发热较大。三天线，比较公认的信号强覆盖广的一款家用路由，整体兼容性好。<br>另外，路由器还是白色好看（→_→）</p>
<hr>
<p>今天有个网易云好友私信我节日快乐。。。一脸懵圈，遂百度<br>9.13程序员节 一年中的第256天，2^8次方。。。。。。<br>好吧 节日快乐</p>
]]></content>
      
        <categories>
            
            <category> 通信工程 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 路由器 </tag>
            
            <tag> 评测 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[魅蓝Note6评测]]></title>
      <url>http://hubojing.github.io/2017/09/03/%E9%AD%85%E8%93%9DNote6%E8%AF%84%E6%B5%8B/</url>
      <content type="html"><![CDATA[<div align="left"><br><img src="https://gss0.baidu.com/7LsWdDW5_xN3otqbppnN2DJv/space/pic/item/962bd40735fae6cd608220ab05b30f2443a70fc1.jpg" width="300" height="180" style="float:right;"><br><br> 一篇如同水贴的评测。<br>　　<br><br><br> </div>

<a id="more"></a>
<p>评测对象：9月1日上新的魅族新品魅蓝note6<br>骁龙625 3GB+32GB 4000mAh<br>价格：1299<br>定位：青年良品  （翻译：又穷又天真）</p>
<h1 id="外观"><a href="#外观" class="headerlink" title="外观"></a>外观</h1><p><a href="https://www.meizu.com/note6/spec/?click=mmz_product_note6_dh_cs" target="_blank" rel="external">官方参数</a></p>
<p>图片一手拍摄，全无PS。<br>包装：<img src="http://img.blog.csdn.net/20170903155236962?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="外包装"></p>
<p>拆封1：<img src="http://img.blog.csdn.net/20170903155555203?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="拆封1"></p>
<p>拆封2：<img src="http://img.blog.csdn.net/20170903155856055?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="拆封2"></p>
<p>正面：<img src="http://img.blog.csdn.net/20170903164310296?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="正面"></p>
<p>背面：<img src="http://img.blog.csdn.net/20170903164058460?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="背面"><br>（就是忍不住想打个码）<br>名称解释：<br>TD-LTE，即LTE-TDD，Time Division Long Term Evolution（分时长期演进），LTE是基于OFDMA技术、由3GPP组织制定的全球通用标准，包括FDD和TDD两种模式用于成对频谱和非成对频谱。<br>IMEI，International Mobile Equipment Identity，是国际移动设备身份码的缩写，国际移动装备辨识码，是由15位数字组成的”电子串号”，它与每台移动电话机一一对应，而且该码是全世界唯一的。双卡双待手机会有两个IMEI，IMEI和IMSI存在一一对应的关系。因为双卡双待手机两个卡槽都能插SIM卡，在GSM蜂窝通信网络中被看作是集成在一起的两个设备，所以会被分配有2个IMEI码。<br>MEID，移动设备识别码(Mobile Equipment Identifier)是CDMA手机的身份识别码，也是每台CDMA手机或通讯平板唯一的识别码。通过这个识别码，网络端可以对该手机进行跟踪和监管。<br>输入 *#06# IMEI即手机串号。</p>
<p>问题来了，IMEI和MEID都可看作手机的身份证，区别在哪？<br>答：IMEI是GSM网络制式专用的身份编码，MEID是CDMA网络制式专用的身份识别编码，IMEI是一组纯数字的，而MEID是以字母开头的十六进制编码。使用不同制式的手机就会显示不同的码。</p>
<p>　当手机被盗的时候，如知道IEMI码，可以通过手机供应商进行手机锁定，即：获知被盗之后的手机号码，中止手机的通话功能，获知手机的方位。但……一般情况下，供应商不会对个人或单位提出的定位或锁定手机的请求进行受理。</p>
<p>SN码，Serial Number的缩写，有时也叫SerialNo，手机SN号一般指的是软件注册码信息，也就是产品序列号，产品序列是为了验证“产品的合法身份”而引入的一个概念，它是用来保障用户的正版权益，享受合法服务的；一套正版的产品只对应一组产品序列号。别称：机器码、认证码、注册申请码等。</p>
<p>使用Nano-SIM卡，真的麻烦……手残党还是不要自己剪卡了，得去营业厅更换。<br>SIM-&gt;microSIM-&gt;NanoSIM，为了优化内存和主板排布，更轻薄。<br>然后现实是……人们买了厂商费尽心思打造的更超薄的手机然后再去加个手机壳……so interesting</p>
<p>CMIIT ID，即无线电发射设备型号核准代码。</p>
<p>初始UI设计<img src="http://img.blog.csdn.net/20170903164644449?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="UI1"></p>
<p><img src="http://img.blog.csdn.net/20170903164802558?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="UI2"></p>
<p>可以看到，系统出厂安装的第三方软件：手机百度、京东、微博、今日头条、淘宝、秒拍。自带的软件例如音乐、视频、读书、便签、工具箱等应用还是做得很不错的，感觉魅族特制的音乐有点虾米风，UI做得还是很简洁的，挺耐看，就是评论不堪入目……另，工具箱里的镜子好评……</p>
<p>底部是经典的腰圆键，轻触返回上级，按压Home，长按压出语音助手。</p>
<p>存储：<img src="http://img.blog.csdn.net/20170903170610860?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="存储"></p>
<p>32G有29G总容量不错了，没有特别臃肿。不过可用才21G，自带软件还是挺占地。</p>
<p>P.S.可以截图的地方为什么要拍照？。。。突然地我问自己。不禁想起了这张图：<br><img src="http://img.blog.csdn.net/20170903172233366?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="吐槽截图"></p>
<h1 id="跑分"><a href="#跑分" class="headerlink" title="跑分"></a>跑分</h1><h2 id="鲁大师"><a href="#鲁大师" class="headerlink" title="鲁大师"></a>鲁大师</h2><p>现实配置：<br><img src="http://img.blog.csdn.net/20170903214636426?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="配置"></p>
<p>性能总分：<br><img src="http://img.blog.csdn.net/20170903173851837?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="总分"></p>
<p>这个分数还是配得起这个价钱吧。<br>CPU想让625赶上820，还是不可能的。<br><a href="http://www.mydrivers.com/zhuanti/tianti/01/" target="_blank" rel="external">手机CPU性能天梯图</a></p>
<p>体验总分：<br><img src="http://img.blog.csdn.net/20170903183533646?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="体验"></p>
<p>VR检测：<br><img src="http://img.blog.csdn.net/20170903183736693?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="VR"></p>
<h2 id="安兔兔"><a href="#安兔兔" class="headerlink" title="安兔兔"></a>安兔兔</h2><p>为了公平公正，自然不能只跑一个地方<br><img src="http://img.blog.csdn.net/20170903183949127?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="总分"></p>
<p>配置：<br><img src="http://img.blog.csdn.net/20170903185133658?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="配置"></p>
<p>手机设置里存储显示是29G，鲁大师和安兔兔都显示的是22G，有一丝诡异的感觉。。。相差的内存被空气吃掉了</p>
<p>再看一眼CPU<br><img src="http://img.blog.csdn.net/20170903185609876?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="CPU"></p>
<p>当然，还有官方拿出的“疾速双摄”……同时段小米也鼓吹“变焦双摄”……<br>主观来说不错，各种照相模式丰富，滤镜较多，贴纸都有了，不用安B612了……</p>
<p>所以为什么说这是一篇水贴的评测，因为我实在写不出“魅蓝Note6主摄引入只在旗舰机上出现的索尼IMX362/三星2L7模组，1200W+500W双彩后置镜头组合，F/1.9超大光圈。　除了双摄，算法方面，魅蓝耗费重金打造的虹软双摄技术，官方称可针对人像背景虚化和暗光多帧降噪功能进行优化，大幅提升虚化真实度。据悉，每台魅蓝Note6需支付1美元给虹软公司。但在实际体验过程中，虚化会抹掉一些前景细节，自然程度仍旧有待提升。Dual PD极速对焦技术，让Note6对焦速度快达0.03s，实际对比体验中，魅蓝对焦速度惊人，甚至超过iPhone 7。其他方面，在光亮条件下，Note6的色彩还原、高光曝光控制与白平衡都有着不错表现，更偏写实风格。但HDR合成反应速度较慢，且在自拍模式下，色彩饱和度不高。夜拍环境中，魅蓝表现噪点控制强、亮度高，但是亮度细节会有曝光过度的问题，暗部细节丰富。Note6的慢镜头功能提供给用户更有有趣的拍摄方式，但是该模式下，噪点明显偏多。”这都归结于我对摄影没有很多的研究。当然摄影听起来就很有艺术气息……</p>
<p>　游戏表现上，我觉得把玩王者荣耀不卡当成一个标杆是不科学的，因为一个几百块的手机都能做到。不过比较个帧率还是可行的。</p>
<p>都学小米搞饥饿营销……为什么不出4G+64G版？？？说好的1699在哪里？说好的蓝色在哪里……听说黑色也没了</p>
<p>总评：作为千元机，CPU、ROM、RAM、电池容量、相机像素这几个我看重的硬指标基本令人满意。以及，我不适合写软文。</p>
<p>规定1500左右的价位，其实就性价比而言，不追求品牌，只追求性能的话，360的N5S可能最佳（前提是官方参数是真实不参假的），奈何360全家桶实在让人望而生畏……小米同等价位的性能也是比较高的，但考虑到使用者之前深受小米折磨，于是不再考虑。联想性价比也高，可惜好像放弃手机这一块了。若只考虑品牌，华为或荣耀最佳。兼顾品牌和性能，又需上市时间较近，只剩魅族可选了。</p>
<p>最后，手机停留在我手上时间太短(2h)，无法检测电池和通话等耗时操作。</p>
<p>另外，我对一加5神机充满好奇，稳居各大评测前3是一种怎样的体验？</p>
]]></content>
      
        <categories>
            
            <category> 通信工程 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 评测 </tag>
            
            <tag> 手机 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[三维坐标旋转]]></title>
      <url>http://hubojing.github.io/2017/08/31/%E4%B8%89%E7%BB%B4%E5%9D%90%E6%A0%87%E6%97%8B%E8%BD%AC/</url>
      <content type="html"><![CDATA[<div align="left"><br><img src="https://ss0.bdstatic.com/94oJfD_bAAcT8t7mm9GUKT-xh_/timg?image&quality=100&size=b4000_4000&sec=1504196242&di=148a19814e3d8e2bc96751304edf53ba&src=http://a4.att.hudong.com/13/71/01300542856671145949714084001_s.jpg" width="300" height="180" style="float:right;"><br><br><br>由上一篇引发的续问。　　<br><br><br> </div>

<a id="more"></a>
<p>其实上一篇的想法都是为了这个问题进行铺垫：<br>已知任意三维坐标系中一条线上两点坐标AB，及该线绕A点任意方向旋转后B’的坐标，求B点经过怎样的变换（如先绕x轴旋转多少度，再绕y轴转多少度，再绕z轴绕多少度）得到B’。</p>
<p>弄清楚这个问题前，首先需要声明一点：<br><strong>三维空间中，旋转角不能单纯的认为是某点关于x、y、z轴的旋转角度的线性叠加。</strong></p>
<p>认清这一点后，就应老实放弃向每个平面做投影算旋转角的错误方法。</p>
<p>旋转说穿了是矩阵的相乘。</p>
<p>然后从特殊情况入手，再从特殊到一般。</p>
<p>特殊情况：<br>1.旋转轴是x轴<br>2.旋转轴是y轴<br>3.旋转轴是z轴</p>
<p>一般情况：<br>旋转轴是任意直线</p>
<p>推导过程网上很多资料，其中，绕x、y、z轴的公式见<a href="http://blog.miskcoo.com/2016/12/rotation-in-3d-space" target="_blank" rel="external">三维空间中的旋转</a> ，markdown写数学公式太麻烦了。</p>
<p>旋转轴是任意直线，参考<a href="http://blog.sina.cn/dpool/blog/s/blog_6541e59a0101kukr.html" target="_blank" rel="external">三维旋转矩阵的计算</a></p>
<p>回到开头问题，既然已知B和B’，和A三点组成一个面，求出它的法向量，结合BB’中垂线，可算出该点的旋转轴向量。将该向量平移到原点处，再使用欧拉角计算旋转向量，进而得到所需要的x、y、z轴旋转角度（这是有顺序的）。这种方法得到的角度如果旋转顺序不同，则得到的解不同。当然最后别忘了反平移回去。<br>四元数的形式看起来简单些，可惜四元数里的角度不是所希望的关于x、y、z轴的三个角度值。</p>
]]></content>
      
        <categories>
            
            <category> 互联网 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 3D </tag>
            
            <tag> 线代 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[三维坐标系变换]]></title>
      <url>http://hubojing.github.io/2017/08/29/%E4%B8%89%E7%BB%B4%E5%9D%90%E6%A0%87%E7%B3%BB%E5%8F%98%E6%8D%A2/</url>
      <content type="html"><![CDATA[<div align="left"><br><img src="https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1504032008394&di=e99e963bf5137db65c21d19b5589cb26&imgtype=0&src=http%3A%2F%2Fpic.58pic.com%2F58pic%2F16%2F55%2F89%2F38258PICNZn_1024.jpg" width="300" height="180" style="float:right;"><br> </div>

<p>关于三维坐标变换的一些思考。　<br>从两条相交直线说起。
　　
　　
　　</p>
<a id="more"></a>
<p>从最简单的情况入手，求空间两条相交直线AB、BC的夹角，AB和BC相交于B点，已知ABC三点三维坐标。<br>假设两条直线向量分别为a(x1,y1,z1),b(x2,y2,z2),根据公式cosα=a·b/(|a|*|b|)=(x1x2+y1y2+z1z2)/[√(x1^2+y1^2+z1^2)+√(x2^2+y2^2+z2^2)] 可直接求得。</p>
<p>情况变一变：<br>以此两条直线中的某一条为基准（为z’轴），求另一条直线关于基准线的x’、y’、z’轴（新的基准坐标系）夹角。</p>
<p>如果不用矩阵的做法，求解很复杂：<br>以AB为新的坐标系Z’轴为例，O为原坐标系原点。<br>B’(0,0,0)，可求AB点距离s，则A’(0,0,s)。这还是比较容易的，关键是求C’坐标。<br>首先要求z轴和AB之间的各种角度，想象从Z轴先延x轴平移绕x轴旋转，再延y轴平移绕y轴旋转，最后延z轴平移绕z轴旋转。同理，C点做同类运动，得到C’。<br>千辛万苦得到C’还没完，再将B’C’分别向x’o’y’、y’o’z’、z’o’x’面投影，求关于基准线的夹角。方可算出所求。</p>
<p>很明显，这种方法显然不适用在3D中。<br>这个问题其实等价于将世界坐标系转换为物体坐标系。,矩阵的作用就发挥广大。</p>
<p>令原坐标系为M=(i,j,k)T（转置），变换后N=(i’,j’,k’)T，i=(1,0,0),j=(0,1,0),k=(0,0,1)<br>原坐标系中一点P为(x,y,z)，则P’=((x,y,z)-O’)N^(-1)   N^(-1)指N的逆矩阵  (若N为正交矩阵，无需求逆矩阵，求转置矩阵即可。)</p>
<p>推导：∵P=O+(x,y,z)M=O’+(x’,y’,z’)N<br>∴(x’,y’,z’)=((x,y,z)M+(O-O’))N^(-1)<br>此时O’=(0，0，0),并带入M，则上式得证。</p>
<p>综上所述，讨论的情况实质就是进行了坐标系的转换。目的是求C’坐标，假设A(a1,b1,c1),B(a2,b2,c2),C(a3,b3,c3),那么根据公式C’=((a3,b3,c3)-(a2,b2,c2))N^(-1)，问题就转化为求N。记N=MK，K=M^(-1)N，也就是说，K是将i,j,k装换为i’,k’,j’的变换矩阵。<br>N^(-1)=(MK)^(-1)=K^(-1)M^(-1)<br>∴(x’,y’,z’)=((x,y,z)M+(O-O’))K^(-1)M^(-1)<br>=((x,y,z)+(-O’))K^(-1)  K=N</p>
<p>怎么求K呢？</p>
<p>可以参考这篇文章<a href="http://blog.csdn.net/jc_laoshu/article/details/69657579" target="_blank" rel="external">图形学1-三维坐标系间的变换矩阵推导</a></p>
<p>看似也挺麻烦，其实推导占据了大量篇幅，真正使用时直接套就好了。</p>
]]></content>
      
        <categories>
            
            <category> 互联网 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 3D </tag>
            
            <tag> 线代 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[古风自动造句器]]></title>
      <url>http://hubojing.github.io/2017/08/10/%E5%8F%A4%E9%A3%8E%E8%87%AA%E5%8A%A8%E9%80%A0%E5%8F%A5%E5%99%A8/</url>
      <content type="html"><![CDATA[<div align="left"><br><img src="https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1502983864&di=4ae6d79210dfb4ff7b9b0fd9c23807de&imgtype=jpg&er=1&src=http%3A%2F%2Fimg4.duitang.com%2Fuploads%2Fblog%2F201306%2F27%2F20130627144045_5KSSc.jpeg" width="300" height="180" style="float:right;"><br> </div>

<p>小桥流水肯定有人家，<br>两人对坐必须在饮茶。<br>为何提笔再难描绘出风雅。　　</p>
<p>一个C++古风自动写诗器。V1.1上线<br>【注意：有背景音乐！】</p>
<a id="more"></a>
<p>灵感来自<br><img src="http://img.blog.csdn.net/20170810230338826?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="古风"></p>
<p>今天看到这个，突然就想到文中提到的这个想法不难实现哇~那自己实现一个玩玩儿吧，主要就是个产生随机数的问题嘛~</p>
<h1 id="v10"><a href="#V1-0" class="headerlink" title="V1.0"></a>V1.0</h1><p>上代码：<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">void</span> CPoetryDlg::OnBnClickedOk()</div><div class="line">&#123;</div><div class="line">	<span class="comment">// <span class="doctag">TODO:</span>  在此添加控件通知处理程序代码</span></div><div class="line">	CStdioFile file;</div><div class="line">	CString strLine, strtemp;</div><div class="line">	<span class="keyword">char</span> *single[<span class="number">68</span>];</div><div class="line">	<span class="keyword">char</span> *wanted[<span class="number">8</span>];</div><div class="line">	<span class="keyword">if</span> (!file.Open(<span class="number">_</span>T(<span class="string">"d:\\1.txt "</span>), CFile::modeRead))</div><div class="line">	&#123;</div><div class="line">		<span class="keyword">return</span>;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">int</span> row = <span class="number">0</span>; </div><div class="line">	<span class="keyword">while</span> (file.ReadString(strLine))</div><div class="line">	&#123;</div><div class="line">		<span class="keyword">char</span> *str = strLine.GetBufferSetLength(strLine.GetLength());</div><div class="line">		<span class="keyword">char</span> *p;</div><div class="line">		</div><div class="line">		<span class="keyword">int</span> i = <span class="number">0</span>, k = <span class="number">0</span>;</div><div class="line">		<span class="keyword">char</span> *buf;</div><div class="line">		<span class="keyword">if</span> (strLine != <span class="string">""</span>)</div><div class="line">		&#123;</div><div class="line">			<span class="keyword">for</span> (p = strtok_s(str, <span class="string">"、"</span>, &amp;buf); p != <span class="literal">NULL</span>; p = strtok_s(<span class="literal">NULL</span>, <span class="string">"、"</span>, &amp;buf))</div><div class="line">			&#123;</div><div class="line">				single[i] = p;</div><div class="line">				i++;</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line"></div><div class="line">			CString strSum = <span class="string">""</span>;</div><div class="line">			srand((<span class="keyword">unsigned</span>)time(<span class="literal">NULL</span>));</div><div class="line">			<span class="keyword">for</span> (<span class="keyword">int</span> m = <span class="number">0</span>; m &lt; <span class="number">6</span>; m++)</div><div class="line">			&#123;</div><div class="line">				<span class="keyword">int</span> j = random(<span class="number">68</span>);</div><div class="line">				wanted[m] = single[j];</div><div class="line">				strtemp = wanted[m];</div><div class="line">				strSum= strSum + strtemp;</div><div class="line">			&#125;</div><div class="line">			strSum = strSum + <span class="string">"\r\n"</span>;</div><div class="line">			<span class="keyword">for</span> (<span class="keyword">int</span> m = <span class="number">0</span>; m &lt; <span class="number">4</span>; m++)</div><div class="line">			&#123;</div><div class="line">				<span class="keyword">int</span> j = random(<span class="number">68</span>);</div><div class="line">				wanted[m] = single[j];</div><div class="line">				strtemp = wanted[m];</div><div class="line">				strSum = strSum + strtemp;</div><div class="line">			&#125;</div><div class="line">			strSum = strSum + <span class="string">"\r\n"</span>;</div><div class="line"></div><div class="line">			<span class="keyword">for</span> (<span class="keyword">int</span> m = <span class="number">0</span>; m &lt; <span class="number">5</span>; m++)</div><div class="line">			&#123;</div><div class="line">				<span class="keyword">int</span> j = random(<span class="number">68</span>);</div><div class="line">				wanted[m] = single[j];</div><div class="line">				strtemp = wanted[m];</div><div class="line">				strSum = strSum + strtemp;</div><div class="line">			&#125;</div><div class="line">			strSum = strSum + <span class="string">"\r\n"</span>;</div><div class="line"></div><div class="line">			<span class="keyword">for</span> (<span class="keyword">int</span> m = <span class="number">0</span>; m &lt; <span class="number">4</span>; m++)</div><div class="line">			&#123;</div><div class="line">				<span class="keyword">int</span> j = random(<span class="number">68</span>);</div><div class="line">				wanted[m] = single[j];</div><div class="line">				strtemp = wanted[m];</div><div class="line">				strSum = strSum + strtemp;</div><div class="line">			&#125;</div><div class="line">			SetDlgItemText(IDC_EDIT2,strSum);</div><div class="line">			SetDlgItemText(IDC_EDIT1, <span class="string">"烟、倾、萧、墨、歌、弦、痴、泠、幽、离、覆、寂、情、思、恋、醉、浅、尘、念、葬、负、梦、韶、陌、落、琴、夜、君、殇、朱砂、韶华、江南、烟雨、迷离、红尘、寂寞、繁华、风华、苍老、红颜、天下、彼岸、伊人、青丝、白首、陌上、千年、倾城、断弦、长歌、悲欢、沧海、天涯、尘缘、情殇、忘川、碧落、奈何、指尖、长安、青鸾、凤凰、桃花、海棠、红妆、婆娑、轻狂、未央"</span>);</div><div class="line"></div><div class="line">	&#125;</div><div class="line"></div><div class="line">	file.Close();</div><div class="line"></div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>当然了，这个代码写的非常的粗糙，很多可以改进之处，我就是特别想先看到一个能运行的结果，后续再来慢慢改咯~丑陋的V1.0<br><img src="http://img.blog.csdn.net/20170810230733878?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="1"></p>
<p><img src="http://img.blog.csdn.net/20170810233547056?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="2"></p>
<p>P.S.哈哈哈哈哈哈好想笑这自动生成的诗句  这个时候背景音乐应该是浮夸</p>
<p>随便赋几首机器作诗：<br>未央忘川梦千年长安韶<br>尘缘君幽繁华<br>风华夜梦离红妆<br>海棠烟寂痴</p>
<p>海棠白首伊人悲欢负歌<br>红妆迷离苍老覆<br>韶华红妆尘缘萧寂寞<br>墨奈何歌白首</p>
<p>彼岸覆迷离浅烟雨伊人<br>长安倾城碧落倾<br>未央倾奈何韶华陌上<br>天下迷离朱砂千年</p>
<p>苍老覆红妆陌长安青鸾<br>繁华红尘落殇<br>迷离轻狂海棠思梦<br>恋倾凤凰浅</p>
<p>可以改进的地方：<br>1.分成动词、名词 单字、双字  放在多个txt中读取<br>2.四个暴力循环可以改一改……看着太扎心了<br>3.可以增加重复词审查过滤<br>4.扩大词库<br>5.按现代诗、古诗字数韵律等分配每个循环里的约束条件</p>
<h1 id="v11"><a href="#V1-1" class="headerlink" title="V1.1"></a>V1.1</h1><p>因为数组不定长，换成vector实现。同时扩大了词库，换了种句式……</p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div></pre></td><td class="code"><pre><div class="line">CStdioFile file;</div><div class="line">	CString strLine, strtemp;</div><div class="line">	<span class="built_in">std</span>::<span class="built_in">vector</span>&lt;CString&gt;Word;</div><div class="line">	<span class="built_in">std</span>::<span class="built_in">vector</span>&lt;CString&gt;Selected;</div><div class="line">	<span class="keyword">if</span> (!file.Open(<span class="number">_</span>T(<span class="string">"d:\\1.txt "</span>), CFile::modeRead))</div><div class="line">	&#123;</div><div class="line">		ASSERT(FALSE);</div><div class="line">		<span class="keyword">return</span>;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">while</span> (file.ReadString(strLine))</div><div class="line">	&#123;</div><div class="line">		<span class="keyword">int</span> len = strLine.GetLength();</div><div class="line">		</div><div class="line">		<span class="keyword">char</span> *str = strLine.GetBufferSetLength(strLine.GetLength());</div><div class="line">		<span class="keyword">char</span> *p;</div><div class="line">		</div><div class="line">		<span class="keyword">int</span> i = <span class="number">0</span>, k = <span class="number">0</span>;</div><div class="line">		<span class="keyword">char</span> *buf;</div><div class="line">		<span class="keyword">if</span> (strLine != <span class="string">""</span>)</div><div class="line">		&#123;</div><div class="line">			<span class="keyword">for</span> (p = strtok_s(str, <span class="string">"、"</span>, &amp;buf); p != <span class="literal">NULL</span>; p = strtok_s(<span class="literal">NULL</span>, <span class="string">"、"</span>, &amp;buf))</div><div class="line">			&#123;</div><div class="line">				Word.push_back(p);</div><div class="line">				i++;</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line"></div><div class="line">			CString strSum = <span class="string">""</span>;</div><div class="line">			srand((<span class="keyword">unsigned</span>)time(<span class="literal">NULL</span>));</div><div class="line">			<span class="keyword">for</span> (<span class="keyword">int</span> m = <span class="number">0</span>; m &lt; <span class="number">3</span>; m++)</div><div class="line">			&#123;</div><div class="line">				<span class="keyword">int</span> j = random(i);</div><div class="line">				Selected.push_back(Word.at(j));</div><div class="line">				strtemp = Selected.at(m);</div><div class="line">				strSum= strSum + strtemp;</div><div class="line">			&#125;</div><div class="line">			strSum = strSum + <span class="string">"，"</span>;</div><div class="line">			<span class="keyword">for</span> (<span class="keyword">int</span> m = <span class="number">3</span>; m &lt; <span class="number">7</span>; m++)</div><div class="line">			&#123;</div><div class="line">				<span class="keyword">int</span> j = random(i);</div><div class="line">				Selected.push_back(Word.at(j));</div><div class="line">				strtemp = Selected.at(m);</div><div class="line">				strSum = strSum + strtemp;</div><div class="line">			&#125;</div><div class="line">			strSum = strSum + <span class="string">"，"</span>;</div><div class="line">			strSum = strSum + <span class="string">"\r\n"</span>;</div><div class="line">			<span class="keyword">for</span> (<span class="keyword">int</span> m = <span class="number">7</span>; m &lt; <span class="number">10</span>; m++)</div><div class="line">			&#123;</div><div class="line">				<span class="keyword">int</span> j = random(i);</div><div class="line">				Selected.push_back(Word.at(j));</div><div class="line">				strtemp = Selected.at(m);</div><div class="line">				strSum = strSum + strtemp;</div><div class="line">			&#125;</div><div class="line">			strSum = strSum + <span class="string">"，"</span>;</div><div class="line">			<span class="keyword">for</span> (<span class="keyword">int</span> m = <span class="number">10</span>; m &lt; <span class="number">13</span>; m++)</div><div class="line">			&#123;</div><div class="line">				<span class="keyword">int</span> j = random(i);</div><div class="line">				Selected.push_back(Word.at(j));</div><div class="line">				strtemp = Selected.at(m);</div><div class="line">				strSum = strSum + strtemp;</div><div class="line">			&#125;</div><div class="line">			strSum = strSum + <span class="string">"，"</span>;</div><div class="line">			strSum = strSum + <span class="string">"\r\n"</span>;</div><div class="line">			<span class="keyword">for</span> (<span class="keyword">int</span> m = <span class="number">13</span>; m &lt; <span class="number">18</span>; m++)</div><div class="line">			&#123;</div><div class="line">				<span class="keyword">int</span> j = random(i);</div><div class="line">				Selected.push_back(Word.at(j));</div><div class="line">				strtemp = Selected.at(m);</div><div class="line">				strSum = strSum + strtemp;</div><div class="line">			&#125;</div><div class="line">			strSum = strSum + <span class="string">"，"</span>;</div><div class="line">			<span class="keyword">for</span> (<span class="keyword">int</span> m = <span class="number">18</span>; m &lt; <span class="number">20</span>; m++)</div><div class="line">			&#123;</div><div class="line">				<span class="keyword">int</span> j = random(i);</div><div class="line">				Selected.push_back(Word.at(j));</div><div class="line">				strtemp = Selected.at(m);</div><div class="line">				strSum = strSum + strtemp;</div><div class="line">			&#125;</div><div class="line">			strSum = strSum + <span class="string">"，"</span>;</div><div class="line">			strSum = strSum + <span class="string">"\r\n"</span>;</div><div class="line">			<span class="keyword">for</span> (<span class="keyword">int</span> m = <span class="number">20</span>; m &lt; <span class="number">23</span>; m++)</div><div class="line">			&#123;</div><div class="line">				<span class="keyword">int</span> j = random(i);</div><div class="line">				Selected.push_back(Word.at(j));</div><div class="line">				strtemp = Selected.at(m);</div><div class="line">				strSum = strSum + strtemp;</div><div class="line">			&#125;</div><div class="line"></div><div class="line">			strSum = strSum + <span class="string">"？"</span>;</div><div class="line">			strSum = strSum + <span class="string">"\r\n"</span>;</div><div class="line">			<span class="keyword">for</span> (<span class="keyword">int</span> m = <span class="number">23</span>; m &lt; <span class="number">25</span>; m++)</div><div class="line">			&#123;</div><div class="line">				<span class="keyword">int</span> j = random(i);</div><div class="line">				Selected.push_back(Word.at(j));</div><div class="line">				strtemp = Selected.at(m);</div><div class="line">				strSum = strSum + strtemp;</div><div class="line">			&#125;</div><div class="line">			strSum = strSum + <span class="string">"。"</span>;</div><div class="line"></div><div class="line"></div><div class="line">			SetDlgItemText(IDC_EDIT2,strSum);</div><div class="line">			TCHAR szBuf[<span class="number">1264</span>];</div><div class="line">			FILE *pfile;</div><div class="line">			fopen_s(&amp;pfile,<span class="string">"d:\\library.txt"</span>, <span class="string">"r"</span>);</div><div class="line">			fread(szBuf, <span class="number">1</span>, <span class="number">1262</span>, pfile);</div><div class="line">			SetDlgItemText(IDC_EDIT1, szBuf);</div><div class="line"></div><div class="line">			fclose(pfile); </div><div class="line"></div><div class="line">	&#125;</div><div class="line"></div><div class="line">	file.Close();</div></pre></td></tr></table></figure>
<p><img src="http://img.blog.csdn.net/20170816001549657?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="V1.1"></p>
<p>字符串尾的烫烫烫烫烫还没解决</p>
<p>随机散文诗：<br>环佩离海棠，悲欢情墨红颜，<br>古道回推敲，萧瑟繁华梳妆，<br>寂寥绮罗簌簌桑麻墨，青梅尘缘，<br>花蕊墨城郭？<br>白露陌上。</p>
<p>烟读碧绿，顾青鸾青丝古墓，<br>楚楚故里尺素，念情殇柳眉，<br>伊人亮尘缘挥毫古墓，簌簌伽蓝，<br>寂寥萧尘埃？<br>桑麻知否。</p>
<p>枝桠年华尘埃，经纬竹婆娑伽蓝，<br>一觅古筝笑靥，沧海寺轩窗，<br>泠五岳勾勒磐石江，桑麻寂，<br>一觅知否袅袅？<br>萧瑟瑶池。</p>
<p>羌笛绮罗剑鞘，枯藤乌艄断弦琴，<br>绮罗朱砂萧，寺参差寒蝉，<br>一抹长安水墨朱砂踌躇，寂凤凰，<br>渔樵红烛垂钓？<br>长歌芭蕉。</p>
<p>哈哈哈哈哈看起来好有文化的样子</p>
<p>附上一首吐槽古风乱象的歌：</p>
<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=34152526&auto=1&height=66"></iframe>
]]></content>
      
        <categories>
            
            <category> 互联网 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> MFC </tag>
            
            <tag> C++ </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[树]]></title>
      <url>http://hubojing.github.io/2017/07/23/%E6%A0%91/</url>
      <content type="html"><![CDATA[<div align="left"><br><img src="http://images.cnitblog.com/i/609598/201404/072129507785920.jpg" width="300" height="180" style="float:right;"><br><br><br>大热天敲代码与看书更配哦　　<br><br><br> </div>

<a id="more"></a>
<p>伪代码。</p>
<h1 id="二叉树的链式存储结构"><a href="#二叉树的链式存储结构" class="headerlink" title="二叉树的链式存储结构"></a>二叉树的链式存储结构</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">typedef</span> <span class="keyword">struct</span> BiTNode&#123;</div><div class="line">	ElemType data;<span class="comment">//数据域</span></div><div class="line">	<span class="keyword">struct</span> BiTNode *lchild, *rchild;<span class="comment">//左、右孩子指针</span></div><div class="line">&#125;BiTNode, *BiTree;</div></pre></td></tr></table></figure>
<h1 id="二叉树的遍历"><a href="#二叉树的遍历" class="headerlink" title="二叉树的遍历"></a>二叉树的遍历</h1><p>例：1<br> 2      3<br>   4       5<br> 6  </p>
<h2 id="先序遍历preorder"><a href="#先序遍历（PreOrder）" class="headerlink" title="先序遍历（PreOrder）"></a>先序遍历（PreOrder）</h2><p>根-&gt;左-&gt;右<br><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">PreOrder</span><span class="params">(BiTree T)</span></span>&#123;</div><div class="line">	<span class="keyword">if</span> (T != <span class="literal">NULL</span>)&#123;</div><div class="line">		visit(T);<span class="comment">//访问根节点</span></div><div class="line">		PreOrder(T-&gt;lchild);<span class="comment">//递归遍历左子树</span></div><div class="line">		PreOrder(T-&gt;rchild);<span class="comment">//递归遍历右子树</span></div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>124635</p>
<h2 id="中序遍历inorder"><a href="#中序遍历（InOrder）" class="headerlink" title="中序遍历（InOrder）"></a>中序遍历（InOrder）</h2><p>左-&gt;根-&gt;右<br><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">InOrder</span><span class="params">(BiTree T)</span></span>&#123;</div><div class="line">	<span class="keyword">if</span> (T != <span class="literal">NULL</span>)&#123;</div><div class="line">		InOrder(T-&gt;lchild);<span class="comment">//递归遍历左子树</span></div><div class="line">		visit(T);<span class="comment">//访问根节点</span></div><div class="line">		InOrder(T-&gt;rchild);<span class="comment">//递归遍历右子树</span></div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>264135</p>
<h2 id="后序遍历postorder"><a href="#后序遍历（PostOrder）" class="headerlink" title="后序遍历（PostOrder）"></a>后序遍历（PostOrder）</h2><p>左-&gt;右-&gt;根<br><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">PostOrder</span><span class="params">(BiTree T)</span></span>&#123;</div><div class="line">	<span class="keyword">if</span> (T != <span class="literal">NULL</span>)</div><div class="line">	&#123;</div><div class="line">		PostOrder(T-&gt;lchild);<span class="comment">//递归遍历左子树</span></div><div class="line">		PostOrder(T-&gt;rchild);<span class="comment">//递归遍历右子树</span></div><div class="line">		visit(T);<span class="comment">//访问根节点</span></div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>642531</p>
<p>时间复杂度都是O(n)，空间复杂度为O(n)。</p>
<h1 id="中序遍历的非递归算法"><a href="#中序遍历的非递归算法" class="headerlink" title="中序遍历的非递归算法"></a>中序遍历的非递归算法</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">InOrder2</span><span class="params">(BiTree T)</span></span>&#123;</div><div class="line">	<span class="comment">//二叉树中序遍历的非递归算法，算法需要借助一个栈</span></div><div class="line">	InitStack(S);</div><div class="line">	BiTree p = T;				<span class="comment">//初始化栈；p是遍历指针</span></div><div class="line">	<span class="keyword">while</span> (p || !IsEmpty(S))&#123;		<span class="comment">//栈不空或p不空时循环</span></div><div class="line">		<span class="keyword">if</span> (p)&#123;						<span class="comment">//根指针进展，遍历左子树</span></div><div class="line">			Push(S, p);					<span class="comment">//每遇到非空二叉树先向左走</span></div><div class="line">			p = p-&gt;lchild;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">else</span>&#123;						<span class="comment">//根指针退栈，访问根节点，遍历右子树</span></div><div class="line">			Pop(S, p); visit(p);		<span class="comment">//退栈，访问根节点</span></div><div class="line">			p = p-&gt;rchild;			<span class="comment">//再向右子树走</span></div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h1 id="二叉树的层次遍历"><a href="#二叉树的层次遍历" class="headerlink" title="二叉树的层次遍历"></a>二叉树的层次遍历</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">LevelOrder</span><span class="params">(BiTree T)</span></span>&#123;</div><div class="line">	InitQueue(Q);<span class="comment">//初始化辅助队列</span></div><div class="line">	BiTree p;</div><div class="line">	EnQueue(Q, T);<span class="comment">//将根结点入队</span></div><div class="line">	<span class="keyword">while</span> (!IsEmpty(Q))&#123;<span class="comment">//队列不空循环</span></div><div class="line">		DeQueue(Q, p);<span class="comment">//队头元素出队</span></div><div class="line">		visit(p);<span class="comment">//访问当前p所指向结点</span></div><div class="line">		<span class="keyword">if</span> (p-&gt;lchild != <span class="literal">NULL</span>)</div><div class="line">		&#123;</div><div class="line">			EnQueue(Q, p-&gt;lchild);<span class="comment">//左子树不空，则左子树入队列</span></div><div class="line">		&#125;</div><div class="line">		<span class="keyword">if</span> (p-&gt;rchild != <span class="literal">NULL</span>)</div><div class="line">		&#123;</div><div class="line">			EnQueue(Q, p-&gt;rchild);<span class="comment">//右子树不空，则右子树入队列</span></div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h1 id="树的存储结构"><a href="#树的存储结构" class="headerlink" title="树的存储结构"></a>树的存储结构</h1><h2 id="双亲表示法"><a href="#双亲表示法" class="headerlink" title="双亲表示法"></a>双亲表示法</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">define</span> MAX_TREE_SIZE 100	<span class="comment">//树中最多结点数</span></span></div><div class="line"><span class="keyword">typedef</span> <span class="keyword">struct</span>&#123;		<span class="comment">//树的结点定义</span></div><div class="line">	ElemType data;	<span class="comment">//数据元素</span></div><div class="line">	<span class="keyword">int</span> parent;	<span class="comment">//双亲位置域</span></div><div class="line">&#125;PTNode;</div><div class="line"><span class="keyword">typedef</span> <span class="keyword">struct</span>&#123;		<span class="comment">//树的类型定义</span></div><div class="line">	PTNode nodes[MAX_TREE_SIZE];	<span class="comment">//双亲表示</span></div><div class="line">	<span class="keyword">int</span> n;		<span class="comment">//结点数</span></div><div class="line">&#125;PTree;</div></pre></td></tr></table></figure>
<p>求结点的孩子时需遍历整个结构。</p>
<h2 id="孩子表示法"><a href="#孩子表示法" class="headerlink" title="孩子表示法"></a>孩子表示法</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="keyword">typedef</span> <span class="keyword">struct</span> CTNode	<span class="comment">//孩子结点</span></div><div class="line">&#123;</div><div class="line">	<span class="keyword">int</span> child;</div><div class="line">	<span class="keyword">struct</span> CTNode *next;</div><div class="line">&#125;*ChildPtr;</div><div class="line"><span class="keyword">typedef</span> <span class="keyword">struct</span></div><div class="line">&#123;</div><div class="line">	TElemType data;</div><div class="line">	ChildPtr firstchild;<span class="comment">//孩子链表头指针</span></div><div class="line">&#125;CTBox;</div><div class="line"><span class="keyword">typedef</span> <span class="keyword">struct</span></div><div class="line">&#123;</div><div class="line">	CTBox nodes[MAX_TREE_SIZE];</div><div class="line">	<span class="keyword">int</span> n, r;	<span class="comment">//结点数和根的位置</span></div><div class="line">&#125;CTree;</div></pre></td></tr></table></figure>
<p>求结点的双亲时需遍历N个结点中孩子链表指针域所指向的N个孩子链表。</p>
<h2 id="孩子兄弟表示法二叉树表示法"><a href="#孩子兄弟表示法（二叉树表示法）" class="headerlink" title="孩子兄弟表示法（二叉树表示法）"></a>孩子兄弟表示法（二叉树表示法）</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">typedef</span> <span class="keyword">struct</span> CSNode</div><div class="line">&#123;</div><div class="line">	ElemType data;	<span class="comment">//数据域</span></div><div class="line">	<span class="keyword">struct</span> CSNode *firstchild, *nextsibling;	<span class="comment">//第一个孩子和右兄弟指针</span></div><div class="line">&#125;CSNode, *CSTree;</div></pre></td></tr></table></figure>
<p>易查找结点的孩子，若为每个结点增设一个parent域指向其父节点，则查找结点的父结点也很方便。</p>
<p>树转换为二叉树的规则：每个结点左指针指向它的第一个孩子结点，右指针指向它在树中的相邻兄弟结点，可表示为“左孩子右兄弟”。由于根节点没有兄弟，所以由树转换而得的二叉树没有右子树。</p>
<p>例：<br><img src="http://img.blog.csdn.net/20160405115409687" alt="一颗具体的树"><br><img src="http://img.blog.csdn.net/20160405121851681" alt="转换后"></p>
<h1 id="c实现"><a href="#C-实现" class="headerlink" title="C++实现"></a>C++实现</h1><p>由于博主不允许转载，因此详见参考。<br>为防止程序一闪而过，在main程序末尾添加system(“pause”);使画面停留。</p>
<h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p>数据结构教材<br><a href="http://blog.csdn.net/linux_ever/article/details/51063795" target="_blank" rel="external">数据结构与算法——普通树的定义与C++实现</a><br><a href="http://blog.csdn.net/jkay_wong/article/details/6635984" target="_blank" rel="external">C++树（兄弟孩子结构实现）</a><br><a href="http://www.educity.cn/develop/478944.html" target="_blank" rel="external">VC++ 树的孩子兄弟表示法</a><br><a href="http://blog.csdn.net/insistgogo/article/details/6876867" target="_blank" rel="external">使用C++ 和 孩子兄弟表示法实现树</a><br><a href="http://blog.csdn.net/htyurencaotang/article/details/7781920" target="_blank" rel="external">孩子兄弟表示法实现树</a></p>
<hr>
<p>最近更新频繁的原因如下：<br>上周<br><img src="http://img.blog.csdn.net/20170723212235401?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="上周"></p>
<p>未来一周<br><img src="http://img.blog.csdn.net/20170723212159371?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="未来一周"></p>
<p>热成熟透的咸鱼  不如宅着做咸鱼</p>
]]></content>
      
        <categories>
            
            <category> 互联网 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 树 </tag>
            
            <tag> 数据结构 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[树状控件与列表控件交互以及XML的解析]]></title>
      <url>http://hubojing.github.io/2017/07/20/%E6%A0%91%E7%8A%B6%E6%8E%A7%E4%BB%B6%E4%B8%8E%E5%88%97%E8%A1%A8%E6%8E%A7%E4%BB%B6%E4%BA%A4%E4%BA%92%E4%BB%A5%E5%8F%8AXML%E7%9A%84%E8%A7%A3%E6%9E%90/</url>
      <content type="html"><![CDATA[<div align="left"><br><img src="http://s8.51cto.com/wyfs02/M00/5B/67/wKioL1UI1-LRY-VkAADQ3snhmcU770.jpg" width="300" height="180" style="float:right;"><br><br><br>自查笔记。<br>　　<br>　　　<br><br> </div>

<a id="more"></a>
<h1 id="方法记录"><a href="#方法记录" class="headerlink" title="方法记录"></a>方法记录</h1><h2 id="msxml相关"><a href="#MSXML相关" class="headerlink" title="MSXML相关"></a>MSXML相关</h2><h3 id="创建对象"><a href="#创建对象" class="headerlink" title="创建对象"></a>创建对象</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">MSXML2::IXMLDOMDocumentPtr pDoc;</div><div class="line"></div><div class="line">HRESULT hr = pDoc.CreateInstance(<span class="number">_u</span>uidof(MSXML2::DOMDocument60));</div><div class="line"><span class="keyword">if</span>(!pDoc)</div><div class="line">&#123;</div><div class="line">	ASSERT(FALSE);</div><div class="line">	<span class="keyword">return</span>;</div><div class="line">&#125;</div><div class="line"><span class="keyword">_variant_t</span> varOut((<span class="keyword">bool</span>)TRUE);</div><div class="line">varOut = pDoc-&gt;load(xmlPath);</div><div class="line"><span class="keyword">if</span> ((<span class="keyword">bool</span>)varOut == FALSE)</div><div class="line">&#123;</div><div class="line">	::MessageBox(<span class="literal">NULL</span>, <span class="string">"Wrong!"</span>, <span class="string">"提示"</span>, MB_ICONERROR);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="获取根节点"><a href="#获取根节点" class="headerlink" title="获取根节点"></a>获取根节点</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">MSXML2::IXMLDOMElementPtr pNode;</div><div class="line">pNode = pDoc-&gt;GetdocumentElement();</div></pre></td></tr></table></figure>
<h3 id="获取属性法一"><a href="#获取属性（法一）" class="headerlink" title="获取属性（法一）"></a>获取属性（法一）</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">MSXML2::IXMLDOMNamedNodeMapPtr pAttrMap;</div><div class="line">MSXML2::IXMLDOMNodePtr pAttrItem;</div><div class="line">MSXML2::IXMLDOMNodeListPtr pNodeList = pNode-&gt;GetchildNodes();</div><div class="line"><span class="keyword">long</span> Len = pNodeList-&gt;Getlength();</div><div class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; Len; ++i)</div><div class="line">&#123;</div><div class="line">	MSXML2::IXMLDOMElementPtr pChildNode = (MSXML2::IXMLDOMElementPtr)pNodeList-&gt;Getitem(i);</div><div class="line">	pChildNode-&gt;get_attributes(&amp;pAttrMap);</div><div class="line">	<span class="keyword">long</span> count;</div><div class="line">	pAttrMap-&gt;get_length(&amp;count);</div><div class="line">	<span class="keyword">if</span> (count)</div><div class="line">	&#123;</div><div class="line">		pAttrMap-&gt;get_item(<span class="number">0</span>, &amp;pAttrItem);</div><div class="line">		<span class="keyword">_variant_t</span> variantItemName;</div><div class="line">		pAttrItem-&gt;get_nodeTypedValue(&amp;variantItemName);</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="获取属性法二"><a href="#获取属性（法二）" class="headerlink" title="获取属性（法二）"></a>获取属性（法二）</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line">MSXML2::IXMLDOMNodeListPtr pList = pRoot-&gt;GetchildNodes();</div><div class="line"><span class="keyword">int</span> iCount = pList-&gt;Getlength();</div><div class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; iCount; ++i)</div><div class="line">&#123;</div><div class="line">	MSXML2::IXMLDOMElementPtr pItem = (MSXML2::IXMLDOMElementPtr)pList-&gt;item[i];</div><div class="line">	MSXML2::IXMLDOMNamedNodeMapPtr pAttrMap = pItem-&gt;Getattributes();</div><div class="line">	MSXML2::IXMLDOMNodePtr pAttrItem;</div><div class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> att = <span class="number">0</span>; att &lt; pAttrMap-&gt;length; ++att)</div><div class="line">	&#123;</div><div class="line">		pAttrItem = pAttrMap-&gt;Getitem(att);</div><div class="line">		strTemp = (LPCTSTR)pAttrItem-&gt;GetnodeName();</div><div class="line">		<span class="keyword">_variant_t</span> value;</div><div class="line">		value = pAttrItem-&gt;GetnodeValue();</div><div class="line">		<span class="keyword">if</span> (strTemp == <span class="string">"某属性名1"</span>)</div><div class="line">		&#123;</div><div class="line">			<span class="comment">//需要进行的操作</span></div><div class="line">		&#125;</div><div class="line">		<span class="keyword">if</span> (strTemp == <span class="string">"某属性名2"</span>)</div><div class="line">		&#123;</div><div class="line">			<span class="comment">//需要进行的操作</span></div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="删除节点"><a href="#删除节点" class="headerlink" title="删除节点"></a>删除节点</h3><p>连同子节点一起删 pChildNode-&gt;GetParentNode()-&gt;removeChild(pChildNode);</p>
<h2 id="树控件相关"><a href="#树控件相关" class="headerlink" title="树控件相关"></a>树控件相关</h2><h3 id="插入"><a href="#插入" class="headerlink" title="插入"></a>插入</h3><p>HTREEITEM ht = m_tree.InsertItem((_bstr_t)variantValue, 1, 1, ht, TVI_LAST);<br>依次是：插入的数据，树前图标点击前，树前图标点击后，父节点，插在最后。</p>
<h3 id="存入数据"><a href="#存入数据" class="headerlink" title="存入数据"></a>存入数据</h3><p>m_tree.SetItemData(ht,(DWORD_PTR)数据);</p>
<h3 id="获得根节点"><a href="#获得根节点" class="headerlink" title="获得根节点"></a>获得根节点</h3><p>HTREEITEM hRoot=m_tree.GetRootItem();</p>
<h3 id="展开树"><a href="#展开树" class="headerlink" title="展开树"></a>展开树</h3><p>m_tree.Expand(ht,TVE_EXPAND);</p>
<h3 id="获取选中树"><a href="#获取选中树" class="headerlink" title="获取选中树"></a>获取选中树</h3><p>HTREEITEM ChooseItem = m_tree.GetSelectedItem();<br>获取数据<br>数据类型animal <em>pStructure = (数据类型animal</em>)m_tree.GetitemData(ChooseItem);</p>
<h2 id="列表控件相关"><a href="#列表控件相关" class="headerlink" title="列表控件相关"></a>列表控件相关</h2><h3 id="插入"><a href="#插入-1" class="headerlink" title="插入"></a>插入</h3><p>m_list.InsertItem(i,(LPCTSTR)数据,i);</p>
<h3 id="存入数据"><a href="#存入数据-1" class="headerlink" title="存入数据"></a>存入数据</h3><p>m_list.SetItemData(i,(DWORD_PTR)数据);</p>
<h3 id="删除全部项"><a href="#删除全部项" class="headerlink" title="删除全部项"></a>删除全部项</h3><p>m_list.DeleteAllItems();</p>
<h3 id="在列表最后插入"><a href="#在列表最后插入" class="headerlink" title="在列表最后插入"></a>在列表最后插入</h3><p>int iRow = m_list.GetItemCount();<br>m_list.InsertItem(iRow, text, 0);<br>text 插入的文本 0表示imagelist中的第一个图片<br>imagelist是由一幅幅image拼起来的长图列表</p>
<h2 id="其它c相关"><a href="#其它C-相关" class="headerlink" title="其它C++相关"></a>其它C++相关</h2><h3 id="messagebox"><a href="#MessageBox" class="headerlink" title="MessageBox"></a>MessageBox</h3><p>MessageBox分为win API 和 MFC封装两种。<br>win API:<br>::MessageBox(1, 2, 3, 4);<br>1为父窗口句柄，常用NULL<br>2为显示的字符串<br>3为标题栏显示的字符串<br>4为图标icon  有四种：MB_ICONERROR,MB_ICONINFORMATION,MB_ICONWARNING,MB_ICONQUESTION</p>
<h3 id="父对话框给子对话框传值"><a href="#父对话框给子对话框传值" class="headerlink" title="父对话框给子对话框传值"></a>父对话框给子对话框传值</h3><p>如果子对话框是模态对话框，那么子对话框是无法在弹出后调用父对话框的控件变量的。只能在DoModal之前，通过一个子对话框的自定义成员变量传递过去。<br>eg.<br>CxxDlg dlg;<br>UpdateData(TRUE);<br>dlg.m_str=m_edit;<br>dlg.DoModal();</p>
<p>一种不良的方式：<br>父对话框 BookDlg  子对话框TitleDlg<br>在父对话框中 TitleDlg dlg(this);<br>在子对话框中 CBookDlg <em>parent = (CBookDlg</em>)GetParent();<br>然后就可以使用了：<br>CString text=pParent-&gt;m_sentence;<br>m_sentence是父对话框类的成员变量</p>
<p>父窗口引用子窗口变量<br>在父窗口中 xxxDlg dlg;<br>if(dlg.DoModal() == IDOK)<br>{<br>//操作<br>}</p>
<h3 id="在子对话框显示图片"><a href="#在子对话框显示图片" class="headerlink" title="在子对话框显示图片"></a>在子对话框显示图片</h3><p>给自对话框添加OnInitDlg()<br>添加OnPaint()<br>(记得加WM_ONPAINT消息)<br>在OnInitDlg中加载图片，在OnPanint()中重绘图片。（在初始化里重绘是不行的）</p>
<h3 id="vector"><a href="#vector" class="headerlink" title="vector"></a>vector</h3><p>添加头文件#include <vector><br>vector容器，std::vector&lt;类型*&gt; name;  push_back添加元素。<br>遍历元素使用迭代器iterator，for循环<br>vector&lt;数据类型&gt;::iterator it;<br>for(it=数据.begin();it!=数据.end();it++)<br>{<br>    //操作<br>    Break;<br>}</vector></p>
<h3 id="map"><a href="#map" class="headerlink" title="map"></a>map</h3><p>添加头文件#include <map><br>std::map<cstring, std::vector<信息="">&gt;<br>一个CString对应一个vector。查询时也是先遍历（迭代器）再比较，it-&gt;first指代返回关键字，it-&gt;second指代数据。</cstring,></map></p>
<h3 id="父子循环"><a href="#父子循环" class="headerlink" title="父子循环"></a>父子循环</h3><p>父子循环遍历时避免使用相同的变量名。</p>
<h3 id="几个函数"><a href="#几个函数" class="headerlink" title="几个函数"></a>几个函数</h3><p>检查路径合法性 PathFileExists(path)，使用它需要加上头文件#include “shlwapi.h”<br>字符连接 CString str;<br>str.Format((“%s%s\%s\“),path,”第三层”,”第四层”));<br>复制文件CopyFile(原完整带后缀路径，复制后的带后缀完整目的路径,TRUE);  该函数有返回值<br>比较<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">if</span>(strTemp.Compare(<span class="string">"相比较的字符串"</span>)==<span class="number">0</span>)</div><div class="line">&#123;</div><div class="line"><span class="comment">//操作</span></div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h3 id="创建临时文件夹"><a href="#创建临时文件夹" class="headerlink" title="创建临时文件夹"></a>创建临时文件夹</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">TCHAR Temp[<span class="number">512</span>];</div><div class="line">GetTempPath(<span class="number">512</span>, Temp);</div><div class="line">CString strTempPath;</div><div class="line">strTempPath.Format(<span class="string">"%s\\Mydata"</span>, Temp);</div><div class="line"><span class="keyword">if</span> (!PathFileExists(strTempPath))</div><div class="line">&#123;</div><div class="line">	<span class="keyword">if</span> (!CreateDirectory(strTempPath, <span class="literal">NULL</span>))</div><div class="line">	&#123;</div><div class="line">		ASSERT(FALSE);</div><div class="line">		<span class="keyword">return</span>;</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="复制文件夹及子文件"><a href="#复制文件夹及子文件" class="headerlink" title="复制文件夹及子文件"></a>复制文件夹及子文件</h3><p>写一个函数CopyDiretory(CString source, CString target)<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">	CFileFind finder;</div><div class="line"><span class="keyword">bool</span> bWorking = finder.FindFile(source);</div><div class="line"><span class="keyword">while</span> (bWorking)</div><div class="line">&#123;</div><div class="line">	bWorking = finder.FindNextFile();</div><div class="line">	<span class="keyword">if</span> (finder.IsDirectory() &amp;&amp; !finder.IsDots())</div><div class="line">	&#123;</div><div class="line">		copyDiretory(finder.GetFilePath(), target + <span class="string">"\\"</span> + finder.GetFileName();</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">else</span></div><div class="line">	&#123;</div><div class="line">		Bool temp = CopyFile(finder.GetFilePath(), target + <span class="string">"\\"</span> + finder.GetFileName(), FALSE);</div><div class="line">		<span class="keyword">if</span> (temp == <span class="number">0</span>)</div><div class="line">		&#123;</div><div class="line">			MessageBox(<span class="string">"复制失败！"</span>);</div><div class="line">			<span class="keyword">return</span>;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line">	</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h3 id="删除文件目录及子文件夹"><a href="#删除文件目录及子文件夹" class="headerlink" title="删除文件目录及子文件夹"></a>删除文件目录及子文件夹</h3><p>写一个DeleteDirectory函数<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">CFileFind finder;</div><div class="line">CString path;</div><div class="line">path.Format(<span class="string">"%s\\*.*"</span>, directorypath);</div><div class="line">BOOL bWorking = finder.FindFile(path);</div><div class="line"><span class="keyword">while</span> (bWorking)</div><div class="line">&#123;</div><div class="line">	bWorking = finder.FindNextFile();</div><div class="line">	<span class="keyword">if</span> (finder.IsDirectory() &amp;&amp; !finder.IsDots())</div><div class="line">	&#123;</div><div class="line">		DeleteDirectory(finder.GetFilePath());</div><div class="line">		RemoveDirectory(finder.GetFilePath();)</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">else</span></div><div class="line">	&#123;</div><div class="line">		DeleteFile(finder.GetFilePath());</div><div class="line">	&#125;</div><div class="line">	finder.Close();</div><div class="line">	RemoveDirectory(directoryPath);</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h3 id="文件遍历"><a href="#文件遍历" class="headerlink" title="文件遍历"></a>文件遍历</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">CFileFind finder;</div><div class="line">CString strName;</div><div class="line">BOOL bWorking = finder.FindFile(path);</div><div class="line"><span class="built_in">std</span>::<span class="built_in">vector</span>&lt;CString&gt;a;</div><div class="line"><span class="keyword">while</span> (bWorking)</div><div class="line">&#123;</div><div class="line">	bWorking = finder.FindNextFile();</div><div class="line">	strName = finder.GetFileName();</div><div class="line">	a.push_back(strName);<span class="comment">//获取全部文件名</span></div><div class="line">	<span class="built_in">vector</span>&lt;CString&gt;::iterator it;</div><div class="line">	<span class="keyword">for</span> (it = a.begin(); it != a.end(); it++)</div><div class="line">	&#123;</div><div class="line">		<span class="keyword">if</span> ((*it) == strFileName)</div><div class="line">		&#123;</div><div class="line">			<span class="comment">//需要的处理代码</span></div><div class="line">			<span class="keyword">break</span>;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="截取字符串"><a href="#截取字符串" class="headerlink" title="截取字符串"></a>截取字符串</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">char</span>* temp = <span class="keyword">new</span> <span class="keyword">char</span>[<span class="number">260</span>];</div><div class="line">::GetCurrentDirectory(<span class="number">260</span>, temp);<span class="comment">//得到的是DWord型</span></div><div class="line">CString strTempDir = temp;</div><div class="line"><span class="keyword">char</span>* str = strTempDir.GetBuffer(strTempDir.GetLength() + <span class="number">1</span>);</div><div class="line"><span class="keyword">char</span>* delim = <span class="string">"\\"</span>;</div><div class="line"><span class="keyword">char</span>* buf;</div><div class="line"><span class="keyword">char</span>* p1 = strtok_s(str, delim, &amp;buf);</div><div class="line"><span class="keyword">char</span>*p2 = strtok_s(<span class="literal">NULL</span>, delim, &amp;buf);</div><div class="line">CString strp1 = (<span class="keyword">_bstr_t</span>)p1;</div><div class="line">CString strp2 = (<span class="keyword">_bstr_t</span>)p2;</div></pre></td></tr></table></figure>
<p>循环截取<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">char</span>* str = strName.GetBuffer(strName.GetLength() + <span class="number">1</span>);</div><div class="line"><span class="keyword">char</span>* delim = <span class="string">"\\"</span>;</div><div class="line"><span class="keyword">char</span>* buf;</div><div class="line"><span class="keyword">int</span> count = <span class="number">0</span>;</div><div class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; str[i]; i++)</div><div class="line">&#123;</div><div class="line">	<span class="keyword">if</span> (str[i] == *delim)</div><div class="line">	&#123;</div><div class="line">		count++;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">char</span>* p = strtok_s(str, delim, *buf);</div><div class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; count; j++)</div><div class="line">	&#123;</div><div class="line">		p = strtok_s(<span class="literal">NULL</span>, delim, &amp;buf);</div><div class="line">	&#125;</div><div class="line">	CString strp = (<span class="keyword">_bstr_t</span>)p;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h3 id="禁用"><a href="#禁用" class="headerlink" title="禁用"></a>禁用</h3><p>GetDlgItem(IDC_Text)-&gt;EnableWindow(FALSE);</p>
<h3 id="调用exe"><a href="#调用exe" class="headerlink" title="调用exe"></a>调用exe</h3><p>法一：<br>UINT temp=WinExec(strPath,SW_SHOWNORMAL);<br>法二：<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">STARTUPINFO si;</div><div class="line"><span class="built_in">memset</span>(&amp;si, <span class="number">0</span>, <span class="keyword">sizeof</span>(STARTUPINFO));</div><div class="line">si.cb = <span class="keyword">sizeof</span>(STARTUPINFO);</div><div class="line">si.dwFlags = STARTF_USESHOWWINDOW;</div><div class="line">si.wShowWindow = SW_SHOW;</div><div class="line">PROCESS_INFORMATION pi;</div><div class="line">BOOL bDemoPro = CreateProcess(path, <span class="literal">NULL</span>, <span class="literal">NULL</span>, <span class="literal">NULL</span>, FALSE, <span class="number">0</span>, <span class="literal">NULL</span>, <span class="literal">NULL</span>, &amp;si, &amp;pi);</div><div class="line"><span class="keyword">if</span> (!bDemoPro)</div><div class="line">&#123;</div><div class="line">	ASSERT(FALSE);</div><div class="line">&#125;</div><div class="line">WaitForSingleObject(pi.hProcess, INFINITE);</div><div class="line">CloseHandle(pi.hThread);</div><div class="line">CloseHandle(pi.hProcess);</div></pre></td></tr></table></figure></p>
<h3 id="窗口缩放"><a href="#窗口缩放" class="headerlink" title="窗口缩放"></a>窗口缩放</h3><p>.h文件中：<br>protected:<br>afx_msg void OnSize(UINT nType,int cx, int cy);<br>POINT old;<br>CRect m_rect;</p>
<p>.cpp文件中：<br>ON_WM_SIZE()</p>
<p>在OnInitDialog()中：<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">GetClientRect(&amp;m_rect);<span class="comment">//初始大小</span></div><div class="line">old.x = m_rect.right - m_rect.left;</div><div class="line">old.y = m_rect.bottom - m_rect.top;</div></pre></td></tr></table></figure></p>
<p>在OnSize函数中：<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">	CDialog::OnSize(nTpye, cx, cy);</div><div class="line">	<span class="comment">//TODO</span></div><div class="line">	<span class="keyword">float</span> fsp[<span class="number">2</span>];</div><div class="line">	POINT Newp;</div><div class="line">	CRect rectNow;</div><div class="line">	GetClientRect(&amp;rectNow);</div><div class="line">	Newp.x = rectNow.right - rectNow.left;</div><div class="line">	Newp.y = rectNow.bottom - rectNow.top;</div><div class="line">	fsp[<span class="number">0</span>] = (<span class="keyword">float</span>)Newp.x / old.x;</div><div class="line">	fsp[<span class="number">1</span>] = (<span class="keyword">float</span>)Newp.y / old.y;</div><div class="line">	CRect Rect;</div><div class="line">	<span class="keyword">int</span> woc;</div><div class="line">	CPoint OldTLPoint, TLPoint;<span class="comment">//左上</span></div><div class="line">	CPoint OldBRPoint, BRPoint;<span class="comment">//右下</span></div><div class="line">	HWND hwndChild = ::GetWindow(m_hWnd, GW_CHILD);<span class="comment">//列出所有控件</span></div><div class="line">	<span class="keyword">while</span> (hwndChild)</div><div class="line">	&#123;</div><div class="line">		woc = ::GetDlgCtrlID(hwndChild);</div><div class="line">		GetDlgItem(woc)-&gt;GetWindowRect(Rect);</div><div class="line">		ScreenToClient(Rect);</div><div class="line">		OldTLPoint = Rect.TopLeft();</div><div class="line">		TLPoint.x = <span class="keyword">long</span>(OldTLPoint.x*fsp[<span class="number">0</span>]);</div><div class="line">		TLPoint.y = <span class="keyword">long</span>(OldTLPoint.y*fsp[<span class="number">1</span>]);</div><div class="line">		OldBRPoint = Rect.BottomRight();</div><div class="line">		BRPoint.x = <span class="keyword">long</span>(OldBRPoint.x*fsp[<span class="number">0</span>]);</div><div class="line">		BRPoint.y = <span class="keyword">long</span>(OldBRPoint.y*fsp[<span class="number">1</span>]);</div><div class="line">		Rect.SetRect(TLPoint, BRPoint);</div><div class="line">		GetDlgItem(woc)-&gt;MoveWindow(Rect, TRUE);</div><div class="line">		hwndChild = ::GetWindow(hwndChild, GW_HWNDNEXT);</div><div class="line">	&#125;</div><div class="line">	old = Newp;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h3 id="更新数据"><a href="#更新数据" class="headerlink" title="更新数据"></a>更新数据</h3><p>UpdateData(TRUE);//更新值到界面<br>UpdateData(FALSE);//更新界面到值</p>
<h2 id="数据类型转换"><a href="#数据类型转换" class="headerlink" title="数据类型转换"></a>数据类型转换</h2><ol>
<li>int转CString<br>iRow是int型，number是CString型。<br>CString number;<br>number.Format(“%d”, iRow);</li>
</ol>
<p>2._variant_t转int<br>_variant_t a;<br>int b;<br>b=_ttoi((LPCTSTR)(_bstr_t)a);</p>
<hr>
<h1 id="msdn参考"><a href="#MSDN参考" class="headerlink" title="MSDN参考"></a>MSDN参考</h1><h2 id="msxml"><a href="#MSXML" class="headerlink" title="MSXML"></a>MSXML</h2><p>MSXML API 历史记录 <a href="https://msdn.microsoft.com/zh-cn/library/ms762314(v=vs.85).aspx" target="_blank" rel="external">https://msdn.microsoft.com/zh-cn/library/ms762314(v=vs.85).aspx</a> </p>
<p>MSXML SDK 概述 <a href="https://msdn.microsoft.com/zh-cn/library/ms760399(v=vs.85).aspx" target="_blank" rel="external">https://msdn.microsoft.com/zh-cn/library/ms760399(v=vs.85).aspx</a> </p>
<h2 id="treecontrol控件"><a href="#TreeControl控件" class="headerlink" title="TreeControl控件"></a>TreeControl控件</h2><p>使用 CTreeCtrl <a href="https://msdn.microsoft.com/zh-cn/library/8ws6dh1y(v=vs.120).aspx" target="_blank" rel="external">https://msdn.microsoft.com/zh-cn/library/8ws6dh1y(v=vs.120).aspx</a> </p>
<h2 id="listcontrol控件"><a href="#ListControl控件" class="headerlink" title="ListControl控件"></a>ListControl控件</h2><p>使用 CListCtrl <a href="https://msdn.microsoft.com/zh-cn/library/cc468276(v=vs.71).aspx" target="_blank" rel="external">https://msdn.microsoft.com/zh-cn/library/cc468276(v=vs.71).aspx</a><br>创建列表控件 (List Control) <a href="https://msdn.microsoft.com/zh-cn/library/cc451545(v=vs.71).aspx" target="_blank" rel="external">https://msdn.microsoft.com/zh-cn/library/cc451545(v=vs.71).aspx</a> </p>
<hr>
<p>现有一个XML文档如下：<br><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">&lt;root&gt;</div><div class="line">	&lt;Node world = "生命"&gt;</div><div class="line">		&lt;Node animal = “动物"&gt;</div><div class="line">			&lt;Node aniname = "熊猫"&gt;</div><div class="line">			&lt;/Node&gt;</div><div class="line">			&lt;Node aniname = "兔子"&gt;</div><div class="line">			&lt;/Node&gt;</div><div class="line">		&lt;/Node&gt;</div><div class="line">		&lt;Node plant = "植物"&gt;</div><div class="line">			&lt;Node planame = "仙人掌"&gt;</div><div class="line">			&lt;/Node&gt;</div><div class="line">			&lt;Node planame = "玫瑰"&gt;</div><div class="line">			&lt;/Node&gt;</div><div class="line">		&lt;/Node&gt;</div><div class="line">	&lt;/Node&gt;</div><div class="line">&lt;/root&gt;</div></pre></td></tr></table></figure></p>
<p>要求在树状控件上显示如下：<br>–root<br>—-动物<br>—-植物</p>
<p>在树状控件上点击“动物”，在列表控件上出现<br>1 熊猫<br>2 兔子</p>
<p>同理，点击“植物”，在列表控件上出现<br>1 仙人掌<br>2 玫瑰</p>
<h1 id="思维碰撞"><a href="#思维碰撞" class="headerlink" title="思维碰撞"></a>思维碰撞</h1><p><del>之前的思路：先SelectedSingleNode(“/Node/Node”)，定位到动物这一层。然后获得该结点的属性即aniname，插入树状控件。接着指向其兄弟结点，将兄弟结点（植物）的属性同样插入树状控件。如果新插入结点，可能需递归（但都是在动物同层面）。</del><br><del>因为并没有将“熊猫”“兔子”插入树状控件，因此无法使用m_tree.GetChildItem(ht)获取。所以我想通过“动物”植物“的aniname和planame来反过来查找对应xml里的结点pNode（这里存在问题how to find it?遍历xml找同样的名字？Item能和node存在对应关系么）。找到后，只需GetChildNode之类获取孩子结点，再插入到列表控件中（也就是和列表控件交互实际是列表控件在和xml直接交互，树控件只起到选择某个item，对应到xml中）。</del><br><del>简单说来：选择树结点-&gt;获得该xml对应结点-&gt;获得每一个孩子结点-&gt;获得孩子结点的文本和其他路径属性-&gt;通过列表插入</del></p>
<p><del>就算是为树状控件和列表控件设置一个类或者一个结构，先要把xml所需的信息全部放入。毕竟投射到树状控件的结点并非全部结点，最重要的是<strong>列表控件所需结点不在树状控件中</strong>。那么添加删除时，对应的类或结构也应相应操作，是否繁琐。但感觉之前用树控件用错了，只是获取了文本，数据并没传入。</del></p>
<p>又过了一天。思路变为：为不直接操作XML，应创建一个结构体，利用MSXML解析XML将信息放入结构体中，在后续树状控件和列表控件操作时都调用该结构体而非XML。</p>
<p>前面那么多废话，其实说白了就是要<strong>自己生成一棵树</strong>，数据来源是xml，通过MSXML获得每个结点信息，自己生成的树中只包含所需要的xml片段信息，之后树控件根据指针来获得选择结点的孩子结点。<br>xml解析的最关键之处，就是如何将xml文件内容解析成内存中的可用、易用的程序数据—DOM(Document Object Model)树。DOM其实就是多叉树，每个节点只需知道自己的第一个子节点（first child）和下一个兄弟节点（next sibling），即可实现元素数据的解析。</p>
<p>理一理六层结构：<br>map-&gt;分类节点-&gt;vector-&gt;n个小节点-&gt;结构体-&gt;xml</p>
<p>如果要求分类节点就一层，是完全OK的。但如果要求分类下面还需要小分类，这就很不ok了。换为<br>两个结构体：1）小节点结构体-&gt;xml<br>2)分类节点结构体-&gt;vector-&gt;1)</p>
<p>发现六层结构办不到时，仿佛多米诺骨牌立到最后几块，突然看到最开始的一段里有一块距离放远了……<br>但换成双结构体其实改动也没太多，又好像把那块出差错的给换了块适合长度的，整个链条还是能补完整的。<br>思维过山车  跌宕起伏</p>
]]></content>
      
        <categories>
            
            <category> 互联网 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> MFC </tag>
            
            <tag> XML </tag>
            
            <tag> TreeControl </tag>
            
            <tag> ListControl </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[≧∇≦]]></title>
      <url>http://hubojing.github.io/2017/07/18/%E6%B1%82%E8%B4%AD/</url>
      <content type="html"><![CDATA[<div align="left"><br><img src="http://b-ssl.duitang.com/uploads/item/201510/12/20151012094245_twKjA.jpeg" width="300" height="180" style="float:right;"><br><br> </div>

<p> 　　　　<br>　　<br>这贴适合又不适合卡吧老司机进来<br>　　<br>　　<br>　　<br> <a id="more"></a></p>
<p> <strong>不是组装电脑！让你失望了[微笑]</strong></p>
<p>直连光猫<br><img src="http://img.blog.csdn.net/20170722004202507?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="直连光猫"></p>
<p> 连接路由器<br> <img src="http://img.blog.csdn.net/20170722004135465?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="路由器"></p>
<p> 这还是最快的信道  100M的钱  10M的同等感受</p>
<p>1.求推路由器<br>100M光纤 家用 连Wifi设备还比较多 需跨墙<br>要求：性能好 性能好 性能好 性价比高</p>
<p>2.求推电视音响<br>要求：音质好 音质好 音质好 重低音强（低音炮！）<br>价格……当然性价比越高越好……价位……高中低各给一款参考？</p>
<p>能直接给京东链接最好了……</p>
<p>。。。。。。</p>
<p>之所以不去卡吧等土豪吧发帖，当然是  因为  穷</p>
<p>默默想起几年前的一首诗<br>三千预算进卡吧 加钱加到九万八 八核 E5 装上去 四路Titan抱回家<br>4K 屏幕组三屏 万元水冷温度压 固态硬盘装三块 硬盘内存使劲加 　<br>键鼠必花几千元 耳机手柄三千八 还有机箱六千元 红星炸弹劈劈啪</p>
<p>—华丽的分界线—</p>
<p>一天不能同时留2个Flag是真的<br>总有一个会打脸<br>比如上一篇写的 今天说好写MSHTML例子的  结果今天先被MSXML弄昏了<br>昨晚去云村留Flag说早睡  总要做到一个吧<br>真的！我要早点睡觉！不过12点！！！</p>
<p>附上两张公司厕所励志图…………………………<br><img src="http://img.blog.csdn.net/20170718232530408?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="1"></p>
<p><img src="http://img.blog.csdn.net/20170718232554242?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="2"></p>
<p>各位看到的大神们晚安~<br>我要做一只美丽的小菜鸟<br>⁄(⁄ ⁄•⁄ω⁄•⁄ ⁄)⁄</p>
]]></content>
      
        <categories>
            
            <category> 杂谈 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 杂谈 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[一个MFC利用MSXML解析XML的最简例子]]></title>
      <url>http://hubojing.github.io/2017/07/13/%E4%B8%80%E4%B8%AAMFC%E5%88%A9%E7%94%A8MSXML%E8%A7%A3%E6%9E%90XML%E7%9A%84%E6%9C%80%E7%AE%80%E4%BE%8B%E5%AD%90/</url>
      <content type="html"><![CDATA[<p><div align="left"><br><img src="http://p7.qhimg.com/t01ca7ccf3b4a3ffe38.png" width="300" height="180" style="float:right;"></div></p>
<p><br>　　<br>　　<br>　　<br>如题。<br>　　<br>　<br>　　　<br><a id="more"></a></p>
<h1 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h1><p>系统自带MSXML6.dll，在C盘system32下。先要导入文件，定义使用空间。</p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#import <span class="meta-string">&lt;msxml6.dll&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> MSXML2;</div></pre></td></tr></table></figure>
<p>为三个编辑框分别添加变量m_strId,m_strAuthor,m_strTitle。</p>
<p>主要代码：</p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">void</span> CXMLDlg::OnBnClickedBtncreate()</div><div class="line">&#123;</div><div class="line">	<span class="comment">// <span class="doctag">TODO:</span>  在此添加控件通知处理程序代码</span></div><div class="line">	UpdateData();</div><div class="line"></div><div class="line">	MSXML2::IXMLDOMDocumentPtr pDoc;</div><div class="line">	MSXML2::IXMLDOMElementPtr xmlRoot;</div><div class="line"></div><div class="line">	<span class="comment">//创建DOMDocument对象</span></div><div class="line">	HRESULT hr = pDoc.CreateInstance(<span class="number">__u</span>uidof(MSXML2::DOMDocument60));</div><div class="line"></div><div class="line">	<span class="comment">//根节点的名称为Book</span></div><div class="line">	<span class="comment">//创建元素并添加到文档中</span></div><div class="line">	xmlRoot = pDoc-&gt;createElement((<span class="keyword">_bstr_t</span>)<span class="string">"Book"</span>);</div><div class="line"></div><div class="line">	<span class="comment">//设置属性</span></div><div class="line">	xmlRoot-&gt;setAttribute(<span class="string">"id"</span>, (<span class="keyword">_variant_t</span>)m_strId);</div><div class="line">	pDoc-&gt;appendChild(xmlRoot);</div><div class="line">	MSXML2::IXMLDOMElementPtr pNode;</div><div class="line">	<span class="comment">//添加“author”元素</span></div><div class="line">	pNode = pDoc-&gt;createElement((<span class="keyword">_bstr_t</span>)<span class="string">"Author"</span>);</div><div class="line">	pNode-&gt;Puttext((<span class="keyword">_bstr_t</span>)m_strAuthor);</div><div class="line">	xmlRoot-&gt;appendChild(pNode);</div><div class="line"></div><div class="line">	<span class="comment">//添加“Title”元素</span></div><div class="line">	pNode = pDoc-&gt;createElement(<span class="string">"Title"</span>);</div><div class="line">	pNode-&gt;Puttext((<span class="keyword">_bstr_t</span>)m_strTitle);</div><div class="line">	xmlRoot-&gt;appendChild(pNode);</div><div class="line"></div><div class="line">	<span class="comment">//如果不存在就建立,存在就覆盖</span></div><div class="line">	pDoc-&gt;save(<span class="string">"text.xml"</span>);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">void</span> CXMLDlg::OnBnClickedBtnload()</div><div class="line">&#123;</div><div class="line">	<span class="comment">// <span class="doctag">TODO:</span>  在此添加控件通知处理程序代码</span></div><div class="line">	MSXML2::IXMLDOMDocumentPtr pDoc;</div><div class="line">	HRESULT hr = pDoc.CreateInstance(<span class="number">__u</span>uidof(MSXML2::DOMDocument60));</div><div class="line"></div><div class="line">	<span class="comment">//加载文件</span></div><div class="line">	pDoc-&gt;load(<span class="string">"text.xml"</span>);</div><div class="line"></div><div class="line">	MSXML2::IXMLDOMNodePtr pNode;</div><div class="line">	<span class="comment">//在树中查找名为Book的节点,"//"表示在任意一层查找</span></div><div class="line">	pNode = pDoc-&gt;selectSingleNode(<span class="string">"//Book"</span>);</div><div class="line">	MSXML2::DOMNodeType nodeType;</div><div class="line">	<span class="comment">//得到节点类型</span></div><div class="line">	pNode-&gt;get_nodeType(&amp;nodeType);</div><div class="line">	<span class="comment">//节点名称</span></div><div class="line">	CString strName;</div><div class="line">	strName = (<span class="keyword">char</span> *)pNode-&gt;GetnodeName();</div><div class="line">	<span class="comment">//节点属性,放在链表中</span></div><div class="line">	MSXML2::IXMLDOMNamedNodeMapPtr pAttrMap = <span class="literal">NULL</span>;</div><div class="line">	MSXML2::IXMLDOMNodePtr   pAttrItem;</div><div class="line">	<span class="keyword">_variant_t</span> variantValue;</div><div class="line">	pNode-&gt;get_attributes(&amp;pAttrMap);</div><div class="line">	<span class="keyword">long</span> count;</div><div class="line">	count = pAttrMap-&gt;get_length(&amp;count);</div><div class="line">	pAttrMap-&gt;get_item(<span class="number">0</span>, &amp;pAttrItem);</div><div class="line">	<span class="comment">//取得节点的值</span></div><div class="line">	pAttrItem-&gt;get_nodeTypedValue(&amp;variantValue);</div><div class="line">	m_strId = (<span class="keyword">char</span> *)(<span class="keyword">_bstr_t</span>)variantValue;</div><div class="line">	UpdateData(FALSE);</div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">void</span> CXMLDlg::OnBnClickedBtnclear()</div><div class="line">&#123;</div><div class="line">	<span class="comment">// <span class="doctag">TODO:</span>  在此添加控件通知处理程序代码</span></div><div class="line">	m_temp = <span class="string">""</span>;</div><div class="line">	SetDlgItemText(IDC_EDIT1, m_temp);</div><div class="line">	SetDlgItemText(IDC_EDIT2, m_temp);</div><div class="line">	SetDlgItemText(IDC_EDIT3, m_temp);</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h1 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h1><p>生成的XML:</p>
<p><img src="http://img.blog.csdn.net/20170713215940972?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="XML"></p>
<p>界面：</p>
<p><img src="http://img.blog.csdn.net/20170713220135411?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="界面"></p>
<h1 id="报错"><a href="#报错" class="headerlink" title="报错"></a>报错</h1><p>1.<br><img src="http://img.blog.csdn.net/20170713214333758?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="报错"><br>之前也遇到过类似情况。</p>
<p>解决：<br><a href="http://cs.cuc.edu.cn/huangwei/wiki/teaching_c_ds_fileio_unicode.html" target="_blank" rel="external">Unicode in the Windows API</a><br><a href="https://msdn.microsoft.com/en-us/library/windows/desktop/dd317766%28v=vs.85%29.aspx" target="_blank" rel="external">Conventions for Function Prototypes</a></p>
<p>简单说来，是因为随着版本更替，老规则渐渐不使用，现在的字符多是Unicode字符集，为了各版本的兼容，最好的方法是使用TEXT宏。即将程序改为：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">if</span> (!SUCCEEDED(hr))</div><div class="line"></div><div class="line">	&#123;</div><div class="line"></div><div class="line">		MessageBox(<span class="number">_</span>T(<span class="string">"无法创建DOMDocument对象，请检查是否安装了MS XML Parser 运行库!"</span>));</div><div class="line"></div><div class="line">		<span class="keyword">return</span>;</div><div class="line"></div><div class="line">	&#125;</div></pre></td></tr></table></figure></p>
<p>即能编译通过。</p>
<p>2.<br><img src="http://img.blog.csdn.net/20170713214741223?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="报错2"><br>这个DOMDocument40是什么？同样的程序，WIN7电脑就可以编译通过，WIN10就报错？要换成DOMDocument60才行。</p>
<p>答：MSXML SDK版本不同造成的差异。</p>
<h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p><a href="http://m.blog.csdn.net/John_ToStr/article/details/50970443" target="_blank" rel="external">MFC中利用MSXML解析XML文档</a></p>
]]></content>
      
        <categories>
            
            <category> 互联网 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> MFC </tag>
            
            <tag> XML </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[新闻杂谈]]></title>
      <url>http://hubojing.github.io/2017/06/29/%E5%8B%92%E7%B4%A2%E7%97%85%E6%AF%92/</url>
      <content type="html"><![CDATA[<div align="left"><br><img src="http://n.sinaimg.cn/translate/20170628/njjU-fyhneam5185815.jpg" width="300" height="180" style="float:right;"><br><br><br><br><br>给Petya病毒差评，比永恒之蓝的用户体验差太多了，竟然没有简体中文版！！！<br>　　<br><br><br> </div>

<a id="more"></a>
<p>QQ身份证显示，2006年加入QQ，竟然是全球第7.96亿个用户？？？？然而腾讯2008年用户数也才4.3亿吧，前不久统计全国网民也还不到十亿。<br>。。。。。。<br>好吧，我看2014年注册的号已经是第41.2亿个用户了，很强势。。。看来很多人都有多个QQ号→_→</p>
<hr>
<p><strong>三条新闻</strong></p>
<p>巴铁狗带<br>今天看新闻巴铁终于被拆了……<br>还记得当初第一回看到这个新概念视频时还觉得超酷的，然而仔细一想就漏洞百出。黑科技常有，但在众人提出质疑后却给不出解决方案的情况下一意孤行就很不地道。只能说是打着科研旗号骗国家钱的玩意儿……</p>
<hr>
<p>之前报道：<br>【微软惊呆：Win 10源代码泄漏！】外媒Theregister获得消息称，Win10源代码目前在网上被大量泄漏，这些源代码大小超过32TB。据悉，这些代码在今年三月左右在微软内部系统当中流出，包含Win10硬件驱动程序源码及USB和Wi-Fi协议栈等，获得源代码的黑客将可以查找系统中的漏洞用来破坏全球Windows系统.. ​</p>
<p>标题我都想好了：<br>震惊！！Windows系统将走向开源 国产自主研发加速</p>
<p>最新消息：微软承认遭泄露，不过只有1.2G。（这就很不新闻了）</p>
<hr>
<p>最近勒索病毒又升级了……吓得我又去看看自己win10升级没……</p>
<p>Petya病毒对勒索对象的加密，分为以下7个步骤：<br>遍历所有驱动器，对每个驱动器创建一个线程并行加密 -&gt; 生成AES-128密钥key -&gt; 遍历磁盘文件，用key对其进行AES加密 -&gt; 从程序中获取一个公钥pubkey（内置固定） -&gt; 用pubkey加密key，得到ekey -&gt; 将ekey写入README.TXT -&gt; 释放key</p>
<p><a href="https://yq.aliyun.com/articles/85783?spm=5176.100239.blogcont111587.33.CQn23O&amp;utm_content=m_24432" target="_blank" rel="external">WanaCrypt0r勒索蠕虫完全分析报告</a></p>
]]></content>
      
        <categories>
            
            <category> 杂谈 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 病毒 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[HOOPS记录]]></title>
      <url>http://hubojing.github.io/2017/06/25/HOOPS%E8%AE%B0%E5%BD%95/</url>
      <content type="html"><![CDATA[<div align="left"><br><img src="https://ss2.bdstatic.com/70cFvnSh_Q1YnxGkpoWK1HF6hhy/it/u=2467623496,1926622754&fm=15&gp=0.jpg" width="300" height="180" style="float:right;"><br><br> HOOPS初学概念小记（自用笔记）。<br>　　<br><br><br> </div>

<a id="more"></a>
<h1 id="hoops-3d-application-framework-hoops3daf"><a href="#HOOPS-3D-Application-Framework-HOOPS-3dAF" class="headerlink" title="HOOPS 3D Application Framework (HOOPS/3dAF)"></a>HOOPS 3D Application Framework (HOOPS/3dAF)</h1><p>官网描述<br>With HOOPS Visualize, you can rapidly produce eye-popping graphics across both mobile and desktop platforms. </p>
<p>At its core, HOOPS Visualize provides a flexible, hierarchical scene management engine capable of handling a range of graphics entities, together with a sophisticated graphics pipeline and high-performance graphics and interaction handling algorithms. It also delivers advanced capabilities to accelerate your application development, including an animation engine, clash detection, multi-plane sectioning, and large model visualization. </p>
<h1 id="hoops-基本图元和属性支持"><a href="#HOOPS-基本图元和属性支持" class="headerlink" title="HOOPS 基本图元和属性支持"></a>HOOPS 基本图元和属性支持</h1><blockquote>
<p>几 何</p>
<ul>
<li>Images, Unicode Text, Points, Lines, Polygons, Polylines, Polycylinders, NURBS curves, NURBS surfaces, Arcs, Ellipses, Circles, Tristrips, Trifans, Indexed Facesets, Cutting Planes, Capping Geometry<br>几何属性<br>Color, Transparency, Textures, Visibility, Patterns (Facet,edge 和 Line), Color Ramps, Lighting Interpolation, Selectability<br>渲染属性<br>Shaded, Analytic Hidden Line, Wireframe,Color Maps, Various Color Ramping Algorithms, Window Background Coloring</li>
</ul>
</blockquote>
<p>edges包含polygons,shells,meshes.<br>faces包含shells和meshes.<br>markers 单独的点.</p>
<p>标记marker</p>
<blockquote>
<p>可作为注释来使用</p>
<ul>
<li>当放大和缩小时标记的大小是不变的</li>
<li>标记的大小是朝向相机的，它并不旋转</li>
</ul>
</blockquote>
<h1 id="hoops-mvo-mvo分别是model-view-operator的缩写"><a href="#HOOPS-MVO-（MVO分别是Model、View、Operator的缩写）" class="headerlink" title="HOOPS MVO  （MVO分别是Model、View、Operator的缩写）"></a>HOOPS MVO  （MVO分别是Model、View、Operator的缩写）</h1><blockquote>
<p>段结构</p>
<ul>
<li>HDB</li>
<li>HBaseModel：处理在包含库下的段</li>
<li>HBaseView：处理在驱动段下的段和实例</li>
<li>HbaseOperator：处理图形用户界面/事件循环<br>· 相机操作<br>· 几何对象操作<br>· 选择</li>
</ul>
</blockquote>
<h1 id="3d应用程序中经常用到的函数"><a href="#3D应用程序中经常用到的函数" class="headerlink" title="3D应用程序中经常用到的函数"></a>3D应用程序中经常用到的函数</h1><ul>
<li>保存应用程序数据</li>
<li>绘制应用程序数据</li>
<li>管理应用程序数据</li>
<li>相机</li>
<li>选择</li>
<li>坐标</li>
<li>查询</li>
<li>驱动器设置</li>
</ul>
<h1 id="shell官网描述"><a href="#shell官网描述" class="headerlink" title="shell官网描述"></a>shell官网描述</h1><p>3D applications typically represent 3D objects with an “indexed face set” or “polygon-point mesh”. In Visualize, such primitives are called ‘shells’. A shell defines the boundary surface of an object in 3D using a set of planar polygons. Polygons can be multi-sided and can include holes. A shell is defined as an array of vertices (3D points) and an array of indices into the vertex array that define each polygonal face.</p>
<p>HOOPS Visualize supports a wide range of advanced functionality relating to shells, including the ability to select, highlight, and modify individual sub-entities (faces, edges, and vertices). Attributes such as normals, colors, and texture coordinates can also be set at the sub-entity level to enable a variety of complex shading and display.</p>
<p>Shell   一系列连通的Face / Wire的集合。线、面的集合，能位于实体外，也能在内部形成空洞。一个体含一个悬挂面，一个体内嵌许多和外表面相连的面都称为shell。</p>
<h2 id="shell-attributes属性"><a href="#shell-attributes属性" class="headerlink" title="shell attributes属性"></a>shell attributes属性</h2><p>1.Vertex markers<br>2.Silhouette（外表面）/perimeter/hard/adjacent edges<br>3.Cut edges/faces<br>4.Attributes on subparts<br>5.Smooth shading<br>6.Advanced rendering</p>
<h1 id="selection官网描述"><a href="#selection官网描述" class="headerlink" title="selection官网描述"></a>selection官网描述</h1><p>The Visualize libraries provide multiple operations for selection and several advanced highlighting techniques.</p>
<p>Selection</p>
<p>Control over what is targeted for selection is configurable:</p>
<p>Segments in the scene graph can be marked as available for selection<br>The selection level can be specified – entity, geometry, segment, or segment tree. Selection of individual vertices, edges and faces can be configured<br>The number of selected items to search for is configurable<br>The selection proximity can be used to select the nearest item on screen within a screen-based tolerance<br>Selections can be made of all items inside and outside a drag box, inside arbitrary screen regions defined by polylines or polygons, by a volume of 3D space, and by an arbitrary triangle mesh in 3D for clash/collision detection.</p>
<h1 id="坐标系coordinate-systems"><a href="#坐标系（Coordinate-Systems）" class="headerlink" title="坐标系（Coordinate Systems）"></a>坐标系（Coordinate Systems）</h1><p>对象（Object）-&gt;世界（World）-&gt;(-&gt;视点ViewPoint)-&gt;外窗口（Outer Window）-&gt;像素（Pixel）</p>
<h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><p><a href="http://blog.csdn.net/myan/article/details/647511" target="_blank" rel="external">理解矩阵（一）</a><br><a href="http://blog.csdn.net/myan/article/details/649018" target="_blank" rel="external">理解矩阵（二）</a><br><a href="http://blog.csdn.net/myan/article/details/1865397" target="_blank" rel="external">理解矩阵（三）</a><br><a href="https://wenku.baidu.com/view/a19bf8ec4afe04a1b071ded2.html?re=view" target="_blank" rel="external">HOOPS基础培训课程1</a><br><a href="https://wenku.baidu.com/view/a0154f28915f804d2b16c1d2.html?re=view" target="_blank" rel="external">HOOPS基础培训课程2</a><br><a href="https://wenku.baidu.com/view/84fdc0c789eb172ded63b7d2.html?re=view" target="_blank" rel="external">HOOPS基础培训课程3</a><br><a href="https://wenku.baidu.com/view/796caa5377232f60ddcca102.html?re=view" target="_blank" rel="external">HOOPS_MFC应用程序向导</a></p>
]]></content>
      
        <categories>
            
            <category> 互联网 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> HOOPS 3D </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[MFC+多线程+进度条+复制文件（夹）]]></title>
      <url>http://hubojing.github.io/2017/06/15/MFC-%E5%A4%9A%E7%BA%BF%E7%A8%8B-%E8%BF%9B%E5%BA%A6%E6%9D%A1-%E5%A4%8D%E5%88%B6%E6%96%87%E4%BB%B6%EF%BC%88%E5%A4%B9%EF%BC%89/</url>
      <content type="html"><![CDATA[<div align="left"><br><img src="https://ss3.bdstatic.com/70cFv8Sh_Q1YnxGkpoWK1HF6hhy/it/u=1049830277,1612840852&fm=26&gp=0.jpg" width="300" height="180" style="float:right;"><br><br><br>MFC，多线程+进度条+复制文件（夹）小程序。<br><br><br> </div>

<a id="more"></a>
<p>　　多线程：</p>
<ol>
<li>做一个MFC对话框程序。</li>
<li>点击开始按钮，程序启动一个工作线程，复制指定的文件夹到目标位置。</li>
<li>同时在更新进度条，反映当前的复制进度（按文件数量计算进度）。</li>
<li>点击停止按钮时终止，但需要保证当前正在复制的文件得以复制完成。</li>
<li>工作线程访问主线程需要使用消息机制，不能直接访问。</li>
<li>主界面不能锁死，停止按钮需要随时可以响应点击。</li>
</ol>
<p>整体思路：<br>在开始按钮里的响应函数中创建一个线程，在线程里复制，通过消息机制更新进度条，在消息机制的函数中和复制过程关联显示进度。</p>
<p>需要解决的问题：<br>1.怎么创建线程<br>2.怎么更新进度条<br>3.怎么将编辑框中输入的路径被copyfile函数读取到<br>4.怎么获取文件个数（遍历）<br>5.怎么把进度条和复制文件进度关联<br>（通过文件个数 进度条范围设置为0-文件数量长度    步长为1 完成一次复制加一次）<br>6.点击取消怎么保证当前正在复制的文件得以复制完成</p>
<p>获取个数：<br>递归遍历整个文件夹，然后递归复制文件到目的文件夹。<br>在递归遍历整个文件夹的时候，就可以拿到整个文件夹的大小以及文件数量。</p>
<p>传递进度数据，用postmessage到该进度条的窗口，在进度条窗口获取该消息 设置SetPos，updatedata该控件。<br>一个对话框里有个进度条控件，当线程接收到数据（文件的总大小和收到的大小）postmessage给对话框，对话框的PreTranslateMessage(MSG* pMsg)截取该消息设置进度条控件（范围和增量，setpos）。</p>
<p>我的方案：<br>关键代码：</p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//复制函数</span></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">CopyDirectory</span><span class="params">(CString source, CString target, CCopyFoldersDlg * pDlg)</span>    </span></div><div class="line">&#123;</div><div class="line"> 	 </div><div class="line">	CreateDirectory(target,<span class="literal">NULL</span>);   </div><div class="line">  </div><div class="line">    CFileFind finder;    </div><div class="line">    CString path;    </div><div class="line">    path.Format(<span class="number">_</span>T(<span class="string">"%s\\*.*"</span>),source);    </div><div class="line">  </div><div class="line">    BOOL bWorking = finder.FindFile(path);    </div><div class="line">    <span class="keyword">while</span> (bWorking)  </div><div class="line">    &#123;   </div><div class="line">        bWorking = finder.FindNextFile();   </div><div class="line">           </div><div class="line">        <span class="keyword">if</span> (finder.IsDirectory() &amp;&amp; !finder.IsDots())  </div><div class="line">        &#123;   </div><div class="line">            CopyDirectory(finder.GetFilePath(), target+<span class="number">_</span>T(<span class="string">"\\"</span>)+finder.GetFileName(), pDlg);  <span class="comment">//递归 </span></div><div class="line">        &#125;    </div><div class="line">        <span class="keyword">else</span>  </div><div class="line">        &#123;      </div><div class="line"></div><div class="line">			WaitForSingleObject(pDlg-&gt;hEvent,INFINITE);</div><div class="line"></div><div class="line">            CopyFile(finder.GetFilePath(), target+<span class="number">_</span>T(<span class="string">"\\"</span>)+finder.GetFileName(), FALSE);   </div><div class="line">            count++;  </div><div class="line">            pDlg-&gt;PostMessage(WM_USER_PROCESS, count);  </div><div class="line">          </div><div class="line">  </div><div class="line">             Sleep(<span class="number">50</span>);   </div><div class="line">        &#125;   </div><div class="line">    &#125;    </div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function">VOID <span class="title">GetInfo</span><span class="params">(CString csPath, <span class="keyword">long</span>&amp; FoldersNum, <span class="keyword">long</span>&amp; FilesNum)</span>  </span></div><div class="line">&#123;     </div><div class="line">    SetCurrentDirectory(csPath);  </div><div class="line">    CFileFind finder;  </div><div class="line">    BOOL bWorking = finder.FindFile(<span class="number">_</span>T(<span class="string">"*.*"</span>));  </div><div class="line">    <span class="keyword">while</span>(bWorking)  </div><div class="line">    &#123;  </div><div class="line">        bWorking = finder.FindNextFile();  </div><div class="line">  </div><div class="line">        <span class="keyword">if</span>(finder.IsDots())   </div><div class="line">        &#123;  </div><div class="line">            <span class="keyword">continue</span>;  </div><div class="line">        &#125;  </div><div class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(finder.IsDirectory())  </div><div class="line">        &#123;  </div><div class="line">            ++FoldersNum;  </div><div class="line">            GetInfo(finder.GetFilePath(), FoldersNum, FilesNum);  </div><div class="line">        &#125;  </div><div class="line">        <span class="keyword">else</span>  </div><div class="line">        &#123;  </div><div class="line">            ++FilesNum;  </div><div class="line">        &#125;  </div><div class="line">    &#125;  </div><div class="line">      </div><div class="line">&#125;  </div><div class="line"></div><div class="line"><span class="comment">//复制线程</span></div><div class="line">DWORD WINAPI CCopyFoldersDlg::CopyFolders(LPVOID pParam)</div><div class="line">&#123;  </div><div class="line">	CCopyFoldersDlg* pDlg = (CCopyFoldersDlg*)pParam;  </div><div class="line"></div><div class="line">	 <span class="keyword">if</span> (!pDlg) </div><div class="line">	 &#123;</div><div class="line">		 <span class="keyword">return</span> <span class="number">0</span>;  </div><div class="line">	 &#125;</div><div class="line">	 ResetEvent(pDlg-&gt;hExit);  </div><div class="line"></div><div class="line">	<span class="keyword">long</span> FoldersNum  = <span class="number">0</span>;                 </div><div class="line">    <span class="keyword">long</span> FilesNum = <span class="number">0</span>;                  </div><div class="line">    GetInfo(pDlg-&gt;m_SrcPath,FoldersNum, FilesNum);  </div><div class="line">	pDlg-&gt;m_Progress.SetRange(<span class="number">0</span>, FilesNum);  </div><div class="line">    pDlg-&gt;m_Progress.SetStep(<span class="number">1</span>); </div><div class="line">	CopyDirectory(pDlg-&gt;m_SrcPath, pDlg-&gt;m_DesPath, pDlg);   </div><div class="line"></div><div class="line">	SetEvent(pDlg-&gt;hExit);  </div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line">LRESULT CCopyFoldersDlg::Do_process(WPARAM wParam, LPARAM lParam)   </div><div class="line">&#123;   </div><div class="line">   wParam += <span class="number">1</span>;  </div><div class="line">   m_Progress.SetPos(wParam);    </div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;  </div><div class="line">&#125;         </div><div class="line">  </div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">void</span> CCopyFoldersDlg::OnStart() </div><div class="line">&#123;</div><div class="line">	UpdateData(<span class="literal">true</span>);</div><div class="line"></div><div class="line">	<span class="keyword">if</span> ((m_SrcPath.IsEmpty() &amp;&amp; m_DesPath.IsEmpty()))</div><div class="line">	&#123;</div><div class="line">		MessageBox(<span class="string">"路径不能为空！"</span>);</div><div class="line">		<span class="keyword">return</span>;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	<span class="keyword">else</span></div><div class="line">	&#123;</div><div class="line">		<span class="comment">//创建线程</span></div><div class="line">		hThread = CreateThread(<span class="literal">NULL</span>, <span class="number">0</span>, CopyFolders, <span class="keyword">this</span>, <span class="number">0</span>, <span class="literal">NULL</span>);</div><div class="line">		hEvent = CreateEvent(<span class="literal">NULL</span>, TRUE, TRUE, <span class="literal">NULL</span>);</div><div class="line">		CloseHandle(hThread);</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">void</span> CCopyFoldersDlg::OnStop() </div><div class="line">&#123;</div><div class="line">	m_iStatus++;  </div><div class="line">         </div><div class="line">    <span class="keyword">if</span> (m_iStatus % <span class="number">2</span> == <span class="number">0</span>)  </div><div class="line">    &#123;    </div><div class="line">         SetEvent(hEvent);</div><div class="line">    &#125;   </div><div class="line">    <span class="keyword">else</span>  </div><div class="line">    &#123;  </div><div class="line">        ResetEvent(hEvent);</div><div class="line">    &#125;  </div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">void</span> CCopyFoldersDlg::OnTimer(UINT_PTR nIDEvent)  </div><div class="line">&#123;  </div><div class="line">    CDialog::OnTimer(nIDEvent);  </div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>完整代码：<br>.cpp文件</p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div><div class="line">175</div><div class="line">176</div><div class="line">177</div><div class="line">178</div><div class="line">179</div><div class="line">180</div><div class="line">181</div><div class="line">182</div><div class="line">183</div><div class="line">184</div><div class="line">185</div><div class="line">186</div><div class="line">187</div><div class="line">188</div><div class="line">189</div><div class="line">190</div><div class="line">191</div><div class="line">192</div><div class="line">193</div><div class="line">194</div><div class="line">195</div><div class="line">196</div><div class="line">197</div><div class="line">198</div><div class="line">199</div><div class="line">200</div><div class="line">201</div><div class="line">202</div><div class="line">203</div><div class="line">204</div><div class="line">205</div><div class="line">206</div><div class="line">207</div><div class="line">208</div><div class="line">209</div><div class="line">210</div><div class="line">211</div><div class="line">212</div><div class="line">213</div><div class="line">214</div><div class="line">215</div><div class="line">216</div><div class="line">217</div><div class="line">218</div><div class="line">219</div><div class="line">220</div><div class="line">221</div><div class="line">222</div><div class="line">223</div><div class="line">224</div><div class="line">225</div><div class="line">226</div><div class="line">227</div><div class="line">228</div><div class="line">229</div><div class="line">230</div><div class="line">231</div><div class="line">232</div><div class="line">233</div><div class="line">234</div><div class="line">235</div><div class="line">236</div><div class="line">237</div><div class="line">238</div><div class="line">239</div><div class="line">240</div><div class="line">241</div><div class="line">242</div><div class="line">243</div><div class="line">244</div><div class="line">245</div><div class="line">246</div><div class="line">247</div><div class="line">248</div><div class="line">249</div><div class="line">250</div><div class="line">251</div><div class="line">252</div><div class="line">253</div><div class="line">254</div><div class="line">255</div><div class="line">256</div><div class="line">257</div><div class="line">258</div><div class="line">259</div><div class="line">260</div><div class="line">261</div><div class="line">262</div><div class="line">263</div><div class="line">264</div><div class="line">265</div><div class="line">266</div><div class="line">267</div><div class="line">268</div><div class="line">269</div><div class="line">270</div><div class="line">271</div><div class="line">272</div><div class="line">273</div><div class="line">274</div><div class="line">275</div><div class="line">276</div><div class="line">277</div><div class="line">278</div><div class="line">279</div><div class="line">280</div><div class="line">281</div><div class="line">282</div><div class="line">283</div><div class="line">284</div><div class="line">285</div><div class="line">286</div><div class="line">287</div><div class="line">288</div><div class="line">289</div><div class="line">290</div><div class="line">291</div><div class="line">292</div><div class="line">293</div><div class="line">294</div><div class="line">295</div><div class="line">296</div><div class="line">297</div><div class="line">298</div><div class="line">299</div><div class="line">300</div><div class="line">301</div><div class="line">302</div><div class="line">303</div><div class="line">304</div><div class="line">305</div><div class="line">306</div><div class="line">307</div><div class="line">308</div><div class="line">309</div><div class="line">310</div><div class="line">311</div><div class="line">312</div><div class="line">313</div><div class="line">314</div><div class="line">315</div><div class="line">316</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// CopyFoldersDlg.cpp : implementation file</span></div><div class="line"><span class="comment">//</span></div><div class="line"></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"stdafx.h"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"CopyFolders.h"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"CopyFoldersDlg.h"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"windows.h"</span></span></div><div class="line"></div><div class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> _DEBUG</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> new DEBUG_NEW</span></div><div class="line"><span class="meta">#<span class="meta-keyword">undef</span> THIS_FILE</span></div><div class="line"><span class="keyword">static</span> <span class="keyword">char</span> THIS_FILE[] = <span class="number">__F</span>ILE__;</div><div class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></div><div class="line"></div><div class="line"><span class="keyword">static</span> <span class="keyword">int</span> count = <span class="number">0</span>; </div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> WM_USER_PROCESS (WM_USER+101)  </span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">CopyDirectory</span><span class="params">(CString source, CString target,CWnd * pWndMsg)</span></span>;  </div><div class="line"><span class="comment">/////////////////////////////////////////////////////////////////////////////</span></div><div class="line"><span class="comment">// CAboutDlg dialog used for App About</span></div><div class="line"></div><div class="line"><span class="keyword">class</span> CAboutDlg : <span class="keyword">public</span> CDialog</div><div class="line">&#123;</div><div class="line"><span class="keyword">public</span>:</div><div class="line">	CAboutDlg();</div><div class="line"></div><div class="line"><span class="comment">// Dialog Data</span></div><div class="line">	<span class="comment">//&#123;&#123;AFX_DATA(CAboutDlg)</span></div><div class="line">	<span class="keyword">enum</span> &#123; IDD = IDD_ABOUTBOX &#125;;</div><div class="line">	<span class="comment">//&#125;&#125;AFX_DATA</span></div><div class="line"></div><div class="line">	<span class="comment">// ClassWizard generated virtual function overrides</span></div><div class="line">	<span class="comment">//&#123;&#123;AFX_VIRTUAL(CAboutDlg)</span></div><div class="line">	<span class="keyword">protected</span>:</div><div class="line">	<span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">DoDataExchange</span><span class="params">(CDataExchange* pDX)</span></span>;    <span class="comment">// DDX/DDV support</span></div><div class="line">	<span class="comment">//&#125;&#125;AFX_VIRTUAL</span></div><div class="line"></div><div class="line"><span class="comment">// Implementation</span></div><div class="line"><span class="keyword">protected</span>:</div><div class="line">	<span class="comment">//&#123;&#123;AFX_MSG(CAboutDlg)</span></div><div class="line">	<span class="comment">//&#125;&#125;AFX_MSG</span></div><div class="line">	DECLARE_MESSAGE_MAP()</div><div class="line">&#125;;</div><div class="line"></div><div class="line">CAboutDlg::CAboutDlg() : CDialog(CAboutDlg::IDD)</div><div class="line">&#123;</div><div class="line">	<span class="comment">//&#123;&#123;AFX_DATA_INIT(CAboutDlg)</span></div><div class="line">	<span class="comment">//&#125;&#125;AFX_DATA_INIT</span></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">void</span> CAboutDlg::DoDataExchange(CDataExchange* pDX)</div><div class="line">&#123;</div><div class="line">	CDialog::DoDataExchange(pDX);</div><div class="line">	<span class="comment">//&#123;&#123;AFX_DATA_MAP(CAboutDlg)</span></div><div class="line">	<span class="comment">//&#125;&#125;AFX_DATA_MAP</span></div><div class="line">&#125;</div><div class="line"></div><div class="line">BEGIN_MESSAGE_MAP(CAboutDlg, CDialog)</div><div class="line">	<span class="comment">//&#123;&#123;AFX_MSG_MAP(CAboutDlg)</span></div><div class="line">		<span class="comment">// No message handlers</span></div><div class="line">	<span class="comment">//&#125;&#125;AFX_MSG_MAP</span></div><div class="line">END_MESSAGE_MAP()</div><div class="line"></div><div class="line"><span class="comment">/////////////////////////////////////////////////////////////////////////////</span></div><div class="line"><span class="comment">// CCopyFoldersDlg dialog</span></div><div class="line"></div><div class="line">CCopyFoldersDlg::CCopyFoldersDlg(CWnd* pParent <span class="comment">/*=NULL*/</span>)</div><div class="line">	: CDialog(CCopyFoldersDlg::IDD, pParent)</div><div class="line">&#123;</div><div class="line">	<span class="comment">//&#123;&#123;AFX_DATA_INIT(CCopyFoldersDlg)</span></div><div class="line">	m_SrcPath = <span class="number">_</span>T(<span class="string">""</span>);</div><div class="line">	m_DesPath = <span class="number">_</span>T(<span class="string">""</span>);</div><div class="line">	<span class="comment">//&#125;&#125;AFX_DATA_INIT</span></div><div class="line">	<span class="comment">// Note that LoadIcon does not require a subsequent DestroyIcon in Win32</span></div><div class="line">	m_hIcon = AfxGetApp()-&gt;LoadIcon(IDR_MAINFRAME);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">void</span> CCopyFoldersDlg::DoDataExchange(CDataExchange* pDX)</div><div class="line">&#123;</div><div class="line">	CDialog::DoDataExchange(pDX);</div><div class="line">	<span class="comment">//&#123;&#123;AFX_DATA_MAP(CCopyFoldersDlg)</span></div><div class="line">	DDX_Control(pDX, IDC_PROGRESS, m_Progress);</div><div class="line">	DDX_Text(pDX, IDC_EDIT1, m_SrcPath);</div><div class="line">	DDX_Text(pDX, IDC_EDIT2, m_DesPath);</div><div class="line">	<span class="comment">//&#125;&#125;AFX_DATA_MAP</span></div><div class="line">&#125;</div><div class="line"></div><div class="line">BEGIN_MESSAGE_MAP(CCopyFoldersDlg, CDialog)</div><div class="line">	<span class="comment">//&#123;&#123;AFX_MSG_MAP(CCopyFoldersDlg)</span></div><div class="line">	ON_WM_SYSCOMMAND()</div><div class="line">	ON_WM_PAINT()</div><div class="line">	ON_WM_QUERYDRAGICON()</div><div class="line">	ON_BN_CLICKED(IDC_START, OnStart)</div><div class="line">	ON_BN_CLICKED(IDC_STOP, OnStop)</div><div class="line">	ON_MESSAGE(WM_USER_PROCESS, Do_process)  </div><div class="line">	ON_WM_TIMER()  </div><div class="line"> </div><div class="line">	<span class="comment">//&#125;&#125;AFX_MSG_MAP</span></div><div class="line">END_MESSAGE_MAP()</div><div class="line"></div><div class="line"><span class="comment">/////////////////////////////////////////////////////////////////////////////</span></div><div class="line"><span class="comment">// CCopyFoldersDlg message handlers</span></div><div class="line"></div><div class="line">BOOL CCopyFoldersDlg::OnInitDialog()</div><div class="line">&#123;</div><div class="line">	CDialog::OnInitDialog();</div><div class="line"></div><div class="line">	<span class="comment">// Add "About..." menu item to system menu.</span></div><div class="line"></div><div class="line">	<span class="comment">// IDM_ABOUTBOX must be in the system command range.</span></div><div class="line">	ASSERT((IDM_ABOUTBOX &amp; <span class="number">0xFFF0</span>) == IDM_ABOUTBOX);</div><div class="line">	ASSERT(IDM_ABOUTBOX &lt; <span class="number">0xF000</span>);</div><div class="line"></div><div class="line">	CMenu* pSysMenu = GetSystemMenu(FALSE);</div><div class="line">	<span class="keyword">if</span> (pSysMenu != <span class="literal">NULL</span>)</div><div class="line">	&#123;</div><div class="line">		CString strAboutMenu;</div><div class="line">		strAboutMenu.LoadString(IDS_ABOUTBOX);</div><div class="line">		<span class="keyword">if</span> (!strAboutMenu.IsEmpty())</div><div class="line">		&#123;</div><div class="line">			pSysMenu-&gt;AppendMenu(MF_SEPARATOR);</div><div class="line">			pSysMenu-&gt;AppendMenu(MF_STRING, IDM_ABOUTBOX, strAboutMenu);</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	<span class="comment">// Set the icon for this dialog.  The framework does this automatically</span></div><div class="line">	<span class="comment">//  when the application's main window is not a dialog</span></div><div class="line">	SetIcon(m_hIcon, TRUE);			<span class="comment">// Set big icon</span></div><div class="line">	SetIcon(m_hIcon, FALSE);		<span class="comment">// Set small icon</span></div><div class="line">	</div><div class="line">	<span class="comment">// <span class="doctag">TODO:</span> Add extra initialization here</span></div><div class="line">	</div><div class="line">	<span class="keyword">return</span> TRUE;  <span class="comment">// return TRUE  unless you set the focus to a control</span></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">void</span> CCopyFoldersDlg::OnSysCommand(UINT nID, LPARAM lParam)</div><div class="line">&#123;</div><div class="line">	<span class="keyword">if</span> ((nID &amp; <span class="number">0xFFF0</span>) == IDM_ABOUTBOX)</div><div class="line">	&#123;</div><div class="line">		CAboutDlg dlgAbout;</div><div class="line">		dlgAbout.DoModal();</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">else</span></div><div class="line">	&#123;</div><div class="line">		CDialog::OnSysCommand(nID, lParam);</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">// If you add a minimize button to your dialog, you will need the code below</span></div><div class="line"><span class="comment">//  to draw the icon.  For MFC applications using the document/view model,</span></div><div class="line"><span class="comment">//  this is automatically done for you by the framework.</span></div><div class="line"></div><div class="line"><span class="keyword">void</span> CCopyFoldersDlg::OnPaint() </div><div class="line">&#123;</div><div class="line">	<span class="keyword">if</span> (IsIconic())</div><div class="line">	&#123;</div><div class="line">		<span class="function">CPaintDC <span class="title">dc</span><span class="params">(<span class="keyword">this</span>)</span></span>; <span class="comment">// device context for painting</span></div><div class="line"></div><div class="line">		SendMessage(WM_ICONERASEBKGND, (WPARAM) dc.GetSafeHdc(), <span class="number">0</span>);</div><div class="line"></div><div class="line">		<span class="comment">// Center icon in client rectangle</span></div><div class="line">		<span class="keyword">int</span> cxIcon = GetSystemMetrics(SM_CXICON);</div><div class="line">		<span class="keyword">int</span> cyIcon = GetSystemMetrics(SM_CYICON);</div><div class="line">		CRect rect;</div><div class="line">		GetClientRect(&amp;rect);</div><div class="line">		<span class="keyword">int</span> x = (rect.Width() - cxIcon + <span class="number">1</span>) / <span class="number">2</span>;</div><div class="line">		<span class="keyword">int</span> y = (rect.Height() - cyIcon + <span class="number">1</span>) / <span class="number">2</span>;</div><div class="line"></div><div class="line">		<span class="comment">// Draw the icon</span></div><div class="line">		dc.DrawIcon(x, y, m_hIcon);</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">else</span></div><div class="line">	&#123;</div><div class="line">		CDialog::OnPaint();</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">// The system calls this to obtain the cursor to display while the user drags</span></div><div class="line"><span class="comment">//  the minimized window.</span></div><div class="line">HCURSOR CCopyFoldersDlg::OnQueryDragIcon()</div><div class="line">&#123;</div><div class="line">	<span class="keyword">return</span> (HCURSOR) m_hIcon;</div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"><span class="comment">//复制函数</span></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">CopyDirectory</span><span class="params">(CString source, CString target, CCopyFoldersDlg * pDlg)</span>    </span></div><div class="line">&#123;</div><div class="line"> 	 </div><div class="line">	CreateDirectory(target,<span class="literal">NULL</span>);   </div><div class="line">  </div><div class="line">    CFileFind finder;    </div><div class="line">    CString path;    </div><div class="line">    path.Format(<span class="number">_</span>T(<span class="string">"%s\\*.*"</span>),source);    </div><div class="line">  </div><div class="line">    BOOL bWorking = finder.FindFile(path);    </div><div class="line">    <span class="keyword">while</span> (bWorking)  </div><div class="line">    &#123;   </div><div class="line">        bWorking = finder.FindNextFile();   </div><div class="line">           </div><div class="line">        <span class="keyword">if</span> (finder.IsDirectory() &amp;&amp; !finder.IsDots())  </div><div class="line">        &#123;   </div><div class="line">            CopyDirectory(finder.GetFilePath(), target+<span class="number">_</span>T(<span class="string">"\\"</span>)+finder.GetFileName(), pDlg);  <span class="comment">//递归 </span></div><div class="line">        &#125;    </div><div class="line">        <span class="keyword">else</span>  </div><div class="line">        &#123;      </div><div class="line"></div><div class="line">			WaitForSingleObject(pDlg-&gt;hEvent,INFINITE);</div><div class="line"></div><div class="line">            CopyFile(finder.GetFilePath(), target+<span class="number">_</span>T(<span class="string">"\\"</span>)+finder.GetFileName(), FALSE);   </div><div class="line">            count++;  </div><div class="line">            pDlg-&gt;PostMessage(WM_USER_PROCESS, count);  </div><div class="line">          </div><div class="line">  </div><div class="line">             Sleep(<span class="number">50</span>);   </div><div class="line">        &#125;   </div><div class="line">    &#125;    </div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function">VOID <span class="title">GetInfo</span><span class="params">(CString csPath, <span class="keyword">long</span>&amp; FoldersNum, <span class="keyword">long</span>&amp; FilesNum)</span>  </span></div><div class="line">&#123;     </div><div class="line">    SetCurrentDirectory(csPath);  </div><div class="line">    CFileFind finder;  </div><div class="line">    BOOL bWorking = finder.FindFile(<span class="number">_</span>T(<span class="string">"*.*"</span>));  </div><div class="line">    <span class="keyword">while</span>(bWorking)  </div><div class="line">    &#123;  </div><div class="line">        bWorking = finder.FindNextFile();  </div><div class="line">  </div><div class="line">        <span class="keyword">if</span>(finder.IsDots())   </div><div class="line">        &#123;  </div><div class="line">            <span class="keyword">continue</span>;  </div><div class="line">        &#125;  </div><div class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(finder.IsDirectory())  </div><div class="line">        &#123;  </div><div class="line">            ++FoldersNum;  </div><div class="line">            GetInfo(finder.GetFilePath(), FoldersNum, FilesNum);  </div><div class="line">        &#125;  </div><div class="line">        <span class="keyword">else</span>  </div><div class="line">        &#123;  </div><div class="line">            ++FilesNum;  </div><div class="line">        &#125;  </div><div class="line">    &#125;  </div><div class="line">      </div><div class="line">&#125;  </div><div class="line"></div><div class="line"><span class="comment">//复制线程</span></div><div class="line">DWORD WINAPI CCopyFoldersDlg::CopyFolders(LPVOID pParam)</div><div class="line">&#123;  </div><div class="line">	CCopyFoldersDlg* pDlg = (CCopyFoldersDlg*)pParam;  </div><div class="line"></div><div class="line">	 <span class="keyword">if</span> (!pDlg) </div><div class="line">	 &#123;</div><div class="line">		 <span class="keyword">return</span> <span class="number">0</span>;  </div><div class="line">	 &#125;</div><div class="line">	 ResetEvent(pDlg-&gt;hExit);  </div><div class="line"></div><div class="line">	<span class="keyword">long</span> FoldersNum  = <span class="number">0</span>;                 </div><div class="line">    <span class="keyword">long</span> FilesNum = <span class="number">0</span>;                  </div><div class="line">    GetInfo(pDlg-&gt;m_SrcPath,FoldersNum, FilesNum);  </div><div class="line">	pDlg-&gt;m_Progress.SetRange(<span class="number">0</span>, FilesNum);  </div><div class="line">    pDlg-&gt;m_Progress.SetStep(<span class="number">1</span>); </div><div class="line">	CopyDirectory(pDlg-&gt;m_SrcPath, pDlg-&gt;m_DesPath, pDlg);   </div><div class="line"></div><div class="line">	SetEvent(pDlg-&gt;hExit);  </div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line">LRESULT CCopyFoldersDlg::Do_process(WPARAM wParam, LPARAM lParam)   </div><div class="line">&#123;   </div><div class="line">   wParam += <span class="number">1</span>;  </div><div class="line">   m_Progress.SetPos(wParam);    </div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;  </div><div class="line">&#125;         </div><div class="line">  </div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">void</span> CCopyFoldersDlg::OnStart() </div><div class="line">&#123;</div><div class="line">	UpdateData(<span class="literal">true</span>);</div><div class="line"></div><div class="line">	<span class="keyword">if</span> ((m_SrcPath.IsEmpty() &amp;&amp; m_DesPath.IsEmpty()))</div><div class="line">	&#123;</div><div class="line">		MessageBox(<span class="string">"路径不能为空！"</span>);</div><div class="line">		<span class="keyword">return</span>;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	<span class="keyword">else</span></div><div class="line">	&#123;</div><div class="line">		<span class="comment">//创建线程</span></div><div class="line">		hThread = CreateThread(<span class="literal">NULL</span>, <span class="number">0</span>, CopyFolders, <span class="keyword">this</span>, <span class="number">0</span>, <span class="literal">NULL</span>);</div><div class="line">		hEvent = CreateEvent(<span class="literal">NULL</span>, TRUE, TRUE, <span class="literal">NULL</span>);</div><div class="line">		CloseHandle(hThread);</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">void</span> CCopyFoldersDlg::OnStop() </div><div class="line">&#123;</div><div class="line">	m_iStatus++;  </div><div class="line">         </div><div class="line">    <span class="keyword">if</span> (m_iStatus % <span class="number">2</span> == <span class="number">0</span>)  </div><div class="line">    &#123;    </div><div class="line">         SetEvent(hEvent);</div><div class="line">    &#125;   </div><div class="line">    <span class="keyword">else</span>  </div><div class="line">    &#123;  </div><div class="line">        ResetEvent(hEvent);</div><div class="line">    &#125;  </div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">void</span> CCopyFoldersDlg::OnTimer(UINT_PTR nIDEvent)  </div><div class="line">&#123;  </div><div class="line">    CDialog::OnTimer(nIDEvent);  </div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>.h文件：</p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// CopyFoldersDlg.h : header file</span></div><div class="line"><span class="comment">//</span></div><div class="line"></div><div class="line"><span class="meta">#<span class="meta-keyword">if</span> !defined(AFX_COPYFOLDERSDLG_H__BADF1BD0_296B_4FED_96F7_BCD2628D4B03__INCLUDED_)</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> AFX_COPYFOLDERSDLG_H__BADF1BD0_296B_4FED_96F7_BCD2628D4B03__INCLUDED_</span></div><div class="line"></div><div class="line"><span class="meta">#<span class="meta-keyword">if</span> _MSC_VER &gt; 1000</span></div><div class="line"><span class="meta">#<span class="meta-keyword">pragma</span> once</span></div><div class="line"><span class="meta">#<span class="meta-keyword">endif</span> <span class="comment">// _MSC_VER &gt; 1000</span></span></div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"><span class="comment">/////////////////////////////////////////////////////////////////////////////</span></div><div class="line"><span class="comment">// CCopyFoldersDlg dialog</span></div><div class="line"></div><div class="line"><span class="keyword">class</span> CCopyFoldersDlg : <span class="keyword">public</span> CDialog</div><div class="line">&#123;</div><div class="line"><span class="comment">// Construction</span></div><div class="line"><span class="keyword">public</span>:</div><div class="line">	CCopyFoldersDlg(CWnd* pParent = <span class="literal">NULL</span>);	<span class="comment">// standard constructor</span></div><div class="line">				</div><div class="line">	HANDLE hThread;</div><div class="line">	HANDLE hEvent;     </div><div class="line">	HANDLE hExit;  </div><div class="line"></div><div class="line">	<span class="function"><span class="keyword">static</span> DWORD WINAPI <span class="title">CopyFolders</span><span class="params">(LPVOID pParam)</span></span>;</div><div class="line">	<span class="keyword">int</span> m_iStatus;  </div><div class="line"></div><div class="line"><span class="comment">// Dialog Data</span></div><div class="line">	<span class="comment">//&#123;&#123;AFX_DATA(CCopyFoldersDlg)</span></div><div class="line">	<span class="keyword">enum</span> &#123; IDD = IDD_COPYFOLDERS_DIALOG &#125;;</div><div class="line">	CProgressCtrl	m_Progress;</div><div class="line">	CString	m_SrcPath;</div><div class="line">	CString	m_DesPath;</div><div class="line">	<span class="comment">//&#125;&#125;AFX_DATA</span></div><div class="line"></div><div class="line">	<span class="comment">// ClassWizard generated virtual function overrides</span></div><div class="line">	<span class="comment">//&#123;&#123;AFX_VIRTUAL(CCopyFoldersDlg)</span></div><div class="line">	<span class="keyword">protected</span>:</div><div class="line">	<span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">DoDataExchange</span><span class="params">(CDataExchange* pDX)</span></span>;	<span class="comment">// DDX/DDV support</span></div><div class="line">	<span class="comment">//&#125;&#125;AFX_VIRTUAL</span></div><div class="line"></div><div class="line"><span class="comment">// Implementation</span></div><div class="line"><span class="keyword">protected</span>:</div><div class="line">	HICON m_hIcon;</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line">	<span class="comment">// Generated message map functions</span></div><div class="line">	<span class="comment">//&#123;&#123;AFX_MSG(CCopyFoldersDlg)</span></div><div class="line">	<span class="function"><span class="keyword">virtual</span> BOOL <span class="title">OnInitDialog</span><span class="params">()</span></span>;</div><div class="line">	<span class="function">afx_msg <span class="keyword">void</span> <span class="title">OnSysCommand</span><span class="params">(UINT nID, LPARAM lParam)</span></span>;</div><div class="line">	<span class="function">afx_msg <span class="keyword">void</span> <span class="title">OnPaint</span><span class="params">()</span></span>;</div><div class="line">	<span class="function">afx_msg HCURSOR <span class="title">OnQueryDragIcon</span><span class="params">()</span></span>;</div><div class="line">	<span class="function">afx_msg <span class="keyword">void</span> <span class="title">OnStart</span><span class="params">()</span></span>;</div><div class="line">	<span class="function">afx_msg <span class="keyword">void</span> <span class="title">OnStop</span><span class="params">()</span></span>;</div><div class="line">	afx_msg LRESULT CCopyFoldersDlg::Do_process(WPARAM wParam,LPARAM lParam); </div><div class="line">    <span class="function">afx_msg <span class="keyword">void</span> <span class="title">OnTimer</span><span class="params">(UINT_PTR nIDEvent)</span></span>;  </div><div class="line">	<span class="comment">//&#125;&#125;AFX_MSG</span></div><div class="line">	DECLARE_MESSAGE_MAP()</div><div class="line">&#125;;</div><div class="line"></div><div class="line"><span class="comment">//&#123;&#123;AFX_INSERT_LOCATION&#125;&#125;</span></div><div class="line"><span class="comment">// Microsoft Visual C++ will insert additional declarations immediately before the previous line.</span></div><div class="line"></div><div class="line"><span class="meta">#<span class="meta-keyword">endif</span> <span class="comment">// !defined(AFX_COPYFOLDERSDLG_H__BADF1BD0_296B_4FED_96F7_BCD2628D4B03__INCLUDED_)</span></span></div></pre></td></tr></table></figure>
<p>界面：<br><img src="http://img.blog.csdn.net/20170615182222589?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="界面"></p>
<p>另一种方案（大同小异）：<br>.cpp文件<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div><div class="line">175</div><div class="line">176</div><div class="line">177</div><div class="line">178</div><div class="line">179</div><div class="line">180</div><div class="line">181</div><div class="line">182</div><div class="line">183</div><div class="line">184</div><div class="line">185</div><div class="line">186</div><div class="line">187</div><div class="line">188</div><div class="line">189</div><div class="line">190</div><div class="line">191</div><div class="line">192</div><div class="line">193</div><div class="line">194</div><div class="line">195</div><div class="line">196</div><div class="line">197</div><div class="line">198</div><div class="line">199</div><div class="line">200</div><div class="line">201</div><div class="line">202</div><div class="line">203</div><div class="line">204</div><div class="line">205</div><div class="line">206</div><div class="line">207</div><div class="line">208</div><div class="line">209</div><div class="line">210</div><div class="line">211</div><div class="line">212</div><div class="line">213</div><div class="line">214</div><div class="line">215</div><div class="line">216</div><div class="line">217</div><div class="line">218</div><div class="line">219</div><div class="line">220</div><div class="line">221</div><div class="line">222</div><div class="line">223</div><div class="line">224</div><div class="line">225</div><div class="line">226</div><div class="line">227</div><div class="line">228</div><div class="line">229</div><div class="line">230</div><div class="line">231</div><div class="line">232</div><div class="line">233</div><div class="line">234</div><div class="line">235</div><div class="line">236</div><div class="line">237</div><div class="line">238</div><div class="line">239</div><div class="line">240</div><div class="line">241</div><div class="line">242</div><div class="line">243</div><div class="line">244</div><div class="line">245</div><div class="line">246</div><div class="line">247</div><div class="line">248</div><div class="line">249</div><div class="line">250</div><div class="line">251</div><div class="line">252</div><div class="line">253</div><div class="line">254</div><div class="line">255</div><div class="line">256</div><div class="line">257</div><div class="line">258</div><div class="line">259</div><div class="line">260</div><div class="line">261</div><div class="line">262</div><div class="line">263</div><div class="line">264</div><div class="line">265</div><div class="line">266</div><div class="line">267</div><div class="line">268</div><div class="line">269</div><div class="line">270</div><div class="line">271</div><div class="line">272</div><div class="line">273</div><div class="line">274</div><div class="line">275</div><div class="line">276</div><div class="line">277</div><div class="line">278</div><div class="line">279</div><div class="line">280</div><div class="line">281</div><div class="line">282</div><div class="line">283</div><div class="line">284</div><div class="line">285</div><div class="line">286</div><div class="line">287</div><div class="line">288</div><div class="line">289</div><div class="line">290</div><div class="line">291</div><div class="line">292</div><div class="line">293</div><div class="line">294</div><div class="line">295</div><div class="line">296</div><div class="line">297</div><div class="line">298</div><div class="line">299</div><div class="line">300</div><div class="line">301</div><div class="line">302</div><div class="line">303</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// FileCopyNumDlg.cpp : implementation file</span></div><div class="line"><span class="comment">//</span></div><div class="line"></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"stdafx.h"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"FileCopyNum.h"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"FileCopyNumDlg.h"</span></span></div><div class="line"></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> WM_COPYFILE_NOTIFY_NUM WM_USER+1</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> WM_COPYFILE_NOTIFY_SUM WM_USER+8</span></div><div class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> _DEBUG</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> new DEBUG_NEW</span></div><div class="line"><span class="meta">#<span class="meta-keyword">undef</span> THIS_FILE</span></div><div class="line"><span class="keyword">static</span> <span class="keyword">char</span> THIS_FILE[] = <span class="number">__F</span>ILE__;</div><div class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></div><div class="line"></div><div class="line"><span class="comment">/////////////////////////////////////////////////////////////////////////////</span></div><div class="line"><span class="comment">// CAboutDlg dialog used for App About</span></div><div class="line"></div><div class="line"><span class="keyword">class</span> CAboutDlg : <span class="keyword">public</span> CDialog</div><div class="line">&#123;</div><div class="line"><span class="keyword">public</span>:</div><div class="line">	CAboutDlg();</div><div class="line"></div><div class="line"><span class="comment">// Dialog Data</span></div><div class="line">	<span class="comment">//&#123;&#123;AFX_DATA(CAboutDlg)</span></div><div class="line">	<span class="keyword">enum</span> &#123; IDD = IDD_ABOUTBOX &#125;;</div><div class="line">	<span class="comment">//&#125;&#125;AFX_DATA</span></div><div class="line"></div><div class="line">	<span class="comment">// ClassWizard generated virtual function overrides</span></div><div class="line">	<span class="comment">//&#123;&#123;AFX_VIRTUAL(CAboutDlg)</span></div><div class="line">	<span class="keyword">protected</span>:</div><div class="line">	<span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">DoDataExchange</span><span class="params">(CDataExchange* pDX)</span></span>;    <span class="comment">// DDX/DDV support</span></div><div class="line">	<span class="comment">//&#125;&#125;AFX_VIRTUAL</span></div><div class="line"></div><div class="line"><span class="comment">// Implementation</span></div><div class="line"><span class="keyword">protected</span>:</div><div class="line">	<span class="comment">//&#123;&#123;AFX_MSG(CAboutDlg)</span></div><div class="line">	<span class="comment">//&#125;&#125;AFX_MSG</span></div><div class="line">	DECLARE_MESSAGE_MAP()</div><div class="line">&#125;;</div><div class="line"></div><div class="line">CAboutDlg::CAboutDlg() : CDialog(CAboutDlg::IDD)</div><div class="line">&#123;</div><div class="line">	<span class="comment">//&#123;&#123;AFX_DATA_INIT(CAboutDlg)</span></div><div class="line">	<span class="comment">//&#125;&#125;AFX_DATA_INIT</span></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">void</span> CAboutDlg::DoDataExchange(CDataExchange* pDX)</div><div class="line">&#123;</div><div class="line">	CDialog::DoDataExchange(pDX);</div><div class="line">	<span class="comment">//&#123;&#123;AFX_DATA_MAP(CAboutDlg)</span></div><div class="line">	<span class="comment">//&#125;&#125;AFX_DATA_MAP</span></div><div class="line">&#125;</div><div class="line"></div><div class="line">BEGIN_MESSAGE_MAP(CAboutDlg, CDialog)</div><div class="line">	<span class="comment">//&#123;&#123;AFX_MSG_MAP(CAboutDlg)</span></div><div class="line">		<span class="comment">// No message handlers</span></div><div class="line">	<span class="comment">//&#125;&#125;AFX_MSG_MAP</span></div><div class="line">END_MESSAGE_MAP()</div><div class="line"></div><div class="line"><span class="comment">/////////////////////////////////////////////////////////////////////////////</span></div><div class="line"><span class="comment">// CFileCopyNumDlg dialog</span></div><div class="line"></div><div class="line">CFileCopyNumDlg::CFileCopyNumDlg(CWnd* pParent <span class="comment">/*=NULL*/</span>)</div><div class="line">	: CDialog(CFileCopyNumDlg::IDD, pParent)</div><div class="line">&#123;</div><div class="line">	<span class="comment">//&#123;&#123;AFX_DATA_INIT(CFileCopyNumDlg)</span></div><div class="line">	m_sourcePath = <span class="number">_</span>T(<span class="string">""</span>);</div><div class="line">	m_desPath = <span class="number">_</span>T(<span class="string">""</span>);</div><div class="line">	<span class="comment">//&#125;&#125;AFX_DATA_INIT</span></div><div class="line">	<span class="comment">// Note that LoadIcon does not require a subsequent DestroyIcon in Win32</span></div><div class="line">	m_hIcon = AfxGetApp()-&gt;LoadIcon(IDR_MAINFRAME);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">void</span> CFileCopyNumDlg::DoDataExchange(CDataExchange* pDX)</div><div class="line">&#123;</div><div class="line">	CDialog::DoDataExchange(pDX);</div><div class="line">	<span class="comment">//&#123;&#123;AFX_DATA_MAP(CFileCopyNumDlg)</span></div><div class="line">	DDX_Control(pDX, IDC_PROGRESS1, m_progress);</div><div class="line">	DDX_Text(pDX, IDC_EDIT1, m_sourcePath);</div><div class="line">	DDX_Text(pDX, IDC_EDIT2, m_desPath);</div><div class="line">	<span class="comment">//&#125;&#125;AFX_DATA_MAP</span></div><div class="line">&#125;</div><div class="line"></div><div class="line">BEGIN_MESSAGE_MAP(CFileCopyNumDlg, CDialog)</div><div class="line">	<span class="comment">//&#123;&#123;AFX_MSG_MAP(CFileCopyNumDlg)</span></div><div class="line">	ON_WM_SYSCOMMAND()</div><div class="line">	ON_WM_PAINT()</div><div class="line">	ON_WM_QUERYDRAGICON()</div><div class="line">	ON_BN_CLICKED(IDC_BTN_CHOOSEFILE1, OnBtnChoosefile1)</div><div class="line">	ON_BN_CLICKED(IDC_BTN_CHOOSEFILE2, OnBtnChoosefile2)</div><div class="line">	ON_BN_CLICKED(IDC_BTN_PAUSE, OnBtnPause)</div><div class="line">	ON_BN_CLICKED(IDC_BTN_RESUME, OnBtnResume)</div><div class="line">	ON_WM_TIMER()</div><div class="line">	ON_BN_CLICKED(IDC_BTN_BEGIN, OnBtnBegin)</div><div class="line"></div><div class="line">	ON_MESSAGE(WM_COPYFILE_NOTIFY_NUM, OnCopyFileNotifyNum)</div><div class="line">	ON_MESSAGE(WM_COPYFILE_NOTIFY_SUM, OnCopyFileNotifySum)</div><div class="line">	<span class="comment">//&#125;&#125;AFX_MSG_MAP</span></div><div class="line">END_MESSAGE_MAP()</div><div class="line"></div><div class="line"><span class="comment">/////////////////////////////////////////////////////////////////////////////</span></div><div class="line"><span class="comment">// CFileCopyNumDlg message handlers</span></div><div class="line"></div><div class="line">BOOL CFileCopyNumDlg::OnInitDialog()</div><div class="line">&#123;</div><div class="line">	CDialog::OnInitDialog();</div><div class="line"></div><div class="line">	<span class="comment">// Add "About..." menu item to system menu.</span></div><div class="line"></div><div class="line">	<span class="comment">// IDM_ABOUTBOX must be in the system command range.</span></div><div class="line">	ASSERT((IDM_ABOUTBOX &amp; <span class="number">0xFFF0</span>) == IDM_ABOUTBOX);</div><div class="line">	ASSERT(IDM_ABOUTBOX &lt; <span class="number">0xF000</span>);</div><div class="line"></div><div class="line">	CMenu* pSysMenu = GetSystemMenu(FALSE);</div><div class="line">	<span class="keyword">if</span> (pSysMenu != <span class="literal">NULL</span>)</div><div class="line">	&#123;</div><div class="line">		CString strAboutMenu;</div><div class="line">		strAboutMenu.LoadString(IDS_ABOUTBOX);</div><div class="line">		<span class="keyword">if</span> (!strAboutMenu.IsEmpty())</div><div class="line">		&#123;</div><div class="line">			pSysMenu-&gt;AppendMenu(MF_SEPARATOR);</div><div class="line">			pSysMenu-&gt;AppendMenu(MF_STRING, IDM_ABOUTBOX, strAboutMenu);</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	<span class="comment">// Set the icon for this dialog.  The framework does this automatically</span></div><div class="line">	<span class="comment">//  when the application's main window is not a dialog</span></div><div class="line">	SetIcon(m_hIcon, TRUE);			<span class="comment">// Set big icon</span></div><div class="line">	SetIcon(m_hIcon, FALSE);		<span class="comment">// Set small icon</span></div><div class="line">	</div><div class="line">	<span class="comment">// <span class="doctag">TODO:</span> Add extra initialization here</span></div><div class="line">	m_num = <span class="number">0</span>;</div><div class="line">	m_sum = <span class="number">0</span>;</div><div class="line">	m_progress.SetRange(<span class="number">0</span>, <span class="number">100</span>);</div><div class="line">	m_progress.SetPos(<span class="number">0</span>);</div><div class="line">	</div><div class="line">	<span class="keyword">return</span> TRUE;  <span class="comment">// return TRUE  unless you set the focus to a control</span></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">void</span> CFileCopyNumDlg::OnSysCommand(UINT nID, LPARAM lParam)</div><div class="line">&#123;</div><div class="line">	<span class="keyword">if</span> ((nID &amp; <span class="number">0xFFF0</span>) == IDM_ABOUTBOX)</div><div class="line">	&#123;</div><div class="line">		CAboutDlg dlgAbout;</div><div class="line">		dlgAbout.DoModal();</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">else</span></div><div class="line">	&#123;</div><div class="line">		CDialog::OnSysCommand(nID, lParam);</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">// If you add a minimize button to your dialog, you will need the code below</span></div><div class="line"><span class="comment">//  to draw the icon.  For MFC applications using the document/view model,</span></div><div class="line"><span class="comment">//  this is automatically done for you by the framework.</span></div><div class="line"></div><div class="line"><span class="keyword">void</span> CFileCopyNumDlg::OnPaint() </div><div class="line">&#123;</div><div class="line">	<span class="keyword">if</span> (IsIconic())</div><div class="line">	&#123;</div><div class="line">		<span class="function">CPaintDC <span class="title">dc</span><span class="params">(<span class="keyword">this</span>)</span></span>; <span class="comment">// device context for painting</span></div><div class="line"></div><div class="line">		SendMessage(WM_ICONERASEBKGND, (WPARAM) dc.GetSafeHdc(), <span class="number">0</span>);</div><div class="line"></div><div class="line">		<span class="comment">// Center icon in client rectangle</span></div><div class="line">		<span class="keyword">int</span> cxIcon = GetSystemMetrics(SM_CXICON);</div><div class="line">		<span class="keyword">int</span> cyIcon = GetSystemMetrics(SM_CYICON);</div><div class="line">		CRect rect;</div><div class="line">		GetClientRect(&amp;rect);</div><div class="line">		<span class="keyword">int</span> x = (rect.Width() - cxIcon + <span class="number">1</span>) / <span class="number">2</span>;</div><div class="line">		<span class="keyword">int</span> y = (rect.Height() - cyIcon + <span class="number">1</span>) / <span class="number">2</span>;</div><div class="line"></div><div class="line">		<span class="comment">// Draw the icon</span></div><div class="line">		dc.DrawIcon(x, y, m_hIcon);</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">else</span></div><div class="line">	&#123;</div><div class="line">		CDialog::OnPaint();</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">// The system calls this to obtain the cursor to display while the user drags</span></div><div class="line"><span class="comment">//  the minimized window.</span></div><div class="line">HCURSOR CFileCopyNumDlg::OnQueryDragIcon()</div><div class="line">&#123;</div><div class="line">	<span class="keyword">return</span> (HCURSOR) m_hIcon;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">void</span> CFileCopyNumDlg::OnBtnChoosefile1() </div><div class="line">&#123;</div><div class="line">    <span class="function">CFileDialog <span class="title">dlg</span><span class="params">(TRUE)</span></span>;</div><div class="line">	<span class="keyword">if</span>(IDOK==dlg.DoModal())</div><div class="line">	&#123;</div><div class="line">		strSourceFile=dlg.GetPathName();</div><div class="line">	&#125;</div><div class="line">	SetDlgItemText(IDC_EDIT1,strSourceFile);	</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">void</span> CFileCopyNumDlg::OnBtnChoosefile2() </div><div class="line">&#123;</div><div class="line">    <span class="function">CFileDialog <span class="title">dlg</span><span class="params">(TRUE)</span></span>;</div><div class="line">	<span class="keyword">if</span>(IDOK==dlg.DoModal())</div><div class="line">	&#123;</div><div class="line">		strNewFile=dlg.GetPathName();</div><div class="line">	&#125;</div><div class="line">	SetDlgItemText(IDC_EDIT2,strSourceFile);	</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">void</span> CFileCopyNumDlg::OnBtnBegin() </div><div class="line">&#123;</div><div class="line">	UpdateData(TRUE);</div><div class="line"></div><div class="line">	hThread = CreateThread(<span class="literal">NULL</span>, <span class="number">0</span>, ThreadProc_Copy, <span class="keyword">this</span>, <span class="number">0</span>, <span class="literal">NULL</span>);</div><div class="line">	hEvent = CreateEvent(<span class="literal">NULL</span>, TRUE, TRUE, <span class="literal">NULL</span>);</div><div class="line">	</div><div class="line">	</div><div class="line">&#125;</div><div class="line"></div><div class="line">DWORD WINAPI CFileCopyNumDlg::ThreadProc_Copy(LPVOID lpParam)</div><div class="line">&#123;</div><div class="line">	<span class="keyword">double</span> num = <span class="number">0</span>;</div><div class="line">	<span class="keyword">double</span> sum = <span class="number">0</span>;</div><div class="line"></div><div class="line">	CString SourcePath = ((CFileCopyNumDlg*)lpParam)-&gt;m_sourcePath;</div><div class="line">	CString DesPath = ((CFileCopyNumDlg*)lpParam)-&gt;m_desPath + <span class="string">L"\\"</span>;</div><div class="line">  </div><div class="line">	CFileFind findcount;</div><div class="line">	BOOL bRet = findcount.FindFile(((CFileCopyNumDlg*)lpParam)-&gt;m_sourcePath + CString(<span class="string">"\\*.*"</span>));</div><div class="line">	</div><div class="line">	<span class="keyword">while</span> (bRet)</div><div class="line">	&#123;</div><div class="line">		bRet = findcount.FindNextFile();</div><div class="line">		<span class="keyword">if</span> (findcount.IsDirectory())</div><div class="line">		&#123;</div><div class="line">			<span class="keyword">continue</span>;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">else</span></div><div class="line">		&#123;</div><div class="line">			((CFileCopyNumDlg*)lpParam)-&gt;PostMessage(WM_COPYFILE_NOTIFY_SUM);</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	findcount.Close();</div><div class="line"></div><div class="line">	CFileFind find;</div><div class="line">	bRet =  find.FindFile(((CFileCopyNumDlg*)lpParam)-&gt;m_sourcePath + CString(<span class="string">"\\*.*"</span>));</div><div class="line"></div><div class="line">	<span class="keyword">while</span> (bRet)</div><div class="line">	&#123;</div><div class="line">		bRet = find.FindNextFile();</div><div class="line">		<span class="keyword">if</span> (find.IsDirectory())</div><div class="line">		&#123;</div><div class="line">			<span class="keyword">continue</span>;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">else</span></div><div class="line">		&#123;</div><div class="line">			((CFileCopyNumDlg*)lpParam)-&gt;m_sourcePath = find.GetFilePath();</div><div class="line">			((CFileCopyNumDlg*)lpParam)-&gt;m_desPath = DesPath + find.GetFileName();</div><div class="line">			</div><div class="line">			WaitForSingleObject(((CFileCopyNumDlg*)lpParam)-&gt;hEvent,INFINITE);</div><div class="line"></div><div class="line">			CopyFile(((CFileCopyNumDlg*)lpParam)-&gt;m_sourcePath, ((CFileCopyNumDlg*)lpParam)-&gt;m_desPath, FALSE);</div><div class="line">			((CFileCopyNumDlg*)lpParam)-&gt;PostMessage(WM_COPYFILE_NOTIFY_NUM);</div><div class="line">			</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">   </div><div class="line">    AfxMessageBox(<span class="string">"复制成功!"</span>);</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span> ;</div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">void</span> CFileCopyNumDlg::OnBtnPause() </div><div class="line">&#123;</div><div class="line">     ResetEvent(hEvent);	</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">void</span> CFileCopyNumDlg::OnBtnResume() </div><div class="line">&#123;</div><div class="line">     SetEvent(hEvent);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">void</span> CFileCopyNumDlg::OnTimer(UINT nIDEvent) </div><div class="line">&#123;</div><div class="line">	<span class="comment">// <span class="doctag">TODO:</span> Add your message handler code here and/or call default</span></div><div class="line">	</div><div class="line">	CDialog::OnTimer(nIDEvent);</div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line">afx_msg LRESULT CFileCopyNumDlg::OnCopyFileNotifyNum(WPARAM wParam, LPARAM lParam)</div><div class="line">&#123;</div><div class="line">	m_num++;</div><div class="line">	m_progress.SetPos(<span class="keyword">int</span>(m_num / m_sum * <span class="number">100</span>));</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line">afx_msg LRESULT CFileCopyNumDlg::OnCopyFileNotifySum(WPARAM wParam, LPARAM lParam)</div><div class="line">&#123;</div><div class="line">	m_sum++;</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>.h文件<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// FileCopyNumDlg.h : header file</span></div><div class="line"><span class="comment">//</span></div><div class="line"></div><div class="line"><span class="meta">#<span class="meta-keyword">if</span> !defined(AFX_FILECOPYNUMDLG_H__02EF2204_005C_4A21_A048_ED73C9CD1F34__INCLUDED_)</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> AFX_FILECOPYNUMDLG_H__02EF2204_005C_4A21_A048_ED73C9CD1F34__INCLUDED_</span></div><div class="line"></div><div class="line"><span class="meta">#<span class="meta-keyword">if</span> _MSC_VER &gt; 1000</span></div><div class="line"><span class="meta">#<span class="meta-keyword">pragma</span> once</span></div><div class="line"><span class="meta">#<span class="meta-keyword">endif</span> <span class="comment">// _MSC_VER &gt; 1000</span></span></div><div class="line"></div><div class="line"><span class="comment">/////////////////////////////////////////////////////////////////////////////</span></div><div class="line"><span class="comment">// CFileCopyNumDlg dialog</span></div><div class="line"></div><div class="line"><span class="keyword">class</span> CFileCopyNumDlg : <span class="keyword">public</span> CDialog</div><div class="line">&#123;</div><div class="line"><span class="comment">// Construction</span></div><div class="line"><span class="keyword">public</span>:</div><div class="line">	CFileCopyNumDlg(CWnd* pParent = <span class="literal">NULL</span>);	<span class="comment">// standard constructor</span></div><div class="line"></div><div class="line"><span class="comment">// Dialog Data</span></div><div class="line">	<span class="comment">//&#123;&#123;AFX_DATA(CFileCopyNumDlg)</span></div><div class="line">	<span class="keyword">enum</span> &#123; IDD = IDD_FILECOPYNUM_DIALOG &#125;;</div><div class="line">	CProgressCtrl	m_progress;</div><div class="line">	CString	m_sourcePath;</div><div class="line">	CString	m_desPath;</div><div class="line">	<span class="comment">//&#125;&#125;AFX_DATA</span></div><div class="line"></div><div class="line">	<span class="comment">// ClassWizard generated virtual function overrides</span></div><div class="line">	<span class="comment">//&#123;&#123;AFX_VIRTUAL(CFileCopyNumDlg)</span></div><div class="line">	<span class="keyword">protected</span>:</div><div class="line">	<span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">DoDataExchange</span><span class="params">(CDataExchange* pDX)</span></span>;	<span class="comment">// DDX/DDV support</span></div><div class="line">	<span class="comment">//&#125;&#125;AFX_VIRTUAL</span></div><div class="line"></div><div class="line"><span class="comment">// Implementation</span></div><div class="line"><span class="keyword">protected</span>:</div><div class="line">	HICON m_hIcon;</div><div class="line"></div><div class="line">	<span class="comment">// Generated message map functions</span></div><div class="line">	<span class="comment">//&#123;&#123;AFX_MSG(CFileCopyNumDlg)</span></div><div class="line">	<span class="function"><span class="keyword">virtual</span> BOOL <span class="title">OnInitDialog</span><span class="params">()</span></span>;</div><div class="line">	<span class="function">afx_msg <span class="keyword">void</span> <span class="title">OnSysCommand</span><span class="params">(UINT nID, LPARAM lParam)</span></span>;</div><div class="line">	<span class="function">afx_msg <span class="keyword">void</span> <span class="title">OnPaint</span><span class="params">()</span></span>;</div><div class="line">	<span class="function">afx_msg HCURSOR <span class="title">OnQueryDragIcon</span><span class="params">()</span></span>;</div><div class="line">	<span class="function">afx_msg <span class="keyword">void</span> <span class="title">OnBtnChoosefile1</span><span class="params">()</span></span>;</div><div class="line">	<span class="function">afx_msg <span class="keyword">void</span> <span class="title">OnBtnChoosefile2</span><span class="params">()</span></span>;</div><div class="line">	<span class="function">afx_msg <span class="keyword">void</span> <span class="title">OnBtnPause</span><span class="params">()</span></span>;</div><div class="line">	<span class="function">afx_msg <span class="keyword">void</span> <span class="title">OnBtnResume</span><span class="params">()</span></span>;</div><div class="line">	<span class="function">afx_msg <span class="keyword">void</span> <span class="title">OnTimer</span><span class="params">(UINT nIDEvent)</span></span>;</div><div class="line">	<span class="function">afx_msg <span class="keyword">void</span> <span class="title">OnBtnBegin</span><span class="params">()</span></span>;</div><div class="line"></div><div class="line">	<span class="function">afx_msg LRESULT <span class="title">OnCopyFileNotifyNum</span><span class="params">(WPARAM wParam, LPARAM lParam)</span></span>;</div><div class="line">	<span class="function">afx_msg LRESULT <span class="title">OnCopyFileNotifySum</span><span class="params">(WPARAM wParam, LPARAM lParam)</span></span>;</div><div class="line">	<span class="comment">//&#125;&#125;AFX_MSG</span></div><div class="line">	DECLARE_MESSAGE_MAP()</div><div class="line"><span class="keyword">public</span>:</div><div class="line">   <span class="comment">// LPCTSTR lpExistingPathName;			//源文件</span></div><div class="line">   <span class="comment">//LPCTSTR lpNewPathName;	            //目标文件</span></div><div class="line">    HANDLE hThread;                     <span class="comment">//线程句柄</span></div><div class="line">	HANDLE hEvent;                      <span class="comment">//复制暂停事件</span></div><div class="line"></div><div class="line">    CString strSourceFile;</div><div class="line">	CString strNewFile;</div><div class="line"></div><div class="line">	<span class="keyword">double</span> m_num;</div><div class="line">	<span class="keyword">double</span> m_sum;</div><div class="line">	<span class="function"><span class="keyword">static</span> DWORD WINAPI <span class="title">ThreadProc_Copy</span><span class="params">(LPVOID lpParam)</span></span>;<span class="comment">//线程函数</span></div><div class="line">&#125;;</div><div class="line"></div><div class="line"><span class="comment">//&#123;&#123;AFX_INSERT_LOCATION&#125;&#125;</span></div><div class="line"><span class="comment">// Microsoft Visual C++ will insert additional declarations immediately before the previous line.</span></div><div class="line"></div><div class="line"><span class="meta">#<span class="meta-keyword">endif</span> <span class="comment">// !defined(AFX_FILECOPYNUMDLG_H__02EF2204_005C_4A21_A048_ED73C9CD1F34__INCLUDED_)</span></span></div></pre></td></tr></table></figure></p>
<p><img src="http://img.blog.csdn.net/20170710233959983?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
]]></content>
      
        <categories>
            
            <category> 互联网 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> MFC 多线程 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[MFC网页分析程序]]></title>
      <url>http://hubojing.github.io/2017/06/14/MFC%E7%BD%91%E9%A1%B5%E5%88%86%E6%9E%90%E7%A8%8B%E5%BA%8F/</url>
      <content type="html"><![CDATA[<div align="left"><br><img src="http://img.blog.csdn.net/20170805145839785?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" width="300" height="180" style="float:right;"><br>  </div>

<p>　　开发一个网页分析程序，可以抓取特定网页的内容，加以分析之后将结果保存至数据库。</p>
<p>　　V1.0版本出炉，实测解析时间1分41秒。
　　
　　
　　</p>
<a id="more"></a>
<p>网页分析程序具体要求描述如下：<br>1.使用http技术获取一个博客的首页<a href="http://blog.csdn.net/jiangsheng" target="_blank" rel="external">http://blog.csdn.net/jiangsheng</a><br>2.分析这个网页的内容，从中找到博客中每一篇文章的链接。<br>3.通过这些链接，获取文章的正文网页，从内容中提取文章的标题和文章的内容。<br>4.将文章的标题与内容分别保存至数据库。<br>5.布局要求：提供一个列表框和一个多行文本框。列表框中显示从数据库中获取的文章标题列表；当点击列表框中的某一篇文章时，在文本框中显示该文章的内容。</p>
<h1 id="获取源码"><a href="#获取源码" class="headerlink" title="获取源码"></a>获取源码</h1><p>因为需多次调用获取源码功能，将它放入一个函数中。</p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div></pre></td><td class="code"><pre><div class="line">CString CGetWebDlg::DownloadCodes(CString path)</div><div class="line">&#123;</div><div class="line">	CInternetSession session;</div><div class="line">	CHttpFile *file = <span class="literal">NULL</span>;</div><div class="line">	CString strURL = path;</div><div class="line">	CString strHtml = <span class="number">_</span>T(<span class="string">""</span>); <span class="comment">//存放网页数据</span></div><div class="line">	<span class="keyword">try</span></div><div class="line">	&#123;</div><div class="line">		file = (CHttpFile*)session.OpenURL(strURL);</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">catch</span> (CInternetException *m_pException)</div><div class="line">	&#123;</div><div class="line">		file = <span class="literal">NULL</span>;</div><div class="line">		m_pException-&gt;m_dwError;</div><div class="line">		m_pException-&gt;Delete();</div><div class="line">		session.Close();</div><div class="line">		MessageBox(<span class="string">"网络连接错误！"</span>, <span class="string">"提示"</span>);</div><div class="line">	&#125;</div><div class="line">	CString strLine;</div><div class="line">	<span class="keyword">char</span> sRecived[<span class="number">1024</span>];</div><div class="line">	<span class="keyword">if</span> (file != <span class="literal">NULL</span>)</div><div class="line">	&#123;</div><div class="line">		<span class="keyword">while</span> (file-&gt;ReadString((LPTSTR)sRecived, <span class="number">1024</span>) != <span class="literal">NULL</span>)</div><div class="line">		&#123;</div><div class="line">			strHtml += sRecived;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">else</span></div><div class="line">	&#123;</div><div class="line">		AfxMessageBox(<span class="number">_</span>T(<span class="string">"失败！"</span>));</div><div class="line">	&#125;</div><div class="line">	session.Close();</div><div class="line">	file-&gt;Close();</div><div class="line">	<span class="keyword">delete</span> file;</div><div class="line">	file = <span class="literal">NULL</span>;</div><div class="line"></div><div class="line">	strHtml = ConvertUtf8ToGBK(strHtml);<span class="comment">//源码转换</span></div><div class="line"></div><div class="line">	<span class="keyword">return</span> strHtml;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="编码问题"><a href="#编码问题" class="headerlink" title="编码问题"></a>编码问题</h2><p>注意网页编码问题，因此需要格式转换，编写一个函数：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">void</span>  <span class="title">ConvertUtf8ToGBK</span><span class="params">(CString &amp;strUtf8)</span></span></div><div class="line">&#123;</div><div class="line">          </div><div class="line">    <span class="keyword">int</span> len=MultiByteToWideChar(CP_UTF8, <span class="number">0</span>, (LPCTSTR)strUtf8, <span class="number">-1</span>, <span class="literal">NULL</span>,<span class="number">0</span>);</div><div class="line">	<span class="keyword">unsigned</span> <span class="keyword">short</span> * wszGBK = <span class="keyword">new</span> <span class="keyword">unsigned</span> <span class="keyword">short</span>[len+<span class="number">1</span>];</div><div class="line">	<span class="built_in">memset</span>(wszGBK, <span class="number">0</span>, len * <span class="number">2</span> + <span class="number">2</span>);</div><div class="line">	MultiByteToWideChar(CP_UTF8, <span class="number">0</span>, (LPCTSTR)strUtf8, <span class="number">-1</span>, (LPWSTR)wszGBK, len);</div><div class="line"> </div><div class="line">	len = WideCharToMultiByte(CP_ACP, <span class="number">0</span>, (LPCWSTR)wszGBK, <span class="number">-1</span>, <span class="literal">NULL</span>, <span class="number">0</span>, <span class="literal">NULL</span>, <span class="literal">NULL</span>); </div><div class="line">	<span class="keyword">char</span> *szGBK=<span class="keyword">new</span> <span class="keyword">char</span>[len + <span class="number">1</span>];</div><div class="line">	<span class="built_in">memset</span>(szGBK, <span class="number">0</span>, len + <span class="number">1</span>);</div><div class="line">	WideCharToMultiByte (CP_ACP, <span class="number">0</span>, (LPCWSTR)wszGBK, <span class="number">-1</span>, szGBK, len, <span class="literal">NULL</span>,<span class="literal">NULL</span>);</div><div class="line"> </div><div class="line">	strUtf8 = szGBK;</div><div class="line">	 <span class="keyword">delete</span>[] szGBK;</div><div class="line">	 <span class="keyword">delete</span>[] wszGBK;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p><img src="http://img.blog.csdn.net/20170614232311302?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="显示源码"></p>
<p>有些类似网页爬虫的感觉。</p>
<p>由于我刚开始是用VC6.0创建项目，现在用VS2013打开，因此，提示报错：<br>error MSB8031: Building an MFC project for a non-Unicode character set is deprecated. You must change the project property to Unicode or download an additional library. See <a href="http://go.microsoft.com/fwlink/p/?LinkId=286820" target="_blank" rel="external">http://go.microsoft.com/fwlink/p/?LinkId=286820</a> for more information.</p>
<p>解决：用于多字节字符编码 (MBCS) 的 MFC 库 (DLL) 不再包含于 Visual Studio 中，但是可用作插件，可以在任何装有 Visual Studio Professional、Visual Studio Premium 或 Visual Studio Ultimate 的计算机上下载和安装。下载地址：<a href="https://www.microsoft.com/zh-cn/download/details.aspx?id=40770" target="_blank" rel="external">https://www.microsoft.com/zh-cn/download/details.aspx?id=40770</a></p>
<h1 id="解析"><a href="#解析" class="headerlink" title="解析"></a>解析</h1><p><del>为了接下来的操作，我去学正则表达式了……</del><br>还是学习html解析库 htmlcxx<br><a href="http://htmlcxx.sourceforge.net/" target="_blank" rel="external">官方</a><br><a href="http://blog.csdn.net/youfangyuan/article/details/7816518" target="_blank" rel="external">HtmlCxx用户手册</a></p>
<h2 id="htmlcxx"><a href="#HTMLCXX" class="headerlink" title="HTMLCXX"></a>HTMLCXX</h2><h3 id="下载htmlcxx库"><a href="#下载htmlcxx库" class="headerlink" title="下载htmlcxx库"></a>下载htmlcxx库</h3><p><a href="http://sourceforge.net/projects/htmlcxx/" target="_blank" rel="external">http://sourceforge.net/projects/htmlcxx/</a><br>并解压。</p>
<h3 id="编译"><a href="#编译" class="headerlink" title="编译"></a>编译</h3><p>打开htmlcxx.vcproj，右键属性，配置属性-C/C++-代码生成-运行库：多线程调试 DLL (/ MDd)进行编译。编译会报错，将<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">const</span> <span class="keyword">char</span> *signature = <span class="string">"﻿"</span>;</div></pre></td></tr></table></figure></p>
<p>改为<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">const</span> <span class="keyword">char</span> *signature = <span class="string">"﻿\xEF\xBB\xBF"</span>;</div></pre></td></tr></table></figure></p>
<p>即可编译成功。</p>
<h3 id="导入"><a href="#导入" class="headerlink" title="导入"></a>导入</h3><p>把生成的htmlcxx.lib和html文件夹拷贝到所需的工程中。即：<br>在所开发项目文件夹中，新建”htmlcxx“文件，里面添加两个子文件夹”lib“和”include“。将编译好的htmlcxx.lib拷贝到lib文件夹，将html文件夹中所有的.h头文件和ParserSax.tcc添加到include文件夹。添加库文件htmlcxx.lib到项目中，具体说来：</p>
<blockquote>
<p>在VS工程中，添加c/c++工程中外部头文件及库的基本步骤：<br>    1、添加工程的头文件目录：工程—属性—配置属性—c/c++—常规—附加包含目录：加上头文件存放目录。<br>    2、添加文件引用的lib静态库路径：工程—属性—配置属性—链接器—常规—附加库目录：加上lib文件存放目录。<br>         然后添加工程引用的lib文件名：工程—属性—配置属性—链接器—输入—附加依赖项：加上lib文件名。<br>    3、添加工程引用的dll动态库：把引用的dll放到工程的可执行文件所在的目录下。<br>注意：第一步可以不用，直接在工程里加入动态库的头文件，在使用代码处引用这个头文件。</p>
</blockquote>
<p>所开发的项目的头文件中添加以下内容：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"htmlcxx/include/ParserDom.h"</span></span></div><div class="line"> </div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> htmlcxx;</div><div class="line"> </div><div class="line"><span class="meta">#<span class="meta-keyword">pragma</span> comment(lib,<span class="meta-string">"htmlcxx.lib"</span>)</span></div></pre></td></tr></table></figure></p>
<h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><p>官方测试代码：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;htmlcxx/html/ParserDom.h&gt;</span></span></div><div class="line"> ...</div><div class="line"> </div><div class="line"> <span class="comment">//Parse some html code</span></div><div class="line"> <span class="built_in">string</span> html = <span class="string">"&lt;html&gt;&lt;body&gt;hey&lt;/body&gt;&lt;/html&gt;"</span>;</div><div class="line"> HTML::ParserDom parser;</div><div class="line"> tree&lt;HTML::Node&gt; dom = parser.parseTree(html);</div><div class="line"> </div><div class="line"> <span class="comment">//Print whole DOM tree</span></div><div class="line"> <span class="built_in">cout</span> &lt;&lt; dom &lt;&lt; <span class="built_in">endl</span>;</div><div class="line"> </div><div class="line"> <span class="comment">//Dump all links in the tree</span></div><div class="line"> tree&lt;HTML::Node&gt;::iterator it = dom.begin();</div><div class="line"> tree&lt;HTML::Node&gt;::iterator end = dom.end();</div><div class="line"> <span class="keyword">for</span> (; it != end; ++it)</div><div class="line"> &#123;</div><div class="line"> 	<span class="keyword">if</span> (it-&gt;tagName() == <span class="string">"A"</span>)</div><div class="line"> 	&#123;</div><div class="line"> 		it-&gt;parseAttributes();</div><div class="line"> 		<span class="built_in">cout</span> &lt;&lt; it-&gt;attributes(<span class="string">"href"</span>);</div><div class="line"> 	&#125;</div><div class="line"> &#125;</div><div class="line"> </div><div class="line"> <span class="comment">//Dump all text of the document</span></div><div class="line"> it = dom.begin();</div><div class="line"> end = dom.end();</div><div class="line"> <span class="keyword">for</span> (; it != end; ++it)</div><div class="line"> &#123;</div><div class="line"> 	<span class="keyword">if</span> ((!it-&gt;isTag()) &amp;&amp; (!it-&gt;isComment()))</div><div class="line"> 	&#123;</div><div class="line"> 		<span class="built_in">cout</span> &lt;&lt; it-&gt;text();</div><div class="line"> 	&#125;</div><div class="line"> &#125;</div></pre></td></tr></table></figure></p>
<p>  然而……</p>
<p>   <img src="http://img.blog.csdn.net/20170709011136986?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="报错1"></p>
<p>   加入#include”iostream”头文件即可。</p>
<p><img src="http://img.blog.csdn.net/20170709011240176?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="报错2"></p>
<p>修改为：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">if</span> (it-&gt;tagName() == <span class="string">"A"</span>)</div><div class="line">			&#123;</div><div class="line">				it-&gt;parseAttributes();</div><div class="line">				<span class="built_in">std</span>::pair&lt;<span class="keyword">bool</span>, <span class="built_in">std</span>::<span class="built_in">string</span>&gt; pa = it-&gt;attribute(<span class="string">"href"</span>);</div><div class="line">				<span class="built_in">cout</span> &lt;&lt; pa.second;</div><div class="line">			&#125;</div></pre></td></tr></table></figure></p>
<p>编译通过。</p>
<p>  还有其他的库也可以用，比如<a href="http://blog.csdn.net/lanuage/article/details/72825878" target="_blank" rel="external">使用MSHTML解析HTML页面</a><br>  比如<a href="http://www.oschina.net/question/565065_67992" target="_blank" rel="external">LIBXML2库使用指南</a><br>  还可以用正则表达式写库……</p>
<p>  突然发现 原来的计划里有COM组件 XML和HTML 数据库访问技术<br>  都没怎么接触过  补补补<br>  在填坑的路上不能止步…</p>
<h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><p><a href="http://www.cnblogs.com/striver-zhu/p/4451781.html" target="_blank" rel="external">C++ 使用Htmlcxx解析Html内容(VS编译库文件)</a><br><a href="http://blog.csdn.net/farcall/article/details/20378475" target="_blank" rel="external">html与xml解析库htmlcxx使用过程中的若干问题及解决方案</a><br><a href="http://www.cnblogs.com/learning-lzj2014/p/3928346.html" target="_blank" rel="external">c++ hmtlcxx 学习之旅</a> </p>
<h2 id="mshtml"><a href="#MSHTML" class="headerlink" title="MSHTML"></a>MSHTML</h2><p>  因为最近用过MSXML，就试试MSHTML。学有余力的话，htmlcxx之后还是想玩一下…<br>   <a href="https://msdn.microsoft.com/en-us/library/aa741317(v=vs.85).aspx" target="_blank" rel="external">https://msdn.microsoft.com/en-us/library/aa741317(v=vs.85).aspx</a><br>  <a href="http://blog.csdn.net/jiangsheng/article/details/3793" target="_blank" rel="external">蒋晟-关于MSHTML</a><br>   <a href="https://msdn.microsoft.com/zh-cn/library/mshtml(v=vs.110).aspx" target="_blank" rel="external">https://msdn.microsoft.com/zh-cn/library/mshtml(v=vs.110).aspx</a></p>
<h3 id="mshtml导入"><a href="#MSHTML导入" class="headerlink" title="MSHTML导入"></a>MSHTML导入</h3><p>系统中自带了mshtml，和msxml一样，在C盘windows/system32中可找到。</p>
<p><a href="http://blog.csdn.net/mimica247706624/article/details/6128239" target="_blank" rel="external">如何导入</a>  </p>
<p>先看MSDN……<br> <a href="https://msdn.microsoft.com/en-us/library/aa741317%28v=vs.85%29.aspx?f=255&amp;MSPPError=-2147217396" target="_blank" rel="external">MSDN-MSHTML</a></p>
<p> 再看各种搜集的文章<br>  <a href="http://bbs.csdn.net/topics/330214041" target="_blank" rel="external">http://bbs.csdn.net/topics/330214041</a><br>  <a href="http://www.cnblogs.com/speedmancs/archive/2010/08/11/1797442.html" target="_blank" rel="external">http://www.cnblogs.com/speedmancs/archive/2010/08/11/1797442.html</a><br>  <a href="http://blog.csdn.net/jinyaba/article/details/17097323" target="_blank" rel="external">http://blog.csdn.net/jinyaba/article/details/17097323</a><br>  <a href="https://social.msdn.microsoft.com/Search/zh-CN?query=MSHTML&amp;pgArea=header&amp;emptyWatermark=true&amp;ac=4#refinementChanges=117&amp;pageNumber=1&amp;showMore=false" target="_blank" rel="external">https://social.msdn.microsoft.com/Search/zh-CN?query=MSHTML&amp;pgArea=header&amp;emptyWatermark=true&amp;ac=4#refinementChanges=117&amp;pageNumber=1&amp;showMore=false</a><br>  <a href="https://wenku.baidu.com/view/d571abc4ec3a87c24028c4bb.html" target="_blank" rel="external">https://wenku.baidu.com/view/d571abc4ec3a87c24028c4bb.html</a><br>  <a href="http://www.codeguru.com/cpp/i-n/ieprogram/article.php/c4385/Lightweight-HTML-Parsing-Using-MSHTML.htm" target="_blank" rel="external">http://www.codeguru.com/cpp/i-n/ieprogram/article.php/c4385/Lightweight-HTML-Parsing-Using-MSHTML.htm</a><br>  <a href="http://www.yesky.com/403/1938403.shtml?qq-pf-to=pcqq.c2c" target="_blank" rel="external">http://www.yesky.com/403/1938403.shtml?qq-pf-to=pcqq.c2c</a><br>  <a href="http://www.bianceng.cn/Programming/vc/201411/46771.htm" target="_blank" rel="external">http://www.bianceng.cn/Programming/vc/201411/46771.htm</a><br>  <a href="https://wenku.baidu.com/view/299bba4a336c1eb91a375df5.html" target="_blank" rel="external">https://wenku.baidu.com/view/299bba4a336c1eb91a375df5.html</a></p>
<p> <del>思路：下载源码和获取链接是两个独立函数，会被多次调用。先获取首页源码，div id=”archive_list” 遍历该div获取各月份归档链接，再使用多线程（48个线程？？？）进入每个归档链接里下载源码，获取源码中h1的每篇文章标题,保存到数据库。</del></p>
<p> 虽然有两种方法，一种通过归档获得链接，一种通过翻页获得链接，但根据本html特点，明显通过翻页要简洁方便一些，因为翻页的链接是有规律的，可通过循环搞定。每页5篇直接获得正文链接，比从归档获得少一层。<del>两核4个逻辑处理器，所以是开2个线程好还是4个好呢……</del></p>
<p>获取每篇正文链接，下载源码，解析得正文，保存到数据库。最后从数据库中提取标题和正文显示到对应窗口(使用ADO)。</p>
<h3 id="解析过程"><a href="#解析过程" class="headerlink" title="解析过程"></a>解析过程</h3><h4 id="创建"><a href="#创建" class="headerlink" title="创建"></a>创建</h4><p>1.使用CoCreateInstance创建一个接口<br><figure class="highlight lisp"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">HRESULT hr = CoCreateInstance(<span class="name">CLSID_HTMLDocument</span>, NULL, CLSCTX_INPROC_SERVER, IID_IHTMLDocument2, (<span class="name">void**</span>)<span class="symbol">&amp;pDoc</span>)<span class="comment">;</span></div></pre></td></tr></table></figure></p>
<p>2.创建一个COM中的数组，将HTML字符串写到数组中</p>
<p>a）SafeArrayCreateVector:函数用来创建一个对应的数组结构。函数有三个参数，第一个参数表示数组中元素类型，一般给VT_VARIANT表示它是一个自动类型，第二个参数数组元素起始位置的下标，对于VC来说，数组元素总是从0开始，所以这个位置一般给0，第三个参数是数组的维数，在这将它作为一个字符数组，所以是一个一维数组。<br>b）SafeArrayAccessData：允许用户操作这个数组，在需要读写这个数组时都需要调用这个函数，以便获取这个数组的操作权。它有两个参数，第一个参数是数组变量，第二个参数是一个输出参数，当调用这个函数成功，会提供一个缓冲区，操作这个缓冲区就相当于操作了这个数组。<br>c）SafeArrayUnaccessData：每当操作数组完成时需要调用这个函数，函数与SafeArrayAccessData配套使用，用来回收这个权限，并使对数组的操作生效。</p>
<ol>
<li>调用接口的write方法，将接口与HTML字符串绑定 <figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">SAFEARRAY* psa = SafeArrayCreateVector(VT_VARIANT, <span class="number">0</span>, <span class="number">1</span>);</div><div class="line">VARIANT *param;</div><div class="line"><span class="keyword">bstr_t</span> bsData = (LPCTSTR)strHtml;</div><div class="line">hr = SafeArrayAccessData(psa, (LPVOID*)&amp;param);</div><div class="line">param-&gt;vt = VT_BSTR;</div><div class="line">param-&gt;bstrVal = (BSTR)bsData;</div><div class="line">hr = pDoc-&gt;write(psa);</div><div class="line">hr = SafeArrayUnaccessData(psa);</div></pre></td></tr></table></figure>
</li>
</ol>
<p>目标：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">&lt;span <span class="class"><span class="keyword">class</span></span>=<span class="string">"link_title"</span>&gt;<span class="xml"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/jiangsheng/article/details/9870241"</span>&gt;</span></span></div><div class="line">选择剪贴板格式顺序            </div><div class="line"><span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line">&lt;<span class="regexp">/span&gt;</span></div></pre></td></tr></table></figure>
<p>整个 \<span\> \</span\>  是元素， \<span\>  是标签，class是属性名，link_title是属性值，“选择剪贴板格式顺序”是文本。</span\></p>
<h4 id="元素遍历"><a href="#元素遍历" class="headerlink" title="元素遍历"></a>元素遍历</h4><p>至少两种方法：<br>法一：<br>获取了HTML文档的IID_IHTMLDocument2接口后，开始遍历：<br>1.get_all方法获取所有标签节点，这个函数通过一个输出参数输出IHTMLElementCollection类型的接口指针<br>2.用IHTMLElementCollection接口的get_length方法获取标签的总数量，据此写一个循环，在循环进行元素的遍历<br>3.循环中用IHTMLElementCollection接口的item方法进行迭代，获取各元素对应的IDispatch接口指针<br>4.调用IDispatch接口指针的QueryInterface方法生成对应的IHTMLElement接口。通过这个接口获取元素的各种信息</p>
<p>以下已能成功获取标题：<br><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div></pre></td><td class="code"><pre><div class="line">void CGetWebDlg::EnumElements(IHTMLDocument2* pDoc)</div><div class="line">&#123;</div><div class="line">	CComPtr&lt;IHTMLElementCollection&gt; pCollection<span class="comment">;</span></div><div class="line">	pDoc-&gt;get_all(&amp;pCollection)<span class="comment">;</span></div><div class="line">	if (NULL == pCollection)</div><div class="line">	&#123;</div><div class="line">		return<span class="comment">;</span></div><div class="line">	&#125;</div><div class="line">	VARIANT varName<span class="comment">;</span></div><div class="line">	CString strText<span class="comment">;</span></div><div class="line">	long len = <span class="number">0</span><span class="comment">;</span></div><div class="line">	pCollection-&gt;get_length(&amp;len)<span class="comment">;</span></div><div class="line">	for (int i = <span class="number">0</span><span class="comment">; i &lt; len; i++)</span></div><div class="line">	&#123;</div><div class="line">		varName.vt = VT_I4<span class="comment">;</span></div><div class="line">		varName.lVal = i<span class="comment">;</span></div><div class="line">		CComPtr&lt;IHTMLElement&gt; pElement<span class="comment">;</span></div><div class="line">		CComPtr&lt;IDispatch&gt; pDisp<span class="comment">;</span></div><div class="line">		pCollection-&gt;item(varName, varName, &amp;pDisp)<span class="comment">;</span></div><div class="line">		if (NULL == pDisp)</div><div class="line">		&#123;</div><div class="line">			continue<span class="comment">;</span></div><div class="line">		&#125;</div><div class="line"></div><div class="line">		pDisp-&gt;QueryInterface(IID_IHTMLElement, (LPVOID*)&amp;pElement)<span class="comment">;</span></div><div class="line">		if (NULL != pElement)</div><div class="line">		&#123;</div><div class="line">			<span class="keyword">BSTR </span><span class="keyword">bstrClass;	</span></div><div class="line">			pElement-&gt;get_className(&amp;<span class="keyword">bstrClass);</span></div><div class="line">			CString strClass = _com_util::ConvertBSTRToString(<span class="keyword">bstrClass);</span></div><div class="line">			if (strClass.Compare(<span class="string">"link_title"</span>) == <span class="number">0</span>)</div><div class="line">			&#123;</div><div class="line">					<span class="keyword">BSTR </span><span class="keyword">bstrText </span>= NULL<span class="comment">;</span></div><div class="line">					pElement-&gt;get_innerText(&amp;<span class="keyword">bstrText);</span></div><div class="line">					strText = <span class="keyword">bstrText;</span></div><div class="line">					m_list.<span class="keyword">InsertItem(i, </span>strText)<span class="comment">;</span></div><div class="line">			&#125;			</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>法二：<br>利用IHTMLDocument2将字符串形式的HTML转换为DOM对象，利用IHTMLDocument3的getElementByTagName等方法来操作DOM对象。<br>以下已能成功获取标题：<br><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line"><span class="symbol">MSHTML:</span>:IHTMLDocument3Ptr pDoc3<span class="comment">;</span></div><div class="line"><span class="symbol"> 	MSHTML:</span>:IHTMLElementCollectionPtr pCollection<span class="comment">;</span></div><div class="line"><span class="symbol"> 	MSHTML:</span>:IHTMLElementPtr pElement<span class="comment">;</span></div><div class="line"></div><div class="line">pDoc3 = pDoc<span class="comment">;</span></div><div class="line">pCollection = pDoc3-&gt;getElementsByTagName(L<span class="string">"span"</span>)<span class="comment">;</span></div><div class="line">for (long i = <span class="number">0</span><span class="comment">; i &lt; pCollection-&gt;length; i++)</span></div><div class="line">&#123;</div><div class="line">	pElement = pCollection-&gt;item(i, (long)<span class="number">0</span>)<span class="comment">;</span></div><div class="line">	if (pElement != NULL)</div><div class="line">	&#123;</div><div class="line">		<span class="keyword">BSTR </span><span class="keyword">bstrClass;</span></div><div class="line">		pElement-&gt;get_className(&amp;<span class="keyword">bstrClass);</span></div><div class="line">		CString strClass = _com_util::ConvertBSTRToString(<span class="keyword">bstrClass);</span></div><div class="line">		if (strClass.Compare(<span class="string">"link_title"</span>) == <span class="number">0</span>)</div><div class="line">		&#123;</div><div class="line">			<span class="keyword">BSTR </span><span class="keyword">bstrText </span>= NULL<span class="comment">;</span></div><div class="line">			pElement-&gt;get_innerText(&amp;<span class="keyword">bstrText);</span></div><div class="line">			CString strText = <span class="keyword">bstrText;</span></div><div class="line">			m_list.<span class="keyword">InsertItem(i, </span>strText)<span class="comment">;</span></div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>其实两种方法大同小异，相较而言可能数据量大的话，法二效率高些吧。因为法一是直接遍历所有的元素寻找class相同的，而法二是先定位span，然后在span中找寻class。（getElementsByTagName只有IHTMLDocument3Ptr）</p>
<p><a href="http://blog.csdn.net/lanuage/article/details/72825878" target="_blank" rel="external">使用MSHTML解析HTML页面</a><br><a href="http://www.2cto.com/kf/201305/214730.html" target="_blank" rel="external">变体VARIANT</a><br>MSDN-DOM    <a href="https://msdn.microsoft.com/en-us/library/ms766487(v=vs.85).aspx" target="_blank" rel="external">https://msdn.microsoft.com/en-us/library/ms766487(v=vs.85).aspx</a><br><a href="http://www.360doc.com/content/12/0427/19/8006573_207099529.shtml" target="_blank" rel="external">使用MSHTML接口获取链接</a></p>
<p>晚上几个小时做完了一半，抵了之前一两个月。<br>数据库这块没来得及做，没加多线程，很多细节还得调。但比起之前心有余而力不足的感觉还是好多了。  学过msxml后，学习mshtml确实强一点，比一个月前完全不知道怎么下手好很多了。</p>
<p>今晚总算做出来个半成品<br><img src="http://img.blog.csdn.net/20170802003740628?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="半成品"></p>
<h4 id="正文解析"><a href="#正文解析" class="headerlink" title="正文解析"></a>正文解析</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">void</span> CGetWebDlg::ArticleParse(CString strArticle, Blog* blog, <span class="keyword">int</span> iRow)</div><div class="line">&#123;</div><div class="line">	IHTMLDocument2* pDoc;</div><div class="line">	MSHTML::IHTMLDocument3Ptr pDoc3;</div><div class="line">	MSHTML::IHTMLElementCollectionPtr pCollection;</div><div class="line">	MSHTML::IHTMLElementPtr pElement;</div><div class="line"></div><div class="line">	HRESULT hr = CoCreateInstance(CLSID_HTMLDocument, <span class="literal">NULL</span>, CLSCTX_INPROC_SERVER, IID_IHTMLDocument2, (<span class="keyword">void</span>**)&amp;pDoc);</div><div class="line"></div><div class="line"></div><div class="line">	<span class="comment">//将代码放入安全数组并写入文档</span></div><div class="line">	SAFEARRAY* psa = SafeArrayCreateVector(VT_VARIANT, <span class="number">0</span>, <span class="number">1</span>);</div><div class="line">	<span class="keyword">if</span> (psa == <span class="literal">NULL</span> || pDoc == <span class="literal">NULL</span>)</div><div class="line">	&#123;</div><div class="line">		MessageBox(<span class="number">_</span>T(<span class="string">"创建Document2对象失败！"</span>));</div><div class="line">	&#125;</div><div class="line">	VARIANT *param;</div><div class="line">	<span class="keyword">bstr_t</span> bsData = (LPCTSTR)strArticle;</div><div class="line">	hr = SafeArrayAccessData(psa, (LPVOID*)&amp;param);</div><div class="line">	param-&gt;vt = VT_BSTR;</div><div class="line">	param-&gt;bstrVal = (BSTR)bsData;</div><div class="line">	hr = pDoc-&gt;write(psa);</div><div class="line">	<span class="comment">//hr = pDoc-&gt;close();</span></div><div class="line"></div><div class="line">	<span class="comment">//SafeArrayDestroy(psa);</span></div><div class="line">	hr = SafeArrayUnaccessData(psa);</div><div class="line">	<span class="keyword">_bstr_t</span> href;</div><div class="line">	pDoc3 = pDoc;</div><div class="line">	pCollection = pDoc3-&gt;getElementsByTagName(<span class="string">L"div"</span>);</div><div class="line">	<span class="keyword">for</span> (<span class="keyword">long</span> k = <span class="number">0</span>; k &lt; pCollection-&gt;length; k++)</div><div class="line">	&#123;</div><div class="line">		pElement = pCollection-&gt;item(k, (<span class="keyword">long</span>)<span class="number">0</span>);</div><div class="line">		<span class="keyword">if</span> (pElement != <span class="literal">NULL</span>)</div><div class="line">		&#123;</div><div class="line">			BSTR bstrClass;</div><div class="line">			pElement-&gt;get_id(&amp;bstrClass);</div><div class="line">			CString strClass = <span class="number">_</span>com_util::ConvertBSTRToString(bstrClass);</div><div class="line">			<span class="keyword">if</span> (strClass.CompareNoCase(<span class="string">"article_content"</span>) == <span class="number">0</span>)</div><div class="line">			&#123;</div><div class="line">				BSTR bstrText = <span class="literal">NULL</span>;</div><div class="line">				pElement-&gt;get_innerText(&amp;bstrText);</div><div class="line">				CString strText = bstrText;</div><div class="line">				blog-&gt;article = strText;</div><div class="line">				m_list.SetItemData(iRow, (DWORD_PTR)blog);							</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>建立了一个结构体用来存放每篇文章的标题和正文，方便点击列表控件项时读取对应的结构体。</p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">struct</span> Blog</div><div class="line">	&#123;</div><div class="line">		CString title;</div><div class="line">		CString article;</div><div class="line">	&#125;;</div></pre></td></tr></table></figure>
<h4 id="列表控件和编辑框交互"><a href="#列表控件和编辑框交互" class="headerlink" title="列表控件和编辑框交互"></a>列表控件和编辑框交互</h4><h5 id="列表控件初始化"><a href="#列表控件初始化" class="headerlink" title="列表控件初始化"></a>列表控件初始化</h5><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">CRect rectLocal;</div><div class="line">m_list.GetClientRect(rectLocal); <span class="comment">//获得当前客户区信息</span></div><div class="line">m_list.InsertColumn(<span class="number">0</span>, <span class="string">"序号"</span>, LVCFMT_LEFT, rectLocal.Width() / <span class="number">6</span>, <span class="number">0</span>);</div><div class="line">m_list.InsertColumn(<span class="number">1</span>, <span class="string">"文章列表"</span>, LVCFMT_LEFT, rectLocal.Width() / <span class="number">6</span> * <span class="number">5</span>, <span class="number">1</span>);</div></pre></td></tr></table></figure>
<p>添加多列后，单击只能选中第一列，这时需要修改风格 LVS_EX_FULLROWSELECT   表示整行。<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">m_list.SetExtendedStyle(LVS_EX_FULLROWSELECT);</div></pre></td></tr></table></figure></p>
<h5 id="添加数据"><a href="#添加数据" class="headerlink" title="添加数据"></a>添加数据</h5><p>单纯添加一项的话：    m_list.InsertItem(项的索引, 数据);<br>但要指定列的话：<br>m_list.InsertItem(项的索引, “”);<br>m_list.SetItemText(行, 列, 数据);</p>
<h5 id="onlvnitemchangedlist"><a href="#OnLvnItemchangedList" class="headerlink" title="OnLvnItemchangedList"></a>OnLvnItemchangedList</h5><p>试了多种方法，只有这一种成功了：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">void</span> CGetWebDlg::OnLvnItemchangedList1(NMHDR *pNMHDR, LRESULT *pResult)</div><div class="line">&#123;</div><div class="line">	LPNMLISTVIEW pNMLV = <span class="keyword">reinterpret_cast</span>&lt;LPNMLISTVIEW&gt;(pNMHDR);</div><div class="line">	<span class="comment">// <span class="doctag">TODO:</span>  在此添加控件通知处理程序代码</span></div><div class="line"><span class="comment">// 	m_edit.SetWindowText("");</span></div><div class="line"><span class="comment">// 	int index = m_list.GetNextItem(-1, LVNI_ALL | LVNI_SELECTED);</span></div><div class="line"><span class="comment">// 	Blog *pStructure = (Blog*)m_list.GetItemData(index);</span></div><div class="line"><span class="comment">// 	m_edit.SetWindowText(pStructure-&gt;article);</span></div><div class="line">	<span class="keyword">if</span> (pNMLV-&gt;uNewState == (LVIS_SELECTED | LVIS_FOCUSED))</div><div class="line">	&#123;</div><div class="line">		m_edit.SetWindowText(<span class="string">""</span>);</div><div class="line">		Blog *pStructure = (Blog*)m_list.GetItemData(pNMLV-&gt;iItem);</div><div class="line">		m_edit.SetWindowText(pStructure-&gt;article);</div><div class="line">	&#125;</div><div class="line">	*pResult = <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>实现列表和编辑框交互后，可以说这已经是一个可以完整运行的程序了，V1.0版本出炉。<br>实测解析时间：1分41秒<br>能够成功获取该博客111篇文章，能够正确显示正文（包括清晰显示代码）。现在的运行图：<br><img src="http://img.blog.csdn.net/20170805145839785?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="V1.0"><br>该版本未添加多线程、未和数据库关联。</p>
<p>V2.0实现数据库操作</p>
<h1 id="使用sqlite数据库"><a href="#使用sqlite数据库" class="headerlink" title="使用sqlite数据库"></a>使用sqlite数据库</h1><h2 id="下载导入"><a href="#下载导入" class="headerlink" title="下载导入"></a>下载导入</h2><p>官网下载sqlite<br>Source Code  sqlite-amalgamation-3200000.zip  有三个东西  shell.c  sqlite3.c  sqlite3.h<br>根据<a href="http://blog.csdn.net/sunnyloves/article/details/39010831" target="_blank" rel="external">VS2010下SQLite3生成lib库文件</a> 文章方法生成sqlite3.lib</p>
<p>Precompiled Binaries for Windows  sqlite-dll-win32-x86-3200000.zip  有一个所需 sqlite3.dll</p>
<p>将lib和dll放入项目工程里，在.cpp开头加上<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"sqlite3.h"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">pragma</span> comment(lib,<span class="meta-string">"sqlite3.lib"</span>)</span></div></pre></td></tr></table></figure></p>
<h2 id="sqlite在vc中的操作"><a href="#sqlite在VC中的操作" class="headerlink" title="sqlite在VC中的操作"></a>sqlite在VC中的操作</h2><pre><code class="C++"><span class="keyword">int</span> CGetWebDlg::Database(CString title, CString article)
{
    sqlite3 * pDB;
    <span class="keyword">char</span>* errMsg;
    <span class="comment">// 连接SQLite数据库</span>
    <span class="keyword">int</span> res = sqlite3_open(<span class="string">"datebase.db"</span>, &amp;pDB);
    <span class="keyword">if</span> (res != SQLITE_OK){
        MessageBox(_T(<span class="string">"数据库打开失败，请检查后再操作！"</span>), <span class="literal">NULL</span>, MB_ICONSTOP);
        sqlite3_close(pDB);
        <span class="keyword">return</span> <span class="number">-1</span>;
    }
<span class="comment">//     // 创建表</span>
    <span class="built_in">string</span> strSQL = <span class="string">"create table test (title text, article text);"</span>;
    res = sqlite3_exec(pDB, strSQL.c_str(), <span class="number">0</span>, <span class="number">0</span>, &amp;errMsg);
    <span class="keyword">if</span> (res != SQLITE_OK)
    {
        MessageBox(_T(<span class="string">"数据库打开失败，请检查后再操作！"</span>), <span class="literal">NULL</span>, MB_ICONSTOP);
        <span class="comment">//return -1;</span>
    }
    <span class="comment">// 插入数据</span>
    <span class="built_in">string</span> strSQL = <span class="string">"INSERT INTO \"blog\" VALUES(title, article); "</span>;
    sqlite3_exec(pDB, strSQL.c_str(), <span class="number">0</span>, <span class="number">0</span>, &amp;errMsg);

<span class="comment">//     int nrow = 0, ncolumn = 0;</span>
<span class="comment">//     char **azResult; //二维数组存放结果</span>


    <span class="comment">//查询数据</span>
    strSQL = <span class="string">"select * from test;"</span>;
    sqlite3_exec(pDB, strSQL.c_str(), SelectCallback, <span class="number">0</span>, &amp;errMsg);


    sqlite3_close(pDB); <span class="comment">//关闭数据库</span>

}


<span class="keyword">int</span> CGetWebDlg::SelectCallback(<span class="keyword">void</span> *notUsed, <span class="keyword">int</span> argc, <span class="keyword">char</span> **argv, <span class="keyword">char</span> **azColName)
{
    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; argc; i++)
    {
        <span class="built_in">printf</span>(<span class="string">"%s = %s"</span>, azColName[i], (argv[i] ? argv[i] : <span class="string">"NULL"</span>));
        <span class="keyword">if</span> (i != argc - <span class="number">1</span>)
        {
                <span class="built_in">printf</span>(<span class="string">", "</span>);
        }
    }
    <span class="built_in">printf</span>(<span class="string">"\n"</span>);
    <span class="keyword">return</span> <span class="number">0</span>;
}
</code></pre>
<p>还是事先把数据库和表创建好了方便……<br><img src="http://img.blog.csdn.net/20170812235933407?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="创建数据库和表"></p>
<p>思路是解析完每一篇正文后就将标题和正文数据存入数据库，添加为表中的一项。</p>
<p>1.好像和ADO没啥关系<br>2.能不能保存结构体到sqlite<br>3.数据怎么查看……没数据库管理系统可视化界面反而……<br>4.考虑用不用sqlite的封装类<br>5.select回调函数怎么用<br>6.怎么存变量到数据库<br>7.查询后怎么显示到列表控件上<br>8.从列表控件点击怎么获取正文显示到编辑框，因为数据来自数据库，就不是直接获取列表点击项的结构体了。</p>
<p>。。。白学的数据库</p>
<p><a href="http://blog.csdn.net/langxm2006/article/details/55685173" target="_blank" rel="external">MFC中使用sqlite3操作数据库 创建，插入数据，查询数据</a><br><a href="http://www.jb51.net/article/50982.htm" target="_blank" rel="external">C++操作SQLite简明教程</a><br><a href="http://blog.csdn.net/lp310018931/article/details/28706439" target="_blank" rel="external">在vc中使用sqlite3数据库</a><br><a href="http://blog.csdn.net/segen_jaa/article/details/7938959" target="_blank" rel="external">C++使用SQLite步骤及示例</a><br><a href="http://www.cnblogs.com/sunniflyer/p/4118956.html" target="_blank" rel="external">MFC中使用ADO进行数据库操作</a><br><a href="http://blog.csdn.net/auauxxx/article/details/7462410" target="_blank" rel="external">VC连接SQLite3的方法(MFC封装类)</a><br><a href="https://yq.aliyun.com/ziliao/145275" target="_blank" rel="external">VC++操作SQLite简单实例_C语言</a></p>
<p>To be continued…</p>
]]></content>
      
        <categories>
            
            <category> 互联网 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> MFC </tag>
            
            <tag> 爬虫 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Socket点对点聊天+文件传输]]></title>
      <url>http://hubojing.github.io/2017/05/07/Socket%E7%82%B9%E5%AF%B9%E7%82%B9%E8%81%8A%E5%A4%A9-%E6%96%87%E4%BB%B6%E4%BC%A0%E8%BE%93/</url>
      <content type="html"><![CDATA[<div align="left"><br><img src="https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1494249495796&di=6e913a58ff8ec3713e96983683e150b8&imgtype=0&src=http%3A%2F%2Fimg.my.csdn.net%2Fuploads%2F201304%2F08%2F1365431054_1015.png" width="300" height="180" style="float:right;"><br><br><br>　Socket编程。　<br><br><br> </div>

<a id="more"></a>
<p>socket:<br>设计一个点对点聊天小程序。</p>
<ol>
<li>使用原生socket api实现，<strong>即不使用MFC中的socket类</strong>，也不使用其他高级socket框架</li>
<li>需要先设计一套协议</li>
<li>有GUI界面</li>
<li>可互相传递文字和文件</li>
<li>即时反应对方的在线还是离线</li>
</ol>
<h1 id="初级版"><a href="#初级版" class="headerlink" title="初级版"></a>初级版</h1><p>1.在应用程序类重载的InitInstance函数中调用AfxSocketInit()函数，加载套接字。</p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">if</span>(!AfxSocketInit())</div><div class="line">&#123;</div><div class="line">    AfxMessageBox(<span class="string">"加载套接字库失败！"</span>);</div><div class="line">    <span class="keyword">return</span> FALSE;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>2.在你的对话框类中添加如下函数InitSocket()，初始化套接字</p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line">BOOL CChatDlg::InitSocket()</div><div class="line">&#123;</div><div class="line">    m_socket=socket(AF_INET,SOCK_DGRAM,<span class="number">0</span>);</div><div class="line">    <span class="keyword">if</span>(INVALID_SOCKET==m_socket)</div><div class="line">    &#123;</div><div class="line">        MessageBox(<span class="string">"套接字创建失败！"</span>);</div><div class="line">        <span class="keyword">return</span> FALSE;</div><div class="line">    &#125;</div><div class="line">    SOCKADDR_IN addrSock;</div><div class="line">    addrSock.sin_family=AF_INET;</div><div class="line">    addrSock.sin_port=htons(<span class="number">5000</span>);</div><div class="line">    addrSock.sin_addr.S_un.S_addr=htonl(INADDR_ANY);</div><div class="line"> </div><div class="line">    <span class="keyword">int</span> retval;</div><div class="line">    retval=bind(m_socket,(SOCKADDR*)&amp;addrSock,<span class="keyword">sizeof</span>(SOCKADDR));</div><div class="line">    <span class="keyword">if</span>(SOCKET_ERROR==retval)</div><div class="line">    &#123;</div><div class="line">        closesocket(m_socket);</div><div class="line">        MessageBox(<span class="string">"绑定失败!"</span>);</div><div class="line">        <span class="keyword">return</span> FALSE;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> TRUE;</div><div class="line"> </div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>3.在对话框类的OnInitDialog()函数中调用上述InitSocket()函数，初始化套接字，同时创建一个线程接收数据：</p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">RECVPARAM *pRecvParam=<span class="keyword">new</span> RECVPARAM;</div><div class="line">pRecvParam-&gt;sock=m_socket;</div><div class="line">pRecvParam-&gt;hwnd=m_hWnd;</div><div class="line">HANDLE hThread=CreateThread(<span class="literal">NULL</span>,<span class="number">0</span>,RecvProc,(LPVOID)pRecvParam,<span class="number">0</span>,<span class="literal">NULL</span>);</div><div class="line">CloseHandle(hThread);</div></pre></td></tr></table></figure>
<p>其中</p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">struct</span> RECVPARAM</div><div class="line">&#123;</div><div class="line">    SOCKET sock;</div><div class="line">    HWND hwnd;</div><div class="line">&#125;;</div></pre></td></tr></table></figure>
<p>是自定义结构体</p>
<p>4.接收线程函数RecvProc:</p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">DWORD WINAPI CChatDlg::RecvProc(LPVOID lpParameter)</div><div class="line">&#123;</div><div class="line">    SOCKET sock=((RECVPARAM*)lpParameter)-&gt;sock;</div><div class="line">    HWND hwnd=((RECVPARAM*)lpParameter)-&gt;hwnd;</div><div class="line">    <span class="keyword">delete</span> lpParameter;   </div><div class="line">    SOCKADDR_IN addrFrom;</div><div class="line">    <span class="keyword">int</span> len=<span class="keyword">sizeof</span>(SOCKADDR); </div><div class="line">    <span class="keyword">char</span> recvBuf[<span class="number">200</span>];</div><div class="line">    <span class="keyword">int</span> retval;</div><div class="line">    <span class="keyword">while</span>(TRUE)</div><div class="line">    &#123;</div><div class="line">        retval=recvfrom(sock,recvBuf,<span class="number">200</span>,<span class="number">0</span>,(SOCKADDR*)&amp;addrFrom,&amp;len);</div><div class="line">        <span class="keyword">if</span>(SOCKET_ERROR==retval)</div><div class="line">            <span class="keyword">break</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>recvBuf中就保存了你要的数据。<br><img src="http://img.blog.csdn.net/20170508183259821?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="初级版"></p>
<h1 id="中级版"><a href="#中级版" class="headerlink" title="中级版"></a>中级版</h1><h2 id="界面"><a href="#界面" class="headerlink" title="界面"></a>界面</h2><p><img src="http://img.blog.csdn.net/20170508181716901?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="原始界面"></p>
<p>聊天：<br><img src="http://img.blog.csdn.net/20170508181451922?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="TCP"></p>
<p>传文件：<br>服务器<br><img src="http://img.blog.csdn.net/20170508181526914?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="传文件"></p>
<p>客户端<br><img src="http://img.blog.csdn.net/20170508181625735?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="传文件2"></p>
<p>显示文件传输进度：<br><img src="http://img.blog.csdn.net/20170508181907845?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="传输过程"></p>
<p>传输成功，可以正常打开文件。<br><img src="http://img.blog.csdn.net/20170508181937814?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="传输成功"></p>
<p>下线：<br><img src="http://img.blog.csdn.net/20170508182031143?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="下线"></p>
<p>关于：<br><img src="http://img.blog.csdn.net/20170508182628147?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="关于"></p>
<p>源程序：</p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div><div class="line">175</div><div class="line">176</div><div class="line">177</div><div class="line">178</div><div class="line">179</div><div class="line">180</div><div class="line">181</div><div class="line">182</div><div class="line">183</div><div class="line">184</div><div class="line">185</div><div class="line">186</div><div class="line">187</div><div class="line">188</div><div class="line">189</div><div class="line">190</div><div class="line">191</div><div class="line">192</div><div class="line">193</div><div class="line">194</div><div class="line">195</div><div class="line">196</div><div class="line">197</div><div class="line">198</div><div class="line">199</div><div class="line">200</div><div class="line">201</div><div class="line">202</div><div class="line">203</div><div class="line">204</div><div class="line">205</div><div class="line">206</div><div class="line">207</div><div class="line">208</div><div class="line">209</div><div class="line">210</div><div class="line">211</div><div class="line">212</div><div class="line">213</div><div class="line">214</div><div class="line">215</div><div class="line">216</div><div class="line">217</div><div class="line">218</div><div class="line">219</div><div class="line">220</div><div class="line">221</div><div class="line">222</div><div class="line">223</div><div class="line">224</div><div class="line">225</div><div class="line">226</div><div class="line">227</div><div class="line">228</div><div class="line">229</div><div class="line">230</div><div class="line">231</div><div class="line">232</div><div class="line">233</div><div class="line">234</div><div class="line">235</div><div class="line">236</div><div class="line">237</div><div class="line">238</div><div class="line">239</div><div class="line">240</div><div class="line">241</div><div class="line">242</div><div class="line">243</div><div class="line">244</div><div class="line">245</div><div class="line">246</div><div class="line">247</div><div class="line">248</div><div class="line">249</div><div class="line">250</div><div class="line">251</div><div class="line">252</div><div class="line">253</div><div class="line">254</div><div class="line">255</div><div class="line">256</div><div class="line">257</div><div class="line">258</div><div class="line">259</div><div class="line">260</div><div class="line">261</div><div class="line">262</div><div class="line">263</div><div class="line">264</div><div class="line">265</div><div class="line">266</div><div class="line">267</div><div class="line">268</div><div class="line">269</div><div class="line">270</div><div class="line">271</div><div class="line">272</div><div class="line">273</div><div class="line">274</div><div class="line">275</div><div class="line">276</div><div class="line">277</div><div class="line">278</div><div class="line">279</div><div class="line">280</div><div class="line">281</div><div class="line">282</div><div class="line">283</div><div class="line">284</div><div class="line">285</div><div class="line">286</div><div class="line">287</div><div class="line">288</div><div class="line">289</div><div class="line">290</div><div class="line">291</div><div class="line">292</div><div class="line">293</div><div class="line">294</div><div class="line">295</div><div class="line">296</div><div class="line">297</div><div class="line">298</div><div class="line">299</div><div class="line">300</div><div class="line">301</div><div class="line">302</div><div class="line">303</div><div class="line">304</div><div class="line">305</div><div class="line">306</div><div class="line">307</div><div class="line">308</div><div class="line">309</div><div class="line">310</div><div class="line">311</div><div class="line">312</div><div class="line">313</div><div class="line">314</div><div class="line">315</div><div class="line">316</div><div class="line">317</div><div class="line">318</div><div class="line">319</div><div class="line">320</div><div class="line">321</div><div class="line">322</div><div class="line">323</div><div class="line">324</div><div class="line">325</div><div class="line">326</div><div class="line">327</div><div class="line">328</div><div class="line">329</div><div class="line">330</div><div class="line">331</div><div class="line">332</div><div class="line">333</div><div class="line">334</div><div class="line">335</div><div class="line">336</div><div class="line">337</div><div class="line">338</div><div class="line">339</div><div class="line">340</div><div class="line">341</div><div class="line">342</div><div class="line">343</div><div class="line">344</div><div class="line">345</div><div class="line">346</div><div class="line">347</div><div class="line">348</div><div class="line">349</div><div class="line">350</div><div class="line">351</div><div class="line">352</div><div class="line">353</div><div class="line">354</div><div class="line">355</div><div class="line">356</div><div class="line">357</div><div class="line">358</div><div class="line">359</div><div class="line">360</div><div class="line">361</div><div class="line">362</div><div class="line">363</div><div class="line">364</div><div class="line">365</div><div class="line">366</div><div class="line">367</div><div class="line">368</div><div class="line">369</div><div class="line">370</div><div class="line">371</div><div class="line">372</div><div class="line">373</div><div class="line">374</div><div class="line">375</div><div class="line">376</div><div class="line">377</div><div class="line">378</div><div class="line">379</div><div class="line">380</div><div class="line">381</div><div class="line">382</div><div class="line">383</div><div class="line">384</div><div class="line">385</div><div class="line">386</div><div class="line">387</div><div class="line">388</div><div class="line">389</div><div class="line">390</div><div class="line">391</div><div class="line">392</div><div class="line">393</div><div class="line">394</div><div class="line">395</div><div class="line">396</div><div class="line">397</div><div class="line">398</div><div class="line">399</div><div class="line">400</div><div class="line">401</div><div class="line">402</div><div class="line">403</div><div class="line">404</div><div class="line">405</div><div class="line">406</div><div class="line">407</div><div class="line">408</div><div class="line">409</div><div class="line">410</div><div class="line">411</div><div class="line">412</div><div class="line">413</div><div class="line">414</div><div class="line">415</div><div class="line">416</div><div class="line">417</div><div class="line">418</div><div class="line">419</div><div class="line">420</div><div class="line">421</div><div class="line">422</div><div class="line">423</div><div class="line">424</div><div class="line">425</div><div class="line">426</div><div class="line">427</div><div class="line">428</div><div class="line">429</div><div class="line">430</div><div class="line">431</div><div class="line">432</div><div class="line">433</div><div class="line">434</div><div class="line">435</div><div class="line">436</div><div class="line">437</div><div class="line">438</div><div class="line">439</div><div class="line">440</div><div class="line">441</div><div class="line">442</div><div class="line">443</div><div class="line">444</div><div class="line">445</div><div class="line">446</div><div class="line">447</div><div class="line">448</div><div class="line">449</div><div class="line">450</div><div class="line">451</div><div class="line">452</div><div class="line">453</div><div class="line">454</div><div class="line">455</div><div class="line">456</div><div class="line">457</div><div class="line">458</div><div class="line">459</div><div class="line">460</div><div class="line">461</div><div class="line">462</div><div class="line">463</div><div class="line">464</div><div class="line">465</div><div class="line">466</div><div class="line">467</div><div class="line">468</div><div class="line">469</div><div class="line">470</div><div class="line">471</div><div class="line">472</div><div class="line">473</div><div class="line">474</div><div class="line">475</div><div class="line">476</div><div class="line">477</div><div class="line">478</div><div class="line">479</div><div class="line">480</div><div class="line">481</div><div class="line">482</div><div class="line">483</div><div class="line">484</div><div class="line">485</div><div class="line">486</div><div class="line">487</div><div class="line">488</div><div class="line">489</div><div class="line">490</div><div class="line">491</div><div class="line">492</div><div class="line">493</div><div class="line">494</div><div class="line">495</div><div class="line">496</div><div class="line">497</div><div class="line">498</div><div class="line">499</div><div class="line">500</div><div class="line">501</div><div class="line">502</div><div class="line">503</div><div class="line">504</div><div class="line">505</div><div class="line">506</div><div class="line">507</div><div class="line">508</div><div class="line">509</div><div class="line">510</div><div class="line">511</div><div class="line">512</div><div class="line">513</div><div class="line">514</div><div class="line">515</div><div class="line">516</div><div class="line">517</div><div class="line">518</div><div class="line">519</div><div class="line">520</div><div class="line">521</div><div class="line">522</div><div class="line">523</div><div class="line">524</div><div class="line">525</div><div class="line">526</div><div class="line">527</div><div class="line">528</div><div class="line">529</div><div class="line">530</div><div class="line">531</div><div class="line">532</div><div class="line">533</div><div class="line">534</div><div class="line">535</div><div class="line">536</div><div class="line">537</div><div class="line">538</div><div class="line">539</div><div class="line">540</div><div class="line">541</div><div class="line">542</div><div class="line">543</div><div class="line">544</div><div class="line">545</div><div class="line">546</div><div class="line">547</div><div class="line">548</div><div class="line">549</div><div class="line">550</div><div class="line">551</div><div class="line">552</div><div class="line">553</div><div class="line">554</div><div class="line">555</div><div class="line">556</div><div class="line">557</div><div class="line">558</div><div class="line">559</div><div class="line">560</div><div class="line">561</div><div class="line">562</div><div class="line">563</div><div class="line">564</div><div class="line">565</div><div class="line">566</div><div class="line">567</div><div class="line">568</div><div class="line">569</div><div class="line">570</div><div class="line">571</div><div class="line">572</div><div class="line">573</div><div class="line">574</div><div class="line">575</div><div class="line">576</div><div class="line">577</div><div class="line">578</div><div class="line">579</div><div class="line">580</div><div class="line">581</div><div class="line">582</div><div class="line">583</div><div class="line">584</div><div class="line">585</div><div class="line">586</div><div class="line">587</div><div class="line">588</div><div class="line">589</div><div class="line">590</div><div class="line">591</div><div class="line">592</div><div class="line">593</div><div class="line">594</div><div class="line">595</div><div class="line">596</div><div class="line">597</div><div class="line">598</div><div class="line">599</div><div class="line">600</div><div class="line">601</div><div class="line">602</div><div class="line">603</div><div class="line">604</div><div class="line">605</div><div class="line">606</div><div class="line">607</div><div class="line">608</div><div class="line">609</div><div class="line">610</div><div class="line">611</div><div class="line">612</div><div class="line">613</div><div class="line">614</div><div class="line">615</div><div class="line">616</div><div class="line">617</div><div class="line">618</div><div class="line">619</div><div class="line">620</div><div class="line">621</div><div class="line">622</div><div class="line">623</div><div class="line">624</div><div class="line">625</div><div class="line">626</div><div class="line">627</div><div class="line">628</div><div class="line">629</div><div class="line">630</div><div class="line">631</div><div class="line">632</div><div class="line">633</div><div class="line">634</div><div class="line">635</div><div class="line">636</div><div class="line">637</div><div class="line">638</div><div class="line">639</div><div class="line">640</div><div class="line">641</div><div class="line">642</div><div class="line">643</div><div class="line">644</div><div class="line">645</div><div class="line">646</div><div class="line">647</div><div class="line">648</div><div class="line">649</div><div class="line">650</div><div class="line">651</div><div class="line">652</div><div class="line">653</div><div class="line">654</div><div class="line">655</div><div class="line">656</div><div class="line">657</div><div class="line">658</div><div class="line">659</div><div class="line">660</div><div class="line">661</div><div class="line">662</div><div class="line">663</div><div class="line">664</div><div class="line">665</div><div class="line">666</div><div class="line">667</div><div class="line">668</div><div class="line">669</div><div class="line">670</div><div class="line">671</div><div class="line">672</div><div class="line">673</div><div class="line">674</div><div class="line">675</div><div class="line">676</div><div class="line">677</div><div class="line">678</div><div class="line">679</div><div class="line">680</div><div class="line">681</div><div class="line">682</div><div class="line">683</div><div class="line">684</div><div class="line">685</div><div class="line">686</div><div class="line">687</div><div class="line">688</div><div class="line">689</div><div class="line">690</div><div class="line">691</div><div class="line">692</div><div class="line">693</div><div class="line">694</div><div class="line">695</div><div class="line">696</div><div class="line">697</div><div class="line">698</div><div class="line">699</div><div class="line">700</div><div class="line">701</div><div class="line">702</div><div class="line">703</div><div class="line">704</div><div class="line">705</div><div class="line">706</div><div class="line">707</div><div class="line">708</div><div class="line">709</div><div class="line">710</div><div class="line">711</div><div class="line">712</div><div class="line">713</div><div class="line">714</div><div class="line">715</div><div class="line">716</div><div class="line">717</div><div class="line">718</div><div class="line">719</div><div class="line">720</div><div class="line">721</div><div class="line">722</div><div class="line">723</div><div class="line">724</div><div class="line">725</div><div class="line">726</div><div class="line">727</div><div class="line">728</div><div class="line">729</div><div class="line">730</div><div class="line">731</div><div class="line">732</div><div class="line">733</div><div class="line">734</div><div class="line">735</div><div class="line">736</div><div class="line">737</div><div class="line">738</div><div class="line">739</div><div class="line">740</div><div class="line">741</div><div class="line">742</div><div class="line">743</div><div class="line">744</div><div class="line">745</div><div class="line">746</div><div class="line">747</div><div class="line">748</div><div class="line">749</div><div class="line">750</div><div class="line">751</div><div class="line">752</div><div class="line">753</div><div class="line">754</div><div class="line">755</div><div class="line">756</div><div class="line">757</div><div class="line">758</div><div class="line">759</div><div class="line">760</div><div class="line">761</div><div class="line">762</div><div class="line">763</div><div class="line">764</div><div class="line">765</div><div class="line">766</div><div class="line">767</div><div class="line">768</div><div class="line">769</div><div class="line">770</div><div class="line">771</div><div class="line">772</div><div class="line">773</div><div class="line">774</div><div class="line">775</div><div class="line">776</div><div class="line">777</div><div class="line">778</div><div class="line">779</div><div class="line">780</div><div class="line">781</div><div class="line">782</div><div class="line">783</div><div class="line">784</div><div class="line">785</div><div class="line">786</div><div class="line">787</div><div class="line">788</div><div class="line">789</div><div class="line">790</div><div class="line">791</div><div class="line">792</div><div class="line">793</div><div class="line">794</div><div class="line">795</div><div class="line">796</div><div class="line">797</div><div class="line">798</div><div class="line">799</div><div class="line">800</div><div class="line">801</div><div class="line">802</div><div class="line">803</div><div class="line">804</div><div class="line">805</div><div class="line">806</div><div class="line">807</div><div class="line">808</div><div class="line">809</div><div class="line">810</div><div class="line">811</div><div class="line">812</div><div class="line">813</div><div class="line">814</div><div class="line">815</div><div class="line">816</div><div class="line">817</div><div class="line">818</div><div class="line">819</div><div class="line">820</div><div class="line">821</div><div class="line">822</div><div class="line">823</div><div class="line">824</div><div class="line">825</div><div class="line">826</div><div class="line">827</div><div class="line">828</div><div class="line">829</div><div class="line">830</div><div class="line">831</div><div class="line">832</div><div class="line">833</div><div class="line">834</div><div class="line">835</div><div class="line">836</div><div class="line">837</div><div class="line">838</div><div class="line">839</div><div class="line">840</div><div class="line">841</div><div class="line">842</div><div class="line">843</div><div class="line">844</div><div class="line">845</div><div class="line">846</div><div class="line">847</div><div class="line">848</div><div class="line">849</div><div class="line">850</div><div class="line">851</div><div class="line">852</div><div class="line">853</div><div class="line">854</div><div class="line">855</div><div class="line">856</div><div class="line">857</div><div class="line">858</div><div class="line">859</div><div class="line">860</div><div class="line">861</div><div class="line">862</div><div class="line">863</div><div class="line">864</div><div class="line">865</div><div class="line">866</div><div class="line">867</div><div class="line">868</div><div class="line">869</div><div class="line">870</div><div class="line">871</div><div class="line">872</div><div class="line">873</div><div class="line">874</div><div class="line">875</div><div class="line">876</div><div class="line">877</div><div class="line">878</div><div class="line">879</div><div class="line">880</div><div class="line">881</div><div class="line">882</div><div class="line">883</div><div class="line">884</div><div class="line">885</div><div class="line">886</div><div class="line">887</div><div class="line">888</div><div class="line">889</div><div class="line">890</div><div class="line">891</div><div class="line">892</div><div class="line">893</div><div class="line">894</div><div class="line">895</div><div class="line">896</div><div class="line">897</div><div class="line">898</div><div class="line">899</div><div class="line">900</div><div class="line">901</div><div class="line">902</div><div class="line">903</div><div class="line">904</div><div class="line">905</div><div class="line">906</div><div class="line">907</div><div class="line">908</div><div class="line">909</div><div class="line">910</div><div class="line">911</div><div class="line">912</div><div class="line">913</div><div class="line">914</div><div class="line">915</div><div class="line">916</div><div class="line">917</div><div class="line">918</div><div class="line">919</div><div class="line">920</div><div class="line">921</div><div class="line">922</div><div class="line">923</div><div class="line">924</div><div class="line">925</div><div class="line">926</div><div class="line">927</div><div class="line">928</div><div class="line">929</div><div class="line">930</div><div class="line">931</div><div class="line">932</div><div class="line">933</div><div class="line">934</div><div class="line">935</div><div class="line">936</div><div class="line">937</div><div class="line">938</div><div class="line">939</div><div class="line">940</div><div class="line">941</div><div class="line">942</div><div class="line">943</div><div class="line">944</div><div class="line">945</div><div class="line">946</div><div class="line">947</div><div class="line">948</div><div class="line">949</div><div class="line">950</div><div class="line">951</div><div class="line">952</div><div class="line">953</div><div class="line">954</div><div class="line">955</div><div class="line">956</div><div class="line">957</div><div class="line">958</div><div class="line">959</div><div class="line">960</div><div class="line">961</div><div class="line">962</div><div class="line">963</div><div class="line">964</div><div class="line">965</div><div class="line">966</div><div class="line">967</div><div class="line">968</div><div class="line">969</div><div class="line">970</div><div class="line">971</div><div class="line">972</div><div class="line">973</div><div class="line">974</div><div class="line">975</div><div class="line">976</div><div class="line">977</div><div class="line">978</div><div class="line">979</div><div class="line">980</div><div class="line">981</div><div class="line">982</div><div class="line">983</div><div class="line">984</div><div class="line">985</div><div class="line">986</div><div class="line">987</div><div class="line">988</div><div class="line">989</div><div class="line">990</div><div class="line">991</div><div class="line">992</div><div class="line">993</div><div class="line">994</div><div class="line">995</div><div class="line">996</div><div class="line">997</div><div class="line">998</div><div class="line">999</div><div class="line">1000</div><div class="line">1001</div><div class="line">1002</div><div class="line">1003</div><div class="line">1004</div><div class="line">1005</div><div class="line">1006</div><div class="line">1007</div><div class="line">1008</div><div class="line">1009</div><div class="line">1010</div><div class="line">1011</div><div class="line">1012</div><div class="line">1013</div><div class="line">1014</div><div class="line">1015</div><div class="line">1016</div><div class="line">1017</div><div class="line">1018</div><div class="line">1019</div><div class="line">1020</div><div class="line">1021</div><div class="line">1022</div><div class="line">1023</div><div class="line">1024</div><div class="line">1025</div><div class="line">1026</div><div class="line">1027</div><div class="line">1028</div><div class="line">1029</div><div class="line">1030</div><div class="line">1031</div><div class="line">1032</div><div class="line">1033</div><div class="line">1034</div><div class="line">1035</div><div class="line">1036</div><div class="line">1037</div><div class="line">1038</div><div class="line">1039</div><div class="line">1040</div><div class="line">1041</div><div class="line">1042</div><div class="line">1043</div><div class="line">1044</div><div class="line">1045</div><div class="line">1046</div><div class="line">1047</div><div class="line">1048</div><div class="line">1049</div><div class="line">1050</div><div class="line">1051</div><div class="line">1052</div><div class="line">1053</div><div class="line">1054</div><div class="line">1055</div><div class="line">1056</div><div class="line">1057</div><div class="line">1058</div><div class="line">1059</div><div class="line">1060</div><div class="line">1061</div><div class="line">1062</div><div class="line">1063</div><div class="line">1064</div><div class="line">1065</div><div class="line">1066</div><div class="line">1067</div><div class="line">1068</div><div class="line">1069</div><div class="line">1070</div><div class="line">1071</div><div class="line">1072</div><div class="line">1073</div><div class="line">1074</div><div class="line">1075</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="comment">// traDlg.cpp : implementation file</span></div><div class="line"><span class="comment">//</span></div><div class="line"></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"stdafx.h"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"tra.h"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"traDlg.h"</span></span></div><div class="line"></div><div class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> _DEBUG</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> new DEBUG_NEW</span></div><div class="line"><span class="meta">#<span class="meta-keyword">undef</span> THIS_FILE</span></div><div class="line"><span class="keyword">static</span> <span class="keyword">char</span> THIS_FILE[] = <span class="number">__F</span>ILE__;</div><div class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></div><div class="line"></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;dlgs.h&gt;</span></span></div><div class="line"><span class="comment">/////////////////////////////////////////////////////////////////////////////</span></div><div class="line"><span class="comment">// CAboutDlg dialog used for App About</span></div><div class="line"></div><div class="line"><span class="keyword">class</span> CAboutDlg : <span class="keyword">public</span> CDialog</div><div class="line">&#123;</div><div class="line"><span class="keyword">public</span>:</div><div class="line">	CAboutDlg();</div><div class="line">	</div><div class="line">	<span class="comment">// Dialog Data</span></div><div class="line">	<span class="comment">//&#123;&#123;AFX_DATA(CAboutDlg)</span></div><div class="line">	<span class="keyword">enum</span> &#123; IDD = IDD_ABOUTBOX &#125;;</div><div class="line">	<span class="comment">//&#125;&#125;AFX_DATA</span></div><div class="line">	</div><div class="line">	<span class="comment">// ClassWizard generated virtual function overrides</span></div><div class="line">	<span class="comment">//&#123;&#123;AFX_VIRTUAL(CAboutDlg)</span></div><div class="line"><span class="keyword">protected</span>:</div><div class="line">	<span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">DoDataExchange</span><span class="params">(CDataExchange* pDX)</span></span>;    <span class="comment">// DDX/DDV support</span></div><div class="line">	<span class="comment">//&#125;&#125;AFX_VIRTUAL</span></div><div class="line">	</div><div class="line">	<span class="comment">// Implementation</span></div><div class="line"><span class="keyword">protected</span>:</div><div class="line">	<span class="comment">//&#123;&#123;AFX_MSG(CAboutDlg)</span></div><div class="line">	<span class="comment">//&#125;&#125;AFX_MSG</span></div><div class="line">	DECLARE_MESSAGE_MAP()</div><div class="line">&#125;;</div><div class="line"></div><div class="line">CAboutDlg::CAboutDlg() : CDialog(CAboutDlg::IDD)</div><div class="line">&#123;</div><div class="line">	<span class="comment">//&#123;&#123;AFX_DATA_INIT(CAboutDlg)</span></div><div class="line">	<span class="comment">//&#125;&#125;AFX_DATA_INIT</span></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">void</span> CAboutDlg::DoDataExchange(CDataExchange* pDX)</div><div class="line">&#123;</div><div class="line">	CDialog::DoDataExchange(pDX);</div><div class="line">	<span class="comment">//&#123;&#123;AFX_DATA_MAP(CAboutDlg)</span></div><div class="line">	<span class="comment">//&#125;&#125;AFX_DATA_MAP</span></div><div class="line">&#125;</div><div class="line"></div><div class="line">BEGIN_MESSAGE_MAP(CAboutDlg, CDialog)</div><div class="line"><span class="comment">//&#123;&#123;AFX_MSG_MAP(CAboutDlg)</span></div><div class="line"><span class="comment">// No message handlers</span></div><div class="line"><span class="comment">//&#125;&#125;AFX_MSG_MAP</span></div><div class="line">END_MESSAGE_MAP()</div><div class="line"></div><div class="line"></div><div class="line"><span class="comment">/////////////////////////////////////////////////////////////////////////////</span></div><div class="line"><span class="comment">// CtraDlg dialog</span></div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> PORT		34567</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> FLAG		2</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> SIZEFILE	1024</span></div><div class="line"></div><div class="line"><span class="keyword">const</span> <span class="keyword">int</span> SOCK_TCP	= <span class="number">0</span>;	<span class="comment">//TCP模式</span></div><div class="line"><span class="keyword">const</span> <span class="keyword">int</span> SOCK_UDP  = <span class="number">1</span>;	<span class="comment">//UDP模式</span></div><div class="line"></div><div class="line">CWinThread	*pThreadSendFile;	<span class="comment">//发送文件线程--&gt;_SendFileThread</span></div><div class="line">CWinThread	*pThreadSendMsg;		<span class="comment">//发送消息线程</span></div><div class="line">CWinThread	*pThreadLisen;		<span class="comment">//监听线程--&gt;_ListenTcpThread</span></div><div class="line">CWinThread	*pReceiveThread;		<span class="comment">//接受线程--&gt;_ReceiveThread</span></div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"><span class="comment">//////////////////////////////////////////////////////////////////////////////</span></div><div class="line"></div><div class="line"></div><div class="line">CtraDlg::CtraDlg(CWnd* pParent <span class="comment">/*=NULL*/</span>)</div><div class="line">: CDialog(CtraDlg::IDD, pParent)</div><div class="line">&#123;</div><div class="line">	<span class="comment">//&#123;&#123;AFX_DATA_INIT(CtraDlg)</span></div><div class="line">	m_MsgSend = <span class="number">_</span>T(<span class="string">""</span>);</div><div class="line">	<span class="comment">//&#125;&#125;AFX_DATA_INIT</span></div><div class="line">	<span class="comment">// Note that LoadIcon does not require a subsequent DestroyIcon in Win32</span></div><div class="line">	m_hIcon = AfxGetApp()-&gt;LoadIcon(IDR_MAINFRAME);</div><div class="line">	m_nSockType = <span class="number">0</span>;<span class="comment">//TCP</span></div><div class="line">	m_WorkType = <span class="number">2</span>;<span class="comment">//两者</span></div><div class="line">	m_client = <span class="number">0</span>;</div><div class="line">	m_server = <span class="number">0</span>;</div><div class="line">	FileWork = <span class="literal">false</span>;</div><div class="line">	FileStop = <span class="literal">false</span>;</div><div class="line">	StopServer = <span class="literal">false</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">void</span> CtraDlg::DoDataExchange(CDataExchange* pDX)</div><div class="line">&#123;</div><div class="line">	CDialog::DoDataExchange(pDX);</div><div class="line">	<span class="comment">//&#123;&#123;AFX_DATA_MAP(CtraDlg)</span></div><div class="line">	DDX_Control(pDX, IDC_PROGRESS_SEND_FILE, m_Progress);</div><div class="line">	DDX_Control(pDX, IDC_LIST_BOX_ADDMSG, m_AddMsgLIst);</div><div class="line">	DDX_Control(pDX, IDC_IPADDRESS, m_You_IP);</div><div class="line">	DDX_Text(pDX, IDC_EDIT_SENDMSG, m_MsgSend);</div><div class="line">	<span class="comment">//&#125;&#125;AFX_DATA_MAP</span></div><div class="line">&#125;</div><div class="line"></div><div class="line">BEGIN_MESSAGE_MAP(CtraDlg, CDialog)</div><div class="line"><span class="comment">//&#123;&#123;AFX_MSG_MAP(CtraDlg)</span></div><div class="line">ON_WM_SYSCOMMAND()</div><div class="line">ON_WM_PAINT()</div><div class="line">ON_WM_QUERYDRAGICON()</div><div class="line">ON_BN_CLICKED(IDC_BUTTON_CONNECT, OnButtonConnect)</div><div class="line">ON_BN_CLICKED(IDC_BUTTON_DISCONNECT, OnButtonDisconnect)</div><div class="line">ON_BN_CLICKED(IDC_BUTTON_SEND_MSG, OnButtonSendMsg)</div><div class="line">ON_BN_CLICKED(IDC_BUTTON_SEND_FILE, OnButtonSendFile)</div><div class="line">ON_BN_CLICKED(IDC_BUTTON_CLEAR, OnButtonClear)</div><div class="line">ON_BN_CLICKED(IDC_RADIO_TCP, OnRadioTcp)</div><div class="line">ON_BN_CLICKED(IDC_RADIO_UDP, OnRadioUdp)</div><div class="line">ON_BN_CLICKED(IDC_RADIO_SERVER, OnRadioServer)</div><div class="line">ON_BN_CLICKED(IDC_RADIO_CLIENT, OnRadioClient)</div><div class="line">ON_BN_CLICKED(IDC_RADIO_BOTH, OnRadioBoth)</div><div class="line">ON_BN_CLICKED(IDC_BUTTON_STOP_FILE, OnButtonStopFile)</div><div class="line">ON_MESSAGE(WM_KSEND,OnKSend)</div><div class="line"><span class="comment">//ON_BN_CLICKED(IDC_BUTTON_CAPUTER, OnButtonCaputer)</span></div><div class="line"><span class="comment">//&#125;&#125;AFX_MSG_MAP</span></div><div class="line">END_MESSAGE_MAP()</div><div class="line"></div><div class="line"><span class="comment">/////////////////////////////////////////////////////////////////////////////</span></div><div class="line"><span class="comment">// CtraDlg message handlers</span></div><div class="line"></div><div class="line">BOOL CtraDlg::OnInitDialog()</div><div class="line">&#123;</div><div class="line">	CDialog::OnInitDialog();</div><div class="line">	</div><div class="line">	<span class="comment">// Add "About..." menu item to system menu.</span></div><div class="line">	</div><div class="line">	<span class="comment">// IDM_ABOUTBOX must be in the system command range.</span></div><div class="line">	ASSERT((IDM_ABOUTBOX &amp; <span class="number">0xFFF0</span>) == IDM_ABOUTBOX);</div><div class="line">	ASSERT(IDM_ABOUTBOX &lt; <span class="number">0xF000</span>);</div><div class="line">	</div><div class="line">	CMenu* pSysMenu = GetSystemMenu(FALSE);</div><div class="line">	<span class="keyword">if</span> (pSysMenu != <span class="literal">NULL</span>)</div><div class="line">	&#123;</div><div class="line">		CString strAboutMenu;</div><div class="line">		strAboutMenu.LoadString(IDS_ABOUTBOX);</div><div class="line">		<span class="keyword">if</span> (!strAboutMenu.IsEmpty())</div><div class="line">		&#123;</div><div class="line">			pSysMenu-&gt;AppendMenu(MF_SEPARATOR);</div><div class="line">			pSysMenu-&gt;AppendMenu(MF_STRING, IDM_ABOUTBOX, strAboutMenu);</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	</div><div class="line">	<span class="comment">// Set the icon for this dialog.  The framework does this automatically</span></div><div class="line">	<span class="comment">//  when the application's main window is not a dialog</span></div><div class="line">	SetIcon(m_hIcon, TRUE);			<span class="comment">// Set big icon</span></div><div class="line">	SetIcon(m_hIcon, FALSE);		<span class="comment">// Set small icon</span></div><div class="line">	</div><div class="line">	<span class="comment">// <span class="doctag">TODO:</span> Add extra initialization here</span></div><div class="line">	<span class="comment">/////////////////////////////////////////////////////////</span></div><div class="line">	CString strLocalName;</div><div class="line">	GetLocalHostName(strLocalName);</div><div class="line">	CString strLocalIP;</div><div class="line">	GetIpAddress(strLocalName,strLocalIP);</div><div class="line">	m_You_IP.SetWindowText(<span class="string">"127.0.0.1"</span>);	<span class="comment">//设置默认IP</span></div><div class="line">	<span class="comment">/////////////////////////////////////////////////////////</span></div><div class="line">	((CButton*)GetDlgItem(IDC_RADIO_BOTH))-&gt;SetCheck(BST_CHECKED);<span class="comment">//默认为服务器、客户端一体</span></div><div class="line">	SetWindowText(<span class="string">"博靖牌聊天+文件传输小工具"</span>);</div><div class="line"></div><div class="line">	GetDlgItem(IDC_BUTTON_CONNECT)-&gt;SetWindowText(<span class="string">"启动"</span>);</div><div class="line">	GetDlgItem(IDC_BUTTON_DISCONNECT)-&gt;SetWindowText(<span class="string">"关闭"</span>);</div><div class="line">	</div><div class="line">	<span class="comment">//GetDlgItem(IDC_BUTTON_CAPUTER)-&gt;EnableWindow(false);//默认为不可用</span></div><div class="line">	((CButton*)GetDlgItem(IDC_RADIO_TCP))-&gt;SetCheck(BST_CHECKED);<span class="comment">//默认为TCP</span></div><div class="line">	GetDlgItem(IDC_BUTTON_SEND_MSG)-&gt;EnableWindow(<span class="literal">false</span>);<span class="comment">//发送消息不可用</span></div><div class="line">	GetDlgItem(IDC_BUTTON_SEND_FILE)-&gt;EnableWindow(<span class="literal">false</span>);<span class="comment">//发送文件不可用</span></div><div class="line">	GetDlgItem(IDC_BUTTON_CLEAR)-&gt;EnableWindow(<span class="literal">false</span>);<span class="comment">//清除不可用</span></div><div class="line">	GetDlgItem(IDC_BUTTON_DISCONNECT)-&gt;EnableWindow(<span class="literal">false</span>);<span class="comment">//断开连接不可用</span></div><div class="line">	GetDlgItem(IDC_PROGRESS_SEND_FILE)-&gt;ShowWindow(SW_HIDE);</div><div class="line">	<span class="keyword">return</span> TRUE;  <span class="comment">// return TRUE  unless you set the focus to a control</span></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">void</span> CtraDlg::OnSysCommand(UINT nID, LPARAM lParam)</div><div class="line">&#123;</div><div class="line">	<span class="keyword">if</span> ((nID &amp; <span class="number">0xFFF0</span>) == IDM_ABOUTBOX)</div><div class="line">	&#123;</div><div class="line">		CAboutDlg dlgAbout;</div><div class="line">		dlgAbout.DoModal();</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">else</span></div><div class="line">	&#123;</div><div class="line">		CDialog::OnSysCommand(nID, lParam);</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">// If you add a minimize button to your dialog, you will need the code below</span></div><div class="line"><span class="comment">//  to draw the icon.  For MFC applications using the document/view model,</span></div><div class="line"><span class="comment">//  this is automatically done for you by the framework.</span></div><div class="line"></div><div class="line"><span class="keyword">void</span> CtraDlg::OnPaint() </div><div class="line">&#123;</div><div class="line">	<span class="keyword">if</span> (IsIconic())</div><div class="line">	&#123;</div><div class="line">		<span class="function">CPaintDC <span class="title">dc</span><span class="params">(<span class="keyword">this</span>)</span></span>; <span class="comment">// device context for painting</span></div><div class="line">		</div><div class="line">		SendMessage(WM_ICONERASEBKGND, (WPARAM) dc.GetSafeHdc(), <span class="number">0</span>);</div><div class="line">		</div><div class="line">		<span class="comment">// Center icon in client rectangle</span></div><div class="line">		<span class="keyword">int</span> cxIcon = GetSystemMetrics(SM_CXICON);</div><div class="line">		<span class="keyword">int</span> cyIcon = GetSystemMetrics(SM_CYICON);</div><div class="line">		CRect rect;</div><div class="line">		GetClientRect(&amp;rect);</div><div class="line">		<span class="keyword">int</span> x = (rect.Width() - cxIcon + <span class="number">1</span>) / <span class="number">2</span>;</div><div class="line">		<span class="keyword">int</span> y = (rect.Height() - cyIcon + <span class="number">1</span>) / <span class="number">2</span>;</div><div class="line">		</div><div class="line">		<span class="comment">// Draw the icon</span></div><div class="line">		dc.DrawIcon(x, y, m_hIcon);</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">else</span></div><div class="line">	&#123;</div><div class="line">		CDialog::OnPaint();</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">// The system calls this to obtain the cursor to display while the user drags</span></div><div class="line"><span class="comment">//  the minimized window.</span></div><div class="line">HCURSOR CtraDlg::OnQueryDragIcon()</div><div class="line">&#123;</div><div class="line">	<span class="keyword">return</span> (HCURSOR) m_hIcon;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">/**************************************线程************************************************/</span></div><div class="line"></div><div class="line"><span class="comment">/******************************服务器线程开始***********************************************/</span></div><div class="line"><span class="comment">//TCP监听线程</span></div><div class="line">UINT <span class="number">_L</span>istenTcpThread(LPVOID lparam)</div><div class="line">&#123;</div><div class="line">	CtraDlg *pDlg=(CtraDlg *)lparam;</div><div class="line">	<span class="keyword">if</span> (pDlg-&gt;StopServer==<span class="literal">true</span>)	</div><div class="line">	&#123;</div><div class="line">		<span class="keyword">return</span> <span class="number">-1</span>;</div><div class="line">	&#125;</div><div class="line">	CSocket sockSrvr;</div><div class="line">	pDlg-&gt;m_Potr = PORT+pDlg-&gt;m_server;<span class="comment">//保存当前使用端口，用于关闭</span></div><div class="line">	<span class="keyword">int</span> createSucceed=sockSrvr.Create(pDlg-&gt;m_Potr);</div><div class="line">	<span class="keyword">if</span> (createSucceed == <span class="number">0</span>)</div><div class="line">	&#123;</div><div class="line">		AfxMessageBox(<span class="string">"ListenTcpThread Create错误!"</span>+pDlg-&gt;GetError(GetLastError()));</div><div class="line">		<span class="keyword">return</span> <span class="number">-1</span>;</div><div class="line">	&#125;</div><div class="line">	</div><div class="line">	<span class="keyword">int</span> listenSucceed=sockSrvr.Listen();	<span class="comment">//开始监听</span></div><div class="line">	<span class="keyword">if</span>(listenSucceed==<span class="number">0</span>)</div><div class="line">	&#123;</div><div class="line">		AfxMessageBox(<span class="string">"ListenTcpThread Listen错误!"</span>+pDlg-&gt;GetError(GetLastError()));</div><div class="line">		<span class="keyword">return</span> <span class="number">-1</span>;</div><div class="line">	&#125;</div><div class="line">	</div><div class="line">	CSocket recSo;</div><div class="line">	SOCKADDR_IN client;</div><div class="line">	<span class="keyword">int</span> iAddrSize=<span class="keyword">sizeof</span>(client);</div><div class="line">	</div><div class="line">	<span class="keyword">int</span> acceptSucceed=sockSrvr.Accept(recSo,(SOCKADDR *)&amp;client,&amp;iAddrSize);	<span class="comment">//接受连接并取得对方IP</span></div><div class="line">	<span class="keyword">if</span> (acceptSucceed==<span class="number">0</span>)</div><div class="line">	&#123;</div><div class="line">		AfxMessageBox(<span class="string">"ListenTcpThread Accept错误!"</span>+pDlg-&gt;GetError(GetLastError()));</div><div class="line">		<span class="keyword">return</span> <span class="number">-1</span>;</div><div class="line">	&#125;</div><div class="line">	sockSrvr.Close();</div><div class="line">	<span class="keyword">char</span> flag[FLAG] = &#123;<span class="number">0</span>&#125;;		</div><div class="line">	<span class="keyword">if</span> (recSo.Receive(flag,FLAG) != <span class="number">2</span>) </div><div class="line">	&#123;</div><div class="line">		<span class="keyword">return</span> <span class="number">-1</span>;	</div><div class="line">	&#125;</div><div class="line">	pDlg-&gt;m_type=flag[<span class="number">0</span>];</div><div class="line">	<span class="keyword">if</span> (pDlg-&gt;m_type==<span class="string">'D'</span>) </div><div class="line">	&#123;</div><div class="line">		<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">	&#125;</div><div class="line">	pThreadLisen=::AfxBeginThread(<span class="number">_L</span>istenTcpThread,pDlg);</div><div class="line">	pDlg-&gt;ReceiveFileMsg(recSo,client);</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div><div class="line">UINT <span class="number">_U</span>DPThread(LPVOID lparam)	<span class="comment">//UDP接受信息线程开始</span></div><div class="line">&#123;</div><div class="line">	</div><div class="line">	CtraDlg *pDlg=(CtraDlg *)lparam;</div><div class="line">	<span class="keyword">if</span> (pDlg-&gt;StopServer == <span class="literal">true</span>)	</div><div class="line">	&#123;</div><div class="line">		<span class="keyword">return</span> <span class="number">-1</span>;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	CSocket sockSrvrUdp;</div><div class="line">	sockSrvrUdp.Create(PORT+pDlg-&gt;m_client,SOCK_DGRAM);</div><div class="line">	<span class="keyword">char</span> buff[<span class="number">100</span>] = &#123;<span class="number">0</span>&#125;;</div><div class="line">	<span class="keyword">int</span> ret=<span class="number">0</span>;</div><div class="line">	CString ipStr;</div><div class="line">	CString msg;</div><div class="line">	UINT port;</div><div class="line">	<span class="keyword">for</span>(;;)</div><div class="line">	&#123;</div><div class="line">		</div><div class="line">		ret=sockSrvrUdp.ReceiveFrom(buff,<span class="number">100</span>,ipStr,port);<span class="comment">//IP和port均为返回值</span></div><div class="line">		</div><div class="line">		<span class="keyword">if</span> (buff[<span class="number">0</span>]==<span class="string">'D'</span>) </div><div class="line">		&#123;</div><div class="line">			<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">if</span> (ret==SOCKET_ERROR) </div><div class="line">		&#123;</div><div class="line">			<span class="keyword">break</span>;</div><div class="line">		&#125;</div><div class="line">		msg.Format(buff);</div><div class="line">		pDlg-&gt;AddMsgList(ipStr,msg);</div><div class="line">	&#125;</div><div class="line">	sockSrvrUdp.Close();</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div><div class="line"><span class="comment">//服务器线程结束</span></div><div class="line"><span class="comment">/*********************************************客户端线程开始*****************************************************/</span></div><div class="line"><span class="comment">//发送文件线程</span></div><div class="line">UINT <span class="number">_</span>SendFileThread(LPVOID lparam)</div><div class="line">&#123;</div><div class="line">	</div><div class="line">	CtraDlg *pDlg = (CtraDlg *)lparam;</div><div class="line">	<span class="keyword">if</span> (pDlg-&gt;StopServer == <span class="literal">true</span>)	</div><div class="line">	&#123;</div><div class="line">		<span class="keyword">return</span> <span class="number">-1</span>;</div><div class="line">	&#125;</div><div class="line">	CSocket sockClient;</div><div class="line">	sockClient.Create();</div><div class="line">	CString ip;</div><div class="line">	pDlg-&gt;m_You_IP.GetWindowText(ip);</div><div class="line">	sockClient.Connect(ip, PORT+pDlg-&gt;m_client); </div><div class="line">	<span class="comment">//首先发送标记F为文件,2</span></div><div class="line">	<span class="keyword">int</span> end = <span class="number">0</span>;</div><div class="line">	end = sockClient.Send(<span class="string">"F"</span>, FLAG);</div><div class="line">	</div><div class="line">	<span class="comment">//发送标志是否成功</span></div><div class="line">	<span class="keyword">if</span> (end == SOCKET_ERROR)										</div><div class="line">	&#123;</div><div class="line">		AfxMessageBox(<span class="string">"_SendFileThread Send错误!"</span>+pDlg-&gt;GetError(GetLastError()));</div><div class="line">		<span class="keyword">return</span> <span class="number">-1</span>;</div><div class="line">	&#125;</div><div class="line">	</div><div class="line">	<span class="keyword">else</span> <span class="keyword">if</span> (end != <span class="number">2</span>) </div><div class="line">	&#123;</div><div class="line">		AfxMessageBox(<span class="string">"文件头错误！"</span>);</div><div class="line">		<span class="keyword">return</span> <span class="number">-1</span>;</div><div class="line">	&#125;</div><div class="line">	<span class="comment">///////////////////////////////////////////////////////////////////</span></div><div class="line">	CFile myFile;</div><div class="line">	FILEINFO myFileInfo;</div><div class="line">	<span class="keyword">if</span> (!myFile.Open(pDlg-&gt;m_fileName, CFile::modeRead | CFile::typeBinary))</div><div class="line">	&#123;</div><div class="line">		<span class="keyword">return</span> <span class="number">-1</span>;</div><div class="line">	&#125;</div><div class="line">	myFileInfo.fileLength=myFile.GetLength();		<span class="comment">//得到文件大小</span></div><div class="line">	<span class="built_in">strcpy</span>(myFileInfo.fileName,myFile.GetFileName());<span class="comment">//得到文件名称</span></div><div class="line">	</div><div class="line">	sockClient.Send(&amp;myFileInfo,<span class="keyword">sizeof</span>(myFileInfo));	<span class="comment">//发送文件信息</span></div><div class="line">	</div><div class="line">	pDlg-&gt;m_Progress.SetRange32(<span class="number">0</span>, myFileInfo.fileLength);</div><div class="line">	</div><div class="line">	myFile.Seek(<span class="number">0</span>, CFile::begin);</div><div class="line">	<span class="keyword">char</span> m_buf[SIZEFILE] = &#123;<span class="number">0</span>&#125;;</div><div class="line">	CString strError;</div><div class="line">	<span class="keyword">int</span> num = <span class="number">0</span>;</div><div class="line">	end = <span class="number">0</span>;</div><div class="line">	<span class="keyword">int</span> temp = <span class="number">0</span>;</div><div class="line">	pDlg-&gt;GetDlgItem(IDC_BUTTON_STOP_FILE)-&gt;EnableWindow(<span class="literal">true</span>);</div><div class="line">	</div><div class="line">	<span class="keyword">for</span> (;;)</div><div class="line">	&#123;</div><div class="line">		<span class="keyword">if</span> (pDlg-&gt;FileWork == <span class="literal">false</span>)</div><div class="line">		&#123;</div><div class="line">			pDlg-&gt;FileWork = <span class="literal">true</span>;</div><div class="line">			pDlg-&gt;GetDlgItem(IDCANCEL)-&gt;EnableWindow(<span class="literal">false</span>);</div><div class="line">			pDlg-&gt;GetDlgItem(IDC_BUTTON_DISCONNECT)-&gt;EnableWindow(<span class="literal">false</span>);</div><div class="line">		&#125;</div><div class="line">		num = myFile.Read(m_buf, SIZEFILE);</div><div class="line">		<span class="keyword">if</span> (num == <span class="number">0</span>) </div><div class="line">		&#123;</div><div class="line">			<span class="keyword">break</span>;</div><div class="line">		&#125;</div><div class="line">		end = sockClient.Send(m_buf, num); </div><div class="line">		temp += end;</div><div class="line">		pDlg-&gt;m_Progress.SetPos(temp);</div><div class="line">		<span class="keyword">if</span> (pDlg-&gt;FileStop == <span class="literal">true</span>) </div><div class="line">		&#123;</div><div class="line">			pDlg-&gt;FileStop = <span class="literal">false</span>;</div><div class="line">			pDlg-&gt;FileWork = <span class="literal">false</span>;</div><div class="line">			<span class="keyword">break</span>;</div><div class="line">		&#125;</div><div class="line">		</div><div class="line">		<span class="keyword">if</span> (end == SOCKET_ERROR)</div><div class="line">		&#123;</div><div class="line">			AfxMessageBox(<span class="string">"_SendFileThread Send错误!"</span>+pDlg-&gt;GetError(GetLastError()));</div><div class="line">			<span class="keyword">break</span>;</div><div class="line">			</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	pDlg-&gt;m_Progress.SetPos(<span class="number">0</span>);</div><div class="line">	CString strLocalName;</div><div class="line">	pDlg-&gt;GetLocalHostName(strLocalName);</div><div class="line">	CString strLocalIP;</div><div class="line">	pDlg-&gt;GetIpAddress(strLocalName,strLocalIP);</div><div class="line">	<span class="keyword">if</span>(temp == myFileInfo.fileLength)</div><div class="line">	&#123;</div><div class="line">		pDlg-&gt;AddMsgList(strLocalName, <span class="string">"文件发送成功！"</span>);</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">else</span></div><div class="line">	&#123;</div><div class="line">		pDlg-&gt;AddMsgList(strLocalName, <span class="string">"文件发送失败！"</span>);</div><div class="line">	&#125;</div><div class="line">	myFile.Close();</div><div class="line">	sockClient.Close();</div><div class="line">	pDlg-&gt;FileWork = <span class="literal">false</span>;</div><div class="line">	pDlg-&gt;GetDlgItem(IDC_PROGRESS_SEND_FILE)-&gt;ShowWindow(SW_HIDE);</div><div class="line">	pDlg-&gt;GetDlgItem(IDC_BUTTON_STOP_FILE)-&gt;EnableWindow(<span class="literal">false</span>);</div><div class="line"></div><div class="line">	pDlg-&gt;GetDlgItem(IDCANCEL)-&gt;EnableWindow(<span class="literal">true</span>);</div><div class="line">	pDlg-&gt;GetDlgItem(IDC_BUTTON_DISCONNECT)-&gt;EnableWindow(<span class="literal">true</span>);</div><div class="line">	</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line">UINT <span class="number">_</span>SendMsgThread(LPVOID lparam)	<span class="comment">//TCP发送信息线程</span></div><div class="line">&#123;</div><div class="line">	</div><div class="line">	CtraDlg *pDlg=(CtraDlg *)lparam;</div><div class="line">	<span class="keyword">if</span> (pDlg-&gt;StopServer == <span class="literal">true</span>)	</div><div class="line">	&#123;</div><div class="line">		<span class="keyword">return</span> <span class="number">-1</span>;</div><div class="line">	&#125;</div><div class="line">	CSocket sockClient;</div><div class="line">	sockClient.Create();</div><div class="line">	CString ip,strError;</div><div class="line">	pDlg-&gt;m_You_IP.GetWindowText(ip);</div><div class="line">	<span class="keyword">int</span> conn = sockClient.Connect(ip, PORT+pDlg-&gt;m_client);</div><div class="line">	<span class="keyword">if</span> (conn == <span class="number">0</span>)</div><div class="line">	&#123;</div><div class="line">		AfxMessageBox(<span class="string">"_SendMsgThread Connect错误!"</span>+pDlg-&gt;GetError(GetLastError()));</div><div class="line">		sockClient.ShutDown(<span class="number">2</span>);</div><div class="line">		sockClient.Close();</div><div class="line">		AfxEndThread(<span class="number">1L</span>);</div><div class="line">		<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">		</div><div class="line">	&#125;</div><div class="line">	<span class="comment">//首先发送标记M为信息,2</span></div><div class="line">	<span class="keyword">int</span> end = <span class="number">0</span>;</div><div class="line">	end = sockClient.Send(<span class="string">"M"</span>,FLAG); </div><div class="line">	<span class="keyword">if</span>(end == SOCKET_ERROR)</div><div class="line">	&#123;</div><div class="line">		AfxMessageBox(<span class="string">"_SendMsgThread Send错误!"</span>+pDlg-&gt;GetError(GetLastError()));</div><div class="line">		<span class="keyword">return</span> <span class="number">-1</span>;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">else</span> <span class="keyword">if</span>(end != <span class="number">2</span>)</div><div class="line">	&#123;</div><div class="line">		AfxMessageBox(<span class="string">"消息头错误！"</span>);</div><div class="line">		<span class="keyword">return</span> <span class="number">-1</span>;</div><div class="line">	&#125;</div><div class="line">	CString strMsg = pDlg-&gt;m_MsgSend;</div><div class="line">	end = sockClient.Send(strMsg,strMsg.GetLength()); </div><div class="line">	<span class="keyword">if</span> (end == SOCKET_ERROR)</div><div class="line">	&#123;</div><div class="line">		AfxMessageBox(<span class="string">"_SendMsgThread Send错误!"</span>+pDlg-&gt;GetError(GetLastError()));</div><div class="line">		<span class="keyword">return</span> <span class="number">-1</span>;</div><div class="line">	&#125;</div><div class="line">	CString strLocalName;</div><div class="line">	pDlg-&gt;GetLocalHostName(strLocalName);</div><div class="line">	CString strLocalIP;</div><div class="line">	pDlg-&gt;GetIpAddress(strLocalName,strLocalIP);</div><div class="line">	pDlg-&gt;AddMsgList(strLocalName,strMsg);</div><div class="line">	<span class="keyword">int</span> i=<span class="number">0</span>;</div><div class="line">	sockClient.Close();</div><div class="line"></div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">///////////////////////////////////////////////////////////////////</span></div><div class="line">UINT <span class="number">_</span>SendMsgUdpThread(LPVOID lparam)	<span class="comment">//UDP发送信息</span></div><div class="line">&#123;</div><div class="line">	</div><div class="line">	CtraDlg *pDlg = (CtraDlg *)lparam;</div><div class="line">	<span class="keyword">if</span> (pDlg-&gt;StopServer == <span class="literal">true</span>)	</div><div class="line">	&#123;</div><div class="line">		<span class="keyword">return</span> <span class="number">-1</span>;</div><div class="line">	&#125;</div><div class="line">	CSocket sockClientUdp;</div><div class="line">	pDlg-&gt;m_type = PORT+pDlg-&gt;m_client+<span class="number">10</span>;</div><div class="line">	sockClientUdp.Create(pDlg-&gt;m_type, SOCK_DGRAM);</div><div class="line">	CString strMsg = pDlg-&gt;m_MsgSend;</div><div class="line">	<span class="keyword">int</span> ret = <span class="number">0</span>;</div><div class="line">	CString ipStr;</div><div class="line">	pDlg-&gt;m_You_IP.GetWindowText(ipStr);</div><div class="line">	UINT port = PORT+pDlg-&gt;m_server;</div><div class="line">	ret=sockClientUdp.SendTo(strMsg, strMsg.GetLength(), port, ipStr);</div><div class="line">	<span class="keyword">if</span> (ret == SOCKET_ERROR) </div><div class="line">	&#123;</div><div class="line">		DWORD error = GetLastError();</div><div class="line">		</div><div class="line">	&#125;</div><div class="line">	CString strLocalName;</div><div class="line">	pDlg-&gt;GetLocalHostName(strLocalName);</div><div class="line">	CString strLocalIP;</div><div class="line">	pDlg-&gt;GetIpAddress(strLocalName, strLocalIP);</div><div class="line">	pDlg-&gt;AddMsgList(strLocalName, strMsg);</div><div class="line">	sockClientUdp.Close();</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">	</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">/************************************客户端线程结束**********************************/</span></div><div class="line"></div><div class="line"><span class="comment">/*************************************函数****************************************/</span></div><div class="line"></div><div class="line"><span class="keyword">int</span> CtraDlg::ReceiveFileMsg(CSocket &amp;recSo,SOCKADDR_IN &amp;client)<span class="comment">//接受函数</span></div><div class="line">&#123;</div><div class="line">		<span class="keyword">if</span> (m_type == <span class="string">'F'</span>)			<span class="comment">//文件</span></div><div class="line">	&#123;</div><div class="line">		SaveYouFile(recSo, client);</div><div class="line">	&#125;</div><div class="line">	</div><div class="line">	<span class="keyword">else</span> <span class="keyword">if</span> (m_type == <span class="string">'M'</span>)	<span class="comment">//信息</span></div><div class="line">	&#123;</div><div class="line">		<span class="keyword">char</span> buff[<span class="number">100</span>] = &#123;<span class="number">0</span>&#125;;</div><div class="line">		CString msg;</div><div class="line">		<span class="keyword">int</span> ret = <span class="number">0</span>;</div><div class="line">		<span class="keyword">for</span> (;;)</div><div class="line">		&#123;</div><div class="line">			ret = recSo.Receive(buff,<span class="number">100</span>);</div><div class="line">			<span class="keyword">if</span> (ret == <span class="number">0</span>)</div><div class="line">			&#123;</div><div class="line">				<span class="keyword">break</span>;</div><div class="line">			&#125;</div><div class="line">			msg += buff;</div><div class="line">		&#125;</div><div class="line">		CString strOut,strIn;</div><div class="line">		m_You_IP.GetWindowText(strIn);</div><div class="line">		GetNamebyAddress(strIn,strOut);</div><div class="line">		CString youName;</div><div class="line">	<span class="comment">//	youName.Format(inet_ntoa(client.sin_addr));</span></div><div class="line">	<span class="comment">//	CString str = youName+"&lt;-"+strOut;</span></div><div class="line">		CString str = strOut;</div><div class="line">		AddMsgList(str, msg);</div><div class="line">	&#125;</div><div class="line">	recSo.Close();	</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">int</span> CtraDlg::SaveYouFile(CSocket &amp;recSo, SOCKADDR_IN &amp;client)<span class="comment">//接受文件</span></div><div class="line">&#123;</div><div class="line">	CString fname;</div><div class="line">	<span class="function">CFileDialog <span class="title">dlg</span><span class="params">(<span class="literal">false</span>)</span></span>;	<span class="comment">//另存文件</span></div><div class="line">	FILEINFO myFileInfo;</div><div class="line">	recSo.Receive(&amp;myFileInfo, <span class="keyword">sizeof</span>(FILEINFO));</div><div class="line">	<span class="keyword">int</span> fileLength=myFileInfo.fileLength;</div><div class="line">	CString strfileIp,strfileName,strfileLength;</div><div class="line">	strfileIp.Format(inet_ntoa(client.sin_addr));</div><div class="line">	strfileName.Format(myFileInfo.fileName);</div><div class="line">	strfileLength.Format(<span class="string">"%f"</span>, myFileInfo.fileLength/<span class="number">1024.0</span>);</div><div class="line">	CString title = <span class="string">"文件"</span>+strfileName + <span class="string">" 大小"</span> + strfileLength + <span class="string">"KB "</span> + <span class="string">"来自"</span> + strfileIp + <span class="string">" 是否接受？"</span>;</div><div class="line">	dlg.m_ofn.lpstrTitle = title;<span class="comment">//标题条</span></div><div class="line">	<span class="keyword">char</span> fileme[<span class="number">500</span>] = &#123;<span class="number">0</span>&#125;;<span class="comment">//必须足够大小</span></div><div class="line">	<span class="built_in">strcpy</span>(fileme, strfileName);</div><div class="line">	dlg.m_ofn.lpstrFile = fileme;	<span class="comment">//文件名称</span></div><div class="line">	<span class="keyword">if</span> (dlg.DoModal() == IDOK)</div><div class="line">	&#123;</div><div class="line">		fname = dlg.GetPathName();	<span class="comment">//得到文件名名称、路径</span></div><div class="line">		GetDlgItem(IDC_PROGRESS_SEND_FILE)-&gt;ShowWindow(SW_SHOW);</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">else</span></div><div class="line">	&#123;</div><div class="line">		GetDlgItem(IDC_PROGRESS_SEND_FILE)-&gt;ShowWindow(SW_HIDE);</div><div class="line">		GetDlgItem(IDC_BUTTON_STOP_FILE)-&gt;EnableWindow(<span class="literal">false</span>);</div><div class="line">		</div><div class="line">		GetDlgItem(IDC_BUTTON_DISCONNECT)-&gt;EnableWindow(<span class="literal">true</span>);</div><div class="line">		GetDlgItem(IDCANCEL)-&gt;EnableWindow(<span class="literal">true</span>);</div><div class="line">		</div><div class="line">		recSo.Close();	</div><div class="line">		<span class="keyword">return</span> <span class="number">0</span>;	</div><div class="line">		</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">char</span> buf[SIZEFILE] = &#123;<span class="number">0</span>&#125;;</div><div class="line">	<span class="function">CFile <span class="title">f</span><span class="params">(fname, CFile::modeCreate|CFile::modeWrite)</span></span>;	<span class="comment">//存文件</span></div><div class="line">	</div><div class="line">	m_Progress.SetRange32(<span class="number">0</span>,fileLength);</div><div class="line">	</div><div class="line">	<span class="keyword">int</span> n = <span class="number">0</span>;	<span class="comment">//接受的字节数 0表示结束</span></div><div class="line">	<span class="keyword">int</span> temp = <span class="number">0</span>;</div><div class="line">	GetDlgItem(IDC_BUTTON_STOP_FILE)-&gt;EnableWindow(<span class="literal">true</span>);</div><div class="line">	</div><div class="line">	GetDlgItem(IDCANCEL)-&gt;EnableWindow(<span class="literal">false</span>);</div><div class="line">	GetDlgItem(IDC_BUTTON_DISCONNECT)-&gt;EnableWindow(<span class="literal">false</span>);</div><div class="line">	</div><div class="line">	</div><div class="line">	<span class="keyword">for</span> (;;)</div><div class="line">	&#123;</div><div class="line">		n = recSo.Receive(buf,SIZEFILE);	<span class="comment">//接受</span></div><div class="line">		<span class="keyword">if</span> (n == <span class="number">0</span>)		<span class="comment">//0表示结束</span></div><div class="line">		&#123;</div><div class="line">			<span class="keyword">break</span>;<span class="comment">//接受完毕</span></div><div class="line">		&#125;	</div><div class="line">		f.Write(buf,n);</div><div class="line">		temp += n;</div><div class="line">		m_Progress.SetPos(temp);</div><div class="line">		<span class="keyword">if</span> (FileWork == <span class="literal">false</span>) </div><div class="line">		&#123;</div><div class="line">			FileWork = <span class="literal">true</span>;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">if</span> (FileStop == <span class="literal">true</span>) </div><div class="line">		&#123;</div><div class="line">			FileStop = <span class="literal">false</span>;</div><div class="line">			FileWork = <span class="literal">false</span>;</div><div class="line">			<span class="keyword">break</span>;</div><div class="line">		&#125;</div><div class="line">		</div><div class="line">	&#125;</div><div class="line">	f.Close();</div><div class="line">	m_Progress.SetPos(<span class="number">0</span>);</div><div class="line">	<span class="keyword">if</span> (temp == fileLength)</div><div class="line">	&#123;</div><div class="line">		AddMsgList(inet_ntoa(client.sin_addr),<span class="string">"文件接收成功！"</span>);</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">else</span></div><div class="line">	&#123;</div><div class="line">		AddMsgList(inet_ntoa(client.sin_addr),<span class="string">"文件接收失败！"</span>);</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	FileWork = <span class="literal">false</span>;</div><div class="line">	GetDlgItem(IDC_PROGRESS_SEND_FILE)-&gt;ShowWindow(SW_HIDE);</div><div class="line">	GetDlgItem(IDC_BUTTON_STOP_FILE)-&gt;EnableWindow(<span class="literal">false</span>);</div><div class="line">	</div><div class="line">	GetDlgItem(IDCANCEL)-&gt;EnableWindow(<span class="literal">true</span>);</div><div class="line">	GetDlgItem(IDC_BUTTON_DISCONNECT)-&gt;EnableWindow(<span class="literal">true</span>);</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">/*********************************************按钮*****************************************/</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">void</span> CtraDlg::OnButtonConnect() <span class="comment">//开始连接</span></div><div class="line">&#123;</div><div class="line">	<span class="comment">// <span class="doctag">TODO:</span> Add your control notification handler code here</span></div><div class="line">	CString str;</div><div class="line">	m_You_IP.GetWindowText(str);</div><div class="line">	CString strOut,strIn;</div><div class="line">	m_You_IP.GetWindowText(strIn);</div><div class="line">	<span class="keyword">if</span>(GetNamebyAddress(strIn,strOut) == <span class="number">-1</span>)</div><div class="line">	&#123;</div><div class="line">		GetDlgItem(IDC_BUTTON_CONNECT)-&gt;EnableWindow(<span class="literal">true</span>);<span class="comment">//连接不可用</span></div><div class="line">		<span class="keyword">return</span>;</div><div class="line">	&#125;</div><div class="line">	<span class="comment">//m_MsgSend = "你好" + strOut + "!";</span></div><div class="line">	m_MsgSend =<span class="string">" "</span>;</div><div class="line">	UpdateData(<span class="literal">false</span>);</div><div class="line"></div><div class="line">	<span class="keyword">if</span> (m_nSockType == SOCK_TCP)</div><div class="line">	&#123;</div><div class="line">		</div><div class="line">		pThreadLisen=::AfxBeginThread(<span class="number">_L</span>istenTcpThread,<span class="keyword">this</span>);	<span class="comment">//开始TCP线程</span></div><div class="line">		GetDlgItem(IDC_BUTTON_SEND_MSG)-&gt;EnableWindow(<span class="literal">true</span>);<span class="comment">//发送消息可用</span></div><div class="line">		GetDlgItem(IDC_BUTTON_SEND_FILE)-&gt;EnableWindow(<span class="literal">true</span>);<span class="comment">//文件可用</span></div><div class="line">		</div><div class="line">		<span class="comment">//显示上线</span></div><div class="line">		CString strLocalName;</div><div class="line">		GetLocalHostName(strLocalName);</div><div class="line">		AddMsgList(strLocalName, <span class="string">"上线！"</span>);</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">else</span></div><div class="line">	&#123;</div><div class="line">		pThreadLisen=::AfxBeginThread(<span class="number">_U</span>DPThread,<span class="keyword">this</span>);	<span class="comment">//开始UDP线程</span></div><div class="line">		GetDlgItem(IDC_BUTTON_SEND_MSG)-&gt;EnableWindow(<span class="literal">true</span>);<span class="comment">//发送可用</span></div><div class="line">		GetDlgItem(IDC_BUTTON_SEND_FILE)-&gt;EnableWindow(<span class="literal">false</span>);<span class="comment">//文件不可用</span></div><div class="line"></div><div class="line">		<span class="comment">//显示上线</span></div><div class="line">		CString strLocalName;</div><div class="line">		GetLocalHostName(strLocalName);</div><div class="line">		AddMsgList(strLocalName, <span class="string">"上线！"</span>);</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	GetDlgItem(IDC_RADIO_TCP)-&gt;EnableWindow(<span class="literal">false</span>);<span class="comment">//单选不可用</span></div><div class="line">	GetDlgItem(IDC_RADIO_UDP)-&gt;EnableWindow(<span class="literal">false</span>);<span class="comment">//单选不可用</span></div><div class="line">	GetDlgItem(IDC_BUTTON_DISCONNECT)-&gt;EnableWindow(<span class="literal">true</span>);<span class="comment">//断开可用</span></div><div class="line">	GetDlgItem(IDC_BUTTON_CONNECT)-&gt;EnableWindow(<span class="literal">false</span>);<span class="comment">//连接不可用</span></div><div class="line">	GetDlgItem(IDC_RADIO_SERVER)-&gt;EnableWindow(<span class="literal">false</span>);</div><div class="line">	GetDlgItem(IDC_RADIO_CLIENT)-&gt;EnableWindow(<span class="literal">false</span>);</div><div class="line">	GetDlgItem(IDC_RADIO_BOTH)-&gt;EnableWindow(<span class="literal">false</span>);</div><div class="line">	GetDlgItem(IDC_IPADDRESS)-&gt;EnableWindow(<span class="literal">false</span>);</div><div class="line"></div><div class="line">	</div><div class="line">	</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">void</span> CtraDlg::OnButtonDisconnect() <span class="comment">//关闭</span></div><div class="line">&#123;</div><div class="line">	<span class="comment">// <span class="doctag">TODO:</span> Add your control notification handler code here</span></div><div class="line">	GetDlgItem(IDC_BUTTON_CONNECT)-&gt;EnableWindow(<span class="literal">true</span>);</div><div class="line">	GetDlgItem(IDC_RADIO_TCP)-&gt;EnableWindow(<span class="literal">true</span>);</div><div class="line">	((CButton*)GetDlgItem(IDC_RADIO_UDP))-&gt;EnableWindow(<span class="literal">true</span>);</div><div class="line">	GetDlgItem(IDC_BUTTON_DISCONNECT)-&gt;EnableWindow(<span class="literal">false</span>);</div><div class="line">	GetDlgItem(IDC_BUTTON_SEND_MSG)-&gt;EnableWindow(<span class="literal">false</span>);</div><div class="line">	GetDlgItem(IDC_BUTTON_SEND_FILE)-&gt;EnableWindow(<span class="literal">false</span>);</div><div class="line">	m_AddMsgLIst.ResetContent();</div><div class="line">	GetDlgItem(IDC_BUTTON_CLEAR)-&gt;EnableWindow(<span class="literal">false</span>);</div><div class="line">	((CButton*)GetDlgItem(IDC_RADIO_SERVER))-&gt;EnableWindow(<span class="literal">true</span>);</div><div class="line">	((CButton*)GetDlgItem(IDC_RADIO_CLIENT))-&gt;EnableWindow(<span class="literal">true</span>);</div><div class="line">	((CButton*)GetDlgItem(IDC_RADIO_BOTH))-&gt;EnableWindow(<span class="literal">true</span>);</div><div class="line">	GetDlgItem(IDC_IPADDRESS)-&gt;EnableWindow(<span class="literal">true</span>);</div><div class="line">	m_AddMsgLIst.SendMessage(LB_SETHORIZONTALEXTENT,<span class="number">0</span>,<span class="number">0</span>);</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"><span class="comment">/**********************************************发送结束***********************************************/</span></div><div class="line">	<span class="keyword">if</span>(m_nSockType == SOCK_TCP)</div><div class="line">	&#123;</div><div class="line">		DWORD   dwStatus;</div><div class="line">		<span class="keyword">if</span> (pThreadLisen != <span class="literal">NULL</span>)</div><div class="line">		&#123;</div><div class="line">			<span class="keyword">if</span>(::GetExitCodeThread(pThreadLisen-&gt;m_hThread, &amp;dwStatus)==<span class="number">0</span>)</div><div class="line">			&#123;</div><div class="line">				<span class="keyword">int</span> errror = GetLastError();</div><div class="line">				<span class="keyword">return</span>;</div><div class="line">			&#125;</div><div class="line">			<span class="keyword">if</span> (dwStatus == STILL_ACTIVE)</div><div class="line">			&#123;</div><div class="line">				CSocket sockClient;</div><div class="line">				sockClient.Create();</div><div class="line">				CString ip,strError;</div><div class="line">				ip=<span class="string">"127.0.0.1"</span>;</div><div class="line">				<span class="keyword">int</span> conn = sockClient.Connect(ip, m_Potr);</div><div class="line">				<span class="keyword">if</span> (conn == <span class="number">0</span>)	</div><div class="line">				&#123;</div><div class="line">					AfxMessageBox(<span class="string">"关闭错误!"</span>+GetError(GetLastError()));</div><div class="line">					sockClient.ShutDown(<span class="number">2</span>);</div><div class="line">					sockClient.Close();</div><div class="line">					<span class="keyword">return</span>;</div><div class="line">					</div><div class="line">				&#125;</div><div class="line">				sockClient.Send(<span class="string">"D"</span>,FLAG); <span class="comment">//结束</span></div><div class="line">				</div><div class="line">			&#125;</div><div class="line">			<span class="keyword">else</span></div><div class="line">			&#123;</div><div class="line">				<span class="keyword">delete</span> pThreadLisen;</div><div class="line">				pThreadLisen = <span class="literal">NULL</span>;</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">else</span></div><div class="line">	&#123;</div><div class="line">		CSocket sockClientUdp;</div><div class="line">		<span class="keyword">int</span> succeedCreate = sockClientUdp.Create(m_type, SOCK_DGRAM);</div><div class="line">		CString strMsg = <span class="string">"D"</span>;</div><div class="line">		<span class="keyword">int</span> ret = <span class="number">0</span>;</div><div class="line">		CString ipStr;</div><div class="line">		m_You_IP.GetWindowText(ipStr);</div><div class="line">		UINT port = PORT+m_server;</div><div class="line">		ret = sockClientUdp.SendTo(strMsg, <span class="number">1</span>, port, ipStr);</div><div class="line">		</div><div class="line">	&#125;</div><div class="line">		<span class="comment">//显示下线</span></div><div class="line">		CString strLocalName;</div><div class="line">		GetLocalHostName(strLocalName);</div><div class="line">		AddMsgList(strLocalName, <span class="string">"下线！"</span>);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">void</span> CtraDlg::OnButtonSendMsg() <span class="comment">//发送消息</span></div><div class="line">&#123;</div><div class="line">	<span class="comment">// <span class="doctag">TODO:</span> Add your control notification handler code here</span></div><div class="line">	UpdateData(<span class="literal">true</span>);</div><div class="line">	<span class="keyword">if</span> (m_MsgSend.GetLength() == <span class="number">0</span>) </div><div class="line">	&#123;</div><div class="line">		<span class="keyword">return</span>;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">if</span> (m_nSockType == SOCK_TCP)</div><div class="line">	&#123;</div><div class="line">		::AfxBeginThread(<span class="number">_</span>SendMsgThread, <span class="keyword">this</span>);</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">else</span></div><div class="line">	&#123;	</div><div class="line">		::AfxBeginThread(<span class="number">_</span>SendMsgUdpThread, <span class="keyword">this</span>);</div><div class="line">	&#125;</div><div class="line">	SetDlgItemText(IDC_EDIT_SENDMSG, <span class="string">""</span>);</div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">void</span> CtraDlg::OnButtonSendFile() <span class="comment">//发送文件</span></div><div class="line">&#123;</div><div class="line">	<span class="comment">// <span class="doctag">TODO:</span> Add your control notification handler code here</span></div><div class="line">	<span class="function">CFileDialog <span class="title">dlg</span><span class="params">(<span class="literal">true</span>)</span></span>;</div><div class="line">	CString ip;</div><div class="line">	m_You_IP.GetWindowText(ip);</div><div class="line">	CString title = <span class="string">"文件发往"</span> + ip + <span class="string">"请选择"</span>;</div><div class="line">	dlg.m_ofn.lpstrTitle = title;<span class="comment">//标题条</span></div><div class="line">	<span class="keyword">if</span> (dlg.DoModal() == IDOK)</div><div class="line">	&#123;</div><div class="line">		m_fileName = dlg.GetPathName();</div><div class="line">		GetDlgItem(IDC_PROGRESS_SEND_FILE)-&gt;ShowWindow(SW_SHOW);</div><div class="line">		pThreadSendFile=::AfxBeginThread(<span class="number">_</span>SendFileThread, <span class="keyword">this</span>);	<span class="comment">//开始传送文件线程</span></div><div class="line">	&#125;</div><div class="line">	</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">void</span> CtraDlg::AddMsgList(CString IP,CString str) <span class="comment">//添加信息于LISTBOX 控件中</span></div><div class="line">&#123;</div><div class="line">	SYSTEMTIME tm;</div><div class="line">	GetLocalTime(&amp;tm);</div><div class="line">	CString time;</div><div class="line">	time.Format(<span class="number">_</span>T(<span class="string">" %d:%02.2d "</span>), tm.wHour, tm.wMinute);</div><div class="line">	m_AddMsgLIst.AddString(IP+<span class="string">"("</span>+time+<span class="string">")"</span>+str);</div><div class="line">	<span class="keyword">int</span> numList = m_AddMsgLIst.GetCount()<span class="number">-1</span>;</div><div class="line">	GetDlgItem(IDC_BUTTON_CLEAR)-&gt;EnableWindow(<span class="literal">true</span>);</div><div class="line">	m_AddMsgLIst.SetTopIndex(numList);</div><div class="line">	m_AddMsgLIst.SetCurSel(numList);</div><div class="line">	<span class="comment">//水平滚动</span></div><div class="line">	<span class="keyword">int</span> max_width = <span class="number">0</span>;</div><div class="line">	CSize sz;</div><div class="line">	<span class="function">CClientDC <span class="title">dc</span><span class="params">(<span class="keyword">this</span>)</span></span>;</div><div class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;m_AddMsgLIst.GetCount(); i++)</div><div class="line">	&#123;</div><div class="line">		m_AddMsgLIst.GetText(i,str);</div><div class="line">		sz = dc.GetTextExtent(str);</div><div class="line">		<span class="keyword">if</span> (max_width &lt; sz.cx)</div><div class="line">		&#123;</div><div class="line">			max_width = sz.cx;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	m_AddMsgLIst.SendMessage(LB_SETHORIZONTALEXTENT,max_width,<span class="number">0</span>);</div><div class="line"></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">void</span> CtraDlg::OnButtonClear() <span class="comment">//清除聊天内容</span></div><div class="line">&#123;</div><div class="line">	<span class="comment">// <span class="doctag">TODO:</span> Add your control notification handler code here</span></div><div class="line">	m_AddMsgLIst.ResetContent();</div><div class="line">	GetDlgItem(IDC_BUTTON_CLEAR)-&gt;EnableWindow(<span class="literal">false</span>);</div><div class="line">	m_AddMsgLIst.SendMessage(LB_SETHORIZONTALEXTENT,<span class="number">0</span>,<span class="number">0</span>);</div><div class="line"></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">void</span> CtraDlg::OnRadioTcp()		<span class="comment">//选择TCP模式</span></div><div class="line">&#123;</div><div class="line">	<span class="comment">// <span class="doctag">TODO:</span> Add your control notification handler code here</span></div><div class="line">	m_nSockType = SOCK_TCP;</div><div class="line">	CString text;</div><div class="line">	<span class="keyword">if</span> (m_WorkType== <span class="number">0</span>) </div><div class="line">	&#123;</div><div class="line">		text = <span class="string">"服务器"</span>;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">else</span> <span class="keyword">if</span> (m_WorkType == <span class="number">1</span>) </div><div class="line">	&#123;</div><div class="line">		text = <span class="string">"客户端"</span>;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">else</span> </div><div class="line">	&#123;</div><div class="line">		text = <span class="string">"小工具"</span>;</div><div class="line">	&#125;</div><div class="line">	SetWindowText(text + <span class="string">"TCP方式"</span>);</div><div class="line"></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">void</span> CtraDlg::OnRadioUdp()		<span class="comment">//选择UDP模式</span></div><div class="line">&#123;</div><div class="line">	<span class="comment">// <span class="doctag">TODO:</span> Add your control notification handler code here</span></div><div class="line">	m_nSockType = SOCK_UDP;</div><div class="line">	CString text;</div><div class="line">	<span class="keyword">if</span> (m_WorkType == <span class="number">0</span>) </div><div class="line">	&#123;</div><div class="line">		text = <span class="string">"服务器"</span>;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">else</span> <span class="keyword">if</span> (m_WorkType == <span class="number">1</span>) </div><div class="line">	&#123;</div><div class="line">		text = <span class="string">"客户端"</span>;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">else</span> </div><div class="line">	&#123;</div><div class="line">		text = <span class="string">"小工具"</span>;</div><div class="line">	&#125;</div><div class="line">	SetWindowText(text + <span class="string">"UDP方式"</span>);</div><div class="line"></div><div class="line">	</div><div class="line">&#125;</div><div class="line"></div><div class="line">CString CtraDlg::GetError(DWORD error)	<span class="comment">//返回错误信息</span></div><div class="line">&#123;</div><div class="line">	CString strError;</div><div class="line">	<span class="keyword">switch</span>(error)</div><div class="line">	&#123;</div><div class="line">	<span class="keyword">case</span> WSANOTINITIALISED:</div><div class="line">		strError = <span class="string">"初始化错误"</span>;</div><div class="line">		<span class="keyword">break</span>;</div><div class="line">	<span class="keyword">case</span> WSAENOTCONN:</div><div class="line">		strError = <span class="string">"对方没有启动"</span>;</div><div class="line">		<span class="keyword">break</span>;</div><div class="line">	<span class="keyword">case</span> WSAEWOULDBLOCK :</div><div class="line">		strError = <span class="string">"对方已经关闭"</span>;</div><div class="line">		<span class="keyword">break</span>;</div><div class="line">	<span class="keyword">case</span> WSAECONNREFUSED:</div><div class="line">		strError = <span class="string">"连接的尝试被拒绝"</span>;</div><div class="line">		<span class="keyword">break</span>;</div><div class="line">	<span class="keyword">case</span> WSAENOTSOCK:</div><div class="line">		strError = <span class="string">"在一个非套接字上尝试了一个操作"</span>;</div><div class="line">		<span class="keyword">break</span>;</div><div class="line">	<span class="keyword">case</span> WSAEADDRINUSE:</div><div class="line">		strError = <span class="string">"特定的地址已在使用中"</span>;</div><div class="line">		<span class="keyword">break</span>;</div><div class="line">	<span class="keyword">case</span> WSAECONNRESET:</div><div class="line">		strError = <span class="string">"与主机的连接被关闭"</span>;</div><div class="line">		<span class="keyword">break</span>;</div><div class="line">	<span class="keyword">default</span>:</div><div class="line">		strError = <span class="string">"一般错误"</span>;	</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">return</span> strError;</div><div class="line">	</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">int</span> CtraDlg::GetLocalHostName(CString &amp;sHostName)	<span class="comment">//获得本地计算机名称</span></div><div class="line">&#123;</div><div class="line">	<span class="keyword">char</span> szHostName[<span class="number">256</span>];</div><div class="line">	<span class="keyword">int</span> nRetCode;</div><div class="line">	nRetCode = gethostname(szHostName,<span class="keyword">sizeof</span>(szHostName));</div><div class="line">	<span class="keyword">if</span>(nRetCode!=<span class="number">0</span>)</div><div class="line">	&#123;</div><div class="line">		<span class="comment">//产生错误</span></div><div class="line">		sHostName = <span class="number">_</span>T(<span class="string">"获取不到主机名！"</span>);</div><div class="line">		<span class="keyword">return</span> GetLastError();</div><div class="line">	&#125;</div><div class="line">	sHostName = szHostName;</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">int</span> CtraDlg::GetIpAddress(<span class="keyword">const</span> CString &amp;sHostName, CString &amp;sIpAddress)<span class="comment">//获得本地IP</span></div><div class="line">&#123;</div><div class="line">	<span class="keyword">struct</span> hostent FAR * lpHostEnt=gethostbyname(sHostName);</div><div class="line">	<span class="keyword">if</span>(lpHostEnt==<span class="literal">NULL</span>)</div><div class="line">	&#123;</div><div class="line">		<span class="comment">//产生错误</span></div><div class="line">		sIpAddress = <span class="number">_</span>T(<span class="string">""</span>);</div><div class="line">		<span class="keyword">return</span> GetLastError();</div><div class="line">	&#125;</div><div class="line">	<span class="comment">//获取IP</span></div><div class="line">	LPSTR lpAddr = lpHostEnt-&gt;h_addr_list[<span class="number">0</span>];</div><div class="line">	<span class="keyword">if</span>(lpAddr)</div><div class="line">	&#123;</div><div class="line">		<span class="keyword">struct</span> in_addr inAddr;</div><div class="line">		memmove(&amp;inAddr, lpAddr, <span class="number">4</span>);</div><div class="line">		<span class="comment">//转换为标准格式</span></div><div class="line">		sIpAddress = inet_ntoa(inAddr);</div><div class="line">		<span class="keyword">if</span> (sIpAddress.IsEmpty())</div><div class="line">		&#123;</div><div class="line">			sIpAddress = <span class="number">_</span>T(<span class="string">"获取不到IP！"</span>);</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">int</span> CtraDlg::GetNamebyAddress(<span class="keyword">const</span> CString &amp;IpAddress,CString &amp;sYouName)<span class="comment">//获得对方计算机名称</span></div><div class="line">&#123;</div><div class="line">	<span class="keyword">unsigned</span> <span class="keyword">long</span> addr;</div><div class="line">	addr = inet_addr(IpAddress);</div><div class="line">	<span class="keyword">struct</span> hostent FAR * lpHostEnt = gethostbyaddr((<span class="keyword">char</span> *)&amp;addr, <span class="number">4</span>, AF_INET);</div><div class="line">	<span class="keyword">if</span> (lpHostEnt == <span class="literal">NULL</span>)</div><div class="line">	&#123;</div><div class="line">		<span class="comment">//产生错误</span></div><div class="line">		sYouName = <span class="number">_</span>T(<span class="string">""</span>);</div><div class="line"></div><div class="line">		AfxMessageBox(<span class="string">"无法连接！"</span>);<span class="comment">//应该取得其错误</span></div><div class="line">		<span class="keyword">return</span> <span class="number">-1</span>;</div><div class="line">	&#125;</div><div class="line">	CString name = lpHostEnt-&gt;h_name;</div><div class="line">	sYouName = name;</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line"></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">void</span> CtraDlg::OnRadioServer() </div><div class="line">&#123;</div><div class="line">	<span class="comment">// <span class="doctag">TODO:</span> Add your control notification handler code here</span></div><div class="line">	CString text;</div><div class="line">	<span class="keyword">if</span> (m_nSockType == SOCK_TCP) </div><div class="line">	&#123;</div><div class="line">		text = <span class="string">"TCP方式"</span>;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">else</span> </div><div class="line">	&#123;</div><div class="line">		text = <span class="string">"UDP方式"</span>;</div><div class="line">	&#125;</div><div class="line">	m_server = <span class="number">1</span>;</div><div class="line">	m_client = <span class="number">2</span>;</div><div class="line">	m_WorkType = <span class="number">0</span>;</div><div class="line">	SetWindowText(<span class="string">"服务器 "</span> + text);</div><div class="line">	GetDlgItem(IDC_BUTTON_CONNECT)-&gt;SetWindowText(<span class="string">"启动服务"</span>);</div><div class="line">	GetDlgItem(IDC_BUTTON_DISCONNECT)-&gt;SetWindowText(<span class="string">"关闭服务"</span>);</div><div class="line">	</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">void</span> CtraDlg::OnRadioClient() </div><div class="line">&#123;</div><div class="line">	<span class="comment">// <span class="doctag">TODO:</span> Add your control notification handler code here</span></div><div class="line">	CString text;</div><div class="line">	<span class="keyword">if</span> (m_nSockType == SOCK_TCP) </div><div class="line">	&#123;</div><div class="line">		text = <span class="string">"TCP方式"</span>;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">else</span> </div><div class="line">	&#123;</div><div class="line">		text = <span class="string">"UDP方式"</span>;</div><div class="line">	&#125;</div><div class="line">	m_server = <span class="number">2</span>;</div><div class="line">	m_client = <span class="number">1</span>;</div><div class="line">	m_WorkType = <span class="number">1</span>;</div><div class="line">	SetWindowText(<span class="string">"客户端 "</span> + text);</div><div class="line">	GetDlgItem(IDC_BUTTON_CONNECT)-&gt;SetWindowText(<span class="string">"连接"</span>);</div><div class="line">	GetDlgItem(IDC_BUTTON_DISCONNECT)-&gt;SetWindowText(<span class="string">"断开连接"</span>);</div><div class="line">	</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">void</span> CtraDlg::OnRadioBoth() </div><div class="line">&#123;</div><div class="line">	<span class="comment">// <span class="doctag">TODO:</span> Add your control notification handler code here</span></div><div class="line">	CString text;</div><div class="line">	<span class="keyword">if</span> (m_nSockType == SOCK_TCP) </div><div class="line">	&#123;</div><div class="line">		text = <span class="string">"TCP方式"</span>;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">else</span> </div><div class="line">	&#123;</div><div class="line">		text = <span class="string">"UDP方式"</span>;</div><div class="line">	&#125;</div><div class="line">	m_server = m_client = <span class="number">0</span>;</div><div class="line">	m_WorkType = <span class="number">2</span>;</div><div class="line">	SetWindowText(text);</div><div class="line">	GetDlgItem(IDC_BUTTON_CONNECT)-&gt;SetWindowText(<span class="string">"启动"</span>);</div><div class="line">	GetDlgItem(IDC_BUTTON_DISCONNECT)-&gt;SetWindowText(<span class="string">"关闭"</span>);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">void</span> CtraDlg::OnButtonStopFile() </div><div class="line">&#123;</div><div class="line">	<span class="comment">// <span class="doctag">TODO:</span> Add your control notification handler code here</span></div><div class="line">	FileStop = <span class="literal">true</span>;</div><div class="line">	FileWork = <span class="literal">false</span>;</div><div class="line">	GetDlgItem(IDCANCEL)-&gt;EnableWindow(<span class="literal">true</span>);</div><div class="line">	GetDlgItem(IDC_BUTTON_DISCONNECT)-&gt;EnableWindow(<span class="literal">true</span>);</div><div class="line">&#125;</div><div class="line"></div><div class="line">LRESULT CtraDlg::OnKSend(WPARAM wParam,LPARAM lParam)</div><div class="line">&#123;</div><div class="line">	OnButtonSendMsg();</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line">BOOL CtraDlg::PreTranslateMessage(MSG* pMsg) </div><div class="line">&#123;</div><div class="line">	<span class="comment">// <span class="doctag">TODO:</span> Add your specialized code here and/or call the base class</span></div><div class="line">	<span class="keyword">if</span> (pMsg-&gt;message == WM_KEYDOWN &amp;&amp; pMsg-&gt;wParam == VK_RETURN)</div><div class="line">	&#123;	</div><div class="line">		<span class="keyword">if</span> (GetFocus()-&gt;GetDlgCtrlID()==IDC_EDIT_SENDMSG || GetFocus()-&gt;GetDlgCtrlID()==IDC_BUTTON_SEND_MSG)</div><div class="line">		&#123;</div><div class="line">			AfxGetMainWnd()-&gt;SendMessage(WM_KSEND);</div><div class="line">			<span class="keyword">return</span> TRUE;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">return</span> CDialog::PreTranslateMessage(pMsg);</div><div class="line"></div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// traDlg.h : header file</span></div><div class="line"><span class="comment">//</span></div><div class="line"></div><div class="line"><span class="meta">#<span class="meta-keyword">if</span> !defined(AFX_traDLG_H__F42FE5AC_E2CC_44AB_9D0A_748191BC989F__INCLUDED_)</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> AFX_traDLG_H__F42FE5AC_E2CC_44AB_9D0A_748191BC989F__INCLUDED_</span></div><div class="line"></div><div class="line"><span class="meta">#<span class="meta-keyword">if</span> _MSC_VER &gt; 1000</span></div><div class="line"><span class="meta">#<span class="meta-keyword">pragma</span> once</span></div><div class="line"><span class="meta">#<span class="meta-keyword">endif</span> <span class="comment">// _MSC_VER &gt; 1000</span></span></div><div class="line"></div><div class="line"><span class="comment">//#include "ColorListBox.h"</span></div><div class="line"><span class="comment">/////////////////////////////////////////////////////////////////////////////</span></div><div class="line"><span class="comment">// CtraDlg dialog</span></div><div class="line"></div><div class="line"><span class="keyword">class</span> CtraDlg : <span class="keyword">public</span> CDialog</div><div class="line">&#123;</div><div class="line"><span class="comment">// Construction</span></div><div class="line"><span class="keyword">public</span>:</div><div class="line">	CtraDlg(CWnd* pParent = <span class="literal">NULL</span>);	<span class="comment">// standard constructor</span></div><div class="line"></div><div class="line"><span class="comment">// Dialog Data</span></div><div class="line">	<span class="comment">//&#123;&#123;AFX_DATA(CtraDlg)</span></div><div class="line">	<span class="keyword">enum</span> &#123; IDD = IDD_tra_DIALOG &#125;;</div><div class="line">	CProgressCtrl	m_Progress;</div><div class="line">	CListBox	m_AddMsgLIst;</div><div class="line">	CIPAddressCtrl	m_You_IP;</div><div class="line">	CString	m_MsgSend;</div><div class="line">	<span class="comment">//&#125;&#125;AFX_DATA</span></div><div class="line"></div><div class="line">	<span class="comment">// ClassWizard generated virtual function overrides</span></div><div class="line">	<span class="comment">//&#123;&#123;AFX_VIRTUAL(CtraDlg)</span></div><div class="line">	<span class="keyword">public</span>:</div><div class="line">	<span class="function"><span class="keyword">virtual</span> BOOL <span class="title">PreTranslateMessage</span><span class="params">(MSG* pMsg)</span></span>;</div><div class="line">	<span class="keyword">protected</span>:</div><div class="line">	<span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">DoDataExchange</span><span class="params">(CDataExchange* pDX)</span></span>;	<span class="comment">// DDX/DDV support</span></div><div class="line">	<span class="comment">//&#125;&#125;AFX_VIRTUAL</span></div><div class="line"></div><div class="line"><span class="comment">// Implementation</span></div><div class="line"><span class="keyword">protected</span>:</div><div class="line">	HICON m_hIcon;</div><div class="line"></div><div class="line">	<span class="comment">// Generated message map functions</span></div><div class="line">	<span class="comment">//&#123;&#123;AFX_MSG(CtraDlg)</span></div><div class="line">	<span class="function"><span class="keyword">virtual</span> BOOL <span class="title">OnInitDialog</span><span class="params">()</span></span>;</div><div class="line">	<span class="function">afx_msg <span class="keyword">void</span> <span class="title">OnSysCommand</span><span class="params">(UINT nID, LPARAM lParam)</span></span>;</div><div class="line">	<span class="function">afx_msg <span class="keyword">void</span> <span class="title">OnPaint</span><span class="params">()</span></span>;</div><div class="line">	<span class="function">afx_msg HCURSOR <span class="title">OnQueryDragIcon</span><span class="params">()</span></span>;</div><div class="line">	<span class="function">afx_msg <span class="keyword">void</span> <span class="title">OnButtonConnect</span><span class="params">()</span></span>;</div><div class="line">	<span class="function">afx_msg <span class="keyword">void</span> <span class="title">OnButtonDisconnect</span><span class="params">()</span></span>;</div><div class="line">	<span class="function">afx_msg <span class="keyword">void</span> <span class="title">OnButtonSendMsg</span><span class="params">()</span></span>;</div><div class="line">	<span class="function">afx_msg <span class="keyword">void</span> <span class="title">OnButtonSendFile</span><span class="params">()</span></span>;</div><div class="line">	<span class="function">afx_msg <span class="keyword">void</span> <span class="title">OnButtonClear</span><span class="params">()</span></span>;</div><div class="line">	<span class="function">afx_msg <span class="keyword">void</span> <span class="title">OnRadioTcp</span><span class="params">()</span></span>;</div><div class="line">	<span class="function">afx_msg <span class="keyword">void</span> <span class="title">OnRadioUdp</span><span class="params">()</span></span>;</div><div class="line">	<span class="function">afx_msg <span class="keyword">void</span> <span class="title">OnRadioServer</span><span class="params">()</span></span>;</div><div class="line">	<span class="function">afx_msg <span class="keyword">void</span> <span class="title">OnRadioClient</span><span class="params">()</span></span>;</div><div class="line">	<span class="function">afx_msg <span class="keyword">void</span> <span class="title">OnRadioBoth</span><span class="params">()</span></span>;</div><div class="line">	<span class="function">afx_msg <span class="keyword">void</span> <span class="title">OnButtonStopFile</span><span class="params">()</span></span>;</div><div class="line">	<span class="function">afx_msg LRESULT <span class="title">OnKSend</span><span class="params">(WPARAM wParam,LPARAM lParam)</span></span>;<span class="comment">//发送消息</span></div><div class="line">	<span class="comment">//afx_msg void OnButtonCaputer();</span></div><div class="line">	<span class="comment">//&#125;&#125;AFX_MSG</span></div><div class="line">	DECLARE_MESSAGE_MAP()</div><div class="line"></div><div class="line"><span class="keyword">public</span>:</div><div class="line">	<span class="function"><span class="keyword">int</span> <span class="title">SaveYouFile</span><span class="params">(CSocket &amp;recSo,SOCKADDR_IN &amp;client)</span></span>;</div><div class="line">	<span class="function"><span class="keyword">int</span> <span class="title">ReceiveFileMsg</span><span class="params">(CSocket &amp; socket,SOCKADDR_IN &amp;client)</span></span>;</div><div class="line">	<span class="function"><span class="keyword">int</span> <span class="title">GetIpAddress</span><span class="params">(<span class="keyword">const</span> CString &amp; sHostName,CString &amp; sIpAddress)</span></span>;</div><div class="line">	<span class="function"><span class="keyword">int</span> <span class="title">GetLocalHostName</span><span class="params">(CString &amp;sHostName)</span></span>;</div><div class="line">	<span class="function">CString <span class="title">GetError</span><span class="params">(DWORD error)</span></span>;</div><div class="line">	<span class="keyword">int</span>	m_nSockType;	<span class="comment">//连接类型</span></div><div class="line">	<span class="keyword">int</span> m_WorkType;		<span class="comment">//工作方式 server0,client1,both2</span></div><div class="line">	<span class="function"><span class="keyword">void</span> <span class="title">AddMsgList</span><span class="params">(CString IP, CString str)</span></span>; <span class="comment">//LISTBOX控件添加信息</span></div><div class="line">	<span class="keyword">int</span> m_client, m_server;</div><div class="line">	CString m_fileName;</div><div class="line">	<span class="keyword">bool</span> FileWork, FileStop, StopServer;</div><div class="line">	<span class="keyword">char</span> m_type;<span class="comment">//接受类型/F-文件，C-抓平，D-关闭,M-消息</span></div><div class="line">	<span class="keyword">int</span> m_Potr;<span class="comment">//当前使用端口</span></div><div class="line">	<span class="function"><span class="keyword">int</span> <span class="title">GetNamebyAddress</span><span class="params">(<span class="keyword">const</span> CString &amp;IpAddress,CString &amp;sYouName)</span></span>;<span class="comment">//获得对方计算机名称</span></div><div class="line"></div><div class="line">&#125;;</div><div class="line"><span class="keyword">struct</span> FILEINFO</div><div class="line">&#123;</div><div class="line">	<span class="keyword">int</span> fileLength;</div><div class="line">	<span class="keyword">char</span> fileName[<span class="number">100</span>];</div><div class="line"></div><div class="line">&#125;;</div><div class="line"></div><div class="line"><span class="comment">//&#123;&#123;AFX_INSERT_LOCATION&#125;&#125;</span></div><div class="line"><span class="comment">// Microsoft Visual C++ will insert additional declarations immediately before the previous line.</span></div><div class="line"></div><div class="line"><span class="meta">#<span class="meta-keyword">endif</span> <span class="comment">// !defined(AFX_traDLG_H__F42FE5AC_E2CC_44AB_9D0A_748191BC989F__INCLUDED_)</span></span></div></pre></td></tr></table></figure>
<hr>
<h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><p>网上的资料，查到的大部分都是用的MFC的socket类做的……</p>
<p>高级版→→→→<br>1.<a href="https://wenku.baidu.com/view/69afd693dd88d0d233d46a49.html" target="_blank" rel="external">基于MFC仿QQ聊天程序设计完整实例教程</a><br>2.<a href="http://blog.csdn.net/akof1314/article/details/5983443" target="_blank" rel="external">CRichEditCtrlEx支持静态表情聊天类的使用</a></p>
]]></content>
      
        <categories>
            
            <category> 互联网 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> MFC </tag>
            
            <tag> C++ </tag>
            
            <tag> socket </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[四大组件之ContentProvider记录]]></title>
      <url>http://hubojing.github.io/2017/05/05/ContentProvider%E8%AE%B0%E5%BD%95/</url>
      <content type="html"><![CDATA[<div align="left"><br><img src="https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1493829797406&di=c1112aa632e463c9a69b23a84b37c681&imgtype=0&src=http%3A%2F%2Fs15.sinaimg.cn%2Fmiddle%2F448dd084gaa5d8b13a09e%26690" width="300" height="180" style="float:right;"><br><br><br>ContentProvider记录。<br><br><br> </div>

<a id="more"></a>
<p>数据存储方式：</p>
<ul>
<li>Shared Preferences</li>
<li>文件存储</li>
<li>SQLite</li>
<li>其他还有网络存储等</li>
</ul>
<p>上述不可完成的任务：都只是在单独的一个应用程序之中达到一个数据的共享</p>
<p><img src="http://img.blog.csdn.net/20170505230346413?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="ContentProvider"><br><img src="http://img.blog.csdn.net/20170505230425672?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="Uri"><br><img src="http://img.blog.csdn.net/20170505230442148?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="UriMatcher类"></p>
<h1 id="contentprovider"><a href="#ContentProvider" class="headerlink" title="ContentProvider"></a>ContentProvider</h1><ol>
<li>使用 ContentResolver 操作 ContentProvider 中的数据：<br>当外部应用需要对 ContentProvider 中的数据进行增删改查的时候，可以使用 ContentResolver 类来完成。</li>
<li>使用 Activity 提供的 getContentResolver() 方法获取 ContentResolver 对象。</li>
<li>ContentResolver 类提供了与 ContentProvider 类相同签名的四个方法：</li>
</ol>
<ul>
<li>public Uri insert(Uri uri,ContentValues values)<br>该方法用于往ContentProvider里面添加数据</li>
<li>public int delete(Uri uri,String selection,String[] selectionArgs)<br>该方法从ContentProvider中删除数据</li>
<li>public int update(Uri uri,ContentValues values,String selection,String[] selectionArgs)<br>该方法用于更新ContentProvider里面的数据</li>
<li>public Cursor query(Uri uri,String[] projection,String selection,String[] selectionArgs,String sortOrder)<br>该方法用于从ContentProvider中获取数据</li>
</ul>
<h1 id="使用系统提供的contentprovider"><a href="#使用系统提供的ContentProvider" class="headerlink" title="使用系统提供的ContentProvider"></a>使用系统提供的ContentProvider</h1><h2 id="查询联系人"><a href="#查询联系人" class="headerlink" title="查询联系人"></a>查询联系人</h2><p>MyContentProvider.java</p>
<figure class="highlight less"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div></pre></td><td class="code"><pre><div class="line">package com<span class="selector-class">.abc</span><span class="selector-class">.contentproviderdemo1</span>;</div><div class="line"></div><div class="line">import android<span class="selector-class">.content</span><span class="selector-class">.ContentProvider</span>;</div><div class="line">import android<span class="selector-class">.content</span><span class="selector-class">.ContentValues</span>;</div><div class="line">import android<span class="selector-class">.database</span><span class="selector-class">.Cursor</span>;</div><div class="line">import android<span class="selector-class">.net</span><span class="selector-class">.Uri</span>;</div><div class="line"></div><div class="line"><span class="selector-tag">public</span> <span class="selector-tag">class</span> <span class="selector-tag">MyContentProvider</span> <span class="selector-tag">extends</span> <span class="selector-tag">ContentProvider</span> &#123;</div><div class="line"></div><div class="line">	<span class="variable">@Override</span> <span class="comment">// 在ContentProvider创建后被调用</span></div><div class="line">	public boolean onCreate() &#123;</div><div class="line">		<span class="comment">// TODO Auto-generated method stub</span></div><div class="line">		return false;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	<span class="variable">@Override</span> <span class="comment">// 根据uri查询出selection指定的条件所匹配的全部记录，并且可以指定查询哪些列 以什么方式（order）排序</span></div><div class="line">	public Cursor query(Uri uri, String[] projection, String selection, String[] selectionArgs, String sortOrder) &#123;</div><div class="line">		<span class="comment">// TODO Auto-generated method stub</span></div><div class="line">		return null;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	<span class="variable">@Override</span> <span class="comment">// 返回当前uri的MIME类型，如果该URI对应的数据可能包括多条记录</span></div><div class="line">	<span class="comment">// 如果该URI对应的数据只有一条记录 该MIME类型字符串 就是以vnd.android.cursor.item/开头</span></div><div class="line">	public String getType(Uri uri) &#123;</div><div class="line">		<span class="comment">// TODO Auto-generated method stub</span></div><div class="line">		return null;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	<span class="variable">@Override</span> <span class="comment">// 根据uri插入Values对应的数据</span></div><div class="line">	public Uri insert(Uri uri, ContentValues values) &#123;</div><div class="line">		<span class="comment">// TODO Auto-generated method stub</span></div><div class="line">		return null;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	<span class="variable">@Override</span> <span class="comment">// 根据Uri删除selection指定的条件所匹配的全部记录</span></div><div class="line">	public int delete(Uri uri, String selection, String[] selectionArgs) &#123;</div><div class="line">		<span class="comment">// TODO Auto-generated method stub</span></div><div class="line">		return 0;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	<span class="variable">@Override</span> <span class="comment">// 根据uri修改selection指定的条件所匹配的全部记录</span></div><div class="line">	public int update(Uri uri, ContentValues values, String selection, String[] selectionArgs) &#123;</div><div class="line">		<span class="comment">// TODO Auto-generated method stub</span></div><div class="line">		return 0;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>MainActivity.java</p>
<figure class="highlight scala"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> com.abc.contentproviderdemo1;</div><div class="line"></div><div class="line"><span class="keyword">import</span> android.app.<span class="type">Activity</span>;</div><div class="line"><span class="keyword">import</span> android.content.<span class="type">ContentResolver</span>;</div><div class="line"><span class="keyword">import</span> android.database.<span class="type">Cursor</span>;</div><div class="line"><span class="keyword">import</span> android.os.<span class="type">Bundle</span>;</div><div class="line"><span class="keyword">import</span> android.provider.<span class="type">ContactsContract</span>.<span class="type">CommonDataKinds</span>.<span class="type">Email</span>;</div><div class="line"><span class="keyword">import</span> android.provider.<span class="type">ContactsContract</span>.<span class="type">CommonDataKinds</span>.<span class="type">Phone</span>;</div><div class="line"><span class="keyword">import</span> android.provider.<span class="type">ContactsContract</span>.<span class="type">Contacts</span>;</div><div class="line"><span class="keyword">import</span> android.util.<span class="type">Log</span>;</div><div class="line"></div><div class="line">public <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">Activity</span> </span>&#123;</div><div class="line"></div><div class="line">	<span class="meta">@Override</span></div><div class="line">	<span class="keyword">protected</span> void onCreate(<span class="type">Bundle</span> savedInstanceState) &#123;</div><div class="line">		<span class="keyword">super</span>.onCreate(savedInstanceState);</div><div class="line">		setContentView(<span class="type">R</span>.layout.activity_main);</div><div class="line"></div><div class="line">		<span class="type">ContentResolver</span> cr = getContentResolver();</div><div class="line">		<span class="type">Cursor</span> c = cr.query(<span class="type">Contacts</span>.<span class="type">CONTENT_URI</span>, <span class="keyword">new</span> <span class="type">String</span>[] &#123; <span class="type">Contacts</span>._ID, <span class="type">Contacts</span>.<span class="type">DISPLAY_NAME</span> &#125;, <span class="literal">null</span>, <span class="literal">null</span>,</div><div class="line">				<span class="literal">null</span>);</div><div class="line">		<span class="keyword">if</span> (c != <span class="literal">null</span>) &#123;</div><div class="line">			<span class="keyword">while</span> (c.moveToNext()) &#123;</div><div class="line">				int id = c.getInt(c.getColumnIndex(<span class="string">"_id"</span>));</div><div class="line">				<span class="type">Log</span>.i(<span class="string">"info"</span>, <span class="string">"_id"</span> + id);</div><div class="line">				<span class="type">Log</span>.i(<span class="string">"info"</span>, <span class="string">"name:"</span> + c.getString(c.getColumnIndex(<span class="string">"display_name"</span>)));</div><div class="line">				<span class="type">Cursor</span> c1 = cr.query(<span class="type">Phone</span>.<span class="type">CONTENT_URI</span>, <span class="keyword">new</span> <span class="type">String</span>[] &#123; <span class="type">Phone</span>.<span class="type">NUMBER</span>, <span class="type">Phone</span>.<span class="type">TYPE</span> &#125;,</div><div class="line">						<span class="type">Phone</span>.<span class="type">CONTACT_ID</span> + <span class="string">"="</span> + id, <span class="literal">null</span>, <span class="literal">null</span>);</div><div class="line">				<span class="comment">// 根据联系人ID查询出联系人的电话号码</span></div><div class="line">				<span class="keyword">if</span> (c1 != <span class="literal">null</span>) &#123;</div><div class="line">					<span class="keyword">while</span> (c1.moveToNext()) &#123;</div><div class="line">						int <span class="class"><span class="keyword">type</span> </span>= c1.getInt(c1.getColumnIndex(<span class="type">Phone</span>.<span class="type">TYPE</span>));</div><div class="line">						<span class="keyword">if</span> (<span class="class"><span class="keyword">type</span> <span class="title">==</span> <span class="title">Phone</span>.<span class="title">TYPE_HOME</span>) </span>&#123;</div><div class="line">							<span class="type">Log</span>.i(<span class="string">"info"</span>, <span class="string">"家庭电话："</span> + c1.getString(c1.getColumnIndex(<span class="type">Phone</span>.<span class="type">NUMBER</span>)));</div><div class="line">						&#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="class"><span class="keyword">type</span> <span class="title">==</span> <span class="title">Phone</span>.<span class="title">TYPE_MOBILE</span>) </span>&#123;</div><div class="line">							<span class="type">Log</span>.i(<span class="string">"info"</span>, <span class="string">"手机"</span> + c1.getString(c1.getColumnIndex(<span class="type">Phone</span>.<span class="type">NUMBER</span>)));</div><div class="line">						&#125;</div><div class="line">					&#125;</div><div class="line">					c1.close();</div><div class="line">				&#125;</div><div class="line">				<span class="comment">// 根据联系人的ID去查询出联系人的邮箱地址</span></div><div class="line">				<span class="type">Cursor</span> c2 = cr.query(<span class="type">Email</span>.<span class="type">CONTENT_URI</span>, <span class="keyword">new</span> <span class="type">String</span>[] &#123; <span class="type">Email</span>.<span class="type">DATA</span>, <span class="type">Email</span>.<span class="type">TYPE</span> &#125;,</div><div class="line">						<span class="type">Email</span>.<span class="type">CONTACT_ID</span> + <span class="string">"="</span> + id, <span class="literal">null</span>, <span class="literal">null</span>);</div><div class="line"></div><div class="line">				<span class="keyword">if</span> (c2 != <span class="literal">null</span>) &#123;</div><div class="line">					<span class="keyword">while</span> (c2.moveToNext()) &#123;</div><div class="line">						int <span class="class"><span class="keyword">type</span> </span>= c2.getInt(c2.getColumnIndex(<span class="type">Email</span>.<span class="type">TYPE</span>));</div><div class="line">						<span class="keyword">if</span> (<span class="class"><span class="keyword">type</span> <span class="title">==</span> <span class="title">Email</span>.<span class="title">TYPE_WORK</span>) </span>&#123;</div><div class="line">							<span class="type">Log</span>.i(<span class="string">"info"</span>, <span class="string">"工作邮箱："</span> + c2.getString(c2.getColumnIndex(<span class="type">Email</span>.<span class="type">DATA</span>)));</div><div class="line">						&#125;</div><div class="line">					&#125;</div><div class="line">					c2.close();</div><div class="line">				&#125;</div><div class="line">			&#125;</div><div class="line">			c.close();</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>AndroidManifest.xml注册</p>
<figure class="highlight applescript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;uses-permission android:<span class="built_in">name</span>=<span class="string">"android.permission.READ_CONTACTS"</span>/&gt;</div></pre></td></tr></table></figure>
<h2 id="增加联系人"><a href="#增加联系人" class="headerlink" title="增加联系人"></a>增加联系人</h2><p>MainActivity.java</p>
<figure class="highlight less"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div></pre></td><td class="code"><pre><div class="line">package com<span class="selector-class">.abc</span><span class="selector-class">.contentproviderdemo2</span>;</div><div class="line"></div><div class="line">import android<span class="selector-class">.app</span><span class="selector-class">.Activity</span>;</div><div class="line">import android<span class="selector-class">.content</span><span class="selector-class">.ContentResolver</span>;</div><div class="line">import android<span class="selector-class">.content</span><span class="selector-class">.ContentUris</span>;</div><div class="line">import android<span class="selector-class">.content</span><span class="selector-class">.ContentValues</span>;</div><div class="line">import android<span class="selector-class">.net</span><span class="selector-class">.Uri</span>;</div><div class="line">import android<span class="selector-class">.os</span><span class="selector-class">.Bundle</span>;</div><div class="line">import android<span class="selector-class">.provider</span><span class="selector-class">.ContactsContract</span><span class="selector-class">.CommonDataKinds</span><span class="selector-class">.Phone</span>;</div><div class="line">import android<span class="selector-class">.provider</span><span class="selector-class">.ContactsContract</span><span class="selector-class">.CommonDataKinds</span><span class="selector-class">.StructuredName</span>;</div><div class="line">import android<span class="selector-class">.provider</span><span class="selector-class">.ContactsContract</span><span class="selector-class">.Data</span>;</div><div class="line">import android<span class="selector-class">.provider</span><span class="selector-class">.ContactsContract</span><span class="selector-class">.RawContacts</span>;</div><div class="line"></div><div class="line"><span class="selector-tag">public</span> <span class="selector-tag">class</span> <span class="selector-tag">MainActivity</span> <span class="selector-tag">extends</span> <span class="selector-tag">Activity</span> &#123;</div><div class="line"></div><div class="line">	<span class="variable">@Override</span></div><div class="line">	protected void onCreate(Bundle savedInstanceState) &#123;</div><div class="line">		super<span class="selector-class">.onCreate</span>(savedInstanceState);</div><div class="line">		setContentView(R<span class="selector-class">.layout</span><span class="selector-class">.activity_main</span>);</div><div class="line">		ContentResolver cr = getContentResolver();</div><div class="line">		<span class="comment">// 向联系人中插入一行数据</span></div><div class="line">		ContentValues values = new ContentValues();</div><div class="line">		Uri uri = cr<span class="selector-class">.insert</span>(RawContacts.CONTENT_URI, values);</div><div class="line">		Long raw_contact_id = ContentUris<span class="selector-class">.parseId</span>(uri);</div><div class="line">		values<span class="selector-class">.clear</span>();</div><div class="line">		values<span class="selector-class">.put</span>(StructuredName.RAW_CONTACT_ID, raw_contact_id);</div><div class="line">		values<span class="selector-class">.put</span>(StructuredName.DISPLAY_NAME, <span class="string">"胡博靖"</span>);</div><div class="line">		values<span class="selector-class">.put</span>(StructuredName.MIMETYPE, StructuredName.CONTENT_ITEM_TYPE);</div><div class="line">		uri = cr<span class="selector-class">.insert</span>(Data.CONTENT_URI, values);</div><div class="line">		<span class="comment">// 插入电话信息</span></div><div class="line">		values<span class="selector-class">.clear</span>();</div><div class="line">		values<span class="selector-class">.put</span>(Phone.RAW_CONTACT_ID, raw_contact_id);</div><div class="line">		values<span class="selector-class">.put</span>(Phone.NUMBER, <span class="string">"12345678910"</span>);</div><div class="line">		values<span class="selector-class">.put</span>(Phone.MIMETYPE, Phone.CONTENT_ITEM_TYPE);</div><div class="line">		uri = cr<span class="selector-class">.insert</span>(Data.CONTENT_URI, values);</div><div class="line">	&#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>在AndroidManifest.xml中注册</p>
<figure class="highlight applescript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;uses-permission android:<span class="built_in">name</span>=<span class="string">"android.permission.WRITE_CONTACTS"</span>/&gt;</div></pre></td></tr></table></figure>
]]></content>
      
        <categories>
            
            <category> 互联网 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Android </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[四大组件之Service记录]]></title>
      <url>http://hubojing.github.io/2017/05/01/Service%E8%AE%B0%E5%BD%95/</url>
      <content type="html"><![CDATA[<div align="left"><br><img src="https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1493829797406&di=c1112aa632e463c9a69b23a84b37c681&imgtype=0&src=http%3A%2F%2Fs15.sinaimg.cn%2Fmiddle%2F448dd084gaa5d8b13a09e%26690" width="300" height="180" style="float:right;"><br>　　根据广大程序员经验，初学者请告别Eclipse，拥抱Android Studio！<br>　　原因：<br>　　1. 未来是Android Studio的天下（Google自己出品）。<br>　　2. Eclipse的配置和相关安装可以磨灭初学者一半的耐心，简直是拦路虎。（比如和我一样做类似题目毕设的同学已经哭晕在厕所）<br>　　3. 促使你换一台高配电脑。（心累，Android Studio在垃圾本上跑，几分钟编译一次，卡到怀疑人生，其实垃圾本四年前还是一条能跑lol的好本本，岁月催laptop老）<br> </div>

<a id="more"></a>
<p>　　Android sdk文件夹到了80几G…撑爆了我的硬盘……电脑里装的软件过于多了…趁着五一大好春光（下雨）都给卸载了！包括毕设用的eclipse和各种版本的VS，以及以前用过现在用的少的各种专业软件（每一个都是10G大户）。不过我还是毅然留下了常年没有玩耍的游戏们（加起来也才80多G！相比之下，sdk里都放了些什么！）。</p>
<p>　　但毕设是要做的。<br>　　所以Android套装们需要重新下载下来，当年安装的时候，对JDK、SDK、ADT这种东西一点儿不了解，现在重新来一遍。<br>这几天写了一些文字，但不能发上来，因为放入我的毕业论文里了。</p>
<p>－－－－－－－－－－－－－－－－－－－－－－－－废话终结线－－－－－－－－－－－－－－－－－－－－－－－－</p>
<h1 id="service生命周期"><a href="#Service生命周期" class="headerlink" title="Service生命周期"></a>Service生命周期</h1><p><img src="https://timgsa.baidu.com/timg?image&amp;quality=80&amp;size=b9999_10000&amp;sec=1493825041654&amp;di=c2451aea42f042f63f4de6675f5659d3&amp;imgtype=0&amp;src=http%3A%2F%2Fstatic.oschina.net%2Fuploads%2Fimg%2F201210%2F16102027_blLg.gif" alt="Service生命周期"></p>
<p><strong>注意</strong></p>
<ul>
<li>运行在主线程，不能用它做耗时的请求或动作</li>
<li>可在服务中开一个线程，在线程中做耗时动作</li>
</ul>
<h1 id="两种方式本地服务"><a href="#两种方式（本地服务）" class="headerlink" title="两种方式（本地服务）"></a>两种方式（本地服务）</h1><p>Start方式：</p>
<ul>
<li>服务跟启动页没有任何联系</li>
<li>无法得到服务对象</li>
</ul>
<p>Bind方式（支持数据回传）：</p>
<ul>
<li>通过Ibinder接口实例，返回一个ServiceConnection对象给启动源。</li>
<li>通过ServiceConnection对象的相关方法可以得到Service对象</li>
</ul>
<h1 id="start启动"><a href="#Start启动" class="headerlink" title="Start启动"></a>Start启动</h1><p>activity_main.xml</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div></pre></td><td class="code"><pre><div class="line">&lt;LinearLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;</div><div class="line">    xmlns:tools=&quot;http://schemas.android.com/tools&quot;</div><div class="line">    android:layout_width=&quot;match_parent&quot;</div><div class="line">    android:layout_height=&quot;match_parent&quot;</div><div class="line">    android:orientation=&quot;vertical&quot;</div><div class="line">    android:paddingBottom=&quot;@dimen/activity_vertical_margin&quot;</div><div class="line">    android:paddingLeft=&quot;@dimen/activity_horizontal_margin&quot;</div><div class="line">    android:paddingRight=&quot;@dimen/activity_horizontal_margin&quot;</div><div class="line">    android:paddingTop=&quot;@dimen/activity_vertical_margin&quot;</div><div class="line">    tools:context=&quot;com.abc.service.MainActivity&quot; &gt;</div><div class="line"></div><div class="line">    &lt;TextView</div><div class="line">        android:id=&quot;@+id/textView1&quot;</div><div class="line">        android:layout_width=&quot;wrap_content&quot;</div><div class="line">        android:layout_height=&quot;wrap_content&quot;</div><div class="line">        android:text=&quot;start:&quot; /&gt;</div><div class="line"></div><div class="line">    &lt;Button</div><div class="line">        android:id=&quot;@+id/start&quot;</div><div class="line">        android:onClick=&quot;doClick&quot;</div><div class="line">        android:layout_width=&quot;match_parent&quot;</div><div class="line">        android:layout_height=&quot;wrap_content&quot;</div><div class="line">        android:text=&quot;StartService&quot; /&gt;</div><div class="line"></div><div class="line">    &lt;Button</div><div class="line">        android:id=&quot;@+id/stop&quot;</div><div class="line">        android:onClick=&quot;doClick&quot;</div><div class="line">        android:layout_width=&quot;match_parent&quot;</div><div class="line">        android:layout_height=&quot;wrap_content&quot;</div><div class="line">        android:text=&quot;StopService&quot; /&gt;</div><div class="line"></div><div class="line">    &lt;TextView</div><div class="line">        android:id=&quot;@+id/textView2&quot;</div><div class="line">        android:layout_width=&quot;wrap_content&quot;</div><div class="line">        android:layout_height=&quot;wrap_content&quot;</div><div class="line">        android:text=&quot;Bind:&quot; /&gt;</div><div class="line"></div><div class="line">    &lt;Button</div><div class="line">        android:id=&quot;@+id/bind&quot;</div><div class="line">         android:onClick=&quot;doClick&quot;</div><div class="line">        android:layout_width=&quot;match_parent&quot;</div><div class="line">        android:layout_height=&quot;wrap_content&quot;</div><div class="line">        android:text=&quot;BindService&quot; /&gt;</div><div class="line"></div><div class="line">    &lt;Button</div><div class="line">        android:id=&quot;@+id/play&quot;</div><div class="line">        android:onClick=&quot;doClick&quot;</div><div class="line">        android:layout_width=&quot;match_parent&quot;</div><div class="line">        android:layout_height=&quot;wrap_content&quot;</div><div class="line">        android:text=&quot;播放&quot; /&gt;</div><div class="line"></div><div class="line">    &lt;Button</div><div class="line">        android:id=&quot;@+id/pause&quot;</div><div class="line">        android:onClick=&quot;doClick&quot;</div><div class="line">        android:layout_width=&quot;match_parent&quot;</div><div class="line">        android:layout_height=&quot;wrap_content&quot;</div><div class="line">        android:text=&quot;暂停&quot; /&gt;</div><div class="line"></div><div class="line">    &lt;Button</div><div class="line">        android:id=&quot;@+id/next&quot;</div><div class="line">         android:onClick=&quot;doClick&quot;</div><div class="line">        android:layout_width=&quot;match_parent&quot;</div><div class="line">        android:layout_height=&quot;wrap_content&quot;</div><div class="line">        android:text=&quot;下一首&quot; /&gt;</div><div class="line"></div><div class="line">    &lt;Button</div><div class="line">        android:id=&quot;@+id/pervious&quot;</div><div class="line">        android:onClick=&quot;doClick&quot;</div><div class="line">        android:layout_width=&quot;match_parent&quot;</div><div class="line">        android:layout_height=&quot;wrap_content&quot;</div><div class="line">        android:text=&quot;上一首&quot; /&gt;</div><div class="line"></div><div class="line">    &lt;Button</div><div class="line">        android:id=&quot;@+id/unbind&quot;</div><div class="line">        android:onClick=&quot;doClick&quot;</div><div class="line">        android:layout_width=&quot;match_parent&quot;</div><div class="line">        android:layout_height=&quot;wrap_content&quot;</div><div class="line">        android:text=&quot;UnBindService&quot; /&gt;</div><div class="line"></div><div class="line">&lt;/LinearLayout&gt;</div></pre></td></tr></table></figure>
<p>如图。</p>
<p><img src="http://img.blog.csdn.net/20170503214551276?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="样式"></p>
<p>MainActivity.java</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div></pre></td><td class="code"><pre><div class="line">package com.abc.service;</div><div class="line"></div><div class="line">import android.app.Activity;</div><div class="line">import android.content.Intent;</div><div class="line">import android.os.Bundle;</div><div class="line">import android.view.Menu;</div><div class="line">import android.view.MenuItem;</div><div class="line">import android.view.View;</div><div class="line"></div><div class="line">public class MainActivity extends Activity &#123;</div><div class="line">	Intent intent1;</div><div class="line"></div><div class="line">	@Override</div><div class="line">	protected void onCreate(Bundle savedInstanceState) &#123;</div><div class="line">		super.onCreate(savedInstanceState);</div><div class="line">		setContentView(R.layout.activity_main);</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	public void doClick(View v) &#123;</div><div class="line">		switch (v.getId()) &#123;</div><div class="line">		case R.id.start:</div><div class="line">			intent1 = new Intent(MainActivity.this, MyStartService.class);</div><div class="line">			startService(intent1);</div><div class="line">			break;</div><div class="line">		case R.id.stop:</div><div class="line">			stopService(intent1);</div><div class="line">			break;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	@Override</div><div class="line">	public boolean onCreateOptionsMenu(Menu menu) &#123;</div><div class="line">		// Inflate the menu; this adds items to the action bar if it is present.</div><div class="line">		getMenuInflater().inflate(R.menu.main, menu);</div><div class="line">		return true;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	@Override</div><div class="line">	public boolean onOptionsItemSelected(MenuItem item) &#123;</div><div class="line">		// Handle action bar item clicks here. The action bar will</div><div class="line">		// automatically handle clicks on the Home/Up button, so long</div><div class="line">		// as you specify a parent activity in AndroidManifest.xml.</div><div class="line">		int id = item.getItemId();</div><div class="line">		if (id == R.id.action_settings) &#123;</div><div class="line">			return true;</div><div class="line">		&#125;</div><div class="line">		return super.onOptionsItemSelected(item);</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>MyStartService.java</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div></pre></td><td class="code"><pre><div class="line">package com.abc.service;</div><div class="line"></div><div class="line">import android.app.Service;</div><div class="line">import android.content.Intent;</div><div class="line">import android.os.IBinder;</div><div class="line">import android.util.Log;</div><div class="line"></div><div class="line">public class MyStartService extends Service &#123;</div><div class="line">	@Override</div><div class="line">	public void onCreate() &#123;</div><div class="line">		// TODO Auto-generated method stub</div><div class="line">		Log.i(&quot;info&quot;, &quot;Service--onCreate()&quot;);</div><div class="line">		super.onCreate();</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	@Override</div><div class="line">	public int onStartCommand(Intent intent, int flags, int startId) &#123;</div><div class="line">		// TODO Auto-generated method stub</div><div class="line">		Log.i(&quot;info&quot;, &quot;Service--onStartCommand()&quot;);</div><div class="line">		return super.onStartCommand(intent, flags, startId);</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	@Override</div><div class="line">	public void onDestroy() &#123;</div><div class="line">		// TODO Auto-generated method stub</div><div class="line">		Log.i(&quot;info&quot;, &quot;Service--onDestroy()&quot;);</div><div class="line">		super.onDestroy();</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	@Override</div><div class="line">	public IBinder onBind(Intent intent) &#123;</div><div class="line">		// TODO Auto-generated method stub</div><div class="line">		Log.i(&quot;info&quot;, &quot;Service--onBind()&quot;);</div><div class="line">		return null;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>注册</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</div><div class="line">&lt;manifest xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;</div><div class="line">    package=&quot;com.abc.service&quot;</div><div class="line">    android:versionCode=&quot;1&quot;</div><div class="line">    android:versionName=&quot;1.0&quot; &gt;</div><div class="line"></div><div class="line">    &lt;uses-sdk</div><div class="line">        android:minSdkVersion=&quot;14&quot;</div><div class="line">        android:targetSdkVersion=&quot;25&quot; /&gt;</div><div class="line"></div><div class="line">    &lt;application</div><div class="line">        android:allowBackup=&quot;true&quot;</div><div class="line">        android:icon=&quot;@drawable/ic_launcher&quot;</div><div class="line">        android:label=&quot;@string/app_name&quot;</div><div class="line">        android:theme=&quot;@style/AppTheme&quot; &gt;</div><div class="line">        &lt;activity</div><div class="line">            android:name=&quot;.MainActivity&quot;</div><div class="line">            android:label=&quot;@string/app_name&quot; &gt;</div><div class="line">            &lt;intent-filter&gt;</div><div class="line">                &lt;action android:name=&quot;android.intent.action.MAIN&quot; /&gt;</div><div class="line"></div><div class="line">                &lt;category android:name=&quot;android.intent.category.LAUNCHER&quot; /&gt;</div><div class="line">            &lt;/intent-filter&gt;</div><div class="line">        &lt;/activity&gt;</div><div class="line">        &lt;service android:name=&quot;com.abc.service.MyStartService&quot;&gt;&lt;/service&gt;</div><div class="line">    &lt;/application&gt;</div><div class="line"></div><div class="line">&lt;/manifest&gt;</div></pre></td></tr></table></figure>
<p>可在LogCat中看到执行情况。</p>
<h1 id="bind启动"><a href="#Bind启动" class="headerlink" title="Bind启动"></a>Bind启动</h1><p>注册新类</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;service android:name=&quot;com.abc.service.MyBindService&quot;&gt;&lt;/service&gt;</div></pre></td></tr></table></figure>
<p>MyBindService.java</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div></pre></td><td class="code"><pre><div class="line">package com.abc.service;</div><div class="line"></div><div class="line">import android.app.Service;</div><div class="line">import android.content.Intent;</div><div class="line">import android.content.ServiceConnection;</div><div class="line">import android.os.Binder;</div><div class="line">import android.os.IBinder;</div><div class="line">import android.util.Log;</div><div class="line"></div><div class="line">public class MyBindService extends Service &#123;</div><div class="line">	@Override</div><div class="line">	public void onCreate() &#123;</div><div class="line">		// TODO Auto-generated method stub</div><div class="line">		super.onCreate();</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	public class MyBinder extends Binder &#123;</div><div class="line">		public MyBindService getService() &#123;</div><div class="line">			return MyBindService.this;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	@Override</div><div class="line">	public IBinder onBind(Intent intent) &#123;</div><div class="line">		// TODO Auto-generated method stub</div><div class="line">		Log.i(&quot;info&quot;, &quot;onBind--onCreate()&quot;);</div><div class="line">		return new MyBinder();</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	@Override</div><div class="line">	public void unbindService(ServiceConnection conn) &#123;</div><div class="line">		// TODO Auto-generated method stub</div><div class="line">		Log.i(&quot;info&quot;, &quot;BindService--unbindService()&quot;);</div><div class="line">		super.unbindService(conn);</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	@Override</div><div class="line">	public void onDestroy() &#123;</div><div class="line">		// TODO Auto-generated method stub</div><div class="line">		Log.i(&quot;info&quot;, &quot;BindService--onDestroy()&quot;);</div><div class="line">		super.onDestroy();</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	public void Play() &#123;</div><div class="line">		Log.i(&quot;info&quot;, &quot;播放&quot;);</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	public void Pause() &#123;</div><div class="line">		Log.i(&quot;info&quot;, &quot;暂停&quot;);</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	public void Pervious() &#123;</div><div class="line">		Log.i(&quot;info&quot;, &quot;上一首&quot;);</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	public void next() &#123;</div><div class="line">		Log.i(&quot;info&quot;, &quot;下一首&quot;);</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>MainActivity.java</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div></pre></td><td class="code"><pre><div class="line">package com.abc.service;</div><div class="line"></div><div class="line">import com.abc.service.MyBindService.MyBinder;</div><div class="line"></div><div class="line">import android.app.Activity;</div><div class="line">import android.app.Service;</div><div class="line">import android.content.ComponentName;</div><div class="line">import android.content.Intent;</div><div class="line">import android.content.ServiceConnection;</div><div class="line">import android.os.Bundle;</div><div class="line">import android.os.IBinder;</div><div class="line">import android.view.Menu;</div><div class="line">import android.view.MenuItem;</div><div class="line">import android.view.View;</div><div class="line"></div><div class="line">public class MainActivity extends Activity &#123;</div><div class="line">	Intent intent1;</div><div class="line">	Intent intent2;</div><div class="line">	MyBindService service;</div><div class="line">	ServiceConnection conn = new ServiceConnection() &#123;</div><div class="line"></div><div class="line">		@Override // 当启动源跟Service的连接意外丢失的时候会调用这个方法</div><div class="line">		// 比如当Service崩溃了或者被强行杀死了</div><div class="line">		public void onServiceDisconnected(ComponentName name) &#123;</div><div class="line">			// TODO Auto-generated method stub</div><div class="line"></div><div class="line">		&#125;</div><div class="line"></div><div class="line">		@Override // 当启动页跟Service成功连接之后将会在自动调用这个方法</div><div class="line">		public void onServiceConnected(ComponentName name, IBinder binder) &#123;</div><div class="line">			// TODO Auto-generated method stub</div><div class="line">			service = ((MyBinder) binder).getService();</div><div class="line">		&#125;</div><div class="line">	&#125;;</div><div class="line"></div><div class="line">	@Override</div><div class="line">	protected void onCreate(Bundle savedInstanceState) &#123;</div><div class="line">		super.onCreate(savedInstanceState);</div><div class="line">		setContentView(R.layout.activity_main);</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	public void doClick(View v) &#123;</div><div class="line">		switch (v.getId()) &#123;</div><div class="line">		case R.id.start:</div><div class="line">			intent1 = new Intent(MainActivity.this, MyStartService.class);</div><div class="line">			startService(intent1);</div><div class="line">			break;</div><div class="line"></div><div class="line">		case R.id.stop:</div><div class="line">			stopService(intent1);</div><div class="line">			break;</div><div class="line"></div><div class="line">		case R.id.play:</div><div class="line">			service.Play();</div><div class="line">			break;</div><div class="line"></div><div class="line">		case R.id.pause:</div><div class="line">			service.Pause();</div><div class="line">			break;</div><div class="line"></div><div class="line">		case R.id.pervious:</div><div class="line">			service.Pervious();</div><div class="line">			break;</div><div class="line"></div><div class="line">		case R.id.next:</div><div class="line">			service.next();</div><div class="line">			break;</div><div class="line"></div><div class="line">		case R.id.bind:</div><div class="line">			intent2 = new Intent(MainActivity.this, MyBindService.class);</div><div class="line">			bindService(intent2, conn, Service.BIND_AUTO_CREATE);</div><div class="line">			break;</div><div class="line"></div><div class="line">		case R.id.unbind:</div><div class="line">			unbindService(conn);</div><div class="line">			break;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	@Override</div><div class="line">	public boolean onCreateOptionsMenu(Menu menu) &#123;</div><div class="line">		// Inflate the menu; this adds items to the action bar if it is present.</div><div class="line">		getMenuInflater().inflate(R.menu.main, menu);</div><div class="line">		return true;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	@Override</div><div class="line">	public boolean onOptionsItemSelected(MenuItem item) &#123;</div><div class="line">		// Handle action bar item clicks here. The action bar will</div><div class="line">		// automatically handle clicks on the Home/Up button, so long</div><div class="line">		// as you specify a parent activity in AndroidManifest.xml.</div><div class="line">		int id = item.getItemId();</div><div class="line">		if (id == R.id.action_settings) &#123;</div><div class="line">			return true;</div><div class="line">		&#125;</div><div class="line">		return super.onOptionsItemSelected(item);</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><strong>UnBindService只能点击一次，否则会报错。</strong></p>
<h1 id="两种方法混用"><a href="#两种方法混用" class="headerlink" title="两种方法混用"></a>两种方法混用</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div></pre></td><td class="code"><pre><div class="line">package com.abc.service;</div><div class="line"></div><div class="line">import com.abc.service.MyBindService.MyBinder;</div><div class="line"></div><div class="line">import android.app.Activity;</div><div class="line">import android.app.Service;</div><div class="line">import android.content.ComponentName;</div><div class="line">import android.content.Intent;</div><div class="line">import android.content.ServiceConnection;</div><div class="line">import android.os.Bundle;</div><div class="line">import android.os.IBinder;</div><div class="line">import android.view.Menu;</div><div class="line">import android.view.MenuItem;</div><div class="line">import android.view.View;</div><div class="line"></div><div class="line">public class MainActivity extends Activity &#123;</div><div class="line">	Intent intent1;</div><div class="line">	Intent intent2;</div><div class="line">	MyBindService service;</div><div class="line">	ServiceConnection conn = new ServiceConnection() &#123;</div><div class="line"></div><div class="line">		@Override // 当启动源跟Service的连接意外丢失的时候会调用这个方法</div><div class="line">		// 比如当Service崩溃了或者被强行杀死了</div><div class="line">		public void onServiceDisconnected(ComponentName name) &#123;</div><div class="line">			// TODO Auto-generated method stub</div><div class="line"></div><div class="line">		&#125;</div><div class="line"></div><div class="line">		@Override // 当启动页跟Service成功连接之后将会在自动调用这个方法</div><div class="line">		public void onServiceConnected(ComponentName name, IBinder binder) &#123;</div><div class="line">			// TODO Auto-generated method stub</div><div class="line">			service = ((MyBinder) binder).getService();</div><div class="line">		&#125;</div><div class="line">	&#125;;</div><div class="line"></div><div class="line">	@Override</div><div class="line">	protected void onCreate(Bundle savedInstanceState) &#123;</div><div class="line">		super.onCreate(savedInstanceState);</div><div class="line">		setContentView(R.layout.activity_main);</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	public void doClick(View v) &#123;</div><div class="line">		switch (v.getId()) &#123;</div><div class="line">		case R.id.start:</div><div class="line">			intent1 = new Intent(MainActivity.this, MyStartService.class);</div><div class="line">			startService(intent1);</div><div class="line">			break;</div><div class="line"></div><div class="line">		case R.id.stop:</div><div class="line">			stopService(intent1);</div><div class="line">			break;</div><div class="line"></div><div class="line">		case R.id.play:</div><div class="line">			service.Play();</div><div class="line">			break;</div><div class="line"></div><div class="line">		case R.id.pause:</div><div class="line">			service.Pause();</div><div class="line">			break;</div><div class="line"></div><div class="line">		case R.id.pervious:</div><div class="line">			service.Pervious();</div><div class="line">			break;</div><div class="line"></div><div class="line">		case R.id.next:</div><div class="line">			service.next();</div><div class="line">			break;</div><div class="line"></div><div class="line">		case R.id.bind:</div><div class="line">			intent2 = new Intent(MainActivity.this, MyBindService.class);</div><div class="line">			startService(intent2);</div><div class="line">			bindService(intent2, conn, Service.BIND_AUTO_CREATE);</div><div class="line">			break;</div><div class="line"></div><div class="line">		case R.id.unbind:</div><div class="line">			unbindService(conn);</div><div class="line">			break;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	@Override</div><div class="line">	protected void onDestroy() &#123;</div><div class="line">		// TODO Auto-generated method stub</div><div class="line">		stopService(intent2);</div><div class="line">		unbindService(conn);</div><div class="line">		super.onDestroy();</div><div class="line">	&#125;</div><div class="line">	@Override</div><div class="line">	public boolean onCreateOptionsMenu(Menu menu) &#123;</div><div class="line">		// Inflate the menu; this adds items to the action bar if it is present.</div><div class="line">		getMenuInflater().inflate(R.menu.main, menu);</div><div class="line">		return true;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	@Override</div><div class="line">	public boolean onOptionsItemSelected(MenuItem item) &#123;</div><div class="line">		// Handle action bar item clicks here. The action bar will</div><div class="line">		// automatically handle clicks on the Home/Up button, so long</div><div class="line">		// as you specify a parent activity in AndroidManifest.xml.</div><div class="line">		int id = item.getItemId();</div><div class="line">		if (id == R.id.action_settings) &#123;</div><div class="line">			return true;</div><div class="line">		&#125;</div><div class="line">		return super.onOptionsItemSelected(item);</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
      
        <categories>
            
            <category> 互联网 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Android </tag>
            
            <tag> eclipse </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[MFC绘制时钟]]></title>
      <url>http://hubojing.github.io/2017/04/23/MFC%E7%BB%98%E5%88%B6%E6%97%B6%E9%92%9F/</url>
      <content type="html"><![CDATA[<div align="left"><br><img src="http://img.blog.csdn.net/20170424220400837?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" width="300" height="180" style="float:right;"><br><br> 　　使用GDI接口在视图上绘制一个时钟。<br>　　<br><br><br> </div>

<a id="more"></a>
<blockquote>
<p>　　GDI是Graphics Device Interface的缩写，含义是图形设备接口，它的主要任务是负责系统与绘图程序之间的信息交换，处理所有Windows程序的图形输出。<br>　　在Windows操作系统下，绝大多数具备图形界面的应用程序都离不开GDI，我们利用GDI所提供的众多函数就可以方便的在屏幕、打印机及其它输出设备上输出图形，文本等操作。<br>GDI函数大致可分类为：<br>　　设备上下文函数(如GetDC、CreateDC、DeleteDC)、 画线函数(如LineTo、Polyline、Arc)、填充画图函数(如Ellipse、FillRect、Pie)、画图属性函数(如SetBkColor、SetBkMode、SetTextColor)、文本、字体函数(如TextOut、GetFontData)、位图函数(如SetPixel、BitBlt、StretchBlt)、坐标函数(如DPtoLP、LPtoDP、ScreenToClient、ClientToScreen)、映射函数(如SetMapMode、SetWindowExtEx、SetViewportExtEx)、元文件函数(如PlayMetaFile、SetWinMetaFileBits)、区域函数(如FillRgn、FrameRgn、InvertRgn)、路径函数(如BeginPath、EndPath、StrokeAndFillPath)、裁剪函数(如SelectClipRgn、SelectClipPath)等。<br>                                            　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　——百度百科</p>
</blockquote>
<p>最初想法：<br>建立一个单文档工程，在OnDraw利用<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="function">CClientDC <span class="title">dc</span><span class="params">(<span class="keyword">this</span>)</span></span>;</div><div class="line">dc.Ellipse(CRect(<span class="number">100</span>,<span class="number">100</span>,<span class="number">500</span>,<span class="number">500</span>));</div></pre></td></tr></table></figure></p>
<p>画圆，但是打开的窗口太大了。于是，想初始化窗口，在CMainFrame里的PreCreateWindow设置窗口大小：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">BOOL CMainFrame::PreCreateWindow(CREATESTRUCT&amp; cs)</div><div class="line">&#123;</div><div class="line">	<span class="keyword">if</span>( !CFrameWnd::PreCreateWindow(cs) )</div><div class="line">		<span class="keyword">return</span> FALSE;</div><div class="line">	<span class="comment">// <span class="doctag">TODO:</span> Modify the Window class or styles here by modifying</span></div><div class="line">	<span class="comment">//  the CREATESTRUCT cs</span></div><div class="line">	cs.cx = <span class="number">630</span>;</div><div class="line">	cs.cy = <span class="number">680</span>;</div><div class="line"></div><div class="line">	<span class="keyword">return</span> TRUE;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>接下来画钟面上的格子。用MoveTo和LineTo确定线段起始点和终点。我用了一个比较蠢的方法：手算坐标！于是，产生了这样的代码：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">void</span> CClockView::OnDraw(CDC* pDC)</div><div class="line">&#123;</div><div class="line">	CClockDoc* pDoc = GetDocument();</div><div class="line">	ASSERT_VALID(pDoc);</div><div class="line">	<span class="comment">// <span class="doctag">TODO:</span> add draw code for native data here</span></div><div class="line">	<span class="function">CClientDC <span class="title">dc</span><span class="params">(<span class="keyword">this</span>)</span></span>;</div><div class="line">	dc.Ellipse(CRect(<span class="number">100</span>,<span class="number">100</span>,<span class="number">500</span>,<span class="number">500</span>));</div><div class="line">	<span class="comment">//上</span></div><div class="line">	dc.MoveTo(<span class="number">300</span>,<span class="number">140</span>);</div><div class="line">	dc.LineTo(<span class="number">300</span>,<span class="number">100</span>);</div><div class="line">	<span class="comment">//下</span></div><div class="line">	dc.MoveTo(<span class="number">300</span>,<span class="number">460</span>);</div><div class="line">	dc.LineTo(<span class="number">300</span>,<span class="number">500</span>);</div><div class="line">	<span class="comment">//左</span></div><div class="line">	dc.MoveTo(<span class="number">140</span>,<span class="number">300</span>);</div><div class="line">	dc.LineTo(<span class="number">100</span>,<span class="number">300</span>);</div><div class="line">	<span class="comment">//右</span></div><div class="line">	dc.MoveTo(<span class="number">460</span>,<span class="number">300</span>);</div><div class="line">	dc.LineTo(<span class="number">500</span>,<span class="number">300</span>);</div><div class="line">	<span class="comment">//第一区间第二点</span></div><div class="line">	dc.MoveTo(<span class="number">380</span>,<span class="number">300</span><span class="number">-80</span>*<span class="number">1.73</span>);</div><div class="line">	dc.LineTo(<span class="number">400</span>,<span class="number">300</span><span class="number">-100</span>*<span class="number">1.73</span>);</div><div class="line">	<span class="comment">//第一区间第三点</span></div><div class="line">	dc.MoveTo(<span class="number">300</span>+<span class="number">80</span>*<span class="number">1.73</span>,<span class="number">220</span>);</div><div class="line">	dc.LineTo(<span class="number">300</span>+<span class="number">100</span>*<span class="number">1.73</span>,<span class="number">200</span>);</div><div class="line">	<span class="comment">//第二区间第二点</span></div><div class="line">	dc.MoveTo(<span class="number">300</span>+<span class="number">80</span>*<span class="number">1.73</span>,<span class="number">380</span>);</div><div class="line">	dc.LineTo(<span class="number">300</span>+<span class="number">100</span>*<span class="number">1.73</span>,<span class="number">400</span>);</div><div class="line">	<span class="comment">//第二区间第三点</span></div><div class="line">	dc.MoveTo(<span class="number">380</span>,<span class="number">300</span>+<span class="number">80</span>*<span class="number">1.73</span>);</div><div class="line">	dc.LineTo(<span class="number">400</span>,<span class="number">300</span>+<span class="number">100</span>*<span class="number">1.73</span>);</div><div class="line">	<span class="comment">//第三区间第二点</span></div><div class="line">	dc.MoveTo(<span class="number">220</span>,<span class="number">300</span>+<span class="number">80</span>*<span class="number">1.73</span>);</div><div class="line">	dc.LineTo(<span class="number">200</span>,<span class="number">300</span>+<span class="number">100</span>*<span class="number">1.73</span>);</div><div class="line">	<span class="comment">//第三区间第三点</span></div><div class="line">	dc.MoveTo(<span class="number">300</span><span class="number">-80</span>*<span class="number">1.73</span>,<span class="number">380</span>);</div><div class="line">	dc.LineTo(<span class="number">300</span><span class="number">-100</span>*<span class="number">1.73</span>,<span class="number">400</span>);</div><div class="line">	<span class="comment">//第四区间第二点</span></div><div class="line">	dc.MoveTo(<span class="number">300</span><span class="number">-80</span>*<span class="number">1.73</span>,<span class="number">220</span>);</div><div class="line">	dc.LineTo(<span class="number">300</span><span class="number">-100</span>*<span class="number">1.73</span>,<span class="number">200</span>);</div><div class="line">	<span class="comment">//第四区间第三点</span></div><div class="line">	dc.MoveTo(<span class="number">220</span>,<span class="number">300</span><span class="number">-80</span>*<span class="number">1.73</span>);</div><div class="line">	dc.LineTo(<span class="number">200</span>,<span class="number">300</span><span class="number">-100</span>*<span class="number">1.73</span>);</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>[连三角函数都近似等于的我……等会儿会谈优化问题]</p>
<p>效果是这样：<br><img src="http://img.blog.csdn.net/20170423165107245?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<p>在视类添加ＷＭ_CREATE响应函数，设置一个定时器，1秒发送一次消息。<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">int</span> CClockView::OnCreate(LPCREATESTRUCT lpCreateStruct) </div><div class="line">&#123;</div><div class="line">	<span class="keyword">if</span> (CView::OnCreate(lpCreateStruct) == <span class="number">-1</span>)</div><div class="line">		<span class="keyword">return</span> <span class="number">-1</span>;</div><div class="line">	</div><div class="line">	<span class="comment">// <span class="doctag">TODO:</span> Add your specialized creation code here</span></div><div class="line">	SetTimer(<span class="number">1</span>, <span class="number">1000</span>, <span class="literal">NULL</span>);</div><div class="line"></div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>因为指针是在动的，所以要及时刷新页面，在视类添加WM_TIMER响应函数：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">void</span> CClockView::OnTimer(UINT nIDEvent) </div><div class="line">&#123;</div><div class="line">	<span class="comment">// <span class="doctag">TODO:</span> Add your message handler code here and/or call default</span></div><div class="line">	InvalidateRect(<span class="literal">NULL</span>, TRUE);</div><div class="line">	UpdateWindow();</div><div class="line"></div><div class="line">	CView::OnTimer(nIDEvent);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>为了和系统时间一致，就要获取时间，在OnDraw中加入：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">CTime Time = CTime::GetCurrentTime();</div></pre></td></tr></table></figure></p>
<p>接下来就是创建三个指针：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">double</span> Radians;</div><div class="line"></div><div class="line"><span class="comment">//时针</span></div><div class="line">Radians = Time.GetHour() + Time.GetMinute()/<span class="number">60.0</span> + Time.GetSecond()/<span class="number">3600.0</span>;</div><div class="line">Radians *= <span class="number">2</span> * <span class="number">3.14</span> / <span class="number">12.0</span>;</div><div class="line">dc.MoveTo(<span class="number">300</span>, <span class="number">300</span>);</div><div class="line">dc.LineTo(<span class="number">300</span> + (<span class="keyword">int</span>)((<span class="keyword">double</span>)<span class="number">100</span> * <span class="built_in">sin</span>(Radians)), <span class="number">300</span> - (<span class="keyword">int</span>)((<span class="keyword">double</span>)<span class="number">100</span> * <span class="built_in">cos</span>(Radians)));  <span class="comment">//取半径的1/2</span></div><div class="line"></div><div class="line"><span class="comment">//分针</span></div><div class="line">Radians = Time.GetMinute() + Time.GetSecond()/<span class="number">60</span>;</div><div class="line">Radians *= <span class="number">2</span> * <span class="number">3.14</span> / <span class="number">60.0</span>;</div><div class="line">dc.MoveTo(<span class="number">300</span>, <span class="number">300</span>);</div><div class="line">dc.LineTo(<span class="number">300</span> + (<span class="keyword">int</span>)((<span class="keyword">double</span>)<span class="number">150</span> * <span class="built_in">sin</span>(Radians)), <span class="number">300</span> - (<span class="keyword">int</span>)((<span class="keyword">double</span>)<span class="number">150</span> * <span class="built_in">cos</span>(Radians)));	<span class="comment">//取半径的3/4</span></div><div class="line"></div><div class="line"><span class="comment">//秒针</span></div><div class="line">Radians = Time.GetSecond();</div><div class="line">Radians *= <span class="number">2</span> * <span class="number">3.14</span> / <span class="number">60.0</span>;</div><div class="line">dc.MoveTo(<span class="number">300</span>, <span class="number">300</span>);</div><div class="line">dc.LineTo(<span class="number">300</span> + (<span class="keyword">int</span>)((<span class="keyword">double</span>)<span class="number">190</span> * <span class="built_in">sin</span>(Radians)), <span class="number">300</span> - (<span class="keyword">int</span>)((<span class="keyword">double</span>)<span class="number">190</span> * <span class="built_in">cos</span>(Radians))); <span class="comment">//取半径的19/20</span></div></pre></td></tr></table></figure></p>
<p>为了三角函数能用，在函数头部添加<code>#include &quot;math.h&quot;</code>。<br><img src="http://img.blog.csdn.net/20170423180359516?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<p>美化界面：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">BOOL CClockApp::InitInstance()</div><div class="line">&#123;</div><div class="line">…</div><div class="line">	m_pMainWnd-&gt;SetWindowText(<span class="string">"博靖牌时钟 V1.0"</span>);</div><div class="line"></div><div class="line">	<span class="keyword">return</span> TRUE;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>隐藏菜单、状态栏、工具条：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">int</span> CMainFrame::OnCreate(LPCREATESTRUCT lpCreateStruct)</div><div class="line">&#123;</div><div class="line">	…</div><div class="line">	</div><div class="line">	SetMenu(<span class="literal">NULL</span>); <span class="comment">//隐藏菜单  </span></div><div class="line">    ShowControlBar(&amp;m_wndToolBar,FALSE,FALSE); <span class="comment">//隐藏工具条  </span></div><div class="line">    ShowControlBar(&amp;m_wndStatusBar,FALSE,FALSE); <span class="comment">//隐藏状态栏  </span></div><div class="line"></div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>效果：<br><img src="http://img.blog.csdn.net/20170423202811199?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<p>详解：<br>InvalidateRect是一个函数，该函数向指定的窗体更新区域添加一个矩形，然后窗口客户区域的这一部分将被重新绘制。</p>
<p>ShowControlBar：<br>void ShowControlBar(CControlBar* pBar,BOOL bShow,Bool bDelay);<br>参数：<br>pBar 指向要显示或隐含的控件条<br>bShow 如果为TRUE ,指定控件条将显示；如果为FALSE，则隐藏。<br>bDelay 如果为TRUE，延迟显示控件条；如果为FALSE,则立即显示<br>说明：<br>调用该函数显示或隐藏一个控件条。</p>
<p>缺点：1.不能修改指针和线条样式（例如颜色、粗细等）。<br>2.窗口拉伸后，钟面不能随窗口拉伸。</p>
<p>改进版：<br><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div></pre></td><td class="code"><pre><div class="line">void CClock2View::OnDraw(CDC* pDC)</div><div class="line">&#123;</div><div class="line">	CClock2Doc* pDoc = GetDocument();</div><div class="line">	ASSERT_VALID(pDoc);</div><div class="line">	// TODO: add draw code for native data here</div><div class="line">	CRect r1;  </div><div class="line">    GetClientRect(&amp;r1);</div><div class="line">	</div><div class="line">	CTime Time = CTime::GetCurrentTime();  </div><div class="line">	</div><div class="line">	//创建画笔</div><div class="line">	CPen pen(PS_SOLID, 10, RGB(139, 115, 8));  </div><div class="line">	CPen *pOldPen = pDC-&gt;SelectObject(&amp;pen);  </div><div class="line">	</div><div class="line">	//创建钟面</div><div class="line">	pDC-&gt;Ellipse(CRect(30, 30, r1.right-30, r1.bottom-30));</div><div class="line">	CPoint pt = r1.CenterPoint();</div><div class="line">	pDC-&gt;SetTextColor(RGB(255,0,0));  </div><div class="line">	CString strNumber;</div><div class="line">	CSize size;</div><div class="line">	double Radians;</div><div class="line"></div><div class="line">	//设置钟面数字</div><div class="line">	 for (int i = 1; i &lt;= 12; i++)  </div><div class="line">    &#123;  </div><div class="line">        strNumber.Format("%d",i);</div><div class="line">		Radians = (double)i*2*3.14/12.0; </div><div class="line">        size = pDC-&gt;GetTextExtent(strNumber,strNumber.GetLength());  </div><div class="line">		//计算钟点放置位置 </div><div class="line">		//x = CenterX - (size.cx/2) + (int)((double)(CenterX - 20) * sin(Radians));  </div><div class="line">        //y = CenterY - (size.cy/2) - (int)((double)(CenterY - 20) * cos(Radians));  </div><div class="line"></div><div class="line">		double x = pt.x - (size.cx/2) + (int)((double)(pt.x - 70) * sin(Radians));  </div><div class="line">		double y = pt.y - (size.cy/2) - (int)((double)(pt.y - 70) * cos(Radians));  </div><div class="line"></div><div class="line">         </div><div class="line">       //double x = pt.x + (double)(r1.right - 50 - pt.x) * sin(Radians);  </div><div class="line">       //double y = pt.y - (double)(r1.bottom - 60 - pt.y) * cos(Radians);  </div><div class="line">        pDC-&gt;TextOut(x, y, strNumber);</div><div class="line"></div><div class="line">    &#125;  </div><div class="line"> 		</div><div class="line">	//设置钟面上的格子</div><div class="line">		</div><div class="line">	 for (int j = 1; j &lt;= 12; j++)  </div><div class="line">    &#123;  </div><div class="line">		Radians = (double)j*2*3.14/12.0; 	</div><div class="line">        int x = pt.x  + (int)((double)(pt.x - 30) * sin(Radians));  </div><div class="line">		int y = pt.y  - (int)((double)(pt.y - 30) * cos(Radians));  </div><div class="line">		int m = pt.x  + (int)((double)(pt.x - 50) * sin(Radians));  </div><div class="line">		int n = pt.y  - (int)((double)(pt.y - 50) * cos(Radians));  </div><div class="line">		pDC-&gt;MoveTo(m, n);</div><div class="line">		pDC-&gt;LineTo(x, y);</div><div class="line">		</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	//时针</div><div class="line">	 CPen HourPen(PS_SOLID, 6, RGB(255, 20, 147));  </div><div class="line">    pDC-&gt;SelectObject(&amp;HourPen);  </div><div class="line">	Radians = Time.GetHour() + Time.GetMinute()/60.0 + Time.GetSecond()/3600.0;</div><div class="line">	Radians *= 2 * 3.14 / 12.0;</div><div class="line">	pDC-&gt;MoveTo(pt.x, pt.y);  </div><div class="line">    pDC-&gt;LineTo(pt.x + (int)((double)(pt.x/3) * sin(Radians)), pt.y - (int)((double)(pt.y/3) * cos(Radians)));  </div><div class="line"></div><div class="line">	//分针</div><div class="line">	CPen MinPen(PS_SOLID, 4, RGB(78, 238, 148));  </div><div class="line">    pDC-&gt;SelectObject(&amp;MinPen);  </div><div class="line">	Radians = Time.GetMinute() + Time.GetSecond()/60;</div><div class="line">	Radians *= 2 * 3.14 / 60.0;</div><div class="line">	pDC-&gt;MoveTo(pt.x, pt.y);  </div><div class="line">    pDC-&gt;LineTo(pt.x + (int)((double)(pt.y*1/2) * sin(Radians)), pt.y - (int)((double)(pt.y*1/2) * cos(Radians)));  </div><div class="line"></div><div class="line">	//秒针</div><div class="line">	CPen SecPen(PS_SOLID, 2, RGB(0, 0, 205));  </div><div class="line">    pDC-&gt;SelectObject(&amp;SecPen); </div><div class="line">	Radians = Time.GetSecond();</div><div class="line">	Radians *= 2 * 3.14 / 60.0;</div><div class="line">	pDC-&gt;MoveTo(pt.x, pt.y);  </div><div class="line">    pDC-&gt;LineTo(pt.x + (int)((double)(pt.x*2/3) * sin(Radians)), pt.y - (int)((double)(pt.y*2/3) * cos(Radians)));  </div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>详解：<br>弧长公式：时针：α=l/r=(2πr/12)/r=2π/12  分针、秒针同理。<br>GetTextExtent<br>函数功能：使用该函数获得所选字体中指定字符串的高度和宽度<br>函数原型一：CSize GetTextExtent(LPCTSTR lpszString, int nCount) const；<br>参数：<br>lpszString是字符串的指针，也可以用CString 对象<br>nCount是指字符串的长度<br>函数原型二： CSize GetTextExtent( const CString&amp; str) const;<br>参数：<br>str是一个字符串对象，包含指定的字符。<br>返回值：<br>以逻辑单位返回字符串的尺寸，保存在一个CSize对象中。</p>
<p>TextOut，函数名。该函数用当前选择的字体、背景颜色和正文颜色将一个字符串写到指定位置。</p>
<p>效果：<br><img src="http://img.blog.csdn.net/20170424220400837?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<p>值得改进处：<br>1.每秒刷新时整个频幕闪动较大。<br>2.可以突出12、3、6、9的格子长度。<br>3.调整数字的大小和字体。<br>4.指针做的更美观，考虑用位图或图片替代。</p>
]]></content>
      
        <categories>
            
            <category> 互联网 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> MFC </tag>
            
            <tag> C++ </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[折腾才是人生]]></title>
      <url>http://hubojing.github.io/2017/04/21/%E6%8A%98%E8%85%BE%E6%89%8D%E6%98%AF%E4%BA%BA%E7%94%9F/</url>
      <content type="html"><![CDATA[<div align="left"><br><img src="https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1492716014892&di=39eb7cb27e728bbbea6be20b6d2501c8&imgtype=0&src=http%3A%2F%2Fjrsh.hangzhou.com.cn%2Fsale%2Fcontent%2Fattachement%2Fjpg%2Fsite2%2F20151215%2F90b11c6dae5a17da23d850.jpg" width="300" height="180" style="float:right;"><br><br> 　　其实是一篇吐槽贴和一个标准的Flag。<br>　　<br><br><br> </div>

<a id="more"></a>
<p>　　虽然现在天色已深，哦，应该说是凌晨了，明天还要早起。但！我真的还是想吐槽……</p>
<p>　　一篇文章怎么可以没有目录？ 啊？啊？啊？ 要我一篇上万字的文章怎么翻…… （于是抛弃了yilia,hueman）<br>（认真脸：我试过给hueman加目录的，一个toc函数，明明很简单的样子……然后就把主题玩崩了，其实要还原还是可以的，只是我对没目录的怨念很深呐）</p>
<p>　　为什么每一种主题评论的格式都不能统一一下……我终于找到每换一次主题就丢评论的解决方法了……（虽然数据量有点庞大，周末看有没有时间搞定）</p>
<p>　　为什么换个主题，不蒜子计数就从头开始！（尤其是近期更换频繁）现在都打算不显示点击数（网站点击和每篇文章浏览量）了（几千的点击噢，好气）……（百度统计什么的用过，然而还是直接显示出来方便（主要是显得网站有人气哈哈哈）其实到底有几个人看，无所谓啦~）</p>
<p>　　快五月了，好愁，多说到底用什么替换？？</p>
<p>　　另外，真的，图床贴图还没有CSDN博客上图来得方便。（比如刚才上传三十几张图，要是图床的话自己要不停复制外链，那效率可想而知。）</p>
<p>　　综上所述，<br>　　<strong>这都是自己不会写主题的后果！！！</strong></p>
<p>　　Flag: 　　<br>　　现在不敢说完全独立写一个主题出来（主要是时间、精力、学习工作、学习方向的问题），毕竟博客以文章质量为主，但我希望今年能修改出自己满意的样子来……</p>
<p><span id="busuanzi_container_page_pv"><br>本文已被阅读 <span id="busuanzi_value_page_pv"></span> 次。感谢您的点击！</span></p>
]]></content>
      
        <categories>
            
            <category> 杂谈 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 主题 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[MFC傻瓜式教程]]></title>
      <url>http://hubojing.github.io/2017/04/13/MFC%E5%82%BB%E7%93%9C%E5%BC%8F%E6%95%99%E7%A8%8B/</url>
      <content type="html"><![CDATA[<div align="left"><br><img src="http://img.blog.csdn.net/20170413231922633?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" width="300" height="180" style="float:right;"><br><br> </div>


<blockquote>
<p>2017.8.13已更新新章节</p>
</blockquote>
<p>　　<br>　　本教程重操作，轻理论，为操作减负。需了解详细原理的朋友可以自行看各种书籍。<br>　　直接上菜。</p>
<a id="more"></a>
<p>MFC：Microsoft Foundation Class ，微软基础类库。</p>
<h1 id="对话框"><a href="#对话框" class="headerlink" title="对话框"></a>对话框</h1><h2 id="对话框的创建和显示"><a href="#对话框的创建和显示" class="headerlink" title="对话框的创建和显示"></a>对话框的创建和显示</h2><ol>
<li>新建MFC AppWizard(exe)工程，单文档类型。工程名：Mybole。编译运行。<br><img src="http://img.blog.csdn.net/20170413231922633?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="新建"></li>
<li><p>点击帮助-关于Mybole。这是MFC自动创建的。<br><img src="http://img.blog.csdn.net/20170413231954758?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="关于"></p>
</li>
<li><p>创建自己的对话框。点击Insert-Resource。选择Dialog，点击New。VC++自动将其标识设置为IDD_DIALOG1，并自动添加到ResourceView-Dialog项中。Dialog项下还有一个对话框资源标识：IDD_ABOUTBOX，即上一步中的“关于”对话框。<br><img src="http://img.blog.csdn.net/20170413232035196?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="Insert Resource对话框"></p>
</li>
</ol>
<p> <img src="http://img.blog.csdn.net/20170413232222055?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="新建的对话框资源"></p>
<ol>
<li>选中对话框本身，右键点击属性。将Caption设置为“测试”。</li>
<li>选择View-ClassWizard，点击create a new class，OK。出现下图，并输入下图选项。<br><img src="http://img.blog.csdn.net/20170413232907845?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="New Class"></li>
<li>在随后出现的MFC ClassWizard对话框上点击OK。<br><img src="http://img.blog.csdn.net/20170413233804513?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="列表"><br><strong>注意</strong>：看看左侧类列表中是否添加好了CTestDlg，否则会影响后续操作。</li>
</ol>
<p>接下来，我们希望在程序中显示这个对话窗口。</p>
<ol>
<li><p>点击右侧菜单Menu，选中IDR_MAINFRAME。点击帮助旁边的虚线框。<br><img src="http://img.blog.csdn.net/20170413233914861?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="Menu"></p>
</li>
<li><p>对虚线框右键属性，修改为下图。<br><img src="http://img.blog.csdn.net/20170413234011986?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="属性"></p>
</li>
<li><p>关闭属性。点击View-ClassWizard（中文是建立类向导），选择CMyboleView，用COMMAND命令消息响应函数。如图。<br><img src="http://img.blog.csdn.net/20170414000004060?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="COMMAND"></p>
</li>
</ol>
<h3 id="模态对话框的创建"><a href="#模态对话框的创建" class="headerlink" title="模态对话框的创建"></a>模态对话框的创建</h3><p>　　需要调用CDialog类的成员函数：DoModal，它能创建并显示一个模态对话框，其返回值将作为CDialog类的另一个成员函数：EndDialog的参数，后者功能是关闭模态对话框。</p>
<p>　　在FileView中选择MyboleView.cpp，编写程序。<br>　　记得在开头添加头文件 #include “testdlg.h” （头文件大小写问题，linux区分，windows不区分）<br> <img src="http://img.blog.csdn.net/20170414000303079?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="编程"><br>　　显示模态对话框的具体实现代码：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">void</span> CMyboleView::OnDialog() </div><div class="line">&#123;</div><div class="line">	<span class="comment">// <span class="doctag">TODO:</span> Add your command handler code here</span></div><div class="line">	CTestDlg dlg;</div><div class="line">	dlg.DoModal();</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>编译运行，点击对话框。会发现若不确认该窗口，将无法点击其他窗口。<br> <img src="http://img.blog.csdn.net/20170414000500779?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="模态对话框1"></p>
<p><img src="http://img.blog.csdn.net/20170414000612202?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="模态对话框2"></p>
<h3 id="非模态对话框的创建"><a href="#非模态对话框的创建" class="headerlink" title="非模态对话框的创建"></a>非模态对话框的创建</h3><p>将上面的模态对话框代码注释掉。</p>
<p>改为：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">void</span> CMyboleView::OnDialog() </div><div class="line">&#123;</div><div class="line">	<span class="comment">// <span class="doctag">TODO:</span> Add your command handler code here</span></div><div class="line">	<span class="comment">//CTestDlg dlg;</span></div><div class="line">	<span class="comment">//dlg.DoModal();</span></div><div class="line"></div><div class="line">	CTestDlg *pDlg = <span class="keyword">new</span> CTestDlg;</div><div class="line">	pDlg-&gt;Create(IDD_DIALOG1,<span class="keyword">this</span>);</div><div class="line">	pDlg-&gt;ShowWindow(SW_SHOW);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p><strong>注意</strong>：需要把之前运行的对话框关掉才能编译成功。</p>
<p>然而，当它生命周期结束时，所保存的内存地址就丢失了，那么程序中也就无法再引用到它所指向的那块内存。于是，我们这样解决该问题。<br><img src="http://img.blog.csdn.net/20170414000901869?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="MFC ClassWizard"></p>
<p><strong>注意</strong>：Message里双击添加函数或者点击add Class…</p>
<p>void CTestDlg::PostNcDestroy()<br>{<br>    // TODO: Add your specialized code here and/or call the base class<br>    delete this;<br>    CDialog::PostNcDestroy();<br>}</p>
<p><strong>区别</strong>：点击确定，对话框都会消失。但是，模态对话框窗口对象被销毁了。对非模态对话框来说，只是隐藏起来了，并未被销毁。<br>因此，若要销毁对话框，若有一个ID为IDOK的按钮，就必须重写基类的OnOK这个虚函数，并在重写的函数中调用DestroyWindow函数，完成销毁。并不要再调用基类的OnOK函数。<br>同样地，若有一个ID为IDCANCEL的按钮，也必须重写基类的OnCancel虚函数，并在重写的函数中调用DestroyWindow函数，完成销毁。并不要再调用基类的OnCancel函数。</p>
<h1 id="动态创建按钮"><a href="#动态创建按钮" class="headerlink" title="动态创建按钮"></a>动态创建按钮</h1><p>注释掉非模态对话框代码，还原模态对话框代码。</p>
<p>点击ResourceView-IDD_DIALOG1，打开资源，用鼠标拖出控件面板上的Button按钮控件，对按钮右键，选择属性，设置如下。<br> <img src="http://img.blog.csdn.net/20170414001008658?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="按钮"></p>
<p>接下来，我们实现当单击Add按钮时，在对话框中动态创建一个按钮这一功能。</p>
<ol>
<li>为CTestDlg类添加一个私有的CButton成员变量。<br>　　点击ClassView标签页右键，如图点击。<br><img src="http://img.blog.csdn.net/20170414001252061?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="ClassView"></li>
</ol>
<p>　　填入信息。<br> <img src="http://img.blog.csdn.net/20170414001335972?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="添加成员变量"></p>
<ol>
<li>添加Add按钮单击消息的响应函数。<br>　　按钮点右键，选ClassWizard（建立类向导），如图。<br><img src="http://img.blog.csdn.net/20170414001137294?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="建立类向导"></li>
</ol>
<p>　　单击Edit Code，即可定位到该函数定义处。<br>　　添加一下代码：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">void</span> CTestDlg::OnBtnAdd() </div><div class="line">&#123;</div><div class="line">	<span class="comment">// <span class="doctag">TODO:</span> Add your control notification handler code here</span></div><div class="line">	m_btn.Create(<span class="string">"New"</span>,BS_DEFPUSHBUTTON | WS_VISIBLE | WS_CHILD,</div><div class="line">				 CRect(<span class="number">0</span>,<span class="number">0</span>,<span class="number">100</span>,<span class="number">100</span>),<span class="keyword">this</span>,<span class="number">123</span>);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>　　为避免多次点击Add出现非法操作，我们需要进行如下步骤。</p>
<ol>
<li><p>为CTestDlg类增加一个私有的BOOL类型成员变量。<br>变量类型：BOOL<br>变量名称：m_bIsCreated<br>Access: private</p>
</li>
<li><p>在TestDlg.cpp中找到构造函数，将m_bIsCreated初始为FALSE。如图所示。<br><img src="http://img.blog.csdn.net/20170415152155489?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
</li>
</ol>
<p>　　或者改为如下亦可。<br>Static BOOL bIsCreated = FALSE;</p>
<ol>
<li>回到Add，双击它，进入代码部分，改之。<figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">void</span> CTestDlg::OnBtnAdd() </div><div class="line">&#123;</div><div class="line">	<span class="comment">// <span class="doctag">TODO:</span> Add your control notification handler code here</span></div><div class="line">	<span class="keyword">if</span>(m_bIsCreated==FALSE)</div><div class="line">	&#123;</div><div class="line">	m_btn.Create(<span class="string">"New"</span>,BS_DEFPUSHBUTTON | WS_VISIBLE | WS_CHILD,</div><div class="line">				CRect(<span class="number">0</span>,<span class="number">0</span>,<span class="number">100</span>,<span class="number">100</span>),<span class="keyword">this</span>,<span class="number">123</span>);</div><div class="line">	m_bIsCreated = TRUE;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">else</span></div><div class="line">	&#123;</div><div class="line">		m_btn.DestroyWindow();</div><div class="line">		m_bIsCreated = FALSE;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
</ol>
<p>　　或者以下亦能实现。<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">void</span> CTestDlg::OnBtnAdd() </div><div class="line">&#123;</div><div class="line">	<span class="comment">// <span class="doctag">TODO:</span> Add your control notification handler code here</span></div><div class="line">	<span class="keyword">if</span>(!m_btn.m_hWnd)</div><div class="line">	&#123;</div><div class="line">	m_btn.Create(<span class="string">"New"</span>,BS_DEFPUSHBUTTON | WS_VISIBLE | WS_CHILD,</div><div class="line">				CRect(<span class="number">0</span>,<span class="number">0</span>,<span class="number">100</span>,<span class="number">100</span>),<span class="keyword">this</span>,<span class="number">123</span>);</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">else</span></div><div class="line">	&#123;</div><div class="line">		m_btn.DestroyWindow();</div><div class="line">	&#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>　　效果：<br>　　<img src="http://img.blog.csdn.net/20170415152224880?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<p>　　点击Add出现New窗口，再点击就销毁。</p>
<h2 id="控件的访问"><a href="#控件的访问" class="headerlink" title="控件的访问"></a>控件的访问</h2><h3 id="控件的调整"><a href="#控件的调整" class="headerlink" title="控件的调整"></a>控件的调整</h3><p>用Layout-Align，Layout-Make Same Size，Layout-Space Evenly里的选项进行调整。<br><img src="http://img.blog.csdn.net/20170415152247131?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<h3 id="静态文本控件"><a href="#静态文本控件" class="headerlink" title="静态文本控件"></a>静态文本控件</h3><p>　　查看三个静态文本框，它们ID相同。我们可以更改第一个静态文本框ID为IDC_NUMBER1，再打开ClassWizard，可以在ObjectIDs看到新ID。<br> <img src="http://img.blog.csdn.net/20170415152324147?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"><br>　　对BN_CLICKED进行Add Function，并Edit Code:</p>
<p>　　此时运行程序点击第一个静态文本框并没有反应。这是因为：<strong>静态文本控件在默认状态下是不发送通告消息的</strong>。</p>
<p>　　为了该控件能向父窗口发送鼠标事件，我们对该文本框右键-属性，切换到styles选项卡，勾上Notify。<br> <img src="http://img.blog.csdn.net/20170415152341882?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<p>　　现在可以显示了：<br>　　点击就改变。<br> <img src="http://img.blog.csdn.net/20170415152354773?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<p>　　<strong>总结：为了使一个静态文本控件能够响应鼠标单击消息，那么需要进行两个特殊的步骤：第一步，改变它的ID；第二步，在它的属性对话框中选中Notify选项。</strong></p>
<h3 id="编辑框控件"><a href="#编辑框控件" class="headerlink" title="编辑框控件"></a>编辑框控件</h3><p>利用上面的对话框实现这样的功能：在前两个编辑框中分别输入一个数字，然后单击Add按钮，对前两个编辑框中的数字求和，并将结果显示在第三个编辑框中。</p>
<h4 id="第一种方式"><a href="#第一种方式" class="headerlink" title="第一种方式"></a>第一种方式</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">void</span> CTestDlg::OnBtnAdd() </div><div class="line">&#123;</div><div class="line">	<span class="keyword">int</span> num1, num2, num3; </div><div class="line">	<span class="keyword">char</span> ch1[<span class="number">10</span>], ch2[<span class="number">10</span>], ch3[<span class="number">10</span>]; </div><div class="line">	GetDlgItem(IDC_EDIT1)-&gt;GetWindowText(ch1,<span class="number">10</span>); </div><div class="line">	GetDlgItem(IDC_EDIT2)-&gt;GetWindowText(ch2,<span class="number">10</span>);</div><div class="line"></div><div class="line">	num1 = atoi(ch1); </div><div class="line">	num2 = atoi(ch2); </div><div class="line">	num3 = num1 + num2; </div><div class="line"></div><div class="line">	itoa(num3,ch3,<span class="number">10</span>);</div><div class="line">	GetDlgItem(IDC_EDIT3)-&gt;SetWindowText(ch3);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>C语言转换函数：atoi 将一个由数字组成的字符串转换为相应的数值<br>itoa 数值转换为文本<br>itoa函数的第三个参数表示转换的进制，数字10表示十进制。</p>
<p>效果：<br> <img src="http://img.blog.csdn.net/20170415152409742?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<h4 id="第二种方式"><a href="#第二种方式" class="headerlink" title="第二种方式"></a>第二种方式</h4><p>　　代码如下：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">void</span> CTestDlg::OnBtnAdd() </div><div class="line">&#123;</div><div class="line">	<span class="keyword">int</span> num1, num2, num3; </div><div class="line">	<span class="keyword">char</span> ch1[<span class="number">10</span>], ch2[<span class="number">10</span>], ch3[<span class="number">10</span>]; </div><div class="line">	<span class="comment">//GetDlgItem(IDC_EDIT1)-&gt;GetWindowText(ch1,10); </span></div><div class="line">	<span class="comment">//GetDlgItem(IDC_EDIT2)-&gt;GetWindowText(ch2,10);</span></div><div class="line">	</div><div class="line">	GetDlgItemText(IDC_EDIT1,ch1,<span class="number">10</span>);</div><div class="line">	GetDlgItemText(IDC_EDIT2,ch2,<span class="number">10</span>);</div><div class="line"></div><div class="line">	num1 = atoi(ch1); </div><div class="line">	num2 = atoi(ch2); </div><div class="line">	num3 = num1 + num2; </div><div class="line"></div><div class="line">	itoa(num3,ch3,<span class="number">10</span>);</div><div class="line">	<span class="comment">//GetDlgItem(IDC_EDIT3)-&gt;SetWindowText(ch3);</span></div><div class="line">	SetDlgItemText(IDC_EDIT3,ch3);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>　　GetDlgItemText 将返回对话框中指定ID的控件上的文本，相当于将上面的GetDlgItem和GetWindowText这两个函数功能组合起来了。<br>与之对应的是SetDlgItemText，用来设置对话框中指定ID的控件上的文本。</p>
<h4 id="第三种方式"><a href="#第三种方式" class="headerlink" title="第三种方式"></a>第三种方式</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">void</span> CTestDlg::OnBtnAdd() </div><div class="line">&#123;</div><div class="line">	<span class="keyword">int</span> num1, num2, num3; </div><div class="line">	<span class="comment">//char ch1[10], ch2[10], ch3[10]; </span></div><div class="line">	<span class="comment">//GetDlgItem(IDC_EDIT1)-&gt;GetWindowText(ch1,10); </span></div><div class="line">	<span class="comment">//GetDlgItem(IDC_EDIT2)-&gt;GetWindowText(ch2,10);</span></div><div class="line">	</div><div class="line">	<span class="comment">//GetDlgItemText(IDC_EDIT1,ch1,10);</span></div><div class="line">	<span class="comment">//GetDlgItemText(IDC_EDIT2,ch2,10);</span></div><div class="line"></div><div class="line">	num1 = GetDlgItemInt(IDC_EDIT1);</div><div class="line">	num2 = GetDlgItemInt(IDC_EDIT2);</div><div class="line"></div><div class="line">	<span class="comment">//num1 = atoi(ch1); </span></div><div class="line">	<span class="comment">//num2 = atoi(ch2); </span></div><div class="line">	num3 = num1 + num2; </div><div class="line"></div><div class="line">	<span class="comment">//itoa(num3,ch3,10);</span></div><div class="line">	<span class="comment">//GetDlgItem(IDC_EDIT3)-&gt;SetWindowText(ch3);</span></div><div class="line">	<span class="comment">//SetDlgItemText(IDC_EDIT3,ch3);</span></div><div class="line">	SetDlgItemInt(IDC_EDIT3,num3);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="第四种方式"><a href="#第四种方式" class="headerlink" title="第四种方式"></a>第四种方式</h4><p>　　将这三个编辑框分别与对话框类的三个成员变量相关联，然后通过这些成员变量来检索和设置编辑框的文本，这是最简单的访问控件的方式。<br>打开ClassWizard对话框，切换到Member Variables选项卡，如图。<br> <img src="http://img.blog.csdn.net/20170415152431039?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"><br>　　首先为IDC_EDIT1编辑框添加一个关联的成员变量，方法是在Control IDs列表中选中IDC_EDIT1，再单击Add Variable按钮，如图。<br><img src="http://img.blog.csdn.net/20170415152451118?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"><br> <img src="http://img.blog.csdn.net/20170415152505259?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<p>　　同样地，为IDC_EDIT2和IDC_EDIT3分别添加好成员变量。<br>　　接着修改代码：</p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">void</span> CTestDlg::OnBtnAdd() </div><div class="line">&#123;</div><div class="line">	UpdateData();</div><div class="line">	m_num3 = m_num1 + m_num2;</div><div class="line">	UpdateData(FALSE);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>　　对编辑框控件中输入的数值设定一个范围：<br>　　打开ClassWizard-Member Variable，选中IDC_EDIT1，下方输入0和100。同样为IDC_EDIT2也设置好。<br><img src="http://img.blog.csdn.net/20170415152522025?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<h4 id="第五种方式"><a href="#第五种方式" class="headerlink" title="第五种方式"></a>第五种方式</h4><p>　　将编辑框控件再与一个变量相关联，代表控件本身。为IDC_EDIT1增加一个控件类型的变量：m_edit1，类别为Control。同样地，也为IDC_EDIT2和IDC_EDIT3添加。<br> <img src="http://img.blog.csdn.net/20170415152547447?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<p>　　修改代码：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">void</span> CTestDlg::OnBtnAdd() </div><div class="line">&#123;</div><div class="line">	<span class="keyword">int</span> num1, num2, num3; </div><div class="line">	<span class="keyword">char</span> ch1[<span class="number">10</span>], ch2[<span class="number">10</span>], ch3[<span class="number">10</span>]; </div><div class="line">	</div><div class="line">	m_edit1.GetWindowText(ch1,<span class="number">10</span>);</div><div class="line">	m_edit2.GetWindowText(ch2,<span class="number">10</span>);</div><div class="line"></div><div class="line">	<span class="comment">//num1 = GetDlgItemInt(IDC_EDIT1);</span></div><div class="line">	<span class="comment">//num2 = GetDlgItemInt(IDC_EDIT2);</span></div><div class="line"></div><div class="line">	num1 = atoi(ch1); </div><div class="line">	num2 = atoi(ch2); </div><div class="line">	num3 = num1 + num2; </div><div class="line"></div><div class="line">	itoa(num3,ch3,<span class="number">10</span>);</div><div class="line">	m_edit3.SetWindowText(ch3);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h4 id="第六种方式"><a href="#第六种方式" class="headerlink" title="第六种方式"></a>第六种方式</h4><p>　　修改代码：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">void</span> CTestDlg::OnBtnAdd() </div><div class="line">&#123;</div><div class="line">	<span class="keyword">int</span> num1, num2, num3; </div><div class="line">	<span class="keyword">char</span> ch1[<span class="number">10</span>], ch2[<span class="number">10</span>], ch3[<span class="number">10</span>]; </div><div class="line"></div><div class="line">	::SendMessage(GetDlgItem(IDC_EDIT1)-&gt;m_hWnd, WM_GETTEXT, <span class="number">10</span>, (LPARAM)ch1);</div><div class="line">	::SendMessage(m_edit2.m_hWnd, WM_GETTEXT, <span class="number">10</span>, (LPARAM)ch2);</div><div class="line"></div><div class="line">	num1 = atoi(ch1); </div><div class="line">	num2 = atoi(ch2); </div><div class="line">	num3 = num1 + num2; </div><div class="line"></div><div class="line">	itoa(num3,ch3,<span class="number">10</span>);</div><div class="line">	m_edit3.SendMessage(WM_SETTEXT, <span class="number">0</span>, (LPARAM)ch3);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h4 id="第七种方式"><a href="#第七种方式" class="headerlink" title="第七种方式"></a>第七种方式</h4><p>　　修改代码：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">void</span> CTestDlg::OnBtnAdd() </div><div class="line">&#123;</div><div class="line">	<span class="keyword">int</span> num1, num2, num3; </div><div class="line">	<span class="keyword">char</span> ch1[<span class="number">10</span>], ch2[<span class="number">10</span>], ch3[<span class="number">10</span>]; </div><div class="line">	</div><div class="line">	SendDlgItemMessage(IDC_EDIT1, WM_GETTEXT, <span class="number">10</span>, (LPARAM)ch1);</div><div class="line">	SendDlgItemMessage(IDC_EDIT2, WM_GETTEXT, <span class="number">10</span>, (LPARAM)ch2);</div><div class="line">	</div><div class="line">num1 = atoi(ch1); </div><div class="line">	num2 = atoi(ch2); </div><div class="line">	num3 = num1 + num2; </div><div class="line"></div><div class="line">	itoa(num3,ch3,<span class="number">10</span>);</div><div class="line">	SendDlgItemMessage(IDC_EDIT3, WM_SETTEXT, <span class="number">0</span>, (LPARAM)ch3);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>　　获得编辑框复选的内容：<br>　　在上述代码最后添加：<br>    SendDlgItemMessage(IDC_EDIT3, EM_SETSEL, 0, -1); //0,-1表示全选若1,3表示选中1-3位复选<br>    m_edit3.SetFocus();</p>
<p>　　效果：<br> <img src="http://img.blog.csdn.net/20170415152614010?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<h4 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h4><p>1    GetDlgItem()-&gt;Get(Set)WindowTest()<br>2    GetDlgItemText()/SetDlgItemText()<br>3    GetDlgItemInt()/SetDlgItemInt()<br>4    将控件和整型变量相关联<br>5    将控件和控件变量相关联<br>6    SendMessage()<br>7    SendDlgItemMessage()<br>　　最常用是1、4、5。在利用MFC编程时，6、7用得少。</p>
<h2 id="对话框伸缩功能的实现"><a href="#对话框伸缩功能的实现" class="headerlink" title="对话框伸缩功能的实现"></a>对话框伸缩功能的实现</h2><p>　　对话框上再添加一个按钮，Caption设置为“收缩&lt;&lt;”点击ClassWizard，添加一个命令相应函数（BN_CLICKED）。具体实现代码为：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">void</span> CTestDlg::OnButton1() </div><div class="line">&#123;</div><div class="line">	CString str; </div><div class="line">	<span class="keyword">if</span>(GetDlgItemText(IDC_BUTTON1,str), str == <span class="string">"收缩&lt;&lt;"</span>)</div><div class="line">	&#123;</div><div class="line">		SetDlgItemText(IDC_BUTTON1, <span class="string">"拓展&gt;&gt;"</span>);</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">else</span></div><div class="line">	&#123;</div><div class="line">		SetDlgItemText(IDC_BUTTON1, <span class="string">"收缩&lt;&lt;"</span>);</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>　　拖动一个图像控件来划分对话框中要动态切除的部分。<br> <img src="http://img.blog.csdn.net/20170415152648992?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<p>　　修改该控件ID为IDC_SEPATATOR，styles选项卡勾上Sunken选项。<br>　　修改代码：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">void</span> CTestDlg::OnButton1() </div><div class="line">&#123;</div><div class="line">	CString str; </div><div class="line">	<span class="keyword">if</span>(GetDlgItemText(IDC_BUTTON1,str), str == <span class="string">"收缩&lt;&lt;"</span>)</div><div class="line">	&#123;</div><div class="line">		SetDlgItemText(IDC_BUTTON1, <span class="string">"拓展&gt;&gt;"</span>);</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">else</span></div><div class="line">	&#123;</div><div class="line">		SetDlgItemText(IDC_BUTTON1, <span class="string">"收缩&lt;&lt;"</span>);</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">static</span> CRect rectLarge;</div><div class="line">	<span class="keyword">static</span> CRect rectSmall;</div><div class="line"></div><div class="line">	<span class="function">CRect <span class="title">rect1</span><span class="params">(<span class="number">10</span>,<span class="number">10</span>,<span class="number">10</span>,<span class="number">10</span>)</span></span>;</div><div class="line">	<span class="function">CRect <span class="title">rect2</span><span class="params">(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>)</span></span>;</div><div class="line"></div><div class="line">	<span class="keyword">if</span>(rectLarge.IsRectNull())</div><div class="line">	&#123;</div><div class="line">		CRect rectSeparator;</div><div class="line">		GetWindowRect(&amp;rectLarge);</div><div class="line">		GetDlgItem(IDC_SEPARATOR)-&gt;GetWindowRect(&amp;rectSeparator);</div><div class="line"></div><div class="line">		rectSmall.left=rectLarge.left;</div><div class="line">		rectSmall.top=rectLarge.top;</div><div class="line">		rectSmall.right=rectLarge.right;</div><div class="line">		rectSmall.bottom=rectSeparator.bottom;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">if</span>(str == <span class="string">"收缩&lt;&lt;"</span>)</div><div class="line">	&#123;</div><div class="line">		SetWindowPos(<span class="literal">NULL</span>, <span class="number">0</span>, <span class="number">0</span>, rectSmall.Width(), rectSmall.Height(), SWP_NOMOVE | SWP_NOZORDER);</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">else</span></div><div class="line">	&#123;</div><div class="line">		SetWindowPos(<span class="literal">NULL</span>, <span class="number">0</span>, <span class="number">0</span>, rectLarge.Width(), rectLarge.Height(), SWP_NOMOVE | SWP_NOZORDER);</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>　　效果：<br> <img src="http://img.blog.csdn.net/20170415152705855?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<p>　　点击“收缩&lt;&lt;”：<br> <img src="http://img.blog.csdn.net/20170415152725793?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<p>　　若希望隐藏分隔条，则设置属性去掉“Visible”前的勾。</p>
<h2 id="输入焦点的传递"><a href="#输入焦点的传递" class="headerlink" title="输入焦点的传递"></a>输入焦点的传递</h2><p>　　为了屏蔽掉默认的回车键关闭对话框这一功能，应该在对话框子类（此处是CTestDlg类）中重写OK按钮的消息响应函数。<br>　　首先点击OK按钮，添加鼠标单击消息响应函数。注释掉原有函数。</p>
<h3 id="法一"><a href="#法一" class="headerlink" title="法一"></a>法一</h3><p>　　在ClassView选项卡的CTestDlg类添加WM_INITDIALOG消息的响应函数。对类右键，选择Add Windows Message Handler，在弹出的框左侧选择WM_INITDIALOG，直接单击Add and Edit，跳转。<br>　　修改代码为：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">void</span> CTestDlg::OnOK() </div><div class="line">&#123;</div><div class="line">	<span class="comment">// <span class="doctag">TODO:</span> Add extra validation here</span></div><div class="line">	</div><div class="line">	<span class="comment">//CDialog::OnOK();</span></div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line">WNDPROC prevProc;</div><div class="line">	<span class="function">LRESULT CALLBACK <span class="title">NewEditProc</span><span class="params">(</span></span></div><div class="line">		HWND hwnd,</div><div class="line">		UINT uMsg,</div><div class="line">		WPARAM wParam,</div><div class="line">		LPARAM lParam</div><div class="line">		)</div><div class="line">	&#123;</div><div class="line">		<span class="keyword">if</span>(uMsg == WM_CHAR &amp;&amp; wParam == <span class="number">0x0d</span>)</div><div class="line">		&#123;</div><div class="line">			::SetFocus(GetNextWindow(hwnd,GW_HWNDNEXT));</div><div class="line">			<span class="keyword">return</span> <span class="number">1</span>;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">else</span></div><div class="line">		&#123;</div><div class="line">			<span class="keyword">return</span> prevProc(hwnd,uMsg,wParam,lParam);</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">BOOL CTestDlg::OnInitDialog() </div><div class="line">&#123;</div><div class="line">	CDialog::OnInitDialog();</div><div class="line">	prevProc=(WNDPROC)SetWindowLong(GetDlgItem(IDC_EDIT1)-&gt;m_hWnd,</div><div class="line">		GWL_WNDPROC, (LONG)NewEditProc);</div><div class="line">	<span class="keyword">return</span> TRUE;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>　　查看第一个编辑框的属性，打开styles选项卡，勾上MultiLine（多行）。即可实现焦点的传递。</p>
<h3 id="法二"><a href="#法二" class="headerlink" title="法二"></a>法二</h3><p>　　只需要改变一行代码：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">WNDPROC prevProc;</div><div class="line">	<span class="function">LRESULT CALLBACK <span class="title">NewEditProc</span><span class="params">(</span></span></div><div class="line">		HWND hwnd,</div><div class="line">		UINT uMsg,</div><div class="line">		WPARAM wParam,</div><div class="line">		LPARAM lParam</div><div class="line">		)</div><div class="line">	&#123;</div><div class="line">		<span class="keyword">if</span>(uMsg == WM_CHAR &amp;&amp; wParam == <span class="number">0x0d</span>)</div><div class="line">		&#123;</div><div class="line">			<span class="comment">//::SetFocus(GetNextWindow(hwnd,GW_HWNDNEXT));</span></div><div class="line">			SetFocus(::GetWindow(hwnd,GW_HWNDNEXT));</div><div class="line">			<span class="keyword">return</span> <span class="number">1</span>;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">else</span></div><div class="line">		&#123;</div><div class="line">			<span class="keyword">return</span> prevProc(hwnd,uMsg,wParam,lParam);</div><div class="line">		&#125;</div><div class="line">	&#125;</div></pre></td></tr></table></figure></p>
<h3 id="法三"><a href="#法三" class="headerlink" title="法三"></a>法三</h3><p>　　编辑框属性有一个WS_TABSTOP，如果勾选了，则在对话框中按下Tab键后，输入焦点可以转移到此控件上。</p>
<p>　　修改一行代码：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">WNDPROC prevProc;</div><div class="line">	<span class="function">LRESULT CALLBACK <span class="title">NewEditProc</span><span class="params">(</span></span></div><div class="line">		HWND hwnd,</div><div class="line">		UINT uMsg,</div><div class="line">		WPARAM wParam,</div><div class="line">		LPARAM lParam</div><div class="line">		)</div><div class="line">	&#123;</div><div class="line">		<span class="keyword">if</span>(uMsg == WM_CHAR &amp;&amp; wParam == <span class="number">0x0d</span>)</div><div class="line">		&#123;</div><div class="line">			SetFocus(::GetNextDlgTabItem(::GetParent(hwnd),hwnd,FALSE));</div><div class="line">			<span class="comment">//::SetFocus(GetNextWindow(hwnd,GW_HWNDNEXT));</span></div><div class="line">			<span class="comment">//SetFocus(::GetWindow(hwnd,GW_HWNDNEXT));</span></div><div class="line">			<span class="keyword">return</span> <span class="number">1</span>;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">else</span></div><div class="line">		&#123;</div><div class="line">			<span class="keyword">return</span> prevProc(hwnd,uMsg,wParam,lParam);</div><div class="line">		&#125;</div><div class="line">	&#125;</div></pre></td></tr></table></figure></p>
<p>　　三种方法的缺点：只修改了第一个编辑框的窗口过程，因此从第二到第三个编辑框的焦点转移无法实现，除非继续修改第二个编辑窗口。</p>
<p>　　再介绍一种方法解决这个问题。</p>
<h3 id="法四"><a href="#法四" class="headerlink" title="法四"></a>法四</h3><p>　　在MFC中，默认情况下，当在对话框窗口中按下回车键时，会调用对话框的默认按钮的响应函数，我们可以在此默认按钮的响应函数中把焦点依次向下传递。</p>
<p>　　首先取消第一个编辑框的MultiLine。<br>　　接着修改OnOK函数为：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">void</span> CTestDlg::OnOK() </div><div class="line">&#123;</div><div class="line">	<span class="comment">// <span class="doctag">TODO:</span> Add extra validation here</span></div><div class="line">	<span class="comment">//GetDlgItem(IDC_EDIT1)-&gt;GetNextWindow()-&gt;SetFocus();</span></div><div class="line">	<span class="comment">//GetFocus()-&gt;GetNextWindow()-&gt;SetFocus();</span></div><div class="line">	<span class="comment">//GetFocus()-&gt;GetWindow(GW_HWNDNEXT)-&gt;SetFocus();</span></div><div class="line">	GetNextDlgTabItem(GetFocus())-&gt;SetFocus();</div><div class="line">	<span class="comment">//CDialog::OnOK();</span></div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>　　注释掉的部分是各种失败的尝试，各有各的bug。现在程序是正常的。</p>
<pre><code>**注意：然而该屏蔽回车键的方法并非是常规做法，应该在PreTranslateMessage中进行拦截。（return TRUE即拦截）**
</code></pre><p>　　具体做法：<br>　　现在Testdlg.h中添加：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">class</span> CTestDlg : <span class="keyword">public</span> CDialog</div><div class="line">&#123;</div><div class="line"></div><div class="line"><span class="keyword">protected</span>:</div><div class="line">	<span class="function"><span class="keyword">virtual</span> BOOL <span class="title">PreTranslateMessage</span><span class="params">(MSG* pMsg)</span></span>;</div><div class="line"></div><div class="line"><span class="keyword">public</span>:</div><div class="line">	<span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">OnOK</span><span class="params">()</span></span>;</div><div class="line">……</div></pre></td></tr></table></figure></p>
<p>　　接着：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line">CTestDlg::PreTranslateMessage(MSG* pMsg)</div><div class="line">&#123;</div><div class="line">	<span class="comment">//屏蔽ESC关闭窗体</span></div><div class="line">	<span class="keyword">if</span> (pMsg-&gt;message == WM_KEYDOWN &amp;&amp; pMsg-&gt;wParam == VK_ESCAPE)</div><div class="line">	&#123;</div><div class="line">		<span class="keyword">return</span> TRUE;</div><div class="line">	&#125;</div><div class="line">	<span class="comment">//屏蔽回车关闭窗体，但会导致回车在窗体上失效.</span></div><div class="line">	<span class="comment">/*</span></div><div class="line">	if (pMsg-&gt;message == WM_KEYDOWN &amp;&amp; pMsg-&gt;wParam == VK_RETURN &amp;&amp; pMsg-&gt;wParam)</div><div class="line">	&#123;</div><div class="line">		return TRUE;</div><div class="line">	&#125;</div><div class="line">	*/</div><div class="line">	<span class="keyword">else</span> </div><div class="line">	&#123;</div><div class="line">		<span class="keyword">return</span> CDialog::PreTranslateMessage(pMsg);</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">void</span> CTestDlg::OnOK() </div><div class="line">&#123;</div><div class="line">	<span class="comment">// <span class="doctag">TODO:</span> Add extra validation here</span></div><div class="line">	</div><div class="line">	<span class="comment">//CDialog::OnOK();</span></div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>　　点击Layout-Tab order，这些序号就是各控件的Tab顺序。顺序可改变，依次点击希望的顺序控件即可。</p>
<p>　　调用顺序：当用户按下回车键时，Windows将查看对话框中是否存在指定的默认按钮，如果有，就调用该默认按钮单击消息的响应函数。如果没有，就会调用虚拟的OnOK函数，即使对话框没有包含默认的OK按钮（这个默认OK按钮的ID是IDOK）。</p>
<h1 id="文件和注册表操作"><a href="#文件和注册表操作" class="headerlink" title="文件和注册表操作"></a>文件和注册表操作</h1><h2 id="c语言对文件操作的支持"><a href="#C语言对文件操作的支持" class="headerlink" title="C语言对文件操作的支持"></a>C语言对文件操作的支持</h2><p>　　新建单文档类型的MFC应用程序，工程名为File，并为主菜单添加一个子菜单，名称为“文件操作”，然后为其添加两个菜单项，并分别为它们添加相应的命令响应函数（通过COMMAND），让CFileView类接收这些菜单项的命令响应。<br> <img src="http://img.blog.csdn.net/20170420224900928?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"><br> <img src="http://img.blog.csdn.net/20170420224921428?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<h3 id="文件的打开和写入"><a href="#文件的打开和写入" class="headerlink" title="文件的打开和写入"></a>文件的打开和写入</h3><p>　　代码：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">void</span> CFileView::OnFileWrite() </div><div class="line">&#123;</div><div class="line">	FILE *pFile = fopen(<span class="string">"1.txt"</span>,<span class="string">"w"</span>);</div><div class="line">	fwrite(<span class="string">"http://www.sunxin.org"</span>, <span class="number">1</span>, <span class="built_in">strlen</span>(<span class="string">"http://www.sunxin.org"</span>), pFile); </div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>　　编译后可看到文件夹中生成了1.txt，打开有一行网址。</p>
<h3 id="文件的关闭"><a href="#文件的关闭" class="headerlink" title="文件的关闭"></a>文件的关闭</h3><p>　　增加一行代码：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">void</span> CFileView::OnFileWrite() </div><div class="line">&#123;</div><div class="line">	FILE *pFile = fopen(<span class="string">"1.txt"</span>,<span class="string">"w"</span>);</div><div class="line">	fwrite(<span class="string">"http://www.sunxin.org"</span>, <span class="number">1</span>, <span class="built_in">strlen</span>(<span class="string">"http://www.sunxin.org"</span>), pFile); </div><div class="line">	fclose(pFile);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h3 id="文件指针定位"><a href="#文件指针定位" class="headerlink" title="文件指针定位"></a>文件指针定位</h3><p>　　代码：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">void</span> CFileView::OnFileWrite() </div><div class="line">&#123;</div><div class="line">	FILE *pFile = fopen(<span class="string">"1.txt"</span>,<span class="string">"w"</span>);</div><div class="line">	fwrite(<span class="string">"http://www.sunxin.org"</span>, <span class="number">1</span>, <span class="built_in">strlen</span>(<span class="string">"http://www.sunxin.org"</span>), pFile); </div><div class="line">	fwrite(<span class="string">"欢迎访问"</span>, <span class="number">1</span>, <span class="built_in">strlen</span>(<span class="string">"欢迎访问"</span>), pFile);</div><div class="line">	fclose(pFile);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>　　显示：<a href="http://www.sunxin.org欢迎访问" target="_blank" rel="external">http://www.sunxin.org欢迎访问</a></p>
<p>　　将文件指针移动到文件的开始位置处：<br>　　代码：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">void</span> CFileView::OnFileWrite() </div><div class="line">&#123;</div><div class="line">	FILE *pFile = fopen(<span class="string">"1.txt"</span>,<span class="string">"w"</span>);</div><div class="line">	fwrite(<span class="string">"http://www.sunxin.org"</span>, <span class="number">1</span>, <span class="built_in">strlen</span>(<span class="string">"http://www.sunxin.org"</span>), pFile); </div><div class="line">	fseek(pFile, <span class="number">0</span>, SEEK_SET);</div><div class="line">	fwrite(<span class="string">"ftp:"</span>, <span class="number">1</span>, <span class="built_in">strlen</span>(<span class="string">"ftp:"</span>),pFile);</div><div class="line">	<span class="comment">//fwrite("欢迎访问", 1, strlen("欢迎访问"), pFile);</span></div><div class="line">	fclose(pFile);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>　　显示：ftp:://www.sunxin.org</p>
<h3 id="文件的读取"><a href="#文件的读取" class="headerlink" title="文件的读取"></a>文件的读取</h3><p>　　在OnFileRead函数中写入代码：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">void</span> CFileView::OnFileRead() </div><div class="line">&#123;</div><div class="line">	FILE *pFile = fopen(<span class="string">"1.txt"</span>,<span class="string">"r"</span>);</div><div class="line">	<span class="keyword">char</span> ch[<span class="number">100</span>];</div><div class="line">	fread(ch, <span class="number">1</span>, <span class="number">100</span>, pFile);</div><div class="line">	fclose(pFile);</div><div class="line">	MessageBox(ch);</div><div class="line">	</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>　　编译运行：<br>　　<br> <img src="http://img.blog.csdn.net/20170420224951225?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<p>　　原因：C语言以“\0”结束。</p>
<p>　　解决方法：<br>　　法一：<br>　　修改代码：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">void</span> CFileView::OnFileWrite() </div><div class="line">&#123;</div><div class="line">	FILE *pFile = fopen(<span class="string">"1.txt"</span>,<span class="string">"w"</span>);</div><div class="line">	<span class="keyword">char</span> buf[<span class="number">22</span>] = <span class="string">"http://www.sunxin.org"</span>;</div><div class="line">	buf[<span class="number">21</span>] = <span class="string">'\0'</span>;</div><div class="line">	fwrite(buf, <span class="number">1</span>, <span class="number">22</span>, pFile);</div><div class="line">	fclose(pFile);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>　　先点击写入文件，再点击读取文件，就可以看到正确的内容。<br>　　缺点：增加了文件大小。</p>
<p>法二：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">void</span> CFileView::OnFileRead() </div><div class="line">&#123;</div><div class="line">	FILE *pFile = fopen(<span class="string">"1.txt"</span>,<span class="string">"r"</span>);</div><div class="line">	<span class="keyword">char</span> ch[<span class="number">100</span>];</div><div class="line">	<span class="built_in">memset</span>(ch, <span class="number">0</span>, <span class="number">100</span>);</div><div class="line">	fread(ch, <span class="number">1</span>, <span class="number">100</span>, pFile);</div><div class="line">	fclose(pFile);</div><div class="line">	MessageBox(ch);</div><div class="line">	</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>法三：<br>　　读取文件时，不知道文件大小时的做法。<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">void</span> CFileView::OnFileRead() </div><div class="line">&#123;</div><div class="line">	FILE *pFile = fopen(<span class="string">"1.txt"</span>,<span class="string">"r"</span>);</div><div class="line">	<span class="keyword">char</span> *pBuf;</div><div class="line">	fseek(pFile, <span class="number">0</span>, SEEK_END);</div><div class="line">	<span class="keyword">int</span> len=ftell(pFile);</div><div class="line">	pBuf = <span class="keyword">new</span> <span class="keyword">char</span>[len+<span class="number">1</span>];</div><div class="line">	rewind(pFile);</div><div class="line">	fread(pBuf, <span class="number">1</span>, len, pFile);</div><div class="line">	pBuf[len] = <span class="number">0</span>;</div><div class="line">	fclose(pFile);</div><div class="line">	MessageBox(pBuf);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h3 id="二进制文件和文本文件"><a href="#二进制文件和文本文件" class="headerlink" title="二进制文件和文本文件"></a>二进制文件和文本文件</h3><p>　　代码：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">void</span> CFileView::OnFileWrite() </div><div class="line">&#123;</div><div class="line">	FILE *pFile = fopen(<span class="string">"2.txt"</span>, <span class="string">"w"</span>);</div><div class="line">	<span class="keyword">char</span> ch[<span class="number">3</span>];</div><div class="line">	ch[<span class="number">0</span>] = <span class="string">'a'</span>;</div><div class="line">	ch[<span class="number">1</span>] = <span class="number">10</span>;</div><div class="line">	ch[<span class="number">2</span>] = <span class="string">'b'</span>;</div><div class="line">	fwrite(ch, <span class="number">1</span>, <span class="number">3</span>, pFile);</div><div class="line">	fclose(pFile);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">void</span> CFileView::OnFileRead() </div><div class="line">&#123;</div><div class="line">	FILE *pFile = fopen(<span class="string">"2.txt"</span>,<span class="string">"r"</span>);</div><div class="line">	<span class="keyword">char</span> ch[<span class="number">100</span>];</div><div class="line">	fread(ch, <span class="number">1</span>, <span class="number">3</span>, pFile);</div><div class="line">	ch[<span class="number">3</span>] = <span class="number">0</span>;</div><div class="line">	fclose(pFile);</div><div class="line">	MessageBox(ch);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>　　效果：<br>　　<br> <img src="http://img.blog.csdn.net/20170420225018961?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<p>　　文本方式：10实际上是换行符的ASCII码。</p>
<p>　　以文本方式和二进制方式读取文件是有明显的区别的。</p>
<h3 id="文本方式和二进制方式"><a href="#文本方式和二进制方式" class="headerlink" title="文本方式和二进制方式"></a>文本方式和二进制方式</h3><p>　　二进制方式：换行是由两个字符组成的，即ASCII码10（回车符）和13（换行符）。<br>　　写入和读取文件时要保持一致。如果采用文本方式写入，应采用文本方式读取；如果采用二进制方式写入数据，在读取时也应采用二进制方式。</p>
<p>　　面试题：给你一个整数，如：98341，将这个整数保存到文件中，要求在以记事本程序打开该文件时，显示的是：98341。<br>　　法一：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">void</span> CFileView::OnFileWrite() </div><div class="line">&#123;</div><div class="line">	FILE *pFile = fopen(<span class="string">"3.txt"</span>, <span class="string">"w"</span>);</div><div class="line">	<span class="keyword">char</span> ch[<span class="number">5</span>];</div><div class="line">	ch[<span class="number">0</span>] = <span class="number">9</span> + <span class="number">48</span>;</div><div class="line">	ch[<span class="number">1</span>] = <span class="number">8</span> + <span class="number">48</span>;</div><div class="line">	ch[<span class="number">2</span>] = <span class="number">3</span> + <span class="number">48</span>;</div><div class="line">	ch[<span class="number">3</span>] = <span class="number">4</span> + <span class="number">48</span>;</div><div class="line">	ch[<span class="number">4</span>] = <span class="number">1</span> + <span class="number">48</span>;</div><div class="line"></div><div class="line">	fwrite(ch, <span class="number">1</span>, <span class="number">5</span>, pFile);</div><div class="line">	fclose(pFile);</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>　　或</p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">void</span> CFileView::OnFileWrite() </div><div class="line">&#123;</div><div class="line">	FILE *pFile = fopen(<span class="string">"3.txt"</span>, <span class="string">"w"</span>);</div><div class="line">	<span class="keyword">int</span> i = <span class="number">98341</span>;</div><div class="line">	<span class="keyword">char</span> ch[<span class="number">5</span>];</div><div class="line">	itoa(i, ch, <span class="number">10</span>);</div><div class="line"></div><div class="line">	fwrite(ch, <span class="number">1</span>, <span class="number">5</span>, pFile);</div><div class="line">	fclose(pFile);</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>　　面试题：给定一个字符串，其中既有数字字符，又有26个英文字母中的几个字符，让你判断一下哪些是数字字符。</p>
<p>　　对这种问题，实际上就是判断各字符的ASCII码，对于数字字符来说，它们的ASCII码大于等于48，小于等于57。</p>
<h2 id="c对文件操作的支持"><a href="#C-对文件操作的支持" class="headerlink" title="C++对文件操作的支持"></a>C++对文件操作的支持</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">void</span> CFileView::OnFileWrite() </div><div class="line">&#123;</div><div class="line">	<span class="function">ofstream <span class="title">ofs</span><span class="params">(<span class="string">"4.txt"</span>)</span></span>;</div><div class="line">	ofs.write(<span class="string">"http://www.sunxin.org"</span>,<span class="built_in">strlen</span>(<span class="string">"http://www.sunxin.org"</span>));</div><div class="line">	ofs.close;</div><div class="line"></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">void</span> CFileView::OnFileRead() </div><div class="line">&#123;</div><div class="line">	<span class="function">ifstream <span class="title">ifs</span><span class="params">(<span class="string">"4.txt"</span>)</span></span>;</div><div class="line">	<span class="keyword">char</span> ch[<span class="number">100</span>];</div><div class="line">	<span class="built_in">memset</span>(ch, <span class="number">0</span>, <span class="number">100</span>);</div><div class="line">	ifs.read(ch,<span class="number">100</span>);</div><div class="line">	ifs.close();</div><div class="line">	MessageBox(ch);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="win32-api-对文件操作的支持"><a href="#Win32-API-对文件操作的支持" class="headerlink" title="Win32 API 对文件操作的支持"></a>Win32 API 对文件操作的支持</h2><h3 id="文件的创建-打开和写入"><a href="#文件的创建、打开和写入" class="headerlink" title="文件的创建、打开和写入"></a>文件的创建、打开和写入</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">void</span> CFileView::OnFileWrite() </div><div class="line">&#123;</div><div class="line">	<span class="comment">//定义一个句柄变量</span></div><div class="line">	HANDLE hFile;</div><div class="line">	<span class="comment">//创建文件</span></div><div class="line">	hFile = CreateFile(<span class="string">"5.txt"</span>, GENERIC_WRITE, <span class="number">0</span>, <span class="literal">NULL</span>, CREATE_NEW, </div><div class="line">		FILE_ATTRIBUTE_NORMAL, <span class="literal">NULL</span>);</div><div class="line">	<span class="comment">//接收实际写入的字节数</span></div><div class="line">	DWORD dwWrites;</div><div class="line">	<span class="comment">//写入数据</span></div><div class="line">	WriteFile(hFile,<span class="string">"http://www.sunxin.org"</span>,<span class="built_in">strlen</span>(<span class="string">"http://www.sunxin.org"</span>),</div><div class="line">		&amp;dwWrites, <span class="literal">NULL</span>);</div><div class="line">	<span class="comment">//关闭文件句柄</span></div><div class="line">	CloseHandle(hFile);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="文件的读取"><a href="#文件的读取-1" class="headerlink" title="文件的读取"></a>文件的读取</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">void</span> CFileView::OnFileRead() </div><div class="line">&#123;</div><div class="line">	HANDLE hFile;</div><div class="line">	<span class="comment">//打开文件</span></div><div class="line">	hFile = CreateFile(<span class="string">"5.txt"</span>, GENERIC_READ, <span class="number">0</span>, <span class="literal">NULL</span>, OPEN_EXISTING, FILE_ATTRIBUTE_NORMAL, <span class="literal">NULL</span>);</div><div class="line">	<span class="comment">//接收实际收到的数据</span></div><div class="line">	<span class="keyword">char</span> ch[<span class="number">100</span>];</div><div class="line">	<span class="comment">//接收实际读取到的字节数</span></div><div class="line">	DWORD dwReads;</div><div class="line">	<span class="comment">//读取数据</span></div><div class="line">	ReadFile(hFile, ch, <span class="number">100</span>, &amp;dwReads, <span class="literal">NULL</span>);</div><div class="line">	<span class="comment">//设置字符串结束字符</span></div><div class="line">	ch[dwReads] = <span class="number">0</span>;</div><div class="line">	<span class="comment">//关闭打开的文件对象的句柄</span></div><div class="line">	CloseHandle(hFile);</div><div class="line">	<span class="comment">//显示读取到的数据</span></div><div class="line">	MessageBox(ch);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h1 id="菜单"><a href="#菜单" class="headerlink" title="菜单"></a>菜单</h1><h2 id="菜单命令响应函数"><a href="#菜单命令响应函数" class="headerlink" title="菜单命令响应函数"></a>菜单命令响应函数</h2><p>　　新建一个单文档的MFC AppWizard(exe)工程，工程名为Menu。Build运行。</p>
<p> <img src="http://img.blog.csdn.net/20170420225058617?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"><br>　　左上角点击按钮，可以让属性框始终显示，不会因为点击对话框以外的地方就消失。<br>　　去掉Pop-up弹出前的勾，将ID改为ID_TEST。给Test添加响应函数在CMainFrame中，在函数中加入    MessageBox(“MainFrame Clicked”);<br>　　效果：<br> <img src="http://img.blog.csdn.net/20170420225116851?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<h2 id="菜单命令的路由"><a href="#菜单命令的路由" class="headerlink" title="菜单命令的路由"></a>菜单命令的路由</h2><h3 id="程序类对菜单命令的响应顺序"><a href="#程序类对菜单命令的响应顺序" class="headerlink" title="程序类对菜单命令的响应顺序"></a>程序类对菜单命令的响应顺序</h3><p>　　响应Test<br>　　菜单项命令的顺序依次是：视类、文档类、框架类，最后才是应用程序类。</p>
<h3 id="windows消息的分类"><a href="#Windows消息的分类" class="headerlink" title="Windows消息的分类"></a>Windows消息的分类</h3><p>　　凡是从CWnd派生的类，它们既可以接收标准消息，也可以接收命令消息和通告消息。而对于那些从CCmdTarget派生的类，则只能接收命令消息和通告消息，不能接收标准消息。<br>本例中的文档类（CMenuDoc）和应用程序类（CWinApp），因为它们都派生于CCmdTarget类，所以它们可以接收菜单命令消息。但它们不是从CWnd类派生的，所以不能接收标准消息。</p>
<h3 id="菜单命令的路由"><a href="#菜单命令的路由-1" class="headerlink" title="菜单命令的路由"></a>菜单命令的路由</h3><p>　　菜单命令消息路由的具体过程：当点击某个菜单项时，最先接收到这个菜单命令消息的是框架类。框架类将把接收到的这个消息交给它的子窗口，即视类，由视类首先进行处理。视类首先根据命令消息映射机制查找自身是否对此消息进行了响应，如果响应了，就调用相应响应函数对这个消息进行处理，消息路由过程结束；如果视类没有对此命令消息做出响应，就交由文档类，文档类同样查找自身是否对这个菜单命令进行了响应，如果响应了，就由文档类的命令消息响应函数进行处理，路由过程结束。如果文档类也未做出响应，就把这个命令消息交还给视类，后者又把该消息交还给框架类。框架类查看自己是否对这个命令消息进行了响应，如果它也没有做出响应，就把这个菜单命令消息交给应用程序类，由后者来进行处理。</p>
<h2 id="基本菜单操作"><a href="#基本菜单操作" class="headerlink" title="基本菜单操作"></a>基本菜单操作</h2><h3 id="标记菜单"><a href="#标记菜单" class="headerlink" title="标记菜单"></a>标记菜单</h3><p>　　运行刚才创建的Menu程序，点击查看，前面都有一个对号，这种类型就是标记菜单。<br>在CMainFrame类的OnCreate的return语句之前添加这句代码    GetMenu()-&gt;GetSubMenu(0)-&gt;CheckMenuItem(0, MF_BYPOSITION | MF_CHECKED);  或者GetMenu()-&gt;GetSubMenu(0)-&gt;CheckMenuItem(ID_FILE_NEW, MF_BYCOMMAND | MF_CHECKED);<br>　　Build并运行，可发现新建左边已添加一个复选标记。</p>
<h3 id="默认菜单项"><a href="#默认菜单项" class="headerlink" title="默认菜单项"></a>默认菜单项</h3><p>　　在刚才的代码下，添加    GetMenu()-&gt;GetSubMenu(0)-&gt;SetDefaultItem(1, TRUE); 或者GetMenu()-&gt;GetSubMenu(0)-&gt;SetDefaultItem(ID_FILE_OPEN,  FALSE);  编译运行，会发现“打开”变成了粗体。</p>
<p>　　<strong>注意：“打印”的索引是5，不是4。计算菜单项索引时，一定要把分割栏菜单项计算在内。并且，一个子菜单只能有一个默认菜单项。</strong></p>
<h3 id="图形标记菜单"><a href="#图形标记菜单" class="headerlink" title="图形标记菜单"></a>图形标记菜单</h3><p>　　Insert-Resource-Bitmap，创建一个位图资源。如图。<br> <img src="http://img.blog.csdn.net/20170420225150945?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"><br>　　为CMainFrame类添加一个CBitmap类型的成员变量：m_bitmap。</p>
<p>　　接着添加代码：<br>    CString str;<br>    str.Format(“x=%d”,y=%d”, GetSystemMetrics(SM_CXMENUCHECK),GetSystemMetrics(SM_CYMENUCHECK));<br>    MessageBox(str);<br>    m_bitmap.LoadBitmap(IDB_BITMAP1);<br>    GetMenu()-&gt;GetSubMenu(0)-&gt;SetMenuItemBitmaps(0, MF_BYPOSITION, &amp;m_bitmap, &amp;m_bitmap);</p>
<h3 id="禁用菜单项"><a href="#禁用菜单项" class="headerlink" title="禁用菜单项"></a>禁用菜单项</h3><p>　　通常把MF_GRAYED和MF_DISABLED这两个标志放在一起使用。不过这么做并不是必需的。<br>　　删除之前的代码，写入    GetMenu()-&gt;GetSubMenu(0)-&gt;EnableMenuItem(1, MF_BYPOSITION | MF_DISABLED | MF_GRAYED);<br>　　打开“文件”子菜单，发现“打开”菜单栏变灰，点击不起作用。</p>
<h3 id="移除和装载菜单"><a href="#移除和装载菜单" class="headerlink" title="移除和装载菜单"></a>移除和装载菜单</h3><p>　　再添加一行代码：    SetMenu(NULL);  此时菜单栏被移除了。<br>　　再添加几行代码：<br>CMenu menu;<br>    menu.LoadMenu(IDR_MAINFRAME);<br>    SetMenu(&amp;menu);<br>    menu.Detach();<br>　　此时菜单栏又装载了。<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">CMenu menu;</div><div class="line">menu.CreateMenu();</div><div class="line">GetMenu()-&gt;AppendMenu(MF_POPUP, (UINT)menu.m_hMenu, <span class="string">"Test1"</span>);</div><div class="line">menu.AppendMenu(MF_STRING, <span class="number">111</span>, <span class="string">"Hello"</span>);</div><div class="line">menu.AppendMenu(MF_STRING, <span class="number">112</span>, <span class="string">"Bye"</span>);</div><div class="line">menu.AppendMenu(MF_STRING, <span class="number">113</span>, <span class="string">"Mybole"</span>);</div><div class="line"></div><div class="line"></div><div class="line">menu.Detach();</div><div class="line"></div><div class="line">CMenu menu1;</div><div class="line">menu1.CreateMenu();</div><div class="line">GetMenu()-&gt;InsertMenu(<span class="number">2</span>, MF_POPUP | MF_BYPOSITION, (UINT)menu1. m_hMenu,<span class="string">"Test"</span>);</div><div class="line"></div><div class="line"></div><div class="line">menu1.Detach();</div><div class="line"></div><div class="line">GetMenu()-&gt;GetSubMenu(<span class="number">2</span>)-&gt;AppendMenu(MF_STRING, <span class="number">118</span>, <span class="string">"Welcome"</span>);</div><div class="line">GetMenu()-&gt;GetSubMenu(<span class="number">0</span>)-&gt;AppendMenu(MF_STRING, <span class="number">114</span>, <span class="string">"Welcome"</span>);</div><div class="line">GetMenu()-&gt;GetSubMenu(<span class="number">0</span>)-&gt;InsertMenu(ID_FILE_OPEN, MF_BYCOMMAND | MF_STRING, <span class="number">115</span>, <span class="string">"VC编程"</span>);</div></pre></td></tr></table></figure></p>
<h3 id="mfc菜单命令更新机制"><a href="#MFC菜单命令更新机制" class="headerlink" title="MFC菜单命令更新机制"></a>MFC菜单命令更新机制</h3><p> <img src="http://img.blog.csdn.net/20170420225218087?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<p>　　MFC命令更新机制：当要显示菜单时，操作系统发出WM_INITMENUPOPOP消息，然后由程序窗口的基类如CFrameWnd接管，它会创建一个CCmdUI对象，并与程序的第一个菜单项相关联，调用该对象的一个成员函数DoUpdate()。这个函数发出CN_UPDATE_COMMAND_UI消息，这条消息带有一个指向CCmdUI对象的指针。这时，系统会判断是否存在一个ON_UPDATE_COMMAND_UI宏去捕获这个菜单项消息。如果找到这样一个宏，就调用相应的消息响应函数进行处理，在这个函数中，可以利用传递过来的CCmdUI对象去调用相应的函数，使该菜单项可以使用，或禁用该菜单项。当更新完第一个菜单项后，同一个CCmdUI对象就设置为与第二个菜单项相关联，依此顺序进行，直到完成所有菜单项的处理。</p>
<p>　　添加代码：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">void</span> CMainFrame::OnUpdateEditCut(CCmdUI* pCmdUI) </div><div class="line">&#123;</div><div class="line">	<span class="comment">// <span class="doctag">TODO:</span> Add your command update UI handler code here</span></div><div class="line">	pCmdUI-&gt;Enable();</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>　　编辑-剪切 可用了。<br>　　如果要把工具栏上的一个工具按钮与菜单栏中的某个菜单项相关联，只要将它们的ID设置为同一个标识就可以了。</p>
<p>　　如果希望禁用文件-新建，为ID_FILE_NEW添加UPDATE_COMMAND_UI消息响应函数。<br>　　代码如下：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="keyword">void</span> CMainFrame::OnUpdateFileNew(CCmdUI* pCmdUI) </div><div class="line">&#123;</div><div class="line">	<span class="comment">// <span class="doctag">TODO:</span> Add your command update UI handler code here</span></div><div class="line">	pCmdUI-&gt;Enable(FALSE);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>　　或者<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">void</span> CMainFrame::OnUpdateFileNew(CCmdUI* pCmdUI) </div><div class="line">&#123;</div><div class="line">	<span class="keyword">if</span> (<span class="number">2</span> == pCmdUI-&gt;m_nIndex)</div><div class="line">	pCmdUI-&gt;Enable();</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h3 id="快捷菜单"><a href="#快捷菜单" class="headerlink" title="快捷菜单"></a>快捷菜单</h3><p>　　1. 新增一个新的菜单资源。点开，顶级菜单设置任意的文本，如abc。添加两个菜单项：<br>　　显示 IDM_SHOW<br>　　退出 IDM_EXIT<br>　　2. 给CMenuView类添加WM_RBUTTONDOWN消息响应函数。<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">void</span> CMenu2View::OnRButtonDown(UINT nFlags, CPoint point) </div><div class="line">&#123;</div><div class="line">	CMenu menu;</div><div class="line">	menu.LoadMenu(IDR_MENU1);</div><div class="line">	CMenu* pPopup = menu.GetSubMenu(<span class="number">0</span>);</div><div class="line">	ClientToScreen(&amp;point);</div><div class="line">	pPopup-&gt;TrackPopupMenu(TPM_LEFTALIGN | TPM_RIGHTBUTTON, point.x, point.y, <span class="keyword">this</span>);</div><div class="line"></div><div class="line">	CView::OnRButtonDown(nFlags, point);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>　　效果：<br>　　<br> <img src="http://img.blog.csdn.net/20170420225352728?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt=""></p>
<p>　　3.对“显示”右键ClassWizard，可以取消创建新类的询问。分别为CMainFrame类和CMenuView类添加一个响应。<br>　　代码：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">void</span> CMenu2View::OnShow() </div><div class="line">&#123;</div><div class="line">	MessageBox(<span class="string">"View show"</span>);	</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">void</span> CMainFrame::OnShow() </div><div class="line">&#123;</div><div class="line">	MessageBox(<span class="string">"Main show"</span>);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>　　结果是显示“View show”。说明只有视类才能对快捷菜单项命令做出响应。若想让CMainView类对此快捷菜单项进行响应的话，修改代码：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">void</span> CMenu2View::OnRButtonDown(UINT nFlags, CPoint point) </div><div class="line">&#123;</div><div class="line">	CMenu menu;</div><div class="line">	menu.LoadMenu(IDR_MENU1);</div><div class="line">	CMenu* pPopup = menu.GetSubMenu(<span class="number">0</span>);</div><div class="line">	ClientToScreen(&amp;point);</div><div class="line">	<span class="comment">//pPopup-&gt;TrackPopupMenu(TPM_LEFTALIGN | TPM_RIGHTBUTTON, point.x, point.y, this);</span></div><div class="line">	pPopup-&gt;TrackPopupMenu(TPM_LEFTALIGN | TPM_RIGHTBUTTON, point.x, point.y, GetParent());</div><div class="line"></div><div class="line">	CView::OnRButtonDown(nFlags, point);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>　　同时删去视类的显示。</p>
<h2 id="动态菜单操作"><a href="#动态菜单操作" class="headerlink" title="动态菜单操作"></a>动态菜单操作</h2><h3 id="添加菜单项目"><a href="#添加菜单项目" class="headerlink" title="添加菜单项目"></a>添加菜单项目</h3><p>　　在CMainFrame类的OnCreate函数中添加代码：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">CMenu menu;</div><div class="line">menu.CreateMenu();</div><div class="line">GetMenu()-&gt;AppendMenu(MF_POPUP, (UINT)menu.m_hMenu, <span class="string">"Test"</span>);</div><div class="line">menu.Detach();</div></pre></td></tr></table></figure></p>
<h3 id="插入菜单项目"><a href="#插入菜单项目" class="headerlink" title="插入菜单项目"></a>插入菜单项目</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">CMenu menu;</div><div class="line">menu.CreateMenu();</div><div class="line"><span class="comment">/*GetMenu()-&gt;AppendMenu(MF_POPUP, (UINT)menu.m_hMenu, "Test");</span></div><div class="line">menu.Detach();*/</div><div class="line">GetMenu()-&gt;InsertMenu(<span class="number">2</span>, MF_POPUP | MF_BYPOSITION, (UINT)menu. m_hMenu,<span class="string">"Test"</span>);</div><div class="line">menu.Detach();</div></pre></td></tr></table></figure>
<p>　　如果要在新插入的子菜单中添加菜单项的话，同样可以使用AppendMenu函数来实现。<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">CMenu menu;</div><div class="line">	menu.CreateMenu();</div><div class="line">	<span class="comment">/*GetMenu()-&gt;AppendMenu(MF_POPUP, (UINT)menu.m_hMenu, "Test");</span></div><div class="line">	menu.Detach();*/</div><div class="line">	GetMenu()-&gt;InsertMenu(<span class="number">2</span>, MF_POPUP | MF_BYPOSITION, (UINT)menu. m_hMenu,<span class="string">"Test"</span>);</div><div class="line"></div><div class="line">	menu.AppendMenu(MF_STRING, <span class="number">111</span>, <span class="string">"Hello"</span>);</div><div class="line">	menu.AppendMenu(MF_STRING, <span class="number">112</span>, <span class="string">"Bye"</span>);</div><div class="line">	menu.AppendMenu(MF_STRING, <span class="number">113</span>, <span class="string">"Mybole"</span>);</div><div class="line">	menu.Detach();</div></pre></td></tr></table></figure></p>
<p>　　111、112、113是随便赋予的ID号。<br>　　<br> <img src="http://img.blog.csdn.net/20170420230125731?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<p>　　若要在“文件”子菜单下添加一个菜单项Welcome，再添加一行代码：    GetMenu()-&gt;GetSubMenu(0)-&gt;AppendMenu(MF_STRING, 114, “Welcome”);<br>　　若要在“文件”中的“新建”和“打开”插入一个菜单项VC编程，再添加一行代码：<br>    GetMenu()-&gt;GetSubMenu(0)-&gt;InsertMenu(ID_FILE_OPEN, MF_BYCOMMAND | MF_STRING, 115， “VC编程”);</p>
<h3 id="删除菜单"><a href="#删除菜单" class="headerlink" title="删除菜单"></a>删除菜单</h3><p>　　删除“编辑”：在CMainFrame类的OnCreate函数最后（return之前）添加：<br>　　GetMenu()-&gt;DeleteMenu(1, MF_BYPOSITION);<br>　　删除“文件”下的“打开”：<br>　　GetMenu()-&gt;GetSubMenu(0)-&gt;DeleteMenu(2, MF_BYPOSITION);</p>
<h3 id="动态添加的菜单项的命令响应"><a href="#动态添加的菜单项的命令响应" class="headerlink" title="动态添加的菜单项的命令响应"></a>动态添加的菜单项的命令响应</h3><p>　　Resource.h中添加新ID<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">define</span> IDM_HELLO	111</span></div></pre></td></tr></table></figure></p>
<p>将menu.AppendMenu(MF_STRING, 111, “Hello”); 改为 menu.AppendMenu(MF_STRING, IDM_HELLO, “Hello”);</p>
<p>　　三部曲：<br>　　1.    点开MainFrm.h，增加为<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//&#123;&#123;AFX_MSG(CMainFrame)</span></div><div class="line">	<span class="function">afx_msg <span class="keyword">int</span> <span class="title">OnCreate</span><span class="params">(LPCREATESTRUCT lpCreateStruct)</span></span>;</div><div class="line">	<span class="function">afx_msg <span class="keyword">void</span> <span class="title">OnShow</span><span class="params">()</span></span>;</div><div class="line">	<span class="comment">//&#125;&#125;AFX_MSG</span></div><div class="line">	<span class="function">afx_msg <span class="keyword">void</span> <span class="title">OnHello</span><span class="params">()</span></span>;</div><div class="line">	DECLARE_MESSAGE_MAP()</div></pre></td></tr></table></figure></p>
<p>　　2. 点开MainFrm.cpp，增加为<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">BEGIN_MESSAGE_MAP(CMainFrame, CFrameWnd)</div><div class="line">	<span class="comment">//&#123;&#123;AFX_MSG_MAP(CMainFrame)</span></div><div class="line">	ON_WM_CREATE()</div><div class="line">	ON_COMMAND(IDM_SHOW, OnShow)</div><div class="line">	ON_COMMAND(IDM_HELLO, OnHello)</div><div class="line">	<span class="comment">//&#125;&#125;AFX_MSG_MAP</span></div><div class="line">END_MESSAGE_MAP()</div></pre></td></tr></table></figure></p>
<p>　　3. CMainFrame类中添加<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">void</span> CMainFrame::OnHello()</div><div class="line">&#123;</div><div class="line">	MessageBox(<span class="string">"Hello"</span>);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h2 id="电话本示例程序"><a href="#电话本示例程序" class="headerlink" title="电话本示例程序"></a>电话本示例程序</h2><p>　　删除之前写入CMainFrame类的OnCreate函数，留下原始函数。</p>
<h3 id="动态添加子菜单的实现"><a href="#动态添加子菜单的实现" class="headerlink" title="动态添加子菜单的实现"></a>动态添加子菜单的实现</h3><p>　　利用ClassWizard添加WM_CHAR消息。在Menu2View.h中添加：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">private</span>:</div><div class="line">	<span class="keyword">int</span> m_nIndex;</div><div class="line">	CMenu m_menu;</div></pre></td></tr></table></figure></p>
<p>在Menu2View.cpp里，添加：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">CMenu2View::CMenu2View()</div><div class="line">&#123;</div><div class="line">	<span class="comment">// <span class="doctag">TODO:</span> add construction code here</span></div><div class="line">	m_nIndex = <span class="number">-1</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h3 id="显示输入的字符"><a href="#显示输入的字符" class="headerlink" title="显示输入的字符"></a>显示输入的字符</h3><h3 id="添加菜单项及其命令响应函数"><a href="#添加菜单项及其命令响应函数" class="headerlink" title="添加菜单项及其命令响应函数"></a>添加菜单项及其命令响应函数</h3><p>　　在资源编辑器中打开程序的菜单，在“帮助”后添加一个新菜单abc，添加4个菜单项。名称为1，ID为IDM_PHONE1，以此类推。用ClassWizard为CMenu2View类分别加上这四个菜单项的命令响应函数。<br>　　修改CMenu2View类的头文件，如下：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">protected</span>:</div><div class="line">	<span class="comment">//&#123;&#123;AFX_MSG(CMenu2View)</span></div><div class="line">	<span class="function">afx_msg <span class="keyword">void</span> <span class="title">OnRButtonDown</span><span class="params">(UINT nFlags, CPoint point)</span></span>;</div><div class="line">	<span class="function">afx_msg <span class="keyword">void</span> <span class="title">OnChar</span><span class="params">(UINT nChar, UINT nRepCnt, UINT nFlags)</span></span>;</div><div class="line">	<span class="function">afx_msg <span class="keyword">void</span> <span class="title">OnPhone1</span><span class="params">()</span></span>;</div><div class="line">	<span class="function">afx_msg <span class="keyword">void</span> <span class="title">OnPhone2</span><span class="params">()</span></span>;</div><div class="line">	<span class="function">afx_msg <span class="keyword">void</span> <span class="title">OnPhone3</span><span class="params">()</span></span>;</div><div class="line">	<span class="function">afx_msg <span class="keyword">void</span> <span class="title">OnPhone4</span><span class="params">()</span></span>;</div><div class="line">	<span class="comment">//&#125;&#125;AFX_MSG</span></div><div class="line">	DECLARE_MESSAGE_MAP()</div></pre></td></tr></table></figure></p>
<p>CMenu2View.cpp中，<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">	<span class="comment">//&#123;&#123;AFX_MSG_MAP(CMenu2View)</span></div><div class="line">	ON_WM_CHAR()</div><div class="line">	<span class="comment">//&#125;&#125;AFX_MSG_MAP</span></div><div class="line">	ON_COMMAND(IDM_PHONE1, OnPhone1)</div><div class="line">	ON_COMMAND(IDM_PHONE2, OnPhone2)</div><div class="line">	ON_COMMAND(IDM_PHONE3, OnPhone3)</div><div class="line">	ON_COMMAND(IDM_PHONE4, OnPhone4)</div><div class="line">	<span class="comment">// Standard printing commands</span></div><div class="line">	ON_COMMAND(ID_FILE_PRINT, CView::OnFilePrint)</div><div class="line">	ON_COMMAND(ID_FILE_PRINT_DIRECT, CView::OnFilePrint)</div><div class="line">	ON_COMMAND(ID_FILE_PRINT_PREVIEW, CView::OnFilePrintPreview)</div><div class="line">END_MESSAGE_MAP()</div></pre></td></tr></table></figure></p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">void</span> CMenu2View::OnPhone1() </div><div class="line">&#123;</div><div class="line">	<span class="function">CClientDC <span class="title">dc</span><span class="params">(<span class="keyword">this</span>)</span></span>;</div><div class="line">	dc.TextOut(<span class="number">0</span>, <span class="number">0</span>, m_strArray.GetAt(<span class="number">0</span>));</div><div class="line">	</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">void</span> CMenu2View::OnPhone2() </div><div class="line">&#123;</div><div class="line">	<span class="function">CClientDC <span class="title">dc</span><span class="params">(<span class="keyword">this</span>)</span></span>;</div><div class="line">	dc.TextOut(<span class="number">0</span>, <span class="number">0</span>, m_strArray.GetAt(<span class="number">1</span>));</div><div class="line">	</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">void</span> CMenu2View::OnPhone3() </div><div class="line">&#123;</div><div class="line">	<span class="function">CClientDC <span class="title">dc</span><span class="params">(<span class="keyword">this</span>)</span></span>;</div><div class="line">	dc.TextOut(<span class="number">0</span>, <span class="number">0</span>, m_strArray.GetAt(<span class="number">2</span>));</div><div class="line">	</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">void</span> CMenu2View::OnPhone4() </div><div class="line">&#123;</div><div class="line">	<span class="function">CClientDC <span class="title">dc</span><span class="params">(<span class="keyword">this</span>)</span></span>;</div><div class="line">	dc.TextOut(<span class="number">0</span>, <span class="number">0</span>, m_strArray.GetAt(<span class="number">3</span>));</div><div class="line">	</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="框架类窗口截获菜单命令消息"><a href="#框架类窗口截获菜单命令消息" class="headerlink" title="框架类窗口截获菜单命令消息"></a>框架类窗口截获菜单命令消息</h3><p>　　右键单击CMainFrame，选择Add Virtual Functions-OnCommand，单击Add Handler，再点击Edit Existing。<br> <img src="http://img.blog.csdn.net/20170420230209594?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"><br>　　代码：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">BOOL CMainFrame::OnCommand(WPARAM wParam, LPARAM lParam) </div><div class="line">&#123;</div><div class="line">	<span class="keyword">int</span> MenuCmdID = LOWORD(wParam);</div><div class="line">	CMenu2View *pView = (CMenu2View *)GetActiveView();</div><div class="line">	<span class="keyword">if</span> (MenuCmdID &gt;= IDM_PHONE1 &amp;&amp; MenuCmdID &lt; IDM_PHONE1 + pView-&gt;m_strArray.GetSize())</div><div class="line">	&#123;</div><div class="line">	<span class="comment">//MessageBox("Test");</span></div><div class="line">	<span class="function">CClientDC <span class="title">dc</span><span class="params">(pView)</span></span>;</div><div class="line">	dc.TextOut(<span class="number">0</span>, <span class="number">0</span>, pView-&gt;m_strArray.GetAt(MenuCmdID - IDM_PHONE1));</div><div class="line">	<span class="keyword">return</span> TRUE;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">return</span> CFrameWnd::OnCommand(wParam, lParam);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>　　将MainFrm.cpp里添加#include “Menu2View.h” 。<br>　　将Menu2View.cpp中的#include “Menu2Doc.h”剪切到Menu2View.h文件的前部（#endif // _MSC_VER &gt; 1000下面）。</p>
<p>　　最终代码：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="keyword">void</span> CMenu2View::OnChar(UINT nChar, UINT nRepCnt, UINT nFlags) </div><div class="line">&#123;</div><div class="line">	<span class="function">CClientDC <span class="title">dc</span><span class="params">(<span class="keyword">this</span>)</span></span>;</div><div class="line">	<span class="keyword">if</span> (<span class="number">0x0d</span> == nChar)</div><div class="line">	&#123;</div><div class="line">		<span class="keyword">if</span> (<span class="number">0</span> == ++m_nIndex)</div><div class="line">		&#123;</div><div class="line">			m_menu.CreatePopupMenu();</div><div class="line">			GetParent()-&gt;GetMenu()-&gt;AppendMenu(MF_POPUP, (UINT)m_menu.m_hMenu, <span class="string">"PhoneBook"</span>);</div><div class="line">			GetParent()-&gt;DrawMenuBar();</div><div class="line">		&#125;</div><div class="line">		m_menu.AppendMenu(MF_STRING, IDM_PHONE1 + m_nIndex, m_strLine.Left(m_strLine.Find(<span class="string">' '</span>)));</div><div class="line">		m_strArray.Add(m_strLine);</div><div class="line">		m_strLine.Empty();</div><div class="line">		Invalidate();</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">else</span></div><div class="line">	&#123;</div><div class="line">		m_strLine += nChar;</div><div class="line">		dc.TextOut(<span class="number">0</span>, <span class="number">0</span>, m_strLine);</div><div class="line">	&#125;</div><div class="line">	CView::OnChar(nChar, nRepCnt, nFlags);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>　　效果：<br> <img src="http://img.blog.csdn.net/20170420230235013?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<h1 id="简单绘图"><a href="#简单绘图" class="headerlink" title="简单绘图"></a>简单绘图</h1><h2 id="mfc消息映射机制"><a href="#MFC消息映射机制" class="headerlink" title="MFC消息映射机制"></a>MFC消息映射机制</h2><p>　　与消息有关的三处信息：1.头文件XXXX.h中 2.源文件XXXX.cpp中 3.源文件XXXX.cpp的响应函数中</p>
<h2 id="绘制线条"><a href="#绘制线条" class="headerlink" title="绘制线条"></a>绘制线条</h2><p>　　对CDrawView右键点击Add Member Variable，变量名称：m_ptOrigin，类型：CPoint，访问权限设置：Private。<br>　　代码：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">void</span> CDrawView::OnLButtonDown(UINT nFlags, CPoint point) </div><div class="line">&#123;</div><div class="line">	m_ptOrigin = point;</div><div class="line">	CView::OnLButtonDown(nFlags, point);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">void</span> CDrawView::OnLButtonUp(UINT nFlags, CPoint point) </div><div class="line">&#123;</div><div class="line">	<span class="comment">//首先获得窗口的设备描述表</span></div><div class="line">	HDC hdc;</div><div class="line">	hdc = ::GetDC(m_hWnd);</div><div class="line">	<span class="comment">//移动到线条的起点</span></div><div class="line">	MoveToEx(hdc, m_ptOrigin.x, m_ptOrigin.y, <span class="literal">NULL</span>);</div><div class="line">	<span class="comment">//画线</span></div><div class="line">	LineTo(hdc, point.x, point.y);</div><div class="line">	<span class="comment">//释放设备描述表</span></div><div class="line">	::ReleaseDC(m_hWnd, hdc);</div><div class="line"></div><div class="line">	CView::OnLButtonUp(nFlags, point);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><img src="http://img.blog.csdn.net/20170420230302938?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<h3 id="利用mfc的cdc类实现画线功能"><a href="#利用MFC的CDC类实现画线功能" class="headerlink" title="利用MFC的CDC类实现画线功能"></a>利用MFC的CDC类实现画线功能</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">void</span> CDrawView::OnLButtonUp(UINT nFlags, CPoint point) </div><div class="line">&#123;</div><div class="line">	<span class="comment">/*//首先获得窗口的设备描述表</span></div><div class="line">	HDC hdc;</div><div class="line">	hdc = ::GetDC(m_hWnd);</div><div class="line">	//移动到线条的起点</div><div class="line">	MoveToEx(hdc, m_ptOrigin.x, m_ptOrigin.y, NULL);</div><div class="line">	//画线</div><div class="line">	LineTo(hdc, point.x, point.y);</div><div class="line">	//释放设备描述表</div><div class="line">	::ReleaseDC(m_hWnd, hdc);*/</div><div class="line"></div><div class="line">	CDC* pDC = GetDC();</div><div class="line">	pDC-&gt;MoveTo(m_ptOrigin);</div><div class="line">	pDC-&gt;LineTo(point);</div><div class="line">	ReleaseDC(pDC);</div><div class="line"></div><div class="line">	CView::OnLButtonUp(nFlags, point);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="利用mfc的cwindowdc类实现画线功能"><a href="#利用MFC的CWindowDC类实现画线功能" class="headerlink" title="利用MFC的CWindowDC类实现画线功能"></a>利用MFC的CWindowDC类实现画线功能</h3><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">void CDrawView::OnLButtonUp(UINT nFlags, CPoint point) </div><div class="line">&#123;</div><div class="line">	CWindowDC dc(GetParent());</div><div class="line">	dc.MoveTo(m_ptOrigin);</div><div class="line">	dc.LineTo(point);</div><div class="line"></div><div class="line">	CView::OnLButtonUp(nFlags, point);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p> <img src="http://img.blog.csdn.net/20170420230346873?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<h3 id="在桌面窗口中画线"><a href="#在桌面窗口中画线" class="headerlink" title="在桌面窗口中画线"></a>在桌面窗口中画线</h3><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">void CDrawView::OnLButtonUp(UINT nFlags, CPoint point) </div><div class="line">&#123;</div><div class="line">	CWindowDC dc(GetDesktopWindow());</div><div class="line">	dc.MoveTo(m_ptOrigin);</div><div class="line">	dc.LineTo(point);</div><div class="line"></div><div class="line">	CView::OnLButtonUp(nFlags, point);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p> <img src="http://img.blog.csdn.net/20170420230404138?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<p>　　<strong>注意</strong>：在桌面上画图需要权限（一般写代码时需要避免软件以外的操作）。</p>
<h3 id="绘制彩色线条"><a href="#绘制彩色线条" class="headerlink" title="绘制彩色线条"></a>绘制彩色线条</h3><p>　　在程序中，当构造一个GDI对象后，该对象并不会立即生效，必须选入设备描述表，它才会在以后的绘制操作中生效。<br>一般情况下，在完成绘图操作之后，都要利用SelectObject函数把之前的GDI对象选入设备描述表，以便使其恢复到先前的状态。<br><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">void CDrawView::OnLButtonUp(UINT nFlags, CPoint point) </div><div class="line">&#123;</div><div class="line">	CPen pen(PS_SOLID, 1, RGB(255, 0, 0));</div><div class="line">	CClientDC dc(this);</div><div class="line">	CPen* pOldPen = dc.SelectObject(&amp;pen);</div><div class="line">	dc.MoveTo(m_ptOrigin);</div><div class="line">	dc.LineTo(point);</div><div class="line">	dc.SelectObject(pOldPen);</div><div class="line"></div><div class="line">	CView::OnLButtonUp(nFlags, point);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>　　运行的效果是红色线条。</p>
<p>　　改为    CPen pen(PS_DASH, 1, RGB(255, 0, 0));  是虚线。（其中第二个参数需小于等于10）<br>    CPen pen(PS_DOT, 1, RGB(255, 0, 0)); 是点线。</p>
<h2 id="使用画刷绘图"><a href="#使用画刷绘图" class="headerlink" title="使用画刷绘图"></a>使用画刷绘图</h2><h3 id="简单画刷"><a href="#简单画刷" class="headerlink" title="简单画刷"></a>简单画刷</h3><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">void CDrawView::OnLButtonUp(UINT nFlags, CPoint point) </div><div class="line">&#123;</div><div class="line">	//创建一个红色画刷</div><div class="line">	CBrush brush(RGB(255, 0, 0));</div><div class="line">	//创建并获得设备描述表</div><div class="line">	CClientDC dc(this);</div><div class="line">	//利用红色画刷填充鼠标拖拽过程中形成的矩形区域</div><div class="line">	dc.FillRect(CRect(m_ptOrigin, point),&amp;brush);</div><div class="line"></div><div class="line">	CView::OnLButtonUp(nFlags, point);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p> <img src="http://img.blog.csdn.net/20170420230440190?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<h3 id="位图画刷"><a href="#位图画刷" class="headerlink" title="位图画刷"></a>位图画刷</h3><p>　　Insert-Resource-Bitmap-New，在这里发挥灵魂画手的天赋吧！<br>　　代码：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">void</span> CDrawView::OnLButtonUp(UINT nFlags, CPoint point) </div><div class="line">&#123;</div><div class="line">	<span class="comment">//创建位图对象</span></div><div class="line">	CBitmap bitmap;</div><div class="line">	<span class="comment">//加载位图资源</span></div><div class="line">	bitmap.LoadBitmap(IDB_BITMAP1);</div><div class="line">	<span class="comment">//创建位图画刷</span></div><div class="line">	<span class="function">CBrush <span class="title">brush</span><span class="params">(&amp;bitmap)</span></span>;</div><div class="line">	<span class="comment">//创建并获得设备描述表</span></div><div class="line">	<span class="function">CClientDC <span class="title">dc</span><span class="params">(<span class="keyword">this</span>)</span></span>;</div><div class="line">	<span class="comment">//利用位图画刷填充鼠标拖拽过程中形成的矩形区域</span></div><div class="line">	dc.FillRect(CRect(m_ptOrigin, point),&amp;brush);</div><div class="line"></div><div class="line">	CView::OnLButtonUp(nFlags, point);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p> <img src="http://img.blog.csdn.net/20170420230503092?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"><br>　　我画的是不是很滑稽（手动滑稽）</p>
<h3 id="透明画刷"><a href="#透明画刷" class="headerlink" title="透明画刷"></a>透明画刷</h3><p>　　先进行一种尝试：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">void</span> CDrawView::OnLButtonUp(UINT nFlags, CPoint point) </div><div class="line">&#123;</div><div class="line">	<span class="comment">//创建并获得设备描述表</span></div><div class="line">	<span class="function">CClientDC <span class="title">dc</span><span class="params">(<span class="keyword">this</span>)</span></span>;</div><div class="line">	<span class="comment">//绘制一个矩形</span></div><div class="line">	dc.Rectangle(CRect(m_ptOrigin,point));</div><div class="line"></div><div class="line">	CView::OnLButtonUp(nFlags, point);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p> <img src="http://img.blog.csdn.net/20170420230521295?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"><br>　　如果希望矩形内部是透明的，能够看到被遮挡的图形，就要创建一个透明画刷。<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">void</span> CDrawView::OnLButtonUp(UINT nFlags, CPoint point) </div><div class="line">&#123;</div><div class="line">	<span class="comment">//创建并获得设备描述表</span></div><div class="line">	<span class="function">CClientDC <span class="title">dc</span><span class="params">(<span class="keyword">this</span>)</span></span>;</div><div class="line">	<span class="comment">//创建一个空画刷</span></div><div class="line">	CBrush *pBrush = CBrush::FromHandle((HBRUSH)GetStockObject(NULL_BRUSH));</div><div class="line">	<span class="comment">//将空画刷选入设备描述表</span></div><div class="line">	CBrush *pOldBrush = dc.SelectObject(pBrush);</div><div class="line">	<span class="comment">//绘制一个矩形</span></div><div class="line">	dc.Rectangle(CRect(m_ptOrigin, point));</div><div class="line">	<span class="comment">//恢复先前的画刷</span></div><div class="line">	dc.SelectObject(pOldBrush);</div><div class="line"></div><div class="line">	CView::OnLButtonUp(nFlags, point);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p><img src="http://img.blog.csdn.net/20170420230550253?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<h2 id="绘制连续线条"><a href="#绘制连续线条" class="headerlink" title="绘制连续线条"></a>绘制连续线条</h2><p>　　首先为视类增加鼠标移动消息（WM_MOUSEMOVE）的响应函数（默认OnMouseMove），并为视类添加一个BOOL型的私有成员变量m_bDraw。<br>在视类头文件定义：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">　Private:</div><div class="line">　BOOL m_bDraw;</div></pre></td></tr></table></figure></p>
<p>在视类的构造函数中：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">m_bDraw = FALSE;</div></pre></td></tr></table></figure></p>
<p>在OnLButtonDown中：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">m_bDraw = TRUE;</div></pre></td></tr></table></figure></p>
<p>在OnLButtonUp中：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">m_bDraw = FALSE;</div></pre></td></tr></table></figure></p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">void</span> CDrawView::OnMouseMove(UINT nFlags, CPoint point) </div><div class="line">&#123;</div><div class="line">	<span class="function">CClientDC <span class="title">dc</span><span class="params">(<span class="keyword">this</span>)</span></span>;</div><div class="line">	<span class="keyword">if</span>(m_bDraw == TRUE)</div><div class="line">	&#123;</div><div class="line">		dc.MoveTo(m_ptOrigin);</div><div class="line">		dc.LineTo(point);</div><div class="line">		<span class="comment">//修改线段的起点</span></div><div class="line">		m_ptOrigin = point;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	CView::OnMouseMove(nFlags, point);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><img src="http://img.blog.csdn.net/20170420230616957?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<p>给线条换色：<br><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">void CDrawView::OnMouseMove(UINT nFlags, CPoint point) </div><div class="line">&#123;</div><div class="line">	CClientDC dc(this);</div><div class="line">		//创建一个红色的、宽度为1的实线画笔</div><div class="line">		CPen pen(PS_SOLID, 1, RGB(255, 0, 0));</div><div class="line">		//把创建的画笔选入设备描述表</div><div class="line">		CPen *pOldPen = dc.SelectObject(&amp;pen);</div><div class="line">		if (m_bDraw == TRUE)</div><div class="line">		&#123;</div><div class="line">		dc.MoveTo(m_ptOrigin);</div><div class="line">		dc.LineTo(point);</div><div class="line">		//修改线段的起点</div><div class="line">		m_ptOrigin = point;</div><div class="line">	&#125;</div><div class="line">	//恢复设备描述表</div><div class="line">		dc.SelectObject(pOldPen);</div><div class="line"></div><div class="line">	CView::OnMouseMove(nFlags, point);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h2 id="绘制扇形效果的线条"><a href="#绘制扇形效果的线条" class="headerlink" title="绘制扇形效果的线条"></a>绘制扇形效果的线条</h2><p>　　去掉上述代码中的     m_ptOrigin = point;</p>
<p>　　效果：<br>　　<img src="http://img.blog.csdn.net/20170420230636254?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<p>　　绘制一个带边线的扇形：<br>　　为CDrawView类增加一个CPoint类型的私有成员变量m_ptOld，用来保存鼠标上一个移动点。</p>
<p>　　在OnLButton中：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">m_ptOld = point;</div></pre></td></tr></table></figure></p>
<p>　　在OnMouseMove中：<br><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line">void CDrawView::OnMouseMove(UINT nFlags, CPoint point) </div><div class="line">&#123;</div><div class="line">	CClientDC dc(this);</div><div class="line">		//创建一个红色的、宽度为1的实线画笔</div><div class="line">		CPen pen(PS_SOLID, 1, RGB(255, 0, 0));</div><div class="line">		//把创建的画笔选入设备描述表</div><div class="line">		CPen *pOldPen = dc.SelectObject(&amp;pen);</div><div class="line">		if (m_bDraw == TRUE)</div><div class="line">		&#123;</div><div class="line">		dc.MoveTo(m_ptOrigin);</div><div class="line">		dc.LineTo(point);</div><div class="line">		dc.LineTo(m_ptOld);</div><div class="line">		//修改线段的起点</div><div class="line">		//m_ptOrigin = point;</div><div class="line">		m_ptOld = point;</div><div class="line">	&#125;</div><div class="line">	//恢复设备描述表</div><div class="line">		dc.SelectObject(pOldPen);</div><div class="line"></div><div class="line">	CView::OnMouseMove(nFlags, point);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>　　最好将OnLButtonUp里原来写的代码删除或注释之。<br>　　效果：<br> <img src="http://img.blog.csdn.net/20170420230656311?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<p>　　MFC提供一个设置绘图模式的函数SetROP2，带有一个参数R2_BLACK、R2_WHITE、R2_MERGENOTPEN等。<br>　　例如，在CClientDC dc(this); 下方添加代码：     dc.SetROP2(R2_MERGENOTPEN);  编译运行后看不到绘制的线条，这就是设置了R2_MERGENOTPEN这种绘图模式。<br>使用R2_BLACK，将会发现绘制的线条颜色始终都是黑色的。</p>
<h1 id="文本编程"><a href="#文本编程" class="headerlink" title="文本编程"></a>文本编程</h1><h2 id="插入符"><a href="#插入符" class="headerlink" title="插入符"></a>插入符</h2><h3 id="创建文本插入符"><a href="#创建文本插入符" class="headerlink" title="创建文本插入符"></a>创建文本插入符</h3><p>　　创建一个单文档类型的MFC AppWizard(exe)工程，取名为Text。<br>为CTextView类添加WM_CREATE消息的响应函数OnCreate，在此函数中创建一个宽度为20、高度为100的插入符。代码如下。<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">int</span> CTextView::OnCreate(LPCREATESTRUCT lpCreateStruct) </div><div class="line">&#123;</div><div class="line">	<span class="keyword">if</span> (CView::OnCreate(lpCreateStruct) == <span class="number">-1</span>)</div><div class="line">		<span class="keyword">return</span> <span class="number">-1</span>;</div><div class="line">	</div><div class="line">	CreateSolidCaret(<span class="number">20</span>,<span class="number">100</span>);</div><div class="line">	ShowCaret();</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p><img src="http://img.blog.csdn.net/20170420230721832?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<p>　　让插入符适应于当前字体的大小：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">int</span> CTextView::OnCreate(LPCREATESTRUCT lpCreateStruct) </div><div class="line">&#123;</div><div class="line">	<span class="keyword">if</span> (CView::OnCreate(lpCreateStruct) == <span class="number">-1</span>)</div><div class="line">		<span class="keyword">return</span> <span class="number">-1</span>;</div><div class="line">	</div><div class="line">	<span class="comment">//创建设备描述表</span></div><div class="line">	<span class="function">CClientDC <span class="title">dc</span><span class="params">(<span class="keyword">this</span>)</span></span>;</div><div class="line">	<span class="comment">//定义文本信息结构体变量</span></div><div class="line">	TEXTMETRIC tm;</div><div class="line">	<span class="comment">//获得设备描述表中的文本信息</span></div><div class="line">	dc.GetTextMetrics(&amp;tm);</div><div class="line">	<span class="comment">//根据字体大小，创建何时的插入符（除以8是经验值）</span></div><div class="line">	CreateSolidCaret(tm.tmAveCharWidth/<span class="number">8</span>, tm.tmHeight);</div><div class="line">	<span class="comment">//显示插入符</span></div><div class="line">	ShowCaret();</div><div class="line"></div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>　　运行结果就比较符合常规了。</p>
<h3 id="创建图形插入符"><a href="#创建图形插入符" class="headerlink" title="创建图形插入符"></a>创建图形插入符</h3><p>　　新建一个位图资源，画一个图形。<br>在TextView.h中添加<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">private</span>:</div><div class="line">		CBitmap bitmap;</div></pre></td></tr></table></figure></p>
<p>代码：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">int</span> CTextView::OnCreate(LPCREATESTRUCT lpCreateStruct) </div><div class="line">&#123;</div><div class="line">	<span class="keyword">if</span> (CView::OnCreate(lpCreateStruct) == <span class="number">-1</span>)</div><div class="line">		<span class="keyword">return</span> <span class="number">-1</span>;</div><div class="line">	</div><div class="line"></div><div class="line">	bitmap.LoadBitmap(IDB_BITMAP1);</div><div class="line">	CreateCaret(&amp;bitmap);</div><div class="line">	ShowCaret();</div><div class="line"></div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p><img src="http://img.blog.csdn.net/20170420230741630?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<h2 id="窗口重绘"><a href="#窗口重绘" class="headerlink" title="窗口重绘"></a>窗口重绘</h2><h3 id="ondraw函数"><a href="#OnDraw函数" class="headerlink" title="OnDraw函数"></a>OnDraw函数</h3><p>　　实现在程序窗口中输出一串文字的功能。<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">void</span> CTextView::OnDraw(CDC* pDC)</div><div class="line">&#123;</div><div class="line">	CTextDoc* pDoc = GetDocument();</div><div class="line">	ASSERT_VALID(pDoc);</div><div class="line"></div><div class="line">	<span class="function">CString <span class="title">str</span><span class="params">(<span class="string">"VC++ 深入编程"</span>)</span></span>;</div><div class="line">	pDC-&gt;TextOut(<span class="number">50</span>, <span class="number">50</span>, str);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p> <img src="http://img.blog.csdn.net/20170420230758895?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<h3 id="添加字符串资源"><a href="#添加字符串资源" class="headerlink" title="添加字符串资源"></a>添加字符串资源</h3><p>　　点击Resource View-String Table选项，在此字符串表最底部的空行上双击，即可弹出添加新字符串资源的对话框。ID：IDS_STRINGVC，Caption：“VC++编程 文本编程”。代码如下。<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">void</span> CTextView::OnDraw(CDC* pDC)</div><div class="line">&#123;</div><div class="line">	CTextDoc* pDoc = GetDocument();</div><div class="line">	ASSERT_VALID(pDoc);</div><div class="line"></div><div class="line">	<span class="comment">//CString str("VC++ 深入编程");</span></div><div class="line">	CString str;</div><div class="line">	str = <span class="string">"VC++ 深入编程"</span>;</div><div class="line">	pDC-&gt;TextOut(<span class="number">50</span>, <span class="number">50</span>, str);</div><div class="line"></div><div class="line">	str.LoadString(IDS_STRINGVC);</div><div class="line">	pDC-&gt;TextOut(<span class="number">0</span>, <span class="number">200</span>, str);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p><img src="http://img.blog.csdn.net/20170420230814077?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<h3 id="路径"><a href="#路径" class="headerlink" title="路径"></a>路径</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="keyword">void</span> CTextView::OnDraw(CDC* pDC)</div><div class="line">&#123;</div><div class="line">	CTextDoc* pDoc = GetDocument();</div><div class="line">	ASSERT_VALID(pDoc);</div><div class="line"></div><div class="line">	<span class="comment">//CString str("VC++ 深入编程");</span></div><div class="line">	CString str;</div><div class="line">	str = <span class="string">"VC++ 深入编程"</span>;</div><div class="line">	pDC-&gt;TextOut(<span class="number">50</span>, <span class="number">50</span>, str);</div><div class="line"></div><div class="line">	CSize sz = pDC-&gt;GetTextExtent(str);</div><div class="line"></div><div class="line">	str.LoadString(IDS_STRINGVC);</div><div class="line">	pDC-&gt;TextOut(<span class="number">0</span>, <span class="number">200</span>, str);</div><div class="line"></div><div class="line">	pDC-&gt;BeginPath();</div><div class="line">	pDC-&gt;Rectangle(<span class="number">50</span>, <span class="number">50</span>, <span class="number">50</span>+sz.cx, <span class="number">50</span>+sz.cy);</div><div class="line">	pDC-&gt;EndPath();</div><div class="line"></div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;<span class="number">300</span>; i+=<span class="number">10</span>)</div><div class="line">	&#123;</div><div class="line">		pDC-&gt;MoveTo(<span class="number">0</span>, i);</div><div class="line">		pDC-&gt;LineTo(<span class="number">300</span>, i);</div><div class="line">		pDC-&gt;MoveTo(i,<span class="number">0</span>);</div><div class="line">		pDC-&gt;LineTo(i,<span class="number">300</span>);</div><div class="line">	&#125;</div></pre></td></tr></table></figure>
<p> <img src="http://img.blog.csdn.net/20170420230830380?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">void</span> CTextView::OnDraw(CDC* pDC)</div><div class="line">&#123;</div><div class="line">	CTextDoc* pDoc = GetDocument();</div><div class="line">	ASSERT_VALID(pDoc);</div><div class="line"></div><div class="line">	<span class="comment">//CString str("VC++ 深入编程");</span></div><div class="line">	CString str;</div><div class="line">	str = <span class="string">"VC++ 深入编程"</span>;</div><div class="line">	pDC-&gt;TextOut(<span class="number">50</span>, <span class="number">50</span>, str);</div><div class="line"></div><div class="line">	CSize sz = pDC-&gt;GetTextExtent(str);</div><div class="line"></div><div class="line">	str.LoadString(IDS_STRINGVC);</div><div class="line">	pDC-&gt;TextOut(<span class="number">0</span>, <span class="number">200</span>, str);</div><div class="line"></div><div class="line">	pDC-&gt;BeginPath();</div><div class="line">	pDC-&gt;Rectangle(<span class="number">50</span>, <span class="number">50</span>, <span class="number">50</span>+sz.cx, <span class="number">50</span>+sz.cy);</div><div class="line">	pDC-&gt;EndPath();</div><div class="line">	pDC-&gt;SelectClipPath(RGN_DIFF);</div><div class="line"></div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;<span class="number">300</span>; i+=<span class="number">10</span>)</div><div class="line">	&#123;</div><div class="line">		pDC-&gt;MoveTo(<span class="number">0</span>, i);</div><div class="line">		pDC-&gt;LineTo(<span class="number">300</span>, i);</div><div class="line">		pDC-&gt;MoveTo(i,<span class="number">0</span>);</div><div class="line">		pDC-&gt;LineTo(i,<span class="number">300</span>);</div><div class="line">	&#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p> <img src="http://img.blog.csdn.net/20170420230849318?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"><br>　　这正是RGN_DIFF模式的效果。<br>　　如果是RGN_AND，效果是新的裁剪区域是当前裁剪区域和当前路径层的交集。</p>
<p>　　路径层的作用：实现特殊效果。如，希望整幅图形中某一部分与其他部分有所区别，就可以把这部分的图形设置到一个路径层中，然后利用SelectClipPath函数设置一种模式，让路径层和裁剪区域进行互操作以达到一种特殊效果。</p>
<h2 id="字符输入"><a href="#字符输入" class="headerlink" title="字符输入"></a>字符输入</h2><p>　　当用户在键盘上按下某个字符按键后，要把该字符输出到程序窗口上。<br>首先让CTextView捕获WM_CHAR消息，接着为该类定义一个CString类型的成员变量：m_strLine，并在CTextView类的构造函数中将这个变量初始化：m_strLine = “”;<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">void</span> CTextView::OnLButtonDown(UINT nFlags, CPoint point) </div><div class="line">&#123;</div><div class="line">	SetCaretPos(point);</div><div class="line"></div><div class="line">	CView::OnLButtonDown(nFlags, point);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p><img src="http://img.blog.csdn.net/20170420230906115?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"><br>　　为CTextView类再增加一个CPoint类型的成员变量，取名m_ptOrigin，权限为私有。在CTextView类的构造函数中设置其初值为0。<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">void</span> CTextView::OnLButtonDown(UINT nFlags, CPoint point) </div><div class="line">&#123;</div><div class="line">	SetCaretPos(point);</div><div class="line">	m_strLine.Empty();</div><div class="line">	m_ptOrigin = point;</div><div class="line"></div><div class="line">	CView::OnLButtonDown(nFlags, point);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>　　<strong>注意：回车字符的ASCII码十六进制是0x0d，退格键的ASCII码十六进制值是0x08。</strong></p>
<p>　　最终代码：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">void</span> CTextView::OnChar(UINT nChar, UINT nRepCnt, UINT nFlags) </div><div class="line">&#123;</div><div class="line">	<span class="function">CClientDC <span class="title">dc</span><span class="params">(<span class="keyword">this</span>)</span></span>;</div><div class="line">	TEXTMETRIC tm;</div><div class="line">	dc.GetTextMetrics(&amp;tm);</div><div class="line">	<span class="keyword">if</span> (<span class="number">0x0d</span> == nChar)</div><div class="line">	&#123;</div><div class="line">	m_strLine.Empty();</div><div class="line">	m_ptOrigin.y += tm.tmHeight;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">else</span> <span class="keyword">if</span>(<span class="number">0x08</span> == nChar)</div><div class="line">	&#123;</div><div class="line">		COLORREF clr = dc.SetTextColor(dc.GetBkColor());</div><div class="line">		dc.TextOut(m_ptOrigin.x, m_ptOrigin.y, m_strLine);</div><div class="line">		m_strLine = m_strLine.Left(m_strLine.GetLength() - <span class="number">1</span>);</div><div class="line">		dc.SetTextColor(clr);</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">else</span></div><div class="line">	&#123;</div><div class="line">		m_strLine += nChar; </div><div class="line">	&#125;</div><div class="line">	CSize sz = dc.GetTextExtent(m_strLine);</div><div class="line">	CPoint pt;</div><div class="line">	pt.x = m_ptOrigin.x + sz.cx;</div><div class="line">	pt.y = m_ptOrigin.y;</div><div class="line">	SetCaretPos(pt);</div><div class="line"></div><div class="line">	dc.TextOut(m_ptOrigin.x, m_ptOrigin.y, m_strLine);</div><div class="line"></div><div class="line">	</div><div class="line">	CView::OnChar(nChar, nRepCnt, nFlags);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p><img src="http://img.blog.csdn.net/20170420230925890?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<h3 id="设置字体"><a href="#设置字体" class="headerlink" title="设置字体"></a>设置字体</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">void</span> CTextView::OnChar(UINT nChar, UINT nRepCnt, UINT nFlags) </div><div class="line">&#123;</div><div class="line">	<span class="function">CClientDC <span class="title">dc</span><span class="params">(<span class="keyword">this</span>)</span></span>;</div><div class="line">	CFont font;</div><div class="line">	font.CreatePointFont(<span class="number">300</span>, <span class="string">"华文行楷"</span>, <span class="literal">NULL</span>);</div><div class="line">	CFont *pOldFont = dc.SelectObject(&amp;font);</div><div class="line">……</div><div class="line">	dc.SelectObject(pOldFont);</div><div class="line">	</div><div class="line">	CView::OnChar(nChar, nRepCnt, nFlags);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p> <img src="http://img.blog.csdn.net/20170420230949366?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<h3 id="字幕变色功能的实现"><a href="#字幕变色功能的实现" class="headerlink" title="字幕变色功能的实现"></a>字幕变色功能的实现</h3><p>　　在这个Text例子中，我们在视类的OnCreate 函数中设置定时器，设置一个时间间隔为100ms，标识为1的定时器。<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">int</span> CTextView::OnCreate(LPCREATESTRUCT lpCreateStruct) </div><div class="line">&#123;</div><div class="line">	……</div><div class="line"></div><div class="line">	SetTimer(<span class="number">1</span>, <span class="number">100</span>, <span class="literal">NULL</span>);</div><div class="line"></div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>　　给CTextView类添加WM_TIMER消息的响应函数。<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">void</span> CTextView::OnTimer(UINT nIDEvent) </div><div class="line">&#123;</div><div class="line">	m_nWidth += <span class="number">5</span>;</div><div class="line"></div><div class="line">	<span class="function">CClientDC <span class="title">dc</span><span class="params">(<span class="keyword">this</span>)</span></span>;</div><div class="line">	TEXTMETRIC tm;</div><div class="line">	dc.GetTextMetrics(&amp;tm);</div><div class="line">	CRect rect;</div><div class="line">	rect.left =<span class="number">0</span>;</div><div class="line">	rect.top = <span class="number">200</span>;</div><div class="line">	rect.right = m_nWidth;</div><div class="line">	rect.bottom = rect.top + tm.tmHeight;</div><div class="line"></div><div class="line">	dc.SetTextColor(RGB(<span class="number">255</span>, <span class="number">0</span>, <span class="number">0</span>));</div><div class="line">	CString str;</div><div class="line">	str.LoadString(IDS_STRINGVC);</div><div class="line">	dc.DrawText(str, rect, DT_LEFT);</div><div class="line">	</div><div class="line">	rect.top = <span class="number">150</span>;</div><div class="line">	rect.bottom = rect.top + tm.tmHeight;</div><div class="line">	dc.DrawText(str, rect, DT_RIGHT);</div><div class="line">	</div><div class="line">	CSize sz = dc.GetTextExtent(str);</div><div class="line">	<span class="keyword">if</span> (m_nWidth &gt; sz.cx)</div><div class="line">	&#123;</div><div class="line">		m_nWidth = <span class="number">0</span>;</div><div class="line">		dc.SetTextColor(RGB(<span class="number">0</span>, <span class="number">255</span>, <span class="number">0</span>));</div><div class="line">		dc.TextOut(<span class="number">0</span>, <span class="number">200</span>, str);</div><div class="line">	&#125;</div><div class="line">	</div><div class="line">	CView::OnTimer(nIDEvent);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>　　红色渐变效果可看到。<br><img src="http://img.blog.csdn.net/20170420231009906?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<h1 id="绘图控制"><a href="#绘图控制" class="headerlink" title="绘图控制"></a>绘图控制</h1><h2 id="简单绘图"><a href="#简单绘图-1" class="headerlink" title="简单绘图"></a>简单绘图</h2><p>　　新建一个单文档类型的MFC AppWizard(exe)工程，取名：Graphic。<br>　　添加的菜单项：<br> <img src="http://img.blog.csdn.net/20170420231023694?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"><br>　　给CGraphicView类中添加一个私有变量：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">UINT m_nDrawType;</div></pre></td></tr></table></figure></p>
<p>　　在视类构造函数中将此变量初始化为0。</p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">void</span> CGraphicView::OnDot() </div><div class="line">&#123;</div><div class="line">	m_nDrawType = <span class="number">1</span>;</div><div class="line">	</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">void</span> CGraphicView::OnLine() </div><div class="line">&#123;</div><div class="line">	m_nDrawType = <span class="number">2</span>;	</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">void</span> CGraphicView::OnRectangle() </div><div class="line">&#123;</div><div class="line">	m_nDrawType = <span class="number">3</span>;	</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">void</span> CGraphicView::OnEllipse() </div><div class="line">&#123;</div><div class="line">	m_nDrawType = <span class="number">4</span>;	</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>　　CGraphicView类再增加一个CPoint类型的私有成员变量：m_ptOrigin。在CGraphicView类构造函数中，将该变量的值设置为0。<br><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div></pre></td><td class="code"><pre><div class="line">void CGraphicView::OnLButtonDown(UINT nFlags, CPoint point) </div><div class="line">&#123;</div><div class="line">	m_ptOrigin = point;</div><div class="line">	</div><div class="line">	CView::OnLButtonDown(nFlags, point);</div><div class="line">&#125;</div><div class="line"></div><div class="line">void CGraphicView::OnLButtonUp(UINT nFlags, CPoint point) </div><div class="line">&#123;</div><div class="line">	CClientDC dc(this);</div><div class="line">	//为边框设定颜色</div><div class="line">	CPen pen(PS_SOLID, 1, RGB(255, 0, 0));</div><div class="line">	dc.SelectObject(&amp;pen);</div><div class="line">	//能看到图形内部内容(透明)</div><div class="line">	CBrush *pBrush = CBrush::FromHandle((HBRUSH)GetStockObject(NULL_BRUSH));</div><div class="line">	dc.SelectObject(pBrush);</div><div class="line"></div><div class="line">	switch(m_nDrawType)</div><div class="line">	&#123;</div><div class="line">	case 1:</div><div class="line">		dc.SetPixel(point,RGB(255, 0, 0));</div><div class="line">		break;</div><div class="line">	case 2:</div><div class="line">		dc.MoveTo(m_ptOrigin);</div><div class="line">		dc.LineTo(point);</div><div class="line">		break;</div><div class="line">	case 3:</div><div class="line">		dc.Rectangle(CRect(m_ptOrigin,point));</div><div class="line">		break;</div><div class="line">	case 4:</div><div class="line">		dc.Ellipse(CRect(m_ptOrigin, point));</div><div class="line">		break;</div><div class="line">	&#125;</div><div class="line">	CView::OnLButtonUp(nFlags, point);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p> <img src="http://img.blog.csdn.net/20170420231045554?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<h2 id="设置对话框"><a href="#设置对话框" class="headerlink" title="设置对话框"></a>设置对话框</h2><p>　　再增加一个对话框资源，ID为IDD_DLG_SETTING，Caption为Setting，Font为宋体。</p>
<h3 id="设置线宽"><a href="#设置线宽" class="headerlink" title="设置线宽"></a>设置线宽</h3><p>　　添加一个静态文本框，并将Caption设为“线宽”。再添加一个编辑框，ID：IDC_LINE_WIDTH。为此对话框资源创建一个响应的对话框类，类名为CSettingDlg。对编辑框右键，ClassWizard，为它添加一个成员变量：m_nLineWidth，类型为UINT。为绘图菜单下再增加一个菜单项为“设置”，ID为IDM_SETTING。为此菜单项添加一个命令响应，选择视类做出响应。为CGraphicView类添加一个私有成员变量：m_nLineWidth，类型：UINT，并在CGraphicView类的构造函数初始化为0。<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">void</span> CGraphicView::OnSetting() </div><div class="line">&#123;</div><div class="line">	CSettingDlg dlg;</div><div class="line">	dlg.m_nLineWidth = m_nLineWidth; <span class="comment">//将保存的用户先前设置的线宽再传回给该设置对话框</span></div><div class="line">	<span class="keyword">if</span>(IDOK == dlg.DoModal())<span class="comment">//点击OK才保持线宽值</span></div><div class="line">	&#123;</div><div class="line">		m_nLineWidth = dlg.m_nLineWidth;</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>　　在源文件前部添加：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Include “SettingDlg.h”</div></pre></td></tr></table></figure></p>
<p>　　修改OnLButtonUp函数：<br><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">void CGraphicView::OnLButtonUp(UINT nFlags, CPoint point) </div><div class="line">&#123;</div><div class="line">	CClientDC dc(this);</div><div class="line">	//为边框设定颜色(m_nLineWidth定义线宽)</div><div class="line">	CPen pen(PS_SOLID, m_nLineWidth, RGB(255, 0, 0));</div><div class="line">……</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h3 id="设置线型"><a href="#设置线型" class="headerlink" title="设置线型"></a>设置线型</h3><p>　　为对话框资源添加一个组框，Caption设为线型。ID为IDC_LINE_STYLE。在组框内放三个单选按钮，ID不变，名称分别为：实线、虚线、点线（不要改变顺序）。在第一个单选按钮上右键，属性勾上Group，使三个按钮成为一组。再为CGraphicView类添加一个Int类型的私有成员变量m_nLineStyle，在构造函数中初始化为0。<br>　　由于WINGDI.h定义了一些符号常量，（可以在PS_SOLID右键，Go To Definition Of PS_SOLID），刚好PS_SOLID（实线）值本身就是0；PS_DASH（虚线）是1；PS_DOT（点线）是2。所以此处的排列是故意为之。<br> <img src="http://img.blog.csdn.net/20170424215210507?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"><br> <img src="http://img.blog.csdn.net/20170424215239306?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<p>　　<strong>注意：若要画出虚线和点线，线宽只能为0或1。</strong></p>
<h2 id="颜色对话框"><a href="#颜色对话框" class="headerlink" title="颜色对话框"></a>颜色对话框</h2><p>　　在绘图下增加一个子菜单，ID为IDM_COLOR，Caption为颜色。为其在视类增加一个命令响应，代码：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">void</span> CGraphicView::OnColor() </div><div class="line">&#123;</div><div class="line">	CColorDialog dlg;</div><div class="line">	dlg.m_cc.Flags |= CC_RGBINIT;</div><div class="line">	dlg.m_cc.rgbResult = m_clr;</div><div class="line">	<span class="keyword">if</span> (IDOK == dlg.DoModal())</div><div class="line">	&#123;</div><div class="line">		m_clr = dlg.m_cc.rgbResult;</div><div class="line">		<span class="comment">//dlg.m_cc.Flags |= CC_RGBINIT | CC_FULLOPEN;//让颜色对话框完全展开</span></div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>　　为CGraphicView类再增加一个COLORREF类型的私有成员变量：m_clr，并在构造函数中初始化为红色：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">m_clr = RGB(<span class="number">255</span>, <span class="number">0</span>, <span class="number">0</span>);</div></pre></td></tr></table></figure></p>
<p>　　修改该函数两处位置：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">void</span> CGraphicView::OnLButtonUp(UINT nFlags, CPoint point) </div><div class="line">&#123;</div><div class="line">	<span class="function">CClientDC <span class="title">dc</span><span class="params">(<span class="keyword">this</span>)</span></span>;</div><div class="line">	<span class="comment">//为边框设定颜色(m_nLineStyle定义线型，m_nLineWidth定义线宽，m_clr定义颜色)</span></div><div class="line">	<span class="function">CPen <span class="title">pen</span><span class="params">(m_nLineStyle, m_nLineWidth, m_clr)</span></span>;</div><div class="line">	dc.SelectObject(&amp;pen);</div><div class="line">	<span class="comment">//能看到图形内部内容(透明)</span></div><div class="line">	CBrush *pBrush = CBrush::FromHandle((HBRUSH)GetStockObject(NULL_BRUSH));</div><div class="line">	dc.SelectObject(pBrush);</div><div class="line"></div><div class="line">	<span class="keyword">switch</span>(m_nDrawType)</div><div class="line">	&#123;</div><div class="line">	<span class="keyword">case</span> <span class="number">1</span>:</div><div class="line">		dc.SetPixel(point,m_clr);</div><div class="line">		<span class="keyword">break</span>;</div><div class="line">	<span class="keyword">case</span> <span class="number">2</span>:</div><div class="line">		dc.MoveTo(m_ptOrigin);</div><div class="line">		dc.LineTo(point);</div><div class="line">		<span class="keyword">break</span>;</div><div class="line">	<span class="keyword">case</span> <span class="number">3</span>:</div><div class="line">		dc.Rectangle(CRect(m_ptOrigin,point));</div><div class="line">		<span class="keyword">break</span>;</div><div class="line">	<span class="keyword">case</span> <span class="number">4</span>:</div><div class="line">		dc.Ellipse(CRect(m_ptOrigin, point));</div><div class="line">		<span class="keyword">break</span>;</div><div class="line">	&#125;</div><div class="line">	CView::OnLButtonUp(nFlags, point);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p> <img src="http://img.blog.csdn.net/20170424215308947?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<p>　　注意：//dlg.m_cc.Flags |= CC_RGBINIT | CC_FULLOPEN;//让颜色对话框完全展开<br>这句我没能实现展开效果。</p>
<h2 id="字体对话框"><a href="#字体对话框" class="headerlink" title="字体对话框"></a>字体对话框</h2><p>　　增加一个菜单，ID为IDM_FONT，Caption为字体。在视类增加命令响应，代码：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">void</span> CGraphicView::OnFont() </div><div class="line">&#123;</div><div class="line">	CFontDialog dlg;</div><div class="line">	<span class="keyword">if</span> (IDOK == dlg.DoModal())</div><div class="line">	&#123;</div><div class="line">		<span class="keyword">if</span> (m_font.m_hObject) <span class="comment">//m_font对象是否已经与某字体资源相关联</span></div><div class="line">			m_font.DeleteObject();</div><div class="line">		m_font.CreateFontIndirect(dlg.m_cf.lpLogFont);</div><div class="line">		m_strFontName = dlg.m_cf.lpLogFont-&gt;lfFaceName;</div><div class="line">	&#125;</div><div class="line">	</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="keyword">void</span> CGraphicView::OnDraw(CDC* pDC)</div><div class="line">&#123;</div><div class="line">	CGraphicDoc* pDoc = GetDocument();</div><div class="line">	ASSERT_VALID(pDoc);</div><div class="line">	<span class="comment">// <span class="doctag">TODO:</span> add draw code for native data here</span></div><div class="line">	CFont *pOldFont = pDC-&gt;SelectObject(&amp;m_font);</div><div class="line">	pDC-&gt;TextOut(<span class="number">0</span>, <span class="number">0</span>, m_strFontName);</div><div class="line">	pDC-&gt;SelectObject(pOldFont);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="示例对话框"><a href="#示例对话框" class="headerlink" title="示例对话框"></a>示例对话框</h2><p>　　在对话框中增加一个组框，Caption:示例，ID：IDC_SAMPLE。为CSettingDlg类添加编辑框控件的EN_CHANCE响应函数，对三个单选按钮都选择BN_CLICKED消息。<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">void</span> CSettingDlg::OnRadio1() </div><div class="line">&#123;</div><div class="line">	<span class="comment">// <span class="doctag">TODO:</span> Add your control notification handler code here</span></div><div class="line">	Invalidate();	</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">void</span> CSettingDlg::OnRadio2() </div><div class="line">&#123;</div><div class="line">	<span class="comment">// <span class="doctag">TODO:</span> Add your control notification handler code here</span></div><div class="line">	Invalidate();	</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">void</span> CSettingDlg::OnRadio3() </div><div class="line">&#123;</div><div class="line">	<span class="comment">// <span class="doctag">TODO:</span> Add your control notification handler code here</span></div><div class="line">	Invalidate();	</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">void</span> CSettingDlg::OnPaint() </div><div class="line">&#123;</div><div class="line">	<span class="function">CPaintDC <span class="title">dc</span><span class="params">(<span class="keyword">this</span>)</span></span>; <span class="comment">// device context for painting</span></div><div class="line">	</div><div class="line">	<span class="comment">// <span class="doctag">TODO:</span> Add your message handler code here</span></div><div class="line">	UpdateData();</div><div class="line">	<span class="function">CPen <span class="title">pen</span><span class="params">(m_nLineStyle, m_nLineWidth, m_clr)</span></span>;</div><div class="line">	dc.SelectObject(&amp;pen);</div><div class="line"></div><div class="line">	CRect rect;</div><div class="line">	GetDlgItem(IDC_SAMPLE)-&gt;GetWindowRect(&amp;rect);</div><div class="line">	ScreenToClient(&amp;rect);</div><div class="line"></div><div class="line">	dc.MoveTo(rect.left+<span class="number">20</span>, rect.top+rect.Height()/<span class="number">2</span>);</div><div class="line">	dc.LineTo(rect.right<span class="number">-20</span>, rect.top+rect.Height()/<span class="number">2</span>);</div><div class="line">	<span class="comment">// Do not call CDialog::OnPaint() for painting messages</span></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><img src="http://img.blog.csdn.net/20170424215335853?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<p>　　现在可以实时修改了。</p>
<h2 id="106-改变对话框和控件的背景及文本颜色"><a href="#10-6-改变对话框和控件的背景及文本颜色" class="headerlink" title="10.6 改变对话框和控件的背景及文本颜色"></a>10.6 改变对话框和控件的背景及文本颜色</h2><h3 id="改变整个对话框及其子控件的背景色"><a href="#改变整个对话框及其子控件的背景色" class="headerlink" title="改变整个对话框及其子控件的背景色"></a>改变整个对话框及其子控件的背景色</h3><p>　　为CSettingDlg类添加WM_CTLCOLOR消息，并定义一个CBrush类型的私有成员变量：m_brush，并在构造函数中初始化一个蓝色画刷：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">m_brush.CreateSolidBrush (RGB(<span class="number">0</span>, <span class="number">0</span>, <span class="number">255</span>));</div></pre></td></tr></table></figure></p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">HBRUSH CSettingDlg::OnCtlColor(CDC* pDC, CWnd* pWnd, UINT nCtlColor) </div><div class="line">&#123;</div><div class="line">	HBRUSH hbr = CDialog::OnCtlColor(pDC, pWnd, nCtlColor);</div><div class="line">	</div><div class="line">	<span class="comment">// <span class="doctag">TODO:</span> Change any attributes of the DC here</span></div><div class="line">	</div><div class="line">	<span class="comment">// <span class="doctag">TODO:</span> Return a different brush if the default is not desired</span></div><div class="line">	<span class="comment">//return hbr;</span></div><div class="line">	<span class="keyword">return</span> m_brush;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p> <img src="http://img.blog.csdn.net/20170424215356165?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<h3 id="仅改变某个子控件的背景及文本颜色"><a href="#仅改变某个子控件的背景及文本颜色" class="headerlink" title="仅改变某个子控件的背景及文本颜色"></a>仅改变某个子控件的背景及文本颜色</h3><h1 id="图形的保存和重绘"><a href="#图形的保存和重绘" class="headerlink" title="图形的保存和重绘"></a>图形的保存和重绘</h1><h2 id="坐标空间和转换"><a href="#坐标空间和转换" class="headerlink" title="坐标空间和转换"></a>坐标空间和转换</h2><h3 id="坐标空间"><a href="#坐标空间" class="headerlink" title="坐标空间"></a>坐标空间</h3><p>　　Win32应用程序编程接口（API）使用四种坐标空间：世界坐标系空间、页面空间、设备空间和物理设备空间。Win32 API把世界坐标系空间和页面空间称为逻辑空间。</p>
<h3 id="转换"><a href="#转换" class="headerlink" title="转换"></a>转换</h3><p>　　转换是把对象从一个坐标空间复制到另一个坐标空间时改变（或转变）这一对象的大小、方位和形态。</p>
<h2 id="图形的保存和重绘"><a href="#图形的保存和重绘-1" class="headerlink" title="图形的保存和重绘"></a>图形的保存和重绘</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">HBRUSH CSettingDlg::OnCtlColor(CDC* pDC, CWnd* pWnd, UINT nCtlColor) </div><div class="line">&#123;</div><div class="line">	HBRUSH hbr = CDialog::OnCtlColor(pDC, pWnd, nCtlColor);</div><div class="line">	</div><div class="line">	<span class="comment">// <span class="doctag">TODO:</span> Change any attributes of the DC here</span></div><div class="line">	</div><div class="line">	<span class="comment">// <span class="doctag">TODO:</span> Return a different brush if the default is not desired</span></div><div class="line">	<span class="comment">//return hbr;</span></div><div class="line">	<span class="keyword">if</span> (pWnd -&gt; GetDlgCtrlID() == IDC_LINE_STYLE)</div><div class="line">	&#123;</div><div class="line">		pDC-&gt;SetTextColor(RGB(<span class="number">255</span>, <span class="number">0</span>, <span class="number">0</span>));</div><div class="line">		<span class="keyword">return</span> m_brush;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">return</span> hbr;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p> <img src="http://img.blog.csdn.net/20170424215530885?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<p>　　上述程序再加一行：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">pDC-&gt;SetBkMode(TRANSPARENT);</div></pre></td></tr></table></figure></p>
<p> <img src="http://img.blog.csdn.net/20170424215545651?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line">HBRUSH CSettingDlg::OnCtlColor(CDC* pDC, CWnd* pWnd, UINT nCtlColor) </div><div class="line">&#123;</div><div class="line">	HBRUSH hbr = CDialog::OnCtlColor(pDC, pWnd, nCtlColor);</div><div class="line">	</div><div class="line">	<span class="comment">// <span class="doctag">TODO:</span> Change any attributes of the DC here</span></div><div class="line">	</div><div class="line">	<span class="comment">// <span class="doctag">TODO:</span> Return a different brush if the default is not desired</span></div><div class="line">	<span class="comment">//return hbr;</span></div><div class="line">	<span class="keyword">if</span> (pWnd -&gt; GetDlgCtrlID() == IDC_LINE_STYLE)</div><div class="line">	&#123;</div><div class="line">		pDC-&gt;SetTextColor(RGB(<span class="number">255</span>, <span class="number">0</span>, <span class="number">0</span>));</div><div class="line">		pDC-&gt;SetBkMode(TRANSPARENT);</div><div class="line">		<span class="keyword">return</span> m_brush;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">if</span> (pWnd-&gt;GetDlgCtrlID() == IDC_LINE_WIDTH)</div><div class="line">	&#123;</div><div class="line">		pDC-&gt;SetTextColor(RGB(<span class="number">255</span>, <span class="number">0</span>, <span class="number">0</span>));</div><div class="line">		<span class="comment">//pDC-&gt;SetBkMode(TRANSPARENT);</span></div><div class="line">		pDC-&gt;SetBkColor(RGB(<span class="number">0</span>, <span class="number">0</span>, <span class="number">255</span>));</div><div class="line">		<span class="keyword">return</span> m_brush;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">return</span> hbr;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p> <img src="http://img.blog.csdn.net/20170424215606416?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<h3 id="改变控件上的文本字体"><a href="#改变控件上的文本字体" class="headerlink" title="改变控件上的文本字体"></a>改变控件上的文本字体</h3><p>　　为对话框增加一个静态文本控件，ID:IDC_TEXT，Caption:程序员，为CSettingDlg类增加一个CFont类型的私有成员变量：m_font，在构造函数中添加<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">m_font.CreatePointFont(<span class="number">200</span>, <span class="string">"华文行楷"</span>);</div></pre></td></tr></table></figure></p>
<p>　　在OnCtlColor函数中添加：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">if</span> (pWnd-&gt;GetDlgCtrlID() == IDC_TEXT)</div><div class="line">&#123;</div><div class="line">	pDC-&gt;SelectObject(&amp;m_font);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p> <img src="http://img.blog.csdn.net/20170424215622479?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<h3 id="改变按钮控件的背景色及文本颜色"><a href="#改变按钮控件的背景色及文本颜色" class="headerlink" title="改变按钮控件的背景色及文本颜色"></a>改变按钮控件的背景色及文本颜色</h3><p>　　在CSettingDlg类OnCtlColor函数中添加：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">	<span class="keyword">if</span> (pWnd-&gt;GetDlgCtrlID() == IDOK)</div><div class="line">	&#123;</div><div class="line">		pDC-&gt;SetTextColor(RGB(<span class="number">255</span>, <span class="number">0</span>, <span class="number">0</span>));</div><div class="line">		<span class="keyword">return</span> m_brush;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">return</span> hbr;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>　　点Insert-New Class，选择MFC Class，新增类名：CTestBtn，基类CButton。<br>　　为此类添加DrawItem虚函数重写。<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">void</span> CTestBtn::DrawItem(LPDRAWITEMSTRUCT lpDrawItemStruct) </div><div class="line">&#123;</div><div class="line">	<span class="comment">// <span class="doctag">TODO:</span> Add your code to draw the specified item</span></div><div class="line">	UINT uStyle = DFCS_BUTTONPUSH;</div><div class="line"></div><div class="line">	ASSERT(lpDrawItemStruct-&gt;CtlType == ODT_BUTTON);</div><div class="line"></div><div class="line">	<span class="keyword">if</span> (lpDrawItemStruct-&gt;itemState &amp; ODS_SELECTED)</div><div class="line">		uStyle |= DFCS_PUSHED;</div><div class="line"></div><div class="line">	::DrawFrameControl(lpDrawItemStruct-&gt;hDC, &amp;lpDrawItemStruct-&gt;rcItem, DFC_BUTTON, uStyle);</div><div class="line"></div><div class="line">	CString strText;</div><div class="line">	GetWindowText(strText);</div><div class="line"></div><div class="line">	COLORREF crOldColor = ::SetTextColor(lpDrawItemStruct-&gt;hDC, RGB(<span class="number">255</span>, <span class="number">0</span>, <span class="number">0</span>));</div><div class="line">	::DrawText(lpDrawItemStruct-&gt;hDC, strText, strText.GetLength(),</div><div class="line">		&amp;lpDrawItemStruct-&gt;rcItem, DT_SINGLELINE | DT_VCENTER | DT_CENTER);</div><div class="line">	::SetTextColor(lpDrawItemStruct-&gt;hDC, crOldColor);</div><div class="line">	</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>　　然而，此时我返回双击OK键显示“Cannot add new member”……</p>
<p>　　按理，接下来应该是：<br>　　利用ClassWizard打开Add Member Variable对话框，为OK按钮关联一个成员变量，名称为m_btnTest，类型CTestBtn。在SettingDlg.h文件前部添加<code>#include “TestBtn.h”</code>。对OK右键属性，打开Styles，选中Owner draw选项。此时OK文字变红色。</p>
<h2 id="位图的显示"><a href="#位图的显示" class="headerlink" title="位图的显示"></a>位图的显示</h2><h1 id="定制应用程序外观"><a href="#定制应用程序外观" class="headerlink" title="定制应用程序外观"></a>定制应用程序外观</h1><h2 id="修改应用程序窗口的外观"><a href="#修改应用程序窗口的外观" class="headerlink" title="修改应用程序窗口的外观"></a>修改应用程序窗口的外观</h2><h3 id="在窗口创建之前修改"><a href="#在窗口创建之前修改" class="headerlink" title="在窗口创建之前修改"></a>在窗口创建之前修改</h3><p>　　创建前，打开CMainFrame类的PreCreateWindow成员函数，修改CREATETRUCT结构体中的cx和cy成员。<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">BOOL CMainFrame::PreCreateWindow(CREATESTRUCT&amp; cs)</div><div class="line">&#123;</div><div class="line">	<span class="keyword">if</span>( !CFrameWnd::PreCreateWindow(cs) )</div><div class="line">		<span class="keyword">return</span> FALSE;</div><div class="line">	<span class="comment">// <span class="doctag">TODO:</span> Modify the Window class or styles here by modifying</span></div><div class="line">	<span class="comment">//  the CREATESTRUCT cs</span></div><div class="line">	cs.cx = <span class="number">300</span>;</div><div class="line">	cs.cy = <span class="number">200</span>;</div><div class="line">	<span class="keyword">return</span> TRUE;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>　　创建运行，可看到初始大小为300x200的应用程序窗口。</p>
<p>　　修改窗口标题：在上述 return TRUE; 前添加：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">cs.style &amp;= ~FWS_ADDTOTITLE;</div><div class="line">cs.lpszName = <span class="string">"http://www.sunxin.org"</span>;</div></pre></td></tr></table></figure></p>
<h2 id="在窗口创建之后修改"><a href="#在窗口创建之后修改" class="headerlink" title="在窗口创建之后修改"></a>在窗口创建之后修改</h2><p>　　注释掉之前添加的代码。在OnCreate函数中添加：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">int</span> CMainFrame::OnCreate(LPCREATESTRUCT lpCreateStruct)</div><div class="line">&#123;</div><div class="line">	…</div><div class="line"></div><div class="line">	<span class="comment">// <span class="doctag">TODO:</span> Delete these three lines if you don't want the toolbar to</span></div><div class="line">	<span class="comment">//  be dockable</span></div><div class="line">	m_wndToolBar.EnableDocking(CBRS_ALIGN_ANY);</div><div class="line">	EnableDocking(CBRS_ALIGN_ANY);</div><div class="line">	DockControlBar(&amp;m_wndToolBar);</div><div class="line"></div><div class="line">	SetWindowLong(m_hWnd, GWL_STYLE, WS_OVERLAPPEDWINDOW);</div><div class="line"></div><div class="line"></div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>　　创建运行后可看到文档标题去掉了。</p>
<p>　　去掉窗口最大化框类型：<br>　　将上述SetWindowLong函数替换为<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">SetWindowLong(m_hWnd, GWL_STYLE, GetWindowLong(m_hWnd, GWL_STYLE) &amp; ~WS_MAXIMIZEBOX);</div></pre></td></tr></table></figure></p>
<p>　　创建运行发现最大化框变灰，不能放大窗口了。</p>
<h2 id="修改窗口的光标-图标和背景"><a href="#修改窗口的光标、图标和背景" class="headerlink" title="修改窗口的光标、图标和背景"></a>修改窗口的光标、图标和背景</h2><h3 id="在窗口创建之前修改"><a href="#在窗口创建之前修改-1" class="headerlink" title="在窗口创建之前修改"></a>在窗口创建之前修改</h3><h1 id="网络编程"><a href="#网络编程" class="headerlink" title="网络编程"></a>网络编程</h1><h2 id="计算机网络基本知识"><a href="#计算机网络基本知识" class="headerlink" title="计算机网络基本知识"></a>计算机网络基本知识</h2><p>ISO/OSI七层参考模型<br>应用层——处理网络应用<br>Telnet、FTP、HTTP、DNS、SMTP、POP3</p>
<p>表示层——数据表示<br>TCP、UDP</p>
<p>会话层——主机间通信<br>传输层——端到端的连接<br>网络层——寻址和最短路径<br>IP、ICMP、IGMP</p>
<p>数据链路层——介质访问（接入）<br>物理层——二进制传输</p>
<h2 id="基于tcp的网络应用程序的编写"><a href="#基于TCP的网络应用程序的编写" class="headerlink" title="基于TCP的网络应用程序的编写"></a>基于TCP的网络应用程序的编写</h2><h3 id="服务器端程序"><a href="#服务器端程序" class="headerlink" title="服务器端程序"></a>服务器端程序</h3><p>　　关闭先前的工作区，新建一个工程，选择Win32 Console Application类型，名为TCPSrv。选择An empty project选项，创建一个空工程。再新建一个C++源文件：TcpSrv.cpp。<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;Winsock2.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line">	<span class="comment">//加载套接字库</span></div><div class="line">	WORD wVersionRequested;</div><div class="line">	WSADATA wsaData;</div><div class="line">	<span class="keyword">int</span> err;</div><div class="line"></div><div class="line">	wVersionRequested = MAKEWORD(<span class="number">1</span>, <span class="number">1</span>);</div><div class="line"></div><div class="line">	err = WSAStartup(wVersionRequested, &amp;wsaData);</div><div class="line">	<span class="keyword">if</span> (err != <span class="number">0</span>)&#123;</div><div class="line">		<span class="keyword">return</span>;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	<span class="keyword">if</span> (LOBYTE(wsaData.wVersion) != <span class="number">1</span> ||</div><div class="line">		HIBYTE(wsaData.wVersion) != <span class="number">1</span>)&#123;</div><div class="line">		WSACleanup();</div><div class="line">		<span class="keyword">return</span>;</div><div class="line">	&#125;</div><div class="line">	<span class="comment">//创建用于监听的套接字</span></div><div class="line">	SOCKET sockSrv = socket(AF_INET, SOCK_STREAM, <span class="number">0</span>);</div><div class="line"></div><div class="line">	SOCKADDR_IN addrSrv;</div><div class="line">	addrSrv.sin_addr.S_un.S_addr = htonl(INADDR_ANY);</div><div class="line">	addrSrv.sin_family = AF_INET;</div><div class="line">	addrSrv.sin_port = htons(<span class="number">7000</span>);</div><div class="line"></div><div class="line">	<span class="comment">//绑定套接字</span></div><div class="line">	bind(sockSrv, (SOCKADDR*)&amp;addrSrv, <span class="keyword">sizeof</span>(SOCKADDR));</div><div class="line">	<span class="comment">//将套接字设为监听模式，准备接收客户请求</span></div><div class="line">	listen(sockSrv, <span class="number">5</span>);</div><div class="line"></div><div class="line">	SOCKADDR_IN addrClient;</div><div class="line">	<span class="keyword">int</span> len = <span class="keyword">sizeof</span>(SOCKADDR);</div><div class="line"></div><div class="line">	<span class="keyword">while</span> (<span class="number">1</span>)</div><div class="line">	&#123;</div><div class="line">		<span class="comment">//等待客户请求到来</span></div><div class="line">		SOCKET sockConn = accept(sockSrv, (SOCKADDR*)&amp;addrClient, &amp;len);</div><div class="line">		<span class="keyword">char</span> sendBuf[<span class="number">100</span>];</div><div class="line">		<span class="built_in">sprintf</span>(sendBuf, <span class="string">"Welcome %s to http://www.sunxin.org"</span>, inet_ntoa(addrClient.sin_addr));</div><div class="line">		<span class="comment">//发送数据</span></div><div class="line">		send(sockConn, sendBuf, <span class="built_in">strlen</span>(sendBuf)+<span class="number">1</span>, <span class="number">0</span>);</div><div class="line">		<span class="keyword">char</span> recvBuf[<span class="number">100</span>];</div><div class="line">		<span class="comment">//接收数据</span></div><div class="line">		recv(sockConn, recvBuf, <span class="number">100</span>, <span class="number">0</span>);</div><div class="line">		<span class="comment">//打印接收的数据</span></div><div class="line">		<span class="built_in">printf</span>(<span class="string">"%s\n"</span>, recvBuf);</div><div class="line">		<span class="comment">//关闭套接字</span></div><div class="line">		closesocket(sockConn);</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>　　Project-Setting-Link，在Object/library modules编辑框中添加ws2_32.lib文件，注意输入的库文件与前面的库文件之间一定 要有一个空格。<br><img src="http://img.blog.csdn.net/20170428102011032?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<h3 id="客户端程序"><a href="#客户端程序" class="headerlink" title="客户端程序"></a>客户端程序</h3><p>　　在工作区名称上单击鼠标右键，选择Add New Project to Workspace，再创建一个Win32 Console Application类型的应用程序，创建一个空工程。为此增加一个C++源文件：TcpClient.cpp。<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;Winsock2.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line">	<span class="comment">//加载套接字库</span></div><div class="line">	WORD wVersionRequested;</div><div class="line">	WSADATA wsaData;</div><div class="line">	<span class="keyword">int</span> err;</div><div class="line"></div><div class="line">	wVersionRequested = MAKEWORD(<span class="number">1</span>, <span class="number">1</span>);</div><div class="line"></div><div class="line">	err = WSAStartup(wVersionRequested, &amp;wsaData);</div><div class="line">	<span class="keyword">if</span> (err != <span class="number">0</span>)&#123;</div><div class="line">		<span class="keyword">return</span>;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	<span class="keyword">if</span> (LOBYTE(wsaData.wVersion) != <span class="number">1</span> || </div><div class="line">		HIBYTE(wsaData.wVersion) != <span class="number">1</span>)&#123;</div><div class="line">		WSACleanup();</div><div class="line">		<span class="keyword">return</span>;</div><div class="line">	&#125;</div><div class="line">	<span class="comment">//创建套接字</span></div><div class="line">	SOCKET sockClient = socket(AF_INET, SOCK_STREAM, <span class="number">0</span>);</div><div class="line"></div><div class="line">	SOCKADDR_IN addrSrv;</div><div class="line">	addrSrv.sin_addr.S_un.S_addr = inet_addr(<span class="string">"127.0.0.1"</span>);</div><div class="line">	addrSrv.sin_family = AF_INET;</div><div class="line">	addrSrv.sin_port = htons(<span class="number">7000</span>);</div><div class="line"></div><div class="line">	<span class="comment">//向服务器发出连接请求</span></div><div class="line">	connect(sockClient, (SOCKADDR*)&amp;addrSrv, <span class="keyword">sizeof</span>(SOCKADDR));</div><div class="line"></div><div class="line">	<span class="comment">//接收数据</span></div><div class="line">	<span class="keyword">char</span> recvBuf[<span class="number">100</span>];</div><div class="line">	recv(sockClient, recvBuf, <span class="number">100</span>, <span class="number">0</span>);</div><div class="line">	<span class="built_in">printf</span>(<span class="string">"%s\n"</span>,recvBuf);</div><div class="line">	<span class="comment">//发送数据</span></div><div class="line">	send(sockClient, <span class="string">"This is lisi"</span>, <span class="built_in">strlen</span>(<span class="string">"This is lisi"</span>)+<span class="number">1</span>, <span class="number">0</span>);</div><div class="line">	<span class="comment">//关闭套接字</span></div><div class="line">	closesocket(sockClient);</div><div class="line">	WSACleanup();</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>　　链接库文件：ws2_32.lib。<br>　　创建运行，首先运行服务器程序，然后再运行客户端程序。</p>
<p><img src="http://img.blog.csdn.net/20170428102101643?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<p>　　<strong>注意</strong>：当没有报错，服务器端运行结果为“烫烫……烫”（N个烫）时，尝试换一个端口号，有可能你设置的端口号被其它的应用程序占用了。</p>
<h2 id="基于udp的网络应用程序的编写"><a href="#基于UDP的网络应用程序的编写" class="headerlink" title="基于UDP的网络应用程序的编写"></a>基于UDP的网络应用程序的编写</h2><h3 id="服务器端程序"><a href="#服务器端程序-1" class="headerlink" title="服务器端程序"></a>服务器端程序</h3><p>　　关闭先前的工作区，新建一个工程，选择Win32 Console Application类型，名为UdpSrv。选择An empty project选项，创建一个空工程。再新建一个C++源文件：UdpSrv.cpp。<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;Winsock2.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line">	<span class="comment">//加载套接字库</span></div><div class="line">	WORD wVersionRequired;</div><div class="line">	WSADATA wsaData;</div><div class="line">	<span class="keyword">int</span> err;</div><div class="line"></div><div class="line">	wVersionRequired = MAKEWORD(<span class="number">1</span>, <span class="number">1</span>);</div><div class="line"></div><div class="line">	err = WSAStartup(wVersionRequired, &amp;wsaData);</div><div class="line">	<span class="keyword">if</span> (err != <span class="number">0</span>)</div><div class="line">	&#123;</div><div class="line">		<span class="keyword">return</span>;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	<span class="keyword">if</span> (LOBYTE(wsaData.wVersion) != <span class="number">1</span> ||</div><div class="line">		HIBYTE(wsaData.wVersion) !=<span class="number">1</span>)</div><div class="line">	&#123;</div><div class="line">		WSACleanup();</div><div class="line">		<span class="keyword">return</span>;</div><div class="line">	&#125;</div><div class="line">	<span class="comment">//创建套接字</span></div><div class="line">	SOCKET sockSrv = socket(AF_INET, SOCK_DGRAM, <span class="number">0</span>);</div><div class="line">	SOCKADDR_IN addrSrv;</div><div class="line">	addrSrv.sin_addr.S_un.S_addr = htonl(INADDR_ANY);</div><div class="line">	addrSrv.sin_family = AF_INET;</div><div class="line">	addrSrv.sin_port = htons(<span class="number">7000</span>);</div><div class="line">	<span class="comment">//绑定套接字</span></div><div class="line">	bind(sockSrv, (SOCKADDR*)&amp;addrSrv, <span class="keyword">sizeof</span>(SOCKADDR));</div><div class="line"></div><div class="line">	<span class="comment">//等待并接收数据</span></div><div class="line">	SOCKADDR_IN addrClient;</div><div class="line">	<span class="keyword">int</span> len = <span class="keyword">sizeof</span>(SOCKADDR);</div><div class="line">	<span class="keyword">char</span> recvBuf[<span class="number">100</span>];</div><div class="line">	recvfrom(sockSrv, recvBuf, <span class="number">100</span>, <span class="number">0</span>, (SOCKADDR*)&amp;addrClient, &amp;len);</div><div class="line">	<span class="built_in">printf</span>(<span class="string">"%s\n"</span>,recvBuf);</div><div class="line">	<span class="comment">//关闭套接字</span></div><div class="line">	closesocket(sockSrv);</div><div class="line">	WSACleanup();</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>　　在工程设置对话框的链接选项卡下添加库文件：Ws2_32.lib的链接。</p>
<h3 id="客户端程序"><a href="#客户端程序-1" class="headerlink" title="客户端程序"></a>客户端程序</h3><p>　　在同一个UdpSrv工作区中创建客户端应用程序。创建一个空的Win32 Console Application类型的工程，名为：UdpClient。为该工程添加一个C++源文件：UdpClient.cpp。<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;Winsock2.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line">	<span class="comment">//加载套接字库</span></div><div class="line">	WORD wVersionRequired;</div><div class="line">	WSADATA wsaData;</div><div class="line">	<span class="keyword">int</span> err;</div><div class="line"></div><div class="line">	wVersionRequired = MAKEWORD(<span class="number">1</span>, <span class="number">1</span>);</div><div class="line"></div><div class="line">	err = WSAStartup(wVersionRequired, &amp;wsaData);</div><div class="line">	<span class="keyword">if</span> (err != <span class="number">0</span>)</div><div class="line">	&#123;</div><div class="line">		<span class="keyword">return</span>;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	<span class="keyword">if</span> (LOBYTE(wsaData.wVersion) != <span class="number">1</span> ||</div><div class="line">		HIBYTE(wsaData.wVersion) !=<span class="number">1</span>)</div><div class="line">	&#123;</div><div class="line">		WSACleanup();</div><div class="line">		<span class="keyword">return</span>;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	<span class="comment">//创建套接字</span></div><div class="line">	SOCKET sockClient = socket(AF_INET, SOCK_DGRAM, <span class="number">0</span>);</div><div class="line">	SOCKADDR_IN addrSrv;</div><div class="line">	addrSrv.sin_addr.S_un.S_addr = inet_addr(<span class="string">"127.0.0.1"</span>);</div><div class="line">	addrSrv.sin_family = AF_INET;</div><div class="line">	addrSrv.sin_port = htons(<span class="number">7000</span>);</div><div class="line">	<span class="comment">//发送数据</span></div><div class="line">	sendto(sockClient, <span class="string">"Hello"</span>, <span class="built_in">strlen</span>(<span class="string">"Hello"</span>)+<span class="number">1</span>, <span class="number">0</span>, </div><div class="line">		(SOCKADDR*)&amp;addrSrv, <span class="keyword">sizeof</span>(SOCKADDR));</div><div class="line">	<span class="comment">//关闭套接字</span></div><div class="line">	closesocket(sockClient);</div><div class="line">	WSACleanup();</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>　　链接库文件：ws2_32.lib。</p>
<p>　　创建运行。服务器端程序应先启动，然后启动客户端程序。</p>
<p><img src="http://img.blog.csdn.net/20170428102150065?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<p>　　<strong>基于TCP和基于UDP的网络应用程序在发送和接收数据时使用的函数是不一样的：前者使用send和recv，后者使用sendto和recvfrom。</strong></p>
<h2 id="基于udp的简单聊天程序"><a href="#基于UDP的简单聊天程序" class="headerlink" title="基于UDP的简单聊天程序"></a>基于UDP的简单聊天程序</h2><p>　　在新工作区新建一个空的Win32 Console Application类型的应用程序，名为NetSrv。为该工程添加一个C++源文件：NetSrv.cpp。接着为该工程添加对WinSock库的链接，即在工程设置对话框的Link选项卡上添加ws2_32.lib文件的链接。<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;Winsock2.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></div><div class="line"> <span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line"> &#123;</div><div class="line">	 <span class="comment">//加载套接字库</span></div><div class="line">	 WORD wVersionRequested;</div><div class="line">	 WSADATA wsaData;</div><div class="line">	 <span class="keyword">int</span> err;</div><div class="line"></div><div class="line">	 wVersionRequested = MAKEWORD(<span class="number">1</span>, <span class="number">1</span>);</div><div class="line"></div><div class="line">	 err = WSAStartup(wVersionRequested, &amp;wsaData);</div><div class="line">	 <span class="keyword">if</span> (err != <span class="number">0</span>)</div><div class="line">	 &#123;</div><div class="line">		 <span class="keyword">return</span>;</div><div class="line">	 &#125;</div><div class="line"></div><div class="line">		<span class="keyword">if</span> (LOBYTE(wsaData.wVersion) != <span class="number">1</span> ||</div><div class="line">		HIBYTE(wsaData.wVersion) !=<span class="number">1</span>)</div><div class="line">	&#123;</div><div class="line">		WSACleanup();</div><div class="line">		<span class="keyword">return</span>;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	 <span class="comment">//创建套接字</span></div><div class="line">	 SOCKET sockSrv = socket(AF_INET, SOCK_DGRAM, <span class="number">0</span>);</div><div class="line"></div><div class="line">	 SOCKADDR_IN addrSrv;</div><div class="line">	 addrSrv.sin_addr.S_un.S_addr = htonl(INADDR_ANY);</div><div class="line">	 addrSrv.sin_family = AF_INET;</div><div class="line">	 addrSrv.sin_port = htons(<span class="number">7000</span>);</div><div class="line"></div><div class="line">	 <span class="comment">//绑定套接字</span></div><div class="line">	 bind(sockSrv, (SOCKADDR*)&amp;addrSrv, <span class="keyword">sizeof</span>(SOCKADDR));</div><div class="line"></div><div class="line">	 <span class="keyword">char</span> recvBuf[<span class="number">100</span>];</div><div class="line">	 <span class="keyword">char</span> sendBuf[<span class="number">100</span>];</div><div class="line">	 <span class="keyword">char</span> tempBuf[<span class="number">200</span>];</div><div class="line"></div><div class="line">	 SOCKADDR_IN addrClient;</div><div class="line">	 <span class="keyword">int</span> len = <span class="keyword">sizeof</span>(SOCKADDR);</div><div class="line">	 <span class="keyword">while</span>(<span class="number">1</span>)</div><div class="line">	 &#123;</div><div class="line">		 <span class="comment">//等待并接收数据</span></div><div class="line">		 recvfrom(sockSrv, recvBuf, <span class="number">100</span>, <span class="number">0</span>, (SOCKADDR*)&amp;addrClient, &amp;len);</div><div class="line">		 <span class="keyword">if</span> (<span class="string">'q'</span> == recvBuf[<span class="number">0</span>])</div><div class="line">		 &#123;</div><div class="line">			 sendto(sockSrv, <span class="string">"q"</span>, <span class="built_in">strlen</span>(<span class="string">"q"</span>)+<span class="number">1</span>, <span class="number">0</span>, (SOCKADDR*)&amp;addrClient, len);</div><div class="line">			 <span class="built_in">printf</span>(<span class="string">"Chat end!\n"</span>);</div><div class="line">			 <span class="keyword">break</span>;</div><div class="line">		 &#125;</div><div class="line">		 <span class="built_in">sprintf</span>(tempBuf, <span class="string">"%s say : %s"</span>, inet_ntoa(addrClient.sin_addr), recvBuf);</div><div class="line">		 <span class="built_in">printf</span>(<span class="string">"%s\n"</span>, tempBuf);</div><div class="line">		 <span class="comment">//发送数据</span></div><div class="line">		 <span class="built_in">printf</span>(<span class="string">"Please input data:\n"</span>);</div><div class="line">		 gets(sendBuf);</div><div class="line">		 sendto(sockSrv, sendBuf, <span class="built_in">strlen</span>(sendBuf)+<span class="number">1</span>, <span class="number">0</span>, (SOCKADDR*)&amp;addrClient, len);</div><div class="line">	&#125;</div><div class="line">	 <span class="comment">//关闭套接字</span></div><div class="line">	 closesocket(sockSrv);</div><div class="line">	 WSACleanup();</div><div class="line"> &#125;</div></pre></td></tr></table></figure></p>
<h3 id="客户端程序"><a href="#客户端程序-2" class="headerlink" title="客户端程序"></a>客户端程序</h3><p>　　向已有工作区增加一个空的Win32 Console Application类型的工程：NetClient。为此添加一个C++源文件：NetClient.cpp。为该工程添加ws2_32.lib文件的链接。<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;Winsock2.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></div><div class="line"> <span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line"> &#123;</div><div class="line">	 <span class="comment">//加载套接字库</span></div><div class="line">	 WORD wVersionRequested;</div><div class="line">	 WSADATA wsaData;</div><div class="line">	 <span class="keyword">int</span> err;</div><div class="line"></div><div class="line">	 wVersionRequested = MAKEWORD(<span class="number">1</span>, <span class="number">1</span>);</div><div class="line"></div><div class="line">	 err = WSAStartup(wVersionRequested, &amp;wsaData);</div><div class="line">	 <span class="keyword">if</span> (err != <span class="number">0</span>)</div><div class="line">	 &#123;</div><div class="line">		 <span class="keyword">return</span>;</div><div class="line">	 &#125;</div><div class="line"></div><div class="line">		<span class="keyword">if</span> (LOBYTE(wsaData.wVersion) != <span class="number">1</span> ||</div><div class="line">		HIBYTE(wsaData.wVersion) !=<span class="number">1</span>)</div><div class="line">	&#123;</div><div class="line">		WSACleanup();</div><div class="line">		<span class="keyword">return</span>;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	 <span class="comment">//创建套接字</span></div><div class="line">	 SOCKET sockClient = socket(AF_INET, SOCK_DGRAM, <span class="number">0</span>);</div><div class="line"></div><div class="line">	 SOCKADDR_IN addrSrv;</div><div class="line">	 addrSrv.sin_addr.S_un.S_addr = inet_addr(<span class="string">"127.0.0.1"</span>);</div><div class="line">	 addrSrv.sin_family = AF_INET;</div><div class="line">	 addrSrv.sin_port = htons(<span class="number">7000</span>);</div><div class="line"></div><div class="line">	 <span class="keyword">char</span> recvBuf[<span class="number">100</span>];</div><div class="line">	 <span class="keyword">char</span> sendBuf[<span class="number">100</span>];</div><div class="line">	 <span class="keyword">char</span> tempBuf[<span class="number">200</span>];</div><div class="line"></div><div class="line">	 <span class="keyword">int</span> len = <span class="keyword">sizeof</span>(SOCKADDR);</div><div class="line"></div><div class="line">	 <span class="keyword">while</span>(<span class="number">1</span>)</div><div class="line">	 &#123;</div><div class="line">		 <span class="comment">//发送数据</span></div><div class="line">		 <span class="built_in">printf</span>(<span class="string">"Please input data:\n"</span>);</div><div class="line">		 gets(sendBuf);</div><div class="line">		 sendto(sockClient, sendBuf, <span class="built_in">strlen</span>(sendBuf)+<span class="number">1</span>, <span class="number">0</span>, (SOCKADDR*)&amp;addrSrv, len);</div><div class="line">		 <span class="comment">//等待并接收数据</span></div><div class="line"></div><div class="line">		 recvfrom(sockClient, recvBuf, <span class="number">100</span>, <span class="number">0</span>, (SOCKADDR*)&amp;addrSrv, &amp;len);</div><div class="line">		 <span class="keyword">if</span>(<span class="string">'q'</span> == recvBuf[<span class="number">0</span>])</div><div class="line">		 &#123;</div><div class="line">			 sendto(sockClient, <span class="string">"q"</span>, <span class="built_in">strlen</span>(<span class="string">"q"</span>)+<span class="number">1</span>, <span class="number">0</span>, (SOCKADDR*)&amp;addrSrv, len);</div><div class="line">			 <span class="built_in">printf</span>(<span class="string">"Chat end!\n"</span>);</div><div class="line">			 <span class="keyword">break</span>;</div><div class="line">		 &#125;</div><div class="line">		 <span class="built_in">sprintf</span>(tempBuf, <span class="string">"%s say : %s"</span>, inet_ntoa(addrSrv.sin_addr), recvBuf);</div><div class="line">		 <span class="built_in">printf</span>(<span class="string">"%s\n"</span>, tempBuf);</div><div class="line">	 &#125;</div><div class="line">	 <span class="comment">//关闭套接字</span></div><div class="line">	 closesocket(sockClient);</div><div class="line">	 WSACleanup();</div><div class="line"> &#125;</div></pre></td></tr></table></figure></p>
<p><img src="http://img.blog.csdn.net/20170428102229597?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<h1 id="多线程"><a href="#多线程" class="headerlink" title="多线程"></a>多线程</h1><h2 id="进程"><a href="#进程" class="headerlink" title="进程"></a>进程</h2><h3 id="程序和进程"><a href="#程序和进程" class="headerlink" title="程序和进程"></a>程序和进程</h3><h2 id="简单多线程示例"><a href="#简单多线程示例" class="headerlink" title="简单多线程示例"></a>简单多线程示例</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;windows.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream.h&gt;</span></span></div><div class="line"></div><div class="line">    <span class="function">DWORD WINAPI <span class="title">Fun1Proc</span><span class="params">(</span></span></div><div class="line">	LPVOID lpParameter  <span class="comment">//thread data					 </span></div><div class="line">	);</div><div class="line">	<span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line">	&#123;</div><div class="line">		HANDLE hThread1;</div><div class="line">		hThread1 = CreateThread(<span class="literal">NULL</span>, <span class="number">0</span>, Fun1Proc, <span class="literal">NULL</span>, <span class="number">0</span>, <span class="literal">NULL</span>);</div><div class="line">		CloseHandle(hThread1);</div><div class="line">		<span class="built_in">cout</span>&lt;&lt;<span class="string">"main thread is running"</span>&lt;&lt;<span class="built_in">endl</span>;</div><div class="line">		Sleep(<span class="number">10</span>);<span class="comment">//让主线程暂停运行，进入分线程</span></div><div class="line">	&#125;</div><div class="line"></div><div class="line">	<span class="comment">//线程1的入口函数</span></div><div class="line">	<span class="function">DWORD WINAPI <span class="title">Fun1Proc</span><span class="params">(</span></span></div><div class="line">		LPVOID lpParameter  <span class="comment">//thread data</span></div><div class="line">		)</div><div class="line">	&#123;</div><div class="line">		<span class="built_in">cout</span>&lt;&lt;<span class="string">"thread1 is running"</span>&lt;&lt;<span class="built_in">endl</span>;</div><div class="line">		<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">	&#125;</div></pre></td></tr></table></figure>
<p> <img src="http://img.blog.csdn.net/20170424215653701?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<p>　　交替运行：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;windows.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream.h&gt;</span></span></div><div class="line"></div><div class="line">    <span class="function">DWORD WINAPI <span class="title">Fun1Proc</span><span class="params">(</span></span></div><div class="line">	LPVOID lpParameter  <span class="comment">//thread data					 </span></div><div class="line">	);</div><div class="line">	</div><div class="line">	<span class="keyword">int</span> index = <span class="number">0</span>;</div><div class="line"></div><div class="line">	<span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line">	&#123;</div><div class="line">		HANDLE hThread1;</div><div class="line">		hThread1 = CreateThread(<span class="literal">NULL</span>, <span class="number">0</span>, Fun1Proc, <span class="literal">NULL</span>, <span class="number">0</span>, <span class="literal">NULL</span>);</div><div class="line">		CloseHandle(hThread1);</div><div class="line">		</div><div class="line">		<span class="keyword">while</span> (index ++&lt; <span class="number">100</span>)</div><div class="line">		&#123;</div><div class="line">			<span class="built_in">cout</span>&lt;&lt;<span class="string">"main thread is running"</span>&lt;&lt;<span class="built_in">endl</span>;</div><div class="line">		&#125;</div><div class="line">			<span class="comment">//Sleep(10);//让主线程暂停运行，进入分线程</span></div><div class="line">	&#125;</div><div class="line"></div><div class="line">	<span class="comment">//线程1的入口函数</span></div><div class="line"></div><div class="line">	<span class="function">DWORD WINAPI <span class="title">Fun1Proc</span><span class="params">(</span></span></div><div class="line">			</div><div class="line">		LPVOID lpParameter  <span class="comment">//thread data</span></div><div class="line">		)</div><div class="line"></div><div class="line">	&#123;</div><div class="line">		<span class="keyword">while</span> (index++&lt; <span class="number">100</span>)</div><div class="line">		<span class="built_in">cout</span>&lt;&lt;<span class="string">"thread1 is running"</span>&lt;&lt;<span class="built_in">endl</span>;</div><div class="line">		<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">	&#125;</div></pre></td></tr></table></figure></p>
<p> <img src="http://img.blog.csdn.net/20170424215712448?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<h2 id="线程同步"><a href="#线程同步" class="headerlink" title="线程同步"></a>线程同步</h2><h3 id="火车站售票系统模拟程序"><a href="#火车站售票系统模拟程序" class="headerlink" title="火车站售票系统模拟程序"></a>火车站售票系统模拟程序</h3><p>　　由主线程创建的两个线程（1和2）负责销售火车票。<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;windows.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream.h&gt;</span></span></div><div class="line"></div><div class="line">    <span class="function">DWORD WINAPI <span class="title">Fun1Proc</span><span class="params">(</span></span></div><div class="line">	LPVOID lpParameter  <span class="comment">//thread data					 </span></div><div class="line">	);</div><div class="line">	</div><div class="line">	 <span class="function">DWORD WINAPI <span class="title">Fun2Proc</span><span class="params">(</span></span></div><div class="line">	LPVOID lpParameter  <span class="comment">//thread data					 </span></div><div class="line">	);</div><div class="line"></div><div class="line">	<span class="keyword">int</span> index = <span class="number">0</span>;</div><div class="line">	<span class="keyword">int</span> tickets = <span class="number">100</span>;</div><div class="line">	HANDLE hMutex;</div><div class="line"></div><div class="line">	<span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line">	&#123;</div><div class="line">		HANDLE hThread1;</div><div class="line">		HANDLE hThread2;</div><div class="line"></div><div class="line">		<span class="comment">//创建互斥对象</span></div><div class="line">		hMutex = CreateMutex(<span class="literal">NULL</span>, FALSE, <span class="literal">NULL</span>);</div><div class="line"></div><div class="line">		<span class="comment">//创建线程</span></div><div class="line">		hThread1 = CreateThread(<span class="literal">NULL</span>, <span class="number">0</span>, Fun1Proc, <span class="literal">NULL</span>, <span class="number">0</span>, <span class="literal">NULL</span>);</div><div class="line">		hThread2 = CreateThread(<span class="literal">NULL</span>, <span class="number">0</span>, Fun2Proc, <span class="literal">NULL</span>, <span class="number">0</span>, <span class="literal">NULL</span>);</div><div class="line">		CloseHandle(hThread1);</div><div class="line">		CloseHandle(hThread2);</div><div class="line">		Sleep(<span class="number">4000</span>);</div><div class="line">	&#125;</div><div class="line">	</div><div class="line">	</div><div class="line"></div><div class="line">	</div><div class="line"></div><div class="line">	<span class="comment">//线程1的入口函数</span></div><div class="line">	<span class="function">DWORD WINAPI <span class="title">Fun1Proc</span><span class="params">(</span></span></div><div class="line">			</div><div class="line">		LPVOID lpParameter  <span class="comment">//thread data</span></div><div class="line">		)</div><div class="line"></div><div class="line">	&#123;</div><div class="line">	<span class="keyword">while</span> (TRUE)</div><div class="line">		&#123;</div><div class="line">			WaitForSingleObject(hMutex, INFINITE);<span class="comment">//实现线程同步</span></div><div class="line">			<span class="keyword">if</span> (tickets &gt; <span class="number">0</span>)</div><div class="line">			&#123;</div><div class="line">				Sleep(<span class="number">1</span>);</div><div class="line">				<span class="built_in">cout</span>&lt;&lt;<span class="string">"thread1 sell ticket:"</span>&lt;&lt;tickets--&lt;&lt;<span class="built_in">endl</span>;</div><div class="line">			&#125;</div><div class="line">			<span class="keyword">else</span> </div><div class="line">				<span class="keyword">break</span>;</div><div class="line">			ReleaseMutex(hMutex);<span class="comment">//释放当前线程对互斥对象的所有权</span></div><div class="line">		&#125;</div><div class="line">		<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line"></div><div class="line">	&#125;</div><div class="line">	</div><div class="line"></div><div class="line">		<span class="comment">//线程2的入口函数</span></div><div class="line">	<span class="function">DWORD WINAPI <span class="title">Fun2Proc</span><span class="params">(</span></span></div><div class="line">			</div><div class="line">		LPVOID lpParameter  <span class="comment">//thread data</span></div><div class="line">		)</div><div class="line"></div><div class="line"></div><div class="line">	&#123;</div><div class="line">		<span class="keyword">while</span> (TRUE)</div><div class="line">		&#123;</div><div class="line">			WaitForSingleObject(hMutex,INFINITE);</div><div class="line">			<span class="keyword">if</span> (tickets &gt; <span class="number">0</span>)</div><div class="line">			&#123;</div><div class="line">				Sleep(<span class="number">1</span>);</div><div class="line">				<span class="built_in">cout</span>&lt;&lt;<span class="string">"thread2 sell ticket:"</span>&lt;&lt;tickets--&lt;&lt;<span class="built_in">endl</span>;</div><div class="line">			&#125;</div><div class="line">			<span class="keyword">else</span> </div><div class="line">				<span class="keyword">break</span>;</div><div class="line">			ReleaseMutex(hMutex);</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p> <img src="http://img.blog.csdn.net/20170424215734652?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"><br>　　这时所销售的票号正常，没有看到销售了号码为0的票。</p>
<p>　　对互斥对象来说，谁拥有谁释放。</p>
<h2 id="保证应用程序只有一个实例运行"><a href="#保证应用程序只有一个实例运行" class="headerlink" title="保证应用程序只有一个实例运行"></a>保证应用程序只有一个实例运行</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;windows.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream.h&gt;</span></span></div><div class="line"></div><div class="line">    <span class="function">DWORD WINAPI <span class="title">Fun1Proc</span><span class="params">(</span></span></div><div class="line">	LPVOID lpParameter  <span class="comment">//thread data					 </span></div><div class="line">	);</div><div class="line">	</div><div class="line">	 <span class="function">DWORD WINAPI <span class="title">Fun2Proc</span><span class="params">(</span></span></div><div class="line">	LPVOID lpParameter  <span class="comment">//thread data					 </span></div><div class="line">	);</div><div class="line"></div><div class="line">	<span class="keyword">int</span> index = <span class="number">0</span>;</div><div class="line">	<span class="keyword">int</span> tickets = <span class="number">100</span>;</div><div class="line">	HANDLE hMutex;</div><div class="line"></div><div class="line">	<span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line">	&#123;</div><div class="line">		HANDLE hThread1;</div><div class="line">		HANDLE hThread2;</div><div class="line"></div><div class="line">		<span class="comment">//创建互斥对象(注意命名)</span></div><div class="line">		hMutex = CreateMutex(<span class="literal">NULL</span>, FALSE, <span class="string">"1"</span>);</div><div class="line">		<span class="keyword">if</span> (hMutex)</div><div class="line">		&#123;</div><div class="line">			<span class="keyword">if</span> (ERROR_ALREADY_EXISTS == GetLastError())</div><div class="line">			&#123;</div><div class="line">				<span class="built_in">cout</span>&lt;&lt;<span class="string">"only one instance can run!"</span>&lt;&lt;<span class="built_in">endl</span>;</div><div class="line">				<span class="keyword">return</span>;</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line"></div><div class="line">		<span class="comment">//创建线程</span></div><div class="line">		hThread1 = CreateThread(<span class="literal">NULL</span>, <span class="number">0</span>, Fun1Proc, <span class="literal">NULL</span>, <span class="number">0</span>, <span class="literal">NULL</span>);</div><div class="line">		hThread2 = CreateThread(<span class="literal">NULL</span>, <span class="number">0</span>, Fun2Proc, <span class="literal">NULL</span>, <span class="number">0</span>, <span class="literal">NULL</span>);</div><div class="line">		CloseHandle(hThread1);</div><div class="line">		CloseHandle(hThread2);</div><div class="line">		WaitForSingleObject(hMutex, INFINITE);</div><div class="line">		ReleaseMutex(hMutex);</div><div class="line">		ReleaseMutex(hMutex);</div><div class="line">		Sleep(<span class="number">4000</span>);</div><div class="line">	&#125;</div><div class="line">	</div><div class="line">	<span class="comment">//线程1的入口函数</span></div><div class="line">	<span class="function">DWORD WINAPI <span class="title">Fun1Proc</span><span class="params">(</span></span></div><div class="line">			</div><div class="line">		LPVOID lpParameter  <span class="comment">//thread data</span></div><div class="line">		)</div><div class="line"></div><div class="line">	&#123;</div><div class="line">	<span class="keyword">while</span> (TRUE)</div><div class="line">		&#123;</div><div class="line">			WaitForSingleObject(hMutex, INFINITE);<span class="comment">//实现线程同步</span></div><div class="line">			<span class="keyword">if</span> (tickets &gt; <span class="number">0</span>)</div><div class="line">			&#123;</div><div class="line">				Sleep(<span class="number">1</span>);</div><div class="line">				<span class="built_in">cout</span>&lt;&lt;<span class="string">"thread1 sell ticket:"</span>&lt;&lt;tickets--&lt;&lt;<span class="built_in">endl</span>;</div><div class="line">			&#125;</div><div class="line">			<span class="keyword">else</span> </div><div class="line">				<span class="keyword">break</span>;</div><div class="line">			ReleaseMutex(hMutex);<span class="comment">//释放当前线程对互斥对象的所有权</span></div><div class="line">		&#125;</div><div class="line">		<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line"></div><div class="line">	&#125;</div><div class="line">	</div><div class="line"></div><div class="line">		<span class="comment">//线程2的入口函数</span></div><div class="line">	<span class="function">DWORD WINAPI <span class="title">Fun2Proc</span><span class="params">(</span></span></div><div class="line">			</div><div class="line">		LPVOID lpParameter  <span class="comment">//thread data</span></div><div class="line">		)</div><div class="line"></div><div class="line"></div><div class="line">	&#123;</div><div class="line">		<span class="keyword">while</span> (TRUE)</div><div class="line">		&#123;</div><div class="line">			WaitForSingleObject(hMutex,INFINITE);</div><div class="line">			<span class="keyword">if</span> (tickets &gt; <span class="number">0</span>)</div><div class="line">			&#123;</div><div class="line">				Sleep(<span class="number">1</span>);</div><div class="line">				<span class="built_in">cout</span>&lt;&lt;<span class="string">"thread2 sell ticket:"</span>&lt;&lt;tickets--&lt;&lt;<span class="built_in">endl</span>;</div><div class="line">			&#125;</div><div class="line">			<span class="keyword">else</span> </div><div class="line">				<span class="keyword">break</span>;</div><div class="line">			ReleaseMutex(hMutex);</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="网络聊天室程序的实现"><a href="#网络聊天室程序的实现" class="headerlink" title="网络聊天室程序的实现"></a>网络聊天室程序的实现</h2><p>　　新建一个基于对话框的工程，名为：Chat。<br><img src="http://img.blog.csdn.net/20170428102440017?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"><br><img src="http://img.blog.csdn.net/20170428102449366?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<h3 id="加载套接字库"><a href="#加载套接字库" class="headerlink" title="加载套接字库"></a>加载套接字库</h3><p>　　在CChatApp类的InitInstance函数开始位置<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">BOOL CChatApp::InitInstance()</div><div class="line">&#123;</div><div class="line">	<span class="keyword">if</span> (!AfxSocketInit())</div><div class="line">	&#123;</div><div class="line">		AfxMessageBox(<span class="string">"加载套接字库失败！"</span>);</div><div class="line">		<span class="keyword">return</span> FALSE;</div><div class="line">	&#125;</div><div class="line">……</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>　　在stdafx.h中，添加头文件<code>#include &lt;Afxsock.h&gt;</code>。</p>
<h3 id="创建并初始化套接字"><a href="#创建并初始化套接字" class="headerlink" title="创建并初始化套接字"></a>创建并初始化套接字</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line">BOOL CChatDlg::InitSocket()</div><div class="line">&#123;</div><div class="line">	<span class="comment">//创建套接字</span></div><div class="line">	m_socket = socket(AF_INET, SOCK_DGRAM, <span class="number">0</span>);</div><div class="line">	<span class="keyword">if</span> (INVALID_SOCKET == m_socket)</div><div class="line">	&#123;</div><div class="line">		MessageBox(<span class="string">"套接字创建失败！"</span>);</div><div class="line">		<span class="keyword">return</span> FALSE;</div><div class="line">	&#125;</div><div class="line">	SOCKADDR_IN addrSock;</div><div class="line">	addrSock.sin_family = AF_INET;</div><div class="line">	addrSock.sin_port = htons(<span class="number">7000</span>);</div><div class="line">	addrSock.sin_addr.S_un.S_addr = htonl(INADDR_ANY);</div><div class="line"></div><div class="line">	<span class="keyword">int</span> retval;</div><div class="line">	<span class="comment">//绑定套接字</span></div><div class="line">	retval = bind(m_socket, (SOCKADDR*)&amp;addrSock, <span class="keyword">sizeof</span>(SOCKADDR));</div><div class="line">	<span class="keyword">if</span> (SOCKET_ERROR == retval)</div><div class="line">	&#123;</div><div class="line">		closesocket(m_socket);</div><div class="line">		MessageBox(<span class="string">"绑定失败！"</span>);</div><div class="line">		<span class="keyword">return</span> TRUE;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">return</span> TRUE;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">BOOL CChatDlg::OnInitDialog()</div><div class="line">&#123;</div><div class="line">……</div><div class="line">	</div><div class="line">	<span class="comment">// <span class="doctag">TODO:</span> Add extra initialization here</span></div><div class="line">	InitSocket();</div><div class="line"></div><div class="line">	<span class="keyword">return</span> TRUE;  <span class="comment">// return TRUE  unless you set the focus to a control</span></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="实现接收端功能"><a href="#实现接收端功能" class="headerlink" title="实现接收端功能"></a>实现接收端功能</h3><p>　　在CChatDlg类中定义：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/////////////////////////////////////////////////////////////////////////////</span></div><div class="line"><span class="comment">// CChatDlg dialog</span></div><div class="line"></div><div class="line"><span class="keyword">struct</span> RECVPARAM</div><div class="line">&#123;</div><div class="line">	SOCKET sock; <span class="comment">//已创建的套接字</span></div><div class="line">	HWND hwnd; <span class="comment">//对话框句柄</span></div><div class="line">&#125;;</div></pre></td></tr></table></figure></p>
<p>　　在Chatdlg.h中添加：<code>static DWORD WINAPI RecvProc(LPVOID lpParameter);</code><br>在OnInitDialog()中添加：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">BOOL CChatDlg::OnInitDialog()</div><div class="line">&#123;</div><div class="line"></div><div class="line">……</div><div class="line"></div><div class="line"><span class="comment">// <span class="doctag">TODO:</span> Add extra initialization here</span></div><div class="line">	InitSocket();</div><div class="line">	RECVPARAM *pRecvParam = <span class="keyword">new</span> RECVPARAM;</div><div class="line">	pRecvParam-&gt;sock = m_socket;</div><div class="line">	pRecvParam-&gt;hwnd = m_hWnd;</div><div class="line">	<span class="comment">//创建接收线程</span></div><div class="line">	HANDLE hThread = CreateThread(<span class="literal">NULL</span>, <span class="number">0</span>, RecvProc, (LPVOID)pRecvParam, <span class="number">0</span>, <span class="literal">NULL</span>);</div><div class="line">	<span class="comment">//关闭该接收程句柄，释放其引用计数</span></div><div class="line">	CloseHandle(hThread);</div><div class="line"></div><div class="line"></div><div class="line">	<span class="keyword">return</span> TRUE;  <span class="comment">// return TRUE  unless you set the focus to a control</span></div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>　　在CChatDlg类中添加：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">DWORD WINAPI CChatDlg::RecvProc(LPVOID lpParameter)</div><div class="line">&#123;</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>　　若要求采用完全面向对象的思想来编程，不能使用全局函数和全局变量了，可以采用静态成员函数和静态成员变量的方法来解决。<br>　　<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line">DWORD WINAPI CChatDlg::RecvProc(LPVOID lpParameter)</div><div class="line">&#123;</div><div class="line">	<span class="comment">//获取主线程传递的套接字和窗口句柄</span></div><div class="line">	SOCKET sock = ((RECVPARAM*)lpParameter)-&gt;sock;</div><div class="line">	HWND hwnd = ((RECVPARAM*)lpParameter)-&gt;hwnd;</div><div class="line">	<span class="keyword">delete</span> lpParameter;</div><div class="line"></div><div class="line">	SOCKADDR_IN addrFrom;</div><div class="line">	<span class="keyword">int</span> len = <span class="keyword">sizeof</span>(SOCKADDR);</div><div class="line"></div><div class="line">	<span class="keyword">char</span> recvBuf[<span class="number">200</span>];</div><div class="line">	<span class="keyword">char</span> tempBuf[<span class="number">300</span>];</div><div class="line">	<span class="keyword">int</span> retval;</div><div class="line">	<span class="keyword">while</span>(TRUE)</div><div class="line">	&#123;</div><div class="line">		<span class="comment">//接收数据</span></div><div class="line">		retval = recvfrom(sock, recvBuf, <span class="number">200</span>, <span class="number">0</span>, (SOCKADDR*)&amp;addrFrom, &amp;len);</div><div class="line">		<span class="keyword">if</span> (SOCKET_ERROR == retval)</div><div class="line">			<span class="keyword">break</span>;</div><div class="line">		<span class="built_in">sprintf</span>(tempBuf, <span class="string">"%s 说： %s"</span>, inet_ntoa(addrFrom.sin_addr), recvBuf);</div><div class="line">		::PostMessage(hwnd, WM_RECVDATA, <span class="number">0</span>, (LPARAM)tempBuf);</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>　　在该类添加头文件 <code>#define WM_RECVDATA    WM_USER+1</code></p>
<p>在CChatDlg类头文件中编写该消息响应函数原型的声明：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// Generated message map functions</span></div><div class="line"><span class="comment">//&#123;&#123;AFX_MSG(CChatDlg)</span></div><div class="line"><span class="function"><span class="keyword">virtual</span> BOOL <span class="title">OnInitDialog</span><span class="params">()</span></span>;</div><div class="line"><span class="function">afx_msg <span class="keyword">void</span> <span class="title">OnSysCommand</span><span class="params">(UINT nID, LPARAM lParam)</span></span>;</div><div class="line"><span class="function">afx_msg <span class="keyword">void</span> <span class="title">OnPaint</span><span class="params">()</span></span>;</div><div class="line"><span class="function">afx_msg HCURSOR <span class="title">OnQueryDragIcon</span><span class="params">()</span></span>;</div><div class="line"><span class="comment">//&#125;&#125;AFX_MSG</span></div><div class="line"><span class="function">afx_msg <span class="keyword">void</span> <span class="title">OnRecvData</span><span class="params">(WPARAM wParam, LPARAM lParam)</span></span>;</div><div class="line">DECLARE_MESSAGE_MAP()</div></pre></td></tr></table></figure></p>
<p>在CChatDlg类的源文件中添加WM_RECVDATA消息映射。<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">BEGIN_MESSAGE_MAP(CChatDlg, CDialog)</div><div class="line">	<span class="comment">//&#123;&#123;AFX_MSG_MAP(CChatDlg)</span></div><div class="line">	ON_WM_SYSCOMMAND()</div><div class="line">	ON_WM_PAINT()</div><div class="line">	ON_WM_QUERYDRAGICON()</div><div class="line">	<span class="comment">//&#125;&#125;AFX_MSG_MAP</span></div><div class="line">	ON_MESSAGE(WM_RECVDATA, OnRecvData)</div><div class="line">END_MESSAGE_MAP()</div></pre></td></tr></table></figure></p>
<p>在构造函数中<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">void</span> CChatDlg::OnRecvData(WPARAM wParam, LPARAM lParam)</div><div class="line">&#123;</div><div class="line">	<span class="comment">//取出接收到的数据</span></div><div class="line">	CString str = (<span class="keyword">char</span>*)lParam;</div><div class="line">	CString strTemp;</div><div class="line">	<span class="comment">//获得已有数据</span></div><div class="line">	GetDlgItemText(IDC_EDIT_RECV, strTemp);</div><div class="line">	str += <span class="string">"\r\n"</span>;</div><div class="line">	str += strTemp;</div><div class="line">	<span class="comment">//显示所有接收到的数据</span></div><div class="line">	SetDlgItemText(IDC_EDIT_RECV, str);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h3 id="实现发送端功能"><a href="#实现发送端功能" class="headerlink" title="实现发送端功能"></a>实现发送端功能</h3><p>双击发送，添加响应函数。<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">void</span> CChatDlg::OnBtnSend() </div><div class="line">&#123;</div><div class="line">	<span class="comment">//获取对方IP</span></div><div class="line"><span class="comment">// <span class="doctag">TODO:</span> Add your control notification handler code here</span></div><div class="line">	DWORD dwIP;</div><div class="line">	((CIPAddressCtrl*)GetDlgItem(IDC_IPADDRESS1))-&gt;GetAddress(dwIP);</div><div class="line"></div><div class="line">	SOCKADDR_IN addrTo;</div><div class="line">	addrTo.sin_family = AF_INET;</div><div class="line">	addrTo.sin_port = htons(<span class="number">7000</span>);</div><div class="line">	addrTo.sin_addr.S_un.S_addr = htonl(dwIP);</div><div class="line"></div><div class="line">	CString strSend;</div><div class="line">	<span class="comment">//获得待发送数据</span></div><div class="line">	GetDlgItemText(IDC_EDIT_SEND, strSend);</div><div class="line">	<span class="comment">//发送数据</span></div><div class="line">	sendto(m_socket, strSend, strSend.GetLength()+<span class="number">1</span>, <span class="number">0</span>,</div><div class="line">		(SOCKADDR*)&amp;addrTo, <span class="keyword">sizeof</span>(SOCKADDR));</div><div class="line">	<span class="comment">//清空发送编辑框中的内容</span></div><div class="line">	SetDlgItemText(IDC_EDIT_SEND, <span class="string">""</span>);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>　　为了让编辑框控件接受换行符，必须设置该控件支持多行数据这一属性。<br><img src="http://img.blog.csdn.net/20170428102525898?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<p>　　将“发送”设置为Default button，还可以选择取消Visible选项。<br>　　本例在一个程序中同时实现了接收端和发送端的功能，所以只需在聊天双方各自的机器上安装本程序，在聊天时，通过输入对方主机的IP地址，就可以与对方进行通信了。</p>
<h1 id="activex控件"><a href="#ActiveX控件" class="headerlink" title="ActiveX控件"></a>ActiveX控件</h1><h2 id="activex控件"><a href="#ActiveX控件-1" class="headerlink" title="ActiveX控件"></a>ActiveX控件</h2><p>OCX是ActiveX控件的一种后缀名。但ActiveX控件对应的文件也可以是其他后缀名，例如DLL。作为一个典型的ActiveX控件，它具有方法、属性、事件这三种特性。在一个文件中可以包含多个ActiveX控件。</p>
<h3 id="mfc-activex-controlwizard"><a href="#MFC-ActiveX-ControlWizard" class="headerlink" title="MFC ActiveX ControlWizard"></a>MFC ActiveX ControlWizard</h3><h1 id="动态链接库"><a href="#动态链接库" class="headerlink" title="动态链接库"></a>动态链接库</h1><p>　　动态链接库有两种加载方式：隐式链接和显式加载</p>
<h2 id="win32-dll的创建和使用"><a href="#Win32-DLL的创建和使用" class="headerlink" title="Win32 DLL的创建和使用"></a>Win32 DLL的创建和使用</h2><p>　　新建一个Win32 Dynamic-Link Library类型的工程，取名为Dll1。并在AppWizard的第一步选择“An empty Dll project”，即创建一个空的动态链接库工程。然后添加一个C++源文件：Dll1.cpp。添加代码：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span></div><div class="line">&#123;</div><div class="line">	<span class="keyword">return</span> a + b;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">subtract</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span></div><div class="line">&#123;</div><div class="line">	<span class="keyword">return</span> a - b;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>　　Build生成Dll1程序。在该工程的Debug目录下，可看到一个Dll1.dll文件，这就是生成的动态链接库文件。</p>
<h3 id="dumpbin命令"><a href="#Dumpbin命令" class="headerlink" title="Dumpbin命令"></a>Dumpbin命令</h3><p>　　应用程序如果想要访问某个DLL中的函数，那么该函数必须是已经被导出的函数。为了查看有哪些导出函数，可以用VS提供的命令行工具：Dumpbin实现。    </p>
<h3 id="从dll中导出函数"><a href="#从DLL中导出函数" class="headerlink" title="从DLL中导出函数"></a>从DLL中导出函数</h3><p>　　为导出函数，需在每一个将被导出的函数前添加标识符：_declspec(dllexport)。修改上述代码：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="number">_</span>declspec(dllexport) <span class="function"><span class="keyword">int</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span></div><div class="line">&#123;</div><div class="line">	<span class="keyword">return</span> a + b;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="number">_</span>declspec(dllexport) <span class="function"><span class="keyword">int</span> <span class="title">subtract</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span></div><div class="line">&#123;</div><div class="line">	<span class="keyword">return</span> a - b;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>　　编译后可看到又生成了两个新文件，Dll1.lib，它保存Dll1.dll中导出的函数和变量的符号名。以及DALL1.EXP文件。</p>
<h2 id="隐式链接方式加载dll"><a href="#隐式链接方式加载DLL" class="headerlink" title="隐式链接方式加载DLL"></a>隐式链接方式加载DLL</h2><p>　　编写一个测试程序测试这个动态链接库。新建一个基于对话框的MFC应用程序，取名DllTest，放置两个按钮，ID和Caption分别为：IDC_BTN_ADD，Add，IDC_BTN_SUBTRACT，Subtract。</p>
<h3 id="利用extern声明外部函数"><a href="#利用extern声明外部函数" class="headerlink" title="利用extern声明外部函数"></a>利用extern声明外部函数</h3><p>　　为让编译器知道这两个函数，需作出声明，注意放在OnBtnAdd函数和OnBtnSubtract函数前面。<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">extern</span> <span class="keyword">int</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span>;</div><div class="line"><span class="function"><span class="keyword">extern</span> <span class="keyword">int</span> <span class="title">subtract</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span>;</div><div class="line"></div><div class="line"><span class="keyword">void</span> CDllTestDlg::OnBtnAdd() </div><div class="line">&#123;</div><div class="line">	<span class="comment">// <span class="doctag">TODO:</span> Add your control notification handler code here</span></div><div class="line">	CString str;</div><div class="line">	str.Format(<span class="string">"5 + 3 = %d"</span>, add(<span class="number">5</span>, <span class="number">3</span>));</div><div class="line">	MessageBox(str);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">void</span> CDllTestDlg::OnBtnSubtract() </div><div class="line">&#123;</div><div class="line">	<span class="comment">// <span class="doctag">TODO:</span> Add your control notification handler code here</span></div><div class="line">	CString str;</div><div class="line">	str.Format(<span class="string">"5 - 3 = %d"</span>, subtract(<span class="number">5</span>, <span class="number">3</span>));</div><div class="line">	MessageBox(str);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>　　Build后报错：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">--------------------Configuration: DllTest - Win32 Debug--------------------</div><div class="line">Compiling resources...</div><div class="line">Compiling...</div><div class="line">StdAfx.cpp</div><div class="line">Compiling...</div><div class="line">DllTest.cpp</div><div class="line">DllTestDlg.cpp</div><div class="line">Generating Code...</div><div class="line">Linking...</div><div class="line">DllTestDlg.obj : error LNK2001: unresolved external symbol <span class="string">"int __cdecl add(int,int)"</span> (?add@@YAHHH@Z)</div><div class="line">DllTestDlg.obj : error LNK2001: unresolved external symbol <span class="string">"int __cdecl subtract(int,int)"</span> (?subtract@@YAHHH@Z)</div><div class="line">Debug/DllTest.exe : fatal error LNK1120: <span class="number">2</span> unresolved externals</div><div class="line">执行 link.exe 时出错.</div><div class="line"></div><div class="line">DllTest.exe - <span class="number">1</span> error(s), <span class="number">0</span> warning(s)</div></pre></td></tr></table></figure></p>
<p>　　可看到编译成功，错误发生在链接时。为解决该问题，需利用动态链接库的引入库文件。<br>　　在Dll1.dll文件所在目录下，复制Dll1.lib文件，并将其复制到DllTest程序所在目录下，这个文件中就包含了Dll1.dll中导出函数的符号名。<br>　　然后在DllTest中，选择Porject\Settings\link，在Object/library modules中输入dll1.lib。<br>　　再次编译，成功生成DllTest.exe文件。<br>　　（可利用dumpbin -imports dlltest.exe查看输入信息）</p>
<p>　　运行程序，弹出报错对话框：<br><img src="http://img.blog.csdn.net/20170709130424898?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="报错"></p>
<p>　　将Dll1.dll放置在DllTest工程所在目录下，就好了。</p>
<p>　　效果如图。<br><img src="http://img.blog.csdn.net/20170709130702138?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="效果"></p>
<h3 id="depends工具"><a href="#Depends工具" class="headerlink" title="Depends工具"></a>Depends工具</h3><p>　　在Microsoft Visual Studio\Common\Tools中有一个DEPENDS.EXE，该工具可以查看可执行程序，还可以查看动态链接库，主要是看它们依赖于哪些动态链接库。<br>　　打开该工具，单击File\Open，选择DllText.exe，将会看到：<br><img src="http://img.blog.csdn.net/20170709132044018?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="DEPENDS"></p>
<p>　　DllTest程序需访问Dll1.dll这一动态链接库，但该文件名前有一个问号，说明没有找到Dll1.dll这个动态链接库。这是因为前面将动态链接库文件放在了\DllTest\Debug目录的上一级目录下了。这里，可将Dll1.dll文件再复制到\DllTest\Debug目录下，然后重启Depends工具。这时问号就没有了。（因为Dll1.dll与DllTest.exe位于同一目录，在打开DllTest.exe时，就可找到该动态链接库。）</p>
<p><img src="http://img.blog.csdn.net/20170709132630578?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="成功"></p>
<h3 id="利用_declspecdllimport声明外部函数"><a href="#利用-declspec-dllimport-声明外部函数" class="headerlink" title="利用_declspec(dllimport)声明外部函数"></a>利用_declspec(dllimport)声明外部函数</h3><p>　　除了使用extern关键字表明函数是外部定义的之外，还可以使用标识符：_declspec(dllimport)来表明函数是从动态链接库中引入的。将之前的extern声明注释起来。添加：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="number">_</span>declspec(dllimport) <span class="function"><span class="keyword">int</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span>;</div><div class="line"><span class="number">_</span>declspec(dllimport) <span class="function"><span class="keyword">int</span> <span class="title">subtract</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span>;</div></pre></td></tr></table></figure></p>
<p>　　若调用的函数来自于动态链接库，应采用这种方式声明外部函数，编译器可以生成运行效率更高的代码。</p>
<h2 id="完善win32-dll例子"><a href="#完善Win32-DLL例子" class="headerlink" title="完善Win32 DLL例子"></a>完善Win32 DLL例子</h2><p>　　为知道DLL有哪些导出函数，通常在编写动态链接库时，会提供一个头文件，在此提供DLL导出函数原型的声明，以及函数有关注释文档。</p>
<p>　　为DLL1工程添加一个头文件：Dll1.h，并添加代码<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="number">_</span>declspec(dllimport) <span class="function"><span class="keyword">int</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span>;</div><div class="line"><span class="number">_</span>declspec(dllimport) <span class="function"><span class="keyword">int</span> <span class="title">subtract</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span>;</div></pre></td></tr></table></figure></p>
<p>　　然后将DllTestDlg.cpp先前添加的声明语句注释起来，并在前部添加下面的语句：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"dll1.h"</span></span></div></pre></td></tr></table></figure></p>
<p>　　Build并运行，结果和之前一样。</p>
<p>　　所以在发布Dll1.dll动态链接库时，可将Dll1.h头文件一起提供给使用者。</p>
<p>　　下面对Dll.h进行改造，使其不仅能为调用动态链接库的客户端程序服务，也能由动态链接库程序自身来使用。修改头文件：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> DLL1_API</span></div><div class="line"><span class="meta">#<span class="meta-keyword">else</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> DLL1_API _declspec(dllimport)</span></div><div class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></div><div class="line"></div><div class="line"><span class="number">_</span>declspec(dllimport) <span class="function"><span class="keyword">int</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span>;</div><div class="line"><span class="number">_</span>declspec(dllimport) <span class="function"><span class="keyword">int</span> <span class="title">subtract</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span>;</div></pre></td></tr></table></figure></p>
<p>　　修改Dll1.cpp<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">define</span> DLL1_API _declspec(dllexport)</span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"Dll1.h"</span></span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span></div><div class="line">&#123;</div><div class="line">	<span class="keyword">return</span> a + b;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">subtract</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span></div><div class="line">&#123;</div><div class="line">	<span class="keyword">return</span> a - b;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>　　将重新生成的文件复制，运行，结果也是正确的。</p>
<h2 id="从dll中导出c类"><a href="#从DLL中导出C-类" class="headerlink" title="从DLL中导出C++类"></a>从DLL中导出C++类</h2><p>　　在一个动态链接库中还可以导出一个C++类。<br>　　在Dll1.h中添加如下代码：</p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">class</span> DLL1_API Point</div><div class="line">&#123;</div><div class="line"><span class="keyword">public</span>:</div><div class="line">	<span class="function"><span class="keyword">void</span> <span class="title">output</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span>;</div><div class="line">&#125;;</div></pre></td></tr></table></figure>
<p>　　在Dll1.cpp中改为：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">define</span> DLL1_API _declspec(dllexport)</span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"Dll1.h"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;Windows.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span></div><div class="line">&#123;</div><div class="line">	<span class="keyword">return</span> a + b;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">subtract</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span></div><div class="line">&#123;</div><div class="line">	<span class="keyword">return</span> a - b;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">void</span> Point::output(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</div><div class="line">&#123;</div><div class="line">	<span class="comment">//返回调用者进程当前正在使用的那个窗口的句柄</span></div><div class="line">	HWND hwnd = GetForegroundWindow();</div><div class="line">	<span class="comment">//获取DC</span></div><div class="line">	HDC hdc = GetDC(hwnd);</div><div class="line">	<span class="keyword">char</span> buf[<span class="number">20</span>];</div><div class="line">	<span class="built_in">memset</span>(buf, <span class="number">0</span>, <span class="number">20</span>);</div><div class="line">	<span class="built_in">sprintf</span>(buf, <span class="string">"x = %d, y = %d"</span>, x, y);</div><div class="line">	<span class="comment">//输出坐标</span></div><div class="line">	TextOut(hdc, <span class="number">0</span>, <span class="number">0</span>, buf, <span class="built_in">strlen</span>(buf));</div><div class="line">	<span class="comment">//释放DC</span></div><div class="line">	ReleaseDC(hwnd, hdc);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>　　将Dll1.dll和Dll1.lib复制到测试工程DllTest所在目录下（本例将对应Dll1.h也放在了DllTest项目工程下，所以Dll1.h也应相应复制过来）。为避免麻烦，也可以把动态链接库文件所在目录添加到系统的环境变量Path中。这样就无需复制。<br>　　为测试这个新生成的DLL，打开DllTest工程，在对话框中增加一个按钮，属性为IDC_BTN_OUTPUT，Capition为Output。双击按钮添加响应函数OnBtnOutput。</p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">void</span> CDllTestDlg::OnBtnOutput() </div><div class="line">&#123;</div><div class="line">	<span class="comment">// <span class="doctag">TODO:</span> Add your control notification handler code here</span></div><div class="line">	Point pt;</div><div class="line">	pt.output(<span class="number">5</span>, <span class="number">3</span>);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>　　记得删除Debug下的旧Dll1.dll，放入新的，否则会报错。<br><img src="http://img.blog.csdn.net/20170813113649482?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="Output"><br>　　可利用Dumpbin命令的exports选项查看Dll1.dll这一动态链接库的导出情况，利用imports选项查看测试程序的导入情况。</p>
<p>另外，在实现动态链接库时，可以不导出整个类，而只导出该类中的某些函数。<br>打开Dll1工程，在Dll1.h中将声明Point类时使用的DLL1_API宏注释起来，然后在output函数的声明前放置DLL1_API宏。这样就表示只导出Point类中的成员函数output。为证实这一点，为Point类再添加一个成员函数test，<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">class</span> <span class="comment">/*DLL1_API*/</span> Point</div><div class="line">&#123;</div><div class="line"><span class="keyword">public</span>:</div><div class="line">	<span class="function"><span class="keyword">void</span> DLL1_API <span class="title">output</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span>;</div><div class="line">	<span class="function"><span class="keyword">void</span> <span class="title">test</span><span class="params">()</span></span>;</div><div class="line">&#125;;</div></pre></td></tr></table></figure></p>
<p>接着在Dll1.cpp中添加test函数的实现：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">void</span> Point::test()</div><div class="line">&#123;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>Build后，利用dumpbin命令的exports可查看Dll1.dll的导出信息。<br>可将所需文件再次复制到DllTest工程中，运行结果和之前相同。<br>在导出类的成员函数时，该函数必须具有public类型的访问权限，否则即使能被导出也不能被其他程序访问。</p>
<h2 id="解决名字改编问题"><a href="#解决名字改编问题" class="headerlink" title="解决名字改编问题"></a>解决名字改编问题</h2><p>C++编译器在生产厂DLL时，会对导出的函数进行名字改编，由于不同编译器改编规则不同，所以改编后名字不同。若利用不同编译器分别生成DLL和访问该DLL的客户端程序时，后者在访问该DLL的导出函数时就会出现问题。因此希望动态链接库在编译时，导出函数的名称不要发生改变。为此，在定义导出函数时，需加上限定符：extern “C”。C一定要大写。<br>打开Dll1工程，找到Dll1.cpp和Dll1.h中定义DLL1_API宏的代码，添加限定符。<br>此时，Dll1.h为<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> DLL1_API</span></div><div class="line"><span class="meta">#<span class="meta-keyword">else</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> DLL1_API extern <span class="meta-string">"C"</span> _declspec(dllimport)</span></div><div class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></div><div class="line"></div><div class="line"><span class="function">DLL1_API <span class="keyword">int</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span>;</div><div class="line"><span class="function">DLL1_API <span class="keyword">int</span> <span class="title">subtract</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span>;</div><div class="line"></div><div class="line"><span class="comment">/*class  Point</span></div><div class="line">&#123;</div><div class="line">public:</div><div class="line">	void DLL1_API output(int x, int y);</div><div class="line">	void test();</div><div class="line">&#125;;*/</div></pre></td></tr></table></figure></p>
<p>Dll1.cpp为<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">define</span> DLL1_API extern <span class="meta-string">"C"</span> _declspec(dllexport)</span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"Dll1.h"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;Windows.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span></div><div class="line">&#123;</div><div class="line">	<span class="keyword">return</span> a + b;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">subtract</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span></div><div class="line">&#123;</div><div class="line">	<span class="keyword">return</span> a - b;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">/*</span></div><div class="line">void Point::output(int x, int y)</div><div class="line">&#123;</div><div class="line">	//返回调用者进程当前正在使用的那个窗口的句柄</div><div class="line">	HWND hwnd = GetForegroundWindow();</div><div class="line">	//获取DC</div><div class="line">	HDC hdc = GetDC(hwnd);</div><div class="line">	char buf[20];</div><div class="line">	memset(buf, 0, 20);</div><div class="line">	sprintf(buf, "x = %d, y = %d", x, y);</div><div class="line">	//输出坐标</div><div class="line">	TextOut(hdc, 0, 0, buf, strlen(buf));</div><div class="line">	//释放DC</div><div class="line">	ReleaseDC(hwnd, hdc);</div><div class="line">&#125;</div><div class="line"></div><div class="line">void Point::test()</div><div class="line">&#123;</div><div class="line">&#125;</div><div class="line">*/</div></pre></td></tr></table></figure></p>
<p>Build后生成Dll1.dll，用dumpbin命令的exports选项查看该动态链接库的导出信息，发现add和subtract函数名没有被改编。然后利用DllTest工程测试，将Point类的代码注释起来，将发现客户端可访问Dll1中的导出函数。</p>
<p>缺陷：extern “C”只能导出全局函数，不能导出一个类的成员函数。另外，如果导出函数的调用约定发生了改变，即使使用了extern “C”，函数名仍会发生改编。<br>例如，在Dll1.h中add和subtract函数添加_stdcall关键字标准调用约定。<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> DLL1_API</span></div><div class="line"><span class="meta">#<span class="meta-keyword">else</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> DLL1_API extern <span class="meta-string">"C"</span> _declspec(dllimport)</span></div><div class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></div><div class="line"></div><div class="line">DLL1_API <span class="number">_</span><span class="function">stdcall <span class="keyword">int</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span>;</div><div class="line">DLL1_API <span class="number">_</span><span class="function">stdcall <span class="keyword">int</span> <span class="title">subtract</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span>;</div></pre></td></tr></table></figure></p>
<p>在Dll1.cpp中<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">define</span> DLL1_API extern <span class="meta-string">"C"</span> _declspec(dllexport)</span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"Dll1.h"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;Windows.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></div><div class="line"></div><div class="line"><span class="keyword">int</span> <span class="number">_</span><span class="function">stdcall <span class="title">add</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span></div><div class="line">&#123;</div><div class="line">	<span class="keyword">return</span> a + b;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">int</span> <span class="number">_</span><span class="function">stdcall <span class="title">subtract</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span></div><div class="line">&#123;</div><div class="line">	<span class="keyword">return</span> a - b;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>没有_stdcall关键字，函数的调用约定就是C调用约定，标准调用约定是WINAPI调用约定，与C调用约定不同。<br>Build后生成最新Dll1.dll，利用Dumpbin的exports选项查看该动态链接库的导出情况，可看到名字变为_add@8。</p>
<p>这种情况下，可通过模型定义文件（DEF）的方式来解决名字改编问题。<br>新建一个Win32 Dynamic-Link Library类型的工程，取名为Dll2，在AppWizard第一步选择“An empty Dll project”选项。添加Dll2.cpp，<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span></div><div class="line">&#123;</div><div class="line">	<span class="keyword">return</span> a + b;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">subtract</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span></div><div class="line">&#123;</div><div class="line">	<span class="keyword">return</span> a - b;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>在Dll2工程目录下新建一个空文本文件，改后缀为.def，添加到工程Source文件并打开：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">LIBRARY Dll2</div><div class="line"></div><div class="line">EXPORTS</div><div class="line">add</div><div class="line">subtract</div></pre></td></tr></table></figure></p>
<p>Bulid后利用Dumpbin的exports查看证明没有发生名字改编。</p>
<h2 id="显示加载方式加载dll"><a href="#显示加载方式加载DLL" class="headerlink" title="显示加载方式加载DLL"></a>显示加载方式加载DLL</h2><p>将最新的Dll2.dll复制到DllTest工程目录下。将DllTestDlg.cpp包含Dll1.h的那行代码注释起来，在link选项卡上删除对Dll1.lib的链接。<br>需用到LoadLibrary函数。</p>
<p>　　To be continued…<br>　　听听那冷雨</p>
]]></content>
      
        <categories>
            
            <category> 互联网 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> MFC </tag>
            
            <tag> C++ </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[多说关闭引发的麻烦]]></title>
      <url>http://hubojing.github.io/2017/04/05/%E5%A4%9A%E8%AF%B4%E5%85%B3%E9%97%AD%E5%BC%95%E5%8F%91%E7%9A%84%E9%BA%BB%E7%83%A6/</url>
      <content type="html"><![CDATA[<p><div align="left"><br><img src="https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1491392241106&di=d26487a68371b445aa7b604ab2883ce1&imgtype=0&src=http%3A%2F%2Fimage103.360doc.com%2FDownloadImg%2F2017%2F02%2F1715%2F91672979_2.png" width="300" height="180" style="float:right;"><br> </div><br>我以为短期内我不可能再更新这篇文章了。没想到……</p>
<h1 id="201779-网页云跟帖停止服务"><a href="#2017-7-9-网页云跟帖停止服务" class="headerlink" title="2017.7.9 网页云跟帖停止服务"></a>2017.7.9 网页云跟帖停止服务</h1><p><img src="http://img.blog.csdn.net/20170709154958703?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="跟帖关闭"><br>此刻我只想说：<br>哈哈哈哈哈哈哈哈！</p>
<p>跟帖服务跟不上，最终还是被畅言玩死了。幸好早早换了disqus。</p>
<p>同时，为这个商业社会默哀一秒钟。</p>
<a id="more"></a>
<h1 id="201773-disqus不用翻墙即可评论"><a href="#2017-7-3-disqus不用翻墙即可评论" class="headerlink" title="2017.7.3 disqus不用翻墙即可评论"></a>2017.7.3 disqus不用翻墙即可评论</h1><p>　　不审核，直接显示。并且，可以回访！</p>
<p>　　这次折腾好后短期内应该不会再弄评论框了  专注工作专注工作</p>
<p>　　墙内换成网易云跟帖后，评论量就跳水式下降，仿佛被打入冷宫？加上跟帖各种缺陷，还是用disqus吧，刚好听说了可以不翻墙就能用的方法，遂试之。</p>
<p>之前的600条评论又只能暂以json的形式躺在电脑里了。为什么大家的格式都不一样呢？这真的很不和谐，很不！和！谐！！</p>
<h2 id="登录服务器"><a href="#登录服务器" class="headerlink" title="登录服务器"></a>登录服务器</h2><p>我用的xshell，ssh连接服务器。我的服务器是DigitalOcean买的 512M的……(它已经被闲置了三个月了，心疼money)<br>详见<a href="http://hubojing.me/2017/03/28/DigitalOcean%E8%B4%AD%E4%B9%B0%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%95%99%E7%A8%8B/" target="_blank" rel="external">DigitalOcean购买服务器教程</a></p>
<h2 id="安装面板"><a href="#安装面板" class="headerlink" title="安装面板"></a>安装面板</h2><p>在服务器上安装<a href="https://www.bt.cn/bbs/thread-1186-1-1.html" target="_blank" rel="external">宝塔Linux面板</a><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">yum install -y wget &amp;&amp; wget -O install.sh http://download.bt.cn/install/install.sh &amp;&amp; sh install.sh</div></pre></td></tr></table></figure></p>
<p>然后在浏览器中打开面板。</p>
<h2 id="新建站点"><a href="#新建站点" class="headerlink" title="新建站点"></a>新建站点</h2><p>在网站中添加站点，输入一个域名。（可勾选FTP）</p>
<h2 id="配置api"><a href="#配置API" class="headerlink" title="配置API"></a>配置API</h2><p><a href="https://github.com/fooleap/disqus-php-api" target="_blank" rel="external">利用 PHP cURL 转发 Disqus API 请求</a> ，将文件clone到本地。在config中按要求配置。</p>
<p>将API打包上传到面板，解压。再将dist文件夹下的两个文件上传上去。</p>
<h2 id="域名解析"><a href="#域名解析" class="headerlink" title="域名解析"></a>域名解析</h2><p>接着打开解析博客的地址，我用的腾讯云。<a href="https://www.dnspod.cn" target="_blank" rel="external">DNSPOD</a> 添加域名。<br>主机记录填对应的新建的站点名（不带网站一级域名），记录类型A，记录值为服务器地址。</p>
<h2 id="disqus配置"><a href="#disqus配置" class="headerlink" title="disqus配置"></a>disqus配置</h2><p>disqus后台中勾选允许匿名评论。</p>
<h2 id="修改主题中评论文件"><a href="#修改主题中评论文件" class="headerlink" title="修改主题中评论文件"></a>修改主题中评论文件</h2><p>完工。</p>
<p>部署时，<br><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">fatal: Unable <span class="built_in">to</span> <span class="built_in">create</span> <span class="string">'E:/hexo/.deploy_git/.git/index.lock'</span>: File exists.</div><div class="line"></div><div class="line">Another git <span class="built_in">process</span> seems <span class="built_in">to</span> be running <span class="keyword">in</span> this repository, e.g.</div><div class="line"><span class="keyword">an</span> editor opened <span class="keyword">by</span> <span class="string">'git commit'</span>. Please make sure all processes</div><div class="line">are terminated <span class="keyword">then</span> <span class="keyword">try</span> again. If <span class="keyword">it</span> still fails, <span class="keyword">a</span> git <span class="built_in">process</span></div><div class="line">may have crashed <span class="keyword">in</span> this repository earlier:</div><div class="line">remove <span class="keyword">the</span> <span class="built_in">file</span> manually <span class="built_in">to</span> continue.</div><div class="line">FATAL Something<span class="string">'s wrong. Maybe you can find the solution here: http://hexo.io/docs/troubleshooting.html</span></div></pre></td></tr></table></figure></p>
<p>解决：删除对应的index.lock。</p>
<hr>
<blockquote>
<h1 id="2017527-已更换为disqus"><a href="#2017-5-27-已更换为Disqus" class="headerlink" title="2017.5.27 已更换为Disqus"></a>2017.5.27 已更换为Disqus</h1></blockquote>
<p>由于Disqus被墙，可能需要科学上网后才能看到评论。<br>若墙内的朋友们需要评论，可以直接点击QQ图标（PC端在左边栏，移动端在页面上方），和我进行在线对话。</p>
<hr>
<blockquote>
<h1 id="2017530-已导入历史评论"><a href="#2017-5-30-已导入历史评论" class="headerlink" title="2017.5.30 已导入历史评论"></a>2017.5.30 已导入历史评论</h1></blockquote>
<p>虽然比不上多说，比网易云跟帖还是好很多了。<br>目前发现有一篇文章的评论导入失败，Disqus的显示如下：<br>Missing or invalid message 或 Unable to find parent post<br>我再看看怎么解决，是否需要手工导入。<br>参考：<a href="http://urouge.github.io/migrate-to-disqus/" target="_blank" rel="external">多说评论迁移至Disqus</a></p>
<hr>
<p>多说八百年不发邮件通知我有评论，在我换为网易云跟帖后，竟然邮件通知我有评论了！</p>
<p>多说关闭带来的评论区何去何从让我颇为困扰。<br>现在能用的大概只有这些：畅言（需备案）、网易云跟帖（github.io不支持）、友言（也有倒闭趋势）、来必力（韩国）。</p>
<p>没有一个像多说这样好用的！</p>
<p>虽然多说也有很多问题，但它至少解决了核心问题：<br>1.评论显示正确的网友名称。<br>来看看我换上网易云跟帖后的效果：<br><img src="http://img.blog.csdn.net/20170405161942419?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="网易云跟帖"></p>
<p>都是有态度网友…… 我压根分不清谁是谁！</p>
<p>2.点击头像可以回访人家的独立博客。<br>这一点真的很重要，这往往是我们小众的独立博客人交朋友的主要途径啊！</p>
<p>3.可以自定义。<br>头像旋转、评论框自定义，真的可以很好看。这些跟帖做不到。</p>
<p>4.盖楼模式多样。<br>而跟帖只能一种，我不太喜欢，重复率太高，我还是喜欢多说的嵌套。</p>
<p>多说名字没起好啊！多说无益必自毙→_→<br>先换回多说吧，再等一个月看看。</p>
]]></content>
      
        <categories>
            
            <category> 杂谈 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 多说 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[DigitalOcean购买服务器教程]]></title>
      <url>http://hubojing.github.io/2017/03/28/DigitalOcean%E8%B4%AD%E4%B9%B0%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%95%99%E7%A8%8B/</url>
      <content type="html"><![CDATA[<div align="left"><br><img src="http://img.blog.csdn.net/20170326174446026?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" width="300" height="180" style="float:right;"><br><br>GitHub教育礼包有50美金优惠券，加上朋友的链接送的10美金，自己充值的5美金，正好可以买一个服务器用一年了。<br>　<br>　<br><br> </div>




<a id="more"></a>
<h1 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h1><h2 id="注册-优惠码"><a href="#注册、优惠码" class="headerlink" title="注册、优惠码"></a>注册、优惠码</h2><p>1.点击<a href="https://m.do.co/c/9d7b9b7b94ba/" target="_blank" rel="external">https://m.do.co/c/9d7b9b7b94ba/</a> 进入DigitalOcean注册。<br>（通过以上链接，你可以多获得10美金！同时，我也将得到10美金。）</p>
<p>注册时，需要支付5美金完成支付，最好用paypal支付（可以去注册一个账号），最好不要用信用卡（土豪可以用……）。</p>
<p>2.点击头像下的Setting，再点击右侧的Billing<br><img src="http://img.blog.csdn.net/20170326174446026?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="Billing"></p>
<p>3.输入教育礼包优惠码<br><img src="http://img.blog.csdn.net/20170326174542642?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="Promo code"></p>
<p><strong>注意</strong>：很有可能显示“ Account not eligible to use this promo code.”可能滥用优惠码却不是学生的人太多，DO加强了监管，审查比较严格。反正我的是没有通过。<br>于是，需要向客服反映情况。<br>点击Support，<br><img src="http://img.blog.csdn.net/20170326174844940?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="Support"><br>点击Create ticket，把你的情况写清楚，最好说明你是学生，并附带你的优惠码。之后官方会帮你搞定。（在三小时后就处理好了我的）</p>
<h2 id="购买服务器"><a href="#购买服务器" class="headerlink" title="购买服务器"></a>购买服务器</h2><p>点击创建Droplet，</p>
<p><img src="http://img.blog.csdn.net/20170326175306708?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="Create Droplet"></p>
<p><img src="http://img.blog.csdn.net/20170326180620758?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="服务器价格"></p>
<p>学生……穷啊……只能买最便宜的……这样刚好可以用一年。</p>
<p><img src="http://img.blog.csdn.net/20170326175420319?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="选择服务器系统"></p>
<p>选择centos6.8x64</p>
<p><img src="http://img.blog.csdn.net/20170326175528071?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="选择地址"></p>
<p>旧金山比较快。</p>
<p><img src="http://img.blog.csdn.net/20170326175607599?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="可选项"></p>
<p>这个的第一个和第三个可以选，最好不选第三个。</p>
<p>改名</p>
<p><img src="http://img.blog.csdn.net/20170326175720964?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="改名"></p>
<p>点击create，服务器购买成功。<br>DO会给你发送一封带有初始密码的邮件。</p>
<h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p>下载puTTY或xshell。<br>puTTY<br><img src="http://img.blog.csdn.net/20170326180124352?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="puTTY"></p>
<p>我以shell为例，<br><img src="http://img.blog.csdn.net/20170326180208206?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="初始页"></p>
<p>新建会话。<br><img src="http://img.blog.csdn.net/20170326180245618?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="属性"></p>
<p>IP地址填你的服务器IP，接受并保存你的主机密钥。<br>输入用户名。<br>输入初始密码。<br>再修改密码。（密码最好复杂一点）</p>
<p>完成。<br>可以愉快地使用你的服务器啦！</p>
<h1 id="致谢"><a href="#致谢" class="headerlink" title="致谢"></a>致谢</h1><p>感谢<a href="https://www.domeyi.com/" target="_blank" rel="external">小忆</a>的耐心指导和大力帮助！</p>
]]></content>
      
        <categories>
            
            <category> 互联网 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> DigitalOcean </tag>
            
            <tag> 服务器 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[更换为.me域名教程]]></title>
      <url>http://hubojing.github.io/2017/03/26/%E6%9B%B4%E6%8D%A2%E4%B8%BA.me%E5%9F%9F%E5%90%8D%E6%95%99%E7%A8%8B/</url>
      <content type="html"><![CDATA[<div align="left"><br><img src="http://img.blog.csdn.net/20170326164253754?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" width="300" height="180" style="float:right;"><br><br>既然申请得到Github教育礼包，就应开始使用。<br>我的博客是基于Hexo搭建于Github的博客，原域名：<a href="http://hubojing.github.io/">http://hubojing.github.io/</a> ，现在的新域名是 <a href="http://www.hubojing.me/" target="_blank" rel="external">http://www.hubojing.me/</a> 。<br>　<br>　<br>　<br><br> </div>



<a id="more"></a>
<h1 id="注册me域名"><a href="#注册-me域名" class="headerlink" title="注册.me域名"></a>注册.me域名</h1><p>1.打开教育礼包中的namecheap优惠页面<a href="https://nc.me/，使用你的github账号登录。" target="_blank" rel="external">https://nc.me/，使用你的github账号登录。</a><br><img src="http://img.blog.csdn.net/20170326164253754?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="登录"></p>
<p>登陆后，显示已成功。</p>
<p><img src="http://img.blog.csdn.net/20170326164344646?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="成功"></p>
<p>搜索你想要的域名。</p>
<p><img src="http://img.blog.csdn.net/20170326164007734?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="查询页面"></p>
<p>2.如果该域名未被注册，那么你可以注册该域名。<br><img src="http://img.blog.csdn.net/20170326164441564?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="注册页面"></p>
<p>点击ADD。</p>
<p><img src="http://img.blog.csdn.net/20170326164524022?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="付款"></p>
<p>点击Complete Order。</p>
<p><img src="http://img.blog.csdn.net/20170326164625924?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="详情"></p>
<p>点击下方的Finish Up完成注册，这样该域名就属于你了。</p>
<p>紧接着，会要求你登录你的namecheap账号，如果之前没有用过该网站，就点register注册一个账号。</p>
<p><img src="http://img.blog.csdn.net/20170326164750097?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="注册"></p>
<p>注册完成后，是以下的页面显示。</p>
<p><img src="http://img.blog.csdn.net/20170326164921653?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="注册完成"></p>
<p>在和你的Github账户绑定在一起：<br><img src="http://img.blog.csdn.net/20170326165006630?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="绑定成功"></p>
<p>这样.me域名注册就算是全部完成了。</p>
<h1 id="域名管理"><a href="#域名管理" class="headerlink" title="域名管理"></a>域名管理</h1><p>打开网址<a href="http://www.namecheap.com/，登录自己的账户。" target="_blank" rel="external">http://www.namecheap.com/，登录自己的账户。</a><br>点击Domain List，<br><img src="http://img.blog.csdn.net/20170326165302596?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="点击"></p>
<p>你将看到域名列表。</p>
<p><img src="http://img.blog.csdn.net/20170326165359413?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="域名列表"></p>
<p>由于国外的DNS可能很慢，于是最好托管到国内的服务商来。我选择的是腾讯云。</p>
<h1 id="转移到腾讯云"><a href="#转移到腾讯云" class="headerlink" title="转移到腾讯云"></a>转移到腾讯云</h1><p>进入<a href="https://www.dnspod.cn/，注册新账号（可以用QQ、微信等直接登录免注册）。" target="_blank" rel="external">https://www.dnspod.cn/，注册新账号（可以用QQ、微信等直接登录免注册）。</a></p>
<p>点击添加域名，将刚才的.me域名输入。保存。<br><img src="http://img.blog.csdn.net/20170326165806508?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="添加域名"></p>
<p>控制台全局外观：<br><img src="http://img.blog.csdn.net/20170326170148387?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="控制台"></p>
<p>再回到namecheap控制台，修改NAMESERVERS，选择Custom DNS，如图。<br><img src="http://img.blog.csdn.net/20170326170503918?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="修改DNS"></p>
<p>需要等待一会儿才能成功。（最晚48h，我就等了几分钟就好了。）</p>
<p><img src="http://img.blog.csdn.net/20170326170702856?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="成功提示"></p>
<p>回到腾讯云，域名是红的。<br><img src="http://img.blog.csdn.net/20170326170821412?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="红色"></p>
<p>点击进去看看，再返回，等待一下，再刷新。<br>变成蓝色，说明已经更新成功了。</p>
<p>点击进入，点击添加记录，</p>
<p><img src="http://img.blog.csdn.net/20170326171042541?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="添加记录"></p>
<p>保存。</p>
<h1 id="github博客项目设置"><a href="#GitHub博客项目设置" class="headerlink" title="GitHub博客项目设置"></a>GitHub博客项目设置</h1><p>进入项目页（是博客项目页，非个人资料页），点击Setting，<br><img src="http://img.blog.csdn.net/20170326171232078?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="GitHub Pages"></p>
<p>将Custom domain改为你刚才解析的域名，比如我的 www.hubojing.me ，点击Save保存。</p>
<p><img src="http://img.blog.csdn.net/20170326171403280?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="保存成功"></p>
<p>大功告成！你的新域名已能正常使用，并且也能通过旧域名自动跳转到新域名！（记得重启浏览器，或者使用IE或Edge浏览器打开查看效果！）<br><img src="http://img.blog.csdn.net/20170326171616595?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="大功告成"></p>
<h1 id="致谢"><a href="#致谢" class="headerlink" title="致谢"></a>致谢</h1><p>感谢 <a href="https://www.domeyi.com/" target="_blank" rel="external">小忆</a> 在我更换域名时提供的大力帮助！</p>
]]></content>
      
        <categories>
            
            <category> 互联网 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 教程 </tag>
            
            <tag> 域名 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Github教育礼包]]></title>
      <url>http://hubojing.github.io/2017/03/25/Github%E6%95%99%E8%82%B2%E7%A4%BC%E5%8C%85/</url>
      <content type="html"><![CDATA[<div align="left"><br><img src="http://img.blog.csdn.net/20170325152139513?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" width="300" height="180" style="float:right;"><br><br><br>　<br>感谢小伙伴让我知道github教育礼包，并教我怎么申请：<br><br><br> </div>


<a id="more"></a>
<ol>
<li>到教育优惠页面申请：<a href="https://education.github.com/" target="_blank" rel="external">https://education.github.com/</a></li>
<li>填写学校信息及申请理由，如果有edu邮箱一般很快就通过了；如果没有，需要提供证件来证明。</li>
<li>一般来说一小时到几天就申请成功了。（我当天晚上收到了邮件）<br>有用的主要三个东西：</li>
<li>me域名免费一年</li>
<li>DO的免费VPS代金券50美金（有效期1年），可以使用最低配置11个月</li>
<li>免费SSL证书</li>
</ol>
<p>收到的邮件（截取片段）：<br>If you need help getting started with Git and GitHub, check out:</p>
<p><a href="https://help.github.com/articles/good-resources-for-learning-git-and-github" target="_blank" rel="external">https://help.github.com/articles/good-resources-for-learning-git-and-github</a></p>
<p>We’ve also given you access to the Student Developer Pack, available at:</p>
<p><a href="https://education.github.com/pack" target="_blank" rel="external">https://education.github.com/pack</a></p>
<p>If you have any questions, contact us:</p>
<p><a href="https://education.github.com/contact" target="_blank" rel="external">https://education.github.com/contact</a></p>
<p>Spread the word: we love giving educational discounts to students, teachers, administrators, and researchers! Please send them to:</p>
<p><a href="https://education.github.com" target="_blank" rel="external">https://education.github.com</a></p>
<p>Have an Octotastic day!（这个 Octotastic 我不造是什么意思……词典也没这个词 望大神解答）</p>
<p>My Pack:<br><img src="http://img.blog.csdn.net/20170325152139513?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="ATOM"><br>A hackable text editor for the 21st Century<br>来自21世纪的可定制文本编辑器<br>免费使用</p>
<p><img src="http://img.blog.csdn.net/20170325152259545?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="aws educate"><br>Access to the AWS cloud, free training, and collaboration resources<br>AWS云，免费教程和资源。</p>
<p><img src="http://img.blog.csdn.net/20170325152452545?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="bitnami"><br>Install cloud applications in a single click<br>轻松安装云应用</p>
<p><img src="http://img.blog.csdn.net/20170325152601503?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="CARTO"><br>An open and powerful platform for spatial data analysis, visualization, and application creation.<br>一个开放有力的空间、视觉、应用创建数据分析平台。</p>
<p><img src="http://img.blog.csdn.net/20170325152759640?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="CrowdFlower"><br>Crowdsourcing and data enrichment platform<br>众包与数据富集平台</p>
<p><img src="http://img.blog.csdn.net/20170325152955501?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="DATADOG"><br>Cloud-based infrastructure monitoring<br>云基础设施监控</p>
<p><img src="http://img.blog.csdn.net/20170325153132065?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="DigitalOcean"><br>Simple cloud hosting, built for developers<br>简单云托管，为开发者而生</p>
<p><img src="http://img.blog.csdn.net/20170325153307467?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="dnsimple"><br>Simple DNS management with one-click services and a robust API<br>简单的DNS管理，包括一键服务和强大的API</p>
<p><img src="http://img.blog.csdn.net/20170325153539661?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="FLATIRON SCHOOL"><br>Learn Web Development from the premier coding bootcamp for launching developers.<br>从最开始的代码集训营开始学习Web开发成为开发者。</p>
<p><img src="http://img.blog.csdn.net/20170325153827865?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="Github"><br>Powerful collaboration, code review, and code management<br>强大的协作、代码审查和代码管理</p>
<p><img src="http://img.blog.csdn.net/20170325153937663?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="GitKraken"><br>The downright luxurious Git client for Windows, Mac and Linux<br>Windows，Mac和Linux上的超级豪华Git客户端</p>
<p><img src="http://img.blog.csdn.net/20170325154114898?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="HACKHANDS"><br>Live programming help available 24/7<br>编程帮助</p>
<p><img src="http://img.blog.csdn.net/20170325154256511?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="Microsoft Imagine"><br>A suite of Microsoft Azure cloud services and developer tools, including the Visual Studio IDE<br>一套微软Azure的云服务和开发工具，包括Visual Studio IDE</p>
<p><img src="http://img.blog.csdn.net/20170325154446405?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="namecheap"><br>Affordable registration, hosting, and domain management<br>便宜的注册，托管和域管理</p>
<p><img src="http://img.blog.csdn.net/20170325154612806?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="SendGrid"><br>Email infrastructure as a service<br>电子邮件基础设施服务</p>
<p><img src="http://img.blog.csdn.net/20170325154722190?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="stripe"><br>Web and mobile payments, built for developers<br>网络和移动支付，为开发者而生</p>
<p><img src="http://img.blog.csdn.net/20170325154820863?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="TAPLYTICS"><br>Dynamic A/B testing, smart push notifications and custom analytics for native mobile apps<br>动态A / B测试，智能推送通知和自定义分析本地移动应用程序</p>
<p><img src="http://img.blog.csdn.net/20170325155641561?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="transifex"><br>Localization platform that easily integrates with your code base<br>易于与代码库集成的本地化平台</p>
<p><img src="http://img.blog.csdn.net/20170325155750954?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="Travis CI"><br>Continuous integration platform for open source and private projects<br>开源和私有项目的连续集成平台</p>
<p><img src="http://img.blog.csdn.net/20170325155909190?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="UDACITY"><br>Enroll in a Nanodegree program, and launch your career in Web and Mobile Development, Machine Learning, Data Science, and more.</p>
<p>Enroll in a Nanodegree program, and launch your career in Web and Mobile Development, Machine Learning, Data Science, and more.<br>报名参加一个nanodegree项目，在Web、移动开发、机器学习、数据科学以及等多方面，开启你的职业生涯。</p>
<p><img src="http://img.blog.csdn.net/20170325162245096?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="UNREAL"><br>A complete suite of game development tools for PC, console, mobile, web and VR<br>一套完整的游戏开发工具，用于PC，控制台，移动，网络和虚拟现实</p>
<p>正在学习其中一些工具的使用中……未完待续。</p>
]]></content>
      
        <categories>
            
            <category> 杂谈 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Github </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[简易计算器（Android）]]></title>
      <url>http://hubojing.github.io/2017/03/22/%E5%88%B6%E4%BD%9C%E7%AE%80%E6%98%93%E8%AE%A1%E7%AE%97%E5%99%A8APP%EF%BC%88%E7%BA%BF%E6%80%A7%E7%BB%93%E6%9E%84%EF%BC%89/</url>
      <content type="html"><![CDATA[<div align="left"><br><img src="http://img.blog.csdn.net/20170321231830210?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" width="300" height="180" style="float:right;"><br><br><br><br>安卓端简易计算器APP实现。<br><br><br><br></div>

<a id="more"></a>
<h1 id="目标"><a href="#目标" class="headerlink" title="目标"></a>目标</h1><p>制作简易计算器（Android）。</p>
<h1 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h1><p>第一步：页面布局<br>第二步：事件监听以及实现运算</p>
<h1 id="成品"><a href="#成品" class="headerlink" title="成品"></a>成品</h1><p><img src="http://img.blog.csdn.net/20170321231830210?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="简易计算器"></p>
<h1 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h1><h2 id="mainactivityjava"><a href="#MainActivity-java" class="headerlink" title="MainActivity.java"></a>MainActivity.java</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div><div class="line">175</div><div class="line">176</div><div class="line">177</div><div class="line">178</div><div class="line">179</div><div class="line">180</div><div class="line">181</div><div class="line">182</div><div class="line">183</div><div class="line">184</div><div class="line">185</div><div class="line">186</div><div class="line">187</div><div class="line">188</div><div class="line">189</div><div class="line">190</div><div class="line">191</div><div class="line">192</div><div class="line">193</div><div class="line">194</div><div class="line">195</div><div class="line">196</div><div class="line">197</div><div class="line">198</div><div class="line">199</div><div class="line">200</div><div class="line">201</div><div class="line">202</div><div class="line">203</div><div class="line">204</div><div class="line">205</div><div class="line">206</div></pre></td><td class="code"><pre><div class="line">package com.example.calculator;</div><div class="line"></div><div class="line">import android.app.Activity;</div><div class="line">import android.os.Bundle;</div><div class="line">import android.view.View;</div><div class="line">import android.view.View.OnClickListener;</div><div class="line">import android.widget.Button;</div><div class="line">import android.widget.EditText;</div><div class="line"></div><div class="line">public class MainActivity extends Activity implements OnClickListener&#123;</div><div class="line">	Button btn_0;//0按钮</div><div class="line">	Button btn_1;//1按钮</div><div class="line">	Button btn_2;//2按钮</div><div class="line">	Button btn_3;//3按钮</div><div class="line">	Button btn_4;//4按钮</div><div class="line">	Button btn_5;//5按钮</div><div class="line">	Button btn_6;//6按钮</div><div class="line">	Button btn_7;//7按钮</div><div class="line">	Button btn_8;//8按钮</div><div class="line">	Button btn_9;//9按钮</div><div class="line">	Button btn_point;//小数点按钮</div><div class="line">	Button btn_clear;//清除按钮</div><div class="line">	Button btn_del;//删除按钮</div><div class="line">	Button btn_plus;//加按钮</div><div class="line">	Button btn_minus;//减按钮</div><div class="line">	Button btn_multiply;//乘按钮</div><div class="line">	Button btn_divide;//除按钮</div><div class="line">	Button btn_equal;//等号按钮</div><div class="line">	EditText et_input;//显示输入内容的显示屏</div><div class="line">	boolean clear_flag;//清空标识</div><div class="line">	</div><div class="line">	@Override</div><div class="line">	protected void onCreate(Bundle savedInstanceState) &#123;</div><div class="line">		super.onCreate(savedInstanceState);</div><div class="line">		setContentView(R.layout.activity_main);</div><div class="line">		btn_0 = (Button) findViewById(R.id.btn_0);</div><div class="line">		btn_1 = (Button) findViewById(R.id.btn_1);</div><div class="line">		btn_2 = (Button) findViewById(R.id.btn_2);</div><div class="line">		btn_3 = (Button) findViewById(R.id.btn_3);</div><div class="line">		btn_4 = (Button) findViewById(R.id.btn_4);</div><div class="line">		btn_5 = (Button) findViewById(R.id.btn_5);</div><div class="line">		btn_6 = (Button) findViewById(R.id.btn_6);</div><div class="line">		btn_7 = (Button) findViewById(R.id.btn_7);</div><div class="line">		btn_8 = (Button) findViewById(R.id.btn_8);</div><div class="line">		btn_9 = (Button) findViewById(R.id.btn_9);</div><div class="line">		btn_point = (Button) findViewById(R.id.btn_point);</div><div class="line">		btn_clear = (Button) findViewById(R.id.btn_clear);</div><div class="line">		btn_del = (Button) findViewById(R.id.btn_del);</div><div class="line">		btn_plus = (Button) findViewById(R.id.btn_plus);</div><div class="line">		btn_minus = (Button) findViewById(R.id.btn_minus);</div><div class="line">		btn_multiply = (Button) findViewById(R.id.btn_multiply);</div><div class="line">		btn_divide = (Button) findViewById(R.id.btn_divide);</div><div class="line">		btn_equal = (Button) findViewById(R.id.btn_equal);</div><div class="line">		//以上是实例化按钮</div><div class="line">		et_input=(EditText)findViewById(R.id.et_input);//实例化显示屏</div><div class="line">		</div><div class="line">		btn_0.setOnClickListener(this);</div><div class="line">		btn_1.setOnClickListener(this);</div><div class="line">		btn_2.setOnClickListener(this);</div><div class="line">		btn_3.setOnClickListener(this);</div><div class="line">		btn_4.setOnClickListener(this);</div><div class="line">		btn_5.setOnClickListener(this);</div><div class="line">		btn_6.setOnClickListener(this);</div><div class="line">		btn_7.setOnClickListener(this);</div><div class="line">		btn_8.setOnClickListener(this);</div><div class="line">		btn_9.setOnClickListener(this);</div><div class="line">		btn_point.setOnClickListener(this);</div><div class="line">		btn_clear.setOnClickListener(this);</div><div class="line">		btn_del.setOnClickListener(this);</div><div class="line">		btn_plus.setOnClickListener(this);</div><div class="line">		btn_minus.setOnClickListener(this);</div><div class="line">		btn_multiply.setOnClickListener(this);	</div><div class="line">		btn_divide.setOnClickListener(this);</div><div class="line">		btn_equal.setOnClickListener(this);</div><div class="line">		//以上设置按钮的点击事件</div><div class="line">		</div><div class="line">		</div><div class="line">		</div><div class="line">		</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	@Override</div><div class="line">	public void onClick(View v) &#123;</div><div class="line">		// TODO Auto-generated method stub</div><div class="line">		String str =et_input.getText().toString();</div><div class="line">		switch (v.getId()) &#123;</div><div class="line">		case R.id.btn_0:</div><div class="line">		case R.id.btn_1:</div><div class="line">		case R.id.btn_2:</div><div class="line">		case R.id.btn_3:</div><div class="line">		case R.id.btn_4:</div><div class="line">		case R.id.btn_5:</div><div class="line">		case R.id.btn_6:</div><div class="line">		case R.id.btn_7:</div><div class="line">		case R.id.btn_8:</div><div class="line">		case R.id.btn_9:</div><div class="line">		case R.id.btn_point:</div><div class="line">			if(clear_flag)&#123;</div><div class="line">				clear_flag=false;</div><div class="line">				str=&quot;&quot;;</div><div class="line">				et_input.setText(&quot;&quot;);</div><div class="line">			&#125;</div><div class="line">		et_input.setText(str+((Button)v).getText());</div><div class="line">			break;</div><div class="line">			</div><div class="line">		</div><div class="line">		case R.id.btn_plus:</div><div class="line">		case R.id.btn_minus:</div><div class="line">		case R.id.btn_multiply:</div><div class="line">		case R.id.btn_divide:</div><div class="line">			if(clear_flag)&#123;</div><div class="line">				clear_flag=false;</div><div class="line">				str=&quot;&quot;;</div><div class="line">				et_input.setText(&quot;&quot;);</div><div class="line">			&#125;</div><div class="line">		et_input.setText(str+&quot; &quot;+((Button)v).getText()+&quot; &quot;);</div><div class="line">			break;</div><div class="line">		case R.id.btn_clear:</div><div class="line">			clear_flag=false;</div><div class="line">			str=&quot;&quot;;</div><div class="line">			et_input.setText(&quot;&quot;);</div><div class="line">			break;</div><div class="line">		case R.id.btn_del:</div><div class="line">			if(clear_flag)&#123;</div><div class="line">				clear_flag=false;</div><div class="line">				str=&quot;&quot;;</div><div class="line">				et_input.setText(&quot;&quot;);</div><div class="line">			&#125;else if(str!=null&amp;&amp;!str.equals(&quot;&quot;))&#123;</div><div class="line">				et_input.setText(str.substring(0, str.length()-1));</div><div class="line">			&#125;</div><div class="line">			break;</div><div class="line">		case R.id.btn_equal:</div><div class="line">			getResult();</div><div class="line">			break;</div><div class="line">	</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	/**</div><div class="line">	 * 运算结果</div><div class="line">	 */</div><div class="line">	private void getResult()&#123;</div><div class="line">		String exp=et_input.getText().toString();</div><div class="line">		if(exp==null||exp.equals(&quot;&quot;))&#123;</div><div class="line">			return;</div><div class="line">		&#125;</div><div class="line">		if(!exp.contains(&quot; &quot;))&#123;</div><div class="line">			return;</div><div class="line">		&#125;</div><div class="line">	</div><div class="line">		if(clear_flag)&#123;</div><div class="line">			clear_flag=false;</div><div class="line">			return;</div><div class="line">		&#125;</div><div class="line">		clear_flag=true;</div><div class="line">		double result=0;</div><div class="line">		String s1=exp.substring(0, exp.indexOf(&quot; &quot;));//运算符前面的字符串</div><div class="line">		String op=exp.substring(exp.indexOf(&quot; &quot;)+1, exp.indexOf(&quot; &quot;)+2);//运算符</div><div class="line">		String s2=exp.substring(exp.indexOf(&quot; &quot;)+3);//运算符后面的字符串</div><div class="line">		</div><div class="line">		if(!s1.equals(&quot;&quot;)&amp;&amp;!s2.equals(&quot;&quot;))&#123;</div><div class="line">			double d1=Double.parseDouble(s1);</div><div class="line">			double d2=Double.parseDouble(s2);</div><div class="line">			if(op.equals(&quot;+&quot;))&#123;</div><div class="line">				result=d1+d2;</div><div class="line">			&#125;else if(op.equals(&quot;-&quot;))&#123;</div><div class="line">				result=d1-d2;</div><div class="line">			&#125;else if(op.equals(&quot;×&quot;))&#123;</div><div class="line">				result=d1*d2;</div><div class="line">			&#125;else if(op.equals(&quot;÷&quot;))&#123;</div><div class="line">				if(d2==0)&#123;</div><div class="line">					result=0;</div><div class="line">				&#125;else&#123;</div><div class="line">					result=d1/d2;</div><div class="line">				&#125;</div><div class="line">			&#125;</div><div class="line">			if(!s1.contains(&quot;.&quot;)&amp;&amp;!s2.contains(&quot;.&quot;)&amp;&amp;!op.equals(&quot;÷&quot;))&#123;</div><div class="line">				int r=(int)result;</div><div class="line">				et_input.setText(r+&quot;&quot;);</div><div class="line">			&#125;else&#123;</div><div class="line">				et_input.setText(result+&quot;&quot;);</div><div class="line">			&#125;</div><div class="line">		&#125;else if(!s1.equals(&quot;&quot;)&amp;&amp;s2.equals(&quot;&quot;))&#123;</div><div class="line">			et_input.setText(exp);</div><div class="line">		&#125;else if(s1.equals(&quot;&quot;)&amp;&amp;!s2.equals(&quot;&quot;))&#123;</div><div class="line">			double d2=Double.parseDouble(s2);</div><div class="line">			if(op.equals(&quot;+&quot;))&#123;</div><div class="line">				result=0+d2;</div><div class="line">			&#125;else if(op.equals(&quot;-&quot;))&#123;</div><div class="line">				result=0-d2;</div><div class="line">			&#125;else if(op.equals(&quot;×&quot;))&#123;</div><div class="line">				result=0;</div><div class="line">			&#125;else if(op.equals(&quot;÷&quot;))&#123;</div><div class="line">					result=0;</div><div class="line">			&#125;</div><div class="line">			if(!s2.contains(&quot;.&quot;))&#123;</div><div class="line">				int r=(int)result;</div><div class="line">				et_input.setText(r+&quot;&quot;);</div><div class="line">			&#125;else&#123;</div><div class="line">				et_input.setText(result+&quot;&quot;);</div><div class="line">			&#125;</div><div class="line">		&#125;else&#123;</div><div class="line">			et_input.setText(&quot;&quot;);</div><div class="line">		&#125;</div><div class="line">				</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="activity_mainxml"><a href="#activity-main-xml" class="headerlink" title="activity_main.xml"></a>activity_main.xml</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div><div class="line">175</div><div class="line">176</div><div class="line">177</div><div class="line">178</div><div class="line">179</div><div class="line">180</div><div class="line">181</div><div class="line">182</div><div class="line">183</div><div class="line">184</div><div class="line">185</div><div class="line">186</div><div class="line">187</div><div class="line">188</div><div class="line">189</div><div class="line">190</div><div class="line">191</div><div class="line">192</div><div class="line">193</div><div class="line">194</div><div class="line">195</div><div class="line">196</div><div class="line">197</div><div class="line">198</div><div class="line">199</div><div class="line">200</div><div class="line">201</div><div class="line">202</div><div class="line">203</div><div class="line">204</div><div class="line">205</div><div class="line">206</div><div class="line">207</div><div class="line">208</div><div class="line">209</div><div class="line">210</div><div class="line">211</div><div class="line">212</div><div class="line">213</div><div class="line">214</div><div class="line">215</div><div class="line">216</div><div class="line">217</div><div class="line">218</div><div class="line">219</div><div class="line">220</div><div class="line">221</div><div class="line">222</div><div class="line">223</div><div class="line">224</div><div class="line">225</div><div class="line">226</div><div class="line">227</div><div class="line">228</div><div class="line">229</div><div class="line">230</div><div class="line">231</div><div class="line">232</div><div class="line">233</div><div class="line">234</div><div class="line">235</div><div class="line">236</div><div class="line">237</div><div class="line">238</div><div class="line">239</div><div class="line">240</div><div class="line">241</div><div class="line">242</div><div class="line">243</div><div class="line">244</div><div class="line">245</div><div class="line">246</div><div class="line">247</div><div class="line">248</div><div class="line">249</div><div class="line">250</div><div class="line">251</div><div class="line">252</div><div class="line">253</div><div class="line">254</div><div class="line">255</div><div class="line">256</div><div class="line">257</div><div class="line">258</div><div class="line">259</div><div class="line">260</div><div class="line">261</div><div class="line">262</div><div class="line">263</div><div class="line">264</div><div class="line">265</div><div class="line">266</div><div class="line">267</div><div class="line">268</div><div class="line">269</div><div class="line">270</div><div class="line">271</div><div class="line">272</div><div class="line">273</div><div class="line">274</div><div class="line">275</div><div class="line">276</div><div class="line">277</div><div class="line">278</div><div class="line">279</div><div class="line">280</div><div class="line">281</div><div class="line">282</div><div class="line">283</div><div class="line">284</div><div class="line">285</div><div class="line">286</div></pre></td><td class="code"><pre><div class="line">&lt;LinearLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;</div><div class="line">    xmlns:tools=&quot;http://schemas.android.com/tools&quot;</div><div class="line">    android:layout_width=&quot;match_parent&quot;</div><div class="line">    android:layout_height=&quot;match_parent&quot;</div><div class="line">    android:orientation=&quot;vertical&quot;</div><div class="line">    android:paddingBottom=&quot;@dimen/activity_vertical_margin&quot;</div><div class="line">    android:paddingLeft=&quot;@dimen/activity_horizontal_margin&quot;</div><div class="line">    android:paddingRight=&quot;@dimen/activity_horizontal_margin&quot;</div><div class="line">    android:paddingTop=&quot;@dimen/activity_vertical_margin&quot;</div><div class="line">    tools:context=&quot;com.example.calculator.MainActivity&quot; &gt;</div><div class="line"></div><div class="line">   </div><div class="line">	&lt;EditText</div><div class="line">	    android:layout_width=&quot;fill_parent&quot;</div><div class="line">	    android:layout_height=&quot;60dip&quot;</div><div class="line">	    android:id=&quot;@+id/et_input&quot;</div><div class="line">	    android:editable=&quot;false&quot;</div><div class="line">	    android:gravity=&quot;right|bottom&quot;</div><div class="line">	    android:background=&quot;@drawable/white_bg&quot;</div><div class="line">	    /&gt;</div><div class="line">	&lt;LinearLayout</div><div class="line">	    android:layout_width=&quot;fill_parent&quot;</div><div class="line">	    android:layout_height=&quot;wrap_content&quot;</div><div class="line">	    android:layout_marginTop=&quot;20dp&quot;</div><div class="line">	    android:orientation=&quot;horizontal&quot;</div><div class="line">	    android:gravity=&quot;center_horizontal&quot;</div><div class="line">	    &gt;</div><div class="line">	    &lt;Button</div><div class="line">	        android:layout_width=&quot;60dp&quot;</div><div class="line">	        android:layout_height=&quot;60dp&quot;</div><div class="line">	        android:text=&quot;C&quot;</div><div class="line">	         android:paddingRight=&quot;10dp&quot;</div><div class="line">	        android:paddingBottom=&quot;10dp&quot;</div><div class="line">	        android:background=&quot;@drawable/white_selector&quot;</div><div class="line">	        android:textSize=&quot;20sp&quot;</div><div class="line">	        android:gravity=&quot;right|bottom&quot;</div><div class="line">	        android:id=&quot;@+id/btn_clear&quot;</div><div class="line">	        /&gt;</div><div class="line">	     &lt;Button</div><div class="line">	        android:layout_width=&quot;60dp&quot;</div><div class="line">	        android:layout_height=&quot;60dp&quot;</div><div class="line">	        android:text=&quot;DEL&quot;</div><div class="line">	         android:paddingRight=&quot;10dp&quot;</div><div class="line">	        android:paddingBottom=&quot;10dp&quot;</div><div class="line">	         android:background=&quot;@drawable/white_selector&quot;</div><div class="line">	        android:layout_marginLeft=&quot;10dp&quot;</div><div class="line">	        android:textSize=&quot;20sp&quot;</div><div class="line">	        android:gravity=&quot;right|bottom&quot;</div><div class="line">	        android:id=&quot;@+id/btn_del&quot;</div><div class="line">	        /&gt;</div><div class="line">	     &lt;Button</div><div class="line">	        android:layout_width=&quot;60dp&quot;</div><div class="line">	        android:layout_height=&quot;60dp&quot;</div><div class="line">	        android:text=&quot;÷&quot;</div><div class="line">	         android:paddingRight=&quot;10dp&quot;</div><div class="line">	        android:paddingBottom=&quot;10dp&quot;</div><div class="line">	         android:background=&quot;@drawable/white_selector&quot;</div><div class="line">	        android:layout_marginLeft=&quot;10dp&quot;</div><div class="line">	        android:textSize=&quot;20sp&quot;</div><div class="line">	        android:gravity=&quot;right|bottom&quot;</div><div class="line">	        android:id=&quot;@+id/btn_divide&quot;</div><div class="line">	        /&gt;</div><div class="line">	       &lt;Button</div><div class="line">	        android:layout_width=&quot;60dp&quot;</div><div class="line">	        android:layout_height=&quot;60dp&quot;</div><div class="line">	        android:text=&quot;×&quot;</div><div class="line">	         android:paddingRight=&quot;10dp&quot;</div><div class="line">	        android:paddingBottom=&quot;10dp&quot;</div><div class="line">	         android:background=&quot;@drawable/white_selector&quot;</div><div class="line">	        android:layout_marginLeft=&quot;10dp&quot;</div><div class="line">	        android:textSize=&quot;20sp&quot;</div><div class="line">	        android:gravity=&quot;right|bottom&quot;</div><div class="line">	        android:id=&quot;@+id/btn_multiply&quot;</div><div class="line">	        /&gt;</div><div class="line">	    &lt;/LinearLayout&gt;</div><div class="line">	    </div><div class="line">	&lt;LinearLayout</div><div class="line">	    android:layout_width=&quot;fill_parent&quot;</div><div class="line">	    android:layout_height=&quot;wrap_content&quot;</div><div class="line">	    android:layout_marginTop=&quot;10dp&quot;</div><div class="line">	    android:orientation=&quot;horizontal&quot;</div><div class="line">	    android:gravity=&quot;center_horizontal&quot;</div><div class="line">	    &gt;</div><div class="line">	    &lt;Button</div><div class="line">	        android:layout_width=&quot;60dp&quot;</div><div class="line">	        android:layout_height=&quot;60dp&quot;</div><div class="line">	        android:text=&quot;7&quot;</div><div class="line">	         android:paddingRight=&quot;10dp&quot;</div><div class="line">	        android:paddingBottom=&quot;10dp&quot;</div><div class="line">	         android:background=&quot;@drawable/white_selector&quot;</div><div class="line">	        android:textSize=&quot;20sp&quot;</div><div class="line">	        android:gravity=&quot;right|bottom&quot;</div><div class="line">	        android:id=&quot;@+id/btn_7&quot;</div><div class="line">	        /&gt;</div><div class="line">	     &lt;Button</div><div class="line">	        android:layout_width=&quot;60dp&quot;</div><div class="line">	        android:layout_height=&quot;60dp&quot;</div><div class="line">	        android:text=&quot;8&quot;</div><div class="line">	         android:paddingRight=&quot;10dp&quot;</div><div class="line">	        android:paddingBottom=&quot;10dp&quot;</div><div class="line">	         android:background=&quot;@drawable/white_selector&quot;</div><div class="line">	        android:layout_marginLeft=&quot;10dp&quot;</div><div class="line">	        android:textSize=&quot;20sp&quot;</div><div class="line">	        android:gravity=&quot;right|bottom&quot;</div><div class="line">	        android:id=&quot;@+id/btn_8&quot;</div><div class="line">	        /&gt;</div><div class="line">	     &lt;Button</div><div class="line">	        android:layout_width=&quot;60dp&quot;</div><div class="line">	        android:layout_height=&quot;60dp&quot;</div><div class="line">	        android:text=&quot;9&quot;</div><div class="line">	         android:paddingRight=&quot;10dp&quot;</div><div class="line">	        android:paddingBottom=&quot;10dp&quot;</div><div class="line">	         android:background=&quot;@drawable/white_selector&quot;</div><div class="line">	        android:layout_marginLeft=&quot;10dp&quot;</div><div class="line">	        android:textSize=&quot;20sp&quot;</div><div class="line">	        android:gravity=&quot;right|bottom&quot;</div><div class="line">	        android:id=&quot;@+id/btn_9&quot;</div><div class="line">	        /&gt;</div><div class="line">	       &lt;Button</div><div class="line">	        android:layout_width=&quot;60dp&quot;</div><div class="line">	        android:layout_height=&quot;60dp&quot;</div><div class="line">	        android:text=&quot;-&quot;</div><div class="line">	         android:paddingRight=&quot;10dp&quot;</div><div class="line">	        android:paddingBottom=&quot;10dp&quot;</div><div class="line">	         android:background=&quot;@drawable/white_selector&quot;</div><div class="line">	        android:layout_marginLeft=&quot;10dp&quot;</div><div class="line">	        android:textSize=&quot;20sp&quot;</div><div class="line">	        android:gravity=&quot;right|bottom&quot;</div><div class="line">	        android:id=&quot;@+id/btn_minus&quot;</div><div class="line">	        /&gt;</div><div class="line">	    &lt;/LinearLayout&gt;</div><div class="line">	    &lt;LinearLayout</div><div class="line">	    android:layout_width=&quot;fill_parent&quot;</div><div class="line">	    android:layout_height=&quot;wrap_content&quot;</div><div class="line">	    android:layout_marginTop=&quot;10dp&quot;</div><div class="line">	    android:orientation=&quot;horizontal&quot;</div><div class="line">	    android:gravity=&quot;center_horizontal&quot;</div><div class="line">	    &gt;</div><div class="line">	    &lt;Button</div><div class="line">	        android:layout_width=&quot;60dp&quot;</div><div class="line">	        android:layout_height=&quot;60dp&quot;</div><div class="line">	        android:text=&quot;4&quot;</div><div class="line">	         android:paddingRight=&quot;10dp&quot;</div><div class="line">	        android:paddingBottom=&quot;10dp&quot;</div><div class="line">	         android:background=&quot;@drawable/white_selector&quot;</div><div class="line">	        android:textSize=&quot;20sp&quot;</div><div class="line">	        android:gravity=&quot;right|bottom&quot;</div><div class="line">	        android:id=&quot;@+id/btn_4&quot;</div><div class="line">	        /&gt;</div><div class="line">	     &lt;Button</div><div class="line">	        android:layout_width=&quot;60dp&quot;</div><div class="line">	        android:layout_height=&quot;60dp&quot;</div><div class="line">	        android:text=&quot;5&quot;</div><div class="line">	         android:paddingRight=&quot;10dp&quot;</div><div class="line">	        android:paddingBottom=&quot;10dp&quot;</div><div class="line">	         android:background=&quot;@drawable/white_selector&quot;</div><div class="line">	        android:layout_marginLeft=&quot;10dp&quot;</div><div class="line">	        android:textSize=&quot;20sp&quot;</div><div class="line">	        android:gravity=&quot;right|bottom&quot;</div><div class="line">	        android:id=&quot;@+id/btn_5&quot;</div><div class="line">	        /&gt;</div><div class="line">	     &lt;Button</div><div class="line">	        android:layout_width=&quot;60dp&quot;</div><div class="line">	        android:layout_height=&quot;60dp&quot;</div><div class="line">	        android:text=&quot;6&quot;</div><div class="line">	         android:paddingRight=&quot;10dp&quot;</div><div class="line">	        android:paddingBottom=&quot;10dp&quot;</div><div class="line">	         android:background=&quot;@drawable/white_selector&quot;</div><div class="line">	        android:layout_marginLeft=&quot;10dp&quot;</div><div class="line">	        android:textSize=&quot;20sp&quot;</div><div class="line">	        android:gravity=&quot;right|bottom&quot;</div><div class="line">	        android:id=&quot;@+id/btn_6&quot;</div><div class="line">	        /&gt;</div><div class="line">	       &lt;Button</div><div class="line">	        android:layout_width=&quot;60dp&quot;</div><div class="line">	        android:layout_height=&quot;60dp&quot;</div><div class="line">	        android:text=&quot;+&quot;</div><div class="line">	         android:paddingRight=&quot;10dp&quot;</div><div class="line">	        android:paddingBottom=&quot;10dp&quot;</div><div class="line">	         android:background=&quot;@drawable/white_selector&quot;</div><div class="line">	        android:layout_marginLeft=&quot;10dp&quot;</div><div class="line">	        android:textSize=&quot;20sp&quot;</div><div class="line">	        android:gravity=&quot;right|bottom&quot;</div><div class="line">	        android:id=&quot;@+id/btn_plus&quot;</div><div class="line">	        /&gt;</div><div class="line">	    &lt;/LinearLayout&gt;</div><div class="line">	    &lt;LinearLayout </div><div class="line">	       android:layout_width=&quot;fill_parent&quot;</div><div class="line">	       android:layout_height=&quot;wrap_content&quot;</div><div class="line">	       android:orientation=&quot;horizontal&quot;</div><div class="line">	       android:layout_marginTop=&quot;10dp&quot;</div><div class="line">	       android:gravity=&quot;center_horizontal&quot;</div><div class="line">	      </div><div class="line">	        &gt;</div><div class="line">	    &lt;LinearLayout </div><div class="line">	       android:layout_width=&quot;wrap_content&quot; </div><div class="line">	       android:layout_height=&quot;wrap_content&quot;</div><div class="line">	       android:orientation=&quot;vertical&quot;</div><div class="line">	        &gt;    </div><div class="line">	    &lt;LinearLayout</div><div class="line">	        android:layout_width=&quot;wrap_content&quot;</div><div class="line">	        android:layout_height=&quot;wrap_content&quot;</div><div class="line">	        android:orientation=&quot;horizontal&quot;</div><div class="line">	        </div><div class="line">	        &gt;   </div><div class="line">	        &lt;Button</div><div class="line">	        android:layout_width=&quot;60dp&quot;</div><div class="line">	        android:layout_height=&quot;60dp&quot;</div><div class="line">	        android:text=&quot;1&quot;</div><div class="line">	         android:paddingRight=&quot;10dp&quot;</div><div class="line">	        android:paddingBottom=&quot;10dp&quot;</div><div class="line">	         android:background=&quot;@drawable/white_selector&quot;</div><div class="line">	        android:textSize=&quot;20sp&quot;</div><div class="line">	        android:gravity=&quot;right|bottom&quot;</div><div class="line">	        android:id=&quot;@+id/btn_1&quot;</div><div class="line">	        /&gt; </div><div class="line">	        &lt;Button</div><div class="line">	        android:layout_width=&quot;60dp&quot;</div><div class="line">	        android:layout_height=&quot;60dp&quot;</div><div class="line">	        android:text=&quot;2&quot;</div><div class="line">	         android:paddingRight=&quot;10dp&quot;</div><div class="line">	        android:paddingBottom=&quot;10dp&quot;</div><div class="line">	         android:background=&quot;@drawable/white_selector&quot;</div><div class="line">	        android:textSize=&quot;20sp&quot;</div><div class="line">	        android:gravity=&quot;right|bottom&quot;</div><div class="line">	        android:layout_marginLeft=&quot;10dp&quot;</div><div class="line">	        android:id=&quot;@+id/btn_2&quot;</div><div class="line">	        /&gt; </div><div class="line">	        &lt;Button</div><div class="line">	        android:layout_width=&quot;60dp&quot;</div><div class="line">	        android:layout_height=&quot;60dp&quot;</div><div class="line">	        android:text=&quot;3&quot;</div><div class="line">	         android:paddingRight=&quot;10dp&quot;</div><div class="line">	        android:paddingBottom=&quot;10dp&quot;</div><div class="line">	         android:background=&quot;@drawable/white_selector&quot;</div><div class="line">	        android:textSize=&quot;20sp&quot;</div><div class="line">	        android:gravity=&quot;right|bottom&quot;</div><div class="line">	        android:layout_marginLeft=&quot;10dp&quot;</div><div class="line">	        android:id=&quot;@+id/btn_3&quot;</div><div class="line">	        /&gt; </div><div class="line">	    &lt;/LinearLayout&gt;</div><div class="line">	     &lt;LinearLayout</div><div class="line">	        android:layout_width=&quot;wrap_content&quot;</div><div class="line">	        android:layout_height=&quot;wrap_content&quot;</div><div class="line">	        android:layout_marginTop=&quot;10dp&quot;</div><div class="line">	        android:orientation=&quot;horizontal&quot;</div><div class="line">	        &gt;   </div><div class="line">	         &lt;Button</div><div class="line">	        android:layout_width=&quot;130dp&quot;</div><div class="line">	        android:layout_height=&quot;60dp&quot;</div><div class="line">	        android:text=&quot;0&quot;</div><div class="line">	         android:paddingRight=&quot;10dp&quot;</div><div class="line">	        android:paddingBottom=&quot;10dp&quot;</div><div class="line">	         android:background=&quot;@drawable/white_selector&quot;</div><div class="line">	        android:textSize=&quot;20sp&quot;</div><div class="line">	        android:gravity=&quot;right|bottom&quot;</div><div class="line">	        android:id=&quot;@+id/btn_0&quot;</div><div class="line">	        /&gt; </div><div class="line">	        &lt;Button</div><div class="line">	        android:layout_width=&quot;60dp&quot;</div><div class="line">	        android:layout_height=&quot;60dp&quot;</div><div class="line">	        android:text=&quot;.&quot;</div><div class="line">	         android:paddingRight=&quot;10dp&quot;</div><div class="line">	        android:paddingBottom=&quot;10dp&quot;</div><div class="line">	         android:background=&quot;@drawable/white_selector&quot;</div><div class="line">	        android:textSize=&quot;20sp&quot;</div><div class="line">	        android:gravity=&quot;right|bottom&quot;</div><div class="line">	        android:layout_marginLeft=&quot;10dp&quot;</div><div class="line">	        android:id=&quot;@+id/btn_point&quot;</div><div class="line">	        /&gt; </div><div class="line">	     &lt;/LinearLayout&gt;</div><div class="line">	    &lt;/LinearLayout&gt;</div><div class="line">	    &lt;Button</div><div class="line">	        android:layout_width=&quot;60dp&quot;</div><div class="line">	        android:layout_height=&quot;130dp&quot;</div><div class="line">	        android:text=&quot;=&quot;</div><div class="line">	        android:paddingRight=&quot;10dp&quot;</div><div class="line">	        android:paddingBottom=&quot;10dp&quot;</div><div class="line">	         android:background=&quot;@drawable/orange_selector&quot;</div><div class="line">	        android:layout_marginLeft=&quot;10dp&quot;</div><div class="line">	        android:textSize=&quot;20sp&quot;</div><div class="line">	        android:gravity=&quot;right|bottom&quot;</div><div class="line">	        android:id=&quot;@+id/btn_equal&quot;</div><div class="line">	        /&gt; </div><div class="line">	    &lt;/LinearLayout&gt;</div><div class="line">&lt;/LinearLayout&gt;</div></pre></td></tr></table></figure>
<h2 id="colorxml"><a href="#color-xml" class="headerlink" title="color.xml"></a>color.xml</h2><p>res/values下新建一个xml.<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</div><div class="line">&lt;resources&gt;</div><div class="line">    &lt;color name=&quot;white&quot;&gt;#FFFFFF&lt;/color&gt;</div><div class="line">	&lt;color name=&quot;red&quot;&gt;#FF0000&lt;/color&gt;</div><div class="line">	&lt;color name=&quot;black&quot;&gt;#000000&lt;/color&gt;</div><div class="line">	&lt;color name=&quot;gray&quot;&gt;#808080&lt;/color&gt;</div><div class="line">	&lt;color name=&quot;orange&quot;&gt;#FFA500&lt;/color&gt;</div><div class="line">	&lt;color name=&quot;ashen&quot;&gt;#CD853F&lt;/color&gt;</div><div class="line">&lt;/resources&gt;</div></pre></td></tr></table></figure></p>
<h2 id="white_bgxml"><a href="#white-bg-xml" class="headerlink" title="white_bg.xml"></a>white_bg.xml</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</div><div class="line">&lt;shape xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot; &gt;</div><div class="line">  &lt;corners android:radius=&quot;5dp&quot;/&gt;</div><div class="line">  &lt;solid</div><div class="line">      android:color=&quot;@color/white&quot;</div><div class="line">  /&gt;</div><div class="line">  &lt;!--  </div><div class="line">  &lt;gradient </div><div class="line">      android:startColor=&quot;@color/white&quot; </div><div class="line">	  android:endColor=&quot;@color/red&quot;</div><div class="line">	  </div><div class="line">	 </div><div class="line">	  /&gt;</div><div class="line">  &lt;stroke</div><div class="line">  android:width=&quot;1dp&quot;</div><div class="line">  android:color=&quot;@color/black&quot;</div><div class="line">  /&gt;	</div><div class="line">  --&gt;</div><div class="line">&lt;/shape&gt;</div></pre></td></tr></table></figure>
<h2 id="white_selectorxml"><a href="#white-selector-xml" class="headerlink" title="white_selector.xml"></a>white_selector.xml</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</div><div class="line">&lt;selector xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot; &gt;</div><div class="line">    &lt;item android:drawable=&quot;@drawable/gray_bg&quot; android:state_pressed=&quot;true&quot;/&gt;</div><div class="line">	&lt;item android:drawable=&quot;@drawable/white_bg&quot;/&gt;</div><div class="line">&lt;/selector&gt;</div></pre></td></tr></table></figure>
<h1 id="出现的问题及解决方法"><a href="#出现的问题及解决方法" class="headerlink" title="出现的问题及解决方法"></a>出现的问题及解决方法</h1><blockquote>
<p>1.新建工程时，出现报错：<br>\res\values\styles.xml:7: error: Error retrieving parent for item: No resource found that matches the given name ‘Theme.AppCompat.Light’.<br>\res\values-v11\styles.xml:7: error: Error retrieving parent for item: No resource found that matches the given name ‘Theme.AppCompat.Light’.<br>\res\values-v14\styles.xml:8: error: Error retrieving parent for item: No resource found that matches the given name ‘Theme.AppCompat.Light.DarkActionBar’.</p>
</blockquote>
<p>解决方法：<br>顺着改为：<br>style name=”AppBaseTheme” parent=”android:Theme.Light”<br>style name=”AppBaseTheme” parent=”android:Theme.Holo.Light”<br>style name=”AppBaseTheme”parent=”android:Theme.Holo.Light.DarkActionBar”<br>然后menu会报错，改为：<br>  android:showAsAction=”never”</p>
<blockquote>
<p>2.导入工程时报错The import android cannot be resolved</p>
</blockquote>
<p>解决：在新建Android项目的时候，eclipes新更新的ADT，在创建的Android版本最低版本低于4.0的时候，会新建一个v7的项目，把里面的包导入就可以。如果不想有警告的话，直接在创建项目的时候把最低版本设置为4.0以上就可以。并且不会出现第一个问题。</p>
<blockquote>
<p>3.定义按钮时错误提示：Button cannot be resolved to a type</p>
</blockquote>
<p>解决：没导包，快捷键ctrl+shift+o搞定。</p>
<h1 id="笔记"><a href="#笔记" class="headerlink" title="笔记"></a>笔记</h1><h2 id="去掉标题栏"><a href="#去掉标题栏" class="headerlink" title="去掉标题栏"></a>去掉标题栏</h2><p>在res/values/string.xml中和AndroidManifest.xml去掉相应代码即可。</p>
<h2 id="颜色需新建xml"><a href="#颜色需新建xml" class="headerlink" title="颜色需新建xml"></a>颜色需新建xml</h2><p>存放在res/values/colors中，RGB颜色表示。</p>
<h2 id="drawble下文件结构"><a href="#drawble下文件结构" class="headerlink" title="drawble下文件结构"></a>drawble下文件结构</h2><p><img src="http://img.blog.csdn.net/20170321233151779?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="颜色和选择器"></p>
<h2 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h2><p>Main_Activity.java中，首先命名控件，给一个id，其次，按钮要设置点击事件，监听到该控件动作。<br>activity_main.xml中，线性结构可以嵌套使用。</p>
<p>思考：线性结构代码显臃肿，换成TableLayout也许更佳。并且计算器需要进一步优化，目前存在小的问题，例如，加减乘除符号可以在没有数字输入时顺序打印在屏幕上。总之，基本实现了计算器的功能。</p>
<h1 id="app下载"><a href="#APP下载" class="headerlink" title="APP下载"></a>APP下载</h1><p><a href="https://github.com/hubojing/Calculator" target="_blank" rel="external">https://github.com/hubojing/Calculator</a></p>
]]></content>
      
        <categories>
            
            <category> 互联网 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Java </tag>
            
            <tag> android </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[模拟借书系统（Java异常机制实现）]]></title>
      <url>http://hubojing.github.io/2017/03/19/%E6%A8%A1%E6%8B%9F%E5%80%9F%E4%B9%A6%E7%B3%BB%E7%BB%9F%EF%BC%88java%E5%BC%82%E5%B8%B8%E6%9C%BA%E5%88%B6%E5%AE%9E%E7%8E%B0%EF%BC%89/</url>
      <content type="html"><![CDATA[<div align="left"><br><img src="http://img.blog.csdn.net/20170319164926044?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" width="300" height="180" style="float:right;"><br><br><br>java语言实现一个控制台版的模拟借书系统。<br><br><br></div>

<a id="more"></a>
<h1 id="目标"><a href="#目标" class="headerlink" title="目标"></a>目标</h1><p>用java语言实现一个控制台版的模拟借书系统，旨在练习java异常机制。</p>
<h1 id="要求"><a href="#要求" class="headerlink" title="要求"></a>要求</h1><p><img src="http://img.blog.csdn.net/20170319164837988?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="要求"></p>
<h1 id="成品"><a href="#成品" class="headerlink" title="成品"></a>成品</h1><p><img src="http://img.blog.csdn.net/20170319164926044?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="最终效果"></p>
<h1 id="参考代码及注释"><a href="#参考代码及注释" class="headerlink" title="参考代码及注释"></a>参考代码及注释</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> com.jinger;</div><div class="line"></div><div class="line"><span class="keyword">import</span> java.util.Scanner;<span class="comment">//导入Scanner包</span></div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BookManagerEasy</span> </span>&#123;</div><div class="line">	<span class="keyword">private</span> <span class="keyword">static</span> Scanner console = <span class="keyword">new</span> Scanner(System.in);<span class="comment">//接收系统输入</span></div><div class="line"></div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</div><div class="line">		<span class="comment">//定义”图书“数组</span></div><div class="line">		String[] books = &#123; <span class="string">"C语言"</span>, <span class="string">"数据结构"</span>, <span class="string">"汇编语言"</span>, <span class="string">"高数"</span>, <span class="string">"大学语文"</span>, <span class="string">"毛概"</span> &#125;;</div><div class="line">		<span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</div><div class="line">			System.out.println(<span class="string">"输入命令：1-按照名称查找图书；2-按照序号查找图书"</span>);</div><div class="line">			String book;</div><div class="line">			<span class="keyword">try</span> &#123;</div><div class="line">				<span class="comment">//取得整型命令</span></div><div class="line">				<span class="keyword">int</span> command = inputCommand();</div><div class="line">				<span class="comment">//根据不同命令值，进行不同操作</span></div><div class="line">				<span class="keyword">switch</span> (command) &#123;</div><div class="line">				<span class="keyword">case</span> <span class="number">1</span>:<span class="comment">//按照图书名称选择图书</span></div><div class="line">					book = getBookByName(books);</div><div class="line">					System.out.println(<span class="string">"book:"</span> + book);</div><div class="line">					<span class="keyword">break</span>;</div><div class="line">				<span class="keyword">case</span> <span class="number">2</span>:<span class="comment">//按照图书序号（数组下标）选择图书</span></div><div class="line">					book = getBookByNumber(books);</div><div class="line">					System.out.println(<span class="string">"book:"</span> + book);</div><div class="line">					<span class="keyword">break</span>;</div><div class="line">				<span class="keyword">case</span> -<span class="number">1</span>:<span class="comment">//返回值为-1，说明输入有误</span></div><div class="line">					System.out.println(<span class="string">"命令输入错误！请根据提示输入数字命令！"</span>);</div><div class="line">					<span class="keyword">continue</span>;</div><div class="line">				<span class="keyword">default</span>:<span class="comment">//其他值的命令均认为是错误命令</span></div><div class="line">					System.out.println(<span class="string">"命令输入错误！"</span>);</div><div class="line">					<span class="keyword">continue</span>;</div><div class="line">				&#125;</div><div class="line">				<span class="keyword">break</span>;<span class="comment">//退出程序</span></div><div class="line">			&#125; <span class="keyword">catch</span> (Exception bne) &#123;</div><div class="line">				<span class="comment">//捕获“图书不存在异常”时，要求重新输入命令</span></div><div class="line">				System.out.println(bne.getMessage());</div><div class="line">				<span class="keyword">continue</span>;</div><div class="line">			&#125; </div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	<span class="comment">//按照图书名称查询图书</span></div><div class="line">	<span class="function"><span class="keyword">private</span> <span class="keyword">static</span> String <span class="title">getBookByName</span><span class="params">(String[] books)</span></span></div><div class="line">			<span class="keyword">throws</span> Exception &#123;</div><div class="line">		System.out.println(<span class="string">"输入图书名称："</span>);</div><div class="line">		<span class="comment">//获取输入的图书名称</span></div><div class="line">		String name = console.next();</div><div class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; books.length; i++) &#123;</div><div class="line">			<span class="keyword">if</span> (name.equals(books[i]))</div><div class="line">				<span class="comment">//输入的名称与某一图书名称匹配，返回该图书</span></div><div class="line">				<span class="keyword">return</span> books[i];</div><div class="line">		&#125;</div><div class="line">		<span class="comment">//若无匹配，抛出”图书不存在异常“</span></div><div class="line">		<span class="keyword">throw</span> <span class="keyword">new</span> Exception(<span class="string">"图书不存在！"</span>);</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	<span class="comment">//根据图书序号（数组下标）查询图书</span></div><div class="line">	<span class="function"><span class="keyword">private</span> <span class="keyword">static</span> String <span class="title">getBookByNumber</span><span class="params">(String[] books)</span></span></div><div class="line">			<span class="keyword">throws</span> Exception &#123;</div><div class="line">		<span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</div><div class="line">			System.out.println(<span class="string">"输入图书序号："</span>);</div><div class="line">			<span class="keyword">try</span> &#123;</div><div class="line">				<span class="comment">//获取输入的图书序号（数组下标）</span></div><div class="line">				<span class="keyword">int</span> index = inputCommand();</div><div class="line">				<span class="comment">//若返回值为-1</span></div><div class="line">				<span class="keyword">if</span>(index == -<span class="number">1</span>)&#123;</div><div class="line">					System.out.println(<span class="string">"命令输入错误！请根据提示输入数字命令！"</span>);</div><div class="line">					<span class="keyword">continue</span>;</div><div class="line">				&#125;</div><div class="line">				<span class="comment">//若不出现“数组下标越界异常”，则返回相应位置的图书</span></div><div class="line">				String book = books[index];</div><div class="line">				<span class="keyword">return</span> book;</div><div class="line">			&#125; <span class="keyword">catch</span> (ArrayIndexOutOfBoundsException e) &#123;</div><div class="line">				<span class="comment">//输入的序号不存在（引发“数组下标越界异常”），则抛出“图书不存在异常”</span></div><div class="line">				Exception bookNotExists = <span class="keyword">new</span> Exception(<span class="string">"图书不存在！"</span>);</div><div class="line">				bookNotExists.initCause(e);</div><div class="line">				<span class="keyword">throw</span> bookNotExists;</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	<span class="comment">//从控制台输入命令，用于输入命令和输入图书序号</span></div><div class="line">	<span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">inputCommand</span><span class="params">()</span></span>&#123;</div><div class="line">		<span class="keyword">int</span> command;</div><div class="line">		<span class="keyword">try</span> &#123;</div><div class="line">			command = console.nextInt();</div><div class="line">			<span class="keyword">return</span> command;</div><div class="line">		&#125; <span class="keyword">catch</span> (Exception e) &#123;</div><div class="line">			<span class="comment">//若输入字符型或者字符串，则抛出异常，捕获该异常，抛出“错误命令异常”</span></div><div class="line">			console = <span class="keyword">new</span> Scanner(System.in);</div><div class="line">			<span class="comment">//返回-1</span></div><div class="line">			<span class="keyword">return</span> -<span class="number">1</span>;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><span id="busuanzi_container_page_pv"><br>本文已被阅读 <span id="busuanzi_value_page_pv"></span> 次。感谢您的点击！</span></p>
]]></content>
      
        <categories>
            
            <category> 互联网 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Java </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[达达租车系统（Java实现）]]></title>
      <url>http://hubojing.github.io/2017/03/18/%E8%BE%BE%E8%BE%BE%E7%A7%9F%E8%BD%A6%E7%B3%BB%E7%BB%9F%EF%BC%88Java%E5%AE%9E%E7%8E%B0%EF%BC%89/</url>
      <content type="html"><![CDATA[<div align="left"><br><img src="http://img.blog.csdn.net/20170318155606137?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" width="300" height="180" style="float:right;"><br><br>java编写一个控制台版的“达达租车系统”。<br><br></div>

<a id="more"></a>
<h1 id="目标"><a href="#目标" class="headerlink" title="目标"></a>目标</h1><p>java编写一个控制台版的“达达租车系统”</p>
<h1 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h1><p>1.展示所有可租车辆<br>2.选择车型、租车量<br>3.展示租车清单，包含：总金额、总载货量及其车型、总载人量及其车型</p>
<h1 id="三大分析"><a href="#三大分析" class="headerlink" title="三大分析"></a>三大分析</h1><h2 id="数据模型分析"><a href="#数据模型分析" class="headerlink" title="数据模型分析"></a>数据模型分析</h2><p><img src="http://img.blog.csdn.net/20170318155606137?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="数据模型分析"></p>
<h2 id="业务模型分析"><a href="#业务模型分析" class="headerlink" title="业务模型分析"></a>业务模型分析</h2><p><img src="http://img.blog.csdn.net/20170318155829714?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="业务模型分析"></p>
<h2 id="显示和流程分析"><a href="#显示和流程分析" class="headerlink" title="显示和流程分析"></a>显示和流程分析</h2><p><img src="http://img.blog.csdn.net/20170318160035300?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="显示和流程分析"></p>
<h2 id="成品"><a href="#成品" class="headerlink" title="成品"></a>成品</h2><p><img src="http://img.blog.csdn.net/20170318180123743?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="租车页面"></p>
<p><img src="http://img.blog.csdn.net/20170318180319432?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="租车账单"></p>
<h1 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h1><p>　　首先定义一个Car类，它包含基本功能：车名、载客数、载货量、日租金。接着创建三个小类，分别是客车类、货车类和皮卡类（既能载客又能载货），它们都继承Car类。最后需要一个主类，用于开启整个系统，调用每个小类。</p>
<h1 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> com.jinger;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">Car</span> </span>&#123;</div><div class="line">	<span class="keyword">public</span> <span class="keyword">int</span> rent;<span class="comment">//日租金</span></div><div class="line">	<span class="keyword">public</span> <span class="keyword">int</span> people;<span class="comment">//载客人数</span></div><div class="line">	<span class="keyword">public</span> <span class="keyword">int</span> loads;<span class="comment">//载货量</span></div><div class="line">	<span class="keyword">public</span> String name;<span class="comment">//车名</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getRent</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="keyword">return</span> rent;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setRent</span><span class="params">(<span class="keyword">int</span> rent)</span></span>&#123;</div><div class="line">	<span class="keyword">this</span>.rent=rent;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getPeople</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="keyword">return</span> people;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setPeople</span><span class="params">(<span class="keyword">int</span> people)</span></span>&#123;</div><div class="line">	<span class="keyword">this</span>.people=people;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getLoads</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="keyword">return</span> loads;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setLoads</span><span class="params">(<span class="keyword">int</span> loads)</span></span>&#123;</div><div class="line">	<span class="keyword">this</span>.loads=loads;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="keyword">return</span> name;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span></span>&#123;</div><div class="line">	<span class="keyword">this</span>.name=name;</div><div class="line">&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>客车类<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> com.jinger;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PassageCar</span> <span class="keyword">extends</span> <span class="title">Car</span></span>&#123;</div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="title">PassageCar</span><span class="params">(String name,<span class="keyword">int</span> people,<span class="keyword">int</span> rent)</span></span>&#123;</div><div class="line">		<span class="keyword">this</span>.setName(name);</div><div class="line">		<span class="keyword">this</span>.setPeople(people);</div><div class="line">		<span class="keyword">this</span>.setRent(rent);</div><div class="line">		</div><div class="line">		</div><div class="line">	&#125;</div><div class="line">	</div><div class="line">	<span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span></span>&#123;</div><div class="line">		<span class="keyword">return</span> <span class="keyword">this</span>.getName()+<span class="string">"\t"</span>+<span class="keyword">this</span>.getPeople()+<span class="string">"\t\t\t\t"</span>+<span class="keyword">this</span>.getRent();</div><div class="line">				&#125;</div><div class="line">	&#125;</div></pre></td></tr></table></figure></p>
<p>卡车类<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> com.jinger;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Truck</span> <span class="keyword">extends</span> <span class="title">Car</span> </span>&#123;</div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="title">Truck</span><span class="params">(String name,<span class="keyword">int</span> loads,<span class="keyword">int</span> rent)</span></span>&#123;</div><div class="line">		<span class="keyword">this</span>.setName(name);</div><div class="line">		<span class="keyword">this</span>.setLoads(loads);</div><div class="line">		<span class="keyword">this</span>.setRent(rent);</div><div class="line">	&#125;</div><div class="line">	</div><div class="line">	<span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span></span>&#123;</div><div class="line">		<span class="keyword">return</span> <span class="keyword">this</span>.getName()+<span class="string">"\t\t\t"</span>+<span class="keyword">this</span>.getLoads()+<span class="string">"\t\t"</span>+<span class="keyword">this</span>.getRent();</div><div class="line">	&#125;</div><div class="line">	&#125;</div></pre></td></tr></table></figure></p>
<p>皮卡类<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> com.jinger;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Pickup</span> <span class="keyword">extends</span> <span class="title">Car</span> </span>&#123;</div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="title">Pickup</span><span class="params">(String name,<span class="keyword">int</span> people,<span class="keyword">int</span> loads,<span class="keyword">int</span> rent)</span></span>&#123;</div><div class="line">		<span class="keyword">this</span>.setName(name);</div><div class="line">		<span class="keyword">this</span>.setPeople(people);</div><div class="line">		<span class="keyword">this</span>.setLoads(loads);</div><div class="line">		<span class="keyword">this</span>.setRent(rent);</div><div class="line">	&#125;</div><div class="line">	</div><div class="line">	<span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span></span>&#123;</div><div class="line">		<span class="keyword">return</span> <span class="keyword">this</span>.getName()+<span class="string">"\t"</span>+<span class="keyword">this</span>.getPeople()+<span class="string">"\t\t"</span>+<span class="keyword">this</span>.getLoads()+<span class="string">"\t\t"</span>+<span class="keyword">this</span>.getRent();</div><div class="line">	&#125;</div><div class="line">	&#125;</div></pre></td></tr></table></figure></p>
<p>主类<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> com.jinger;</div><div class="line"><span class="keyword">import</span> java.util.*;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Initial</span> </span>&#123;</div><div class="line"></div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</div><div class="line">		<span class="comment">//对各类车实例化并保存到cars数组</span></div><div class="line">		Car[] cars=&#123;</div><div class="line">				<span class="keyword">new</span> PassageCar(<span class="string">"奥迪A4"</span>,<span class="number">4</span>,<span class="number">500</span>),</div><div class="line">				<span class="keyword">new</span> PassageCar(<span class="string">"马自达6"</span>,<span class="number">4</span>,<span class="number">400</span>),</div><div class="line">				<span class="keyword">new</span> Pickup(<span class="string">"皮卡雪6"</span>,<span class="number">4</span>,<span class="number">2</span>,<span class="number">450</span>),</div><div class="line">				<span class="keyword">new</span> PassageCar(<span class="string">"金龙"</span>,<span class="number">20</span>,<span class="number">800</span>),</div><div class="line">				<span class="keyword">new</span> Truck(<span class="string">"松花江"</span>,<span class="number">4</span>,<span class="number">400</span>),</div><div class="line">				<span class="keyword">new</span> Truck(<span class="string">"依维柯"</span>,<span class="number">20</span>,<span class="number">1000</span>)&#125;;</div><div class="line"></div><div class="line">		System.out.println(<span class="string">"****欢迎使用达达租车系统！****"</span>);</div><div class="line">		System.out.println(<span class="string">"****您确认租车吗？****"</span>+<span class="string">"\n"</span>+<span class="string">"是（请输入1） \t 否（请输入2）"</span>);</div><div class="line">	</div><div class="line">		Scanner in1=<span class="keyword">new</span> Scanner(System.in);</div><div class="line">		<span class="keyword">int</span> is=in1.nextInt();</div><div class="line">		<span class="keyword">if</span>(is!=<span class="number">1</span>)&#123;</div><div class="line">			System.out.println(<span class="string">"****欢迎下次光临！****"</span>);</div><div class="line">			System.exit(<span class="number">0</span>);</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">if</span>(is==<span class="number">1</span>)&#123;</div><div class="line">			System.out.println(<span class="string">"****您可租车的类型及价目表****"</span>);</div><div class="line">			System.out.println(<span class="string">"序号"</span>+<span class="string">"\t车名"</span>+<span class="string">"\t载客数（人）"</span>+<span class="string">"\t载货量（吨）"</span>+<span class="string">"\t日租金（元/天）"</span>);</div><div class="line">		</div><div class="line">			<span class="comment">//使用循环方式将各类车输出</span></div><div class="line">			<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;cars.length;i++)&#123;</div><div class="line">				System.out.println((i+<span class="number">1</span>)+<span class="string">"\t"</span>+cars[i]);</div><div class="line">			&#125;</div><div class="line">			</div><div class="line">			</div><div class="line">			</div><div class="line">			System.out.println(<span class="string">"****请输入您的租车数量：****"</span>);</div><div class="line">			<span class="keyword">int</span> num1=in1.nextInt();</div><div class="line">			Car[] rentcar=<span class="keyword">new</span> Car[num1];</div><div class="line">			<span class="keyword">int</span> price=<span class="number">0</span>;<span class="comment">//总价格</span></div><div class="line">			<span class="keyword">int</span> totalpeople=<span class="number">0</span>;<span class="comment">//总人数</span></div><div class="line">			<span class="keyword">int</span> totalloads=<span class="number">0</span>;<span class="comment">//总载货量</span></div><div class="line">			</div><div class="line">			<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;num1;i++)&#123;</div><div class="line">				System.out.println(<span class="string">"****请输入第"</span>+(i+<span class="number">1</span>)+<span class="string">"辆车的序号：****"</span>);</div><div class="line">				<span class="keyword">int</span> numx=in1.nextInt();</div><div class="line">				rentcar[i]=cars[numx-<span class="number">1</span>];</div><div class="line">				</div><div class="line">			&#125;</div><div class="line">			System.out.println(<span class="string">"****请输入天数：****"</span>);</div><div class="line">			<span class="keyword">int</span> day=in1.nextInt();</div><div class="line">			<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;num1;i++)&#123;</div><div class="line">			price=price+rentcar[i].rent *day;</div><div class="line">			&#125;</div><div class="line">			System.out.println(<span class="string">"****您的账单：****"</span>);</div><div class="line">			System.out.println(<span class="string">"已选载人车："</span>);</div><div class="line">			<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;num1;i++)&#123;</div><div class="line">				<span class="keyword">if</span>(rentcar[i].people!=<span class="number">0</span>)&#123;</div><div class="line">					System.out.println(rentcar[i].name+<span class="string">"\t"</span>);</div><div class="line">				&#125;</div><div class="line">				</div><div class="line">				totalpeople=totalpeople+rentcar[i].people;</div><div class="line">			&#125;</div><div class="line">			</div><div class="line">			System.out.println(<span class="string">'\n'</span>);</div><div class="line">			System.out.println(<span class="string">"已选载货车："</span>);</div><div class="line">			<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;num1;i++)&#123;</div><div class="line">				<span class="keyword">if</span>(rentcar[i].loads!=<span class="number">0</span>)&#123;</div><div class="line">					System.out.println(rentcar[i].name+<span class="string">"\t"</span>);</div><div class="line">				&#125;</div><div class="line">						</div><div class="line">				totalloads=totalloads+rentcar[i].loads;</div><div class="line">			&#125;</div><div class="line">		</div><div class="line">			</div><div class="line">					System.out.println(<span class="string">'\n'</span>);</div><div class="line">					System.out.println(<span class="string">"共载客："</span>+totalpeople+<span class="string">"人"</span>);</div><div class="line">					System.out.println(<span class="string">"共载货："</span>+totalloads+<span class="string">"吨"</span>);</div><div class="line">					System.out.println(<span class="string">"租车总价格："</span>+price+<span class="string">"元"</span>);</div><div class="line">					System.out.println(<span class="string">'\n'</span>);</div><div class="line">					System.out.println(<span class="string">"****感谢您的惠顾，欢迎再次光临！****"</span>);</div><div class="line">				</div><div class="line">			&#125;</div><div class="line">			&#125;</div><div class="line">	&#125;</div></pre></td></tr></table></figure></p>
<h1 id="收获"><a href="#收获" class="headerlink" title="收获"></a>收获</h1><p>思路决定编码。<br>编程要注重<code>自顶而下、逐步求精</code>的设计方法。</p>
<h1 id="源程序下载"><a href="#源程序下载" class="headerlink" title="源程序下载"></a>源程序下载</h1><p><a href="https://github.com/hubojing/Car-rental-system" target="_blank" rel="external">https://github.com/hubojing/Car-rental-system</a></p>
<p><span id="busuanzi_container_page_pv"><br>本文已被阅读 <span id="busuanzi_value_page_pv"></span> 次。感谢您的点击！</span></p>
]]></content>
      
        <categories>
            
            <category> 互联网 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Java </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[别做井底之蛙]]></title>
      <url>http://hubojing.github.io/2017/03/06/%E5%8F%8D%E7%9C%81/</url>
      <content type="html"><![CDATA[<div align="left"><br><img src="https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1488743337927&di=4273153cdba587ffa9e9dba1db8737fc&imgtype=0&src=http%3A%2F%2Fupload.admin5.com%2F2015%2F1121%2F1448071304470.jpg" width="300" height="180" style="float:right;"><br><br><br>即将毕业了，谈谈最近我关于技术的思考。<br><br><br></div>

<a id="more"></a>
<p>最近总想给自己的四年打个分。<br>给个70分吧。<br>四年来，我一直认为，自己没有辜负这四年。这四年里，自己很多方面得到了成长。但直到最近，我发现了些什么。</p>
<p>这四年来，我一直是大家眼中的优秀学生，绩点高，学生工作也做得好。我时刻提醒自己，千万不要被眼前的赞誉迷了眼。我之所以显得优秀，是因为我所处的环境还不够好。<br>这是我的技术博客，关于其他方面就不提了。尤谈技术。</p>
<p>大一大二沉浸在繁忙的学生工作中，忽略了自己是个十足的工科生，只注重课堂学习，忽视了动手实践。大二在实验室的半年，收获有，却不是很大。一方面是学校实验室的建设不完善，最重要的是实验室方向不是我所感兴趣的，再加上我当时过于急于求成，收效甚微就心烦意乱。<br>大三卸任部分学生工作，时间多了出来。突然就意识到了自己的专业被自己落下了。于是就诞生了这个技术博客，记录我所学的知识。算是对自己学技术的一点弥补。后来表示不服，自己报名了计算机比赛，最后竟意外抱得国奖回，让自己开心了一阵。我就算没在实验室了，我还是能自己干出事情来！我是有些倔。<br>再后来考研。过程不说了，和所有考研人一样平常。<br>考完后让自己彻底放松了二个月，所有和学习的事情都放下了，包括这里。这也是为什么这段时间我的github绿的很少，以及博客长久未更的原因。</p>
<p>简历看似让人羡慕，可我近来愈发觉得，自己就是一只井底之蛙。<br>没有实验室的帮助，没有老师的指导，没有志同道合的伙伴，全靠自己一个人，自己的学习时常走入歧途。不过这都不重要，重要的是我只要愿意不断学习，总会越懂越多。<br>最近我看了大神和牛人甚至是认识的同学们的学习过程，自己的努力与之相比不值一提。之前即使我总是警告自己不要感动自己，可最终还是让自己浮在了表面。</p>
<p>我是通信工程专业的学生，却常“不务正业”地倒弄计算机专业的东西（不过这是我的兴趣所在，我也从不觉得是错误，通信和计算机本是一家），有时候我在想，我的本家知识还没学通学透呢？</p>
<p>寒假放松的两个月，有个网友隔几天就问我有没有敲代码。我都说没有。他当时批评我说，女生果然不适合干技术。我回复他，你可以指责我，但我不能代表整个女性群体。后来想想，他的批评是有理的，像我那样三天打鱼、两天晒网的学习，怎么会有效果？</p>
<p>最近我常常在想，我口口声声说爱技术，还有一个做学术做科研的愿望，到底是不是发自心底的？我在还没深入了解它的时候，有什么资格说爱它？</p>
<p>感觉自己被越甩越远，但自己不想在做井底之蛙了。虽然醒悟地有些晚，但好歹是想过来了。</p>
<p>即将毕业的我，让自己重新做回一个普通的学生，耐心的学习，安心做毕设，回归一个工科学生对技术所抱有的憧憬之心。</p>
<p>先给自己定一个小目标：让github重新绿起来。欢迎各位监督。</p>
<p>写于2017年3月6日凌晨1点</p>
]]></content>
      
        <categories>
            
            <category> 杂谈 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 杂谈 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[虚拟实验平台比赛项目记录]]></title>
      <url>http://hubojing.github.io/2017/02/10/%E8%99%9A%E6%8B%9F%E5%AE%9E%E9%AA%8C%E5%B9%B3%E5%8F%B0/</url>
      <content type="html"><![CDATA[<div align="left"><br><img src="http://7xray0.com1.z0.glb.clouddn.com/hb.jpg" width="300" height="180" style="float:right;"><br><br><br>　　说话算数，许诺的上海决赛详细情况记录。<br><br><br> </div>


<a id="more"></a>
<h1 id="项目名称"><a href="#项目名称" class="headerlink" title="项目名称"></a>项目名称</h1><p>数字图像处理教学辅助虚拟实验平台</p>
<h1 id="项目平台"><a href="#项目平台" class="headerlink" title="项目平台"></a>项目平台</h1><p>matlab GUI</p>
<h1 id="项目简述"><a href="#项目简述" class="headerlink" title="项目简述"></a>项目简述</h1><p>利用matlabGUI可视化，设计一个方便数字图像处理教学的虚拟实验平台，加深学生兴趣，让学生直观了解。</p>
<h1 id="项目框架"><a href="#项目框架" class="headerlink" title="项目框架"></a>项目框架</h1><p>虚拟实验平台分为实验主窗口和手写数字识别案例。</p>
<h1 id="原理相关"><a href="#原理相关" class="headerlink" title="原理相关"></a>原理相关</h1><p>数字图像处理是通过计算机对图像进行去除噪声、增强、复原、分割、提取特征等处理的方法和技术，它是指将图像信号转换成数字信号并利用计算机对其进行处理的过程。可以用来提高图像的视感质量，提取图像中所包含的某些特征或特殊信息，对图像数据进行变换、编码和压缩，以便于图像的存储和传输。<br><strong>最近邻插值法</strong><br>最近邻插值法nearest_neighbor是最简单的灰度值插值。也称作零阶插值，就是令变换后像素的灰度值等于距它最近的输入像素的灰度值。<br><strong>双三次插值法</strong><br>双三次插值是一种更加复杂的插值方式，它能创造出比双线性插值更平滑的图像边缘。又叫双立方插值，用于在图像中“插值”（Interpolating）或增加“像素”（Pixel）数量/密度的一种方法。通常利用插值技术增加图形数据，以便在它打印或其他形式输出的时候，能够增大打印面积以及（或者）分辨率。<br>属性：通过双三次插值可以得到一个连续的插值函数，它的一阶偏导数连续，并且交叉导数处处连续。<br>公式：<br>计算系数 的过程依赖于插值数据的特性。如果已知插值函数的导数，常用的方法就是使用四个顶点的高度以及每个顶点的三个导数。一阶导数 与 表示 x 与 y 方向的表面斜率，二阶相互导数 表示同时在 x 与 y 方向的斜率。这些值可以通过分别连续对 x 与 y 向量取微分得到。对于网格单元的每个顶点，将局部坐标（0,0, 1,0, 0,1 和 1,1) 带入这些方程，再解这 16 个方程。</p>
<p><strong>图像增强</strong><br>1.直方图作用<br>直方图的观看规则就是“左黑右白”，左边代表暗部，右边代表亮部，而中间则代表中间调。<br>纵向上的高度代表像素密集程度，越高，代表的就是分布在这个亮度上的像素很多。</p>
<p>2.分为空间域和频域<br>空域分为点运算和领域去噪<br>直方图修正属于点运算，平滑和锐化属于领域去噪。<br>平滑是在添加噪声之后进行的处理<br>滤波的本义是指信号有各种频率的成分,滤掉不想要的成分,即为滤掉常说的噪声,留下想要的成分.这即是滤波的过程,也是目的。<br>图像锐化是补偿图像的轮廓，增强图像的边缘及灰度跳变的部分，使图像变得清晰，分为空域处理和频域处理两类。<br>图像平滑往往使图像中的边界、轮廓变得模糊，为了减少这类不利效果的影响，这就需要利用图像锐化技术，使图像的边缘变的清晰<br>直方图修正法<br>分为直方图均衡化和直方图规定化（直方图匹配）<br> 目的：采用直方图修整后可使图像的灰度间距拉开或使灰度分布均匀，从而增大反差，使图像细节清晰，从而增强图像。<br>直方图均衡化：通过对原图像进行某种变换使原图像的灰度直方图修正为均匀的直方图的一种方法。<br>直方图规定化：使原图像灰度直方图变成规定形状的直方图而对图像作修正的增强方法。</p>
<p><strong>频域增强</strong><br>频谱图<br>图像从圆心到外是由低频到高频的一个过程  同心圆表示在不同方向上的同一频率 而频谱有明暗表示分解成的多个正弦波由于相位的不同叠加后就形成了有大小的分别 而相位不同的正弦波又是由在不同位置的原图像的圆（也是不同位置的频率变化组成的）<br><strong>图像分割</strong><br>方法：阈值分割、区域分割、边缘分割、基于特定理论的分割<br>图像分割方法依照分割时所依据的图像特性不同，大致可以分为四大类。第一类是阈值方法，这种方法是根据图像灰度值得分布特性确定某个阈值来进行图像分割的。第二类为边缘检测方法，这类方法是通过检测出封闭某个区域的边界来进行图像分割的。通俗地讲，这类方法实际上是沿着闭合的边缘线将其包围的区域剪切出来。第三类方法是区域提取方法，这类方法的特点是根据特定区域与其他背景区域特性上的不同来进行图像分割的。另外，还有一种基于形态学的分水岭算法。<br>阈值分割：基本原理是：通过设定不同的特征阈值，把图像象素点分为若干类。<br>常用的特征包括：直接来自原始图像的灰度或彩色特征；由原始灰度或彩色值变换得到的特征。<br>设原始图像为f(x，y)，按照一定的准则f(x，y)中找到特征值T，将图像分割为两个部分，分割后的图像为：若取：b0=0(黑)，b1=1(白)，即为我们通常所说的图像二值化。<br>直方图阈值双峰法：双峰法是一种简单的阈值分割方法，即如果灰度级直方图呈现明显的双峰状，则选双峰之间的谷底所对应的灰度级作为阈值分割。<br>均匀性度量法：<br>均匀性度量法的设计思想是，假设当图像被分为目标物和背景两个类别时，属于同一类别内的像素值分布应该具有均匀性。在这里采用方差来度量像素间的均匀性。设原图像为f(x,y)，结果图像为g(x,y)。<br>类间最大方差法（Otsu法）：<br>Otsu是一种使类间方差最大的自动确定阈值的方法，该方法具有简单、处理速度快的特点，是一种常用的阈值选取方法。MATLAB中的graythresh函数求取阈值采用的就是Otsu法。<br>局部阈值法：局部阈值图像分割的原理与全局阈值分割相似，只是在使用之前的程序前，将图像分割成若干子图像进行处理，在处理后，在将各自的结果拼接起来。<br>边缘检测：最简单的边缘检测方法是边缘检测算子，它利用相邻区域的像素值不连续的性质，采用一阶或二阶导数来检测边缘点。<br>边缘检测是图像处理和计算机视觉中的基本问题，边缘检测的目的是标识数字图像中亮度变化明显的点。图像属性中的显著变化通常反映了属性的重要事件和变化。 这些包括（i）深度上的不连续、（ii）表面方向不连续、（iii）物质属性变化和（iv）场景照明变化。 边缘检测是图像处理和计算机视觉中，尤其是特征提取中的一个研究领域。<br>图像分割的意义<br>图像分割是图像分析的第一步，图像分割接下来的任务，如特征提取、目标识别等的好坏，都取决于图像分割的质量如何。<br><strong>图像变换</strong><br>Fourier变换有两个好处，即：可以获得信号的频域特性；可以将卷积运算转换为乘积运算。<br>因此二维Fourier变换的应用也是根据这两个特点来进行的。<br>在图像滤波中的应用<br>首先，我们来看Fourier变换后的图像，中间部分为低频部分，越靠外边频率越高。因此，我们可以在Fourier变换图中，选择所需要的高频或是低频滤波。<br>离散余弦变换，尤其是它的第二种类型，经常被信号处理和图像处理使用，用于对信号和图像(包括静止图像和运动图像)进行有损数据压缩。这是由于离散余弦变换具有很强的”能量集中”特性:大多数的自然信号(包括声音和图像)的能量都集中在离散余弦变换后的低频部分，而且当信号具有接近马尔科夫过程(Markov processes)的统计特性时，离散余弦变换的去相关性接近于K-L变换(Karhunen-Loève 变换–它具有最优的去相关性)的性能。<br><strong>图像的形态学</strong><br>数字图像处理中的形态学处理是指将数字形态学作为工具从图像中提取对于表达和描绘区域形状有用处的图像分量，比如边界、骨架以及凸壳，还包括用于预处理或后处理的形态学过滤、细化和修剪等。图像形态学处理中我们感兴趣的主要是二值图像。<br>在二值图像中，所有黑色像素的集合是图像完整的形态学描述，二值图像的各个分量是Z2的元素。假定二值图像A和形态学处理的结构元素B是定义在笛卡儿网格上的集合，网格中值为1的点是集合的元素，当结构元素的原点移到点(x,y)时，记为Sxy，为简单起见，结构元素为3x3，且全都为1，在这种限制下，决定输出结果的是逻辑运算。<br>膨胀和腐蚀这两种操作是形态学处理的基础，许多形态学算法都是以这两种运算为基础的。<br>开操作是先腐蚀、后膨胀处理。闭操作是先膨胀、后腐蚀处理。<br>腐蚀和膨胀，看上去好像是一对互逆的操作，实际上，这两种操作不具有互逆的关系。<br>开运算和闭运算正是依据腐蚀和膨胀的不可逆性，演变而来的。<br>先腐蚀后膨胀的过程就称为开运算。<br>闭运算是通过对腐蚀和膨胀的另一种不同次序的执行而得到的，<br>闭运算是先膨胀后腐蚀的过程，其功能是用来填充物体内细小空洞、连接邻近物体、平滑其边界，同时不明显改变不明显改变其面积。</p>
<p>#相关函数<br>有关函数的意义<br>inputdlg  输入对话框<br>创建一个输入对话框，prompt为提示字符串，title为对话框名称，num_line为显示的行数，defans为默认的数值</p>
<p>imresize  缩放<br>‘nearest’：改变图像尺寸时采用最近邻插值算法；<br>‘bilinear’：采用双线性插值算法；<br>‘bicubic’： 采用双三次插值算法</p>
<p>msgbox  创建对话框<br>imshow  显示图像<br>ndims  求一个数组维数</p>
<p>numel  计算数组中满足指定条件的元素个数<br>若是一幅图像，则numel(A)将给出它的像素数。</p>
<p>I(:,:,1)<br>:在矩阵引用里，表示所有元素。<br>比如一个二维矩阵A，A(:,1)就表示A的第一列元素。</p>
<p>flipl中提供了许多对矩阵操作的函数，可以实现矩阵的三角矩阵的提取（triu、tril）、矩阵的翻转（flipud、fliplr、Flipdim）和旋转（rot90）等各种操作。</p>
<p>size<br>size(X,1),返回矩阵X的行数；<br>size(X,2),返回矩阵X的列数；<br>N=size(X,2)，就是把矩阵X的列数赋值给N<br>size（）：获取矩阵的行数和列数<br>（1）s=size(A),<br>当只有一个输出参数时，返回一个行向量，该行向量的第一个元素时矩阵的行数，第二个元素是矩阵的列数。<br>（2）[r,c]=size(A),<br>当有两个输出参数时，size函数将矩阵的行数返回到第一个输出变量r，将矩阵的列数返回到第二个输出变量c。<br>（3）size(A,n)如果在size函数的输入参数中再添加一项n，并用1或2为n赋值，则 size将返回矩阵的行数或列数。其中r=size(A,1)该语句返回的时矩阵A的行数， c=size(A,2) 该语句返回的时矩阵A的列数。</p>
<p>imrotate  旋转<br>B = imrotate(A,angle,method,bbox)<br>将图像A（图像的数据矩阵）绕图像的中心点旋转angle度， 正数表示逆时针旋转， 负数表示顺时针旋转。返回旋转后的图像矩阵。<br>使用method参数可以改变插值算法，method参数可以为下面这三个值：<br>‘nearest’：最邻近线性插值（Nearest-neighbor interpolation）<br>‘bilinear’： 双线性插值（Bilinear interpolation）<br>‘bicubic’： 双三次插值（或叫做双立方插值）（Bicubic interpolation）<br>bbox参数用于指定输出图像属性：<br>‘crop’： 通过对旋转后的图像B进行裁剪， 保持旋转后输出图像B的尺寸和输入图像A的尺寸一样。<br>‘loose’： 使输出图像足够大， 以保证源图像旋转后超出图像尺寸范围的像素值没有丢失。 一般这种格式产生的图像的尺寸都要大于源图像的尺寸。</p>
<p>imadd       两个图像相加，或者一个图像加上一个常量<br>imsubstract 两个图像相减，或者一个图像减掉一个常量<br>immultiply     两个图像相乘，或者一个图像乘上一个常量<br>imdivide    两个图像相除，或者一个图像除以一个常量<br>imabsdiff    两个图像的差的绝对值<br>imcomplement 求一个图像的反色图<br>inlincomb    求一组图像的线性组合<br>imadjust  调节灰度图像的亮度或彩色图像的颜色矩阵</p>
<p>histeq  直方图均衡<br>bar(x,y) 其中x必须是严格递增的且一维向量x和一维向量y长度相同。以一维向量x的值为x坐标，对应的y为y坐标画直方图。</p>
<p>var函数实际上求的并不是方差，而是误差理论中“有限次测量数据的标准偏差的估计值”。</p>
<p>graythresh函数用法：使用最大类间方差法找到图片的一个合适的阈值（threshold）。在使用im2bw函数将灰度图像转换为二值图像时，需要设定一个阈值，这个函数可以帮助我们获得一个合适的阈值。利用这个阈值通常比人为设定的阈值能更好地把一张灰度图像转换为二值图像。</p>
<h1 id="手写归纳"><a href="#手写归纳" class="headerlink" title="手写归纳"></a>手写归纳</h1><p><strong>手写数字模块小结</strong><br>handwrite<br>1.exit函数，存在即返回非0值，不存在即返回0<br>2.load template pattern;    %将template文件中的pattern加载到工作环境中<br>3.pattern(1,1).num=0;         %pattern是一个数组，这里.num表示样本数量<br>4.pattern(1,1).feature=[];   %.feature表示特征值（样本）<br>5.save template pattern;  %将pattern保存在template.mat文件中<br>6.pos0=get(handles.WritingAxes,’currentpoint’);<br>%获取最近一次点击的位置，返回一个2x3的矩阵，矩阵的每行代表一个点的坐标<br>这两个点的具体含义，和坐标系的投影类型以及鼠标点击位置是否位于坐标系内有关。对于典型情况（正交投影，鼠标点击位于坐标系范围内），可以通过鼠标点击的位置，作一条垂直于屏幕的直线，则该线与坐标系的六个面必然会有两个交点（想象一下，2D坐标系的外框是一个矩形，3D坐标系外框是一个长方体），这两个交点的坐标就是上面所说的pos0，其第一行是靠近观察者的那个面上的点，而第二行是离观察者稍远的那个面上的点。<br>7.x0=pos0(1,1);  %靠近观察者那个面上点的第一个坐标（即x）<br>  y0=pos0(1,2);  %靠近观察者那个面上点的第一个坐标（即y）<br>8.line(x,y, ‘marker’, ‘.’,’markerSize’,18,   ‘LineStyle’,’-‘,’LineWidth’,2,’Color’,’black’);<br>%默认选择黑笔画线，设定点的模型大小，线的模型宽度颜色<br>9.X=x0:stepX:x;      %设定坐标参数，0.1单位<br>  Y=(y-y0)<em>(X-x0)/(x-x0)+y0;   %两点直线方程<br>11.Img=getframe(handles.WritingAxes);   %获取坐标轴内图像<br>%getframe获得的是一个架构struct类型的数据，其中cdata子域的内容才可以用imwrite内容保存，用Img.cdata表示，是截取区域的数据<br>12.imwrite(I,’当前手写数字.bmp’,’bmp’);  %将图像数据写入图像文件<br>13.data=GetFeature(I);   %对手写数字进行处理，获取特征向量<br>14.pattern(1,1).num=pattern(1,1).num+1;   %样本容量加一<br>15.pattern(1,1).feature(:,pattern(1,1).num)=data;<br>%新增样本（保存的是特征向量）放在最后<br>16.pattern(1,1).num=pattern(1,1).num-1;  %样本容量减一<br>17.pattern(1,1).feature(:,pattern(1,1).num)=[];  %删除倒数第二个<br>18.set(handles.RecognitionResult,’String’,Result); %显示识别结果<br>feature<br>1.[row,col]=find(I==0);                %返回数字的上下左右的边界<br>2.I=I(min(row):max(row),min(col):max(col));<br>%截取手写数字图像，使其紧包含数字边界，不包含多余的空白<br>3.[row,col]=size(I);           %求截取后图像的宽和高，数组的行和列<br>4.r=fix(row/5);                 %fix朝0方向取整<br>5.data=data’; %将当前手写数字的特征向量由行向量变为列向量<br>BayesTwoValue<br>1.sum = sum+pattern(1,i).num;    %样本总数求和<br>2.pw(i) = pattern(1,i).num/sum;  %每个数字的样本概率,先验概率<br>3.[maxval,maxpos] = max(pwx);  %取后验概率中最大的<br>%第一个参数是序列中的最大值 第二个参数是最大值在序列中位置<br>4.Result= maxpos-1;  %最大值即为最匹配的数字，其数值为它所处位置序号减一<br>BayesLeastError<br>1.[pc_template,pc_data]=pcapro(data);  %主成分分析<br>2.mean_data(i).data=mean(pattern(1,i).feature’)’; %求各个类型样品的平均值<br>%mean(x)表示对列向量x求平均值<br>3.h(i)=(pc_data-mean_data(i).data)’</em>s_inv(i).data<em>(pc_data-mean_data(i).data)…
        </em>(-0.5)+log(pw(i))+log(abs(s_det(i)))*(-0.5);  %判别函数<br>BayesLeastRisk<br>1.[minval minpos]=min(risk);  %取损失最小的</p>
<h1 id="答辩"><a href="#答辩" class="headerlink" title="答辩"></a>答辩</h1><p>我们准备的答辩稿（部分）：<br>思路：<br>    为更好的协助老师的教学，充实课堂内容，从而设计的辅助教学实验软件，并拓展手写数字识别系统，用来丰富课堂知识。<br>首先我们选择matlab软件来设计虚拟实验平台，因为大部分工科院校都或多或少 接触过matlab，上手容易。然后由于MatlabGUI强大的可视化界面，让我们决定实现它。一开始我们只设计了手写数字识别，但感觉过于单一，且只涉及到数字图像处理中数字识别模式识别这一块，不够全面，而且学生初学时是从最基本的操作学起，因此，我们根据学习顺序，补充了每一章节的基本实验，使我们的平台更加完善。</p>
<p>遇到的困难：<br>    主要就是程序的问题，这是一个很需要耐心细心的模块，经常会遇到各种奇怪的问题，比如某个功能失效，界面无响应这些，其次就是生成的可执行文件不能很好的适应所有电脑，拓展模块里的手写也可能因为样本的不足出现错误，所以样本的填充也很复杂很需要时间。</p>
<p>作品的优点和缺点：<br>   优点：操作相对简单，界面比较整洁，知识覆盖面广<br>   缺点：可执行文件适应性不够强，部分功能有延迟，没有更详细的解释相关操作的意义，可能还需要一个使用说明的嵌入模块，手写数字模块样本容量不够大。<br>运用技术：<br>    软件的设计基本上全部由matlab/GUI 完成，并使用其特定的命令生成可执行文件，编程时运用了各种简单或复杂的算法，如缩小放大的最近邻插值法，双三次插值法，图像增强里的直方图均衡化、阈值分割的直方图双峰法、均匀性度量法、otsu法、局部阈值法等等。这对于我们两个没有系统学习过这门课的人来说，还是很具有挑战性。<br>贝叶斯决策的原理。<br>   贝叶斯决策理论方法是统计模型决策中的一个基本方法，其基本思想是：<br>   已知类条件概率密度参数表达式和先验概率。<br>   利用贝叶斯公式转换成后验概率。<br>   根据后验概率大小进行决策分类。<br>这个手写识别案例的用处：<br>    是对这门课程的一个拓展，通过对写入的图像灰度化，裁剪，提取特征参数，与贝叶斯决策结合，进行概率分析，匹配，显示最符合的数字，算是部分操作的小应用，同时也涉及到数字图像处理较难的部分：模式识别一块；同时可以用来延伸出车牌识别或人脸识别等更高级的应用系统。  </p>
<p>现场老师问了几个问题，回忆了下，有问和PS的区别和项目的意义。</p>
<h1 id="项目获奖"><a href="#项目获奖" class="headerlink" title="项目获奖"></a>项目获奖</h1><pre><code>第九届中国计算机设计大赛国家三等奖、中南赛区二等奖
</code></pre><p>P.S.配图为我设计的作品海报。</p>
<p><span id="busuanzi_container_page_pv"><br>本文已被阅读 <span id="busuanzi_value_page_pv"></span> 次。感谢您的点击！<br>The article has been viewed <span id="busuanzi_value_page_pv"></span> times.Thank you for your visit!<br></span></p>
]]></content>
      
        <categories>
            
            <category> 通信工程 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> matlab </tag>
            
            <tag> 竞赛 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[yelee --> hueman主题更换]]></title>
      <url>http://hubojing.github.io/2017/01/03/hueman%E4%B8%BB%E9%A2%98%E6%9B%B4%E6%8D%A2/</url>
      <content type="html"><![CDATA[<p><div align="left"><br><img src="http://7xray0.com1.z0.glb.clouddn.com/17-1-3/18721350-file_1483437231403_721.png" width="300" height="180" style="float:right;"></div></p>
<p>我又双叒叕把博客玩崩了……<br>淡定——
　
　
　</p>
<p> <br><a id="more"></a><br>　　前两天调双语博客页面失败，顺带着把yelee主题玩垮了。[拆毁天才girl NO.1]<br>　　MoXFIVE也很久没有更新yelee的文档了，索性我就换了个主题。现在的主题是hueman。<br>　　换个主题就仿佛整个人都整容了一样→_→什么都要变！<br>　　改config，调样式，换logo，整个人都不好了！<br>　　hueman很漂亮，优点突出，但对比yelee，也有一些缺点，例如：没有网站计数，没有文章目录等。<br>　　把折腾几个小时的成果记录一下，方便以后接着折腾[手动滑稽]。</p>
<h1 id="主题文档"><a href="#主题文档" class="headerlink" title="主题文档"></a>主题文档</h1><p><a href="https://github.com/ppoffice/hexo-theme-hueman/wiki" target="_blank" rel="external">https://github.com/ppoffice/hexo-theme-hueman/wiki</a></p>
<h1 id="更改背景"><a href="#更改背景" class="headerlink" title="更改背景"></a>更改背景</h1><p>hueman\source\css_partial\header.styl<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">-background: color-header-background</div><div class="line">+ background-image: url(<span class="string">"地址"</span>)</div></pre></td></tr></table></figure></p>
<p>记得把footer里的背景也给改了，对称美！</p>
<h1 id="更换logo"><a href="#更换logo" class="headerlink" title="更换logo"></a>更换logo</h1><p>hueman\source\css\images<br>把logo-header.png更换为自己的logo。<br>我在网上随便在线生成了个艺术字就贴上来了……</p>
<p>#加入网站计数<br>\themes\hueman\layout\common\footer.ejs<br>和yelee一样，交给不蒜子[<a href="http://ibruce.info/2015/04/04/busuanzi/" target="_blank" rel="external">http://ibruce.info/2015/04/04/busuanzi/</a>] 。</p>
<h2 id="安装脚本"><a href="#安装脚本" class="headerlink" title="安装脚本"></a>安装脚本</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">&lt;script async src=<span class="string">"//dn-lbstatics.qbox.me/busuanzi/2.3/busuanzi.pure.mini.js"</span>&gt;</div><div class="line">&lt;/script&gt;</div></pre></td></tr></table></figure>
<h2 id="安装标签"><a href="#安装标签" class="headerlink" title="安装标签"></a>安装标签</h2><p>1.显示站点总访问量<br>要显示站点总访问量，复制以下代码添加到你需要显示的位置。有两种算法可选：<br>算法a：pv的方式，单个用户连续点击n篇文章，记录n次访问量。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&lt;span id=<span class="string">"busuanzi_container_site_pv"</span>&gt;</div><div class="line">    本站总访问量&lt;span id=<span class="string">"busuanzi_value_site_pv"</span>&gt;&lt;/span&gt;次</div><div class="line">&lt;/span&gt;</div></pre></td></tr></table></figure></p>
<p>算法b：uv的方式，单个用户连续点击n篇文章，只记录1次访客数。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&lt;span id=<span class="string">"busuanzi_container_site_uv"</span>&gt;</div><div class="line">  本站访客数&lt;span id=<span class="string">"busuanzi_value_site_uv"</span>&gt;&lt;/span&gt;人次</div><div class="line">&lt;/span&gt;</div></pre></td></tr></table></figure></p>
<p>2.显示单页面访问量<br>要显示每篇文章的访问量，复制以下代码添加到你需要显示的位置。<br>算法：pv的方式，单个用户点击1篇文章，本篇文章记录1次阅读量。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&lt;span id=<span class="string">"busuanzi_container_page_pv"</span>&gt;</div><div class="line">  本文总阅读量&lt;span id=<span class="string">"busuanzi_value_page_pv"</span>&gt;&lt;/span&gt;次</div><div class="line">&lt;/span&gt;</div></pre></td></tr></table></figure></p>
<p>　　后续待解决（欢迎各位大神们给建议）：<br>　　1.文章目录问题（不知道在哪里改，toc怎么调用，&lt;%- toc(str, [options]) %&gt;需点拨）<br>　　2.博客内搜索问题（insight插件总是安装失败，估计是node版本问题，可是有点不敢动node，害怕博客又崩了(瑟瑟发抖.jpg)）<br>　　3.分类顺序问题（应该是互联网、通信工程、杂谈，不知道为什么成了互联网、杂谈、通信工程）<br>    4.文章浏览量丢失（蓝瘦香菇…）<br>　　5.双语页面问题（就是不！死！心！）<br>　　6.微言板块（类似空间的说说，每条下面可以评论，未来会把自己的问题放在这里，等待高手解答）<br>　　……</p>
<p><span id="busuanzi_container_page_pv"><br>本文已被阅读 <span id="busuanzi_value_page_pv"></span> 次。感谢您的点击！</span></p>
]]></content>
      
        <categories>
            
            <category> 互联网 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> blog </tag>
            
            <tag> hexo </tag>
            
            <tag> 主题 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[一天一点linux]]></title>
      <url>http://hubojing.github.io/2016/12/26/linux%E6%95%B4%E7%90%86%E7%AC%94%E8%AE%B0/</url>
      <content type="html"><![CDATA[<p><div align="left"><br><img src="http://img.mukewang.com/55ece9d70001fb7f06000375.jpg" width="300" height="180" style="float:right;"><br>从头学linux，为后续学习打基础。<br>笔记整理，一天一点linux。</div></p>
<p>　　<br> <br><a id="more"></a></p>
<h1 id="基本概念及操作"><a href="#基本概念及操作" class="headerlink" title="基本概念及操作"></a>基本概念及操作</h1><h2 id="linux-桌面环境介绍"><a href="#Linux-桌面环境介绍" class="headerlink" title="Linux 桌面环境介绍"></a>Linux 桌面环境介绍</h2><p>相对于现在的 Windows 系统，UNIX/Linux 本身是没有图形界面的，我们通常在 Unix/Linux 发行版上看到的图形界面实际都只是运行在 Linux 系统之上的一套软件，类似 Windows95 之前的Windows 的图形界面实则也只是运行在 DOS 环境的一套软件。而 Linux 上的这套软件以前是XFree86，现在则是 xorg（X.Org），而这套软件又是通过 X 窗口系统（X Window System，也常被称为X11或X）实现的，X 本身只是工具包及架构协议，而 xorg 便是 X 架构规范的一个实现体，也就是说它是实现了 X 协议规范的一个提供图形用户界面服务的服务器，就像实现了 http 协议提供 web 服务的 Apache。如果只有服务器也是不能实现一个完整的桌面环境的，当然还需要一个客户端，我们称为 X Client，像如下几个大家熟知也最流行的实现了客户端功能的桌面环境KDE，GNOME，XFCE，LXDE。这也意味着在 Linux 上你可以自己选择安装不同的桌面环境，甚至可以定制自己的专属桌面。</p>
<h2 id="linux终端"><a href="#Linux终端" class="headerlink" title="Linux终端"></a>Linux终端</h2><h3 id="terminal终端"><a href="#Terminal（终端）" class="headerlink" title="Terminal（终端）"></a>Terminal（终端）</h3><p>通常在我们使用 Linux 时，我们并不是直接与系统打交道，而是通过一个叫做 Shell 的中间程序来完成的，在图形界面下为了实现让我们在一个窗口中完成接受用户输入和显示输出，Linux 系统还提供了一个叫做终端模拟器的程序（Terminal），下面几个比较常见的终端模拟器，例如 gnome-terminal，kconsole，xterm，rxvt，kvt，nxterm 和 eterm。<br>终端本质上是对应着 Linux 上的 /dev/tty 设备，Linux 的多用户登陆就是通过不同的 /dev/tty 设备完成的，Linux 默认提供了 6 个纯命令行界面的 “terminal”（准确的说这里应该是 6 个 virtual consoles）来让用户登录，在物理机系统上你可以通过使用[Ctrl]+[Alt]+[F1]～[F6]进行切换，不过在我们的在线实验环境中可能无法切换，因为特殊功能按键会被你主机系统劫持。当你切换到其中一个终端后想要切换回图形界面，你可以按下[Ctrl]+[Alt]+[F7]来完成。</p>
<h3 id="shell"><a href="#Shell" class="headerlink" title="Shell"></a>Shell</h3><p>通常在图形界面中对实际体验带来差异的不是上述的不同发行版的各种终端模拟器，而大都是这个 Shell（壳），有壳就有核，这里的核就是指的 UNIX/Linux 内核，Shell 是指“提供给使用者使用界面”的软件（命令解析器），类似于 DOS 下的 command（命令行）和后来的 cmd.exe。普通意义上的 Shell 就是可以接受用户输入命令的程序。它之所以被称作 Shell 是因为它隐藏了操作系统底层的细节。同样的 Unix/Linux 下的图形用户界面 GNOME 和 KDE，有时也被叫做“虚拟 shell”或“图形 shell”。</p>
<p>Unix/Linux 操作系统下的 Shell 既是用户交互的界面，也是控制系统的脚本语言。当然在这点也有别于 Windows 下的命令行，虽然也提供了很简单的控制语句。在Windows 操作系统下，可能有些用户从来都不会直接的使用 Shell，然而在 UNIX 系列操作系统下，Shell 仍然是控制系统启动、X11 启动和很多其他实用工具的脚本解释程序。</p>
<p>在 UNIX/Linux 中比较流行的常见的 Shell 有 bash，zsh，ksh，csh 等等，Ubuntu 终端默认使用的是 bash，默认的桌面环境是 GNOME 或者 Unity（基于 GNOME）。</p>
<h2 id="命令行操作"><a href="#命令行操作" class="headerlink" title="命令行操作"></a>命令行操作</h2><h3 id="重要快捷键"><a href="#重要快捷键" class="headerlink" title="重要快捷键"></a>重要快捷键</h3><p>Tab 补全命令、目录、参数<br>Ctrl+c 强行终止当前程序（不会使终端退出）<br>Ctrl+d  键盘输入结束或退出终端<br>Ctrl+s  暂停当前程序，暂停后按下任意键恢复运行<br>Ctrl+z  将当前程序放到后台运行，恢复到前台为命令fg<br>Ctrl+a  将光标移至输入行头，相当于Home键<br>Ctrl+e  将光标移至输入行末，相当于End键<br>Ctrl+k  删除从光标所在位置到行末<br>Alt+Backspace   向前删除一个单词<br>Shift+PgUp  将终端显示向上滚动<br>Shift+PgDn  将终端显示向下滚动</p>
<h3 id="历史输入命令-方向键-上"><a href="#历史输入命令：-方向键-上" class="headerlink" title="历史输入命令：  方向键 上"></a>历史输入命令：  方向键 上</h3><p>通配符：星号（*）和问号（?），用来对对字符串进行模糊匹配（比如文件名，参数名）。当查找文件夹时，可以使用它来代替一个或多个真正字符；当不知道真正字符或者懒得输入完整名字时，常常使用通配符代替一个或多个真正的字符。</p>
<h3 id="一次性创建多个文件"><a href="#一次性创建多个文件" class="headerlink" title="一次性创建多个文件"></a>一次性创建多个文件</h3><p>在创建文件的时候，如果需要一次性创建多个文件，比如：“love_1_linux.txt，love_2_linux.txt，… love_10_linux.txt”。在 Linux 中十分方便：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ touch love_&#123;1..10&#125;_linux.txt</div></pre></td></tr></table></figure></p>
<h3 id="shell-常用通配符"><a href="#Shell-常用通配符" class="headerlink" title="Shell 常用通配符"></a>Shell 常用通配符</h3><p>字符  含义</p>
<ul>
<li>匹配 0 或多个字符<br>?   匹配任意一个字符<br>[list]  匹配 list 中的任意单一字符<br>[!list]     匹配 除list 中的任意单一字符以外的字符<br>[c1-c2]     匹配 c1-c2 中的任意单一字符 如：[0-9] [a-z]<br>{string1,string2,…}   匹配 sring1 或 string2 (或更多)其一字符串<br>{c1..c2}    匹配 c1-c2 中全部字符 如{1..10}</li>
</ul>
<h3 id="在命令行中获取帮助"><a href="#在命令行中获取帮助" class="headerlink" title="在命令行中获取帮助"></a>在命令行中获取帮助</h3><p>man 命令<br>Manual pages 是在 UNIX 或类 UNIX 操作系统在线软件文档的一种普遍的形式。 内容包括计算机程序（包括库和系统调用），正式的标准和惯例，甚至是抽象的概念。用户可以通过执行 man 命令调用手册页。</p>
<p>你可以使用如下方式来获得某个命令的说明和使用方式的详细介绍：</p>
<p>$ man <command_name></command_name></p>
<p>比如你想查看 man 命令本身的使用方式，你可以输入：</p>
<p>man man</p>
<p>通常情况下，man 手册里面的内容都是英文的，这就要求你有一定的英文基础。man 手册的内容很多，涉及了 Linux 使用过程中的方方面面，为了便于查找，是做了分册（分区段）处理的，在Research UNIX、BSD、OS X 和 Linux 中，手册通常被分为8个区段，安排如下：<br>区段  说明<br>1   一般命令<br>2   系统调用<br>3   库函数，涵盖了C标准函数库<br>4   特殊文件（通常是/dev中的设备）和驱动程序<br>5   文件格式和约定<br>6   游戏和屏保<br>7   杂项<br>8   系统管理命令和守护进程</p>
<p>要查看相应区段的内容，就在 man 后面加上相应区段的数字即可，如：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ man 1 ls</div></pre></td></tr></table></figure></p>
<p>会显示第一区段中的ls命令man页面。</p>
<p>所有的手册页遵循一个常见的布局，其为通过简单的 ASCII 文本展示而优化，而这种情况下可能没有任何形式的高亮或字体控制。一般包括以下部分内容：</p>
<p>NAME（名称）</p>
<pre><code>该命令或函数的名称，接着是一行简介。
</code></pre><p>SYNOPSIS（概要）</p>
<pre><code>对于命令，正式的描述它如何运行，以及需要什么样的命令行参数。对于函数，介绍函数所需的参数，以及哪个头文件包含该函数的定义。
</code></pre><p>DESCRIPTION（说明）</p>
<pre><code>命令或函数功能的文本描述。
</code></pre><p>EXAMPLES（示例）</p>
<pre><code>常用的一些示例。
</code></pre><p>SEE ALSO（参见）</p>
<pre><code>相关命令或函数的列表。
</code></pre><p>也可能存在其他部分内容，但这些部分没有得到跨手册页的标准化。常见的例子包括：OPTIONS（选项），EXIT STATUS（退出状态），ENVIRONMENT（环境），BUGS（程序漏洞），FILES（文件），AUTHOR（作者），REPORTING BUGS（已知漏洞），HISTORY（历史）和COPYRIGHT（版权）。</p>
<p>通常 man 手册中的内容很多，不容易找到想要的结果，可以在 man 中使用搜索，/&lt;要搜索的关键字&gt;，查找到后使用n键切换到下一个关键字所在处，shift+n为上一个关键字所在处。使用Space(空格键)翻页，Enter(回车键)向下滚动一行，或者使用j,k（vim编辑器的移动键）进行向前向后滚动一行。按下h键为显示使用帮助(因为man使用less作为阅读器，实为less工具的帮助)，按下q退出。</p>
<p>想要获得更详细的帮助，使用info命令，不过通常使用man足够。如果知道某个命令的作用，只是想快速查看一些它的某个具体参数的作用，使用–help参数，大部分命令都会带有这个参数，如：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ ls --help</div></pre></td></tr></table></figure></p>
<h1 id="用户及文件权限管理"><a href="#用户及文件权限管理" class="headerlink" title="用户及文件权限管理"></a>用户及文件权限管理</h1><h2 id="linux-用户管理"><a href="#Linux-用户管理" class="headerlink" title="Linux 用户管理"></a>Linux 用户管理</h2><p>Linux 是一个可以实现多用户登陆的操作系统。</p>
<h3 id="查看用户"><a href="#查看用户" class="headerlink" title="查看用户"></a>查看用户</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">$ who am i</div><div class="line"></div><div class="line">或者</div><div class="line"></div><div class="line">$ who mom likes</div></pre></td></tr></table></figure>
<h3 id="who-命令其它常用参数"><a href="#who-命令其它常用参数" class="headerlink" title="who 命令其它常用参数"></a>who 命令其它常用参数</h3><p>参数  说明<br>-a  打印能打印的全部<br>-d  打印死掉的进程<br>-m  同am i,mom likes<br>-q  打印当前登录用户数及用户名<br>-u  打印当前登录用户登录信息<br>-r  打印运行等级</p>
<h3 id="创建用户"><a href="#创建用户" class="headerlink" title="创建用户"></a>创建用户</h3><p>在 Linux 系统里， root 账户拥有整个系统至高无上的权利，比如 新建/添加 用户。<br>su，su- 与 sudo</p>
<p>su <user>可以切换到用户user，执行时需要输入目标用户的密码，sudo <cmd>可以以特权级别运行cmd命令，需要当前用户属于sudo组，且需要输入当前用户密码。su - <user>命令也是切换用户，同时环境变量也会跟着改变成目标用户的环境变量。</user></cmd></user></p>
<p>新建一个叫 lilei 的用户：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ sudo adduser lilei</div></pre></td></tr></table></figure></p>
<p>这个命令不但可以添加用户到系统，同时也会默认为新用户创建 home 目录：</p>
<p>$ ls /home</p>
<p>现在你已经创建好一个用户，并且你可以使用你创建的用户登录了，使用如下命令切换登录用户：</p>
<p>$ su -l lilei</p>
<p>输入刚刚设置的 lilei 的密码。退出当前用户跟退出终端一样可以使用 exit 命令或者使用快捷键 Ctrl+d。</p>
<h2 id="用户组"><a href="#用户组" class="headerlink" title="用户组"></a>用户组</h2><p>每个用户都有一个归属（用户组），用户组简单地理解就是一组用户的集合，它们共享一些资源和权限，同时拥有私有资源，就跟家的形式差不多，你的兄弟姐妹（不同的用户）属于同一个家（用户组），你们可以共同拥有这个家（共享资源），爸妈对待你们都一样（共享权限），你偶尔写写日记，其他人未经允许不能查看（私有资源和权限）。当然一个用户是可以属于多个用户组的，正如你既属于家庭，又属于学校或公司。</p>
<h4 id="知道自己属于哪些用户组的方法"><a href="#知道自己属于哪些用户组的方法" class="headerlink" title="知道自己属于哪些用户组的方法"></a>知道自己属于哪些用户组的方法</h4><p>方法一：使用groups命令<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ groups nancy</div></pre></td></tr></table></figure></p>
<p>每次新建用户如果不指定用户组的话，默认会自动创建一个与用户名相同的用户组（差不多就相当于家长的意思，或者说是老总）。默认情况下在sudo用户组里的可以使用sudo命令获得root权限。</p>
<p>方法二：查看/etc/group文件<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ cat /etc/group | sort</div></pre></td></tr></table></figure></p>
<p>cat 命令用于读取指定文件的内容并打印到终端输出。| sort 表示将读取的文本进行一个字典排序再输出。使用命令过滤掉一些你不想看到的结果：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ cat /etc/group | grep -E <span class="string">"nancy"</span></div></pre></td></tr></table></figure></p>
<p>etc/group 文件格式说明</p>
<p>/etc/group 的内容包括用户组（Group）、用户组口令、GID 及该用户组所包含的用户（User），每个用户组一条记录。格式如下：</p>
<pre><code>group_name:password:GID:user_list
</code></pre><p>你看到上面的 password 字段为一个 ‘x’ 并不是说密码就是它，只是表示密码不可见而已。</p>
<p><strong>将其它用户加入 sudo 用户组</strong></p>
<p>默认情况下新创建的用户是不具有 root 权限的，也不在 sudo 用户组，可以让其加入sudo用户组从而获取 root 权限。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ su <span class="_">-l</span> lilei</div><div class="line">$ sudo ls</div></pre></td></tr></table></figure></p>
<p>使用 usermod 命令可以为用户添加用户组，同样使用该命令你必需有 root 权限，你可以直接使用 root 用户为其它用户添加用户组，或者用其它已经在 sudo 用户组的用户使用 sudo 命令获取权限来执行该命令。</p>
<p>用 nancy 用户执行 sudo 命令将 lilei 添加到 sudo 用户组，让它也可以使用 sudo 命令获得 root 权限</p>
<p>$ su nancy # 此处需要输入nancy用户密码，可以点击右侧工具栏中的“SSH直连”查看<br>$ groups lilei<br>$ sudo usermod -G sudo lilei<br>$ groups lilei</p>
<p>然后你再切换回 lilei 用户，现在就可以使用 sudo 获取 root 权限了。</p>
<h3 id="删除用户"><a href="#删除用户" class="headerlink" title="删除用户"></a>删除用户</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ sudo deluser lilei --remove-home</div></pre></td></tr></table></figure>
<h2 id="linux-文件权限"><a href="#Linux-文件权限" class="headerlink" title="Linux 文件权限"></a>Linux 文件权限</h2><h3 id="查看文件权限"><a href="#查看文件权限" class="headerlink" title="查看文件权限"></a>查看文件权限</h3><p>使用较长格式列出文件：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ ls <span class="_">-l</span></div></pre></td></tr></table></figure></p>
<p>Linux 里面一切皆文件。</p>
<p>ls 命令的一些其它常用的用法：</p>
<pre><code>显示除了 &apos;.&apos;(当前目录)，&apos;..&apos; 上一级目录之外的所有包含隐藏文件（Linux 下以 &apos;.&apos; 开头的文件为隐藏文件）
</code></pre><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ ls -A</div></pre></td></tr></table></figure>
<p>可以同时使用 ‘-A’ 和 ‘-l’ 参数：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ ls -Al</div></pre></td></tr></table></figure></p>
<p>查看某一个目录的完整属性，而不是显示目录里面的文件属性：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ ls -dl &lt;目录名&gt;</div></pre></td></tr></table></figure></p>
<pre><code>显示所有文件大小，并以普通人类能看懂的方式呈现：
</code></pre><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ ls -AsSh</div></pre></td></tr></table></figure>
<p>其中小 s 为显示文件大小，大 S 为按文件大小排序，若需要知道如何按其它方式排序，使用“man”命令查询。</p>
<h3 id="变更文件所有者"><a href="#变更文件所有者" class="headerlink" title="变更文件所有者"></a>变更文件所有者</h3><p>假设目前是 lilei 用户登录，新建一个文件，命名为 “iphone6”：</p>
<p>$ touch iphone6</p>
<p>可见文件所有者是 lilei 。<br>现在，换回到nancy用户身份，使用以下命令变更文件所有者为 nancy ：</p>
<p>$ cd /home/lilei<br>$ ls iphone6<br>$ sudo chown nancy iphone6<br>$ cp iphone6 /home/nancy</p>
<p>现在查看，发现 文件所有者成功修改为 nancy 。</p>
<h3 id="修改文件权限"><a href="#修改文件权限" class="headerlink" title="修改文件权限"></a>修改文件权限</h3><p>方式一：二进制数字表示<br>每个文件的三组权限（拥有者，所属用户组，其他用户,记住这个顺序是一定的）就对应这一个 “rwx”，也就是一个 ‘7’。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ <span class="built_in">echo</span> <span class="string">"echo \"hello nancy\""</span> &gt; iphone6</div></pre></td></tr></table></figure></p>
<p>然后修改权限：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ chmod 700 iphone6</div></pre></td></tr></table></figure></p>
<p>现在，其他用户已经不能读这个“iphone6”文件了</p>
<p>方式二：加减赋值操作<br>完成上述相同的效果：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ chmod go-rw iphone6</div></pre></td></tr></table></figure></p>
<p>‘g’’o’还有’u’，分别表示group，others，user，’+’，’-‘ 就分别表示增加和去掉相应的权限。</p>
<h1 id="linux-目录结构及文件基本操作"><a href="#Linux-目录结构及文件基本操作" class="headerlink" title="Linux 目录结构及文件基本操作"></a>Linux 目录结构及文件基本操作</h1><h2 id="linux-目录结构"><a href="#Linux-目录结构" class="headerlink" title="Linux 目录结构"></a>Linux 目录结构</h2><p> Linux 是以树形目录结构的形式来构建整个系统的，可以理解为一个用户可操作系统的骨架。虽然本质上无论是目录结构还是操作系统内核都是存储在磁盘上的，但从逻辑上来说 Linux 的磁盘是“挂在”（挂载在）目录上的，每一个目录不仅能使用本地磁盘分区的文件系统，也可以使用网络上的文件系统。举例来说，可以利用网络文件系统（Network File System，NFS）服务器载入某特定目录等。</p>
<h3 id="fhs-标准"><a href="#FHS-标准" class="headerlink" title="FHS 标准"></a>FHS 标准</h3><p>FHS 定义了两层规范，第一层是， / 下面的各个目录应该要放什么文件数据，例如 /etc 应该要放置设置文件，/bin 与 /sbin 则应该要放置可执行文件等等。</p>
<p>第二层则是针对 /usr 及 /var 这两个目录的子目录来定义。例如 /var/log 放置系统登录文件、/usr/share 放置共享数据等等。</p>
<h3 id="目录路径"><a href="#目录路径" class="headerlink" title="目录路径"></a>目录路径</h3><p>cd 切换目录， . 表示当前目录，.. 表示上一级目录（以 . 开头的文件都是隐藏文件，所以这两个目录必然也是隐藏的， ls -a 命令查看隐藏文件）, - 表示上一次所在目录，～ 通常表示当前用户的”home”目录。使用 pwd 命令可以获取当前所在路径（绝对路径）。</p>
<p>进入上一级目录：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ <span class="built_in">cd</span> ..</div></pre></td></tr></table></figure></p>
<p>进入你的“home”目录：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ <span class="built_in">cd</span> ~ </div><div class="line"><span class="comment"># 或者 cd /home/&lt;你的用户名&gt;</span></div></pre></td></tr></table></figure></p>
<p>使用 pwd 获取当前路径：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ <span class="built_in">pwd</span></div></pre></td></tr></table></figure></p>
<p><strong>绝对路径</strong><br>以根”/“目录为起点的完整路径，以你所要到的目录为终点，表现形式如： /usr/local/bin，表示根目录下的 usr 目录中的 local 目录中的 bin 目录。</p>
<p><strong>相对路径</strong><br>相对于当前的目录的路径，相对路径是以当前目录 . 为起点，以所要到的目录为终点，表现形式如： usr/local/bin （这里假设当前目录为根目录）。表示相对路径实际并没有加上表示当前目录的那个 . ，而是直接以目录名开头，因为这个 usr 目录为 / 目录下的子目录，是可以省略 . 的（也有类似不能省略的情况）；如果是当前目录的上一级目录，则需要使用 .. ，比如当前目录为“home”目录，根目录就应该表示为 ../../ ,表示上一级目录（”home”目录）的上一级目录（”/“目录）。</p>
<p>以”home”目录为起点，分别以绝对路径和相对路径的方式进入 /usr/local/bin 目录：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 绝对路径</span></div><div class="line">$ <span class="built_in">cd</span> /usr/<span class="built_in">local</span>/bin</div><div class="line"><span class="comment"># 相对路径</span></div><div class="line">$ <span class="built_in">cd</span> ../../usr/<span class="built_in">local</span>/bin</div></pre></td></tr></table></figure></p>
<p><strong>在进行目录切换的过程中请多使用 Tab 键自动补全，可避免输入错误，连续按两次Tab可以显示全部候选结果。</strong></p>
<h2 id="linux-文件的基本操作"><a href="#Linux-文件的基本操作" class="headerlink" title="Linux 文件的基本操作"></a>Linux 文件的基本操作</h2><h3 id="新建"><a href="#新建" class="headerlink" title="新建"></a>新建</h3><p><strong>新建空白文件</strong><br>使用 touch 命令创建空白文件，关于 touch 命令，其主要是来更改已有文件的时间戳的（比如，最近访问时间，最近修改时间），但其在不加任何参数的情况下，只指定一个文件名，则可以创建一个为指定文件名的空白文件（不会覆盖已有同名文件），当然你也可以同时指定该文件的时间戳。<br>创建名为 test 的空白文件，因为在其他目录没有权限，所以需要先 cd ~ 切换回用户的 /home/nancy 目录：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ <span class="built_in">cd</span> ~</div><div class="line">$ touch <span class="built_in">test</span></div></pre></td></tr></table></figure></p>
<p><strong>新建目录</strong><br>使用 mkdir（make directories）命令可以创建一个空目录,也可同时指定创建目录的权限属性</p>
<p>创建名为”mydir”的空目录：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ mkdir mydir</div></pre></td></tr></table></figure></p>
<p>使用 -p 参数，同时创建父目录（如果不存在该父目录），如下同时创建一个多级目录（这在有时候安装软件，配置安装路径时非常有用）：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ mkdir -p father/son/grandson</div></pre></td></tr></table></figure></p>
<p>后面的目录路径，以绝对路径的方式表示也是可以的。</p>
<h3 id="复制"><a href="#复制" class="headerlink" title="复制"></a>复制</h3><p>使用cp（copy）命令复制一个文件或目录到指定目录。将之前创建的”test”文件复制到”/home/nancy/father/son/grandson”目录中：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ cp <span class="built_in">test</span> father/son/grandson</div></pre></td></tr></table></figure></p>
<p><strong>复制目录</strong><br>要成功复制目录需要加上-r或者-R参数，表示递归复制，就是说有点“株连九族”的意思：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ cp -r father family</div></pre></td></tr></table></figure></p>
<h3 id="删除"><a href="#删除" class="headerlink" title="删除"></a>删除</h3><p><strong>删除文件</strong><br>使用rm（remove files or directories）命令，删除一个文件或目录：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ rm <span class="built_in">test</span></div></pre></td></tr></table></figure></p>
<p>有时候你会遇到想要删除一些为只读权限的文件，直接使用rm删除会显示一个提示,你如果想忽略这提示，直接删除文件，可以使用-f参数强制删除：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ rm <span class="_">-f</span> <span class="built_in">test</span></div></pre></td></tr></table></figure></p>
<p><strong>删除目录</strong><br>跟复制目录一样，要删除一个目录，也需要加上-r或-R参数：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ rm -r family</div></pre></td></tr></table></figure></p>
<h3 id="移动文件与文件重命名"><a href="#移动文件与文件重命名" class="headerlink" title="移动文件与文件重命名"></a>移动文件与文件重命名</h3><p><strong>移动文件</strong><br>使用mv(move or rename files)命令，移动文件（剪切）。将文件”file1”移动到”Documents”目录mv 源目录文件 目的目录：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ mkdir Documents</div><div class="line">$ mv file1 Documents</div></pre></td></tr></table></figure></p>
<p><strong>重命名文件</strong><br>将文件”file1”重命名为”myfile” mv 旧的文件名 新的文件名：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ mv file1 myfile</div></pre></td></tr></table></figure></p>
<p><strong>批量重命名</strong><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 使用通配符批量创建 5 个文件</span></div><div class="line">$ touch file&#123;1..5&#125;.txt</div><div class="line"></div><div class="line"><span class="comment"># 批量将这 5 个后缀为 .txt 的文本文件重命名为以 .c 为后缀的文件</span></div><div class="line">$ rename <span class="string">'s/\.txt/\.c/'</span> *.txt</div><div class="line"></div><div class="line"><span class="comment"># 批量将这 5 个文件，文件名改为大写</span></div><div class="line">$ rename <span class="string">'y/a-z/A-Z/'</span> *.c</div></pre></td></tr></table></figure></p>
<p>简单解释下上面的命令，rename是先使用第二个参数的通配符匹配所有后缀为.txt的文件，然后使用第一个参数提供的正则表达式将匹配的这些文件的.txt后缀替换为.c 。</p>
<h3 id="查看文件"><a href="#查看文件" class="headerlink" title="查看文件"></a>查看文件</h3><p><strong>使用cat,tac和nl命令查看文件</strong><br>打印文件内容到标准输出（终端）,其中cat为正序显示，tac倒序显示。<br>查看之前从”/etc”目录下拷贝来的passwd文件：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ cat passwd</div></pre></td></tr></table></figure></p>
<p>可以加上-n参数显示行号：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ cat -n passwd</div></pre></td></tr></table></figure></p>
<p>nl命令，添加行号并打印，这是个比cat -n更专业的行号打印命令。</p>
<p>它的常用的几个参数：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">-b : 指定添加行号的方式，主要有两种：</div><div class="line">    -b a:表示无论是否为空行，同样列出行号(<span class="string">"cat -n"</span>就是这种方式)</div><div class="line">    -b t:只列出非空行的编号并列出（默认为这种方式）</div><div class="line">-n : 设置行号的样式，主要有三种：</div><div class="line">    -n ln:在行号字段最左端显示</div><div class="line">    -n rn:在行号字段最右边显示，且不加 0</div><div class="line">    -n rz:在行号字段最右边显示，且加 0</div><div class="line">-w : 行号字段占用的位数(默认为 6 位)</div></pre></td></tr></table></figure></p>
<p><strong>使用more和less命令分页查看文件</strong><br>其中more命令比较简单，只能向一个方向滚动，而”less”为基于”more”和”vi”(编辑器)开发，功能更强大。less 的使用基本和 more 一致。<br>使用more工具打开passwd文件：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ more passwd</div></pre></td></tr></table></figure></p>
<p>打开后默认只显示一屏内容，终端底部显示当前阅读的进度(百分比)。可以使用Enter键向下滚动一行，使用Space键向下滚动一屏，按下h显示帮助，q退出。<br><strong>使用head和tail命令查看文件</strong><br>head是只查看的头几行（默认为10行，不足10行则显示全部），tail是查看尾几行。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ tail /etc/passwd</div></pre></td></tr></table></figure></p>
<p>甚至更直接的只看一行， 加上-n参数，后面紧跟行数：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ tail -n 1 /etc/passwd</div></pre></td></tr></table></figure></p>
<p>参数-f，这个参数可以实现不停地读取某个文件的内容并显示。这可让我们动态查看日志起到实时监视的作用。</p>
<h3 id="查看文件类型"><a href="#查看文件类型" class="headerlink" title="查看文件类型"></a>查看文件类型</h3><p>在 Linux 下面文件的类型不是根据文件后缀来判断的，我们通常使用file命令可以查看文件的类型：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ file /bin/ls</div></pre></td></tr></table></figure></p>
<h3 id="编辑文件"><a href="#编辑文件" class="headerlink" title="编辑文件"></a>编辑文件</h3><p>Linux 内部的 vim 学习教程，输入如下命令即可开始：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ vimtutor</div></pre></td></tr></table></figure></p>
<h1 id="环境变量与文件查找"><a href="#环境变量与文件查找" class="headerlink" title="环境变量与文件查找"></a>环境变量与文件查找</h1><h2 id="环境变量"><a href="#环境变量" class="headerlink" title="环境变量"></a>环境变量</h2><h3 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h3><p>准确的说应该是 Shell 变量，所谓变量就是计算机中用于记录一个值（不一定是数值，也可以是字符或字符串）的符号，而这些符号将用于不同的运算处理中。<br>在 Shell 中如何创建一个变量，如何给变量赋值和如何读取变量的值呢？<br>使用declare命令创建一个变量名为 tmp 的变量：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ <span class="built_in">declare</span> tmp</div></pre></td></tr></table></figure></p>
<p>使用=号赋值运算符为变量 tmp 赋值为 nancy：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ tmp=nancy</div></pre></td></tr></table></figure></p>
<p>读取变量的值，使用echo命令和$符号（$符号用于表示引用一个变量的值，初学易忘）：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ <span class="built_in">echo</span> <span class="variable">$tmp</span></div></pre></td></tr></table></figure></p>
<p><strong>注意:关于变量名，并不是任何形式的变量名都是可用的，变量名只能是英文字母,数字或者下划线，且不能以数字作为开头。</strong></p>
<h3 id="环境变量"><a href="#环境变量-1" class="headerlink" title="环境变量"></a>环境变量</h3><p>环境变量就是作用域比自定义变量要大，如Shell 的环境变量作用于自身和它的子进程。在所有的 UNIX 和类 UNIX 系统中，每个进程都有其各自的环境变量设置，且默认情况下，当一个进程被创建时，处理创建过程中明确指定的话，它将继承其父进程的绝大部分环境设置。Shell 程序也作为一个进程运行在操作系统之上，而在 Shell中运行的大部分命令都将以 Shell 的子进程的方式运行。</p>
<p>通常会涉及到的环境变量有三种：</p>
<ul>
<li>当前 Shell 进程私有用户自定义变量，如上面我们创建的 temp 变量，只在当前 Shell 中有效。</li>
<li>Shell 本身内建的变量。</li>
<li>从自定义变量导出的环境变量。</li>
</ul>
<p>也有三个与上述三种环境变量相关的命令，set，env，export。这三个命令都可用于打印相关环境变量,区别在于涉及的是不同范围的环境变量，详见下表：<br>命令  说明<br>set     显示当前 Shell 所有环境变量，包括其内建环境变量（与 Shell 外观等相关），用户自定义变量及导出的环境变量<br>env     显示与当前用户相关的环境变量，还可以让命令在指定环境中运行<br>export  显示从 Shell 中导出成环境变量的变量，也能通过它将自定义变量导出为环境变量</p>
<p>关于环境变量，可以简单的理解成在当前进程的子进程是否有效，有效则为环境变量，否则不是（有人也将所有变量统称为环境变量，只是以全局环境变量和局部环境变量进行区分，只要理解它们的实质区别即可）。</p>
<p><strong>注意：为了与普通变量区分，通常我们习惯将环境变量名设为大写。</strong></p>
<h3 id="命令的查找路径与顺序"><a href="#命令的查找路径与顺序" class="headerlink" title="命令的查找路径与顺序"></a>命令的查找路径与顺序</h3><p>Shell 中输入一个命令，Shell 是通过环境变量PATH来进行搜索去找到这个命令然后执行的。Windows 中的也是有这么一个 PATH 环境变量。这个PATH里面就保存了Shell中执行的命令的搜索路径。<br>查看PATH环境变量的内容：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ <span class="built_in">echo</span> <span class="variable">$PATH</span></div></pre></td></tr></table></figure></p>
<p>默认情况下有输出：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">/usr/<span class="built_in">local</span>/sbin:/usr/<span class="built_in">local</span>/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/<span class="built_in">local</span>/games</div></pre></td></tr></table></figure></p>
<p>通常这一类目录下放的都是可执行文件，当我们在 Shell 中执行一个命令时，系统就会按照 PATH 中设定的路径按照顺序依次到目录中去查找，如果存在同名的命令，则执行先找到的那个。</p>
<p>练习创建一个最简单的可执行 Shell 脚本和一个使用 C 语言创建的”hello world”程序。<br>创建一个 Shell 脚本文件：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ vim hello_shell.sh</div></pre></td></tr></table></figure></p>
<p>在脚本中添加如下内容，保存并退出（注意不要省掉第一行）：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#!/bin/zsh</span></div><div class="line"></div><div class="line"><span class="keyword">for</span> ((i=0; i&lt;10; i++));<span class="keyword">do</span></div><div class="line">    <span class="built_in">echo</span> <span class="string">"hello shell"</span></div><div class="line"><span class="keyword">done</span></div><div class="line"></div><div class="line"><span class="built_in">exit</span> 0</div></pre></td></tr></table></figure></p>
<p>为文件添加可执行权限：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ chmod 755 hello_shell.sh</div></pre></td></tr></table></figure></p>
<p>执行脚本<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ ./hello_shell.sh</div></pre></td></tr></table></figure></p>
<p>创建一个 C 语言”hello world”程序：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ vim hello_world.c</div></pre></td></tr></table></figure></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include &lt;stdio.h&gt;</span></div><div class="line"></div><div class="line">int main(void)</div><div class="line">&#123;</div><div class="line">    <span class="built_in">printf</span>(<span class="string">"hello world!\n"</span>);</div><div class="line">    <span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>使用 gcc 生成可执行文件：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ gcc -o hello_world hello_world.c</div></pre></td></tr></table></figure></p>
<pre><code>gcc 生成二进制文件默认具有可执行权限，不需要修改
</code></pre><p>在 nancy 家目录创建一个mybin目录，并将上述 hello_shell.sh 和 hello_world 文件移动到其中：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ mkdir mybin</div><div class="line">$ mv hello_shell.sh hello_world mybin/</div></pre></td></tr></table></figure></p>
<p>在mybin目录中分别运行刚刚创建的两个程序：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ <span class="built_in">cd</span> mybin</div><div class="line">$ ./hello_shell.sh</div><div class="line">$ ./hello_world</div></pre></td></tr></table></figure></p>
<p>回到上一级目录，也就是nancy家目录，当再想运行那两个程序时，会发现提示命令找不到，除非加上命令的完整路径，但那样很不方便，要做到想使用系统命令一样执行自己创建的脚本文件或者程序，那就要将命令所在路径添加到PATH环境变量了。</p>
<h3 id="添加自定义路径到path环境变量"><a href="#添加自定义路径到“PATH”环境变量" class="headerlink" title="添加自定义路径到“PATH”环境变量"></a>添加自定义路径到“PATH”环境变量</h3><p>PATH里面的路径是以：作为分割符，可这样添加自定义路径：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ PATH=<span class="variable">$PATH</span>:/home/shiyanlou/mybin</div></pre></td></tr></table></figure></p>
<p><strong>注意这里一定要使用绝对路径。</strong></p>
<p>可以在其他任意目录执行那两个命令了（注意需要去掉前面的./）。这给 PATH 环境变量追加了一个路径，它也只是在当前 Shell 有效，一旦退出终端，再打开就会发现又失效了。<br>让添加的环境变量全局有效或者每次启动 Shell 时自动执行上面添加自定义路径到 PATH 的命令——后一种方式——让它自动执行。</p>
<p>在每个用户的 home 目录中有一个 Shell 每次启动时会默认执行一个配置脚本，以初始化环境，包括添加一些用户自定义环境变量等等。zsh 的配置文件是.zshrc，相应 Bash 的配置文件为.bashrc。它们在etc下还都有一个或多个全局的配置文件，不过一般只修改用户目录下的配置文件。</p>
<p>简单的使用下面命令直接添加内容到.zshrc中：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ <span class="built_in">echo</span> <span class="string">"PATH=<span class="variable">$PATH</span>:/home/shiyanlou/mybin"</span> &gt;&gt; .zshrc</div></pre></td></tr></table></figure></p>
<p>上述命令中&gt;&gt;表示将标准输出以追加的方式重定向到一个文件中，注意前面用到的&gt;是以覆盖的方式重定向到一个文件中，使用的时候一定要注意分辨。在指定文件不存在的情况下都会创建新的文件。</p>
<h3 id="修改和删除已有变量"><a href="#修改和删除已有变量" class="headerlink" title="修改和删除已有变量"></a>修改和删除已有变量</h3><p>变量修改</p>
<p>变量的修改有以下几种方式：<br>变量设置方式  说明<br>${变量名#匹配字串}     从头向后开始匹配，删除符合匹配字串的最短数据<br>${变量名##匹配字串}    从头向后开始匹配，删除符合匹配字串的最长数据<br>${变量名%匹配字串}     从尾向前开始匹配，删除符合匹配字串的最短数据<br>${变量名%%匹配字串}    从尾向前开始匹配，删除符合匹配字串的最长数据<br>${变量名/旧的字串/新的字串}    将符合旧字串的第一个字串替换为新的字串<br>${变量名//旧的字串/新的字串}   将符合旧字串的全部字串替换为新的字串</p>
<p>比如要修改前面添加到 PATH 的环境变量。为了避免操作失误导致命令找不到，先将 PATH 赋值给一个新的自定义变量 path：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">$ path=<span class="variable">$PATH</span></div><div class="line">$ <span class="built_in">echo</span> <span class="variable">$path</span></div><div class="line">$ path=<span class="variable">$&#123;path%/home/shiyanlou/mybin&#125;</span></div><div class="line"><span class="comment"># 或使用通配符,*表示任意多个任意字符</span></div><div class="line">$ path=<span class="variable">$&#123;path%*/mybin&#125;</span></div></pre></td></tr></table></figure></p>
<p><strong>变量删除</strong><br>可以使用unset命令删除一个环境变量：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ <span class="built_in">unset</span> temp</div></pre></td></tr></table></figure></p>
<h3 id="如何让环境变量立即生效"><a href="#如何让环境变量立即生效" class="headerlink" title="如何让环境变量立即生效"></a>如何让环境变量立即生效</h3><p>上面在Shell 中修改了一个配置脚本文件之后（比如 zsh 的配置文件 home 目录下的.zshrc），每次都要退出终端重新打开甚至重启主机之后其才能生效，很麻烦，使用source命令来让其立即生效，如：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ <span class="built_in">source</span> .zshrc</div></pre></td></tr></table></figure></p>
<p>source命令还有一个别名就是.，注意与表示当前路径的那个点区分开，虽然形式一样，但作用和使用方式一样，上面的命令如果替换成.的方式就该是<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ . ./.zshrc</div></pre></td></tr></table></figure></p>
<p>注意第一个点后面有一个空格，而且后面的文件必须指定完整的绝对或相对路径名，source 则不需要。</p>
<h2 id="搜索文件"><a href="#搜索文件" class="headerlink" title="搜索文件"></a>搜索文件</h2><p>与搜索相关的命令常用的有如下几个whereis,which,find,locate。</p>
<ul>
<li>whereis简单快速<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="variable">$whereis</span> who</div></pre></td></tr></table></figure>
</li>
</ul>
<p>whereis只能搜索二进制文件(-b)，man帮助文件(-m)和源代码文件(-s)。如果想要获得更全面的搜索结果可用locate命令。</p>
<ul>
<li>locate快而全<br>通过”/var/lib/mlocate/mlocate.db”数据库查找，不过这个数据库也不是实时更新的，系统会使用定时任务每天自动执行updatedb命令更新一次，所以有时刚添加的文件，它可能会找不到，需要手动执行一次updatedb命令（在我们的环境中必须先执行一次该命令）。它可以用来查找指定目录下的不同文件类型，如查找 /etc 下所有以 sh 开头的文件：<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ locate /etc/sh</div></pre></td></tr></table></figure>
</li>
</ul>
<p><strong>注意,它不只是在 etc 目录下查找并会自动递归子目录进行查找。</strong><br>查找 /usr/share/ 下所有 jpg 文件：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ locate /usr/share/\*.jpg</div></pre></td></tr></table></figure></p>
<p><strong>注意要添加*号前面的反斜杠转义，否则会无法找到。</strong></p>
<p>如果想只统计数目可以加上-c参数，-i参数可以忽略大小写进行查找，whereis 的-b,-m，-s同样可以是使用。</p>
<ul>
<li>which小而精</li>
</ul>
<p>which本身是 Shell 内建的一个命令，通常使用which来确定是否安装了某个指定的软件，因为它只从PATH环境变量指定的路径中去搜索命令：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ <span class="built_in">which</span> man</div></pre></td></tr></table></figure></p>
<ul>
<li>find精而细</li>
</ul>
<p>find应该是这几个命令中最强大的了，它不但可以通过文件类型、文件名进行查找而且可以根据文件的属性（如文件的时间戳，文件的权限等）进行搜索。<br>在指定目录下搜索指定文件名的文件：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ find /etc/ -name interfaces</div></pre></td></tr></table></figure></p>
<p><strong>注意 find 命令的路径是作为第一个参数的， 基本命令格式为 find [path] [option] [action] </strong><br>与时间相关的命令参数：<br>参数  说明<br>-atime  最后访问时间<br>-ctime  创建时间<br>-mtime  最后修改时间</p>
<p>下面以-mtime参数举例：</p>
<ul>
<li>-mtime n: n 为数字，表示为在n天之前的”一天之内“修改过的文件</li>
<li>-mtime +n: 列出在n天之前（不包含n天本身）被修改过的文件</li>
<li>-mtime -n: 列出在n天之内（包含n天本身）被修改过的文件</li>
<li>newer file: file为一个已存在的文件，列出比file还要新的文件名</li>
</ul>
<p>列出 home 目录中，当天（24 小时之内）有改动的文件：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ find ~ -mtime 0</div></pre></td></tr></table></figure></p>
<p>列出用户家目录下比Code文件夹新的文件：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ find ~ -newer /home/shiyanlou/Code</div></pre></td></tr></table></figure></p>
<p>《黑客帝国》电影里满屏幕代码的“数字雨”，在 Linux 里面也可以轻松实现这样的效果，只需要一个命令cmatrix。<br>需要先安装，因为 Ubuntu 没有预装：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ sudo apt-get update;sudo apt-get install cmatrix</div></pre></td></tr></table></figure></p>
<h1 id="文件打包与解压缩"><a href="#文件打包与解压缩" class="headerlink" title="文件打包与解压缩"></a>文件打包与解压缩</h1><h2 id="文件打包和解压缩"><a href="#文件打包和解压缩" class="headerlink" title="文件打包和解压缩"></a>文件打包和解压缩</h2><p>在 Windows 上最常见的不外乎这三种<em>.zip,</em>.rar,<em>.7z后缀的压缩文件，而在 Linux 上面常见常用的除了以上这三种外，还有</em>.gz,<em>.xz,</em>.bz2,<em>.tar,</em>.tar.gz,<em>.tar.xz,</em>tar.bz2，简单介绍如下：<br>文件后缀名   说明<br><em>.zip   zip程序打包压缩的文件
</em>.rar   rar程序压缩的文件<br><em>.7z    7zip程序压缩的文件
</em>.tar   tar程序打包，未压缩的文件<br><em>.gz    gzip程序(GNU zip)压缩的文件
</em>.xz    xz程序压缩的文件<br><em>.bz2   bzip2程序压缩的文件
</em>.tar.gz    tar打包，gzip程序压缩的文件<br><em>.tar.xz    tar打包，xz程序压缩的文件
</em>tar.bz2    tar打包，bzip2程序压缩的文件<br>*.tar.7z    tar打包，7z程序压缩的文件</p>
<h2 id="zip压缩打包程序"><a href="#zip压缩打包程序" class="headerlink" title="zip压缩打包程序"></a>zip压缩打包程序</h2><pre><code>使用zip打包文件夹：
</code></pre><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ zip -r -q -o nancy.zip /home/nancy</div><div class="line">$ du -h nancy.zip</div><div class="line">$ file nancy.zip</div></pre></td></tr></table></figure>
<p>上面命令将 nancy 的 home 目录打包成一个文件，并查看了打包后文件的大小和类型。-r参数表示递归打包包含子目录的全部内容，-q参数表示为安静模式，即不向屏幕输出信息，-o，表示输出文件，需在其后紧跟打包输出文件名。后面使用du命令查看打包后文件的大小。</p>
<pre><code>设置压缩级别为9和1（9最大,1最小），重新打包：
</code></pre><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ zip -r -9 -q -o nancy_9.zip /home/nancy -x ~/*.zip</div><div class="line">$ zip -r -1 -q -o nancy_1.zip /home/nancy -x ~/*.zip</div></pre></td></tr></table></figure>
<p>这里添加了一个参数用于设置压缩级别-[1-9]，1表示最快压缩但体积大，9表示体积最小但耗时最久。最后那个-x是为了排除我们上一次创建的 zip 文件，否则又会被打包进这一次的压缩文件中，<strong>注意:这里只能使用绝对路径，否则不起作用。</strong></p>
<p>我们再用du命令分别查看默认压缩级别、最低、最高压缩级别及未压缩的文件的大小：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ du -h <span class="_">-d</span> 0 *.zip ~ | sort</div></pre></td></tr></table></figure></p>
<p>通过man 手册可知：</p>
<pre><code>h, --human-readable（顾名思义，你可以试试不加的情况）

d, --max-depth（所查看文件的深度）
</code></pre><p>在环境中操作之后看到的大小可能跟图上的有些不同，因为在使用过程中，会随时还生成一些缓存文件在当前用户的家目录中，这对于学习命令使用来说，是无关紧要的，可以忽略这些不同。</p>
<pre><code>创建加密zip包
</code></pre><p>使用-e参数可以创建加密压缩包：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ zip -r <span class="_">-e</span> -o nancy_encryption.zip /home/nancy</div></pre></td></tr></table></figure></p>
<p><strong>注意</strong>: 关于zip命令，因为 Windows 系统与 Linux/Unix 在文本文件格式上的一些兼容问题，比如换行符（为不可见字符），在 Windows 为 CR+LF（Carriage-Return+Line-Feed：回车加换行），而在 Linux/Unix 上为 LF（换行），所以如果在不加处理的情况下，在 Linux 上编辑的文本，在 Windows 系统上打开可能看起来是没有换行的。如果你想让你在 Linux 创建的 zip 压缩文件在 Windows 上解压后没有任何问题，那么你还需要对命令做一些修改：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ zip -r <span class="_">-l</span> -o nancy.zip /home/nancy</div></pre></td></tr></table></figure></p>
<p>需要加上-l参数将LF转换为CR+LF来达到以上目的。</p>
<h2 id="使用unzip命令解压缩zip文件"><a href="#使用unzip命令解压缩zip文件" class="headerlink" title="使用unzip命令解压缩zip文件"></a>使用unzip命令解压缩zip文件</h2><p>将shiyanlou.zip解压到当前目录：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ unzip shiyanlou.zip</div></pre></td></tr></table></figure></p>
<p>使用安静模式，将文件解压到指定目录：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ unzip -q shiyanlou.zip <span class="_">-d</span> ziptest</div></pre></td></tr></table></figure></p>
<p>上述指定目录不存在，将会自动创建。如果不想解压只想查看压缩包的内容可以使用-l参数：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ unzip <span class="_">-l</span> shiyanlou.zip</div></pre></td></tr></table></figure></p>
<p><strong>注意</strong>： 使用unzip解压文件时我们同样应该注意兼容问题，不过这里我们关心的不再是上面的问题，而是中文编码的问题，通常 Windows 系统上面创建的压缩文件，如果有有包含中文的文档或以中文作为文件名的文件时默认会采用 GBK 或其它编码，而 Linux 上面默认使用的是 UTF-8 编码，如果不加任何处理，直接解压的话可能会出现中文乱码的问题（有时候它会自动帮你处理），为了解决这个问题，我们可以在解压时指定编码类型。</p>
<p>使用-O（英文字母，大写o）参数指定编码类型：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">unzip -O GBK 中文压缩文件.zip</div></pre></td></tr></table></figure></p>
<h2 id="rar打包压缩命令"><a href="#rar打包压缩命令" class="headerlink" title="rar打包压缩命令"></a>rar打包压缩命令</h2><p>rar也是 Windows 上常用的一种压缩文件格式，在 Linux 上可以使用rar和unrar工具分别创建和解压 rar 压缩包。</p>
<pre><code>安装rar和unrar工具：
</code></pre><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ sudo apt-get update</div><div class="line">$ sudo apt-get install rar unrar</div></pre></td></tr></table></figure>
<pre><code>从指定文件或目录创建压缩包或添加文件到压缩包：
</code></pre><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ rm *.zip</div><div class="line">$ rar a nancy.rar .</div></pre></td></tr></table></figure>
<p>上面的命令使用a参数添加一个目录～到一个归档文件中，如果该文件不存在就会自动创建。<br><strong>注意：rar 的命令参数没有-，如果加上会报错。</strong></p>
<pre><code>从指定压缩包文件中删除某个文件：
</code></pre><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ rar d nancy.rar .zshrc</div></pre></td></tr></table></figure>
<pre><code>查看不解压文件：
</code></pre><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ rar l nancy.rar</div></pre></td></tr></table></figure>
<pre><code>使用unrar解压rar文件
</code></pre><p>全路径解压：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ unrar x nancy.rar</div></pre></td></tr></table></figure></p>
<p>去掉路径解压：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ mkdir tmp</div><div class="line">$ unrar e nancy.rar tmp/</div></pre></td></tr></table></figure></p>
<p>rar命令参数非常多，上面只涉及了一些基本操作。</p>
<h2 id="tar打包工具"><a href="#tar打包工具" class="headerlink" title="tar打包工具"></a>tar打包工具</h2><pre><code>创建一个 tar 包：
</code></pre><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ tar -cf nancy.tar ~</div></pre></td></tr></table></figure>
<p>-c表示创建一个 tar 包文件，-f用于指定创建的文件名，注意文件名必须紧跟在-f参数之后，比如不能写成tar -fc nancy.tar，可以写成tar -f nancy.tar -c ~。你还可以加上-v参数以可视的的方式输出打包的文件。上面会自动去掉表示绝对路径的/，你也可以使用-P保留绝对路径符。</p>
<pre><code>解包一个文件(-x参数)到指定路径的已存在目录(-C参数)：
</code></pre><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ mkdir tardir</div><div class="line">$ tar -xf nancy.tar -C tardir</div></pre></td></tr></table></figure>
<pre><code>只查看不解包文件-t参数：
</code></pre><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ tar -tf nancy.tar</div></pre></td></tr></table></figure>
<pre><code>保留文件属性和跟随链接（符号链接或软链接），有时候我们使用tar备份文件当你在其他主机还原时希望保留文件的属性(-p参数)和备份链接指向的源文件而不是链接本身(-h参数)：
</code></pre><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ tar -cphf etc.tar /etc</div></pre></td></tr></table></figure>
<p>对于创建不同的压缩格式的文件，对于tar来说是相当简单的，需要的只是换一个参数，这里我们就以使用gzip工具创建*.tar.gz文件为例来说明。</p>
<pre><code>我们只需要在创建 tar 文件的基础上添加-z参数，使用gzip来压缩文件：
</code></pre><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ tar -czf nancy.tar.gz ~</div></pre></td></tr></table></figure>
<pre><code>解压*.tar.gz文件：
</code></pre><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ tar -xzf nancy.tar.gz</div></pre></td></tr></table></figure>
<p>要使用其他的压缩工具创建或解压相应文件只需要更改一个参数即可：<br>压缩文件格式  参数<br><em>.tar.gz    -z
</em>.tar.xz    -J<br>*tar.bz2    -j</p>
<p>趣味程序（火炉）：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ sudo apt-get install libaa-bin </div><div class="line">$ aafire</div></pre></td></tr></table></figure></p>
<h1 id="文件系统操作与磁盘管理"><a href="#文件系统操作与磁盘管理" class="headerlink" title="文件系统操作与磁盘管理"></a>文件系统操作与磁盘管理</h1><h2 id="简单文件系统操作"><a href="#简单文件系统操作" class="headerlink" title="简单文件系统操作"></a>简单文件系统操作</h2><p><strong>使用 df 命令查看磁盘的容量</strong><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ df</div></pre></td></tr></table></figure></p>
<p>物理主机上的 /dev/sda2 是对应着主机硬盘的分区，后面的数字表示分区号，数字前面的字母 a 表示第几块硬盘（也可能是可移动磁盘），如果主机上有多块硬盘则可能还会出现 /dev/sdb，/dev/sdc 这些磁盘设备都会在 /dev 目录下以文件的存在形式。</p>
<p>还会看到”1k-blocks”，它表示以磁盘块大小的方式显示容量，后面为相应的以块大小表示的已用和可用容量。<br><strong>使用 du 命令查看目录的容量</strong><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 默认同样以 blocks 的大小展示</span></div><div class="line">$ du </div><div class="line"><span class="comment"># 加上`-h`参数，以更易读的方式展示</span></div><div class="line">$ du -h</div></pre></td></tr></table></figure></p>
<p>-d参数指定查看目录的深度<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 只查看1级目录的信息</span></div><div class="line">$ du -h <span class="_">-d</span> 0 ~</div><div class="line"><span class="comment"># 查看2级</span></div><div class="line">$ du -h <span class="_">-d</span> 1 ~</div></pre></td></tr></table></figure></p>
<h2 id="简单的磁盘管理"><a href="#简单的磁盘管理" class="headerlink" title="简单的磁盘管理"></a>简单的磁盘管理</h2><p><strong>下面涉及的命令具有一定的危险性，操作不当可能会丢失你的个人数据，初学者建议在虚拟环境中进行操作</strong></p>
<h3 id="创建虚拟磁盘"><a href="#创建虚拟磁盘" class="headerlink" title="创建虚拟磁盘"></a>创建虚拟磁盘</h3><p>dd 命令简介<br>dd命令用于转换和复制文件，不过它的复制不同于cp。之前提到过关于 Linux 的很重要的一点，一切即文件，在 Linux 上，硬件的设备驱动（如硬盘）和特殊设备文件（如/dev/zero和/dev/random）都像普通文件一样，只要在各自的驱动程序中实现了对应的功能，dd 也可以读取自和/或写入到这些文件。这样，dd也可以用在备份硬件的引导扇区、获取一定数量的随机数据或者空数据等任务中。dd程序也可以在复制时处理数据，例如转换字节序、或在 ASCII 与 EBCDIC 编码间互换。</p>
<p>dd的命令行语句与其他的 Linux 程序不同，因为它的命令行选项格式为选项=值，而不是更标准的–选项 值或-选项=值。dd默认从标准输入中读取，并写入到标准输出中，但可以用选项if（input file，输入文件）和of（output file，输出文件）改变。</p>
<p>我们先来试试用dd命令从标准输入读入用户输入到标准输出或者一个文件：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 输出到文件</span></div><div class="line">$ dd of=<span class="built_in">test</span> bs=10 count=1 <span class="comment"># 或者 dd if=/dev/stdin of=test bs=10 count=1</span></div><div class="line"><span class="comment"># 输出到标准输出</span></div><div class="line">$ dd <span class="keyword">if</span>=/dev/stdin of=/dev/stdout bs=10 count=1</div></pre></td></tr></table></figure></p>
<p>明天继续。</p>
<hr>
<p>感谢实验楼。</p>
<p><span id="busuanzi_container_page_pv"><br>本文已被阅读 <span id="busuanzi_value_page_pv"></span> 次。感谢您的点击！<br>The article has been viewed <span id="busuanzi_value_page_pv"></span> times.Thank you for your visit!<br></span></p>
]]></content>
      
        <categories>
            
            <category> 通信工程 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> linux </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[回归]]></title>
      <url>http://hubojing.github.io/2016/12/26/%E5%9B%9E%E5%BD%92/</url>
      <content type="html"><![CDATA[<div align="left"><br><img src="http://www.jingyanbus.com/uploads/allimg/c160518/1463534500XK0-3G2b.jpg" width="300" height="180" alt="配图" style="float:right;"><br><br><br><br>考研大战初试昨日结束，我回来写文了！<br>考研不易，且行且珍惜！<br>无论如何，人生开启新旅程！在技术的海洋里遨游吧！向成为一名优秀的工程师迈进！<br><br>　　<br> </div>]]></content>
      
        <categories>
            
            <category> 杂谈 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 说明 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[上海决赛之旅 | the trip for contest in Shanghai]]></title>
      <url>http://hubojing.github.io/2016/08/27/%E4%B8%8A%E6%B5%B7%E5%86%B3%E8%B5%9B%E4%B9%8B%E6%97%85/</url>
      <content type="html"><![CDATA[<div align="left"><br><img src="http://7xray0.com1.z0.glb.clouddn.com/IMG_20160823_183005.jpg" width="300" height="180" alt="配图" style="float:right;"><br><br><br><strong>上海决赛后的简单的感受，具体的技术方面探讨将在考研后详细更新。</strong><br><br><br></div>

<a id="more"></a>
<p>从上海比赛回来，说说几点感受：<br>1.大神技术过硬。<br>2.大神为作品倾注很多。<br>3.创意和灵感的重要性。<br>4.团队合作，找到志同道合的朋友。<br>5.大神演讲能力极强，不怯场。<br>6.自己的心态和学习程度都需要改正加强，差距是明显可见的。</p>
<p>衷心感谢学校的支持，能为学院和学校争取荣誉，同时实现自己初涉竞赛的心愿，找到自己和大神的距离，不虚此行。</p>
<p>I would like to spare my thoughts after my coming back from Shanghai for my competition.<br>1.Superiors are excellent in technology.<br>2.Superiors take times in their work.<br>3.Idea and inspiration are insignificant.<br>4.Team-work is needed,and we should find like-minded firends.<br>5.Superiors have ability in giving a speech and never afraid of it.<br>6.My attitude and learning need to be changed and improved,and the distance between superior and me is clearly to see.</p>
<p>Thank you for the support from my university,and I’m prond of doing credit to my school and university.In the meanwhile,I realise my dream for first involve in contest.<br>附自拍上海美景 P.S.the view of Shanghai<br><img src="http://7xray0.com1.z0.glb.clouddn.com/IMG_20160823_203221.jpg" alt="上海"></p>
<p><span id="busuanzi_container_page_pv"></span></p>
<blockquote>
<p><strong>本文已被阅读 <span id="busuanzi_value_page_pv"></span> 次。感谢您的点击！</strong><br>  <strong>The article has been viewed <span id="busuanzi_value_page_pv"></span> times.Thank you for your visit!</strong><br></p>
</blockquote>
]]></content>
      
        <categories>
            
            <category> 杂谈 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 杂谈 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[说明]]></title>
      <url>http://hubojing.github.io/2016/07/16/%E8%AF%B4%E6%98%8E/</url>
      <content type="html"><![CDATA[<p><div align="left"><br><img src="http://i2.w.yun.hjfile.cn/doc/201304/bc1b70e4e74d48c4ab99e3db21a052f0.png" width="300" height="180" alt="配图" style="float:right;"></div></p>
<p>有朋友问我为何最近github和博客都没有较多的维护和更新，现作出<code>说明</code>：</p>
<p>因本人自身发展问题，正积极备考研究生考试，直至考研结束，所以github和博客的维护和更新会延缓，但<strong>不会停止维护</strong>。<br>希望完全回归时，自己能收获理想！<br>学习，永不止步。<br>望各位朋友理解！谢谢大家！</p>
<a id="more"></a>
<p><span id="busuanzi_container_page_pv"><br>本文已被阅读 <span id="busuanzi_value_page_pv"></span> 次。感谢您的点击！<br>The article has been viewed <span id="busuanzi_value_page_pv"></span> times.Thank you for your visit!<br></span></p>
]]></content>
      
        <categories>
            
            <category> 杂谈 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 说明 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[P图集 | PS picture album]]></title>
      <url>http://hubojing.github.io/2016/06/29/P%E5%9B%BE%E9%9B%86/</url>
      <content type="html"><![CDATA[<p><div align="left"><br><img src="http://7xray0.com1.z0.glb.clouddn.com/16-6-29/63527525.jpg" width="300" height="180" alt="配图" style="float:right;"></div></p>
<p>自从学会Photoshop这个好用的工具后，对照片的处理更得心应手了。<br>这是我的P图集。<br>I use photoshop more effectively after I learned it.<br>This is my PS picture album.</p>
<p> <br><a id="more"></a><br><strong>1</strong><br><img src="/images/y1.jpg" alt="原图"><br><img src="/images/p1_1.jpg" alt="冷色"><br><img src="/images/p1_2.jpg" alt="暖色"></p>
<p><strong>2</strong><br><img src="/images/y2.jpg" alt="原图"><br><img src="/images/p2.jpg" alt="修后"></p>
<p>我是想调成新海诚动漫画风效果的…不过水平还欠佳……<br>I want to do it as Makoto Shinkai’s animation style,but my level just not reachs that high apparently.</p>
<p><span id="busuanzi_container_page_pv"><br>本文已被阅读 <span id="busuanzi_value_page_pv"></span> 次。感谢您的点击！<br>The article has been viewed <span id="busuanzi_value_page_pv"></span> times.Thank you for your visit!<br></span></p>
]]></content>
      
        <categories>
            
            <category> 互联网 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> photoshop </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Linux菜鸟初尝鲜 | First try on Linux]]></title>
      <url>http://hubojing.github.io/2016/06/14/Linux%E8%8F%9C%E9%B8%9F%E5%88%9D%E5%B0%9D%E9%B2%9C/</url>
      <content type="html"><![CDATA[<p><div align="left"><br><img src="http://news.mydrivers.com/Img/20110826/2011082609513918.jpg" width="300" height="180" alt="配图" style="float:right;"></div></p>
<p><strong>大三认真学技术打开新世界，常叹为何不早入技术门！</strong><br><strong>I have learned technology to my best in my junior time,and I feel I should step into the technological world earlier!</strong></p>
<p> <br><a id="more"></a><br>奈何大三事务多，惟愿考研考上给我又几年自学的机会……更认真地对待技术！<br>Too busy in the junior,may I can gain another several years to learn in the postgraduate stage.I will be more hard-working!<br>这一年，接触git、css、html，前端知识，尝试java，这学期又选了数据库sql，嵌入式系统Linux，还学了好用的工具Labview，这学期选的课都很实用！只是知识需要消化……</p>
<p>This year,I get to know git,css,html and fore-end knowledge,try java,and chose sql,linux and labview this semester,which are practical nowadays!Indeed,it takes time to understand them deeply.<br>一直想了解Linux，无从下手，最后还是在课堂上被老师带着走入了linux的世界。<br>Always want to know something about linux,but I just have no idea about it.Luckliy,I become to see you finally,linux.</p>
<blockquote>
<p>2016.6.22更新 Update 一要点</p>
</blockquote>
<p>昨天考完了嵌入式系统实验考试，get一个简单的要点：<br>I got a small but esstenial point in my linux exam,<br>armv4l-unknown-linux-gcc -o 开发板上的编译 winSCP’s compiler<br>gcc -o 虚拟机上的编译 VM’s compiler<br>分清两种编译器。Please make sure your compiler is right.<br>考试内容是开发板与虚拟机通信。开发板是client，虚拟机是server.（和之前的记录是相反的）<br>My exam is VM communicate with winSCP.The winCSP is client,and the VM is server.</p>
<blockquote>
<p>2016.6.14更新 Update 基础实验    熟悉Linux开发环境   Basic experiment      Be familiar with Linux development environment</p>
</blockquote>
<p>熟悉Linux开发环境，学会基于S3C2410的Linux开发环境的配置和使用。使用Linux的armv4l-unknown-linux-gcc编译，使用基于NFS方式的下载调试，了解嵌入式开发的基本过程。<br>Be familiar with Linux development environment and learn configuration of Linux development environment based on S3C2410.Use compile of armv41-unknown-linux-gcc，use download and debug based on NFS mode,to learn the embedded development process.</p>
<h1 id="实验步骤-experiment-steps"><a href="#实验步骤-Experiment-steps" class="headerlink" title="实验步骤        Experiment steps"></a>实验步骤        Experiment steps</h1><p>1、建立工作目录 Create work directory<br>2、编写程序源代码 Write code<br>3、编写Makefile Write makefile<br>4、编译应用程序    Compile program<br>5、下载调试    Download and debug</p>
<h1 id="重难点-important-point"><a href="#重难点-Important-point" class="headerlink" title="重难点 Important point"></a>重难点 Important point</h1><p>Makefile文件定义了一系列的规则，它指明了哪些文件需要编译，哪些文件需要先编译，哪些文件需要重新编译等等更为复杂的命令。使用它带来的好处就是自动编译，你只需要敲一个“make”命令整个工程就可以实现自动编译。<br>Makefile definite a series of rules,and it shows which files need compile,which first to be compiled,and which need recompile.The benefit is a simple “make” can finish automatic compilation.</p>
<p>mount -t nfs -o nolock 192.168.0.56:/arm2410cl /host //超级终端中执行 carried out under the super terminal<br><strong>注意：IP地址需要根据宿主PC机的实际情况修改成对应arm2410cl目录。</strong><br><strong>Attention:IP should be changed according to the real condition.</strong> </p>
<p>编译、修改程序都是在宿主机（本地PC机）上进行，不能在超级终端下进行。<br>Compile and modify the program both in the host (local PC), and it can not be carried out under the super terminal.</p>
<h1 id="课堂笔记备忘"><a href="#课堂笔记备忘" class="headerlink" title="课堂笔记备忘"></a>课堂笔记备忘</h1><h2 id="服务器与客户端通信"><a href="#服务器与客户端通信" class="headerlink" title="服务器与客户端通信"></a>服务器与客户端通信</h2><p>虚拟机上（地址192.168.1.12）VM：<br>cd /arm2410cl/<br>cd exp<br>cd basic<br>cd server（先把server.c和client.c拷入对应文件夹下 into right files）<br>ls<br>gcc -o client client.c //编译compile<br>armv41-unkown-linux-gcc -o server server.c //编译compile<br><strong>注意：修改了源文件记得要编译，保存还不够。</strong><br><strong>Attention:It is vital to compile,not just save file.</strong></p>
<p>./client<br>123456</p>
<p>开发板(地址192.168.1.121)winSCP：<br>ifconfig eth0 192.168.1.121<br>mount -t nfs -o nolock 192.168.1.12:/arm2410c1 /host （挂载mount）<br>cd /host<br>cd exp<br>cd basic<br>cd server<br>ls<br>（可以ping 192.168.1.12检查一下是否连通 test if it is linked.）<br>./server<br>123456</p>
<p>exit退出连接</p>
<p>程序只能是客户端向服务端发送信息，不能反过来。<br>Information can only be sent to the server from client which can’t be reversed because of the program setting.</p>
<p>原程序Original program：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div></pre></td><td class="code"><pre><div class="line">int <span class="function"><span class="title">main</span></span>()</div><div class="line">&#123;</div><div class="line">     char buffer[BUFFER_SIZE];</div><div class="line">    struct sockaddr_in client_addr;</div><div class="line">    socklen_t length;</div><div class="line">	   int conn;</div><div class="line">	  int len;</div><div class="line">	//int fork_id;</div><div class="line">///定义sockfd</div><div class="line">   int server_sockfd = socket(AF_INET,SOCK_STREAM, 0);</div><div class="line"> </div><div class="line">   ///定义sockaddr_in</div><div class="line">   struct sockaddr_in server_sockaddr;</div><div class="line">   server_sockaddr.sin_family = AF_INET;</div><div class="line">    server_sockaddr.sin_port = htons(MYPORT);</div><div class="line">    server_sockaddr.sin_addr.s_addr = htonl(INADDR_ANY);</div><div class="line"></div><div class="line">    ///<span class="built_in">bind</span>，成功返回0，出错返回-1</div><div class="line">   <span class="keyword">if</span>(<span class="built_in">bind</span>(server_sockfd,(struct sockaddr *)&amp;server_sockaddr,sizeof(server_sockaddr))==-1)</div><div class="line">    &#123;</div><div class="line">        perror(<span class="string">"bind"</span>);</div><div class="line">        <span class="built_in">exit</span>(1);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    ///listen，成功返回0，出错返回-1</div><div class="line">    <span class="keyword">if</span>(listen(server_sockfd,QUEUE) == -1)</div><div class="line">    &#123;</div><div class="line">        perror(<span class="string">"listen"</span>);</div><div class="line">         <span class="built_in">exit</span>(1);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    ///客户端套接字</div><div class="line">   </div><div class="line">   length = sizeof(client_addr);</div><div class="line"></div><div class="line">     ///成功返回非负描述字，出错返回-1</div><div class="line">	//<span class="keyword">while</span>(1)</div><div class="line">	//&#123;</div><div class="line">    conn = accept(server_sockfd, (struct sockaddr*)&amp;client_addr, &amp;length);</div><div class="line">    <span class="keyword">if</span>(conn&lt;0)</div><div class="line">     &#123;</div><div class="line">        perror(<span class="string">"connect"</span>);</div><div class="line">         <span class="built_in">exit</span>(1);</div><div class="line">     &#125;</div><div class="line">	fork_id=fork();</div><div class="line">	<span class="keyword">if</span>(fork_id==0)</div><div class="line">	&#123;</div><div class="line">   <span class="keyword">while</span>(1)</div><div class="line">     &#123;</div><div class="line">        memset(buffer,0,sizeof(buffer));</div><div class="line">       len = recv(conn, buffer, sizeof(buffer),0);</div><div class="line">       <span class="keyword">if</span>(strcmp(buffer,<span class="string">"exit\n"</span>)==0)</div><div class="line">           <span class="built_in">break</span>;</div><div class="line">       fputs(buffer, stdout);</div><div class="line">        send(conn, buffer, len, 0);</div><div class="line">    &#125;</div><div class="line">    close(conn);</div><div class="line">    close(server_sockfd);</div><div class="line">	<span class="built_in">return</span>(0);//新程序去掉了这一行</div><div class="line">   //<span class="built_in">exit</span>(0);</div><div class="line">&#125;</div><div class="line">/*<span class="keyword">else</span></div><div class="line">&#123;</div><div class="line"></div><div class="line">&#125;</div><div class="line">&#125;*/</div><div class="line"> &#125;</div></pre></td></tr></table></figure></p>
<p>原程序是一个服务器只能挂载一个客户端。 The original program is a server which can only mount one client.<br>程序修改了下，使一个服务器可以挂载两个客户端（可以构建聊天系统）。 After modifing program,it can mount two clients(which can create a chat system).<br>要先连接服务器，再连接客户端。 Connect the server first,then connect the client.</p>
<p>rm server 删除server文件 delete server file<br>两端ps -a看一下是否退出。  use”ps -a” to see if the system exits.</p>
<h2 id="挂载驱动-mount-the-drive"><a href="#挂载驱动-Mount-the-drive" class="headerlink" title="挂载驱动    Mount the drive"></a>挂载驱动    Mount the drive</h2><p>在开发板上winSCP：<br>mount -t nfs -o nolock 192.168.1.12:/arm2410cl /host<br>cd host<br>cd exp<br>cd basic<br>cd pwm_motor<br>lsmod pwm_ad.o<br>cd pwm_AD<br>insmod pwm_ad.o<br>//rmmod pwm_ad.o 删除<br>cd pwm_test<br>./test_dcm_main</p>
<p>虚拟机上VM：<br>cd pwm_motor<br>cd pwm_test<br>make clean<br>make<br>cd ..<br>cd pwm_test</p>
<h1 id="附录-客户端和服务器程序-appendix-clientc-amp-serverc"><a href="#附录-客户端和服务器程序-Appendix-Client-c-amp-Server-c" class="headerlink" title="附录    客户端和服务器程序    Appendix  Client.c &amp; Server.c"></a>附录    客户端和服务器程序    Appendix  Client.c &amp; Server.c</h1><h2 id="serverc"><a href="#server-c" class="headerlink" title="server.c"></a>server.c</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include &lt;sys/types.h&gt;</span></div><div class="line"> <span class="comment">#include &lt;sys/socket.h&gt;</span></div><div class="line"> <span class="comment">#include &lt;stdio.h&gt;</span></div><div class="line"><span class="comment">#include &lt;netinet/in.h&gt;</span></div><div class="line"> <span class="comment">#include &lt;arpa/inet.h&gt;</span></div><div class="line"><span class="comment">#include &lt;unistd.h&gt;</span></div><div class="line"><span class="comment">#include &lt;string.h&gt;</span></div><div class="line"> <span class="comment">#include &lt;stdlib.h&gt;</span></div><div class="line"> <span class="comment">#include &lt;fcntl.h&gt;</span></div><div class="line"><span class="comment">#include &lt;sys/shm.h&gt;</span></div><div class="line"></div><div class="line"> <span class="comment">#define MYPORT  8887</span></div><div class="line"> <span class="comment">#define QUEUE   20</span></div><div class="line"> <span class="comment">#define BUFFER_SIZE 1024</span></div><div class="line"></div><div class="line">int <span class="function"><span class="title">main</span></span>()</div><div class="line">&#123;</div><div class="line">     char buffer[BUFFER_SIZE];</div><div class="line">    struct sockaddr_in client_addr;</div><div class="line">    socklen_t length;</div><div class="line">	   int conn;</div><div class="line">	  int len;</div><div class="line">///定义sockfd</div><div class="line">   int server_sockfd = socket(AF_INET,SOCK_STREAM, 0);</div><div class="line"> </div><div class="line">   ///定义sockaddr_in</div><div class="line">   struct sockaddr_in server_sockaddr;</div><div class="line">   server_sockaddr.sin_family = AF_INET;</div><div class="line">    server_sockaddr.sin_port = htons(MYPORT);</div><div class="line">    server_sockaddr.sin_addr.s_addr = htonl(INADDR_ANY);</div><div class="line"></div><div class="line">    ///<span class="built_in">bind</span>，成功返回0，出错返回-1</div><div class="line">   <span class="keyword">if</span>(<span class="built_in">bind</span>(server_sockfd,(struct sockaddr *)&amp;server_sockaddr,sizeof(server_sockaddr))==-1)</div><div class="line">    &#123;</div><div class="line">        perror(<span class="string">"bind"</span>);</div><div class="line">        <span class="built_in">exit</span>(1);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    ///listen，成功返回0，出错返回-1</div><div class="line">    <span class="keyword">if</span>(listen(server_sockfd,QUEUE) == -1)</div><div class="line">    &#123;</div><div class="line">        perror(<span class="string">"listen"</span>);</div><div class="line">         <span class="built_in">exit</span>(1);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    ///客户端套接字</div><div class="line">   </div><div class="line">   length = sizeof(client_addr);</div><div class="line"></div><div class="line">     ///成功返回非负描述字，出错返回-1</div><div class="line">    conn = accept(server_sockfd, (struct sockaddr*)&amp;client_addr, &amp;length);</div><div class="line">    <span class="keyword">if</span>(conn&lt;0)</div><div class="line">     &#123;</div><div class="line">        perror(<span class="string">"connect"</span>);</div><div class="line">         <span class="built_in">exit</span>(1);</div><div class="line">     &#125;</div><div class="line"></div><div class="line">   <span class="keyword">while</span>(1)</div><div class="line">     &#123;</div><div class="line">        memset(buffer,0,sizeof(buffer));</div><div class="line">       len = recv(conn, buffer, sizeof(buffer),0);</div><div class="line">       <span class="keyword">if</span>(strcmp(buffer,<span class="string">"exit\n"</span>)==0)</div><div class="line">           <span class="built_in">break</span>;</div><div class="line">       fputs(buffer, stdout);</div><div class="line">        send(conn, buffer, len, 0);</div><div class="line">    &#125;</div><div class="line">    close(conn);</div><div class="line">    close(server_sockfd);</div><div class="line">   <span class="built_in">return</span> 0;</div><div class="line"> &#125;</div></pre></td></tr></table></figure>
<h2 id="clientc"><a href="#client-c" class="headerlink" title="client.c"></a>client.c</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div></pre></td><td class="code"><pre><div class="line"> <span class="comment">#include &lt;sys/types.h&gt;</span></div><div class="line"> <span class="comment">#include &lt;sys/socket.h&gt;</span></div><div class="line"> <span class="comment">#include &lt;stdio.h&gt;</span></div><div class="line"> <span class="comment">#include &lt;netinet/in.h&gt;</span></div><div class="line"> <span class="comment">#include &lt;arpa/inet.h&gt;</span></div><div class="line"> <span class="comment">#include &lt;unistd.h&gt;</span></div><div class="line"> <span class="comment">#include &lt;string.h&gt;</span></div><div class="line"><span class="comment">#include &lt;stdlib.h&gt;</span></div><div class="line"><span class="comment">#include &lt;fcntl.h&gt;</span></div><div class="line"><span class="comment">#include &lt;sys/shm.h&gt;</span></div><div class="line"></div><div class="line"><span class="comment">#define MYPORT  8887</span></div><div class="line"><span class="comment">#define BUFFER_SIZE 1024</span></div><div class="line"></div><div class="line">int <span class="function"><span class="title">main</span></span>()</div><div class="line">&#123;</div><div class="line">    ///定义sockfd</div><div class="line">   int sock_cli = socket(AF_INET,SOCK_STREAM, 0);</div><div class="line"></div><div class="line">   ///定义sockaddr_in</div><div class="line">    struct sockaddr_in servaddr;</div><div class="line">    memset(&amp;servaddr, 0, sizeof(servaddr));</div><div class="line">    servaddr.sin_family = AF_INET;</div><div class="line">    servaddr.sin_port = htons(MYPORT);  ///服务器端口</div><div class="line">    servaddr.sin_addr.s_addr = inet_addr(<span class="string">"192.168.1.12"</span>);  ///服务器ip</div><div class="line"></div><div class="line">    ///连接服务器，成功返回0，错误返回-1</div><div class="line">    <span class="keyword">if</span> (connect(sock_cli, (struct sockaddr *)&amp;servaddr, sizeof(servaddr)) &lt; 0)</div><div class="line">    &#123;</div><div class="line">        perror(<span class="string">"connect"</span>);</div><div class="line">        <span class="built_in">exit</span>(1);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    char sendbuf[BUFFER_SIZE];</div><div class="line">    char recvbuf[BUFFER_SIZE];</div><div class="line">    <span class="keyword">while</span> (fgets(sendbuf, sizeof(sendbuf), stdin) != NULL)</div><div class="line">    &#123;</div><div class="line">        send(sock_cli, sendbuf, strlen(sendbuf),0); ///发送</div><div class="line">        <span class="keyword">if</span>(strcmp(sendbuf,<span class="string">"exit\n"</span>)==0)</div><div class="line">          <span class="built_in">break</span>;</div><div class="line">        recv(sock_cli, recvbuf, sizeof(recvbuf),0); ///接收</div><div class="line">       fputs(recvbuf, stdout);</div><div class="line"></div><div class="line">       memset(sendbuf, 0, sizeof(sendbuf));</div><div class="line">       memset(recvbuf, 0, sizeof(recvbuf));</div><div class="line">  &#125;</div><div class="line"></div><div class="line">   close(sock_cli);</div><div class="line">    <span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><span id="busuanzi_container_page_pv"></span></p>
<blockquote>
<p><strong>本文已被阅读 <span id="busuanzi_value_page_pv"></span> 次。感谢您的点击！</strong><br>  <strong>The article has been viewed <span id="busuanzi_value_page_pv"></span> times.Thank you for your visit!</strong><br></p>
</blockquote>
]]></content>
      
        <categories>
            
            <category> 通信工程 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> linux </tag>
            
            <tag> 嵌入式系统 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[将hexo+github博客同步托管至coding]]></title>
      <url>http://hubojing.github.io/2016/04/06/%E5%B0%86hexo-github%E5%8D%9A%E5%AE%A2%E5%90%8C%E6%AD%A5%E6%89%98%E7%AE%A1%E8%87%B3coding/</url>
      <content type="html"><![CDATA[<p>由于百度蜘蛛把github屏蔽了，导致百度搜不到博客文章，let me feel a little unhappy，为了扩大网站收录率，我将hexo-github博客同步托管到国内coding上。<br>胡博靖的个人博客：<a href="http://hubojing.coding.me" target="_blank" rel="external">http://hubojing.coding.me</a><br>胡博靖的个人博客：<a href="http://hubojing.coding.me/hubojing" target="_blank" rel="external">http://hubojing.coding.me/hubojing</a><br>胡博靖的个人博客：<a href="http://hubojing.github.io">http://hubojing.github.io</a><br>Both right!<br><strong>外网用github，内网用coding。</strong><br><a id="more"></a></p>
<h2 id="coding创建新项目"><a href="#coding创建新项目" class="headerlink" title="coding创建新项目"></a>coding创建新项目</h2><p><img src="http://7xrn7f.com1.z0.glb.clouddn.com/16-4-6/98344138.jpg" alt="创建页面"><br>项目名称最好是和你的用户名相同，这样直接访问hubojing.coding.me即可，否则需要访问hubojing.coding.me/set-name。</p>
<p><img src="http://7xrn7f.com1.z0.glb.clouddn.com/16-4-6/74537725.jpg" alt="ssh获取"><br>复制后写入repo中。具体看下一步。</p>
<h2 id="config文件配置"><a href="#config文件配置" class="headerlink" title="config文件配置"></a>config文件配置</h2><p>hexo根目录文件_config.yml修改配置如下：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">deploy:</div><div class="line">  <span class="built_in">type</span>: git</div><div class="line">  repo: </div><div class="line">        coding: git@github.com:hubojing/hubojing.github.io.git</div><div class="line">        github: git@git.coding.net:hubojing/hubojing.git</div></pre></td></tr></table></figure></p>
<h2 id="ssh设置"><a href="#SSH设置" class="headerlink" title="SSH设置"></a>SSH设置</h2><p>这里SSH设置和github类似。我直接用的部署github时生成的SSH。<br><img src="http://7xrn7f.com1.z0.glb.clouddn.com/16-4-6/370752.jpg" alt="coding中ssh设置"><br>打开id_rsa.pub文件，复制全部内容，填写到SSH公钥一栏中，名称自定。完成后点击“添加”即可。<br><img src="http://7xrn7f.com1.z0.glb.clouddn.com/16-4-6/56664564.jpg" alt="hexo根目录下"></p>
<p>添加后，在git bash命令输入(我是在hexo根目录下bash here)：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ssh -T git@git.coding.net</div></pre></td></tr></table></figure></p>
<p>它会弹出一个警告，是否允许操作，输入yes就可以。<br>接着会询问你设置的密码，如果之前部署github时设置了，就输入密码，输入时频幕上是看不到任何反应的，但当你正确输入并回车后，它会显示：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Coding.net Tips : [Hello ! You<span class="string">'ve conected to Coding.net by SSH successfully! ]</span></div></pre></td></tr></table></figure></p>
<p>这表示你的SSH设置成功了！</p>
<h2 id="开启pages服务"><a href="#开启Pages服务" class="headerlink" title="开启Pages服务"></a>开启Pages服务</h2><p><strong>最后一步了！</strong><br>在hexo根目录下，<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">cd</span> <span class="built_in">source</span></div><div class="line">touch Staticfile  <span class="comment">#名字必须是Staticfile</span></div></pre></td></tr></table></figure></p>
<p>coding.net需要此文件来作为以静态文件部署的标志，就是说看到Staticfile就知道按照静态文件来发布。</p>
<p><img src="http://7xrn7f.com1.z0.glb.clouddn.com/16-4-6/93624849.jpg" alt="Pages服务"><br><strong>注意：Pages服务分支填master！因为之前配置的分支是master。否则你将看到404 Not Found！</strong>（我不会告诉你我就是这样试了好几遍才找到原因……）</p>
<hr>
<p><strong>OK!All have done!Congratulations!</strong><br>现在快去看看吧！<a href="http://hubojing.coding.me" target="_blank" rel="external">胡博靖的技术博客</a><br>欢迎在github上关注我：<a href="https://github.com/hubojing" target="_blank" rel="external">hubojing</a></p>
<h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p><a href="http://www.jianshu.com/p/7ad9d3cd4d6e" target="_blank" rel="external">hexo干货系列（四）</a><br><a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">hexo官网文档规范</a></p>
<hr>
<p><span id="busuanzi_container_page_pv"><br>本文已被阅读 <span id="busuanzi_value_page_pv"></span> 次。感谢您的点击！<br></span></p>
]]></content>
      
        <categories>
            
            <category> 互联网 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> blog </tag>
            
            <tag> hexo </tag>
            
            <tag> 优化 </tag>
            
            <tag> 教程 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[PPT动画制作之自定义动画]]></title>
      <url>http://hubojing.github.io/2016/03/22/PPT%E5%8A%A8%E7%94%BB%E5%88%B6%E4%BD%9C%E4%B9%8B%E8%87%AA%E5%AE%9A%E4%B9%89%E5%8A%A8%E7%94%BB/</url>
      <content type="html"><![CDATA[<h1 id="323更新"><a href="#3-23更新" class="headerlink" title="3.23更新"></a>3.23更新</h1><p>昨天写完总觉得最终效果差点什么，后来发现是文字涌入时缺少了旋转效果。<br>现修改完整。<br>附上最新GIF图：（可看出差异）<br><img src="http://i4.tietuku.cn/63240837be6edf98.gif" alt="修改后"><br><a id="more"></a></p>
<hr>
<p>话不多说，先看效果：<br><img src="http://i13.tietuku.cn/b83ea174d690471a.gif" alt="闪烁背景和文字涌入特效"></p>
<p>该动画分为两部分：<strong>闪烁背景+文字涌入特效</strong></p>
<h2 id="闪烁背景"><a href="#闪烁背景" class="headerlink" title="闪烁背景"></a>闪烁背景</h2><p><strong> 步骤：</strong></p>
<h3 id="1改个色"><a href="#1-改个色" class="headerlink" title="1.改个色"></a>1.改个色</h3><p>（背景色）</p>
<h3 id="2添个形"><a href="#2-添个形" class="headerlink" title="2.添个形"></a>2.添个形</h3><p>（用基本形状添加）</p>
<h3 id="3改设置"><a href="#3-改设置" class="headerlink" title="3.改设置"></a>3.改设置</h3><p>（形状外框透明、选择颜色）</p>
<h3 id="4复个制"><a href="#4-复个制" class="headerlink" title="4.复个制"></a>4.复个制</h3><p>（多次复制，铺满画布）</p>
<h3 id="5改大小"><a href="#5-改大小" class="headerlink" title="5.改大小"></a>5.改大小</h3><p>（不能每个形状一样大，那样闪烁不自然）</p>
<h3 id="6改透度"><a href="#6-改透度" class="headerlink" title="6.改透度"></a>6.改透度</h3><p>（使闪烁更自然）</p>
<h3 id="7添动画"><a href="#7-添动画" class="headerlink" title="7.添动画"></a>7.添动画</h3><p>（全选统一添加“渐变”动作）</p>
<h3 id="8调时间"><a href="#8-调时间" class="headerlink" title="8.调时间"></a>8.调时间</h3><p>（显示高级进程表，调整时长，不要都从最开始出现；从“之前”开始）</p>
<p><strong>完成。</strong></p>
<hr>
<h2 id="文字涌入特效"><a href="#文字涌入特效" class="headerlink" title="文字涌入特效"></a>文字涌入特效</h2><p><strong>步骤：</strong></p>
<h3 id="1抠个字"><a href="#1-抠个字" class="headerlink" title="1.抠个字"></a>1.抠个字</h3><p>（用PS写几个需要的文字，依次用魔棒选中每个文字，同时复制粘贴到另一图层，然后用<strong>裁剪</strong>工具剪到合适大小，另存）</p>
<h3 id="2插个图"><a href="#2-插个图" class="headerlink" title="2.插个图"></a>2.插个图</h3><h3 id="3复个制"><a href="#3-复个制" class="headerlink" title="3.复个制"></a>3.复个制</h3><p>（3-4次）</p>
<h3 id="4围一圈"><a href="#4-围一圈" class="headerlink" title="4.围一圈"></a>4.围一圈</h3><h3 id="5调大小"><a href="#5-调大小" class="headerlink" title="5.调大小"></a>5.调大小</h3><h3 id="6添动画"><a href="#6-添动画" class="headerlink" title="6.添动画"></a>6.添动画</h3><p>（外围一圈加退出中的“缩放”，缩小到屏幕中心。中间加“渐变式缩放”，下面文字“飞入”和强调里的“陀螺旋”）</p>
<h3 id="7调时间"><a href="#7-调时间" class="headerlink" title="7.调时间"></a>7.调时间</h3><p>（时间控制好，先缩放，在渐变式缩放，最后飞入）</p>
<p><strong>完工。</strong></p>
<hr>
<p><span id="busuanzi_container_page_pv"><br>本文已被阅读 <span id="busuanzi_value_page_pv"></span> 次。感谢您的点击！<br></span></p>
]]></content>
      
        <categories>
            
            <category> 互联网 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> PPT动画 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[显示技术蹭课笔记 | Display Techique Learning Note]]></title>
      <url>http://hubojing.github.io/2016/03/17/%E6%98%BE%E7%A4%BA%E6%8A%80%E6%9C%AF%E8%B9%AD%E8%AF%BE%E7%AC%94%E8%AE%B0/</url>
      <content type="html"><![CDATA[<p><div align="left"><br><img src="http://img10.360buyimg.com/popWaterMark/g13/M02/09/0C/rBEhUlKdmzIIAAAAAAA7TyA5YywAAGS_wDaFdAAADtn918.jpg" width="300" height="180" alt="配图" style="float:right;"></div></p>
<p><strong>蹭课，科普为主。顺便复习一些基础电路知识。</strong><br><strong>I am not a student of this class but want to listen to the lecture for popularization of science to myself.By the way reviewing some of the basic circuit knowledge.</strong><br>给这篇文章写英译好辛苦……<br>It is hard to write English translation for this article.<br><strong>肖大大图书镇楼！</strong><br><strong>Uncle Xiao’s book is superior!</strong></p>
<p> <br><a id="more"></a> </p>
<blockquote>
<p>2016.5.20 更新 Update</p>
</blockquote>
<h1 id="显示技术实验部分-experimental-part"><a href="#显示技术实验部分-Experimental-part" class="headerlink" title="显示技术实验部分 Experimental part"></a>显示技术实验部分 Experimental part</h1><p>学会了怎么把电路图和实物电路联系起来。学会了就好简单……果然授人以鱼不如授人以渔！<br>Learnt how to link circuit diagram to the phhysical diagram.It’s easy enough.Give a man a fish and you feed him for a day.Teach him how to fish and you feed him for a lifetime.<br>但不敢去测量上万伏的高压……为自身的局限性感到难过。<br>But I dare not to measure the high pressure of tens of thousands of volts.I feel terrible for my own limitation.</p>
<h1 id="几个名词-several-noums"><a href="#几个名词-Several-noums" class="headerlink" title="几个名词 Several noums"></a>几个名词 Several noums</h1><h2 id="声表面波滤波器-surface-acoustic-wave-filter"><a href="#声表面波滤波器-Surface-acoustic-wave-filter" class="headerlink" title="声表面波滤波器 Surface acoustic wave filter"></a>声表面波滤波器 Surface acoustic wave filter</h2><p>声表面波滤波器(SAWF，surface acoustic wave filter)是利用石英、铌酸锂、钛酸钡晶体具有压电效应的性质做成的。所谓压电效应，即是当晶体受到机械作用时，将产生与压力成正比的电场的现象。具有压电效应的晶体，在受到电信号的作用时，也会产生弹性形变而发出机械波（声波），即可把电信号转为声信号。由于这种声波只在晶体表面传播，故称为声表面波。<br>SAWF uses the piezoelectric effect property of quartz,lithium niobate,barium titanate.As for piezoelectric effect,when the crystal is mechanical functioned,it will produce the electric field which is directly proportional to the pressure.Crystal which has the piezoelectric effect,when the electrical signal is added,will generate a elastic deformation and send a mechanical wave(sonic wave),so it converts electrical signal to acoustic signal.It is called surface acoustic wave for this wave only transmit on the crystal surface.</p>
<h2 id="行可变电容-line-variable-capacitor"><a href="#行可变电容-Line-variable-capacitor" class="headerlink" title="行可变电容 Line variable capacitor"></a>行可变电容 Line variable capacitor</h2><p><img src="http://7xray0.com1.z0.glb.clouddn.com/16-5-20/33612917.jpg" width="600" height="400" alt="行可变电容"></p>
<h2 id="行可变电感-row-variable-inductor"><a href="#行可变电感-Row-variable-inductor" class="headerlink" title="行可变电感 Row variable inductor"></a>行可变电感 Row variable inductor</h2><p><img src="http://www.liheng-dg.cn/uploads/allimg/140221/1-14022115052H18.png" width="600" height="400" alt="行可变电感"></p>
<h2 id="中周-medium-cycle-transformer"><a href="#中周-Medium-cycle-transformer" class="headerlink" title="中周 Medium cycle transformer"></a>中周 Medium cycle transformer</h2><p>电视中周：电视机里的中周标准称呼是中频变压器。<br>The standard name is medium cycle transformer.<br><img src="http://img.qy6.com/new5/szvena/1313633487.jpg" width="600" height="400" alt="中周"></p>
<p>电路图上，三极管外带虚线的圆圈是指带散热的三极管，同时接地表屏蔽。<br>On the circuit diagram,the dotted line with the circle triode refers to the triode with heat pipe,which is at earth potential to shield.</p>
<h1 id="实验现场"><a href="#实验现场" class="headerlink" title="实验现场"></a>实验现场</h1><p><img src="http://7xray0.com1.z0.glb.clouddn.com/16-5-20/58196995.jpg" width="400" height="250" alt="电路图"> <img src="http://7xray0.com1.z0.glb.clouddn.com/16-5-20/69333137.jpg" width="400" height="250" alt="故障示教板"> <img src="http://7xray0.com1.z0.glb.clouddn.com/16-5-20/29028249.jpg" width="400" height="250" alt="实验"> （不配四张图，强迫症不要打我哟~）</p>
<blockquote>
<p>2016.5.17 更新 Update<br>大部分资料来自维基百科。<br>Most of the information comes from Wikipedia.</p>
</blockquote>
<h1 id="平板显示器-flat-panel-display"><a href="#平板显示器-Flat-panel-display" class="headerlink" title="平板显示器 Flat panel display"></a>平板显示器 Flat panel display</h1><h2 id="简介-brief-introduction"><a href="#简介-Brief-introduction" class="headerlink" title="简介 Brief introduction"></a>简介 Brief introduction</h2><p>平板屏幕包含多种科技，使显示器（video display）比传统电视机（traditional television）或显示器（通常由阴极射线管制成）更加轻薄，厚度通常小于4英寸（100 mm）。<br>Flat panel display includes many technologies,which makes video display lighter than traditional television or display(usually made of cathode ray tube),and thickness is usually less than 4 inches.</p>
<h2 id="种类-type"><a href="#种类-Type" class="headerlink" title="种类 Type"></a>种类 Type</h2><p>DLP (数位光处理) Digital light processing<br>等离子显示器 Plasma panel display<br>液晶显示器（LCDs） Liquid crystal display<br>薄膜晶体管液晶显示器（TFT-LCDs） Thin film transistor liquid crystal display<br>有机发光二极管显示器（OLEDs） Organic light emitting diode display<br>发光二极管显示器（LED） Light-emitting diode display<br>电致发光显示器（ELDs） Electroluminescent display<br>表面传导电子发射显示器（SEDs） Surface conduction electron emission display<br>场发射显示器（FEDs）（ 纳米-发射显示器（NEDs）） Field emission display</p>
<p>名字多么洋气~<br>The names has foreign flavour~</p>
<p>这张图有点意思~<br>This picture is kind of interesting~<br><img src="http://7xray0.com1.z0.glb.clouddn.com/16-5-17/60641952.jpg" alt="显示器"></p>
<h1 id="crt显示器-crt-display"><a href="#CRT显示器-CRT-display" class="headerlink" title="CRT显示器 CRT display"></a>CRT显示器 CRT display</h1><h2 id="简介-brief-introduction"><a href="#简介-Brief-introduction-1" class="headerlink" title="简介 Brief introduction"></a>简介 Brief introduction</h2><p>阴极射线管（Cathode ray tube，缩写：CRT，又称“显像管”、布劳恩管）是一种用于显示系统的物理仪器，曾广泛应用于示波器、电视机和显示器上。它是利用阴极电子枪发射电子，在阳极高压的作用下，射向萤光屏，使萤光粉发光，同时电子束在偏转磁场的作用下，作上下左右的移动来达到扫描的目的。早期的阴极射线管仅能显示光线的强弱，展现黑白画面。而彩色阴极射线管具有红、绿色和蓝色三支电子枪，三支电子枪同时发射电子打在屏幕玻璃上磷化物上来显示颜色。<br>由于它笨重、耗电且较占空间，2000年代起几乎被轻巧、省电且省空间的液晶显示器取代。阴极射线管的市场剩下极重视色彩表现及低温环境下等特殊用途。<br>Cathode ray tube,is a physical instrument which uses to display system.It used to be applied to oscilloscope,TV and display.It uses the cathode electron gun for electron emission.Under the action of anode high voltage,it emits to the screen,which makes powder luminesce.At the same time, the electron beam moves up and down to reach the purpose of scanning by the action of the deflection magnetic field.Early cathode ray tube can only show the intensity of light,and to show black and white picture.Color cathode ray tube have red, green and blue electron guns, and this three electron guns emit electrons to hit the glass screen’s phosphides to show color.<br>Because of its bulky, power consumption and space waste,light, power saving and space saving LCD monitor was used in the 2000s instead.A cathode ray tube market left pole attached color performance and low temperature environment and other special purposes.</p>
<p><strong>CRT在高精尖领域仍扮演着重要角色。</strong><br><strong>CRT still plays an important role in the high-tech field.</strong></p>
<h1 id="液晶显示器-liquid-crystal-display"><a href="#液晶显示器-liquid-crystal-display" class="headerlink" title="液晶显示器 liquid-crystal display"></a>液晶显示器 liquid-crystal display</h1><h2 id="简介-brief-introduction"><a href="#简介-Brief-introduction-2" class="headerlink" title="简介 Brief introduction"></a>简介 Brief introduction</h2><p>液晶显示器（英语：liquid-crystal display，缩写：LCD）为平面薄型的显示设备，由一定数量的彩色或黑白像素组成，放置于光源或者反射面前方。液晶显示器功耗低，因此倍受工程师青睐，适用于使用电池的电子设备。<br>Liquid-crystal display is the flat panel display device,which consists of a number of color or black and white pixels,and place in the light source or in front of the reflecting surface.</p>
<h2 id="显示原理-revelation-principle"><a href="#显示原理-Revelation-principle" class="headerlink" title="显示原理 Revelation principle"></a>显示原理 Revelation principle</h2><p>在不加电压下，光线会沿着液晶分子的间隙前进而转折90度，所以光可通过。但加入电压后，光顺着液晶分子的间隙直线前进，因此光被滤光板所阻隔。（让我想到偏振……）<br>液晶是具有流动特性的物质，所以只需外加很微小的力量即可使液晶分子运动，以最常见普遍的向列型液晶为例，液晶分子可轻易的借着电场作用使得液晶分子转向，由于液晶的光轴与其分子轴相当一致，故可借此产生光学效果，而当加于液晶的电场移除消失时，液晶将借着其本身的弹性及黏性，液晶分子将十分迅速的恢复原来未加电场前的状态。<br>Without voltage, the light will move along the gap between the liquid crystal molecules and turn 90 degrees, so the light can pass.But after the voltage is added,light goes along the liquid crystal molecules of the gap straight forward,so the light is blocked by the filter board. (Let me think of polarization.)</p>
<h1 id="等离子显示器-plasma-display-panel"><a href="#等离子显示器-Plasma-Display-Panel" class="headerlink" title="等离子显示器 Plasma Display Panel"></a>等离子显示器 Plasma Display Panel</h1><h2 id="简介-brief-introduction"><a href="#简介-Brief-introduction-3" class="headerlink" title="简介 Brief introduction"></a>简介 Brief introduction</h2><p>等离子显示器（Plasma Display Panel）又称为电浆显示屏，是一种平面显示屏幕，光线由两块玻璃之间的离子，射向磷质而发出。与液晶显示器不同，放出的气体并无水银成分，而是使用惰性气体氖及氙混合而成，这种气体是无害气体。<br>等离子显示器甚为光亮（1000 lx或以上），可显示更多种颜色，也可制造出较大面积的显示屏，最大对角可达381厘米（150吋）。等离子显示屏的对比度亦高，可制造出全黑效果，对观看电影尤其适合。显示屏厚度只有6厘米，连同其他电路板，厚度亦只有10厘米。<br>Plasma display panel is a flat display screen.Light is emitted to phosphorous by the ion between the two classes.Unlike liquid crystal display,the gas released has no mercury,it mixed inert gas such as neon,xenon and so on,which are harmless.<br>The plasma display is very bright (1000 LX or above),and it can show more colors,it also can be made big screen,which the maximum diagonal up to 381 cm (150 inches).The contrast is high, and it can create a full black effect,especially suitable for watching movies.The thickness of screen is only 6 cm,combined with other circuit boards, the thickness is only 10 cm.</p>
<h2 id="原理-principle"><a href="#原理-Principle" class="headerlink" title="原理 Principle"></a>原理 Principle</h2><p>等离子的发光原理是在真空玻璃管中注入惰性气体或水银蒸气，加电压之后，使气体产生等离子效应，放出紫外线，激发荧光粉而产生可见光，利用激发时间的长短来产生不同的亮度。等离子显示器中，每一个像素都是三个不同颜色（三原色）的等离子发光体所产生的。由于它是每个独立的发光体在同一时间一次点亮的，所以特别清晰鲜明。等离子显示器的使用寿命约5~6万个小时。随着使用的时间的增加，其亮度会衰退。<br>The principle of plasma luminescence is to inject inert gas or mercury vapor into a vacuum glass tube.After the voltage is added, the gas is produced by the plasma effect, the ultraviolet ray is emitted, and the fluorescent powder is excited to generate visible light, and the excitation time is used to generate different brightness.In the plasma display, each pixel has three different colors (RGB) of the plasma generated by the luminous body.Since each individual light body is litted at the same time, so it is clear and bright.The service life of the plasma display is about 5~6 ten thousand hours. With the increase of the use of time, the brightness of the plasma display will decline.</p>
<p><strong>【区别】</strong>等离子显示器并不是液晶显示器。后者的显示器虽然也很轻薄，但是用的技术却是大不相同。液晶显示器通常会使用一到两个大型萤光灯或是LED当作其背光源，在背光源上面的液晶面板则是利用遮罩的原理让显示器显示出不同颜色。<br><strong>【Difference】</strong>Plasma display is not liquid crystal display.Although the latter is also very thin,the technology is different.Liquid crystal display usually use one or two large fluorescent lamp or LED as the backlight,above the backlight to the LCD panel using mask principle to show different colors.</p>
<h1 id="云电视-cloud-tv"><a href="#云电视-Cloud-TV" class="headerlink" title="云电视 Cloud TV"></a>云电视 Cloud TV</h1><h2 id="简介-brief-introduciton"><a href="#简介-Brief-introduciton" class="headerlink" title="简介 Brief introduciton"></a>简介 Brief introduciton</h2><p>云电视是应用云计算、云存储技术的电视产品，是云设备的一种。通俗地讲，就是用户不需要单独再为自家的电视配备所有互联网功能或内容，将电视连上网络，就可以随时从外界调取自己需要的资源或信息，比如说，可以在云电视里安装使用各种即时通讯软件，在看电视的同时，进行社交、办公等等。<br>Cloud TV,which is the application of cloud computing and cloud storage technology,is a kind of cloud devices.Generally speaking,users do not need a separate device for their own television equipped with all Internet function or information.After the TV is connected to the network,you can get what you want at any times.For example, you can install and use a variety of instant messaging software, while watching TV at the same time, social, office and so on.</p>
<h1 id="3d显示器-3d-display"><a href="#3D显示器-3D-display" class="headerlink" title="3D显示器 3D display"></a>3D显示器 3D display</h1><h2 id="简介-brief-introduciton"><a href="#简介-Brief-introduciton-1" class="headerlink" title="简介 Brief introduciton"></a>简介 Brief introduciton</h2><p>传统的3D电影在荧幕上有两组图像（来源于在拍摄时的互成角度的两台摄影机），观众必须戴上偏光镜才能消除重影（让一只眼只接受一组图像），形成视差（parallax），产生立体感。利用自动立体显示（AutoSterocopic）技术，即所谓的“真3D技术”，你就不用戴上眼镜来观看立体影像了。这种技术利用所谓的“视差栅栏”，使两只眼睛分别接受不同的图像，来形成立体效果。<br>平面显示器要形成立体感的影象，必须至少提供两组相位不同的图像。其中，快门式3D技术和不闪式3D技术是如今显示器中最常使用的两种。<br>The traditional 3D movie has two sets of images on the screen (come from two cameras that are placed in angle difference),so viewers have to put on a polarizing lens to eliminate the ghost(so that a eye only accept a set of images), and form a parallax to generate a sense of three-dimensional.The use of automatic three-dimensional display (AutoSterocopic) technology, that is, the so-called “true 3D technology”, you do not have to wear glasses to watch the stereo image.This technology uses the so-called “parallax barrier”, so that the two eyes receive different images to form a three-dimensional effect.</p>
<h1 id="oled显示器-oled-display"><a href="#OLED显示器-OLED-display" class="headerlink" title="OLED显示器 OLED display"></a>OLED显示器 OLED display</h1><h2 id="简介-brief-introduction"><a href="#简介-Brief-introduction-4" class="headerlink" title="简介 Brief introduction"></a>简介 Brief introduction</h2><p>OLED<br>有机发光二极管又称为有机电激光显示（Organic Light-Emitting Diode，OLED）。OLED显示技术具有自发光的特性，采用非常薄的有机材料涂层和玻璃基板，当有电流通过时，这些有机材料就会发光，而且OLED显示屏幕可视角度大，并且能够节省电能。<br>对于有机电激发光器件，我们可按发光材料将其分为两种: 小分子OLED和高分子OLED（也可称为PLED）。它们的差异主要表现在器件的制备工艺不同：小分子器件主要采用真空热蒸发工艺，高分子器件则采用旋转涂覆或喷墨工艺。<br>有机电激发光二极管由于同时具备自发光，不需背光源、对比度高、厚度薄、视角广、反应速度快、可用于挠曲性面板、使用温度范围广、构造及制程较简单等优异之特性，被认为是下一代的平面显示器新兴应用技术。<br>Organic Light-Emitting Diode has the characteristic of self luminescence,which uses a thin organic material coating and glass substrate.When the current pass,these material will light.Also,OLED display screen viewing angle is big, and it can save electric energy.</p>
<h2 id="发光原理-principle-of-luminescence"><a href="#发光原理-Principle-of-luminescence" class="headerlink" title="发光原理 Principle of luminescence"></a>发光原理 Principle of luminescence</h2><p>OLED发光的颜色取决于有机发光层的材料，故厂商可由改变发光层的材料而得到所需之颜色。有源阵列有机发光显示屏具有内置的电子电路系统，因此每个像素都由一个对应的电路独立驱动。OLED具备有构造简单、自发光不需背光源、对比度高、厚度薄、视角广、反应速度快、可用于挠曲性面板、使用温度范围广等优点，技术提供了浏览照片和视频的最佳方式而且对相机的设计造成的限制较少。<br>The color of the OLED depends on the material of the organic light emitting layer, so the manufacturer can obtain the required color by changing the material of the light emitting layer.The active array organic light emitting display screen has a built-in electronic circuit system, so each pixel is driven by a corresponding circuit.The OLED has the advantages of simple structure, no need of back light source, high contrast, thin thickness, wide viewing angle, quick reaction speed, and can be used for the flexible panel and wide temperature range,and technology offers the best way to view photos and videos and to little limit to the design of the camera.</p>
<h1 id="户外大屏幕显示器-outside-big-screen-display"><a href="#户外大屏幕显示器-Outside-big-screen-display" class="headerlink" title="户外大屏幕显示器 Outside big screen display"></a>户外大屏幕显示器 Outside big screen display</h1><p>这个范围就有点大啊……<br>This range is broad~<br>主要说来，CRT、LCD、DLP、LCOS、GLV用的较多。<br>Generally speaking,CRT、LCD、DLP、LCOS、GLV are used a lot.</p>
<blockquote>
<p>2016.3.17更新 update</p>
<h1 id="记忆比较深的知识-knowledge-deeply-remember"><a href="#记忆比较深的知识-Knowledge-deeply-remember" class="headerlink" title="记忆比较深的知识 Knowledge deeply remember"></a>记忆比较深的知识 Knowledge deeply remember</h1><p>1.白光透过棱镜分为紫、蓝、青、绿、黄、橙、红。波长依次减少。<br>White light through the prism is divided into purple, blue, green, green, yellow, orange, red.The wavelength is reduced in turn.</p>
</blockquote>
<p>2.绝对黑体是指既不反射也不透射，完全吸收入射辐射的物体。（黑洞……）<br>The absolute black body is an object that absorbsthe incident radiation,neither reflected nor transmitted.(black hole~)</p>
<p>3.色温是表示光源光色的一种尺度。<strong>不是光源实际温度！只是一种光谱特性参量！</strong><br>Color is a representation of the actual temperature scale.<strong>Not real temperature!Just a Spectral characteristic parameter!</strong><br>例：电视屏幕是室温20℃（300K左右），但显像管显示的白颜色对应的是太阳光的那种白，那么色温是4874K！不要说温度有那么高……否则电视早就烧成灰了……<br>For example,the temperature of the TV screen is 20 ℃（about 200K）,but the white color is corresponding to the white sunlight,which color temperature is 4874K!Never to say it~if it is so hot,your TV is firing ash already.</p>
<p>4.人眼对绿色最敏感！从光谱光效率图看出……所以红绿灯用绿色，显眼啊。<br>Our eyes is sensitive to green!You can see it in spectral optical efficiency diagram.So this is why traffic light uses green color.</p>
<p>5.正好使人感到不闪烁的刷新频率称为临界闪烁频率。为45.8HZ。只要高于它，人眼就觉得不闪。<br>Make people feel the refresh rate does not flicker is called the critical flicker frequency,which is 45.8HZ.Only over it,we feel comfortable.<br>所谓市面上的不闪的电视，就是频率稍高一些的电视，如70HZ。因为部分人群的人眼敏感度较高，所以50HZ也许还是感觉到闪烁，这类人群需要不闪电视。但普通人并不需要。<br>The so-called “not flash television” in the market is a slightly higher frequency of television,70HZ,for instance.Because some people are more sensitive to it, they need “not flash TV”.But it isn’t needed in common.</p>
<p>6.没必要追求4K的分辨率指标。人眼分辨力有限，所谓分辨，是指人眼能看清的扫描的两行。（美国比中国的扫描行数还低来着……）人眼极限就只能看清大约1K左右（这样说来1080P最好咯），高于这个指标人眼就分不清两行了，所以该指标更高便显得意义不大。4K代表我们有能力做到这么清晰，但日常我们是否需要，则并不见得。所以，往往并不需要追求最高的指标，够用就好。（买电脑一个理）<br>It’s not necessary to persuit 4K resolution index for human eye resolution is limited.The resolution is the line we can see clearly.(The index in America is lower than that of China)Our eye resolution limit is to see about 1k(1080P maybe the best).If the index higher than this can not we distinguish the lines,so the higher index seems little meaning.4K means we have the ability to do it,but we don’t need it in daily life.Therefore,is not as high index as possible,but enough is alright(Buy a computer is the same way).</p>
<p>7.看电视最佳距离：电视频幕高度的4倍。（我回家特地量了一下距离……）<br>The best distance to watch TV is four times the height of the TV screen.(I measure the size at home specifically~)</p>
<p>8.CRT显像管上加了上万伏高压，所以开启和关闭电视时常有静电。（我小时候还特喜欢那种有点漂浮的感觉……）<br><strong>修电视技巧get</strong>：如果开机关机时仍能感觉到静电，那么说明显像管是好的！（来自我们修了三千台电视的super肖老师语录……哦……少碰静电，毕竟几万伏呢……小心白血病……）<br>CRT picture tube is added tens of thousands of volts,so you can feel the static electricity when open or close power supply.(I like the floating feel when I was a child~)<br><strong>KEY TO REPAIR TV</strong>If you can feel the static electricity when open or close power supply,it is obvious that the picture tube is well.(From our super Mr.Xiao’s quotations<del>well,do not touch the static electricity as little as possible.Pay attention to leukemia,it is tens of thousands of volts after all</del>)</p>
<p>9.彩色三要素：亮度、色调、色饱和度。色调与色饱和度合称为色度。<br>Three elements in color,brightness, tinge, color saturation.Tinge and color saturation are called as chromaticity.</p>
<p>10.三基色原理 The principle of three primary colors<br>（1）所有颜色可以由这三种基色按比例混合得到。（合成性）<br> (1)All colors can be made from the three primary colors mixed in proportion (synthetic).<br>（2）任意一种彩色可分解为三种基色。（分解性）<br> (2)Any color can be decomposed into three primary colors (decomposition).<br>（3）混合的亮度等于各基色亮度之和。（叠加性）<br> (3)The mixed brightness is equal to all primary colors.(addition).<br>（4）混合比例决定色调和色饱和度。（色度决定性）<br> (4)The mix proportions determine tinge and color saturation.(chromaticity determination)</p>
<p>11.三基色 Three primary colors<br>R、G、B.<br>记得小时候还学了个颜料的三原色……于是百度一下：红、黄、青<br>Always remember that there exists primary colors of pigment~so I search it.It is red,yellow and cyan.<br><img src="http://i13.tietuku.cn/bbdb0a9ed059f7db.png" alt="上图左侧为色光三原色，右侧为美术三原色"></p>
<p>12.一个公式（亮度方程） A fomula<br>Y=0.30R+0.59G+0.11B<br>例：1R+2G+2B=浅青(light cyan)<br>Why?<br>∵1R+1G+1B=白(white)<br>1G+1B=青(cyan)<br>白+青=浅青(white+cyan=light cyan)<br>这个算法莫名想笑……<br>This idea makes me inexplicably laugh~</p>
<p>13.互补色：加起来为白色的<strong>两种</strong>颜色。<br>Complementary colors,the <strong>two</strong>colors mixed up in white color. </p>
<p>14.15625！15625！15625！重要的数字说三遍！Important number should be repeated three times!<br>行扫描的频率……听到这个数字要很快的反应过来……就像3.1415926一样……<br>正程52us，逆程12us，全程64us，即行扫描周期。<br>我国现行广播电视标准规定：帧数为25HZ，一帧图像分625行传送。所以行扫描频率25X625=15625HZ……就是这样来的……<br>It is line scan frequency~everyone of us should reflect on the meaning as 3.1415926~<br>Positive trace is 52us,negative trace is 12us,the whole trace is 64us,and it is just the line scan cycle.<br>The existing provisions of broadcast standards in China,frames is 25HZ,and an image is divided into 625 transmission line.So,the line scan frequency is 25X625=15625HZ,that’s is.</p>
<p>15.对比度 Contrast<br>我之前对这个的定义确实不清楚的说……就连PS上的对比度也是怎么看着舒服怎么调……<br>对比度，通俗的讲，就是，实际的蓝天和白云的颜色，哦，是这么蓝和这么白，10000:100好了，反映到电视上，还是那么蓝和那么白！就100:1好了……让我想到比例尺。还是原来的配方，还是熟悉的味道！<br>I didn’t get it clear before,and when I used PS,the contrast is adjusted to the degree that a image how to make me comfortable.Contrast, popular speaking, that is, the actual blue sky and white clouds of color,the component of blue and white is 10000:100,for example,which reflect to TV is 100:1,just like a scale.The original formula and the similar taste!</p>
<p>16.黑白全电视信号特指视频信号。<br>Black and white television signal refers to the video signal.</p>
<p>17.基色信号-亮度信号=色差信号<br>Primary signal - luminance signal = color difference signal</p>
<p>18.绿色幅值小，易受干扰，一般传送红、蓝信号。<br>green has small  amplitude,and it is vulnerable to be interfered,it transfers red and blue signal in general.</p>
<p>19.<strong>白！黄！青！绿！紫！红！蓝！黑！</strong><br><strong>白！黄！青！绿！紫！红！蓝！黑！</strong><br><strong>白！黄！青！绿！紫！红！蓝！黑！</strong><br><strong>WHITE!YELLOW!CYAN!GREEN!PURPLE!RED!BLUE!BLACK!</strong><br>标准彩条测试信号。常识背背背！<br>It is the standard color test signal.We should recite it as common sense.</p>
<p>20.一个记住的电路 A curcuit to remember<br><img src="/images/3.jpg" alt="亮度调节电路和对比度调节电路"><br>放大电路……如此的熟悉……<br>So familiar with it.<br>Rw1滑动调节对比度，Rw2滑动调节亮度！<br>Rw1 to adjust contrast,and Rw2 to adjust brightness!<br>感谢无私的好友把她上学期的书借给了我！<br>Thanks my selfless friend for sending her books to me！</p>
<p>21.指标如果要做到最顶级首选CRT。为什么我们现在都用薄的液晶啊什么的，因为<strong>日常使用不需要很高的指标</strong>，并且方便使用。<br>If you want to achieve the top indicators,CRT is preferred.You may ask why we use today is liquid crystal,the reason is <strong>Top indicators are not needed in daily use</strong>,and it is convinient.</p>
<p>22.<img src="/images/4.jpg" alt="阻尼式行输出级典型电路"><br>铅笔写的是我的笔记，乱max……<br>The writing is my note,you can ignore it~<br>几个专有名词要知道：阻尼二极管、逆程电容、校正电容、行输出管（行管）、行输出变压器（高压包）、行推动变压器<br>Several professional noums,Damping diode, reverse pass capacitor, correction capacitor, line output tube (line tube), line output transformer (high voltage package), line drive transformer.<br>扩展：硅堆、桥堆<br>Extension: silicon stack, bridge</p>
<h1 id="段子或注意的地方-something-fun-or-details-it-may-lost-its-fun-when-translated-into-english"><a href="#段子或注意的地方-Something-fun-or-details-It-may-lost-its-fun-when-translated-into-English" class="headerlink" title="段子或注意的地方 Something fun or details (It may lost its fun when translated into English)"></a>段子或注意的地方 Something fun or details (It may lost its fun when translated into English)</h1><p>1.“B光源（色温4874K）近似为中午太阳光的光谱。”类似说法都不够准确，但经典教材上往往都采取这样模糊的说法。</p>
<p>2.用点燃的报纸烘烤灯丝……是为了激发电子发射。有个问题是灯坏了还是什么的，总之就是不行→_→因为激发不了电子发射。（写此文时突然短路……）</p>
<p>3.有个单位叫熙提……它的缩写………………自行百度或查书吧。（保持优雅）</p>
<p>4.隔壁的王叔叔……</p>
<p>5.南京的声音优雅的车站播音员……强调音色的问题……</p>
<p>6.列宁……（原名弗拉基米尔·伊里奇·乌里扬诺夫）（我竟然还百度了一下……）</p>
<p>7.小日本……</p>
<p>偏题了……段子很多就不说了……注意的问题是重点！咳咳~</p>
<hr>
<p>回看本文…………简直就是帮他们要考试的勾了一遍重点（除了一些公式和计算……）我真是大写的可爱啊！啊。。。<br>I AM CUTE~<br>P.S.不吹不黑  上课就要像这样愉悦才是好的课堂  快乐学习不是梦~<br>Pleasant classroom atmosphere is a excellent class.Happy learning is not a dream.<br>真是一趟愉快的蹭课之旅~<br>It was a pleasant trip to the class.<br><strong>感谢老师 感谢校园 感谢这个和平的时代</strong><br><strong>thanks for the teacher,thanks for the campus,thanks for this peaceful time.</strong></p>
<hr>
<p><span id="busuanzi_container_page_pv"></span></p>
<blockquote>
<p><strong>本文已被阅读 <span id="busuanzi_value_page_pv"></span> 次。感谢您的点击！</strong><br>  <strong>The article has been viewed <span id="busuanzi_value_page_pv"></span> times.Thank you for your visit!</strong><br></p>
</blockquote>
]]></content>
      
        <categories>
            
            <category> 通信工程 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 显示技术 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[java自学笔记]]></title>
      <url>http://hubojing.github.io/2016/03/14/java%E8%87%AA%E5%AD%A6%E7%AC%94%E8%AE%B0/</url>
      <content type="html"><![CDATA[<p><strong>现将以前分散的java自学笔记归总，方便查阅。</strong><br><a id="more"></a></p>
<h3 id="2016326更新"><a href="#2016-3-26更新" class="headerlink" title="2016.3.26更新"></a>2016.3.26更新</h3><h2 id="快速打法与scanner"><a href="#快速打法与Scanner" class="headerlink" title="快速打法与Scanner"></a>快速打法与Scanner</h2><blockquote>
<ul>
<li><strong>两个快速打法</strong></li>
</ul>
</blockquote>
<p>syso<br>alt+/<br>快速打出 System.out.println();</p>
<p>main<br>alt+/  回车<br>快速打出：<br>public static void main(String[] args) {</p>
<p>}</p>
<blockquote>
<ul>
<li><strong>使用Scanner工具类来获取用户输入信息</strong></li>
</ul>
</blockquote>
<p>Scanner类似于java.util包中，使用时需要导入此包<br>步骤：<br>1.导入java.util.Scanner<br>2.创建Scanner对象<br>3.接收并保存用户输入的值<br>package com;<br>import java.util.Scanner;</p>
<p>main函数里<br>Scanner input=new Scanner(System.in);//创建Scanner对象<br>System.out.println(“请输入信息：”);<br>int a=input.nextInt();//获取用户输入的信息并保存在变量中</p>
<p><strong>print和println区别：println输出信息后会换行，而print不会换行</strong></p>
<hr>
<h3 id="2016315更新"><a href="#2016-3-15更新" class="headerlink" title="2016.3.15更新"></a>2016.3.15更新</h3><h2 id="java基础知识"><a href="#java基础知识" class="headerlink" title="java基础知识"></a>java基础知识</h2><blockquote>
<ul>
<li><strong>关键字</strong></li>
</ul>
</blockquote>
<p><img src="http://img.mukewang.com/53588ce900019bee05190178.jpg" alt="java常用关键字"></p>
<blockquote>
<ul>
<li><strong>优秀攻城师的习惯</strong></li>
</ul>
</blockquote>
<p>1、变量名由多单词组成时，第一个单词的首字母小写，其后单词的首字母大写，俗称骆驼式命名法（也称驼峰命名法），如 myAge<br>2、变量命名时，尽量简短且能清楚的表达变量的作用，做到见名知意。如：定义变量名<br>stuName 保存“学生姓名”信息</p>
<blockquote>
<ul>
<li><strong>java的数据结构</strong></li>
</ul>
</blockquote>
<p><img src="http://img.mukewang.com/535a6fc10001b8f604930247.jpg" alt="数据结构"></p>
<blockquote>
<ul>
<li><strong>常见的基本数据类型</strong></li>
</ul>
</blockquote>
<p><img src="http://img.mukewang.com/540d468d000167bd07000130.jpg" alt="数据类型"></p>
<blockquote>
<ul>
<li><strong>强制转换</strong></li>
</ul>
</blockquote>
<p><img src="http://img.mukewang.com/53688a9a0001f73404330109.jpg" alt="强制转换"><br>强制类型转换将 75.8 赋值给 int 型变量后，结果为 75，数值上并未进行四舍五入，而是直接将小数位截断。<br><strong>强制类型转换可能会造成数据的丢失。</strong></p>
<p>常量名一般使用大写字符。</p>
<blockquote>
<ul>
<li><strong>注释</strong></li>
</ul>
</blockquote>
<p>Java 中注释有三种类型：单行注释、多行注释、文档注释<br>单行：//<br>多行：/<em>
</em><br><em>
</em>/<br>文档：/<em>*
</em><br><em>
</em>/<br>我们可以通过 javadoc 命令从文档注释中提取内容，生成程序的 API 帮助文档。<br><img src="http://img.mukewang.com/53689f74000187be03800330.jpg" alt="javadoc"></p>
<p>使用文档注释时还可以使用 javadoc 标记，生成更详细的文档信息：<br>       @author 标明开发该类模块的作者<br>       @version 标明该类模块的版本<br>       @see 参考转向，也就是相关主题<br>       @param 对方法中某参数的说明<br>       @return 对方法返回值的说明<br>       @exception 对方法可能抛出的异常进行说明</p>
<blockquote>
<ul>
<li><strong>java常用的比较运算符</strong></li>
</ul>
</blockquote>
<p><img src="http://img.mukewang.com/536063f00001b7b904350145.jpg" alt="比较运算符"><br><strong>  &gt; 、 &lt; 、 &gt;= 、 &lt;= 只支持左右两边操作数是数值类型</strong><br><strong> == 、 != 两边的操作数既可以是数值类型，也可以是引用类型</strong></p>
<blockquote>
<ul>
<li><strong>运算符优先级</strong></li>
</ul>
</blockquote>
<p><img src="http://img.mukewang.com/5360ffb90001b4f002620224.jpg" alt="优先级"><br>级别为 1 的优先级最高，级别 11 的优先级最低。</p>
<blockquote>
<ul>
<li><strong>条件语句之 switch</strong></li>
</ul>
</blockquote>
<p>可以把功能相同的 case 语句合并起来，如<br><img src="http://img.mukewang.com/5364f6950001a57604280064.jpg" alt="case合并"></p>
<blockquote>
<ul>
<li><strong>循环语句之 for</strong></li>
</ul>
</blockquote>
<p>for 循环变量初始化和循环变量变化部分，可以是使用 “,” 同时初始化或改变多个循环</p>
<blockquote>
<ul>
<li><strong>变量的值</strong></li>
</ul>
</blockquote>
<p><img src="http://img.mukewang.com/536c8b620001eb1005560086.jpg" alt="for"></p>
<blockquote>
<ul>
<li><strong>循环跳转语句之 continue</strong></li>
</ul>
</blockquote>
<p>continue 的作用是跳过循环体中剩余的语句执行下一次循环。</p>
<hr>
<h3 id="2016314更新"><a href="#2016-3-14更新" class="headerlink" title="2016.3.14更新"></a>2016.3.14更新</h3><h2 id="java初体验"><a href="#java初体验" class="headerlink" title="java初体验"></a>java初体验</h2><blockquote>
<ul>
<li><strong>环境变量配置</strong></li>
</ul>
</blockquote>
<p>1.jdk安装目录<br>2.jdk下bin安装目录<br>3.jdk下lib安装目录</p>
<blockquote>
<ul>
<li><strong>第一个java程序</strong></li>
</ul>
</blockquote>
<p>win8.1系统下<br>win+R，输入cmd。<br>dir查看磁盘文件<br>java HelloWorld.java<br>错误：java HelloWorld.class<br><strong>java命令后不能跟文件后缀</strong><br>java HelloWorld</p>
<p><img src="http://7xrn7f.com1.z0.glb.clouddn.com/16-3-12/55943714.jpg" alt="第一个java程序"></p>
<blockquote>
<ul>
<li><strong>使用Eclipse开发Java程序</strong></li>
</ul>
</blockquote>
<p>安装eclipse后，弹出<img src="http://7xrn7f.com1.z0.glb.clouddn.com/16-3-12/73609369.jpg" alt="错误"><br>这是因为eclipse与JDK的版本不一致。<br>（在cmd中输入java -version查看版本）</p>
<p><img src="http://7xrn7f.com1.z0.glb.clouddn.com/16-3-12/9491861.jpg" alt="两种IDE"><br>我选择的是下面这种。<br>步骤：<br>1.创建Java项目<br>2.创建程序包<br>3.编写Java源程序<br>4.运行Java程序</p>
<p><strong>使用myeclipse的步骤相同。</strong></p>
<hr>
<p><span id="busuanzi_container_page_pv"><br>本文已被阅读 <span id="busuanzi_value_page_pv"></span> 次。感谢您的点击！<br></span></p>
]]></content>
      
        <categories>
            
            <category> 互联网 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> java </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[靖靖的脑洞大开 | Jinger's Special Ideas]]></title>
      <url>http://hubojing.github.io/2016/03/12/%E9%9D%96%E9%9D%96%E7%9A%84%E8%84%91%E6%B4%9E%E5%A4%A7%E5%BC%80%EF%BC%88%E4%B8%80%EF%BC%89/</url>
      <content type="html"><![CDATA[<div align="left"><br><img src="https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1503228768604&di=7e6187c4776cacba1f6384be141e8f06&imgtype=0&src=http%3A%2F%2Fa.hiphotos.baidu.com%2Fzhidao%2Fpic%2Fitem%2F0ff41bd5ad6eddc4b18472113ddbb6fd536633fd.jpg" width="300" height="180" alt="配图" style="float:right;"><br> </div>



<p>一些天马行空的脑洞。<br>有时稀奇古怪的thinking和idea就像柯南推理正确时被闪电般电流击中一样……<br>愿创造力永不枯竭……</p>
<h1 id="2017820更新-关于超人工智能"><a href="#2017-8-20更新-关于超人工智能" class="headerlink" title="2017.8.20更新 关于超人工智能"></a>2017.8.20更新 关于超人工智能</h1><a id="more"></a>
<p>无意点开的一篇文章，配上这个毫无吸引力的名字，本来是拒绝阅读的。但浏览了下感觉很生动形象，不知不觉在这样碎片化阅读的地方看完了三万五千字，也是拼耐心了。<br><a href="https://zhuanlan.zhihu.com/p/19950456?utm_source=qq&amp;utm_medium=social" target="_blank" rel="external">为什么最近有很多名人，比如比尔盖茨，马斯克、霍金等，让人们警惕人工智能？</a><br>文中有些观点于我而言很新颖，有些角度看的更深刻。</p>
<ol>
<li>人类已掌握弱人工智能Artificial Narrow Intelligence (ANI)，正研究强人工智能Artificial General Intelligence (AGI)，而强人工智能一旦实现，到超人工智能Artificial Superintelligence (ASI)可能只是很短暂的时间（几个小时、几天或者几个月）。</li>
<li>实现强人工智能只是时间问题，而且，最大几率发生在未来的50年里。（尚年轻的我们能亲眼见证这伟大的时刻是多么的幸运）</li>
<li>我们处在一个充满弱人工智能的世界，只是可能我们没意识到“哦，这就是人工智能”。控制防抱死系统、地图软件导航、音乐电台推荐、查询明天的天气、Siri、垃圾邮件过滤器、谷歌翻译、IBM的华生……这些是消费级产品的例子。军事、制造、金融（高频算法交易占到了美国股票交易的一半）等领域广泛运用各种复杂的弱人工智能。</li>
<li>强人工智能的难点在：人工智能已经在几乎所有需要思考的领域超过了人类，但是在那些人类和其它动物不需要思考就能完成的事情上，还差得很远。</li>
<li>人工智能发展是指数型增长，无论是硬件、软件还是整个产业。</li>
<li>通往强人工智能的第一步：增加电脑处理速度，而目前天河二号已经做到并超过了。<br>通往强人工智能的第二步：让电脑变得智能。<br>1) 抄袭人脑<br> 一个电脑架构模拟人脑的例子是人工神经网络。它是一个由晶体管作为“神经”组成的网络，晶体管和其它晶体管互相连接，有自己的输入、输出系统，而且什么都不知道。接着它会通过做任务来自我学习。最开始它的神经处理和猜测会是随机的，但是当它得到正确的回馈后，相关晶体管之间的连接就会被加强；如果它得到错误的回馈，连接就会变弱。经过一段时间的测试和回馈后，这个网络自身就会组成一个智能的神经路径，而处理这项任务的能力也得到了优化。<br> 更加极端的“抄袭”方式是“整脑模拟”。具体来说就是把人脑切成很薄的片，用软件来准确的组建一个3D模型，然后把这个模型装在强力的电脑上。<br>2）模仿生物演化<br> 模拟演化使用“基因算法”，它大概是这样的：建立一个反复运作的表现/评价过程，就好像生物通过生存这种方式来表现，并且以能否生养后代为评价一样。一组电脑将执行各种任务，最成功的将会“繁殖”，把各自的程序融合，产生新的电脑，而不成功的将会被剔除。经过多次的反复后。这个自然选择的过程将产生越来越强大的电脑。<br>3）让电脑来解决这些问题<br> 总的思路是我们建造一个能进行两项任务的电脑——研究人工智能和修改自己的代码。</li>
<li><p>智能爆炸<br> 这个词可以说是非常耸人听闻了。递归的自我改进将达到一个难以想象的水平。文中形象的比较：我们把130的智商叫作聪明，把85的智商叫作笨，但是我们不知道怎么形容12952的智商，人类语言中根本没这个概念。</p>
</li>
<li><p>我们无法理解超人工智能的智慧，它能解决所有的问题，如果出现了不能解决的问题，它只需要再自我智能提升一下，这些问题都将迎刃而解。而寄希望于尝试控制超人工智能是可笑的。当我们以为切断电源就能停止它的思考时，超人工智能早已在被切断电源之前，就想好了应对方法。我们的大脑很可能根本没法预测将会发生什么。</p>
</li>
<li>超人工智能虽然有超高的智慧，但它的目标不会随着智能提高而更改，因为它从不会遗忘。但它会用更先进的方式来更好地完成它的预设目标，哪怕会伤害人类，它的思维始终围绕着目标而言，我们给人工智能设定的目标是什么，它的动机就是什么。我们容易犯的一个错误是，当我们想到非常聪明的人工智能时，把它拟人化了。任何假设超级智能的达成会改变系统原本的目标的想法都是对人工智能的拟人化。我们应该明白，它是非常聪明，但是完全异己的东西。超出人类心理的范畴，道德和不道德之外，更多的是非道德性。而所有不是人类的，尤其是那些非生物的事物，默认都是非道德性的。</li>
<li>超人工智能会将人类带往截然不同的两种永恒状态：永生或灭绝。我想灭绝是讨论的最多的一种，但我还是第一次意识到，超人工智能也能让人类实现永生，同时，我们还没发现任何证据证明死亡是不可避免的。有一天人类会完全变成人工的。当我们看到生物材料，然后觉得生物材料实在太原始了，早年的人体居然是用这样的东西组成的，早期的人类居然会被微生物、意外、疾病杀死。人类最终战胜自己的生理，并且变得不可摧毁和永生。当然，前提还有一样，超人工智能的目标里设定了保护人类这些信息。</li>
<li>纳米机器人将会吞噬所有碳基材料来支持自我复制，而不巧的是，地球生命就是碳基的。科学家认为纳米机器人进行一次自我复制只要100秒左右，也就是说一个简单的错误可能就会在3.5小时内毁灭地球上全部的生命。生物技术、纳米技术、人工智能技术将统治世界。</li>
<li>费米悖论</li>
<li>人类最终是永生还是灭绝，很有可能决定者就是第一个实现超人工智能的人，而目前世界上各个国家各种组织都在紧锣密鼓的研究着，如果是有恶意的极端分子抢先一步，人类就会走向灭亡。加上现在各大公司，为了争当第一个强人工智能实现者，为了得到光环、荣誉、名声、金钱，只追求速度，并不考虑安全。最为可怕的是，这事儿世界上压根没法监管。    </li>
</ol>
<p>强人工智能浪潮是不可逆的，人类无论惶恐还是兴奋，都终将来临。<br>而这一切，有可能在未来几十年就发生。</p>
<h1 id="201767更新-关于量子传输"><a href="#2017-6-7更新-关于量子传输" class="headerlink" title="2017.6.7更新 关于量子传输"></a>2017.6.7更新 关于量子传输</h1><p>前一段时间周末两天在学校过了一把监考瘾……考生的年纪都比我大，可是还是得叫我老师→_→（莫名占了便宜哈哈哈）<br>监考4小时，腿酸1整天。</p>
<p>监考这件事儿，多么浪费人力财力，得找人来监考，发卷子，整理卷子……<br>站着闲得慌，我就在想，能不能都给一体化解决了，不要人来监考。</p>
<p>脑洞：<br>运用<a href="http://baike.baidu.com/link?url=qx-PpbOFOjPMSYyMBh8ggHAwrCMBGTgaWXI9ZVGCgdfIpwTy5g3FPAegJ3EKTzocBgl-00pYRPmNR6YfflZN4I9CziuEnvLgQKVNwfKvFDkh1JFOvRns5D0jCeQ2hRuP#2" target="_blank" rel="external">量子传输技术</a>  、 <a href="http://baike.baidu.com/link?url=P0RmCSc2uDs5uhKCAffsqjBX4l92qBBASLGrvsd4JsNAv4f9maKL2XWmEtkM_-fNvfHkFhS6-VCK4YMSChCd0PaG1DQg2mEdCTWsDn03KIE7irD2G3G81I2jCM7Hr38g" target="_blank" rel="external">量子传送技术</a> ，将卷子传送到每个考场。同时，每个考生的桌子有升降板，考试时自动升起成为隔板，还可以隔音。防止前后左右抄袭。桌面材料是那种无法用笔写字的光滑材料，内附电子屏显示考试要点，可以刷新和清屏。至于考生随身携带纸条等，在门上装的安检装置可检测。若考生遇到问题，可按桌上按钮与后台管理老师用语音或文字反馈问题。最后答题卡再传送回考务中心。</p>
<p>嗯，只有一个问题，就是费钱，哦，还有量子传输技术目前还在实验阶段。</p>
<hr>
<h1 id="2017513更新-关于电脑病毒"><a href="#2017-5-13更新-关于电脑病毒" class="headerlink" title="2017.5.13更新  关于电脑病毒"></a>2017.5.13更新  关于电脑病毒</h1><p>防范ONION勒索软件（永恒之蓝）病毒攻击<br>毕设关键期，对大四毕业狗满满的恶意！</p>
<p>再论备份的重要性<br>论开启自动更新的重要性</p>
<p>【紧急通知！】请连接校园网的Windows用户注意了！近期，国内多所院校出现了ONION勒索软件感染情况，一旦感染，会对同学们的资料与数据造成严重损失，只有支付高额赎金才能解密恢复文件。请同学们将系统445端口关闭，并用免疫程序检查一下自己的电脑是否被进攻。</p>
<p>然后又去知乎逛了逛，果然推送一篇文章：<a href="https://zhuanlan.zhihu.com/p/26878511?group_id=846548441655046144" target="_blank" rel="external">关于防范 ONION 勒索软件（永恒之蓝）病毒攻击的紧急通知及应对办法</a><br>关端口方法和补丁也在文中了。不过win10自动更新嘿嘿嘿</p>
<p>六点半看到这个新闻就爬起来了。心里默念，幸亏每日做毕设都U盘备份，机智如我。<br>看着新闻里那张勒索弹窗图片，仿佛感受到毕设被锁的戳心之痛……</p>
<p>不过最近慎点教育网，总是有些不放心。</p>
<p>事件评论：<a href="https://www.zhihu.com/question/59765277/answer/168681832" target="_blank" rel="external">如何看待 5 月12 号爆发在各高校电脑勒索比特币的病毒？</a></p>
<p>关于信息安全，突然就想起自己在信息安全课上做的一个关于RSA密钥的加密解密的玩意儿，当时听信息安全各种高大上，以至于我选择了教这门课的老师当导师……后来RSA的第一次亲密接触竟是在hexo的SSH连接上……人生处处是巧合</p>
<p>有次移动通信课上，老师说未来是云的天下，课下我找老师讨论说，我觉得云并不安全，比如我，宁愿花钱买硬盘备份，也不愿意将重要文件放到云端。老师只是说，以后技术发展，云可以做到相对安全。现在想来，如果数据量庞大到不可想象的数量级呢？买硬盘怕是不能解决问题了。可能这种时候还是得靠云技术。<br>扯远了。</p>
<p>不过说实话，十年来，电脑安全好多了，十年前XP天天下各种防护工具还是拦不住各种病毒，后来换win7，到win8，到win8.1，到如今win10，就只用系统自带的杀软了，反而几乎不中毒了。</p>
<p>【脑洞】既然程序可以写病毒，也可以用程序反病毒。人工智能上啊！让程序自己学习病毒，然后以其人之道还治其人之身。</p>
<hr>
<h1 id="2016613更新-关于电"><a href="#2016-6-13更新-关于电" class="headerlink" title="2016.6.13更新 关于电"></a>2016.6.13更新 关于电</h1><p>严格说是我室友的想法。<br>她说，要是电像wifi一样不用线传输多好……（一个被各种电线搅的烦躁的girl的抱怨）<br>→<em>→→</em>→→<em>→→</em>→→<em>→→</em>→“用一种气体包裹着电，这样就不会电死啦……”<br>我百度了一下，发现真的可以耶……</p>
<h2 id="电能无线传输技术"><a href="#电能无线传输技术" class="headerlink" title="电能无线传输技术"></a>电能无线传输技术</h2><p>原理：利用电磁场，把电能像信号一样发射到用电设备上去，有点类似WiFi。电器不需再用电线，只需一个电能的发射装置和一个接收装置。<br>看来，无线时代正在向我们走来。</p>
<hr>
<h1 id="2016315更新-关于人工智能"><a href="#2016-3-15更新-关于人工智能" class="headerlink" title="2016.3.15更新    关于人工智能"></a>2016.3.15更新    关于人工智能</h1><p>今天看到一篇评论，写的不错，发上来。其中有几句话说的很好：<br><strong>技术群体战胜了天赋极高的自然个体。</strong><br><strong>就算真的有“征服”发生，那也是新人类征服了旧人类，而不是人类的末日。</strong><br>该文还提到了“虚拟现实”的概念，让我瞬间想到了柯南剧场版：贝克街的亡灵。带着头盔，仿佛身处他处。<br><strong>人工智能是让人类生活的劳作性内容越来越少，而虚拟现实是让人类生存生活的创造性意义大规模扩充。</strong><br><img src="/images/2.jpg" alt="整面"><br><img src="/images/1.jpg" alt="部分"></p>
<hr>
<h2 id="ai向"><a href="#AI向" class="headerlink" title="AI向"></a>AI向</h2><p>最近阿尔法狗赢李世石的新闻响遍全世界。（阿尔法狗是一种什么狗→_→）<br>人工智能，这个神秘又让人畏惧的高科技哟…</p>
<h2 id="人工智能"><a href="#人工智能" class="headerlink" title="人工智能"></a>人工智能</h2><p>人工智能（Artificial Intelligence），英文缩写为AI。它是研究、开发用于模拟、延伸和扩展人的智能的理论、方法、技术及应用系统的一门新的技术科学。 人工智能是计算机科学的一个分支，它企图了解智能的实质，并生产出一种新的能以人类智能相似的方式做出反应的智能机器，该领域的研究包括机器人、语言识别、图像识别、自然语言处理和专家系统等。人工智能从诞生以来，理论和技术日益成熟，应用领域也不断扩大，可以设想，未来人工智能带来的科技产品，将会是人类智慧的“容器”。</p>
<p>看它涉及的范围之广：实际应用<br>机器视觉，指纹识别，人脸识别，视网膜识别，虹膜识别，掌纹识别，专家系统，自动规划，智能搜索，定理证明，博弈，自动程序设计，智能控制，机器人学，语言和图像理解，遗传编程等。</p>
<p>人工智能就其本质而言，是对人的思维的信息过程的模拟。</p>
<p>对于人的思维模拟可以从两条道路进行，一是结构模拟，仿照人脑的结构机制，制造出“类人脑”的机器；二是功能模拟，暂时撇开人脑的内部结构，而从其功能过程进行模拟。现代电子计算机的产生便是对人脑思维功能的模拟，是对人脑思维的信息过程的模拟。</p>
<p><strong>以上转自百度百科……</strong></p>
<p>和室友辩论，阿尔法狗是否能赢所有人。我觉得可以，如果算法足够精确，存储足够大到可以容纳全部走法。（这个数量级是10^172次方……目前也许是远远达不到这个指标的。不知道从理论上讲，存储可以达到这么多吗？）</p>
<p><strong>脑洞</strong>：我相信人类开发AI的初始目的一定是<strong>服务人类</strong>的。但是，人类不得不警惕，拥有人类智慧的机器人（或者其他形态的机器），在各个方面都优于人类机体时，是否有<strong>灭亡人类</strong>的可能性。有人和我辩论，认为机器永远不可能比人类有智慧。对此我持保留态度。也许现在的机器的核心是人类输入的程序算法，但当病毒入侵或机器足够智能化到可以自我优化代码时，甚至结合仿生学或者神经学相关，使机器能<strong>自我学习</strong>，具备类似于人类情感的机能，将是人类最大的敌人。（机器内心OS：我比你强比你壮，为什么还要服务于人……）况且总有些野心科学家……将这种技术用于战争→_→其结果还是世界大战，人类遭殃。<br><strong>所以AI发展也应该有个底线，就和克隆人一样，任何人不能触碰。</strong></p>
]]></content>
      
        <categories>
            
            <category> 杂谈 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> idea </tag>
            
            <tag> 创意 </tag>
            
            <tag> 思维 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[PPT动画制作之登录等待]]></title>
      <url>http://hubojing.github.io/2016/03/08/PPT%E5%8A%A8%E7%94%BB%E5%88%B6%E4%BD%9C%E4%B9%8B%E7%99%BB%E5%BD%95%E7%AD%89%E5%BE%85/</url>
      <content type="html"><![CDATA[<p>坐在电脑前，我们常看见电脑页面等待的画面，就是一个圆不停的转。常让人等得怒火直冒，想碾碎电脑。（这么暴力的并不是我~）<br>现在就来说说，怎么制作这个动画效果。并不难。<br>先来看看效果怎么样：<br><img src="http://7xrn7f.com1.z0.glb.clouddn.com/16-3-8/29180966.jpg" alt="效果图"><br><a id="more"></a></p>
<h2 id="具体步骤"><a href="#具体步骤" class="headerlink" title="具体步骤"></a>具体步骤</h2><h1 id="画个圆"><a href="#画个圆" class="headerlink" title="画个圆"></a>画个圆</h1><h1 id="调个色"><a href="#调个色" class="headerlink" title="调个色"></a>调个色</h1><h1 id="添个动作路径"><a href="#添个动作路径" class="headerlink" title="添个动作路径"></a>添个动作路径</h1><h1 id="复个制"><a href="#复个制" class="headerlink" title="复个制"></a>复个制</h1><h1 id="减个透明度"><a href="#减个透明度" class="headerlink" title="减个透明度"></a>减个透明度</h1><h1 id="对个齐"><a href="#对个齐" class="headerlink" title="对个齐"></a>对个齐</h1><h1 id="延个时"><a href="#延个时" class="headerlink" title="延个时"></a>延个时</h1><p><strong>搞定！</strong></p>
<p>是不是还挺酷的~~~</p>
<p><span id="busuanzi_container_page_pv"><br>本文已被阅读 <span id="busuanzi_value_page_pv"></span> 次。感谢您的点击！<br></span></p>
]]></content>
      
        <categories>
            
            <category> 互联网 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> blog </tag>
            
            <tag> PPT动画 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[markdown语法简记]]></title>
      <url>http://hubojing.github.io/2016/03/08/markdown%E8%AF%AD%E6%B3%95%E7%AE%80%E8%AE%B0/</url>
      <content type="html"><![CDATA[<div align="left"><br><img src="http://www.onethink.cn/Uploads/Editor/2013-12-13/52aaabb4e7486.png" width="300" height="180" alt="配图" style="float:right;"><br><br></div>  

<p><strong>自查笔记。</strong></p>
<p>　　<br>　　<br><a id="more"></a></p>
<h1 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h1><p># 一级标题<br>## 二级标题<br>### 三级标题<br>#### 四级标题<br>##### 五级标题<br>###### 六级标题</p>
<p>例：</p>
<h1 id="一级标题"><a href="#一级标题" class="headerlink" title="一级标题"></a>一级标题</h1><h2 id="二级标题"><a href="#二级标题" class="headerlink" title="二级标题"></a>二级标题</h2><h3 id="三级标题"><a href="#三级标题" class="headerlink" title="三级标题"></a>三级标题</h3><h4 id="四级标题"><a href="#四级标题" class="headerlink" title="四级标题"></a>四级标题</h4><h5 id="五级标题"><a href="#五级标题" class="headerlink" title="五级标题"></a>五级标题</h5><h6 id="六级标题"><a href="#六级标题" class="headerlink" title="六级标题"></a>六级标题</h6><h1 id="加粗"><a href="#加粗" class="headerlink" title="加粗"></a>加粗</h1><p>*斜体文本*<br>例：<em>斜体文本</em><br>_斜体文本_<br>例：<em>斜体文本</em><br>**粗体文本**<br>例：<strong>粗体文本</strong><br>***粗斜体文本***<br>例：<strong><em>粗斜体文本</em></strong><br>___粗斜体文本___<br>例：<strong><em>粗斜体文本</em></strong></p>
<h1 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h1><p>文字链接 [](<a href="http://网址" target="_blank" rel="external">http://网址</a>)<br>网址链接 <a href="http://网址/" target="_blank" rel="external">http://网址/</a></p>
<h1 id="高级链接"><a href="#高级链接" class="headerlink" title="高级链接"></a>高级链接</h1><p>链接用 1 作为网址变量[例子1][1].<br>链接用 hubojing 作为网址变量[例子2][hubojing].<br>然后在文档的结尾为变量赋值（网址）<br>[1]:hubojing.github.io<br>[hubojing]:hubojing.github.io</p>
<h1 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h1><p>!(引用名称)[引用地址]<br>内联方式：![alt text](/path/to/img.jpg “Title”)</p>
<h1 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h1><p>链接用 1 作为网址变量 [hubojing][1].<br>然后在文档的结尾位变量赋值（网址）<br>[1]:hubojing.github.io</p>
<h1 id="分隔符"><a href="#分隔符" class="headerlink" title="分隔符"></a>分隔符</h1><p>三个星号<br>***</p>
<hr>
<p>三个减号<br>---(上面一行文字需空一行，否则自动变为二级标题)</p>
<hr>
<p>三个下划线<br>___</p>
<hr>
<h1 id="转义符"><a href="#转义符" class="headerlink" title="转义符"></a>转义符</h1><p>如果描述中用到 markdown 符号，比如 _ # * 等，又不想它被转义，此时可在这些符号前加反斜杠，如 \# 进行避免。</p>
<h1 id="块注释blockquote"><a href="#块注释（blockquote）" class="headerlink" title="块注释（blockquote）"></a>块注释（blockquote）</h1><p>- ></p>
<ul>
<li>是这样？<blockquote>
<p>like this.</p>
</blockquote>
</li>
</ul>
<h1 id="删除线"><a href="#删除线" class="headerlink" title="删除线"></a>删除线</h1><p>~~这是删除线~~<br><del>这是删除线</del></p>
<h1 id="换行"><a href="#换行" class="headerlink" title="换行"></a>换行</h1><p>输入法切换成全角，打两个空格再换行。</p>
<h1 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h1><p>简单的：`blockquote`  </p>
<h1 id="语言使用范围"><a href="#语言使用范围" class="headerlink" title="语言使用范围"></a>语言使用范围</h1><p><a href="http://blog.csdn.net/peng_hong_fu/article/details/52805408" target="_blank" rel="external">http://blog.csdn.net/peng_hong_fu/article/details/52805408</a></p>
<p>C++的关键字是cpp，不是C++…  but效果相同</p>
<h1 id="缩进"><a href="#缩进" class="headerlink" title="缩进"></a>缩进</h1><p>法一<br>将输入法切换成全角 两个空格<br>法二<br>在每一行开头，先输入下面的代码，然后紧跟着输入文本即可。注意有分号。</p>
<p>半角空格: &amp; ensp;(去掉&amp;和ensp的空格)或 &amp;#8194;<br>全角空格: &amp; emsp;(去掉&amp;和emsp的空格)或 &amp;#8195;<br>不换行空格: &amp; nbsp;(去掉&amp;和nbsp的空格)或 &amp;#160;<br>注意分号</p>
<p>反正都很麻烦</p>
<hr>
<h1 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h1><p>1.<a href="https://segmentfault.com/markdown" target="_blank" rel="external">Markdown编辑器语法指南</a><br>2.<a href="http://www.360doc.com/content/13/1119/13/3300331_330476656.shtml" target="_blank" rel="external">Markdown入门</a><br>3.<a href="http://www.appinn.com/markdown/#em" target="_blank" rel="external">Markdown 语法说明 (简体中文版)</a></p>
]]></content>
      
        <categories>
            
            <category> 互联网 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> blog </tag>
            
            <tag> markdown </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[1602+24C08+4X4键盘密码锁]]></title>
      <url>http://hubojing.github.io/2016/03/07/1602-24C08-4X4%E9%94%AE%E7%9B%98%E5%AF%86%E7%A0%81%E9%94%81/</url>
      <content type="html"><![CDATA[<p>【注】我的单片机课程设计选题是单片机密码锁。但是课题并没有要求用存储器存储密码，所以当时我的设计还是比较简陋的。那个设计只能设定一个内部密码，断电后又恢复到初始密码状态。但是实际生活中，必须能够存储密码。并且，在课程设计里我用的是数码管显示密码，在这里我用的是1602液晶显示。于是以下的设计着重于存储与1602相关，且代码是重新编写（参考了网上的案例），没有用课程设计的代码。<br>在此提供我课程设计的单片机密码锁链接：<a href="https://github.com/hubojing/simple-keylock" target="_blank" rel="external">胡博靖的单片机课程设计</a><br><a id="more"></a></p>
<h2 id="设计思路"><a href="#设计思路" class="headerlink" title="设计思路"></a>设计思路</h2><p>现在程序内设定一个初始密码，然后用液晶显示提示用户输入密码，通过矩阵键盘输入密码，然后进行比较。如果密码正确，则绿灯亮起，否则红灯亮1S，并提示输入密码错误次数。如果输入错误次数达到三次则蜂鸣器报警并锁定键盘。</p>
<h2 id="自用笔记"><a href="#自用笔记" class="headerlink" title="自用笔记"></a>自用笔记</h2><h3 id="数码管编码表0到f"><a href="#数码管编码表（0到f）" class="headerlink" title="数码管编码表（0到f）"></a>数码管编码表（0到f）</h3><p>共阳：0xc0,0xf9,0xa4,0xb0,0x99,0x92,0x82,0xf8,0x80,0x90,0x88,0x83,0xc6,0xa1,0x86,0x8e<br>共阴：0x3f,0x06,0x5b,0x4f,0x66,0x6d,0x7d,0x07,0x7f,0x6f,0x77,0x7c,0x39,0x5e,0x79,0x71</p>
<h3 id="protues仿真记载"><a href="#protues仿真记载" class="headerlink" title="protues仿真记载"></a>protues仿真记载</h3><p>1602——LM016<br>晶振——crystal<br>蜂鸣器——buzzer/sounder/speaker<br>可调电阻——pot-hg(课本写的是pot-lin,不过protues7.8没有)</p>
<h2 id="不错的资料和方法"><a href="#不错的资料和方法" class="headerlink" title="不错的资料和方法"></a>不错的资料和方法</h2><p><a href="http://wenku.baidu.com/link?url=zes1HpZOINL7CQVvqCdr4moFsoXpkEsH-x3QAq4urZ2cTDnSUGH7U2AJD2BsKjhzZ6H3hqE9_AxiJD3MY35hrZfCGnDJC-SX3K-fxoVn3Oi" target="_blank" rel="external">I2C总线简介</a><br><a href="https://github.com/hubojing/row-reverse" target="_blank" rel="external">矩阵键盘行反转法</a></p>
<hr>
<h2 id="过程中所犯的低级错误"><a href="#过程中所犯的低级错误" class="headerlink" title="过程中所犯的低级错误"></a>过程中所犯的低级错误</h2><p><img src="http://7xrn7f.com1.z0.glb.clouddn.com/16-3-8/85097816.jpg" alt="led"><br>如图，LED所连接的电阻阻值太大，电流完全达不到使LED发光的值。<br>改正后，LED正常发光。<br><img src="http://7xrn7f.com1.z0.glb.clouddn.com/16-3-8/39755099.jpg" alt="led"></p>
<h2 id="尚未解决的问题"><a href="#尚未解决的问题" class="headerlink" title="尚未解决的问题"></a>尚未解决的问题</h2><h3 id="蜂鸣器不响"><a href="#蜂鸣器不响。" class="headerlink" title="蜂鸣器不响。"></a>蜂鸣器不响。</h3><p>程序应该正确，蜂鸣器旁的控制点红蓝色变化正确，改过蜂鸣器电压值，12V、5V、3V、1.5V都试过，但是就是不响。<br><strong>可能的原因：</strong><br>蜂鸣器是用方波驱动的，若仅输出单一的高电平或低电平是没用的。<br>蜂鸣器发出的声波也要靠人耳来听取，过高或过低的频率人耳是无法听到的。<br>蜂鸣器的仿真模型应选择下图中后面两种，才能听到声音。（然而我并没有听到声音）<br><img src="http://7xrn7f.com1.z0.glb.clouddn.com/16-3-8/46445685.jpg" alt="蜂鸣器"></p>
<p>Speaker &amp; Sounders</p>
<p> BUZZER         DEVICE        Generic buzzer symbol<br> BUZZER         ACTIVE        DC Operated Buzzer - Outputs Via Sound Card<br> SOUNDER        ACTIVE        Piezo Sounder model (Digital) - Outputs Via Sound Card<br> SPEAKER        DEVICE        Generic loudspeaker symbol<br> SPEAKER        ACTIVE        loudspeaker model (Analog) - Outputs Via Sound Card</p>
<p>依次解释如下：</p>
<p> 蜂鸣器                      通用蜂鸣器符号               无仿真模型<br> 蜂鸣器        活动的        阻抗12Ω直流蜂鸣器            仿真时通过声卡发声<br> 讯响器        活动的        压电讯响器数字模型           仿真时通过声卡发声<br> 扬声器                      通用扬声器符号<br> 扬声器        活动的        阻抗8Ω扬声器模拟模型         仿真时通过声卡发声</p>
<h3 id="存储有问题"><a href="#存储有问题。" class="headerlink" title="存储有问题。"></a>存储有问题。</h3><p>程序代码严格按照标准代码写的，常见的delay();的延时问题应该没有。但是明显仿真结果没有存储到新的修改密码，一直是初始密码。<br>请各位指教。</p>
<h2 id="源程序和仿真图"><a href="#源程序和仿真图" class="headerlink" title="源程序和仿真图"></a>源程序和仿真图</h2><p><img src="http://7xrn7f.com1.z0.glb.clouddn.com/16-3-8/89430789.jpg" alt="仿真图"><br>若需要下载，<a href="https://github.com/hubojing/key-lock" target="_blank" rel="external">请点击！</a></p>
<p>#include<reg52.h></reg52.h></p>
<p>#define uint unsigned int</p>
<p>#define uchar unsigned char<br>void key_scan();<br>uchar count0,count1,count3,num,n=0,temp,a,j,count4;<br>uchar mima[8];                            //初始密码存储区<br>uchar tab<em>key[50];                        //输入密码存储区<br>uchar code table[]={ 0xc0,0xf9,0xa4,0xb0,0x99,0x92,0x82,0xf8,0x80,0x90,0x88,0x83,0xc6,0xa1,0x86,0x8e<br>};//led共阳数码管<br>/<em>uchar code table[]={<br>0x3f,0x06,0x5b,0x4f,<br>0x66,0x6d,0x7d,0x07,<br>0x7f,0x6f,0x77,0x7c,<br>0x39,0x5e,0x79,0x71};    //led共阴数码管       </em>/<br>bit enterflag;                            //确认键按下与否的标志<br>bit mimaflag;                            //密码正确与否的标志<br>bit xiugaiflag;                            //修改密码标志<br>bit enter1flag;                        //修改密码确认键标志<br>sbit red=P2^1;<br>sbit green=P2^0;<br>sbit bell=P2^2;<br>sbit rs=P2^6;<br> sbit rw=P2^5;<br>sbit lcden=P2^7;<br>sbit scl=P3^0;<br>sbit sda=P3^1;<br>uchar code table1[]=”input the passco”;<br>uchar code table2[]=”de:     ——–”;<br>uchar code table3[]=”*”;<br>uchar code table4[]=”right   (^</em>^)   “;<br>uchar code table5[]=”first  error!!!!”;<br>uchar code table6[]=”second error!!!!”;<br>uchar code table7[]=”third error see “;<br>uchar code table8[]=”u tomorrow (^_^)”;<br>uchar code table9[]=”define the passc”;<br>uchar code table10[]=”ode:    ——–”;<br>uchar code table11[]=”code   is    new”;<br>//<strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong>**</strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong>键盘消抖函数<strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><em>*</em></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong><br>void delay1()<br>{ ;; }<br>void delay2(uchar x)<br>{<br>    uchar a,b;<br>    for(a=x;a&gt;0;a–)<br>     for(b=100;b&gt;0;b–);<br>}<br>void delay3(uchar x)<br>{<br>    uchar a,b;<br>    for(a=x;a&gt;0;a–)<br>     for(b=200;b&gt;0;b–);<br>     }<br>void delay(uint z)<br>{<br>    uint x,y;<br>    for(x=z;x&gt;0;x–)<br>        for(y=110;y&gt;0;y–);<br>}</p>
<p>//<strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong>**</strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong>e^2room的初始化<strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><em>**</em></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong><br>void start()  //开始信号<br>{<br>    sda=1;     //书P171 时钟SCL线为高电平时，数据线SDA出现由高电平向低电平变化的情形时，启动I^2C总线数据传送。<br>    delay1();<br>    scl=1;     //<br>    delay1();<br>    sda=0;     //<br>    delay1();<br>}</p>
<p>void stop()   //停止<br>{<br>    sda=0;      //书P171时钟SCL线为高电平时，数据线SDA出现由低电平到高电平的变化的情形时，将停止I^2C总线数据传送。<br>    delay1();<br>    scl=1;<br>    delay1();<br>    sda=1;<br>    delay1();<br>}<br>//<strong><strong><strong><strong><strong><strong><em>**</em></strong></strong></strong></strong></strong></strong>应答信号<strong><strong><strong><strong><strong><strong><strong><strong><strong>*</strong></strong></strong></strong></strong></strong></strong></strong></strong><br>void respond()<br>{<br>    uchar i;<br>    scl=1;<br>    delay1();<br>    while((sda==1)&amp;&amp;(i&lt;250))i++;    //书P176 应答sda为0，非应答为1<br>    scl=0;                            //释放总线        ？<br>    delay1();<br>}</p>
<p>void noack()<br>{<br>scl=1;<br>delay1();<br>scl=1;delay1();<br>scl=0;delay1();<br>sda=0;delay1();<br>}<br>//<strong><strong><strong><strong><strong><strong><strong>*</strong></strong></strong></strong></strong></strong></strong>写字节操作函数<strong><strong><strong><strong><strong><strong><strong><strong>**</strong></strong></strong></strong></strong></strong></strong></strong><br>void write_byte(uchar date)<br>{<br>    uchar i,temp;<br>    temp=date;<br>    for(i=0;i&lt;8;i++)<br>    {<br>        temp=temp&lt;&lt;1;            //保持最高位，左移到进位CY<br>        scl=0;                //scl上跳沿写入<br>        delay1();<br>        sda=CY;              //溢出位<br>        delay1();<br>        scl=1;<br>        delay1();<br>        scl=0;delay1();<br>    }<br>    scl=0;<br>    delay1();<br>    sda=1;//总线释放 ？<br>    delay1();<br>}<br>//<strong><strong><strong><strong><strong><strong><strong><em>*</em></strong></strong></strong></strong></strong></strong></strong>读字节操作函数<strong><strong><strong><strong><strong><strong><strong>*</strong></strong></strong></strong></strong></strong></strong><br>uchar read_byte()<br>{<br>    uchar i,k;<br>    scl=0;<br>    delay1();<br>    sda=1;<br>    delay1();<br>    for(i=0;i&lt;8;i++)<br>    {<br>        scl=1;<br>        delay1();<br>        k=(k&lt;&lt;1)|sda;    //或运算，放到最低位<br>        scl=0;<br>        delay1();<br>    }<br>    return k;<br>}<br>//<strong><strong><strong><strong><strong><strong><strong><strong>**</strong></strong></strong></strong></strong></strong></strong></strong>写地址函数<strong><strong><strong><strong><strong><strong><strong>**</strong></strong></strong></strong></strong></strong></strong><br>void write_add(uchar address,uchar date)<br>{<br>    start();<br>    write_byte(0xa0);    //设备地址<br>    respond();<br>    write_byte(address);<br>    respond();<br>    write_byte(date);<br>    respond();<br>    stop();<br>}<br>//<strong><strong><strong><strong><strong><strong><strong><em>*</em></strong></strong></strong></strong></strong></strong></strong>读地址函数<strong><strong><strong><strong><strong><strong><strong><strong><strong>*</strong></strong></strong></strong></strong></strong></strong></strong></strong><br>uchar read_add(uchar address)<br>{<br>    uchar date;<br>    start();<br>    write_byte(0xa0);<br>    respond();<br>    write_byte(address);<br>    respond();<br>    start();<br>    write_byte(0xa1);      //表示接收地址<br>    respond();<br>    date=read_byte();<br>    noack();<br>    stop();<br>    return date;<br>}<br>//<strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><em>*</em></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong>LCD1602的初始化<strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong>**</strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong><br>void write_com(uchar com)           //书P154   写命令函数<br>{<br>    rs=0;         //RS为寄存器选择，高电平1时选择数据寄存器、低电平0时选择指令寄存器。<br>    lcden=0;<br>    P0=com;<br>    delay(5);<br>    lcden=1;     //LCD的使能端高电平有效<br>    delay(5);<br>    lcden=0;<br>}</p>
<p>void write_date(uchar date)         //写数据函数<br>{<br>    rs=1;<br>    lcden=0;<br>    P0=date;<br>    delay(5);<br>    lcden=1;<br>    delay(5);<br>    lcden=0;<br>}<br>//<strong><strong><strong><strong><strong><strong><strong><strong><strong><em>*</em></strong></strong></strong></strong></strong></strong></strong></strong></strong>密码比较函数<strong><strong><strong><strong><strong><strong><strong><em>**</em></strong></strong></strong></strong></strong></strong></strong><br>bit mimacmp()<br>{<br>    bit flag;<br>    uchar i;<br>    for(i=0;i&lt;8;i++)<br>        {<br>            if(mima[i]==tab_key[i])<br>                flag=1;<br>            else<br>                {<br>                flag=0;<br>                i=8;<br>                }<br>        }<br>    return(flag);                            //返回flag<br>}<br>//<strong><strong><strong><strong><strong><strong><strong><strong>**</strong></strong></strong></strong></strong></strong></strong></strong>LCD显示函数开始<strong><strong><strong><strong><strong><strong><strong><strong><strong>**</strong></strong></strong></strong></strong></strong></strong></strong></strong><br>void lcd_display()<br>{<br>uchar i=0;<br>write_com(0x80+0x40+8);//液晶操作中的写入，地址是0x80开头的，加0x40为写入第二行，加8则为确定地址。<br>for(i=0;i&lt;n;i++)<br>{<br>write_date(table3[0]);    //uchar code table3[]=”<em>“<br>}<br>}<br>//<strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong>**</strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></em>键盘功能分配函数群开始<strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><em>*</em></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong><br>// 0          1            2              3<br>// 4          5            6              7<br>// 8          9           确认（A）       无效（B）<br>//取消（C）修改密码键（D）确认修改键（E） 无效（F）<br>void key_manage1()<br>{<br>tab_key[n]=0;     //数组的存储顺序是从n=0开始的，因此无论是哪个键先按下都会存入tab_key[0]<br>n++;<br>if(xiugaiflag==1)    //如果按下了修改键<br>{<br>mima[count4]=0;<br>count4++;<br>}<br>}</p>
<p>void key_manage2()<br>{</p>
<p>tab_key[n]=1;<br>n++;<br>if(xiugaiflag==1)<br>{<br>mima[count4]=1;<br>count4++;<br>}<br>}</p>
<p>void key_manage3()<br>{</p>
<p>tab_key[n]=2;<br>n++;<br>if(xiugaiflag==1)<br>{<br>mima[count4]=2;<br>count4++;<br>}<br>}</p>
<p>void key_manage4()<br>{<br>tab_key[n]=3;<br>n++;<br>if(xiugaiflag==1)<br>{<br>mima[count4]=3;<br>count4++;<br>}<br>}</p>
<p>void key_manage5()<br>{<br>tab_key[n]=4;<br>n++;<br>if(xiugaiflag==1)<br>{<br>mima[count4]=4;<br>count4++;<br>}<br>}</p>
<p>void key_manage6()<br>{<br>tab_key[n]=5;<br>n++;<br>if(xiugaiflag==1)<br>{<br>mima[count4]=5;<br>count4++;<br>}<br>}<br>void key_manage7()<br>{<br>tab_key[n]=6;<br>n++;<br>if(xiugaiflag==1)<br>{<br>mima[count4]=6;<br>count4++;<br>}<br>}<br>void key_manage8()<br>{<br>tab_key[n]=7;<br>n++;<br>if(xiugaiflag==1)<br>{<br>mima[count4]=7;<br>count4++;<br>}<br>}</p>
<p>void key_manage9()<br>{<br>tab_key[n]=8;<br>n++;<br>if(xiugaiflag==1)<br>{<br>mima[count4]=8;<br>count4++;<br>}<br>}<br>void key_manage10()<br>{<br>tab_key[n]=9;<br>n++;<br>if(xiugaiflag==1)<br>{<br>mima[count4]=9;<br>count4++;<br>}<br>}<br>//<strong><strong><strong><strong><strong><strong><strong><strong>**</strong></strong></strong></strong></strong></strong></strong></strong>确认键<strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong>**</strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong><br>void key_manage11()<br>{<br>    enterflag=1;                    //确认键按下<br>    if(n==8)                       //只有输入8个密码后按确认才做比较<br>    {    mimaflag=mimacmp();<br>    }<br>    else<br>    {    mimaflag=0;<br>     }<br>     if(enterflag==1)<br>        {<br>            enterflag=0;  //标志位清零<br>            n=0;<br>            //用FFFFFFFF清除已经输入的密码<br>            for(count3=0;count3&lt;8;count3++)<br>            {<br>                delay(5);<br>                tab_key[count3]=0x0f;<br>            }<br>            TR1=1;                                    //打开计数器1<br>            count1=0;                                //定时器1由50MS累计到1S所用的计数器<br>            if(mimaflag==1)<br>            {<br>                a=0;</p>
<pre><code>            write_com(0x01);
            write_com(0x80);
            for(count3=0;count3&lt;16;count3++)
            {
                write_date(table4[count3]);    //密码正确，显示RIGHT，绿灯亮
                green=0;red=1;
                bell=1;
                delay(5);
            }
        }

        else
        {   
             n=0;
             red=0;
            bell=0;
            a++;
            if(a==1)
            {
                for(count3=0;count3&lt;8;count3++) //ffffffff清除密码
                {    
                    delay(5);
                    tab_key[count3]=0x0f;        
                }
                write_com(0x01);                                        
                write_com(0x80);
                for(count3=0;count3&lt;16;count3++)
                {
                    write_date(table5[count3]);    //密码错误，显示 first error，红灯亮
                    green=1;red=0;
                    bell=1;
                    delay(5);
                }
                    TR1=1;
            }
            if(a==2)
            {    
                for(count3=0;count3&lt;8;count3++) //ffffffff清除密码
                {    
                    delay(5);
                    tab_key[count3]=0x0f;        
                }
                    write_com(0x01);
                    write_com(0x80);
                    for(count3=0;count3&lt;16;count3++)
                    {
                        write_date(table6[count3]);    //密码错误，显示SECOND ERROR，红灯亮
                        green=1;red=0;
                        bell=1;
                        delay(5);
                    }
                        TR1=1;
            }

              if(a==3)
                {    
                    for(count3=0;count3&lt;8;count3++) //ffffffff清除密码
                    {    
                        delay(5);
                        tab_key[count3]=0x0f;        
                    }
                    write_com(0x01);
                    write_com(0x80);
                    for(count3=0;count3&lt;16;count3++)
                    {
                        write_date(table7[count3]);    //密码错误，显示third error see，红灯亮
                        green=1;red=0;
                        bell=0;//蜂鸣器报警
                        delay(5);
                    }
                    write_com(0x80+0x40);
                    for(count3=0;count3&lt;16;count3++)
                    {
                        write_date(table8[count3]);//密码错误，显示 U TOMORROW ,红灯亮
                        green=1;red=0;
                        bell=0;//蜂鸣器报警
                        delay(5);
                    }
                        TR1=0;

                }

    }
}
</code></pre><p>}<br>void key_manage12()<br>{<br>tab_key[n]=11;<br>n++;                          //密码计数清零</p>
<p>}<br>//<strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><em>**</em></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong>取消键<strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><em>**</em></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong><br>void key_manage13()<br>{</p>
<p>n=0;                          //密码计数清零<br>write_com(0x80);                        //指针所指位置       第一行<br>for(count3=0;count3&lt;16;count3++)<br>{<br>    write_date(table1[count3]);        //第一行显示INPUT THE PASSPORD:<br>    delay(5);<br>}<br>write_com(0x80+0x40);                 //第二行<br>for(count3=0;count3&lt;16;count3++)<br>{<br>    write_date(table2[count3]);    //开机显示——–<br>    delay(5);<br>    tab_key[count3]=0x0f;            //用FFFFFFFF清除已经输入的密码<br>}</p>
<p>}<br>//<strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><em>*</em></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong>修改密码键<strong><strong><strong><strong><strong><strong><strong><strong>**</strong></strong></strong></strong></strong></strong></strong></strong><br>void key_manage14()<br>{<br>    uchar aa=0;<br>    n=0;<br>    xiugaiflag=1;<br>    write_com(0x01);<br>    write_com(0x80);<br>for(count3=0;count3&lt;16;count3++)<br>{<br>    write_date(table9[count3]);    //显示define the password<br>    delay(5);<br>    tab_key[count3]=0x0f;            //用FFFFFFFF清楚已经输入的密码<br>}<br>    write_com(0x80+0x40);<br>for(count3=0;count3&lt;16;count3++)<br>{<br>    write_date(table10[count3]);    //显示——–<br>    delay(5);<br>}<br>TR0=1;</p>
<p>}<br>//<strong><strong><strong><strong><strong><strong><strong><strong><strong><strong>**</strong></strong></strong></strong></strong></strong></strong></strong></strong></strong>修改密码键的确认键<strong><strong><strong><strong><strong><strong><strong><em>**</em></strong></strong></strong></strong></strong></strong></strong><br>void key_manage15()<br>{<br>n=0;<br>enter1flag=1;<br>if(enter1flag==1)<br>{<br>    enter1flag=0;<br>    count4=0;<br>    for(count3=0;count3&lt;16;count3++)<br>    {<br>    tab_key[count3]=0x0f;            //用FFFFFFFF清除已经输入的密码<br>     }<br>    write_com(0x01);<br>    write_com(0x80);<br>    for(count3=0;count3&lt;16;count3++)<br>    {<br>        write_date(table11[count3]);<br>        delay(100);<br>    }<br>    TR1=1;<br>    count1=0;<br>}<br>}<br>void key_manage16()<br>{<br>tab_key[n]=15;<br>n++;<br>}</p>
<p>//<strong><strong><strong><strong><strong><strong><strong><strong><strong><em>**</em></strong></strong></strong></strong></strong></strong></strong></strong></strong>定时器1的50MS,共延时1秒<strong><strong><strong><strong><strong><strong><strong>*</strong></strong></strong></strong></strong></strong></strong><br>void time_1() interrupt 3<br>{    </p>
<pre><code>TH1=(65536-50000)/256;
TL1=(65536-50000)%256;
if(count1&lt;20)
{
    count1++;
}
else                             //计时到1S
{
    TR1=0;
    count1=0;
    mimaflag=0;

    red=1;
    bell=1;
    //显示FFFFFFFF
    write_com(0x01);
    write_com(0x80);
    for(count3=0;count3&lt;16;count3++)
        {
            write_date(table1[count3]);    //显示INPUT THE PASSCODE
            delay(5);
        }
    write_com(0x80+0x40);
    for(count3=0;count3&lt;16;count3++)
        {
            write_date(table2[count3]);    //开机显示FFFFFFFF
            delay(5);
        }
}
</code></pre><p>}<br>//<strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><em>*</em></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong>定时0<strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong>**</strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong><br>void time_0() interrupt 1<br>{    </p>
<pre><code>TH0=(65536-50000)/256;
TL0=(65536-50000)%256;
</code></pre><p>if(count4&lt;8)<br>{<br>    key_scan();<br>}<br>else<br>{<br>    TR0=0;<br>    count4=0;<br>}<br>}</p>
<p>//初始化函数<br>void init()<br>{<br>    uchar i;<br>    lcden=0;<br>    write_com(0x38);                    //打开显示模式设置<br>    write_com(0x0c);                    //打开显示，光标等等设置为零<br>    write_com(0x06);                    //当读或写一个字符后地址指针加一，且光标加一，当写一个字符后整频显示左移，<br>    write_com(0x01);                    //清零指令<br>    write_com(0x80);                    //指针所指位置</p>
<pre><code>//定时器初始化
TMOD=0x11;                            //T0,T1工作方式1
TH0=(65536-2000)/256;
TL0=(65536-2000)%256;                //T0初始化2MS

TH1=(65536-50000)/256;
TL1=(65536-50000)%256;                //T1初始化50MS

TR1=0;
ET1=1;
EA=1;
TR0=0;
ET0=1;

count0=0;                            //初始没有密码输入，故为零
enterflag=0;                        //没有确认键按下
mimaflag=0;                            //密码正确与否键先置零

red=1;                                //红灯不亮
</code></pre><p>//<strong><strong><em>**</em></strong></strong>密码存入EPROM中<strong><strong><strong><strong><strong><strong><strong><strong>**</strong></strong></strong></strong></strong></strong></strong></strong><br>    sda=1;<br>    delay(5);<br>    scl=1;// SDA=1,SCL=1,使主从设备处于空闲状态<br>    delay(5);<br>    for(i=0;i&lt;8;i++)<br>    {<br>        write_add(i,8);<br>        delay3(100);<br>    }<br>    for(i=0;i&lt;8;i++)<br>    {<br>        mima[i]=read_add(i);<br>        delay(5);<br>    }</p>
<p>}<br>void main()<br>{    rw=0;<br>    init();<br>    write_com(0x80);                        //给com一个数值，com连着单片机<br>    for(count3=0;count3&lt;16;count3++)<br>    {<br>        write_date(table1[count3]);        //第一行显示INPUT THE PASSPORD:<br>        delay(5);<br>    }<br>    write_com(0x80+0x40);<br>    for(count3=0;count3&lt;16;count3++)<br>    {<br>        write_date(table2[count3]);        //开机显示FFFFFFFF<br>        delay(5);<br>    }<br>    while(1)<br>    {<br>        key_scan();                              //调用键盘扫描函数<br>        lcd_display();<br>    }</p>
<p>}<br>//<strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong>**</strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong>键盘扫描函数开始<strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><em>*</em></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong><br>void key_scan()<br>{<br>//<strong><strong>**</strong></strong>扫描第一行<strong><strong>*</strong></strong><br>P1=0xfe;<br>temp=P1;<br>temp=temp&0xf0;<br>if(temp!=0xf0)<br>{<br>delay(100);<br>if(temp!=0xf0)<br>{<br>temp=P1;<br>switch(temp)<br>{<br>case 0xee:<br>key_manage1();<br>break;</p>
<p>case 0xde:<br>key_manage2();<br>break;</p>
<p>case 0xbe:<br>key_manage3();<br>break;</p>
<p>case 0x7e:<br>key_manage4();<br>break;<br>}<br>while(temp!=0xf0)<br>{<br>temp=P1;<br>temp=temp&0xf0;<br>}<br>}<br>}<br>//<strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong>**</strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong>扫描第二行<strong><strong><strong><strong><strong><strong><strong><strong><em>*</em></strong></strong></strong></strong></strong></strong></strong></strong><br>P1=0xfd;<br>temp=P1;<br>temp=temp&0xf0;<br>if(temp!=0xf0)<br>{<br>delay(100);<br>if(temp!=0xf0)<br>{<br>temp=P1;<br>switch(temp)<br>{<br>case 0xed:<br>key_manage5();<br>break;</p>
<p>case 0xdd:<br>key_manage6();<br>break;</p>
<p>case 0xbd:<br>key_manage7();<br>break;</p>
<p>case 0x7d:<br>key_manage8();<br>break;<br>}<br>while(temp!=0xf0)<br>{<br>temp=P1;<br>temp=temp&0xf0;<br>}<br>}<br>}<br>//<strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong>*</strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong>扫描第三行<strong><strong><strong><strong><strong><strong><strong><strong><em>*</em></strong></strong></strong></strong></strong></strong></strong></strong><br>P1=0xfb;<br>temp=P1;<br>temp=temp&0xf0;<br>if(temp!=0xf0)<br>{<br>delay(100);<br>if(temp!=0xf0)<br>{<br>temp=P1;<br>switch(temp)<br>{<br>case 0xeb:<br>key_manage9();<br>break;</p>
<p>case 0xdb:<br>key_manage10();<br>break;</p>
<p>case 0xbb:<br>key_manage11();<br>break;</p>
<p>case 0x7b:<br>key_manage12();<br>break;<br>}<br>while(temp!=0xf0)<br>{<br>temp=P1;<br>temp=temp&0xf0;<br>}<br>}<br>}</p>
<p>//<strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><em>*</em></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong>扫描第四行<strong><strong><strong><strong><strong><strong><strong><strong><strong><em>**</em></strong></strong></strong></strong></strong></strong></strong></strong></strong><br>P1=0xf7;<br>temp=P1;<br>temp=temp&0xf0;<br>if(temp!=0xf0)<br>{<br>delay(100);<br>if(temp!=0xf0)<br>{<br>temp=P1;<br>switch(temp)<br>{<br>case 0xe7:<br>key_manage13();<br>break;</p>
<p>case 0xd7:<br>key_manage14();<br>break;</p>
<p>case 0xb7:<br>key_manage15();<br>break;</p>
<p>case 0x77:<br>key_manage16();<br>break;<br>}<br>while(temp!=0xf0)<br>{<br>temp=P1;<br>temp=temp&0xf0;<br>}<br>}<br>}<br>} </p>
<p><span id="busuanzi_container_page_pv"><br>本文已被阅读 <span id="busuanzi_value_page_pv"></span> 次。感谢您的点击！<br></span></p>
]]></content>
      
        <categories>
            
            <category> 通信工程 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 单片机 </tag>
            
            <tag> 密码锁 </tag>
            
            <tag> 矩阵键盘 </tag>
            
            <tag> 1602 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[零碎知识记录]]></title>
      <url>http://hubojing.github.io/2016/01/04/%E9%9B%B6%E7%A2%8E%E7%9F%A5%E8%AF%86%E8%AE%B0%E5%BD%95/</url>
      <content type="html"><![CDATA[<p>位选就是要亮哪一个数码管,段选就是让这个数码管显示哪个数!!!</p>
<p>#define uchar unsigned char<br>unsigned char 用来声明无符号字符变量的，上面这个语句的作用就是在其之后 可以用uchar来代替unsigned char 简化编写，就是说 写了这条 下面在写 uchar i; 效果跟 unsigned char i; 一样<br><a id="more"></a><br>蓝色是低电平。红色是高电平。黄色一般为不正常的情况，灰色为不确定（高阻？）</p>
<p>0xe0 P2.4<br>P1=0x10 P1的第5位<br>0x04是十六进制数，对应的二进制数为0000 0100，从低位到高位一次对应p1.0-p1.7，所以p1.2为高电平，其余为低电平。</p>
<p>  temp=P3&0xf0;<br>是个位与运算符<br>0x80=1000 0000<br>temp转换为二进制<br>假设temp=1010 1010<br>&amp;后temp=1000 0000<br>如果temp=0010 1010<br>&amp;后temp=0000 0000<br>可见temp低7位无论是什么&amp;后都是0<br>最高位由temp决定<br>结果就是最高位保持其余全为0从而取出了最高位</p>
<p>&amp;是按位与的意思，就是说只将P3口的高四位读入，低四位为0，放到 temp里面 </p>
<p>P2=0x01 对应 P2^0=1<br>P2=0x02 对应 P2^1=1<br>P2=0x04 对应 P2^2=1<br>P2=0x08 对应 P2^3=1<br>P2=0x10 对应 P2^4=1<br>P2=0x20 对应 P2^5=1<br>P2=0x40 对应 P2^6=1<br>P2=0x80 对应 P2^7=1<br>P2=0x11 对应 P2^4=1 与 P2^0=1<br>P2=0xff 对应 P2^7=1 与 P2^6=1、P2^5=1、P2^4=1、P2^3=1、P2^2=1、P2^1=1、P2^0=1 </p>
<p>数字信号处理 问题<br>1.正弦型模拟信号xa(t)=Asin(Ω0t+φ)中t是时间变量，单位是秒（s），去连续数值，而正弦序列中x(n)=Asin(ω0n+φ)中n是无量纲数，取离散数值，因而造成Ω0越大，则xa(t)变化越快；但由于x(n)=sin(ω0n+φ)=sin[(ω0+2πm)n+φ]，当ω0变化时，x(n)是以2π为周期的，并不是ω0越大，x(n)变化越快。<br>连续和离散的不都是以2π为周期的吗？为什么一个越来越大，一个却有周期性？</p>
<p><span id="busuanzi_container_page_pv"><br>本文已被阅读 <span id="busuanzi_value_page_pv"></span> 次。感谢您的点击！<br></span></p>
]]></content>
      
        <categories>
            
            <category> 通信工程 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 单片机 </tag>
            
            <tag> 数字信号处理 </tag>
            
            <tag> 问题 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Flash动画制作学习心得]]></title>
      <url>http://hubojing.github.io/2015/12/06/Flash%E5%8A%A8%E7%94%BB%E5%88%B6%E4%BD%9C%E5%AD%A6%E4%B9%A0%E5%BF%83%E5%BE%97/</url>
      <content type="html"><![CDATA[<h1 id="制作过程中发现的问题及解决方案"><a href="#制作过程中发现的问题及解决方案：" class="headerlink" title="制作过程中发现的问题及解决方案："></a>制作过程中发现的问题及解决方案：</h1><p><strong>1.音频不能导入</strong><br>最简单的解决方案：使用Adobe Adition内录。注意保存比特率不要高于160KHZ。（320KHZ导入不了）</p>
<p><strong>2.按钮制作了没反应</strong><br>解决方案：首先新建一个图层，把按钮拖进去。在第一帧（注意是帧）动作里写上语句stop();然后在按钮的动作里写上语句on (release){play();}<br><a id="more"></a><br><strong>3.“开始”按钮控制不了声音</strong><br>最简单粗暴的方法：声音从第二帧开始。</p>
<p><strong>4.点击“暂停”按钮声音停止不了</strong><br>动作里写上语句stopAllSounds();</p>
<p><strong>5.声音会不断循环</strong><br>在最后一帧（记住加入关键帧）动作里写上stopAllSounds();</p>
<p><strong>6.mc总是一闪而过</strong><br>是mc的长度没设置好。拖过到合适的长度即可。</p>
<p><strong>7.按钮上的文字怎么改</strong><br>在按钮元件内部有一层是text，把默认的文本框删掉，在自己加一个上去。</p>
<p>还有一些细枝末节的问题，这儿就不提了。</p>
<h1 id="实践后发现需要注意的地方"><a href="#实践后发现需要注意的地方：" class="headerlink" title="实践后发现需要注意的地方："></a>实践后发现需要注意的地方：</h1><p><strong>1.名字标清楚</strong><br>方便修改！做到后来，图层、元件各种文件越来越多，一定要在新建的时候就尽量标明。</p>
<p><strong>2.多建图层</strong><br>最好声音一个图层，按钮一个图层，背景一个图层，遮罩一个图层，mc一个图层，分好类！</p>
<p><strong>3.把同一类文件放入一个文件夹</strong><br>如逐帧动画的素材，一个小动画就有几十张，放入文件夹方便查看。</p>
<p><strong>4.分清“插入帧”、“插入关键帧”、“插入空白关键帧”、“删除帧”、“清除关键帧”的区别</strong><br>插入帧：就是插入普通帧，是在前面一帧地基础上操作。<br>插入关键帧：关键帧的前后都可以和这一帧毫无关联！<br>删除帧：一点痕迹也不留。<br>清除关键帧：关键帧是没了，还是一个普通帧。</p>
<p><strong>5.已做逐帧动画的素材图片分类放入文件夹中时，不要剪切！</strong><br>可以直接拖进文件夹，千万不能剪切再粘贴进文件夹，否则之前做好的逐帧动画就都没了……我自己毁了两次才发现这个问题，上百帧啊……</p>
<p><strong>6.动画太快，把每一帧后面空一帧</strong><br>相当于延时的作用。</p>
<p><strong>7.记住几个快捷键</strong><br>ctrl+F3 调出属性面板<br>F5插入普通帧<br>F6插入关键帧<br>F7插入空白关键帧 </p>
<p><span id="busuanzi_container_page_pv"><br>本文已被阅读 <span id="busuanzi_value_page_pv"></span> 次。感谢您的点击！<br></span></p>
]]></content>
      
        <categories>
            
            <category> 互联网 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Flash </tag>
            
            <tag> 动画 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[STC89C52RC单片机学习记录（1602篇）]]></title>
      <url>http://hubojing.github.io/2015/11/17/STC89C52RC%E5%8D%95%E7%89%87%E6%9C%BA%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/</url>
      <content type="html"><![CDATA[<h1 id="1老式51单片机内部没有ad和da转换模块"><a href="#1-老式51单片机内部没有AD和DA转换模块" class="headerlink" title="1.老式51单片机内部没有AD和DA转换模块"></a>1.老式51单片机内部没有AD和DA转换模块</h1><p>51单片机是一种比较经典的单片机，因此问世时间比avr时间长，它的芯片内部没有集成ad转换，而avr单片机芯片内部集成了ad转换，因此传统的51需要外接ad转换芯片，而avr不需要。不过随着时间的发展，新型的51单片机也有内部集成了ad芯片的，比如stc12c2052ad。<br><strong>这也是为什么我们的课本上学AD、DA转换时，书上的例题都加了一个转换器如DAC0832、ADC0809的原因。</strong><br><a id="more"></a></p>
<h1 id="2_nop_"><a href="#2-nop" class="headerlink" title="2._nop_()"></a>2._nop_()</h1><p>这个函数是延时一个机器周期的意思，它包含在头文件intrins.h中，只要程序应用到_nop_()，就需要有头文件intrins.h的声明。</p>
<p><strong>1602液晶相关</strong></p>
<h1 id="3几个引脚功能备注"><a href="#3-几个引脚功能备注" class="headerlink" title="3.几个引脚功能备注"></a>3.几个引脚功能备注</h1><p><img src="http://i13.tietuku.com/8693823f522c8700.png" alt=""></p>
<p>第4脚：RS为寄存器选择，高电平1时选择数据寄存器、低电平0时选择指令寄存器。<br>第5脚：RW为读写信号线，高电平(1)时进行读操作，低电平(0)时进行写操作。<br>第6脚：E(或EN)端为使能(enable)端,高电平（1）时读取信息，负跳变时执行指令。</p>
<h1 id="4液晶显示程序的几点注释"><a href="#4-液晶显示程序的几点注释：" class="headerlink" title="4.液晶显示程序的几点注释："></a>4.液晶显示程序的几点注释：</h1><p><strong>LCD1602测忙：</strong><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">result = (bit)(P0 &amp; 0x80)</div></pre></td></tr></table></figure></p>
<p>(bit)强制转换成位，P0与0X80：0X80换成二进制就10000000也就是P0口的P0^7位。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">lcd_write(0,pos|0x80);</div></pre></td></tr></table></figure>
<p>变量pos按位或0x80，也就是取出变量pos的最高位数据，传递给函数lcd_write()。此函数下面应该会有用到变量pos的地方，那里得到的pos不再是原来的数据了，按位或0x80后，就只有最高位是pos原来最高位的数据，其它位全部置位0。这个函数是设定DDRAM地址，也就是设定字符显示的首地址，它只执行了一个指令“向控制器写入0x80|pos的值（这是一个或表达式，表示POS变量与0X80相或，取其结果，0x80是KS0066内部指令的关键字，是表示指定DDRAM首地址的）。</p>
<p>忙还是那么忙，累却到了一个极点。但还是感到莫大的幸福。</p>
<p><span id="busuanzi_container_page_pv"><br>本文已被阅读 <span id="busuanzi_value_page_pv"></span> 次。感谢您的点击！<br></span></p>
]]></content>
      
        <categories>
            
            <category> 通信工程 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 单片机 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[matlab函数杂谈]]></title>
      <url>http://hubojing.github.io/2015/11/10/matlab%E5%87%BD%E6%95%B0%E6%9D%82%E8%B0%88/</url>
      <content type="html"><![CDATA[<p>写了两篇正儿八经的技术文，我觉得这好像不是我的风格，我是小清新啊小清新[微笑]<br>我是大家的开心果啊[微笑]  所以，学技术也要感受到快乐。来来，回归自己。</p>
<h1 id="浅谈最近用matlab遇到的几个函数"><a href="#浅谈最近用matlab遇到的几个函数：" class="headerlink" title="浅谈最近用matlab遇到的几个函数："></a>浅谈最近用matlab遇到的几个函数：</h1><p>1.num2str   str2num<br>对于一个刚学matlab不久的人，看到回调函数里满篇num2str、str2num内心满满的问号……这感觉就和十年前学英语一样……<br>然而这个2，让我觉得这个函数很有意思……<br>是的，2就是two啊！two音同to啊！<br>num2str，顾名思义，number to string，把数值转化成字符串。同理str2num我就不解释了。<br>嗯，程序员都是懒人，能省就省必须的。<br><a id="more"></a><br>2.ezplot<br>Easy to use function plotter！E Z PLOT 懒人的智慧<br>翻译：易用的一元函数绘图函数<br><strong>使用之前要定义！要定义！要定义！</strong><br>符号函数定义法则：syms x;<br>那么问题来了，syms是什么鬼？<br>syms是定义符号变量。哦，我们就记得了，进行符号运算前要定义它，就用syms。</p>
<p>3.conv<br>数字信号处理，嗯哼，眼熟是不是？<br>卷积卷积卷积！</p>
<p><strong>辨析：filter、conv、impz函数的区别</strong><br>在MATLAB中，可以用函数y=filter(p,d,x)实现差分方程的仿真，也可以用函数 y=conv(x,h)计算卷积，用y=impz(p,d,N)求系统的冲激响应。具体例子百度一大推。</p>
<p>4.stem<br>同样数字信号处理里出现的。Stem函数用于绘图，它是绘制针状图的好手。<br>调用格式都为stem(n,x,’filled’);<br>只需要将需要绘制的数据存放在一个数组中，然后将这个数组作为参数传递给“stem”函数就可以得到输出图形。例如，下面的代码可以绘制正弦函数的图形：<br>n=1:50; %定义序列的长度是50<br>x=zeros(1,50); %注意：MATLAB中数组下标从1开始<br>x(1)=1; %冲击函数<br>stem(x); %绘制函数图形</p>
<p>5.impulse<br>函数impulse（）将绘出由向量 a 和 b 表示的连续系统在指定时间范围内的冲激响应h(t)的时域波形图，并能求出指定时间范围内冲激响应的数值解。<br>impulse（）函数有如下四种调用格式：<br>（1）impulse(b,a)：该调用格式以默认方式绘出向量 A和B定义的连续系统的冲激响应的时域波形。<br>（2）impulse(b,a,t)：绘出系统在 0～t 时间范围内冲激响应的时域波形。<br>（3）impulse(b,a,t1:p:t2)：绘出在 t1~t2 时间范围内，且以时间间隔 p均匀取样的冲激响应波形。<br>（4）y=impulse(b,a,t1:p:t2)：不绘出波形，而是求出系统冲激响应的数值解。</p>
<p>6.step<br>step（）函数可绘出连续系统的阶跃响应 g(t)在指定时间范围的时域波形并能求出其数值解，和impulse（）函数一样也有四种调用格式。<br>（1）step(b,a)：该调用格式以默认方式绘出向量 A和B定义的连续系统的阶跃响应的时域波形。<br>（2）step(b,a,t)：绘出系统在 0～t 时间范围内阶跃响应的时域波形。<br>（3）step(b,a,t1:p:t2)：绘出在 t1~t2 时间范围内，且以时间间隔p均匀取样的阶跃响应波形。<br>（4）y=step(b,a,t1:p:t2)：不绘出波形，而是求出系统阶跃响应的数值解。</p>
<p>惊人相似有木有！impulse 和 step 一定是一家人~~</p>
<p>先说这么多。最近比较忙。</p>
<p><span id="busuanzi_container_page_pv"><br>本文已被阅读 <span id="busuanzi_value_page_pv"></span> 次。感谢您的点击！<br></span></p>
]]></content>
      
        <categories>
            
            <category> 通信工程 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> matlab </tag>
            
            <tag> 函数 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[hexo优化·年轻就是折腾 | Promotion of the Blog & Young for Try]]></title>
      <url>http://hubojing.github.io/2015/11/10/hexo%E4%BC%98%E5%8C%96/</url>
      <content type="html"><![CDATA[<div align="left"><br><img src="http://7xray0.com1.z0.glb.clouddn.com/16-4-23/6883630.jpg" width="300" height="180" alt="配图" style="float:right;"><br><br><br>　　<strong>说明：本博客会长期优化，因此将之前所写相关文章合并到同一篇中，按倒序编排，以便查询。</strong><br>　　(记录繁杂，暂不英译。)<br><br><br> </div>


<a id="more"></a>
<blockquote>
<p>2016.10.22更新</p>
</blockquote>
<p>　　失踪人口短暂现身…<br>　　这么久没有更博内心有愧。其实有不定期更新<a href="https://github.com/hubojing" target="_blank" rel="external">github</a>。<br>    今天我十分惊讶于博客项目的deploy最近一次记录竟是8月，这说明了我近两个月来的微调都没有部署上来……难怪我的github不绿了！<br>　　在仔细研读了我的config并确保没有问题后，我又一次hexo c,hexo g,hexo d三部曲，然后<strong>可怕</strong>的事情发生了：Cannot GET /<br>    在搞垮博客几次后的我已经云淡风轻了，只有一个念头：我能修复好。废话不说了，进入正题：<br>解决方法：<strong>将npm重新安装一遍</strong>。这两个月一直想做成双语切换样式（目前中英文混编有些凌乱），可能意外删除了nodejs的部分文件，造成不能部署。但英文版各种bug，暂时放下，等考完再战。</p>
<p><code>npm -v</code>查看npm版本命令。</p>
<p>　　<strong>对博客进行了小的调整</strong>：<br>　　1.压缩背景图片，每张100KB以内，提高了访问速度。<br>　　2.替换了失效的图片链接，去掉了github里项目|collections|里的<a href="http://yotuku.cn/" target="_blank" rel="external">极简图床</a>，以自身血的教训证明，还是七牛云本身最稳定，不要偷懒，否则失效时眼泪止不住的流（滑稽）。<br>　　3.部分文章更新、重新排版。（前期初学markdown写的确实凌乱，中英混排也一并修改）<br>　　4.拖欠的友链已添加，失效的友链已更改。<br>　　5.为部分没有封面图的文章增添了封面图。<br>　　6.降低了封面背景透明度。<br>　　7.修改了多说头像CSS。<br>　　8.修改了评论框背景图。（快去捕捉一只野生皮卡丘！）</p>
<p>　　今天算是懂了，要做好前端，一定要懂PS。(可我明明是一个想做后端的人……)<br>　　下次更新：提交sitemap给必应。</p>
<h1 id="同步托管至coding"><a href="#同步托管至coding" class="headerlink" title="同步托管至coding"></a>同步托管至coding</h1><p>具体操作之前我已另写一篇详细教程：<a href="http://hubojing.github.io/2016/04/06/%E5%B0%86hexo-github%E5%8D%9A%E5%AE%A2%E5%90%8C%E6%AD%A5%E6%89%98%E7%AE%A1%E8%87%B3coding/">http://hubojing.github.io/2016/04/06/%E5%B0%86hexo-github%E5%8D%9A%E5%AE%A2%E5%90%8C%E6%AD%A5%E6%89%98%E7%AE%A1%E8%87%B3coding/</a></p>
<h1 id="修改背景透明度"><a href="#修改背景透明度" class="headerlink" title="修改背景透明度"></a>修改背景透明度</h1><p>yelee/source/css/_variables.styl<br>Background Color相关的4个变量，颜色为 RGBA.<br><a href="http://www.w3school.com.cn/cssref/css_colors_legal.asp" target="_blank" rel="external">http://www.w3school.com.cn/cssref/css_colors_legal.asp</a><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">// Background Color</div><div class="line">left-col-color = rgba(255,255,255,.85)</div><div class="line">mid-col-color = rgba(255,255,255,.8)</div><div class="line">article-color = rgba(255,255,255,.45)</div><div class="line">archives-color = rgba(255,255,255,.4)</div></pre></td></tr></table></figure></p>
<h1 id="左侧背景更换"><a href="#左侧背景更换" class="headerlink" title="左侧背景更换"></a>左侧背景更换</h1><p>yelee/source/css/_partial/main.styl<br>原CSS：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line">.left-col &#123;</div><div class="line">        background-image: url(http://lubiao.b0.upaiyun.com/c/2/2014/5/14/2/11/4d4059067181d8b7fbc9ac8920ff2764.jpg);</div><div class="line">        width: left-col-width;</div><div class="line">        position:fixed;</div><div class="line">        opacity:1;</div><div class="line">        transition:all .2s ease-in;</div><div class="line">        height:100%;</div><div class="line">        overflow-y: auto;</div><div class="line">        .overlay&#123;</div><div class="line">            width: 100%;</div><div class="line">            height: 180px;</div><div class="line">            background-color: black;</div><div class="line">            position: absolute;</div><div class="line">            opacity: 0.7;</div><div class="line">        &#125;</div><div class="line">        .intrude-less &#123;</div><div class="line">            width: 76%;</div><div class="line">            text-align: center;</div><div class="line">            margin: 112px auto 0;</div><div class="line">        &#125;</div><div class="line">        li:hover &#123;</div><div class="line">            background: none;</div><div class="line">            font-weight: bold;</div><div class="line">        &#125;;</div><div class="line">    &#125;</div></pre></td></tr></table></figure></p>
<p>效果图：<img src="http://7xray0.com1.z0.glb.clouddn.com/%E5%8D%9A%E5%AE%A21.png" alt="before"></p>
<p>现CSS：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">.left-col &#123;</div><div class="line">        background-image: url(/images/l1.jpg);</div><div class="line">        background-size: cover;</div><div class="line">        width: left-col-width;</div><div class="line">        position:fixed;</div><div class="line">        opacity:1;</div><div class="line">        transition:all .2s ease-in;</div><div class="line">        height:100%;</div><div class="line">        overflow-y: auto;</div><div class="line">        </div><div class="line">        .intrude-less &#123;</div><div class="line">            width: 76%;</div><div class="line">            text-align: center;</div><div class="line">            margin: 112px auto 0;</div><div class="line">        &#125;</div><div class="line">        li:hover &#123;</div><div class="line">            background: none;</div><div class="line">            font-weight: bold;</div><div class="line">        &#125;;</div><div class="line">    &#125;</div></pre></td></tr></table></figure></p>
<p>效果图：<img src="http://7xray0.com1.z0.glb.clouddn.com/%E5%8D%9A%E5%AE%A22.png" alt="after"><br><strong>也许您认为之前的更好看，因为时间紧促，我没有花很多时间在图片选取和P图上，只是为了成功实现左边栏背景不同的效果。后期还会不断调试。</strong></p>
<hr>
<blockquote>
<p>2016.4.23更新</p>
</blockquote>
<h1 id="提交sitemap给google和百度"><a href="#提交sitemap给google和百度" class="headerlink" title="提交sitemap给google和百度"></a>提交sitemap给google和百度</h1><p>　　目的：使谷歌和百度能够搜索到本博客<br>　　测试：可在浏览器中输入<br>谷歌：<br>site:hubojing.github.io<br>百度：<br>site:hubojing.coding.me</p>
<p>　　效果：<br><img src="http://7xray0.com1.z0.glb.clouddn.com/16-4-23/57096767.jpg" alt="百度搜索"><br><img src="http://7xray0.com1.z0.glb.clouddn.com/16-4-23/13459328.jpg" alt="谷歌搜索"></p>
<p>说明：百度蜘蛛爬不了github的网址，所以只好将博客同步部署到coding。详细步骤见：<a href="http://hubojing.github.io/2016/04/06/%E5%B0%86hexo-github%E5%8D%9A%E5%AE%A2%E5%90%8C%E6%AD%A5%E6%89%98%E7%AE%A1%E8%87%B3coding/">将hexo-github博客同步托管至coding</a></p>
<p><strong>步骤</strong><br>　　百度提交sitemap:</p>
<h2 id="install"><a href="#install" class="headerlink" title="install"></a>install</h2><p>if your hexo version is 2.x.x, you should install as follow:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install hexo-generator-baidu-sitemap@0.0.8 --save</div></pre></td></tr></table></figure></p>
<p>if version is 3.x.x, you should install as follow:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install hexo-generator-baidu-sitemap@0.1.1 --save</div></pre></td></tr></table></figure></p>
<h2 id="update"><a href="#Update" class="headerlink" title="Update"></a>Update</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ npm remove hexo-generator-baidu-sitemap</div><div class="line">$ npm install hexo-generator-baidu-sitemap --save</div></pre></td></tr></table></figure>
<h2 id="options"><a href="#Options" class="headerlink" title="Options"></a>Options</h2><p>if your hexo version is 2.x.x, you can configure this plugin in _config.yml.<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">baidusitemap:</div><div class="line">    path: baidusitemap.xml</div></pre></td></tr></table></figure></p>
<p>if version is 3.x.x, you should configure this plugin in _config.yml.<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">baidusitemap:</div><div class="line">path: baidusitemap.xml</div></pre></td></tr></table></figure></p>
<p>path - Sitemap path. (Default: baidusitemap.xml)</p>
<h2 id="errors"><a href="#Errors" class="headerlink" title="Errors"></a>Errors</h2><p>Maybe response is “hexo is not definded”,then you should:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">cd</span> node_modules/hexo-generator-baidu-sitemap/</div><div class="line">npm install</div></pre></td></tr></table></figure></p>
<p>　　谷歌的提交方法是类似的。</p>
<hr>
<blockquote>
<p>2016.3.1更新</p>
</blockquote>
<h1 id="公共独立空间评论切换"><a href="#公共-独立空间评论切换" class="headerlink" title="公共/独立空间评论切换"></a>公共/独立空间评论切换</h1><p>yelee/layout/_partial/article.ejs, 把 “key: post.path” 改为 “key: post.slug”，主题多说配置 domain: true<br>这样就恢复到 Yilia 的公共评论了。</p>
<h1 id="将more改为阅读全文"><a href="#将“more”改为“阅读全文”" class="headerlink" title="将“more”改为“阅读全文”"></a>将“more”改为“阅读全文”</h1><p>主题配置_config.yml里更改：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">excerpt_link: 阅读全文</div></pre></td></tr></table></figure></p>
<blockquote>
<p>2016.2.28更新</p>
</blockquote>
<p>　　这轮优化很多都挺成功，就是之前的评论都丢失了……桑心。欢迎大家留言安慰我^_^</p>
<h1 id="主题更换"><a href="#主题更换" class="headerlink" title="主题更换"></a>主题更换</h1><p>　　采取了更为美观的主题，并且有了文章内检索目录，我很喜欢。<br><strong>记得修改 Hexo 根目录对应配置文件。</strong><br><code>theme: yelee</code></p>
<h1 id="图片插入"><a href="#图片插入" class="headerlink" title="图片插入"></a>图片插入</h1><p>　　对于hexo，有两种方式：<br>　　1.使用本地路径：在hexo/source目录下新建一个img文件夹，将图片放入该文件夹下，插入图片时链接即为/img/图片名称。<br>　　2.使用微博图床，地址<a href="http://weibotuchuang.sinaapp.com" target="_blank" rel="external">http://weibotuchuang.sinaapp.com</a> ，将图片拖入区域中，会生成图片的URL，这就是链接地址。<br>以上是查找的资料。</p>
<blockquote>
<p>2016.3.1更新 </p>
</blockquote>
<h1 id="本地图片插入问题解决"><a href="#本地图片插入问题解决" class="headerlink" title="本地图片插入问题解决"></a>本地图片插入问题解决</h1><p>　　效果：<img src="/images/test.jpg" alt="测试图片"><br>　　之前本地服务器浏览可以看到图片，但部署上去就无法加载。<br>　　这是因为!<a href="E:/hexo/source/images/test.jpg" target="_blank" rel="external">测试图片</a>是<strong>绝对地址</strong>。但有相关文章说绝对地址也是可以的，但我一直没有实现，这一点有待考察。上述成功用的是相对地址。!<a href="/images/test.jpg">测试图片</a>  </p>
<p>后来准备用七牛作图床。～～用极简图床真是特别方便～～</p>
<h1 id="about-page-关于我页面"><a href="#About-Page-关于我页面" class="headerlink" title="About Page 关于我页面"></a>About Page 关于我页面</h1><p>　　使用以下代码添加一个新页面：<br>$ hexo new page about</p>
<h1 id="tags-cloud-page-标签云页面"><a href="#Tags-Cloud-Page-标签云页面" class="headerlink" title="Tags Cloud Page 标签云页面"></a>Tags Cloud Page 标签云页面</h1><p>$ hexo new page tags</p>
<h1 id="comment-评论"><a href="#Comment-评论" class="headerlink" title="Comment 评论"></a>Comment 评论</h1><p>　　多说: <a href="http://duoshuo.com/create-site/" target="_blank" rel="external">http://duoshuo.com/create-site/</a> 登陆你的多说并创建站点，在 “domain” 中填入你设定的域名的前半部分。比如完整域名是:  <a href="http://ABC.duoshuo.com" target="_blank" rel="external">http://ABC.duoshuo.com</a> ，只需填入  ABC  即可。<br>　　我之前就没设置站点……不知道还能不能找回来评论？（可以）</p>
<h1 id="主页链接"><a href="#主页链接" class="headerlink" title="主页链接"></a>主页链接</h1><p>　　我把我网易云音乐的主页链接放上来了，欢迎大家和我交流<strong>轻音乐</strong>。（移动端看不到我的主页，只有PC端可以看到。）</p>
<h1 id="细节"><a href="#细节" class="headerlink" title="细节"></a>细节</h1><p>　　一些细节改变挺多，不知道看过我之前博客样子的访客能找到多少改变之处？欢迎评论。</p>
<blockquote>
<p>2015.11.10更新</p>
</blockquote>
<h1 id="关于主题"><a href="#关于主题" class="headerlink" title="关于主题"></a>关于主题</h1><p>　　<strong>安装</strong><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ git <span class="built_in">clone</span> git@github.com:XXX/xxx.git themes/xxx</div></pre></td></tr></table></figure></p>
<p>　　<strong>更新</strong><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ <span class="built_in">cd</span> themes/xxx</div><div class="line">$ git pull</div></pre></td></tr></table></figure></p>
<h1 id="关于统计"><a href="#关于统计" class="headerlink" title="关于统计"></a>关于统计</h1><p>　　两种方法：<br>　　1.google/baidu统计<br>　　google登不上去，就用百度吧。先去百度统计注册一个账号，把你的域名输入作为被统计的网页。<br>　它会自动生成一段代码，复制下来。<br>　在主题下的_config.yml添加：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ baidu_tongji: <span class="literal">true</span></div></pre></td></tr></table></figure></p>
<p>　　接着，在主题目录下的layout\ _partial找到head.ejs<br>　　打开它，在 &lt; head&gt; 和 &lt; /head&gt; 中粘贴代码即可。</p>
<p>　　2.不蒜子<br><a href="http://ibruce.info/2015/04/04/busuanzi/" target="_blank" rel="external">不蒜子</a><br>　　两行代码解决。只不过只能显示总人数或每篇文章浏览数。</p>
<h1 id="网站小图标"><a href="#网站小图标" class="headerlink" title="网站小图标"></a>网站小图标</h1><p>　　把.ico图标放入<strong>themes主题里</strong>的source目录下！<br>　　推荐<a href="http://www.bitbug.net/" target="_blank" rel="external">比特虫</a>，在线制作图标。<br>　　同时加入代码。</p>
<h1 id="categories-tags"><a href="#categories、tags" class="headerlink" title="categories、tags"></a>categories、tags</h1><p>　　在主题目录的_config.yml中修改成 XXX: /categories/XXX 或 XXX: /tags/XXX<br>　　<strong>注意空格和英文的冒号。</strong></p>
<h1 id="更改相关字体-颜色等细节"><a href="#更改相关字体、颜色等细节" class="headerlink" title="更改相关字体、颜色等细节"></a>更改相关字体、颜色等细节</h1><p>　　这个简单，找到hexo\themes\light\source\css_partial\main.styl,里面就是基本构架，<del>就是代码有点长，耐心找找</del>。这个级别代码一点都不长……</p>
<h1 id="搭建问题的解决方案"><a href="#搭建问题的解决方案" class="headerlink" title="搭建问题的解决方案"></a>搭建问题的解决方案</h1><p>　　具体操作之前我已另写一篇详细教程：<a href="http://hubojing.github.io/2015/11/06/hexo+github%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E4%B8%AD%E5%87%BA%E7%8E%B0%E7%9A%84%E9%97%AE%E9%A2%98%E5%8F%8A%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/">http://hubojing.github.io/2015/11/06/hexo+github%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E4%B8%AD%E5%87%BA%E7%8E%B0%E7%9A%84%E9%97%AE%E9%A2%98%E5%8F%8A%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/</a></p>
<p>　　以上。</p>
<h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><p><a href="http://ibruce.info/2015/04/04/busuanzi/" target="_blank" rel="external">不蒜子</a><br><a href="http://www.tuicool.com/articles/7rIbuen/" target="_blank" rel="external">为hexo主题添加多种图片样式</a><br><a href="http://blog.fens.me/hexo-blog-github/" target="_blank" rel="external">hexo在github上构建免费的Web应用</a><br><a href="http://yotuku.cn/" target="_blank" rel="external">极简图床</a><br><a href="http://www.netcan666.com/2015/11/22/%E8%A7%A3%E5%86%B3Hexo%E7%BD%AE%E9%A1%B6%E9%97%AE%E9%A2%98/" target="_blank" rel="external">解决hexo置顶问题</a><br><a href="https://github.com/hexojs/hexo/wiki/Themes/" target="_blank" rel="external">hexo全部模板</a><br><a href="http://www.bitbug.net/" target="_blank" rel="external">比特虫</a><br><a href="http://www.tuicool.com/articles/AfQnQjy/" target="_blank" rel="external">hexo你的博客</a><br><a href="https://github.com/coneycode/hexo-generator-baidu-sitemap" target="_blank" rel="external">Sitemap generation</a><br><a href="http://www.tuicool.com/articles/YneiAzy" target="_blank" rel="external">Hexo ：（三）高级进阶</a><br><a href="http://www.tuicool.com/articles/fYZ7Zrj" target="_blank" rel="external">hexo主题中添加相册功能</a></p>
<p><span id="busuanzi_container_page_pv"></span></p>
<blockquote>
<p><strong>本文已被阅读 <span id="busuanzi_value_page_pv"></span> 次。感谢您的点击！</strong><br>  <strong>The article has been viewed <span id="busuanzi_value_page_pv"></span> times.Thank you for your visit!</strong><br></p>
</blockquote>
]]></content>
      
        <categories>
            
            <category> 互联网 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> blog </tag>
            
            <tag> hexo </tag>
            
            <tag> 优化 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[hexo+github博客搭建中出现的问题及解决方法 | The Solution of Troubles in Establishing My Blog]]></title>
      <url>http://hubojing.github.io/2015/11/06/hexo+github%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E4%B8%AD%E5%87%BA%E7%8E%B0%E7%9A%84%E9%97%AE%E9%A2%98%E5%8F%8A%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/</url>
      <content type="html"><![CDATA[<div align="left"><br><img src="http://7xray0.com1.z0.glb.clouddn.com/hexo+github.png" width="300" height="180" alt="配图" style="float:right;"><br><br><strong>hexo+github博客搭建中出现的问题及解决方法。</strong><br><strong>博客优化和高级进阶请看<a href="http://hubojing.github.io/2015/11/10/hexo%E4%BC%98%E5%8C%96/">hexo优化·年轻就是折腾</a>!</strong><br><br><br></div>

<a id="more"></a>
<blockquote>
<p>2016.8.28更新 Update</p>
</blockquote>
<h1 id="插件-plug-in-unit"><a href="#插件-plug-in-unit" class="headerlink" title="插件 plug-in unit"></a>插件 plug-in unit</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">npm install hexo-generator-index --save</div><div class="line">npm install hexo-generator-archive --save</div><div class="line">npm install hexo-generator-category --save</div><div class="line">npm install hexo-generator-tag --save</div><div class="line">npm install hexo-server --save</div><div class="line">npm install hexo-deployer-git --save</div><div class="line">npm install hexo-generator-sitemap --save</div><div class="line">npm install hexo-generator-feed --save</div><div class="line">npm install hexo-git-backup --save</div></pre></td></tr></table></figure>
<p><a href="https://hexo.io/plugins/" target="_blank" rel="external">hexo插件</a></p>
<blockquote>
<p>2016.4.7更新 Update</p>
</blockquote>
<p>　　每次hexo d之后都要输入密码，很影响心情，于是决定重新设定SSH，这次不再设定密码。现把流程记录下来备忘。<br>It affects mood to input password everytime I execute hexo d.So I decide to reset SSH and no password.Now write the steps down.</p>
<h1 id="几条重要指令-several-important-instructions"><a href="#几条重要指令-Several-important-instructions" class="headerlink" title="几条重要指令 Several important instructions"></a>几条重要指令 Several important instructions</h1><p>　　查看是否存在SSH文件。<br>To cheak if SSH file exists.<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ls -al ~/.ssh</div></pre></td></tr></table></figure></p>
<p>　　存在的话，直接删除.ssh文件夹里面所有文件，同时在github上删除SSH。<br>Delete all the files if it exist and delete SSH on the github.</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ssh-keygen -t rsa -C <span class="string">"4177997456@qq.com"</span></div></pre></td></tr></table></figure>
<p>　　回车三次（因为密码为空）。<br>Press enter three times(for keyword is empty).</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ssh-agent <span class="_">-s</span></div></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ssh-add ~/.ssh/id_rsa</div></pre></td></tr></table></figure>
<p>　　出错。Something wrong.<br>　　换成 Change into<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">eval</span> `ssh-agent <span class="_">-s</span>`</div><div class="line">ssh-add</div></pre></td></tr></table></figure></p>
<p>　　完成。Finish.<br>　　可以直接打开.ssh文件夹里的id_rsa.pub复制全部内容，也可以输入<br>You can copy id_rsa.pub in the .ssh file,or input<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">clip &lt; ~/.ssh/id_rsa.pub</div></pre></td></tr></table></figure></p>
<p>然后在github里设置好SSH即可。<br>then set SSH on the github.<br>　　最后测试一下：<br>Test it finally,<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ssh -T git@github.com</div></pre></td></tr></table></figure></p>
<p>　　如果出现 <img src="http://7xrn7f.com1.z0.glb.clouddn.com/16-4-7/51107885.jpg" alt="成功画面"> 证明设置好了。<br>If it shows<img src="http://7xrn7f.com1.z0.glb.clouddn.com/16-4-7/51107885.jpg" alt="sucess"> that all is done.</p>
<p>　　然而……<br>However~<br>　　依！然！报！错！<br>Still wrong!<br><img src="http://7xrn7f.com1.z0.glb.clouddn.com/16-4-7/11484824.jpg" alt="报错画面wrong"></p>
<p>　　这是为什么……在hexo d好几次后的我凌乱在风中……<br>　　但我没有放弃……毕竟不能把博客玩废啊是不是:-D<br>　　我想起来昨天把博客同步托管在github和coding上了。<br>　　因为我的repo先写的coding，再写的github，所以服务器先连接coding，后连接github！！！<br>　　<strong>两个托管网站都要设置好SSH之后，才能顺利部署！</strong><br>　　完工！<br>　　再也不用打密码啦~</p>
<p>WHY?!After several times hexo d,I was messy in the wind~<br>But I’m never give up~I can’t destory my blog after all :D<br>I remind of having got my blog hosted on GitHub and coding yesterday.<br>My repo place coding to the front,so the sever links coding first,then the github!!!<br><strong>Only two host webs be setted SSH,can it be well deployed!</strong><br>Finish!<br>Never using password~<br>Say goodbye to you~ </p>
<hr>
<blockquote>
<p>2015.11.06更新 Update</p>
</blockquote>
<p>今天建好了大体的框架，细节还需不断调整。现把我搭建过程中出现的若干问题以及解决方案写下来，方便自己及读者不再为这些地方犯难。<br>Today the frame generally build,and details needs improving. Now I note my problems and solutions for the readers no longer to puzzle again.</p>
<h1 id="安装-install"><a href="#安装-Install" class="headerlink" title="安装 Install"></a>安装 Install</h1><p>　　安装顺序不要错，出现WARN不用管。<br>　　我们都知道需要安装git和node.js，然后才能安装hexo。<br>　　简单介绍：Hexo 是一个快速、简洁且高效的基于Node的静态博客框架。<br>　　按理来说，从官网把软件下载下来安装，一路next就行。<br>　　打开git bash命令行，输入：</p>
<p>Installation sequence is important,and you can ignore the warning in the process.<br>We know that git and node.js are needed,and then hexo can be installed.<br>In brief,hexo is a fast, simple and efficient static blog framework which bases on Node.<br>Having downloaded the software and installed,and then you just click “next”.<br>Input this in the git bash:</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ npm install -g hexo-cli</div></pre></td></tr></table></figure>
<p>这时会发现，和很多教程所授不同啊！出现了多个WARN。不要慌！WARN可以不用管。我当时查了很久，怎么才能不WARN，后来发现其实不影响之后的搭建。</p>
<p>At this moment you will puzzle that it is different with many tutorials.It turns out some warning!Calm down,guys,you can ignore them.It doesn’t matter.</p>
<h1 id="开始建站-set"><a href="#开始建站-Set" class="headerlink" title="开始建站 Set"></a>开始建站 Set</h1><p>　　建站前直接在目标盘建立一个hexo文档，对hexo右键git bash。<br>　　<strong>记住一定在目标目录里建站！</strong><br>　　一开始我不清楚，点击桌面上的git bash就输命令，后来都不好找hexo文件在哪，严重影响之后的体验！<br>　　之后同样的，npm加到目标目录中！</p>
<p>At first,you should create a hexo file,and git bash with right click.<br><strong>Remember to set your blog in the target file!</strong><br>I made the mistake that git bash on the desktop,which resulted in the loss of hexo file.It’s bad for later set.<br>And then,the same,add npm to the target file!</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ npm install</div></pre></td></tr></table></figure>
<p>就这三步，本地的网站其实就建立好了！看起来好简单！运气不好的话就会像我一样，卡在最开始耽误了很多时间。</p>
<p>Having done these three steps,our local web is already set!Is it really easy?But you may waste much time as I did.</p>
<h1 id="本地预览-local-preview"><a href="#本地预览-Local-preview" class="headerlink" title="本地预览 Local preview"></a>本地预览 Local preview</h1><p>　　因为在Hexo 3.0后server被单独出来了,需要安装server,记住打下面一行代码：<br>Because server was divided after hexo 3.0,you should install server,and remember these code,<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ npm install hexo-server --save</div></pre></td></tr></table></figure></p>
<p>之后是：<br>and then,<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure></p>
<p>本地端口已经打开，通过浏览器访问<a href="http://localhost:4000/" target="_blank" rel="external">http://localhost:4000/</a> 可以看到网站。</p>
<p>The local port has set,and you can cheak on <a href="http://localhost:4000/" target="_blank" rel="external">http://localhost:4000/</a> through browser.</p>
<h1 id="注意细节-pay-attention-to-details"><a href="#注意细节-Pay-attention-to-details" class="headerlink" title="注意细节 Pay attention to details"></a>注意细节 Pay attention to details</h1><p>　　下载一个编辑器，我下载的是Sublime Text 2，一定要有编辑器，否则很多属性不能修改。<br>　　找到hexo文件夹，打开_config.yml，这里面就是网站的配置信息。具体配置hexo讲的很明白，我就不解释了。<br>　　我刚开始就是胡乱搭建，找不到hexo文件，更不用谈之后的配置。这里要擅用电脑里的文件搜索，有它还是可以方便的找出文件。<br>　　Hexo采用markdown语法格式书写博客，其中我们的博文就放在source里的_posts目录。</p>
<p>To download a editor.What I use now is Sublime 2.You need a editor for modify attributes.<br>The _config.yml in the hexo file is the web configuration information.The specific configuration I won’t say it here.<br>I structures it at random at first,because I couldn’t find hexo file.A good tip is to use file search to find what you want conveniently.<br>Hexo uses markdown grammer to write,and our articles are saved in the _posts file.</p>
<h1 id="写新文章-create-a-new-article"><a href="#写新文章-Create-a-new-article" class="headerlink" title="写新文章 Create a new article"></a>写新文章 Create a new article</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new title</div></pre></td></tr></table></figure>
<p>　　其中title为你的博文文件的文件名，不一定是博文的标题，只要自己看得懂就行。然后点开source里的_posts目录，打开title.md，我们就可以在里面进行写作了。当然，有一些语法规定及格式要求，我也还在学习中。</p>
<p>The title is your article file name,not your article name,so just you understand is alright.</p>
<p>　　之后需要静态化页面：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>
<p>hexo部署：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure></p>
<p>　　此时本地站点大体搭建好了。<br>Now the local site is set.</p>
<p>　　<strong>如果配置_config.yml出错，本地网站是一定搭不好的！</strong><br>　　<strong>而_config.yml中比较难发现的就是，每一个红体单词冒号后要空格！！！</strong></p>
<p><strong>If the _config.yml is wrong,your site can’t be create.</strong><br><strong>The detail easy to overlook is that there leaves a blank space after colon!!!</strong></p>
<p>　　接下来把网站部署到github上。<br>　　首先去github上注册个账号。<br>　　再建立一个新的repositories。名称是username.github.io，这也是最终搭建好的博客的链接地址。</p>
<p>The following thing is to deploy the site on the github.<br>At the beginning,you should have a github account.<br>Then you should create a new repositories,which name is username.github.io,and it is your blog link address.</p>
<h1 id="勿用github自动页面生成器-do-not-use-the-github-automatic-page-generator"><a href="#勿用github自动页面生成器-Do-not-use-the-github-automatic-page-generator" class="headerlink" title="勿用github自动页面生成器 Do not use the github automatic page generator"></a>勿用github自动页面生成器 Do not use the github automatic page generator</h1><p>　　尤其初学者！否则之后的hexo博客很难部署上去！<br>　　如果已经用了自动页面生成器，可以删除这一个repositories，再新建一个。<br>　　在完成上述操作后，到Hexo文件夹下的_config.yml文件，将最下方的deploy部分修改为</p>
<p>Exspecially a beginer!<br>If you use it already,you can delete this repositories,and create another.<br>After all the steps done,revise the deploy of the _config.yml as</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ deploy</div><div class="line">	<span class="built_in">type</span>: git</div><div class="line">	repo: git@github.com:username/username.github.io.git</div></pre></td></tr></table></figure>
<p>　　<strong>每个冒号后有一个空格！！！</strong><br>　　到此，github配置完成。</p>
<p><strong>There leaves a blank space after each colon!!!*</strong><br>So much for that,the deploy is done.</p>
<p>　　现在要把hexo和github联系在一起，还需要SSH。<br>　　首先,打开git bash:</p>
<p>If hexo links to github,SSH is needed.<br>Open git bash,</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ git config --global user.name <span class="string">"XXX"</span></div><div class="line">$ git config --global user.email <span class="string">"XXXXXX@mail.com"</span></div></pre></td></tr></table></figure>
<p>　　邮箱是你注册github的邮箱。<br>　　生成密钥：</p>
<p>The e-mail is your github e-mail.<br>Create private key,</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ ssh-keygen -t rsa -C “XXXXXX@mail.com”</div></pre></td></tr></table></figure>
<p>　　然后设置路径，最好不要更改id_rsa和id_rsa.pub的名字。</p>
<p>　　密码可有可无(最好无)，但输入时你也看不到自己输的密码的。<br>登录github，在右上角settings（不是repositories里的settings）有SSH keys。<br>复制你设置路径里的id_rsa.pub用编辑器打开得到的代码，粘贴到SSH keys，标题自定义。<br>验证：</p>
<p>Set path,and don’t change id_rsa and id_rsa.pub name.<br>The password is not esstial(none maybe convinent),but you can’t see it when you enter the code.<br>Then you sign in the github,and finds SSH keys in the setting(not setting in the repositories).<br>Copy your code in the id_rsa.pub,and paste it to SSH keys.Customizable title is needed.<br>Verity,</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ ssh -T git@github.com</div></pre></td></tr></table></figure>
<p>一般来说，是会报错的。Permission denied (publickey).让多少人揪心的一句话。</p>
<p>Generally,something goes wrong.”Permission denied (publickey)”,may let you not happy.</p>
<h1 id="复制公钥-copy-public-key"><a href="#复制公钥-Copy-public-key" class="headerlink" title="复制公钥 Copy public key"></a>复制公钥 Copy public key</h1><p>　　用计算机搜索文件.ssh文件，找出目标路径，之前设置的id_rsa和id_rsa.pub复制到这里来！<br>同时，如果多次设置SSH，最好把其中一个known开头的文件里前几次的公钥清空。<br>成功的标志：</p>
<p>Search .ssh file in the computer,and paste id_rsa and id_rsa.pub to it.<br>If you set SSH many times,you’d better clear the previous public key in the known-start file.<br>The success sign,</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ Hi username! You<span class="string">'ve successfully authenticated, but GitHub does not provide shell access.</span></div></pre></td></tr></table></figure>
<p>最后，</p>
<p>In the end,</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ npm install hexo-deployer-git --save</div><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
<h1 id="基本指令-basic-instructions"><a href="#基本指令-Basic-instructions" class="headerlink" title="基本指令 Basic instructions"></a>基本指令 Basic instructions</h1><p>　　每次修改或者发文后，这两条命令一定要打，否则博客不能更新：</p>
<p>Everytime you revise or create a article,two instrucions are needed,or your post can’t be updated.</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
<p>$ hexo server 为在本地端口打开。<br>(简记abbreviation   hexo g   hexo s   hexo d)<br>　　期间还遇到一些小问题，不典型，就不说啦。总之，初学者刚开始搭建一定要有耐心，我仅是node.js就重装了五遍以上，有时候看教程很复杂，其实一步步做不难！不要放弃！跟着一个教程做出现问题时，及时在网上寻求答案，查看其它的教程。我在搭建此博客时，查阅的教程几十种了，很多人的方法很好，也算是走捷径了！</p>
<p>There exists many small problems in the process.In short,the patience is vital during the course.According to me,I reset node.js for more than five times.The tutorial maybe complex,but you can feel easy if you do it step by step!Never give up!When any problem arise,it is useful to search solutions on the internet or looking up in another tutorial.I call the tips a shortcut.</p>
<p>　　以上，就是我搭建过程中出现的问题及解决方案。</p>
<p>　　Above,it is the problems and solutions in the process.</p>
<hr>
<h1 id="参考资料-reference-material"><a href="#参考资料-Reference-material" class="headerlink" title="参考资料 Reference material"></a>参考资料 Reference material</h1><p>1.<a href="http://d12mnit.github.io/2015/10/13/hexo%E4%B8%8Egithub_pages%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E6%95%99%E7%A8%8B/" target="_blank" rel="external">hexo与github_pages搭建博客教程</a><br>2.<a href="http://www.tuicool.com/articles/AfQnQjy/" target="_blank" rel="external">hexo你的博客</a><br>3.<a href="http://www.jianshu.com/p/ba76165ca84d" target="_blank" rel="external">hexo干货系列（一）</a><br>4.<a href="http://wp.huangshiyang.com/hexo%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88" target="_blank" rel="external">hexo常见问题解决方案</a></p>
<hr>
<p><span id="busuanzi_container_page_pv"></span></p>
<blockquote>
<p><strong>本文已被阅读 <span id="busuanzi_value_page_pv"></span> 次。感谢您的点击！</strong><br>  <strong>The article has been viewed <span id="busuanzi_value_page_pv"></span> times.Thank you for your visit!</strong><br></p>
</blockquote>
]]></content>
      
        <categories>
            
            <category> 互联网 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> blog </tag>
            
            <tag> hexo </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Hello World！]]></title>
      <url>http://hubojing.github.io/2015/11/06/Hello%20World/</url>
      <content type="html"><![CDATA[<div align="left"><br><img src="http://7xray0.com1.z0.glb.clouddn.com/16-5-13/17269536.jpg" width="300" height="180" alt="配图" style="float:right;"><br><br><br><strong>利用一周零零碎碎的时间搭建起来，使用hexo在github上的个人独立博客初见雏形。</strong><br><br><br> </div>


<a id="more"></a> 
<p>作为一名通信人，始终要记住科学技术是第一生产力！<br>大三已至，也算入了互联网+通信领域的门。入门不难，深造不易。将把自己在学习中和实践中的技术经验以及点滴收获记录下来，作为自己在技术之路的见证和成长。<br>读者可以随时在文章下方评论，以及与我联系，欢迎学术交流，难题沟通，批评指正，尤其是专业相关（比如数模电）、数学方面（数学虐我千百遍，我待数学如初恋[笑]）。自觉天资不高，但对于技术，心向往之，但愿各位指点一二。</p>
<p>I manage to find time to build this blog for a week,which used hexo static frame on the github,and it is finished preliminarily.<br>As a Communication man,we should always keep in mind that science and technology are primary productive force!<br>I’m already learn elementary courses since I’m a junior student today. To cross the threshold is not difficult, but mastery is another question.Therefore,I will take notes on the blog through the learning and practice process,to witness my growth on the way.<br>Readers can commit on the bottom of the article,and contact with me.Welcome academic exchange and question communication.You can oblige me with your valuable comments about major related(digital electronic technology or analog electronic technology,for instance),especially math problem(^_^I am fond of mathematic).I’m not talent,but I’m adore of IT.I would appreciate it if you give me some guidance.</p>
<p><strong>Talk is cheap,show me the code!</strong><br><strong>Just do IT！</strong></p>
<!--more-->
<p><span id="busuanzi_container_page_pv"><br>本文已被阅读 <span id="busuanzi_value_page_pv"></span> 次。感谢您的点击！<br></span></p>
]]></content>
      
        <categories>
            
            <category> 杂谈 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> idea </tag>
            
        </tags>
        
    </entry>
    
  
  
</search>
