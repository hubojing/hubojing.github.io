<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[Hexo博客进阶优化]]></title>
      <url>https://hubojing.github.io/2019/09/14/hexo%E5%8D%9A%E5%AE%A2%E8%BF%9B%E9%98%B6%E4%BC%98%E5%8C%96/</url>
      <content type="html"><![CDATA[<div align="left"><br><img src="https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1511116107294&di=a91ad5adc5431ecb1865be565f7b0e82&imgtype=0&src=http%3A%2F%2Fpic4.zhimg.com%2Fd4c1239e75c02e8482c22017a6c8d407_r.jpg" width="300" height="180" style="float:right;"><br>　　<br>　　　<br>　　<strong>Hexo优化的一些汇总整理。</strong><br>　　<br>　　<br> </div>

<a id="more"></a>
<h1 id="老记录"><a href="#老记录" class="headerlink" title="老记录"></a>老记录</h1><p><a href="https://hubojing.github.io/2015/11/10/hexo%E4%BC%98%E5%8C%96/">https://hubojing.github.io/2015/11/10/hexo%E4%BC%98%E5%8C%96/</a><br>原来写的，排版什么的不是很好看…</p>
<h2 id="一些重要参考"><a href="#一些重要参考" class="headerlink" title="一些重要参考"></a>一些重要参考</h2><ul>
<li>HEXO  <a href="https://hexo.io/" target="_blank" rel="noopener">https://hexo.io/</a></li>
<li>Hexo在github上构建免费的web应用   <a href="http://blog.fens.me/hexo-blog-github/" target="_blank" rel="noopener">http://blog.fens.me/hexo-blog-github/</a></li>
<li>Hexo你的博客  <a href="http://www.tuicool.com/articles/AfQnQjy/" target="_blank" rel="noopener">http://www.tuicool.com/articles/AfQnQjy/</a></li>
<li>不蒜子  <a href="http://ibruce.info/2015/04/04/busuanzi/" target="_blank" rel="noopener">http://ibruce.info/2015/04/04/busuanzi/</a></li>
<li>Markdown 编辑器语法指南  <a href="https://segmentfault.com/markdown/" target="_blank" rel="noopener">https://segmentfault.com/markdown/</a></li>
<li>Markdown入门  <a href="http://www.360doc.com/content/13/1119/13/3300331_330476656.shtml/" target="_blank" rel="noopener">http://www.360doc.com/content/13/1119/13/3300331_330476656.shtml/</a></li>
<li>GitHub for Windows 2.0使用教程  <a href="http://www.cnblogs.com/jiqing9006/p/3987702.html/" target="_blank" rel="noopener">http://www.cnblogs.com/jiqing9006/p/3987702.html/</a></li>
<li>Github使用技巧  higrid.net/hi/docs/github-cheat-sheet/</li>
<li>解决Hexo置顶问题  <a href="http://www.netcan666.com/2015/11/22/%E8%A7%A3%E5%86%B3Hexo%E7%BD%AE%E9%A1%B6%E9%97%AE%E9%A2%98/" target="_blank" rel="noopener">http://www.netcan666.com/2015/11/22/%E8%A7%A3%E5%86%B3Hexo%E7%BD%AE%E9%A1%B6%E9%97%AE%E9%A2%98/</a></li>
<li>如何向google提交sitemap（详细）  <a href="http://fionat.github.io/blog/2013/10/23/sitemap/" target="_blank" rel="noopener">http://fionat.github.io/blog/2013/10/23/sitemap/</a></li>
<li>用微信与Github搭建“微博”  <a href="https://joway.github.io/posts/Toy/2016-05-14-%E7%94%A8%E5%BE%AE%E4%BF%A1%E4%B8%8EGithub%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E5%B1%9E%E4%BA%8E%E8%87%AA%E5%B7%B1%E7%9A%84%E5%BE%AE%E5%8D%9A.html/" target="_blank" rel="noopener">https://joway.github.io/posts/Toy/2016-05-14-%E7%94%A8%E5%BE%AE%E4%BF%A1%E4%B8%8EGithub%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E5%B1%9E%E4%BA%8E%E8%87%AA%E5%B7%B1%E7%9A%84%E5%BE%AE%E5%8D%9A.html/</a></li>
<li>多说样式（UA浏览器标识、旋转头像）  <a href="http://moxfive.xyz/2015/09/29/duoshuo-style/#" target="_blank" rel="noopener">http://moxfive.xyz/2015/09/29/duoshuo-style/#</a></li>
<li>添加相册功能  <a href="http://www.tuicool.com/articles/fYZ7Zrj" target="_blank" rel="noopener">http://www.tuicool.com/articles/fYZ7Zrj</a></li>
<li>页面自动刷新与移动端调试  <a href="http://moxfive.xyz/2016/03/27/hexo-browsersync/" target="_blank" rel="noopener">http://moxfive.xyz/2016/03/27/hexo-browsersync/</a></li>
<li>chrome 谷歌浏览器报错DNS查找失败的解决办法 <a href="http://www.t522.com/suibi/238.html/" target="_blank" rel="noopener">http://www.t522.com/suibi/238.html/</a></li>
<li>用自己的页面做主页 <a href="https://jacklightchen.github.io/blog/2016/10/27/HexoOverview/" target="_blank" rel="noopener">https://jacklightchen.github.io/blog/2016/10/27/HexoOverview/</a></li>
<li>统计文章字数  <a href="https://github.com/willin/hexo-wordcount" target="_blank" rel="noopener">https://github.com/willin/hexo-wordcount</a></li>
</ul>
<h2 id="高级进阶"><a href="#高级进阶" class="headerlink" title="高级进阶"></a>高级进阶</h2><ul>
<li>Daocloud持续集成————Hexo博客自动发布系统  <a href="https://nullun.tk/ci/daocloud/Daocloud%E6%8C%81%E7%BB%AD%E9%9B%86%E6%88%90%E2%80%94%E2%80%94%E2%80%94%E2%80%94Hexo%E5%8D%9A%E5%AE%A2%E8%87%AA%E5%8A%A8%E5%8F%91%E5%B8%83%E7%B3%BB%E7%BB%9F/#more/" target="_blank" rel="noopener">https://nullun.tk/ci/daocloud/Daocloud%E6%8C%81%E7%BB%AD%E9%9B%86%E6%88%90%E2%80%94%E2%80%94%E2%80%94%E2%80%94Hexo%E5%8D%9A%E5%AE%A2%E8%87%AA%E5%8A%A8%E5%8F%91%E5%B8%83%E7%B3%BB%E7%BB%9F/#more/</a></li>
<li>使用 Termux 在手机上运行 linux 黑科技 <a href="http://www.oyohyee.com/post/Note/Termux.html/" target="_blank" rel="noopener">http://www.oyohyee.com/post/Note/Termux.html/</a></li>
<li>Hexo+Github实现相册功能 <a href="http://blog.csdn.net/u013082989/article/details/70162293/" target="_blank" rel="noopener">http://blog.csdn.net/u013082989/article/details/70162293/</a></li>
<li>Hexo+yilia主题实现文章目录和添加视频 <a href="http://blog.csdn.net/u013082989/article/details/70212008/" target="_blank" rel="noopener">http://blog.csdn.net/u013082989/article/details/70212008/</a></li>
<li>用 Hexo 做个人 Wiki 知识管理系统 <a href="https://www.v2ex.com/t/347176?p=1/" target="_blank" rel="noopener">https://www.v2ex.com/t/347176?p=1/</a></li>
<li>Hexo自定义页面的方法 <a href="http://www.cnblogs.com/refined-x/p/7160174.html/" target="_blank" rel="noopener">http://www.cnblogs.com/refined-x/p/7160174.html/</a></li>
<li>在 Hexo 博客中跳过渲染，创建自定义网页 <a href="http://www.jianshu.com/p/f89428fce8d5/" target="_blank" rel="noopener">http://www.jianshu.com/p/f89428fce8d5/</a></li>
<li>增加打赏功能  <a href="http://cighao.com/2016/02/23/add-donate-to-hexo/" target="_blank" rel="noopener">http://cighao.com/2016/02/23/add-donate-to-hexo/</a></li>
<li>hexo移植    <a href="http://nodlee.com/2015/06/07/how-to-porting-hexo/#more" target="_blank" rel="noopener">http://nodlee.com/2015/06/07/how-to-porting-hexo/#more</a></li>
</ul>
<h2 id="网页特效"><a href="#网页特效" class="headerlink" title="网页特效"></a>网页特效</h2><ul>
<li>鼠标点击特效 <a href="https://laod.cn/design/page/javascript-texiao.html" target="_blank" rel="noopener">https://laod.cn/design/page/javascript-texiao.html</a></li>
</ul>
<h1 id="sort"><a href="#sort" class="headerlink" title="sort"></a>sort</h1><p>node_modules/hexo-generator-index/lib/generator.js<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">&apos;use strict&apos;;</span><br><span class="line"></span><br><span class="line">var pagination = require(&apos;hexo-pagination&apos;);</span><br><span class="line"></span><br><span class="line">module.exports = function(locals)&#123;</span><br><span class="line">  var config = this.config;</span><br><span class="line">  var posts = locals.posts;</span><br><span class="line"></span><br><span class="line">    posts.data = posts.data.sort(function(a, b) &#123;</span><br><span class="line">        if(a.top &amp;&amp; b.top) &#123; // 两篇文章top都有定义</span><br><span class="line">            if(a.top == b.top) return b.date - a.date; // 若top值一样则按照文章日期降序排</span><br><span class="line">            else return b.top - a.top; // 否则按照top值降序排</span><br><span class="line">        &#125;</span><br><span class="line">        else if(a.top &amp;&amp; !b.top) &#123; // 以下是只有一篇文章top有定义，那么将有top的排在前面（这里用异或操作居然不行233）</span><br><span class="line">            return -1;</span><br><span class="line">        &#125;</span><br><span class="line">        else if(!a.top &amp;&amp; b.top) &#123;</span><br><span class="line">            return 1;</span><br><span class="line">        &#125;</span><br><span class="line">        else return b.date - a.date; // 都没定义按照文章日期降序排</span><br><span class="line"></span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">  var paginationDir = config.pagination_dir || &apos;page&apos;;</span><br><span class="line"></span><br><span class="line">  return pagination(&apos;&apos;, posts, &#123;</span><br><span class="line">    perPage: config.index_generator.per_page,</span><br><span class="line">    layout: [&apos;index&apos;, &apos;archive&apos;],</span><br><span class="line">    format: paginationDir + &apos;/%d/&apos;,</span><br><span class="line">    data: &#123;</span><br><span class="line">      __index: true</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></p>
<p>按更新时间排序：改一下上面文章里的代码 a.date, b.date 分别改为 a.updated, b.updated<br>参考资料：<a href="http://www.netcan666.com/2015/11/22/解决Hexo置顶问题/" target="_blank" rel="noopener">http://www.netcan666.com/2015/11/22/解决Hexo置顶问题/</a></p>
<p>原始代码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&apos;use strict&apos;;</span><br><span class="line"></span><br><span class="line">var pagination = require(&apos;hexo-pagination&apos;);</span><br><span class="line"></span><br><span class="line">module.exports = function(locals)&#123;</span><br><span class="line">  var config = this.config;</span><br><span class="line">  var posts = locals.posts.sort(&apos;-date&apos;);</span><br><span class="line">  var paginationDir = config.pagination_dir || &apos;page&apos;;</span><br><span class="line"></span><br><span class="line">  return pagination(&apos;&apos;, posts, &#123;</span><br><span class="line">    perPage: config.index_generator.per_page,</span><br><span class="line">    layout: [&apos;index&apos;, &apos;archive&apos;],</span><br><span class="line">    format: paginationDir + &apos;/%d/&apos;,</span><br><span class="line">    data: &#123;</span><br><span class="line">      __index: true</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></p>
]]></content>
      
        <categories>
            
            <category> 互联网 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[SSD重装系统最简教程]]></title>
      <url>https://hubojing.github.io/2019/09/12/SSD%E9%87%8D%E8%A3%85%E7%B3%BB%E7%BB%9F%E6%9C%80%E7%AE%80%E6%95%99%E7%A8%8B/</url>
      <content type="html"><![CDATA[<div align="left"><br><img src="https://github.com/hubojing/BlogImages/blob/master/SSD重装系统最简教程——SSD.jpg?raw=true" width="300" height="180" style="float:right;"><br><br><br>　　<strong>懒人装机必备。（预计可以节约100元装机费）</strong><br><br><br> </div>

<a id="more"></a>
<h1 id="起因"><a href="#起因" class="headerlink" title="起因"></a>起因</h1><p>一直没看好心仪的笔记本，但为了接下来的学习任务，决定先把我古老的联想Y400改造了凑合用一段时间，刚好内存和SSD的价格都降下来了。换了8G内存，加了SSD。</p>
<h1 id="硬件"><a href="#硬件" class="headerlink" title="硬件"></a>硬件</h1><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="https://github.com/hubojing/BlogImages/blob/master/SSD重装系统最简教程——内存条.jpg?raw=true" alt="内存条" title="">
                </div>
                <div class="image-caption">内存条</div>
            </figure>
<p>目的是能用就OK，所以越便宜越好……<br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="https://github.com/hubojing/BlogImages/blob/master/SSD重装系统最简教程——SSD.jpg?raw=true" alt="SSD" title="">
                </div>
                <div class="image-caption">SSD</div>
            </figure><br>SSD也有更便宜的，不过数据还是重要，买个适配好点的吧…（数据最终还是要存到硬盘的嘛…内存坏了的损失比SSD小，希望我没想错）<br>具体物理安装过程没什么好说的，就是拆机就完事了。</p>
<h1 id="重装系统"><a href="#重装系统" class="headerlink" title="重装系统"></a>重装系统</h1><p>真不建议迁移系统，感觉现在所谓的迁移系统都有很多的缺漏，不是真正意义上的迁移。我试了试傲梅分区助手的迁移功能，其实还是假迁移。还是重装最合适。</p>
<h2 id="第一步"><a href="#第一步" class="headerlink" title="第一步"></a>第一步</h2><p>MSDN，我告诉你下载原版win10的iso文件。</p>
<h2 id="第二步"><a href="#第二步" class="headerlink" title="第二步"></a>第二步</h2><p>一个很偷懒且硬核的方法：先暂时卸下机械硬盘，只安装SSD。然后直接点开下载的文件里的setup安装就好了。不过我没尝试，因为好不容易把后盖给盖上了，实在是不想拧螺丝了。<br>网上有很多U盘制作工具，但是不够简洁。而且还容易制作失败。（我用老毛桃制作就失败了…)<br>我觉得最简单的是用软碟通UltraISO制作U盘启动盘。所以先下载UltraISO，安装。</p>
<h2 id="第三步"><a href="#第三步" class="headerlink" title="第三步"></a>第三步</h2><p>插入一个空8G以上U盘。<br>打开UltraISO，将下载好的iso文件导入，点击<code>启动</code>-<code>写入硬盘映像</code>。写入，完成。</p>
<h2 id="第四步"><a href="#第四步" class="headerlink" title="第四步"></a>第四步</h2><p>重启，屏幕亮起时按F1进入BIOS，将USB启动设置优先级到第一。保存。系统进入安装引导页。</p>
<h2 id="第五步"><a href="#第五步" class="headerlink" title="第五步"></a>第五步</h2><p>正常安装，记得将系统选择安装在SSD里。等待。</p>
<p>重装成功！</p>
<p>我看到有同学花100块去找人装系统，唉，这个钱花的好亏。（我只收50！<del>手动滑稽</del>）</p>
]]></content>
      
        <categories>
            
            <category> 互联网 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 硬件 </tag>
            
            <tag> 装机 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Github+SSH就这么连]]></title>
      <url>https://hubojing.github.io/2019/09/11/Github+SSH%E5%B0%B1%E8%BF%99%E4%B9%88%E8%BF%9E/</url>
      <content type="html"><![CDATA[<div align="left"><br><img src="https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1568355520376&di=b5e9cb8cb9ab1438053528171c8ec33a&imgtype=0&src=http%3A%2F%2Fa1.jikexueyuan.com%2Fhome%2F201509%2F14%2Fab63%2F55f627e6b9bd3.jpg" width="300" height="180" style="float:right;"><br><br><br>　　<strong>这篇文章很短。</strong><br><br><br> </div>

<a id="more"></a>
<h1 id="官方说明"><a href="#官方说明" class="headerlink" title="官方说明"></a>官方说明</h1><p><a href="https://help.github.com/en/articles/connecting-to-github-with-ssh" target="_blank" rel="noopener">https://help.github.com/en/articles/connecting-to-github-with-ssh</a><br>不知道是我英语进步了还是咋的，感觉官网的文档写的特别清晰，阅读起来也特别清爽。</p>
<p>电脑重装了，反正又要添加SSH。我寻思着以前有记录就翻了翻，唉，刚写技术博那会儿的文章真是乱的不能看。干脆重新整理一下吧。</p>
<p>整个过程非常简单！<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ssh-keygen -t rsa -b 4096 -C <span class="string">"your_email@example.com"</span></span><br></pre></td></tr></table></figure></p>
<p>不停回车。（没设密码）</p>
<p>在<code>/c/Users/you/.ssh</code>文件夹中复制id_rsa.pub中的全部。</p>
<p>在Github的Setting中的<code>SSH and GPG keys</code>中新建SSH，并粘贴刚才的内容。</p>
<p>完成！</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure>
<p>检测一下，<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Hi hubojing! You&apos;ve successfully authenticated, but GitHub does not provide shell access.</span><br></pre></td></tr></table></figure></p>
<p>成功！</p>
]]></content>
      
        <categories>
            
            <category> 互联网 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Github </tag>
            
            <tag> SSH </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[ChromeDevTools调试备忘]]></title>
      <url>https://hubojing.github.io/2019/08/14/ChromeDevTools%E5%BC%80%E5%8F%91%E8%80%85%E5%B7%A5%E5%85%B7%E8%B0%83%E8%AF%95%E6%8C%87%E5%8D%97/</url>
      <content type="html"><![CDATA[<div align="left"><br><img src="http://img5.imgtn.bdimg.com/it/u=2635564510,3265083659&fm=15&gp=0.jpg" width="300" height="180" style="float:right;"><br><br><br>　　<strong>笔记备忘。</strong><br><br><br> </div>

<a id="more"></a>
<h1 id="打开Chrome开发者工具"><a href="#打开Chrome开发者工具" class="headerlink" title="打开Chrome开发者工具"></a>打开Chrome开发者工具</h1><ol>
<li>打开最近关闭的状态：Ctrl+Shift+I(Windows) 或 Cmd+Opt+I(Mac)</li>
<li>快速查看DOM或样式：Ctrl+Shift+C(Windows) 或 Command+Option+C(Mac)</li>
<li>快速进入Console查看log运行JavaScript:Ctrl+Shift+J(Windows) 或 Command+Option+J(Mac)</li>
<li>F12打开</li>
</ol>
<h1 id="在Console中访问节点"><a href="#在Console中访问节点" class="headerlink" title="在Console中访问节点"></a>在Console中访问节点</h1><ul>
<li>使用<code>document.querySelectAll</code>访问</li>
<li>使用<code>$0</code>快速访问选中的元素</li>
<li>拷贝 -&gt; JS Path</li>
</ul>
<p>在Elements页面按ESC键可以同时打开Console面板。</p>
<h1 id="DOM中断点调试"><a href="#DOM中断点调试" class="headerlink" title="DOM中断点调试"></a>DOM中断点调试</h1><ul>
<li>属性修改时打断点：break on -&gt; attribute modifications</li>
<li>节点删除时打断点：break on -&gt; node removal</li>
<li>子树修改时打断点：break on -&gt; subtree modifications</li>
</ul>
<h1 id="断点调试JS"><a href="#断点调试JS" class="headerlink" title="断点调试JS"></a>断点调试JS</h1><ul>
<li>console.log()</li>
<li>alert()</li>
<li>debugger</li>
<li>事件断点</li>
<li>鼠标选中</li>
</ul>
]]></content>
      
        <categories>
            
            <category> 互联网 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Web </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[初涉Maven]]></title>
      <url>https://hubojing.github.io/2019/08/10/%E5%88%9D%E6%B6%89Maven/</url>
      <content type="html"><![CDATA[<div align="left"><br><img src="https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1566053618&di=1c2188a5925b739efac2428e79001e35&imgtype=jpg&er=1&src=http%3A%2F%2Fi1.wp.com%2Fdevops.com%2Fwp-content%2Fuploads%2F2015%2F11%2FMaven_logo.svg_.png" width="300" height="180" style="float:right;"><br><br><br>　　<strong>笔记。</strong><br><br><br> </div>

<a id="more"></a>
<h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><p>官网下载安装包，解压。</p>
<p>bin目录包含mvn的运行脚本<br>boot目录包含一个类加载器的框架<br>conf是配置文件目录</p>
<p>配置环境变量<code>M2_HOME</code><br>变量值：<code>E:\maven\apache-maven-3.6.1</code></p>
<p>Path中添加<code>%M2_HOME%\bin</code></p>
<p>cmd输入<code>mvn -v</code></p>
<p>输出<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Maven home: E:\maven\apache-maven-3.6.1\bin\..</span><br><span class="line">Java version: 1.8.0_201, vendor: Oracle Corporation, runtime: E:\JDK\jre</span><br><span class="line">Default locale: zh_CN, platform encoding: GBK</span><br><span class="line">OS name: &quot;windows 10&quot;, version: &quot;10.0&quot;, arch: &quot;amd64&quot;, family: &quot;windows&quot;</span><br></pre></td></tr></table></figure></p>
<p>即安装成功。</p>
<h1 id="结构"><a href="#结构" class="headerlink" title="结构"></a>结构</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">src</span><br><span class="line">    -main</span><br><span class="line">        -java</span><br><span class="line">            -package</span><br><span class="line">    -test</span><br><span class="line">        -java</span><br><span class="line">            -package</span><br><span class="line">    resources</span><br></pre></td></tr></table></figure>
<p>新建结构E:\maven\code\maven01\src\main\java\com\jinger\maven01\model<br>在这里新建HelloWorld.java<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.jinger.maven01.model;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloWorld</span></span>&#123;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> String <span class="title">sayHello</span><span class="params">()</span></span>&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="string">"Hello World!"</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>新建结构E:\maven\code\maven01\src\test\java\com\jinger\maven01\model<br>在这里新建HelloWorldTest.java<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.jinger.maven01.model;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.junit.*;</span><br><span class="line"><span class="keyword">import</span> org.junit.Assert.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloWorldTest</span></span>&#123;</span><br><span class="line">	<span class="meta">@Test</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testHello</span><span class="params">()</span></span>&#123;</span><br><span class="line">		Assert.assertEquals(<span class="string">"Hello World!"</span>,<span class="keyword">new</span> HelloWorld().sayHello());</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>在E:\maven\code\maven01新建pom.xml<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/POM/4.0.0"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line">	</span><br><span class="line">	<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.jinger.maven01<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven01-model<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">	</span><br><span class="line">	<span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">version</span>&gt;</span>4.10<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>groupId的值是项目包名<br>artifactId的值是模块名</p>
<p>cmd里<code>mvn compile</code>编译，第一次安装会自动下载相关依赖。</p>
<p><code>mvn test</code>测试，显示<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">-------------------------------------------------------</span><br><span class="line"> T E S T S</span><br><span class="line">-------------------------------------------------------</span><br><span class="line">Running com.jinger.maven01.model.HelloWorldTest</span><br><span class="line">Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.039 sec</span><br><span class="line"></span><br><span class="line">Results :</span><br><span class="line"></span><br><span class="line">Tests run: 1, Failures: 0, Errors: 0, Skipped: 0</span><br><span class="line"></span><br><span class="line">[INFO] ------------------------------------------------------------------------</span><br><span class="line">[INFO] BUILD SUCCESS</span><br><span class="line">[INFO] ------------------------------------------------------------------------</span><br><span class="line">[INFO] Total time:  2.068 s</span><br><span class="line">[INFO] Finished at: 2019-07-28T17:26:39+08:00</span><br><span class="line">[INFO] ------------------------------------------------------------------------</span><br></pre></td></tr></table></figure></p>
<p>跟目录下生成了target文件夹</p>
<p><code>mvn package</code>打包</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[INFO] Building jar: E:\maven\code\maven01\target\maven01-model-0.0.1SNAPSHOT.jar</span><br><span class="line">[INFO] ------------------------------------------------------------------------</span><br><span class="line">[INFO] BUILD SUCCESS</span><br><span class="line">[INFO] ------------------------------------------------------------------------</span><br><span class="line">[INFO] Total time:  01:46 min</span><br><span class="line">[INFO] Finished at: 2019-07-28T17:29:43+08:00</span><br><span class="line">[INFO] ------------------------------------------------------------------------</span><br></pre></td></tr></table></figure>
<p>生成了jar包。</p>
<h1 id="基础"><a href="#基础" class="headerlink" title="基础"></a>基础</h1><p>mvn -v 查看maven版本<br>    compile 编译<br>    test 测试<br>    package 打包</p>
<pre><code>clean 删除target
install 安装jar包到本地仓库中
</code></pre><p>新建结构E:\maven\code\maven02\src\main\java\com\jinger\maven02\util<br>在这里新建Speak.java<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.jinger.maven02.util;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.jinger.maven01.model.HelloWorld;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Speak</span></span>&#123;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> String <span class="title">sayHi</span><span class="params">()</span></span>&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="keyword">new</span> HelloWorld().sayHello();</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>新建结构E:\maven\code\maven02\src\test\java\com\jinger\maven02\util<br>在这里新建SpeakTest.java<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.jinger.maven02.util;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.junit.*;</span><br><span class="line"><span class="keyword">import</span> org.junit.Assert.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SpeakTest</span></span>&#123;</span><br><span class="line">	<span class="meta">@Test</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testHello</span><span class="params">()</span></span>&#123;</span><br><span class="line">		Assert.assertEquals(<span class="string">"Hello World!"</span>,<span class="keyword">new</span> Speak().sayHi());</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p><code>mvn compile</code>编译</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">错误：[ERROR] /E:/maven/code/maven02/src/main/java/com/jinger/maven02/util/Speak.java:[3,32] 程序包com.jinger.maven01.model不存在</span><br></pre></td></tr></table></figure>
<p>进入maven01文件夹执行<code>mvn install</code>发送到本地仓库中<br>在pow.xml加入依赖项<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.jinger.maven01<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven01-model<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>完整pom.xml<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/POM/4.0.0"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line">	</span><br><span class="line">	<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.jinger.maven02<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven02-model02<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">	</span><br><span class="line">	<span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">version</span>&gt;</span>4.10<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.jinger.maven01<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven01-model<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<h1 id="自动创建目录骨架"><a href="#自动创建目录骨架" class="headerlink" title="自动创建目录骨架"></a>自动创建目录骨架</h1><p>archetype插件<br>创建目录的两种方式：</p>
<ol>
<li><code>mvn archetype:generate</code><br>选1389  Choose org.apache.maven.archetypes:maven-archetype-quickstart version 再选最新版</li>
</ol>
<p>Confirm properties configuration:<br>groupId: com.jinger.maven03<br>artifactId: maven03-service<br>version: 1.0.0SNAPSHOT<br>package: com.jinger.maven03.service</p>
<ol start="2">
<li><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mvn archetype:generate -DgroupId=组织名, 公司网址的反写+项目名</span><br><span class="line">				-DartifactId=项目名-模块名</span><br><span class="line">				-Dversion=版本号</span><br><span class="line">				-Dpackage=代码所存在的包名</span><br></pre></td></tr></table></figure>
</li>
</ol>
<h1 id="坐标和仓库"><a href="#坐标和仓库" class="headerlink" title="坐标和仓库"></a>坐标和仓库</h1><p>构件通过坐标作为其唯一标识</p>
<p>修改镜像仓库位置：<br>E:\maven\apache-maven-3.6.1\conf<br>打开settings.xml<br>146行增加<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">mirror</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">id</span>&gt;</span>maven.net.cn<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mirrorOf</span>&gt;</span>central<span class="tag">&lt;/<span class="name">mirrorOf</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>central mirror in China<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://maven.net.cn/content/groups/public<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">mirror</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>这个源好像不太行，换成阿里云的可以<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">mirror</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">id</span>&gt;</span>alimaven<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mirrorOf</span>&gt;</span>central<span class="tag">&lt;/<span class="name">mirrorOf</span>&gt;</span> *</span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>aliyun maven<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://maven.aliyun.com/nexus/content/groups/public/<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">mirror</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>修改默认本地仓库位置<br>49行增加<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">localRepository</span>&gt;</span>E:/maven/repo<span class="tag">&lt;/<span class="name">localRepository</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>将该settings.xml复制到repo文件夹下。</p>
<h1 id="在Eclipse中的使用"><a href="#在Eclipse中的使用" class="headerlink" title="在Eclipse中的使用"></a>在Eclipse中的使用</h1><p>新版Eclipse自带Maven插件。<br>新建New-Other-Maven Project，选择quickstart模板。<br>Group Id:com.jinger.hi<br>Artifact Id:hi</p>
<p>建成后，对pom.xml右键，Run As-2 Maven build …<br>在Goals中填入compile</p>
<p>再在Goals中填入package<br>jar包构建成功</p>
<h1 id="Maven生命周期和插件"><a href="#Maven生命周期和插件" class="headerlink" title="Maven生命周期和插件"></a>Maven生命周期和插件</h1><p>完整的项目构建过程包括：<br>清理、编译、测试、打包、集成测试、验证、部署</p>
<p>maven生命周期：<br>clean 清理项目<br>default 构建项目<br>site 生成项目站点</p>
<h2 id="clean清理项目"><a href="#clean清理项目" class="headerlink" title="clean清理项目"></a>clean清理项目</h2><p>pre-clean 执行清理前的工作<br>clean 清理上一次构建生成的所有文件<br>post-clean 执行清理后的文件</p>
<h2 id="default-构建项目（最核心）"><a href="#default-构建项目（最核心）" class="headerlink" title="default 构建项目（最核心）"></a>default 构建项目（最核心）</h2><p>compile test package install</p>
<h2 id="site-生成项目站点"><a href="#site-生成项目站点" class="headerlink" title="site 生成项目站点"></a>site 生成项目站点</h2><p>pre-site 在生成项目站点前要完成的工作<br>site 生成项目的站点文档<br>post-site 在生成项目站点后要完成的工作<br>site-deploy 发布生成的站点到服务器上</p>
<p>举例<br>在pom.xml新增<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line"> 	<span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line"> 	<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"> 	<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-source-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"> 	<span class="tag">&lt;<span class="name">version</span>&gt;</span>2.4<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"> 	<span class="tag">&lt;<span class="name">executions</span>&gt;</span></span><br><span class="line"> 		<span class="tag">&lt;<span class="name">execution</span>&gt;</span></span><br><span class="line"> 			<span class="tag">&lt;<span class="name">phase</span>&gt;</span>package<span class="tag">&lt;/<span class="name">phase</span>&gt;</span></span><br><span class="line"> 			<span class="tag">&lt;<span class="name">goals</span>&gt;</span></span><br><span class="line"> 				<span class="tag">&lt;<span class="name">goal</span>&gt;</span>jar-no-fork<span class="tag">&lt;/<span class="name">goal</span>&gt;</span></span><br><span class="line"> 			<span class="tag">&lt;/<span class="name">goals</span>&gt;</span></span><br><span class="line"> 		<span class="tag">&lt;/<span class="name">execution</span>&gt;</span></span><br><span class="line"> 	<span class="tag">&lt;/<span class="name">executions</span>&gt;</span></span><br><span class="line"> 	<span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>run as - maven build …<br><code>clean package</code></p>
<h1 id="pom-xml常用元素"><a href="#pom-xml常用元素" class="headerlink" title="pom.xml常用元素"></a>pom.xml常用元素</h1><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line">pom.xml：maven项目的核心管理文件，用于项目描述、组织管理、依赖管理、构建信息的管理，Pom中包含了许多的标签。</span><br><span class="line">Pom.xml的常用元素：</span><br><span class="line"><span class="tag">&lt;<span class="name">project</span>&gt;</span>是pom.xml的根元素，包含了pom的一些约束信息。</span><br><span class="line"><span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>是一个固定的版本，也是必须的元素，指定了当前pom的版本。</span><br><span class="line">坐标的信息由以下标签组成：</span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>主项目标识，公司网址+项目名组成<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">注意：maven的项目和实际的项目不是一一对应关系，maven项目体现的是模块化的概念，因此一个实际项目往往会划分成很多的模块。</span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>一个模块的标识，项目名+模块名进行标识<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>第一个0标识大版本号，第二个0表示分支版本号，第三个0表示小版本号，一般形式可以写为0.0.1snapshot，snapshot快照、alpha内部测试、beta公测、Release稳定、GA版本正式发布<span class="tag">&lt;<span class="name">version</span>&gt;</span>。</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">packaging</span>&gt;</span>maven项目打包的方式，默认打包是jar，、其他类型war、zip、pom等<span class="tag">&lt;<span class="name">packaging</span>&gt;</span></span><br><span class="line"></span><br><span class="line">其他标签：</span><br><span class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span>项目的描述名，一般是在产生对象文档时候才会使用<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">url</span>&gt;</span>项目的地址<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">description</span>&gt;</span>项目的描述<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">developers</span>&gt;</span>开发人员的列表<span class="tag">&lt;/<span class="name">developers</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">licenses</span>&gt;</span>许可证的信息，比如经常用到的开源框架，它都会有一些许可证的信息<span class="tag">&lt;/<span class="name">licenses</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">organization</span>&gt;</span>组织信息<span class="tag">&lt;/<span class="name">organization</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span>依赖列表</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    依赖项(可以包含多个)</span><br><span class="line">    依赖项用坐标确定依赖的位置</span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span><span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span><span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">version</span>&gt;</span><span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">type</span>&gt;</span>类型<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">scope</span>&gt;</span>依赖的范围（比如上面写的junit的测试范围是test，只在测试的依赖范围内有用，在主代码中引用junit这个类，它就会报错）<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">optional</span>&gt;</span>设置依赖是否可选(默认是false，子项目默认是false时，子项目默认是继承的，如果为true，子项目必须显示的引入该依赖)<span class="tag">&lt;/<span class="name">optional</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">executions</span>&gt;</span></span><br><span class="line">                排除依赖的传递列表(可以排除多个依赖，比如Ajar包依赖Bjar包，Bjar包又依赖Cjar包，C对于A来说就是传递依赖，如果A不想依赖C，就使用该标签)</span><br><span class="line">                <span class="tag">&lt;<span class="name">execution</span>&gt;</span><span class="tag">&lt;/<span class="name">execution</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">executions</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dependencyManagementy</span>&gt;</span>依赖的管理<span class="tag">&lt;/<span class="name">dependencyManagementy</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dependencyManagement</span>&gt;</span>依赖的管理,也可以通过<span class="tag">&lt;<span class="name">dependencies</span>&gt;</span>声明依赖列表,通过<span class="tag">&lt;<span class="name">dependency</span>&gt;</span>包含多个依赖，但是它并不会被运行，也就是说它不会被引入到实际的依赖当中，该标签一般主要用于定义在父模块中，供子模块继承用的。比如之前多个maven项目中，都使用到junit，我们就可以抽象出一个父类的模块，然后在父类模块中对junit进行一个定义，其他子模块直接继承该父模块即可。</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">    插件列表</span><br><span class="line">    <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">		    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span><span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span><span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">version</span>&gt;</span><span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">parent</span>&gt;</span>用于子模块对父模块的pom的继承<span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">modules</span>&gt;</span>指定多个模块一起编译<span class="tag">&lt;/<span class="name">modules</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="scope"><a href="#scope" class="headerlink" title="scope"></a>scope</h3><p>三种classpath：</p>
<ol>
<li>编译</li>
<li>测试</li>
<li>运行</li>
</ol>
<p>compile:默认的范围，编译测试运行都有效<br>provided:在编译和测试时有效<br>runtime:在测试和运行时有效<br>test:只在测试时有效<br>system:与本机系统相关联，可移植性差<br>import:导入的范围，它只使用在dependencyManagement中，表示从其它的pom中导入dependency的配置</p>
<h3 id="依赖"><a href="#依赖" class="headerlink" title="依赖"></a>依赖</h3><p>依赖的传递：<br>多个项目依次依赖，A&lt;-B&lt;-C，后面的引入前面的项目坐标<br>要把前面的项目编译、打包、安装后，后面的项目才能运行build</p>
<p>短路冲突：<br>1、短路优先<br>A-&gt;B-&gt;C-&gt;X(jar)<br>A-&gt;D-&gt;X(jar)</p>
<p>先解析下面的</p>
<p>2、先声明优先<br>如果路径长度相同，则谁先声明，先解析谁</p>
<h1 id="聚合和继承"><a href="#聚合和继承" class="headerlink" title="聚合和继承"></a>聚合和继承</h1><ol>
<li><p>项目的继承<br>在父类项目中使用dependencyManagement对依赖进行管理，但是并不会使用依赖，子类需要使用parent标签，来引用父类中的依赖，一般可以将版本号在父类中进行声明，子类无需声明版本号，这样可以保证子类和父类版本号一致。</p>
</li>
<li><p>项目的聚合<br>   将packaging打包方式改为pom，使用modules标签，引入其他项目</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">modules</span>&gt;</span>    </span><br><span class="line">    <span class="tag">&lt;<span class="name">module</span>&gt;</span>../A<span class="tag">&lt;/<span class="name">module</span>&gt;</span>       </span><br><span class="line">    <span class="tag">&lt;<span class="name">module</span>&gt;</span>../B<span class="tag">&lt;/<span class="name">module</span>&gt;</span>    </span><br><span class="line">    <span class="tag">&lt;<span class="name">module</span>&gt;</span>../C<span class="tag">&lt;/<span class="name">module</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">modules</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
</ol>
<h1 id="构建web项目"><a href="#构建web项目" class="headerlink" title="构建web项目"></a>构建web项目</h1><p>新建项目，模板选择webapp。<br>GroupId: com.jinger.webdemo<br>Artifact Id:webdemo</p>
<p>建成后，在Navigator中新建<code>src/main/java</code>和<code>src/test/java`</code>src/test/resources`文件夹</p>
<p>在Project Explorer中对项目右键<code>Build Path</code>-<code>Configure Build Path</code>-<code>Source</code>，确保Output folder是webdemo/target/classes</p>
<p>项目属性-Project Facets<br>（没有这一项请下载输入<a href="http://download.eclipse.org/releases/oxygen" target="_blank" rel="noopener">http://download.eclipse.org/releases/oxygen</a> ，选择Web, XML, Java EE and OSGi Enterprise Development 安装即可。）<br>勾选Dynamic Web Module<br>最终发布产品时不需要测试代码，项目属性-Deployment Assemnly，remove相关测试文件。</p>
<p>在pom.xml的<build>下添加<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mortbay.jetty<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jetty-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>8.1.16.v20140903<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br></pre></td></tr></table></figure></build></p>
<p>run as build <code>jetty:run</code><br>浏览器输入<a href="http://localhost:8080/" target="_blank" rel="noopener">http://localhost:8080/</a><br>显示Hello World!</p>
<p>在打包成功后使用jetty:run来运行jetty服务</p>
<p><version>标签下<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">executions</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">execution</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">phase</span>&gt;</span>package<span class="tag">&lt;/<span class="name">phase</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">goals</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">goal</span>&gt;</span>run<span class="tag">&lt;/<span class="name">goal</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">goals</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">execution</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">executions</span>&gt;</span></span><br></pre></td></tr></table></figure></version></p>
<p>run as build <code>clean package</code><br>浏览器输入<a href="http://localhost:8080/" target="_blank" rel="noopener">http://localhost:8080/</a><br>显示Hello World!</p>
<p>使用tomcat同理。</p>
]]></content>
      
        <categories>
            
            <category> 互联网 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Java </tag>
            
            <tag> Maven </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[测手速软件APMShow开发——佟年送给韩商言的礼物]]></title>
      <url>https://hubojing.github.io/2019/07/22/%E6%B5%8B%E6%89%8B%E9%80%9F%E8%BD%AF%E4%BB%B6APMShow%E5%BC%80%E5%8F%91%E2%80%94%E2%80%94%E4%BD%9F%E5%B9%B4%E9%80%81%E7%BB%99%E9%9F%A9%E5%95%86%E8%A8%80%E7%9A%84%E7%A4%BC%E7%89%A9/</url>
      <content type="html"><![CDATA[<div align="left"><br><img src="http://img3.duitang.com/uploads/item/201608/08/20160808121716_RfcQj.jpeg" width="300" height="180" style="float:right;"><br><br>　　<strong>Electron开发</strong><br>　　<strong>追剧写代码啧啧啧</strong><br>　　<br><br> </div>

<a id="more"></a>
<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>　　最近看了一部剧，可以说是很甜了……<br>　　<del>傻白甜</del>女主角佟年99年计算机专业研二（ε=(´ο｀*)))唉，其实人家肤白貌美智商高碾压众人让人悲伤<br>　　（ACM亚军呜呜呜呜呜…）<br>　　还可爱！</p>
<p>　　男主韩商言本来设定是顶级电竞选手，后来改成了CTF比赛顶级选手。虽然改的很生硬，但也算是成功科普了CTF。（还是得吐槽，打CTF的人怎么可能不知道计算机专业的东西……）</p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1565458984773&di=52ad109e973a29ddebc894ca91bcb49f&imgtype=0&src=http%3A%2F%2Fpic1.win4000.com%2Fpic%2Fc%2F0a%2F157d3f7b7a_250_350.jpg" alt="二次元韩商言" title="">
                </div>
                <div class="image-caption">二次元韩商言</div>
            </figure>
<blockquote>
<p>CTF(Capture The Flag)，夺旗赛。CTF是一种流行的信息安全竞赛形式，其英文名可直译为“夺得Flag”，也可意译为“夺旗赛”。其大致流程是，参赛团队之间通过进行攻防对抗、程序分析等形式，率先从主办方给出的比赛环境中得到一串具有一定格式的字符串或其他内容，并将其提交给主办方，从而夺得分数。为了方便称呼，我们把这样的内容称之为“Flag”。</p>
</blockquote>
<p>　　这是多么酷炫的比赛啊。剧里所有的家长们却都嫌弃男主不务正业天天玩电脑？？？</p>
<p>　　写的一手好代码的佟年，送给Gun神的第一件礼物竟然是——<br>　　熬夜写了一个晚上的测手速的软件……<br>　　？<br>　　散发着工科硬核味道的礼物还真是<del>可爱</del>一言难尽哦</p>
<p>　　不禁使我想起了本科毕业时，本来我也为朋友们准备了毕业礼物的。当时兴致勃勃打算给朋友们每人写一个app……<br>　　然而由于时间都在工作上，<del>加上当时开发速度太慢了，</del>后来拖久了感觉失去了毕业礼物的时效性，就不了了之了……</p>
<p>　　那么，我要说的是什么<br>　　……<br>　　我要说，这个测手速的软件呢，佟年提到的时候我觉得应该挺简单的，所以我也做了一个，顺便把kk俱乐部里原来那种听音测试也加了进去，娱乐一下哈哈哈哈</p>
<h1 id="总览"><a href="#总览" class="headerlink" title="总览"></a>总览</h1><p>　　框架：Electron</p>
<p>　　语言：Html、CSS、JS</p>
<h1 id="Electron开发"><a href="#Electron开发" class="headerlink" title="Electron开发"></a>Electron开发</h1><h2 id="安装与配置"><a href="#安装与配置" class="headerlink" title="安装与配置"></a>安装与配置</h2><p>　　新建app文件夹。<br>　　初始化<code>npm init</code><br>　　安装Electron<code>npm install electron --save-dev</code></p>
<h2 id="开发"><a href="#开发" class="headerlink" title="开发"></a>开发</h2><p>　　Electron安好了<br>　　再就HTML CSS JS慢慢写呗</p>
<h2 id="打包"><a href="#打包" class="headerlink" title="打包"></a>打包</h2><p><code>npm install electron-packager -g</code></p>
<p>　　package.json添加：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&quot;package&quot;: &quot;electron-packager . APMShow --platform=win32 --arch=x64 --out=./out --asar --app-version=0.0.1 --electron-version=5.0.7 --overwrite --ignore=node_modules&quot;</span><br></pre></td></tr></table></figure></p>
<p>　　执行<code>npm run package</code>打包。</p>
<h2 id="Electron小笔记"><a href="#Electron小笔记" class="headerlink" title="Electron小笔记"></a>Electron小笔记</h2><h3 id="开启调试工具"><a href="#开启调试工具" class="headerlink" title="开启调试工具"></a>开启调试工具</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">win.webContents.openDevTools()</span><br></pre></td></tr></table></figure>
<h3 id="锁定窗口大小"><a href="#锁定窗口大小" class="headerlink" title="锁定窗口大小"></a>锁定窗口大小</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">win = <span class="keyword">new</span> BrowserWindow(&#123;</span><br><span class="line">       width: <span class="number">650</span>,</span><br><span class="line">       height: <span class="number">990</span>,</span><br><span class="line">       resizable: <span class="literal">false</span>,</span><br><span class="line">       webPreferences: &#123;</span><br><span class="line">           nodeIntegration: <span class="literal">true</span></span><br><span class="line">       &#125;</span><br><span class="line">   &#125;)</span><br></pre></td></tr></table></figure>
<p>　　<code>resizable: false</code>是重点。</p>
<h1 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h1><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="https://github.com/hubojing/BlogImages/blob/master/测手速软件APMShow开发——APP首页.png?raw=true" alt="首页" title="">
                </div>
                <div class="image-caption">首页</div>
            </figure>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="https://github.com/hubojing/BlogImages/blob/master/测手速软件APMShow开发——限时测速.png?raw=true" alt="限时测速" title="">
                </div>
                <div class="image-caption">限时测速</div>
            </figure>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="https://github.com/hubojing/BlogImages/blob/master/测手速软件APMShow开发——倒计时.png?raw=true" alt="倒计时" title="">
                </div>
                <div class="image-caption">倒计时</div>
            </figure>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="https://github.com/hubojing/BlogImages/blob/master/测手速软件APMShow开发——听音测速.png?raw=true" alt="听音测速" title="">
                </div>
                <div class="image-caption">听音测速</div>
            </figure>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="https://github.com/hubojing/BlogImages/blob/master/测手速软件APMShow开发——色变测速.png?raw=true" alt="色变测速" title="">
                </div>
                <div class="image-caption">色变测速</div>
            </figure>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="https://github.com/hubojing/BlogImages/blob/master/测手速软件APMShow开发——结果.png?raw=true" alt="成绩" title="">
                </div>
                <div class="image-caption">成绩</div>
            </figure>
<p>　　再加个排行榜？</p>
<h1 id="软件下载"><a href="#软件下载" class="headerlink" title="软件下载"></a>软件下载</h1><p>　　点开文件夹里的exe程序直接运行即可。（也许哪天想给它加个安装程序也未可知…）<br>　　链接：<a href="https://pan.baidu.com/s/1MfuyH7QAHjZT311888t4Og" target="_blank" rel="noopener">https://pan.baidu.com/s/1MfuyH7QAHjZT311888t4Og</a><br>　　提取码：vbz9 </p>
<h1 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h1><p>　　<a href="https://github.com/hubojing/APMShow" target="_blank" rel="noopener">https://github.com/hubojing/APMShow</a></p>
<h1 id="后语"><a href="#后语" class="headerlink" title="后语"></a>后语</h1><p>　　纯属娱乐~~</p>
<p>　　听说最近韩商言要分手，要不佟年看看可怜的吴白吧……<br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="https://wx1.sinaimg.cn/bmiddle/b54296afgy1g56ksrs7szj20u00u0agy.jpg" alt="表情包" title="">
                </div>
                <div class="image-caption">表情包</div>
            </figure></p>
]]></content>
      
        <categories>
            
            <category> 互联网 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 前端 </tag>
            
            <tag> 软件开发 </tag>
            
            <tag> Electron </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[LBSN基于位置的社交网络]]></title>
      <url>https://hubojing.github.io/2019/07/17/LBSN/</url>
      <content type="html"><![CDATA[<div align="left"><br><img src="https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1565459219422&di=24d422892e8989d6bd18a2a93aae8230&imgtype=0&src=http%3A%2F%2Fpic.51yuansu.com%2Fpic3%2Fcover%2F03%2F05%2F94%2F5b2c9f2655ac0_610.jpg" width="300" height="180" style="float:right;"><br><br><br>　　<strong>一些基础知识。</strong><br><br><br> </div>

<a id="more"></a>
<p>签到(check-in)：用户上传自身位置到社交网站的行为。<br>每一个签到的位置称为一个兴趣点POI(Point of Interest)。</p>
<p>对签到信息聚类，对用户历史轨迹进行机器学习，可预测用户未来的轨迹路线。<br>传统研究模型采用k-means或k-medoids聚类方法将数据划分为k个簇集，通过计算对象之间的相似度进行聚类。</p>
<p>传统在线社交网络(OSN, Online Social Network)。<br>LBS(Location Based Service),基于位置的服务。<br>LBSN(Location-based Social Network)，基于位置的社会网络。<br>对于不同的LBSN网络，不同的推荐系统使用了不同的推荐算法，常见的推荐算法包括：协同过滤算法、基于内容的推荐算法、基于位置的推荐算法等。</p>
<h1 id="经典推荐算法"><a href="#经典推荐算法" class="headerlink" title="经典推荐算法"></a>经典推荐算法</h1><h2 id="协同过滤算法-collaborative-filtering-CF"><a href="#协同过滤算法-collaborative-filtering-CF" class="headerlink" title="协同过滤算法(collaborative filtering, CF)"></a>协同过滤算法(collaborative filtering, CF)</h2><h3 id="基于Memory-based-基于内存"><a href="#基于Memory-based-基于内存" class="headerlink" title="基于Memory-based(基于内存)"></a>基于Memory-based(基于内存)</h3><p>又可分为Item-based推荐算法和User-based推荐算法</p>
<h3 id="基于Model-based-基于模型"><a href="#基于Model-based-基于模型" class="headerlink" title="基于Model-based(基于模型)"></a>基于Model-based(基于模型)</h3><p>又分为<br>分解模型算法：如奇异值分解(Singular Value Decomposition)模型算法<br>基于图模型的推荐算法：如贝叶斯网络(Bayesian Network)模型推荐算法<br>决策树(Decision Tree)模型推荐算法<br>图聚类(Graph Clustering)模型推荐算法</p>
<h2 id="基于内容的推荐算法"><a href="#基于内容的推荐算法" class="headerlink" title="基于内容的推荐算法"></a>基于内容的推荐算法</h2><h2 id="基于关联规则的推荐算法"><a href="#基于关联规则的推荐算法" class="headerlink" title="基于关联规则的推荐算法"></a>基于关联规则的推荐算法</h2><p>比如Apriori算法</p>
<h2 id="基于混合的推荐算法"><a href="#基于混合的推荐算法" class="headerlink" title="基于混合的推荐算法"></a>基于混合的推荐算法</h2><p>常用混合思路：加权、特征组合、层叠、变换等</p>
<h1 id="基于位置的推荐算法"><a href="#基于位置的推荐算法" class="headerlink" title="基于位置的推荐算法"></a>基于位置的推荐算法</h1><h1 id="聚类"><a href="#聚类" class="headerlink" title="聚类"></a>聚类</h1><h2 id="相似性计算"><a href="#相似性计算" class="headerlink" title="相似性计算"></a>相似性计算</h2><h2 id="聚类算法"><a href="#聚类算法" class="headerlink" title="聚类算法"></a>聚类算法</h2><p>k-means算法，又称为k均值算法<br>k-medoids算法，又称为k中心算法</p>
<h1 id="LBSN用户行为预测"><a href="#LBSN用户行为预测" class="headerlink" title="LBSN用户行为预测"></a>LBSN用户行为预测</h1><h2 id="基于用户个人的数据"><a href="#基于用户个人的数据" class="headerlink" title="基于用户个人的数据"></a>基于用户个人的数据</h2><p>只关注用户的历史移动轨迹来预测用户下一个位置。</p>
<h2 id="基于所有用户产生的数据"><a href="#基于所有用户产生的数据" class="headerlink" title="基于所有用户产生的数据"></a>基于所有用户产生的数据</h2><p>采用概率分布模型的方法预测下一个位置。</p>
<h2 id="基于前两种数据的结合"><a href="#基于前两种数据的结合" class="headerlink" title="基于前两种数据的结合"></a>基于前两种数据的结合</h2><h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><p>罗维佳.基于LBSN的个性化推荐技术研究 2016</p>
]]></content>
      
        <categories>
            
            <category> 互联网 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> LBSN </tag>
            
            <tag> 推荐系统 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[微言笔记]]></title>
      <url>https://hubojing.github.io/2019/07/14/%E5%BE%AE%E8%A8%80%E7%AC%94%E8%AE%B0/</url>
      <content type="html"><![CDATA[<div align="left"><br><img src="https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1563088003944&di=a15683d50ab076b5b7d9383c24ce7d80&imgtype=0&src=http%3A%2F%2Fb-ssl.duitang.com%2Fuploads%2Fitem%2F201710%2F11%2F20171011122118_mavCw.jpeg" width="300" height="180" style="float:right;"><br><br><br>　　<strong>来自微言板块（自言自语）的临时笔记汇总。</strong><br><br><br> </div>

<a id="more"></a>
<p>程序员是软件食物链的最后一环。架构师吃掉需求，设计师吃掉架构，而程序员则消化设计。</p>
<p>问题定义-&gt;需求-&gt;架构-&gt;构建-&gt;系统测试-&gt;将来的改进</p>
<p>一个程序中的设计层次：软件系统-&gt;分解为子系统和包-&gt;分解为包中的类-&gt;分解为类中的数据和子程序-&gt;子程序内部</p>
<p>问题“这个类需要隐藏些什么？”正切中了接口设计的核心。要养成“我该隐藏些什么？”的习惯。</p>
<p>好的抽象：类的接口应该展现一致的抽象层次；要理解类所实现的抽象是什么；提供成对的服务；把不相关的信息转移到其他类中；尽可能让接口可编程，而不是表达语义；谨防在修改时破坏接口的抽象；不要添加与接口抽象不一致的公用成员；同时考虑抽象性和内聚性。</p>
<p>好的封装：尽可能地限制类和成员的可访问性；不要公开暴露成员数据；避免把私用的实现细节放入类的接口中；不要对类的使用者做出任何假设；避免使用友元类；不要因为一个子程序里仅使用公用子程序，就把它归入公开接口；让阅读代码比编写代码更方便；要警惕从语义上破坏封装性；留意过于紧密的耦合关系。</p>
<p>封装：把数据声明为private，不允许外界随意存取，只能通过特定的接口来操作。继承：成员函数有一个隐藏参数，名为this指针。虚函数与多态：如果预期派生类有可能重新定义某一个成员函数，就在基类中把比函数设为virtual。纯虚函数不需定义其实际操作，它的存在只是为了在派生类中被重新定义（在函数声明之后加上“＝0”即可）。虚函数派生下去仍为虚函数，而且可以省略virtual关键词。</p>
<p>static成员变量不属于对象的一部分，而是类的的一部分，所以程序可以在还没有诞生任何对象时处理这种成员变量，但首先必须初始化它。不要把static成员变量的初始化操作安排在类的构造函数中，因为构造函数可能一再被调用，而变量的初值却只应设定一次。也不要把初始化操作安排在头文件中，因为它可能会被载入许多地方，因此也就可能被执行许多次。应该在应用程序文件中，类以外的任何位置设定其初值。例如在main之中，或全局函数中，或任何函数之外。</p>
<p>所谓”Unwinding”：C++按顺序析构，但若发生异常情况(exception)，且程序设计了异常情况处理程序(exception handling)，控制权就会“直接跳”到你所设定的处理程序去。此时堆栈中的C++对象有没有机会被析构，要视编译器而定。若编译器支持unwinding功能，则会在异常情况发生时，将堆栈中的所有对象都析构掉。</p>
<p>C指针：<br>在C语言里，只有当你在赋值语句的参数前面加了星号（*），才能把该参数从子程序中传回去。<br>在内存分配中使用sizeof()确定变量的大小。由于sizeof()是在编译期间计算的，因此不会带来性能上的损失。</p>
<p><em>p  p是指针，</em>p是对象</p>
<p>在Java中，a==b判断的是a和b是否引用了同一个对象，而a.equals(b)判断的是这两个对象是否具有相同的值。一般来说，Java应用程序里应该使用像a.equals(b)这样的表达式，而不要用a==b。</p>
<p>如果一个错误无法重现，这通常会是一个初始化错误，或者是一个同时间有关的问题，或者是悬空指针(dangling-pointer)问题。如果某个求和结果时对时错，很有可能是参与计算的某个变量未能正确地初始化——可能正好在大多数情况它是从0开始。如果这个问题诡异且变幻莫测，并且又在使用指针，那么几乎可以肯定是代码中有未初始化的指针，或者用了所指向的内存区域已经被释放的指针。</p>
<p>windows文件结束符Ctrl+Z，UNIX（包括Mac OS X）是Ctrl+D。</p>
<p>“编辑-编译-调试”（edit-compile-debug）周期</p>
<p>计算机以比特序列存储数据，每个比特非0即1。大多数计算机以2的整数次幂个比特作为块来处理内存，可寻址的最小内存块称为“字节（byte）”，存储的基本单元称为“字（word）”，它通常由几个字节组成。在C++中，一个字节要至少能容纳机器基本字符集中的字符。大多数机器的字节由8比特构成，字则由32或64比特构成，也就是4或8字节。大多数计算机将内存中的每个字节与一个数字（被称为“地址（address）”）关联起来。</p>
<p>当我们赋给无符号类型一个超出它表示范围的值时，结果是初始值对无符号类型表示数值总数取模后的余数。例如，8比特大小的unsigned char可以表示0至255区间内的值，如果赋了一个区间以外的值，则实际的结果是该值对256取模后所得的余数。因此，把-1赋给8比特大小的unsigned char所得的结果是255。<br>当我们赋给带符号类型一个超出它表示范围的值时，结果是未定义的（undefined）。此时，程序可能继续工作、可能崩溃，也可能生成垃圾数据。</p>
<p>如果想声明一个变量而非定义它，就在变量名前添加关键字extern，而且不要显式地初始化变量。<br>C++是一种静态类型（statically typed）语言，其含义是在编译阶段检查类型。</p>
<p>int i=42;<br>int ＆r＝i;//＆紧随类型名出现，因此是声明的一部分，r是一个引用<br>int <em>p;//</em>紧随类型名出现，因此是声明的一部分，p是一个指针<br>p＝＆i;//＆出现在表达式中，是一个取地址符<br><em>p＝i;//</em>出现在表达式中，是一个解引用符<br>int ＆r2＝<em>p;//＆是声明的一部分，</em>是一个解引用符<br>在声明语句中，＆和*用于组成复合类型；在表达式中，它们的角色又转变成运算符。</p>
<p>int <em>p1＝nullptr;//等价于int </em>p1＝0;<br>在新标准下，现在的C++程序最好使用nullptr，同时尽量避免使用NULL。</p>
<p>指向指针的引用<br>引用本身不是一个对象，因此不能定义指向引用的指针。但指针是对象，所以存在对指针的引用:<br>int i＝42;<br>int <em>p;//p是一个int型指针<br>int </em>＆r=p;//r是一个对指针p的引用<br>r=＆i;//r引用了一个指针，因此给r赋值＆i就是令p指向i<br>*r=0;//解引用r得到i，也就是p指向的对象，将i的值改为0</p>
<p>如果想在多个文件之间共享const对象，必须在变量的定义之前添加extern关键字。</p>
<p>select SalesPersonID,OrderDate,Max(TotalDue) as MaximumTotalSales<br>from [Sales].[SalesOrderHeader]<br>where SalesPersonID is not null and OrderDate &gt;=’2007/1/1’<br>group by SalesPersonID,OrderDate<br>having Max(TotalDue)&gt;150000<br>order by OrderDate desc</p>
<p>“A computer program is said to learn from experience E with respect to some task T and some performance measure P, if its performance on T, as measured by P, improves with experience E.”</p>
<p>建议把较大的数组放在main函数外（局部变量放在堆栈段）。栈溢出不一定是递归调用太多，也可能是局部变量太大。只要总大小超过了允许的范围，就会产生栈溢出。</p>
<p>计算机图形学：结构特征数据–&gt;图像信号<br>计算机视觉：图像信号—&gt;结构特征数据<br>数字图像处理：图像信号—&gt;图像信号</p>
<p>JS中如何输出空格:<br>1.document.write(“  “+”1”+”    “+”23”);<br>2.document.write(“”+” 1 2 3 “+””);<br>“white-space:pre;”样式表示”空白会被浏览器保留”</p>
<p>JavaScript为HTML赋予行为，通过ECMAScript标准，利用BOM对象来操作浏览器窗口，浏览器导航对象，屏幕分辨率，浏览器历史，cookie等，利用DOM操作HTML（核心）。</p>
]]></content>
      
        <categories>
            
            <category> 互联网 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 笔记 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[图]]></title>
      <url>https://hubojing.github.io/2019/06/22/%E5%9B%BE/</url>
      <content type="html"><![CDATA[<div align="left"><br><img src="https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1550075379443&di=51f53328008b4821ce8f839ac9186c0c&imgtype=0&src=http%3A%2F%2Fhiphotos.baidu.com%2Fdoc%2Fpic%2Fitem%2Fb17eca8065380cd7e40f7c6ba844ad3459828127.jpg" width="300" height="180" style="float:right;"><br><br><br>　　<strong>图、 prim 和 kruskal</strong><br><br><br> </div>

<a id="more"></a>
<h1 id="数据结构笔记目录"><a href="#数据结构笔记目录" class="headerlink" title="数据结构笔记目录"></a>数据结构笔记目录</h1><p>栈 <a href="https://hubojing.github.io/2017/11/14/%E6%A0%88/">https://hubojing.github.io/2017/11/14/%E6%A0%88/</a><br>队列 <a href="https://hubojing.github.io/2017/11/12/%E9%98%9F%E5%88%97/">https://hubojing.github.io/2017/11/12/%E9%98%9F%E5%88%97/</a><br>线性表    <a href="https://hubojing.github.io/2019/06/12/%E7%BA%BF%E6%80%A7%E8%A1%A8/">https://hubojing.github.io/2019/06/12/%E7%BA%BF%E6%80%A7%E8%A1%A8/</a><br>树 <a href="https://hubojing.github.io/2017/07/23/%E6%A0%91/">https://hubojing.github.io/2017/07/23/%E6%A0%91/</a></p>
<h1 id="图的基本操作和遍历"><a href="#图的基本操作和遍历" class="headerlink" title="图的基本操作和遍历"></a>图的基本操作和遍历</h1><h2 id="Node-h"><a href="#Node-h" class="headerlink" title="Node.h"></a>Node.h</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> NODE_H</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> NODE_H</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Node</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">	Node(<span class="keyword">char</span> data = <span class="number">0</span>);</span><br><span class="line">	<span class="keyword">char</span> m_cData;</span><br><span class="line">	<span class="keyword">bool</span> m_bIsVisited;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br></pre></td></tr></table></figure>
<h2 id="Node-cpp"><a href="#Node-cpp" class="headerlink" title="Node.cpp"></a>Node.cpp</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"Node.h"</span></span></span><br><span class="line"></span><br><span class="line">Node::Node(<span class="keyword">char</span> data)</span><br><span class="line">&#123;</span><br><span class="line">	m_cData = data;</span><br><span class="line">	m_bIsVisited = <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="CMap-h"><a href="#CMap-h" class="headerlink" title="CMap.h"></a>CMap.h</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">"Node.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CMap</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">	CMap(<span class="keyword">int</span> capacity);</span><br><span class="line">	~CMap();</span><br><span class="line">	<span class="function"><span class="keyword">bool</span> <span class="title">addNode</span><span class="params">(Node *pNode)</span></span>;</span><br><span class="line">	<span class="function"><span class="keyword">void</span> <span class="title">resetNode</span><span class="params">()</span></span>;</span><br><span class="line">	<span class="function"><span class="keyword">bool</span> <span class="title">setValueToMatrixForDirectedGraph</span><span class="params">(<span class="keyword">int</span> row, <span class="keyword">int</span> col, <span class="keyword">int</span> val = <span class="number">1</span>)</span></span>;<span class="comment">//为有向图设置邻接矩阵</span></span><br><span class="line">	<span class="function"><span class="keyword">bool</span> <span class="title">setValueToMatrixForUndirectedGraph</span><span class="params">(<span class="keyword">int</span> row, <span class="keyword">int</span> col, <span class="keyword">int</span> val = <span class="number">1</span>)</span></span>;<span class="comment">//为无向图设置邻接矩阵</span></span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">void</span> <span class="title">printMatrix</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">void</span> <span class="title">depthFirstTraverse</span><span class="params">(<span class="keyword">int</span> nodeIndex)</span></span>;<span class="comment">//深度优先遍历</span></span><br><span class="line">	<span class="function"><span class="keyword">void</span> <span class="title">breadthFirstTraverse</span><span class="params">(<span class="keyword">int</span> nodeIndex)</span></span>;<span class="comment">//广义优先遍历</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">	<span class="function"><span class="keyword">bool</span> <span class="title">getValueFromMatrix</span><span class="params">(<span class="keyword">int</span> row, <span class="keyword">int</span> col, <span class="keyword">int</span> &amp;val)</span></span>;<span class="comment">//从矩阵中获取权值</span></span><br><span class="line">	<span class="function"><span class="keyword">void</span> <span class="title">breadthFirstTraverseImpl</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; preVec)</span></span>;<span class="comment">//广度优先遍历实现函数</span></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">	<span class="keyword">int</span> m_iCapacity;<span class="comment">//最多可容纳的顶点数</span></span><br><span class="line">	<span class="keyword">int</span> m_iNodeCount;<span class="comment">//已添加的顶点个数</span></span><br><span class="line">	Node *m_pNodeArray;<span class="comment">//存放顶点数组</span></span><br><span class="line">	<span class="keyword">int</span> *m_pMatrix;<span class="comment">//存放邻接矩阵</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<h2 id="CMap-cpp"><a href="#CMap-cpp" class="headerlink" title="CMap.cpp"></a>CMap.cpp</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"CMap.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line">CMap::CMap(<span class="keyword">int</span> capacity)</span><br><span class="line">&#123;</span><br><span class="line">	m_iCapacity = capacity;</span><br><span class="line">	m_iNodeCount = <span class="number">0</span>;</span><br><span class="line">	m_pNodeArray = <span class="keyword">new</span> Node[m_iCapacity];</span><br><span class="line">	m_pMatrix = <span class="keyword">new</span> <span class="keyword">int</span>[m_iCapacity * m_iCapacity];</span><br><span class="line">	<span class="built_in">memset</span>(m_pMatrix, <span class="number">0</span>, m_iCapacity*m_iCapacity * <span class="keyword">sizeof</span>(<span class="keyword">int</span>));</span><br><span class="line">	<span class="comment">// 	for (int i = 0; i &lt; m_iCapacity*m_iCapacity; ++i)</span></span><br><span class="line">	<span class="comment">// 	&#123;</span></span><br><span class="line">	<span class="comment">// 		m_pMatrix[i] = 0;</span></span><br><span class="line">	<span class="comment">// 	&#125;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">CMap::~CMap()</span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">delete</span>[]m_pNodeArray;</span><br><span class="line">	<span class="keyword">delete</span>[]m_pMatrix;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">bool</span> CMap::addNode(Node *pNode)</span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">if</span> (pNode == <span class="literal">NULL</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	m_pNodeArray[m_iNodeCount].m_cData = pNode-&gt;m_cData;</span><br><span class="line">	m_iNodeCount++;</span><br><span class="line">	<span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> CMap::resetNode()</span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; m_iNodeCount; ++i)</span><br><span class="line">	&#123;</span><br><span class="line">		m_pNodeArray[i].m_bIsVisited = <span class="literal">false</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">bool</span> CMap::setValueToMatrixForDirectedGraph(<span class="keyword">int</span> row, <span class="keyword">int</span> col, <span class="keyword">int</span> val)</span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">if</span> (row &lt; <span class="number">0</span> || row &gt;= m_iCapacity)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span> (col &lt; <span class="number">0</span> || col &gt;= m_iCapacity)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	m_pMatrix[row * m_iCapacity + col] = val;</span><br><span class="line">	<span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">bool</span> CMap::setValueToMatrixForUndirectedGraph(<span class="keyword">int</span> row, <span class="keyword">int</span> col, <span class="keyword">int</span> val)</span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">if</span> (row &lt; <span class="number">0</span> || row &gt;= m_iCapacity)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span> (col &lt; <span class="number">0</span> || col &gt;= m_iCapacity)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	m_pMatrix[row * m_iCapacity + col] = val;</span><br><span class="line">	m_pMatrix[col * m_iCapacity + row] = val;</span><br><span class="line">	<span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> CMap::printMatrix()</span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; m_iCapacity; ++i)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; m_iCapacity; ++j)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="built_in">cout</span> &lt;&lt; m_pMatrix[i * m_iCapacity + j] &lt;&lt; <span class="string">" "</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">bool</span> CMap::getValueFromMatrix(<span class="keyword">int</span> row, <span class="keyword">int</span> col, <span class="keyword">int</span> &amp;val)</span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">if</span> (row &lt; <span class="number">0</span> || row &gt;= m_iCapacity)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span> (col &lt; <span class="number">0</span> || col &gt;= m_iCapacity)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	val = m_pMatrix[row * m_iCapacity + col];</span><br><span class="line">	<span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> CMap::depthFirstTraverse(<span class="keyword">int</span> nodeIndex)</span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">int</span> value = <span class="number">0</span>;</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; m_pNodeArray[nodeIndex].m_cData &lt;&lt; <span class="string">" "</span>;</span><br><span class="line">	m_pNodeArray[nodeIndex].m_bIsVisited = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">	<span class="comment">//通过邻接矩阵判断是否与其他顶点相连</span></span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; m_iCapacity; ++i)</span><br><span class="line">	&#123;</span><br><span class="line">		getValueFromMatrix(nodeIndex, i, value);</span><br><span class="line">		<span class="keyword">if</span> (value == <span class="number">1</span>)<span class="comment">//判断有弧连接其他顶点</span></span><br><span class="line">		&#123;</span><br><span class="line">			<span class="comment">//再判断该点是否被访问过</span></span><br><span class="line">			<span class="keyword">if</span> (m_pNodeArray[i].m_bIsVisited)</span><br><span class="line">			&#123;</span><br><span class="line">				<span class="keyword">continue</span>;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">else</span></span><br><span class="line">			&#123;</span><br><span class="line">				depthFirstTraverse(i);</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span></span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">continue</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> CMap::breadthFirstTraverse(<span class="keyword">int</span> nodeIndex)</span><br><span class="line">&#123;</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; m_pNodeArray[nodeIndex].m_cData &lt;&lt; <span class="string">" "</span>;</span><br><span class="line">	m_pNodeArray[nodeIndex].m_bIsVisited = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">	<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; curVec;</span><br><span class="line">	curVec.push_back(nodeIndex);</span><br><span class="line"></span><br><span class="line">	breadthFirstTraverseImpl(curVec);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> CMap::breadthFirstTraverseImpl(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; preVec)</span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">int</span> value = <span class="number">0</span>;</span><br><span class="line">	<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; curVec;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; (<span class="keyword">int</span>)i &lt; preVec.size(); ++i)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; m_iCapacity; ++j)</span><br><span class="line">		&#123;</span><br><span class="line">			getValueFromMatrix(preVec[i], j, value);</span><br><span class="line">			<span class="keyword">if</span> (value != <span class="number">0</span>)</span><br><span class="line">			&#123;</span><br><span class="line">				<span class="keyword">if</span> (m_pNodeArray[j].m_bIsVisited)</span><br><span class="line">				&#123;</span><br><span class="line">					<span class="keyword">continue</span>;</span><br><span class="line">				&#125;</span><br><span class="line">				<span class="keyword">else</span></span><br><span class="line">				&#123;</span><br><span class="line">					<span class="built_in">cout</span> &lt;&lt; m_pNodeArray[j].m_cData &lt;&lt; <span class="string">" "</span>;</span><br><span class="line">					m_pNodeArray[j].m_bIsVisited = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">					curVec.push_back(j);</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">if</span> (curVec.size() == <span class="number">0</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">return</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">	&#123;</span><br><span class="line">		breadthFirstTraverseImpl(curVec);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="demo-cpp"><a href="#demo-cpp" class="headerlink" title="demo.cpp"></a>demo.cpp</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"CMap.h"</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">		A</span></span><br><span class="line"><span class="comment">	  /   \</span></span><br><span class="line"><span class="comment">	 B     D</span></span><br><span class="line"><span class="comment">	/ \   / \</span></span><br><span class="line"><span class="comment">   C - F G - H</span></span><br><span class="line"><span class="comment">	\ /</span></span><br><span class="line"><span class="comment">	 E</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	CMap *pMap = <span class="keyword">new</span> CMap(<span class="number">8</span>);</span><br><span class="line"></span><br><span class="line">	Node *pNodeA = <span class="keyword">new</span> Node(<span class="string">'A'</span>);</span><br><span class="line">	Node *pNodeB = <span class="keyword">new</span> Node(<span class="string">'B'</span>);</span><br><span class="line">	Node *pNodeC = <span class="keyword">new</span> Node(<span class="string">'C'</span>);</span><br><span class="line">	Node *pNodeD = <span class="keyword">new</span> Node(<span class="string">'D'</span>);</span><br><span class="line">	Node *pNodeE = <span class="keyword">new</span> Node(<span class="string">'E'</span>);</span><br><span class="line">	Node *pNodeF = <span class="keyword">new</span> Node(<span class="string">'F'</span>);</span><br><span class="line">	Node *pNodeG = <span class="keyword">new</span> Node(<span class="string">'G'</span>);</span><br><span class="line">	Node *pNodeH = <span class="keyword">new</span> Node(<span class="string">'H'</span>);</span><br><span class="line"></span><br><span class="line">	pMap-&gt;addNode(pNodeA);</span><br><span class="line">	pMap-&gt;addNode(pNodeB);</span><br><span class="line">	pMap-&gt;addNode(pNodeC);</span><br><span class="line">	pMap-&gt;addNode(pNodeD);</span><br><span class="line">	pMap-&gt;addNode(pNodeE);</span><br><span class="line">	pMap-&gt;addNode(pNodeF);</span><br><span class="line">	pMap-&gt;addNode(pNodeG);</span><br><span class="line">	pMap-&gt;addNode(pNodeH);</span><br><span class="line"></span><br><span class="line">	pMap-&gt;setValueToMatrixForUndirectedGraph(<span class="number">0</span>, <span class="number">1</span>);</span><br><span class="line">	pMap-&gt;setValueToMatrixForUndirectedGraph(<span class="number">0</span>, <span class="number">3</span>);</span><br><span class="line">	pMap-&gt;setValueToMatrixForUndirectedGraph(<span class="number">1</span>, <span class="number">2</span>);</span><br><span class="line">	pMap-&gt;setValueToMatrixForUndirectedGraph(<span class="number">1</span>, <span class="number">5</span>);</span><br><span class="line">	pMap-&gt;setValueToMatrixForUndirectedGraph(<span class="number">3</span>, <span class="number">6</span>);</span><br><span class="line">	pMap-&gt;setValueToMatrixForUndirectedGraph(<span class="number">3</span>, <span class="number">7</span>);</span><br><span class="line">	pMap-&gt;setValueToMatrixForUndirectedGraph(<span class="number">6</span>, <span class="number">7</span>);</span><br><span class="line">	pMap-&gt;setValueToMatrixForUndirectedGraph(<span class="number">2</span>, <span class="number">4</span>);</span><br><span class="line">	pMap-&gt;setValueToMatrixForUndirectedGraph(<span class="number">4</span>, <span class="number">5</span>);</span><br><span class="line"></span><br><span class="line">	pMap-&gt;printMatrix();</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">	pMap-&gt;depthFirstTraverse(<span class="number">0</span>);</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">	pMap-&gt;resetNode();</span><br><span class="line">	pMap-&gt;breadthFirstTraverse(<span class="number">0</span>);</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>输出：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">0 1 0 1 0 0 0 0</span><br><span class="line">1 0 1 0 0 1 0 0</span><br><span class="line">0 1 0 0 1 0 0 0</span><br><span class="line">1 0 0 0 0 0 1 1</span><br><span class="line">0 0 1 0 0 1 0 0</span><br><span class="line">0 1 0 0 1 0 0 0</span><br><span class="line">0 0 0 1 0 0 0 1</span><br><span class="line">0 0 0 1 0 0 1 0</span><br><span class="line"></span><br><span class="line">A B C E F D G H</span><br><span class="line">A B D C F G H E</span><br></pre></td></tr></table></figure></p>
<h1 id="最小生成树算法"><a href="#最小生成树算法" class="headerlink" title="最小生成树算法"></a>最小生成树算法</h1><h2 id="普利姆算法"><a href="#普利姆算法" class="headerlink" title="普利姆算法"></a>普利姆算法</h2><h3 id="Edge-h"><a href="#Edge-h" class="headerlink" title="Edge.h"></a>Edge.h</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> EDGE_H</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EDGE_H</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Edge</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">	Edge(<span class="keyword">int</span> nodeIndexA = <span class="number">0</span>, <span class="keyword">int</span> nodeIndexB = <span class="number">0</span>, <span class="keyword">int</span> weightValue = <span class="number">0</span>);</span><br><span class="line">	<span class="keyword">int</span> m_iNodeIndexA;</span><br><span class="line">	<span class="keyword">int</span> m_iNodeIndexB;</span><br><span class="line">	<span class="keyword">int</span> m_iWeightValue;</span><br><span class="line">	<span class="keyword">bool</span> m_bSelected;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br></pre></td></tr></table></figure>
<h3 id="Edge-cpp"><a href="#Edge-cpp" class="headerlink" title="Edge.cpp"></a>Edge.cpp</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"Edge.h"</span></span></span><br><span class="line"></span><br><span class="line">Edge::Edge(<span class="keyword">int</span> nodeIndexA, <span class="keyword">int</span> nodeIndexB, <span class="keyword">int</span> weightValue)</span><br><span class="line">&#123;</span><br><span class="line">	m_iNodeIndexA = nodeIndexA;</span><br><span class="line">	m_iNodeIndexB = nodeIndexB;</span><br><span class="line">	m_iWeightValue = weightValue;</span><br><span class="line">	m_bSelected = <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="Node-h-1"><a href="#Node-h-1" class="headerlink" title="Node.h"></a>Node.h</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> NODE_H</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> NODE_H</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Node</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">	Node(<span class="keyword">char</span> data = <span class="number">0</span>);</span><br><span class="line">	<span class="keyword">char</span> m_cData;</span><br><span class="line">	<span class="keyword">bool</span> m_bIsVisited;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br></pre></td></tr></table></figure>
<h3 id="Node-cpp-1"><a href="#Node-cpp-1" class="headerlink" title="Node.cpp"></a>Node.cpp</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"Node.h"</span></span></span><br><span class="line"></span><br><span class="line">Node::Node(<span class="keyword">char</span> data)</span><br><span class="line">&#123;</span><br><span class="line">	m_cData = data;</span><br><span class="line">	m_bIsVisited = <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="CMap-h-1"><a href="#CMap-h-1" class="headerlink" title="CMap.h"></a>CMap.h</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">"Node.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"Edge.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CMap</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">	CMap(<span class="keyword">int</span> capacity);</span><br><span class="line">	~CMap();</span><br><span class="line">	<span class="function"><span class="keyword">bool</span> <span class="title">addNode</span><span class="params">(Node *pNode)</span></span>;</span><br><span class="line">	<span class="function"><span class="keyword">void</span> <span class="title">resetNode</span><span class="params">()</span></span>;</span><br><span class="line">	<span class="function"><span class="keyword">bool</span> <span class="title">setValueToMatrixForDirectedGraph</span><span class="params">(<span class="keyword">int</span> row, <span class="keyword">int</span> col, <span class="keyword">int</span> val = <span class="number">1</span>)</span></span>;<span class="comment">//为有向图设置邻接矩阵</span></span><br><span class="line">	<span class="function"><span class="keyword">bool</span> <span class="title">setValueToMatrixForUndirectedGraph</span><span class="params">(<span class="keyword">int</span> row, <span class="keyword">int</span> col, <span class="keyword">int</span> val = <span class="number">1</span>)</span></span>;<span class="comment">//为无向图设置邻接矩阵</span></span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">void</span> <span class="title">printMatrix</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">void</span> <span class="title">depthFirstTraverse</span><span class="params">(<span class="keyword">int</span> nodeIndex)</span></span>;<span class="comment">//深度优先遍历</span></span><br><span class="line">	<span class="function"><span class="keyword">void</span> <span class="title">breadthFirstTraverse</span><span class="params">(<span class="keyword">int</span> nodeIndex)</span></span>;<span class="comment">//广义优先遍历</span></span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">void</span> <span class="title">primTree</span><span class="params">(<span class="keyword">int</span> nodeIndex)</span></span>;<span class="comment">//普里姆生成树</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">	<span class="function"><span class="keyword">bool</span> <span class="title">getValueFromMatrix</span><span class="params">(<span class="keyword">int</span> row, <span class="keyword">int</span> col, <span class="keyword">int</span> &amp;val)</span></span>;<span class="comment">//从矩阵中获取权值</span></span><br><span class="line">	<span class="function"><span class="keyword">void</span> <span class="title">breadthFirstTraverseImpl</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; preVec)</span></span>;<span class="comment">//广度优先遍历实现函数</span></span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">int</span> <span class="title">getMinEdge</span><span class="params">(<span class="built_in">vector</span>&lt;Edge&gt; edgeVec)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">	<span class="keyword">int</span> m_iCapacity;<span class="comment">//最多可容纳的顶点数</span></span><br><span class="line">	<span class="keyword">int</span> m_iNodeCount;<span class="comment">//已添加的顶点个数</span></span><br><span class="line">	Node *m_pNodeArray;<span class="comment">//存放顶点数组</span></span><br><span class="line">	<span class="keyword">int</span> *m_pMatrix;<span class="comment">//存放邻接矩阵</span></span><br><span class="line"></span><br><span class="line">	Edge *m_pEdge;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<h3 id="CMap-cpp-1"><a href="#CMap-cpp-1" class="headerlink" title="CMap.cpp"></a>CMap.cpp</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"CMap.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line">CMap::CMap(<span class="keyword">int</span> capacity)</span><br><span class="line">&#123;</span><br><span class="line">	m_iCapacity = capacity;</span><br><span class="line">	m_iNodeCount = <span class="number">0</span>;</span><br><span class="line">	m_pNodeArray = <span class="keyword">new</span> Node[m_iCapacity];</span><br><span class="line">	m_pMatrix = <span class="keyword">new</span> <span class="keyword">int</span>[m_iCapacity * m_iCapacity];</span><br><span class="line">	<span class="built_in">memset</span>(m_pMatrix, <span class="number">0</span>, m_iCapacity*m_iCapacity * <span class="keyword">sizeof</span>(<span class="keyword">int</span>));</span><br><span class="line">	<span class="comment">// 	for (int i = 0; i &lt; m_iCapacity*m_iCapacity; ++i)</span></span><br><span class="line">	<span class="comment">// 	&#123;</span></span><br><span class="line">	<span class="comment">// 		m_pMatrix[i] = 0;</span></span><br><span class="line">	<span class="comment">// 	&#125;</span></span><br><span class="line"></span><br><span class="line">	m_pEdge = <span class="keyword">new</span> Edge[m_iCapacity - <span class="number">1</span>];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">CMap::~CMap()</span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">delete</span>[]m_pNodeArray;</span><br><span class="line">	<span class="keyword">delete</span>[]m_pMatrix;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">bool</span> CMap::addNode(Node *pNode)</span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">if</span> (pNode == <span class="literal">NULL</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	m_pNodeArray[m_iNodeCount].m_cData = pNode-&gt;m_cData;</span><br><span class="line">	m_iNodeCount++;</span><br><span class="line">	<span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> CMap::resetNode()</span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; m_iNodeCount; ++i)</span><br><span class="line">	&#123;</span><br><span class="line">		m_pNodeArray[i].m_bIsVisited = <span class="literal">false</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">bool</span> CMap::setValueToMatrixForDirectedGraph(<span class="keyword">int</span> row, <span class="keyword">int</span> col, <span class="keyword">int</span> val)</span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">if</span> (row &lt; <span class="number">0</span> || row &gt;= m_iCapacity)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span> (col &lt; <span class="number">0</span> || col &gt;= m_iCapacity)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	m_pMatrix[row * m_iCapacity + col] = val;</span><br><span class="line">	<span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">bool</span> CMap::setValueToMatrixForUndirectedGraph(<span class="keyword">int</span> row, <span class="keyword">int</span> col, <span class="keyword">int</span> val)</span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">if</span> (row &lt; <span class="number">0</span> || row &gt;= m_iCapacity)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span> (col &lt; <span class="number">0</span> || col &gt;= m_iCapacity)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	m_pMatrix[row * m_iCapacity + col] = val;</span><br><span class="line">	m_pMatrix[col * m_iCapacity + row] = val;</span><br><span class="line">	<span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> CMap::printMatrix()</span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; m_iCapacity; ++i)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; m_iCapacity; ++j)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="built_in">cout</span> &lt;&lt; m_pMatrix[i * m_iCapacity + j] &lt;&lt; <span class="string">" "</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">bool</span> CMap::getValueFromMatrix(<span class="keyword">int</span> row, <span class="keyword">int</span> col, <span class="keyword">int</span> &amp;val)</span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">if</span> (row &lt; <span class="number">0</span> || row &gt;= m_iCapacity)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span> (col &lt; <span class="number">0</span> || col &gt;= m_iCapacity)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	val = m_pMatrix[row * m_iCapacity + col];</span><br><span class="line">	<span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> CMap::depthFirstTraverse(<span class="keyword">int</span> nodeIndex)</span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">int</span> value = <span class="number">0</span>;</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; m_pNodeArray[nodeIndex].m_cData &lt;&lt; <span class="string">" "</span>;</span><br><span class="line">	m_pNodeArray[nodeIndex].m_bIsVisited = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">	<span class="comment">//通过邻接矩阵判断是否与其他顶点相连</span></span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; m_iCapacity; ++i)</span><br><span class="line">	&#123;</span><br><span class="line">		getValueFromMatrix(nodeIndex, i, value);</span><br><span class="line">		<span class="keyword">if</span> (value == <span class="number">1</span>)<span class="comment">//判断有弧连接其他顶点</span></span><br><span class="line">		&#123;</span><br><span class="line">			<span class="comment">//再判断该点是否被访问过</span></span><br><span class="line">			<span class="keyword">if</span> (m_pNodeArray[i].m_bIsVisited)</span><br><span class="line">			&#123;</span><br><span class="line">				<span class="keyword">continue</span>;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">else</span></span><br><span class="line">			&#123;</span><br><span class="line">				depthFirstTraverse(i);</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span></span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">continue</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> CMap::breadthFirstTraverse(<span class="keyword">int</span> nodeIndex)</span><br><span class="line">&#123;</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; m_pNodeArray[nodeIndex].m_cData &lt;&lt; <span class="string">" "</span>;</span><br><span class="line">	m_pNodeArray[nodeIndex].m_bIsVisited = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">	<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; curVec;</span><br><span class="line">	curVec.push_back(nodeIndex);</span><br><span class="line"></span><br><span class="line">	breadthFirstTraverseImpl(curVec);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> CMap::breadthFirstTraverseImpl(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; preVec)</span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">int</span> value = <span class="number">0</span>;</span><br><span class="line">	<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; curVec;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; (<span class="keyword">int</span>)i &lt; preVec.size(); ++i)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; m_iCapacity; ++j)</span><br><span class="line">		&#123;</span><br><span class="line">			getValueFromMatrix(preVec[i], j, value);</span><br><span class="line">			<span class="keyword">if</span> (value != <span class="number">0</span>)</span><br><span class="line">			&#123;</span><br><span class="line">				<span class="keyword">if</span> (m_pNodeArray[j].m_bIsVisited)</span><br><span class="line">				&#123;</span><br><span class="line">					<span class="keyword">continue</span>;</span><br><span class="line">				&#125;</span><br><span class="line">				<span class="keyword">else</span></span><br><span class="line">				&#123;</span><br><span class="line">					<span class="built_in">cout</span> &lt;&lt; m_pNodeArray[j].m_cData &lt;&lt; <span class="string">" "</span>;</span><br><span class="line">					m_pNodeArray[j].m_bIsVisited = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">					curVec.push_back(j);</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">if</span> (curVec.size() == <span class="number">0</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">return</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">	&#123;</span><br><span class="line">		breadthFirstTraverseImpl(curVec);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> CMap::primTree(<span class="keyword">int</span> nodeIndex)</span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">int</span> value = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">int</span> edgeCount = <span class="number">0</span>;</span><br><span class="line">	<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; nodeVec;</span><br><span class="line">	<span class="built_in">vector</span>&lt;Edge&gt; edgeVec;</span><br><span class="line"></span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; m_pNodeArray[nodeIndex].m_cData &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">	nodeVec.push_back(nodeIndex);</span><br><span class="line">	m_pNodeArray[nodeIndex].m_bIsVisited = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">	<span class="keyword">while</span> (edgeCount &lt; m_iCapacity - <span class="number">1</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">int</span> temp = nodeVec.back();</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; m_iCapacity; ++i)</span><br><span class="line">		&#123;</span><br><span class="line">			getValueFromMatrix(temp, i, value);</span><br><span class="line">			<span class="keyword">if</span> (value != <span class="number">0</span>)</span><br><span class="line">			&#123;</span><br><span class="line">				<span class="keyword">if</span> (m_pNodeArray[i].m_bIsVisited)</span><br><span class="line">				&#123;</span><br><span class="line">					<span class="keyword">continue</span>;</span><br><span class="line">				&#125;</span><br><span class="line">				<span class="keyword">else</span></span><br><span class="line">				&#123;</span><br><span class="line">					Edge edge(temp, i, value);</span><br><span class="line">					edgeVec.push_back(edge);</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="comment">//从可选边集合中找出最小的边</span></span><br><span class="line">		<span class="keyword">int</span> edgeIndex = getMinEdge(edgeVec);</span><br><span class="line">		edgeVec[edgeIndex].m_bSelected = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt; edgeVec[edgeIndex].m_iNodeIndexA &lt;&lt; <span class="string">"---"</span> &lt;&lt; edgeVec[edgeIndex].m_iNodeIndexB &lt;&lt; <span class="string">" "</span>;</span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt; edgeVec[edgeIndex].m_iWeightValue &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">		m_pEdge[edgeCount] = edgeVec[edgeIndex];</span><br><span class="line">		edgeCount++;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">int</span> nextNodeIndex = edgeVec[edgeIndex].m_iNodeIndexB;</span><br><span class="line"></span><br><span class="line">		nodeVec.push_back(nextNodeIndex);</span><br><span class="line"></span><br><span class="line">		m_pNodeArray[nextNodeIndex].m_bIsVisited = <span class="literal">true</span>;</span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt; m_pNodeArray[nextNodeIndex].m_cData &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> CMap::getMinEdge(<span class="built_in">vector</span>&lt;Edge&gt; edgeVec)</span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">int</span> minWeight = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">int</span> edgeIndex = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">for</span> (; i &lt; edgeVec.size(); ++i)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span> (!edgeVec[i].m_bSelected)</span><br><span class="line">		&#123;</span><br><span class="line">			minWeight = edgeVec[i].m_iWeightValue;</span><br><span class="line">			edgeIndex = i;</span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">if</span> (minWeight == <span class="number">0</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">for</span> (; i &lt; edgeVec.size(); ++i)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span> (edgeVec[i].m_bSelected)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">continue</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span></span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">if</span> (minWeight &gt; edgeVec[i].m_iWeightValue)</span><br><span class="line">			&#123;</span><br><span class="line">				minWeight = edgeVec[i].m_iWeightValue;</span><br><span class="line">				edgeIndex = i;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> edgeIndex;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="demo-cpp-1"><a href="#demo-cpp-1" class="headerlink" title="demo.cpp"></a>demo.cpp</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"CMap.h"</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">		A</span></span><br><span class="line"><span class="comment">	  /   \</span></span><br><span class="line"><span class="comment">	 B     D</span></span><br><span class="line"><span class="comment">	/ \   / \</span></span><br><span class="line"><span class="comment">   C - F G - H</span></span><br><span class="line"><span class="comment">	\ /</span></span><br><span class="line"><span class="comment">	 E</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*算法例子：</span></span><br><span class="line"><span class="comment">		A</span></span><br><span class="line"><span class="comment">	  / | \</span></span><br><span class="line"><span class="comment">	B - F - E</span></span><br><span class="line"><span class="comment">	 \ / \ /</span></span><br><span class="line"><span class="comment">	  C - D</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">	  权值：</span></span><br><span class="line"><span class="comment">	  A-B 6	A-E 5 A-F 1</span></span><br><span class="line"><span class="comment">	  B-C 3 B-F 2</span></span><br><span class="line"><span class="comment">	  C-F 8 C-D 7</span></span><br><span class="line"><span class="comment">	  D-F 4 D-E 2</span></span><br><span class="line"><span class="comment">	  E-F 9</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	CMap *pMap = <span class="keyword">new</span> CMap(<span class="number">6</span>);</span><br><span class="line"></span><br><span class="line">	Node *pNodeA = <span class="keyword">new</span> Node(<span class="string">'A'</span>);</span><br><span class="line">	Node *pNodeB = <span class="keyword">new</span> Node(<span class="string">'B'</span>);</span><br><span class="line">	Node *pNodeC = <span class="keyword">new</span> Node(<span class="string">'C'</span>);</span><br><span class="line">	Node *pNodeD = <span class="keyword">new</span> Node(<span class="string">'D'</span>);</span><br><span class="line">	Node *pNodeE = <span class="keyword">new</span> Node(<span class="string">'E'</span>);</span><br><span class="line">	Node *pNodeF = <span class="keyword">new</span> Node(<span class="string">'F'</span>);</span><br><span class="line"></span><br><span class="line">	pMap-&gt;addNode(pNodeA);</span><br><span class="line">	pMap-&gt;addNode(pNodeB);</span><br><span class="line">	pMap-&gt;addNode(pNodeC);</span><br><span class="line">	pMap-&gt;addNode(pNodeD);</span><br><span class="line">	pMap-&gt;addNode(pNodeE);</span><br><span class="line">	pMap-&gt;addNode(pNodeF);</span><br><span class="line"></span><br><span class="line">	pMap-&gt;setValueToMatrixForUndirectedGraph(<span class="number">0</span>, <span class="number">1</span>, <span class="number">6</span>);</span><br><span class="line">	pMap-&gt;setValueToMatrixForUndirectedGraph(<span class="number">0</span>, <span class="number">4</span>, <span class="number">5</span>);</span><br><span class="line">	pMap-&gt;setValueToMatrixForUndirectedGraph(<span class="number">0</span>, <span class="number">5</span>, <span class="number">1</span>);</span><br><span class="line">	pMap-&gt;setValueToMatrixForUndirectedGraph(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>);</span><br><span class="line">	pMap-&gt;setValueToMatrixForUndirectedGraph(<span class="number">1</span>, <span class="number">5</span>, <span class="number">2</span>);</span><br><span class="line">	pMap-&gt;setValueToMatrixForUndirectedGraph(<span class="number">2</span>, <span class="number">5</span>, <span class="number">8</span>);</span><br><span class="line">	pMap-&gt;setValueToMatrixForUndirectedGraph(<span class="number">2</span>, <span class="number">3</span>, <span class="number">7</span>);</span><br><span class="line">	pMap-&gt;setValueToMatrixForUndirectedGraph(<span class="number">3</span>, <span class="number">5</span>, <span class="number">4</span>);</span><br><span class="line">	pMap-&gt;setValueToMatrixForUndirectedGraph(<span class="number">3</span>, <span class="number">4</span>, <span class="number">2</span>);</span><br><span class="line">	pMap-&gt;setValueToMatrixForUndirectedGraph(<span class="number">4</span>, <span class="number">5</span>, <span class="number">9</span>);</span><br><span class="line"></span><br><span class="line">	pMap-&gt;primTree(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>输出：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">A</span><br><span class="line">0---5 1</span><br><span class="line">F</span><br><span class="line">5---1 2</span><br><span class="line">B</span><br><span class="line">1---2 3</span><br><span class="line">C</span><br><span class="line">5---3 4</span><br><span class="line">D</span><br><span class="line">3---4 2</span><br><span class="line">E</span><br></pre></td></tr></table></figure></p>
<h2 id="克鲁斯卡尔算法"><a href="#克鲁斯卡尔算法" class="headerlink" title="克鲁斯卡尔算法"></a>克鲁斯卡尔算法</h2><h3 id="Node-h-2"><a href="#Node-h-2" class="headerlink" title="Node.h"></a>Node.h</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> NODE_H</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> NODE_H</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Node</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">	Node(<span class="keyword">char</span> data = <span class="number">0</span>);</span><br><span class="line">	<span class="keyword">char</span> m_cData;</span><br><span class="line">	<span class="keyword">bool</span> m_bIsVisited;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br></pre></td></tr></table></figure>
<h3 id="Node-cpp-2"><a href="#Node-cpp-2" class="headerlink" title="Node.cpp"></a>Node.cpp</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"Node.h"</span></span></span><br><span class="line"></span><br><span class="line">Node::Node(<span class="keyword">char</span> data)</span><br><span class="line">&#123;</span><br><span class="line">	m_cData = data;</span><br><span class="line">	m_bIsVisited = <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="Edge-h-1"><a href="#Edge-h-1" class="headerlink" title="Edge.h"></a>Edge.h</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> EDGE_H</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EDGE_H</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Edge</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">	Edge(<span class="keyword">int</span> nodeIndexA = <span class="number">0</span>, <span class="keyword">int</span> nodeIndexB = <span class="number">0</span>, <span class="keyword">int</span> weightValue = <span class="number">0</span>);</span><br><span class="line">	<span class="keyword">int</span> m_iNodeIndexA;</span><br><span class="line">	<span class="keyword">int</span> m_iNodeIndexB;</span><br><span class="line">	<span class="keyword">int</span> m_iWeightValue;</span><br><span class="line">	<span class="keyword">bool</span> m_bSelected;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br></pre></td></tr></table></figure>
<h3 id="Edge-cpp-1"><a href="#Edge-cpp-1" class="headerlink" title="Edge.cpp"></a>Edge.cpp</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"Edge.h"</span></span></span><br><span class="line"></span><br><span class="line">Edge::Edge(<span class="keyword">int</span> nodeIndexA, <span class="keyword">int</span> nodeIndexB, <span class="keyword">int</span> weightValue)</span><br><span class="line">&#123;</span><br><span class="line">	m_iNodeIndexA = nodeIndexA;</span><br><span class="line">	m_iNodeIndexB = nodeIndexB;</span><br><span class="line">	m_iWeightValue = weightValue;</span><br><span class="line">	m_bSelected = <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="CMap-h-2"><a href="#CMap-h-2" class="headerlink" title="CMap.h"></a>CMap.h</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">"Node.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"Edge.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CMap</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">	CMap(<span class="keyword">int</span> capacity);</span><br><span class="line">	~CMap();</span><br><span class="line">	<span class="function"><span class="keyword">bool</span> <span class="title">addNode</span><span class="params">(Node *pNode)</span></span>;</span><br><span class="line">	<span class="function"><span class="keyword">void</span> <span class="title">resetNode</span><span class="params">()</span></span>;</span><br><span class="line">	<span class="function"><span class="keyword">bool</span> <span class="title">setValueToMatrixForDirectedGraph</span><span class="params">(<span class="keyword">int</span> row, <span class="keyword">int</span> col, <span class="keyword">int</span> val = <span class="number">1</span>)</span></span>;<span class="comment">//为有向图设置邻接矩阵</span></span><br><span class="line">	<span class="function"><span class="keyword">bool</span> <span class="title">setValueToMatrixForUndirectedGraph</span><span class="params">(<span class="keyword">int</span> row, <span class="keyword">int</span> col, <span class="keyword">int</span> val = <span class="number">1</span>)</span></span>;<span class="comment">//为无向图设置邻接矩阵</span></span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">void</span> <span class="title">printMatrix</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">void</span> <span class="title">depthFirstTraverse</span><span class="params">(<span class="keyword">int</span> nodeIndex)</span></span>;<span class="comment">//深度优先遍历</span></span><br><span class="line">	<span class="function"><span class="keyword">void</span> <span class="title">breadthFirstTraverse</span><span class="params">(<span class="keyword">int</span> nodeIndex)</span></span>;<span class="comment">//广义优先遍历</span></span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">void</span> <span class="title">primTree</span><span class="params">(<span class="keyword">int</span> nodeIndex)</span></span>;</span><br><span class="line">	<span class="function"><span class="keyword">void</span> <span class="title">kruskalTree</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">	<span class="function"><span class="keyword">bool</span> <span class="title">getValueFromMatrix</span><span class="params">(<span class="keyword">int</span> row, <span class="keyword">int</span> col, <span class="keyword">int</span> &amp;val)</span></span>;<span class="comment">//从矩阵中获取权值</span></span><br><span class="line">	<span class="function"><span class="keyword">void</span> <span class="title">breadthFirstTraverseImpl</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; preVec)</span></span>;<span class="comment">//广度优先遍历实现函数</span></span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">int</span> <span class="title">getMinEdge</span><span class="params">(<span class="built_in">vector</span>&lt;Edge&gt; edgeVec)</span></span>;<span class="comment">//获取最小边</span></span><br><span class="line">	<span class="function"><span class="keyword">bool</span> <span class="title">isInSet</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; nodeSet, <span class="keyword">int</span> target)</span></span>;<span class="comment">//判断顶点是否在点集合中</span></span><br><span class="line">	<span class="function"><span class="keyword">void</span> <span class="title">mergeNodeSet</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; &amp;nodeSetA, <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; nodeSetB)</span></span>;<span class="comment">//合并两个顶点集合</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">	<span class="keyword">int</span> m_iCapacity;<span class="comment">//最多可容纳的顶点数</span></span><br><span class="line">	<span class="keyword">int</span> m_iNodeCount;<span class="comment">//已添加的顶点个数</span></span><br><span class="line">	Node *m_pNodeArray;<span class="comment">//存放顶点数组</span></span><br><span class="line">	<span class="keyword">int</span> *m_pMatrix;<span class="comment">//存放邻接矩阵</span></span><br><span class="line"></span><br><span class="line">	Edge *m_pEdge;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<h3 id="CMap-cpp-2"><a href="#CMap-cpp-2" class="headerlink" title="CMap.cpp"></a>CMap.cpp</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"CMap.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line">CMap::CMap(<span class="keyword">int</span> capacity)</span><br><span class="line">&#123;</span><br><span class="line">	m_iCapacity = capacity;</span><br><span class="line">	m_iNodeCount = <span class="number">0</span>;</span><br><span class="line">	m_pNodeArray = <span class="keyword">new</span> Node[m_iCapacity];</span><br><span class="line">	m_pMatrix = <span class="keyword">new</span> <span class="keyword">int</span>[m_iCapacity * m_iCapacity];</span><br><span class="line">	<span class="built_in">memset</span>(m_pMatrix, <span class="number">0</span>, m_iCapacity*m_iCapacity * <span class="keyword">sizeof</span>(<span class="keyword">int</span>));</span><br><span class="line">	<span class="comment">// 	for (int i = 0; i &lt; m_iCapacity*m_iCapacity; ++i)</span></span><br><span class="line">	<span class="comment">// 	&#123;</span></span><br><span class="line">	<span class="comment">// 		m_pMatrix[i] = 0;</span></span><br><span class="line">	<span class="comment">// 	&#125;</span></span><br><span class="line"></span><br><span class="line">	m_pEdge = <span class="keyword">new</span> Edge[m_iCapacity - <span class="number">1</span>];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">CMap::~CMap()</span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">delete</span>[]m_pNodeArray;</span><br><span class="line">	<span class="keyword">delete</span>[]m_pMatrix;</span><br><span class="line">	<span class="keyword">delete</span>[]m_pEdge;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">bool</span> CMap::addNode(Node *pNode)</span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">if</span> (pNode == <span class="literal">NULL</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	m_pNodeArray[m_iNodeCount].m_cData = pNode-&gt;m_cData;</span><br><span class="line">	m_iNodeCount++;</span><br><span class="line">	<span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> CMap::resetNode()</span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; m_iNodeCount; ++i)</span><br><span class="line">	&#123;</span><br><span class="line">		m_pNodeArray[i].m_bIsVisited = <span class="literal">false</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">bool</span> CMap::setValueToMatrixForDirectedGraph(<span class="keyword">int</span> row, <span class="keyword">int</span> col, <span class="keyword">int</span> val)</span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">if</span> (row &lt; <span class="number">0</span> || row &gt;= m_iCapacity)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span> (col &lt; <span class="number">0</span> || col &gt;= m_iCapacity)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	m_pMatrix[row * m_iCapacity + col] = val;</span><br><span class="line">	<span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">bool</span> CMap::setValueToMatrixForUndirectedGraph(<span class="keyword">int</span> row, <span class="keyword">int</span> col, <span class="keyword">int</span> val)</span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">if</span> (row &lt; <span class="number">0</span> || row &gt;= m_iCapacity)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span> (col &lt; <span class="number">0</span> || col &gt;= m_iCapacity)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	m_pMatrix[row * m_iCapacity + col] = val;</span><br><span class="line">	m_pMatrix[col * m_iCapacity + row] = val;</span><br><span class="line">	<span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> CMap::printMatrix()</span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; m_iCapacity; ++i)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; m_iCapacity; ++j)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="built_in">cout</span> &lt;&lt; m_pMatrix[i * m_iCapacity + j] &lt;&lt; <span class="string">" "</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">bool</span> CMap::getValueFromMatrix(<span class="keyword">int</span> row, <span class="keyword">int</span> col, <span class="keyword">int</span> &amp;val)</span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">if</span> (row &lt; <span class="number">0</span> || row &gt;= m_iCapacity)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span> (col &lt; <span class="number">0</span> || col &gt;= m_iCapacity)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	val = m_pMatrix[row * m_iCapacity + col];</span><br><span class="line">	<span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> CMap::depthFirstTraverse(<span class="keyword">int</span> nodeIndex)</span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">int</span> value = <span class="number">0</span>;</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; m_pNodeArray[nodeIndex].m_cData &lt;&lt; <span class="string">" "</span>;</span><br><span class="line">	m_pNodeArray[nodeIndex].m_bIsVisited = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">	<span class="comment">//通过邻接矩阵判断是否与其他顶点相连</span></span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; m_iCapacity; ++i)</span><br><span class="line">	&#123;</span><br><span class="line">		getValueFromMatrix(nodeIndex, i, value);</span><br><span class="line">		<span class="keyword">if</span> (value == <span class="number">1</span>)<span class="comment">//判断有弧连接其他顶点</span></span><br><span class="line">		&#123;</span><br><span class="line">			<span class="comment">//再判断该点是否被访问过</span></span><br><span class="line">			<span class="keyword">if</span> (m_pNodeArray[i].m_bIsVisited)</span><br><span class="line">			&#123;</span><br><span class="line">				<span class="keyword">continue</span>;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">else</span></span><br><span class="line">			&#123;</span><br><span class="line">				depthFirstTraverse(i);</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span></span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">continue</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> CMap::breadthFirstTraverse(<span class="keyword">int</span> nodeIndex)</span><br><span class="line">&#123;</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; m_pNodeArray[nodeIndex].m_cData &lt;&lt; <span class="string">" "</span>;</span><br><span class="line">	m_pNodeArray[nodeIndex].m_bIsVisited = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">	<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; curVec;</span><br><span class="line">	curVec.push_back(nodeIndex);</span><br><span class="line"></span><br><span class="line">	breadthFirstTraverseImpl(curVec);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> CMap::breadthFirstTraverseImpl(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; preVec)</span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">int</span> value = <span class="number">0</span>;</span><br><span class="line">	<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; curVec;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; (<span class="keyword">int</span>)i &lt; preVec.size(); ++i)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; m_iCapacity; ++j)</span><br><span class="line">		&#123;</span><br><span class="line">			getValueFromMatrix(preVec[i], j, value);</span><br><span class="line">			<span class="keyword">if</span> (value != <span class="number">0</span>)</span><br><span class="line">			&#123;</span><br><span class="line">				<span class="keyword">if</span> (m_pNodeArray[j].m_bIsVisited)</span><br><span class="line">				&#123;</span><br><span class="line">					<span class="keyword">continue</span>;</span><br><span class="line">				&#125;</span><br><span class="line">				<span class="keyword">else</span></span><br><span class="line">				&#123;</span><br><span class="line">					<span class="built_in">cout</span> &lt;&lt; m_pNodeArray[j].m_cData &lt;&lt; <span class="string">" "</span>;</span><br><span class="line">					m_pNodeArray[j].m_bIsVisited = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">					curVec.push_back(j);</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">if</span> (curVec.size() == <span class="number">0</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">return</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">	&#123;</span><br><span class="line">		breadthFirstTraverseImpl(curVec);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> CMap::primTree(<span class="keyword">int</span> nodeIndex)</span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">int</span> value = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">int</span> edgeCount = <span class="number">0</span>;</span><br><span class="line">	<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; nodeVec;</span><br><span class="line">	<span class="built_in">vector</span>&lt;Edge&gt; edgeVec;</span><br><span class="line"></span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; m_pNodeArray[nodeIndex].m_cData &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">	nodeVec.push_back(nodeIndex);</span><br><span class="line">	m_pNodeArray[nodeIndex].m_bIsVisited = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">	<span class="keyword">while</span> (edgeCount &lt; m_iCapacity - <span class="number">1</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">int</span> temp = nodeVec.back();</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; m_iCapacity; ++i)</span><br><span class="line">		&#123;</span><br><span class="line">			getValueFromMatrix(temp, i, value);</span><br><span class="line">			<span class="keyword">if</span> (value != <span class="number">0</span>)</span><br><span class="line">			&#123;</span><br><span class="line">				<span class="keyword">if</span> (m_pNodeArray[i].m_bIsVisited)</span><br><span class="line">				&#123;</span><br><span class="line">					<span class="keyword">continue</span>;</span><br><span class="line">				&#125;</span><br><span class="line">				<span class="keyword">else</span></span><br><span class="line">				&#123;</span><br><span class="line">					Edge edge(temp, i, value);</span><br><span class="line">					edgeVec.push_back(edge);</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="comment">//从可选边集合中找出最小的边</span></span><br><span class="line">		<span class="keyword">int</span> edgeIndex = getMinEdge(edgeVec);</span><br><span class="line">		edgeVec[edgeIndex].m_bSelected = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt; edgeVec[edgeIndex].m_iNodeIndexA &lt;&lt; <span class="string">"---"</span> &lt;&lt; edgeVec[edgeIndex].m_iNodeIndexB &lt;&lt; <span class="string">" "</span>;</span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt; edgeVec[edgeIndex].m_iWeightValue &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">		m_pEdge[edgeCount] = edgeVec[edgeIndex];</span><br><span class="line">		edgeCount++;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">int</span> nextNodeIndex = edgeVec[edgeIndex].m_iNodeIndexB;</span><br><span class="line"></span><br><span class="line">		nodeVec.push_back(nextNodeIndex);</span><br><span class="line"></span><br><span class="line">		m_pNodeArray[nextNodeIndex].m_bIsVisited = <span class="literal">true</span>;</span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt; m_pNodeArray[nextNodeIndex].m_cData &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> CMap::getMinEdge(<span class="built_in">vector</span>&lt;Edge&gt; edgeVec)</span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">int</span> minWeight = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">int</span> edgeIndex = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">for</span> (; i &lt; edgeVec.size(); ++i)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span> (!edgeVec[i].m_bSelected)</span><br><span class="line">		&#123;</span><br><span class="line">			minWeight = edgeVec[i].m_iWeightValue;</span><br><span class="line">			edgeIndex = i;</span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">if</span> (minWeight == <span class="number">0</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">for</span> (; i &lt; edgeVec.size(); ++i)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span> (edgeVec[i].m_bSelected)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">continue</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span></span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">if</span> (minWeight &gt; edgeVec[i].m_iWeightValue)</span><br><span class="line">			&#123;</span><br><span class="line">				minWeight = edgeVec[i].m_iWeightValue;</span><br><span class="line">				edgeIndex = i;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> edgeIndex;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> CMap::kruskalTree()</span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">int</span> value = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">int</span> edgeCount = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">	<span class="comment">//定义存放结点集合的数组</span></span><br><span class="line">	<span class="built_in">vector</span>&lt;<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&gt; nodeSets;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">	<span class="comment">//第一步：取出所有边</span></span><br><span class="line">	<span class="built_in">vector</span>&lt;Edge&gt; edgeVec;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; m_iCapacity; ++i)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> j = i + <span class="number">1</span>; j &lt; m_iCapacity; ++j)</span><br><span class="line">		&#123;</span><br><span class="line">			getValueFromMatrix(i, j, value);</span><br><span class="line">			<span class="keyword">if</span> (value != <span class="number">0</span>)</span><br><span class="line">			&#123;</span><br><span class="line">				<span class="function">Edge <span class="title">edge</span><span class="params">(i, j, value)</span></span>;</span><br><span class="line">				edgeVec.push_back(edge);</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//1.找到算法结束条件</span></span><br><span class="line">	<span class="keyword">while</span> (edgeCount &lt; m_iCapacity - <span class="number">1</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="comment">//2.从边集合中找到最小边</span></span><br><span class="line">		<span class="keyword">int</span> minEdgeIndex = getMinEdge(edgeVec);</span><br><span class="line">		edgeVec[minEdgeIndex].m_bSelected = <span class="literal">true</span>;</span><br><span class="line">		<span class="comment">//3.找出最小边连接的点</span></span><br><span class="line">		<span class="keyword">int</span> nodeAIndex = edgeVec[minEdgeIndex].m_iNodeIndexA;</span><br><span class="line">		<span class="keyword">int</span> nodeBIndex = edgeVec[minEdgeIndex].m_iNodeIndexB;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">bool</span> nodeAIsInSet = <span class="literal">false</span>;</span><br><span class="line">		<span class="keyword">bool</span> nodeBIsInSet = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">int</span> nodeAInSetLabel = <span class="number">-1</span>;</span><br><span class="line">		<span class="keyword">int</span> nodeBInSetLabel = <span class="number">-1</span>;</span><br><span class="line"></span><br><span class="line">		<span class="comment">//4.找出点所在的点集合</span></span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; nodeSets.size(); ++i)</span><br><span class="line">		&#123;</span><br><span class="line">			nodeAIsInSet = isInSet(nodeSets[i], nodeAIndex);</span><br><span class="line">			<span class="keyword">if</span> (nodeAIsInSet)</span><br><span class="line">			&#123;</span><br><span class="line">				nodeAIsInSet = i;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; nodeSets.size(); ++i)</span><br><span class="line">		&#123;</span><br><span class="line">			nodeBIsInSet = isInSet(nodeSets[i], nodeBIndex);</span><br><span class="line">			<span class="keyword">if</span> (nodeBIsInSet)</span><br><span class="line">			&#123;</span><br><span class="line">				nodeBIsInSet = i;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="comment">//5.根据点所在集合的不同做出不同处理</span></span><br><span class="line">		<span class="keyword">if</span> (nodeAInSetLabel == <span class="number">-1</span> &amp;&amp; nodeBInSetLabel == <span class="number">-1</span>)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; vec;</span><br><span class="line">			vec.push_back(nodeAIndex);</span><br><span class="line">			vec.push_back(nodeBIndex);</span><br><span class="line">			nodeSets.push_back(vec);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span> <span class="keyword">if</span> (nodeAInSetLabel == <span class="number">-1</span> &amp;&amp; nodeBInSetLabel != <span class="number">-1</span>)</span><br><span class="line">		&#123;</span><br><span class="line">			nodeSets[nodeBInSetLabel].push_back(nodeAIndex);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span> <span class="keyword">if</span> (nodeAInSetLabel != <span class="number">-1</span> &amp;&amp; nodeBInSetLabel == <span class="number">-1</span>)</span><br><span class="line">		&#123;</span><br><span class="line">			nodeSets[nodeBInSetLabel].push_back(nodeBIndex);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span> <span class="keyword">if</span> (nodeAInSetLabel != <span class="number">-1</span> &amp;&amp; nodeBInSetLabel != <span class="number">-1</span> &amp;&amp; nodeAInSetLabel != nodeBInSetLabel)</span><br><span class="line">		&#123;</span><br><span class="line">			mergeNodeSet(nodeSets[nodeAInSetLabel], nodeSets[nodeBInSetLabel]);</span><br><span class="line">			<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; (<span class="keyword">int</span>)nodeSets.size() - <span class="number">1</span>; ++i)</span><br><span class="line">			&#123;</span><br><span class="line">				nodeSets[i] = nodeSets[i + <span class="number">1</span>];</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span> <span class="keyword">if</span> (nodeAInSetLabel != <span class="number">-1</span> &amp;&amp; nodeBInSetLabel != <span class="number">-1</span> &amp;&amp; nodeAInSetLabel == nodeBInSetLabel)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">continue</span>;</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		m_pEdge[edgeCount] = edgeVec[minEdgeIndex];</span><br><span class="line">		edgeCount++;</span><br><span class="line"></span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt; edgeVec[minEdgeIndex].m_iNodeIndexA &lt;&lt; <span class="string">"---"</span> &lt;&lt; edgeVec[minEdgeIndex].m_iNodeIndexB &lt;&lt; <span class="string">" "</span>;</span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt; edgeVec[minEdgeIndex].m_iWeightValue &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">bool</span> CMap::isInSet(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; nodeSet, <span class="keyword">int</span> target)</span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; nodeSet.size(); ++i)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span> (nodeSet[i] == target)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> CMap::mergeNodeSet(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; &amp;nodeSetA, <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; nodeSetB)</span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; nodeSetB.size(); ++i)</span><br><span class="line">	&#123;</span><br><span class="line">		nodeSetA.push_back(nodeSetB[i]);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="demo-cpp-2"><a href="#demo-cpp-2" class="headerlink" title="demo.cpp"></a>demo.cpp</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"CMap.h"</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">		A</span></span><br><span class="line"><span class="comment">	  /   \</span></span><br><span class="line"><span class="comment">	 B     D</span></span><br><span class="line"><span class="comment">	/ \   / \</span></span><br><span class="line"><span class="comment">   C - F G - H</span></span><br><span class="line"><span class="comment">	\ /</span></span><br><span class="line"><span class="comment">	 E</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*算法例子：</span></span><br><span class="line"><span class="comment">		A</span></span><br><span class="line"><span class="comment">	  / | \</span></span><br><span class="line"><span class="comment">	B - F - E</span></span><br><span class="line"><span class="comment">	 \ / \ /</span></span><br><span class="line"><span class="comment">	  C - D</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">	  权值：</span></span><br><span class="line"><span class="comment">	  A-B 6	A-E 5 A-F 1</span></span><br><span class="line"><span class="comment">	  B-C 3 B-F 2</span></span><br><span class="line"><span class="comment">	  C-F 8 C-D 7</span></span><br><span class="line"><span class="comment">	  D-F 4 D-E 2</span></span><br><span class="line"><span class="comment">	  E-F 9</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	CMap *pMap = <span class="keyword">new</span> CMap(<span class="number">6</span>);</span><br><span class="line"></span><br><span class="line">	Node *pNodeA = <span class="keyword">new</span> Node(<span class="string">'A'</span>);</span><br><span class="line">	Node *pNodeB = <span class="keyword">new</span> Node(<span class="string">'B'</span>);</span><br><span class="line">	Node *pNodeC = <span class="keyword">new</span> Node(<span class="string">'C'</span>);</span><br><span class="line">	Node *pNodeD = <span class="keyword">new</span> Node(<span class="string">'D'</span>);</span><br><span class="line">	Node *pNodeE = <span class="keyword">new</span> Node(<span class="string">'E'</span>);</span><br><span class="line">	Node *pNodeF = <span class="keyword">new</span> Node(<span class="string">'F'</span>);</span><br><span class="line"></span><br><span class="line">	pMap-&gt;addNode(pNodeA);</span><br><span class="line">	pMap-&gt;addNode(pNodeB);</span><br><span class="line">	pMap-&gt;addNode(pNodeC);</span><br><span class="line">	pMap-&gt;addNode(pNodeD);</span><br><span class="line">	pMap-&gt;addNode(pNodeE);</span><br><span class="line">	pMap-&gt;addNode(pNodeF);</span><br><span class="line"></span><br><span class="line">	pMap-&gt;setValueToMatrixForUndirectedGraph(<span class="number">0</span>, <span class="number">1</span>, <span class="number">6</span>);</span><br><span class="line">	pMap-&gt;setValueToMatrixForUndirectedGraph(<span class="number">0</span>, <span class="number">4</span>, <span class="number">5</span>);</span><br><span class="line">	pMap-&gt;setValueToMatrixForUndirectedGraph(<span class="number">0</span>, <span class="number">5</span>, <span class="number">1</span>);</span><br><span class="line">	pMap-&gt;setValueToMatrixForUndirectedGraph(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>);</span><br><span class="line">	pMap-&gt;setValueToMatrixForUndirectedGraph(<span class="number">1</span>, <span class="number">5</span>, <span class="number">2</span>);</span><br><span class="line">	pMap-&gt;setValueToMatrixForUndirectedGraph(<span class="number">2</span>, <span class="number">5</span>, <span class="number">8</span>);</span><br><span class="line">	pMap-&gt;setValueToMatrixForUndirectedGraph(<span class="number">2</span>, <span class="number">3</span>, <span class="number">7</span>);</span><br><span class="line">	pMap-&gt;setValueToMatrixForUndirectedGraph(<span class="number">3</span>, <span class="number">5</span>, <span class="number">4</span>);</span><br><span class="line">	pMap-&gt;setValueToMatrixForUndirectedGraph(<span class="number">3</span>, <span class="number">4</span>, <span class="number">2</span>);</span><br><span class="line">	pMap-&gt;setValueToMatrixForUndirectedGraph(<span class="number">4</span>, <span class="number">5</span>, <span class="number">9</span>);</span><br><span class="line"></span><br><span class="line">	<span class="comment">// 	pMap-&gt;primTree(0);</span></span><br><span class="line">	pMap-&gt;kruskalTree();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>输出：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">0---5 1</span><br><span class="line">1---5 2</span><br><span class="line">3---4 2</span><br><span class="line">1---2 3</span><br><span class="line">3---5 4</span><br></pre></td></tr></table></figure></p>
]]></content>
      
        <categories>
            
            <category> 编程语言 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> CPP </tag>
            
            <tag> 数据结构 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[线性表]]></title>
      <url>https://hubojing.github.io/2019/06/12/%E7%BA%BF%E6%80%A7%E8%A1%A8/</url>
      <content type="html"><![CDATA[<div align="left"><br><img src="https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1550075379443&di=51f53328008b4821ce8f839ac9186c0c&imgtype=0&src=http%3A%2F%2Fhiphotos.baidu.com%2Fdoc%2Fpic%2Fitem%2Fb17eca8065380cd7e40f7c6ba844ad3459828127.jpg" width="300" height="180" style="float:right;"><br><br><br>　　<strong>线性表（顺序表和链式表）。</strong><br>　　<strong>补之前的系列</strong><br><br><br> </div>

<a id="more"></a>
<h1 id="数据结构系列"><a href="#数据结构系列" class="headerlink" title="数据结构系列"></a>数据结构系列</h1><p>栈 <a href="https://hubojing.github.io/2017/11/14/%E6%A0%88/">https://hubojing.github.io/2017/11/14/%E6%A0%88/</a><br>队列 <a href="https://hubojing.github.io/2017/11/12/%E9%98%9F%E5%88%97/">https://hubojing.github.io/2017/11/12/%E9%98%9F%E5%88%97/</a><br>树 <a href="https://hubojing.github.io/2017/07/23/%E6%A0%91/">https://hubojing.github.io/2017/07/23/%E6%A0%91/</a></p>
<h1 id="顺序表"><a href="#顺序表" class="headerlink" title="顺序表"></a>顺序表</h1><h2 id="List-h"><a href="#List-h" class="headerlink" title="List.h"></a>List.h</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> LIST_H</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LIST_H</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"Coordinate.h"</span></span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">List</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">	List(<span class="keyword">int</span> size);</span><br><span class="line">	~List();</span><br><span class="line">	<span class="function"><span class="keyword">void</span> <span class="title">ClearList</span><span class="params">()</span></span>;</span><br><span class="line">	<span class="function"><span class="keyword">bool</span> <span class="title">ListEmpty</span><span class="params">()</span></span>;</span><br><span class="line">	<span class="function"><span class="keyword">int</span> <span class="title">ListLength</span><span class="params">()</span></span>;</span><br><span class="line">	<span class="function"><span class="keyword">bool</span> <span class="title">GetElem</span><span class="params">(<span class="keyword">int</span> i, Coordinate *e)</span></span>;</span><br><span class="line">	<span class="function"><span class="keyword">int</span> <span class="title">LocateElem</span><span class="params">(Coordinate *e)</span></span>;</span><br><span class="line">	<span class="function"><span class="keyword">bool</span> <span class="title">PriorElem</span><span class="params">(Coordinate *currentElem, Coordinate *preElem)</span></span>;</span><br><span class="line">	<span class="function"><span class="keyword">bool</span> <span class="title">NextElem</span><span class="params">(Coordinate *currentElem, Coordinate *nextElem)</span></span>;</span><br><span class="line">	<span class="function"><span class="keyword">void</span> <span class="title">ListTraverse</span><span class="params">()</span></span>;</span><br><span class="line">	<span class="function"><span class="keyword">bool</span> <span class="title">ListInsert</span><span class="params">(<span class="keyword">int</span> i, Coordinate *e)</span></span>;</span><br><span class="line">	<span class="function"><span class="keyword">bool</span> <span class="title">ListDelete</span><span class="params">(<span class="keyword">int</span> i, Coordinate *e)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">	Coordinate *m_pList;</span><br><span class="line">	<span class="keyword">int</span> m_iSize;</span><br><span class="line">	<span class="keyword">int</span> m_iLength;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br></pre></td></tr></table></figure>
<h2 id="List-cpp"><a href="#List-cpp" class="headerlink" title="List.cpp"></a>List.cpp</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//线性表--顺序表</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"List.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line">List::List(<span class="keyword">int</span> size)</span><br><span class="line">&#123;</span><br><span class="line">	m_iSize = size;</span><br><span class="line">	m_pList = <span class="keyword">new</span> Coordinate[m_iSize];</span><br><span class="line">	m_iLength = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">List::~List()</span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">delete</span>[]m_pList;</span><br><span class="line">	m_pList = <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> List::ClearList()</span><br><span class="line">&#123;</span><br><span class="line">	m_iLength = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">bool</span> List::ListEmpty()</span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">if</span> (m_iLength == <span class="number">0</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> List::ListLength()</span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">return</span> m_iLength;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">bool</span> List::GetElem(<span class="keyword">int</span> i, Coordinate *e)</span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">if</span> (i &lt; <span class="number">0</span> || i &gt;= m_iSize)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	*e = m_pList[i];</span><br><span class="line">	<span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> List::LocateElem(Coordinate *e)</span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; m_iLength; ++i)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span> (m_pList[i] == *e)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">return</span> i;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">bool</span> List::PriorElem(Coordinate *currentElem, Coordinate *preElem)</span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">int</span> temp = LocateElem(currentElem);</span><br><span class="line">	<span class="keyword">if</span> (temp == <span class="number">-1</span> || temp == <span class="number">0</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">	&#123;</span><br><span class="line">		*preElem = m_pList[temp - <span class="number">1</span>];</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">bool</span> List::NextElem(Coordinate *currentElem, Coordinate *nextElem)</span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">int</span> temp = LocateElem(currentElem);</span><br><span class="line">	<span class="keyword">if</span> (temp == <span class="number">-1</span> || temp == m_iLength - <span class="number">1</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">	&#123;</span><br><span class="line">		*nextElem = m_pList[temp + <span class="number">1</span>];</span><br><span class="line">		<span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> List::ListTraverse()</span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; m_iLength; ++i)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt; m_pList[i] &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">		<span class="comment">// 		m_pList[i].printCoordinate();</span></span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">bool</span> List::ListInsert(<span class="keyword">int</span> i, Coordinate *e)</span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">if</span> (i&lt;<span class="number">0</span> || i&gt;m_iLength)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> k = m_iLength - <span class="number">1</span>; k &gt;= i; --k)</span><br><span class="line">	&#123;</span><br><span class="line">		m_pList[k + <span class="number">1</span>] = m_pList[k];</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	m_pList[i] = *e;</span><br><span class="line"></span><br><span class="line">	m_iLength++;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">bool</span> List::ListDelete(<span class="keyword">int</span> i, Coordinate *e)</span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">if</span> (i &lt; <span class="number">0</span> || i &gt;= m_iLength)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	*e = m_pList[i];</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> k = i + <span class="number">1</span>; k &lt; m_iLength; ++k)</span><br><span class="line">	&#123;</span><br><span class="line">		m_pList[k - <span class="number">1</span>] = m_pList[k];</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	m_iLength--;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="Coordinate-h"><a href="#Coordinate-h" class="headerlink" title="Coordinate.h"></a>Coordinate.h</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> COORDINATE_H</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> COORDINATE_H</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;ostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Coordinate</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">	<span class="keyword">friend</span> ostream &amp;<span class="keyword">operator</span>&lt;&lt;(ostream &amp;out, Coordinate &amp;coor);</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">	Coordinate(<span class="keyword">int</span> x = <span class="number">0</span>, <span class="keyword">int</span> y = <span class="number">0</span>);</span><br><span class="line">	<span class="function"><span class="keyword">void</span> <span class="title">printCoordinate</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">bool</span> <span class="keyword">operator</span>==(Coordinate &amp;coor);</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">	<span class="keyword">int</span> m_iX;</span><br><span class="line">	<span class="keyword">int</span> m_iY;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br></pre></td></tr></table></figure>
<h2 id="Coordinate-cpp"><a href="#Coordinate-cpp" class="headerlink" title="Coordinate.cpp"></a>Coordinate.cpp</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"Coordinate.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line">Coordinate::Coordinate(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span><br><span class="line">&#123;</span><br><span class="line">	m_iX = x;</span><br><span class="line">	m_iY = y;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> Coordinate::printCoordinate()</span><br><span class="line">&#123;</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">"("</span> &lt;&lt; m_iX &lt;&lt; <span class="string">","</span> &lt;&lt; m_iY &lt;&lt; <span class="string">")"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">ostream &amp;<span class="keyword">operator</span>&lt;&lt;(ostream &amp;out, Coordinate &amp;coor)</span><br><span class="line">&#123;</span><br><span class="line">	out &lt;&lt; <span class="string">"("</span> &lt;&lt; coor.m_iX &lt;&lt; <span class="string">","</span> &lt;&lt; coor.m_iY &lt;&lt; <span class="string">")"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	<span class="keyword">return</span> out;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">bool</span> Coordinate::<span class="keyword">operator</span>==(Coordinate &amp;coor)</span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">if</span> (<span class="keyword">this</span>-&gt;m_iX == coor.m_iX &amp;&amp; <span class="keyword">this</span>-&gt;m_iY == coor.m_iY)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="demo-cpp"><a href="#demo-cpp" class="headerlink" title="demo.cpp"></a>demo.cpp</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"List.h"</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="function">Coordinate <span class="title">e1</span><span class="params">(<span class="number">1</span>, <span class="number">2</span>)</span></span>;</span><br><span class="line">	<span class="function">Coordinate <span class="title">e2</span><span class="params">(<span class="number">3</span>, <span class="number">4</span>)</span></span>;</span><br><span class="line">	<span class="function">Coordinate <span class="title">e3</span><span class="params">(<span class="number">5</span>, <span class="number">6</span>)</span></span>;</span><br><span class="line"></span><br><span class="line">	List *<span class="built_in">list</span> = <span class="keyword">new</span> List(<span class="number">10</span>);</span><br><span class="line">	<span class="built_in">list</span>-&gt;ListInsert(<span class="number">0</span>, &amp;e1);</span><br><span class="line">	<span class="built_in">list</span>-&gt;ListInsert(<span class="number">1</span>, &amp;e2);</span><br><span class="line">	<span class="built_in">list</span>-&gt;ListInsert(<span class="number">2</span>, &amp;e3);</span><br><span class="line"></span><br><span class="line">	<span class="built_in">list</span>-&gt;ListTraverse();</span><br><span class="line"></span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"长度：%d\n"</span>, <span class="built_in">list</span>-&gt;ListLength());</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>运行结果：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">(1,2)</span><br><span class="line"></span><br><span class="line">(3,4)</span><br><span class="line"></span><br><span class="line">(5,6)</span><br><span class="line"></span><br><span class="line">长度：3</span><br></pre></td></tr></table></figure></p>
<h1 id="链式表"><a href="#链式表" class="headerlink" title="链式表"></a>链式表</h1><h2 id="Node-h"><a href="#Node-h" class="headerlink" title="Node.h"></a>Node.h</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> NODE_H</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> NODE_H</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Node</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">	<span class="keyword">int</span> data;</span><br><span class="line">	Node *next;</span><br><span class="line">	<span class="function"><span class="keyword">void</span> <span class="title">printNode</span><span class="params">()</span></span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br></pre></td></tr></table></figure>
<h2 id="Node-cpp"><a href="#Node-cpp" class="headerlink" title="Node.cpp"></a>Node.cpp</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"Node.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> Node::printNode()</span><br><span class="line">&#123;</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; data &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="List-h-1"><a href="#List-h-1" class="headerlink" title="List.h"></a>List.h</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> LIST_H</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LIST_H</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">"Node.h"</span></span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">List</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">	List();</span><br><span class="line">	~List();</span><br><span class="line">	<span class="function"><span class="keyword">void</span> <span class="title">ClearList</span><span class="params">()</span></span>;</span><br><span class="line">	<span class="function"><span class="keyword">bool</span> <span class="title">ListEmpty</span><span class="params">()</span></span>;</span><br><span class="line">	<span class="function"><span class="keyword">int</span> <span class="title">ListLength</span><span class="params">()</span></span>;</span><br><span class="line">	<span class="function"><span class="keyword">bool</span> <span class="title">GetElem</span><span class="params">(<span class="keyword">int</span> i, Node *pNode)</span></span>;</span><br><span class="line">	<span class="function"><span class="keyword">int</span> <span class="title">LocateElem</span><span class="params">(Node *pNode)</span></span>;</span><br><span class="line">	<span class="function"><span class="keyword">bool</span> <span class="title">PriorElem</span><span class="params">(Node *pCurrentNode, Node *pPreNode)</span></span>;</span><br><span class="line">	<span class="function"><span class="keyword">bool</span> <span class="title">NextElem</span><span class="params">(Node *pCurrentNode, Node *pNextNode)</span></span>;</span><br><span class="line">	<span class="function"><span class="keyword">void</span> <span class="title">ListTraverse</span><span class="params">()</span></span>;</span><br><span class="line">	<span class="function"><span class="keyword">bool</span> <span class="title">ListInsert</span><span class="params">(<span class="keyword">int</span> i, Node *pNode)</span></span>;</span><br><span class="line">	<span class="function"><span class="keyword">bool</span> <span class="title">ListDelete</span><span class="params">(<span class="keyword">int</span> i, Node *pNode)</span></span>;</span><br><span class="line">	<span class="function"><span class="keyword">bool</span> <span class="title">ListInsertHead</span><span class="params">(Node *pNode)</span></span>;</span><br><span class="line">	<span class="function"><span class="keyword">bool</span> <span class="title">ListInsertTail</span><span class="params">(Node *pNode)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">	Node *m_pList;</span><br><span class="line">	<span class="keyword">int</span> m_iLength;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br></pre></td></tr></table></figure>
<h2 id="List-cpp-1"><a href="#List-cpp-1" class="headerlink" title="List.cpp"></a>List.cpp</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//线性表--顺序表</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"List.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line">List::List()</span><br><span class="line">&#123;</span><br><span class="line">	m_pList = <span class="keyword">new</span> Node;</span><br><span class="line">	m_pList-&gt;data = <span class="number">0</span>;</span><br><span class="line">	m_pList-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line">	m_iLength = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">List::~List()</span><br><span class="line">&#123;</span><br><span class="line">	ClearList();</span><br><span class="line">	<span class="keyword">delete</span> m_pList;</span><br><span class="line">	m_pList = <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">bool</span> List::ListInsertHead(Node *pNode)</span><br><span class="line">&#123;</span><br><span class="line">	Node *newNode = <span class="keyword">new</span> Node;</span><br><span class="line">	<span class="keyword">if</span> (newNode == <span class="literal">NULL</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	newNode-&gt;data = pNode-&gt;data;</span><br><span class="line">	newNode-&gt;next = m_pList-&gt;next;</span><br><span class="line">	m_pList-&gt;next = newNode;</span><br><span class="line">	m_iLength++;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">bool</span> List::ListInsertTail(Node *pNode)</span><br><span class="line">&#123;</span><br><span class="line">	Node *currentNode = m_pList;</span><br><span class="line">	<span class="keyword">while</span> (currentNode-&gt;next != <span class="literal">NULL</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		currentNode = currentNode-&gt;next;</span><br><span class="line">	&#125;</span><br><span class="line">	Node *newNode = <span class="keyword">new</span> Node;</span><br><span class="line">	<span class="keyword">if</span> (newNode == <span class="literal">NULL</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	newNode-&gt;data = pNode-&gt;data;</span><br><span class="line">	newNode-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line">	currentNode-&gt;next = newNode;</span><br><span class="line">	m_iLength++;</span><br><span class="line">	<span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">bool</span> List::ListInsert(<span class="keyword">int</span> i, Node* pNode)</span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">if</span> (i&lt;<span class="number">0</span> || i&gt;m_iLength)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	Node *currentNode = m_pList;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">0</span>; k &lt; i; ++k)</span><br><span class="line">	&#123;</span><br><span class="line">		currentNode = currentNode-&gt;next;</span><br><span class="line">	&#125;</span><br><span class="line">	Node *newNode = <span class="keyword">new</span> Node;</span><br><span class="line">	<span class="keyword">if</span> (newNode == <span class="literal">NULL</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	newNode-&gt;data = pNode-&gt;data;</span><br><span class="line">	newNode-&gt;next = currentNode-&gt;next;</span><br><span class="line">	currentNode-&gt;next = newNode;</span><br><span class="line">	<span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">bool</span> List::ListDelete(<span class="keyword">int</span> i, Node *pNode)</span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">if</span> (i &lt; <span class="number">0</span> || i &gt;= m_iLength)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	Node *currentNode = m_pList;</span><br><span class="line">	Node *currentNodeBefore = <span class="literal">NULL</span>;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">0</span>; k &lt;= i; ++k)</span><br><span class="line">	&#123;</span><br><span class="line">		currentNodeBefore = currentNode;</span><br><span class="line">		currentNode = currentNode-&gt;next;</span><br><span class="line">	&#125;</span><br><span class="line">	currentNodeBefore-&gt;next = currentNode-&gt;next;</span><br><span class="line">	pNode-&gt;data = currentNode-&gt;data;</span><br><span class="line">	<span class="keyword">delete</span> currentNode;</span><br><span class="line">	currentNode = <span class="literal">NULL</span>;</span><br><span class="line">	m_iLength--;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">void</span> List::ClearList()</span><br><span class="line">&#123;</span><br><span class="line">	Node *currentNode = m_pList-&gt;next;</span><br><span class="line">	<span class="keyword">while</span> (currentNode != <span class="literal">NULL</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		Node *temp = currentNode-&gt;next;</span><br><span class="line">		<span class="keyword">delete</span> currentNode;</span><br><span class="line">		currentNode = temp;</span><br><span class="line">	&#125;</span><br><span class="line">	m_pList-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line">	m_iLength = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">bool</span> List::ListEmpty()</span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">if</span> (m_iLength == <span class="number">0</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> List::ListLength()</span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">return</span> m_iLength;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">bool</span> List::GetElem(<span class="keyword">int</span> i, Node *pNode)</span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">if</span> (i &lt; <span class="number">0</span> || i &gt;= m_iLength)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	Node *currentNode = m_pList;</span><br><span class="line">	Node *currentNodeBefore = <span class="literal">NULL</span>;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">0</span>; k &lt;= i; ++k)</span><br><span class="line">	&#123;</span><br><span class="line">		currentNodeBefore = currentNode;</span><br><span class="line">		currentNode = currentNode-&gt;next;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	pNode-&gt;data = currentNode-&gt;data;</span><br><span class="line">	<span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> List::LocateElem(Node *pNode)</span><br><span class="line">&#123;</span><br><span class="line">	Node *currentNode = m_pList;</span><br><span class="line">	<span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">while</span> (currentNode-&gt;next != <span class="literal">NULL</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		currentNode = currentNode-&gt;next;</span><br><span class="line">		<span class="keyword">if</span> (currentNode-&gt;data == pNode-&gt;data)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">return</span> count;</span><br><span class="line">		&#125;</span><br><span class="line">		count++;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">bool</span> List::PriorElem(Node *pCurrentNode, Node *pPreNode)</span><br><span class="line">&#123;</span><br><span class="line">	Node *currentNode = m_pList;</span><br><span class="line">	Node *tempNode = <span class="literal">NULL</span>;</span><br><span class="line">	<span class="keyword">while</span> (currentNode-&gt;next != <span class="literal">NULL</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		tempNode = currentNode;</span><br><span class="line">		currentNode = currentNode-&gt;next;</span><br><span class="line">		<span class="keyword">if</span> (currentNode-&gt;data == pCurrentNode-&gt;data)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">if</span> (tempNode == m_pList)</span><br><span class="line">			&#123;</span><br><span class="line">				<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">			&#125;</span><br><span class="line">			pPreNode-&gt;data = tempNode-&gt;data;</span><br><span class="line">			<span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">bool</span> List::NextElem(Node *pCurrentNode, Node *pNextNode)</span><br><span class="line">&#123;</span><br><span class="line">	Node *currentNode = m_pList;</span><br><span class="line">	<span class="keyword">while</span> (currentNode-&gt;next != <span class="literal">NULL</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		currentNode = currentNode-&gt;next;</span><br><span class="line">		<span class="keyword">if</span> (currentNode-&gt;data == pCurrentNode-&gt;data)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">if</span> (currentNode-&gt;next == <span class="literal">NULL</span>)</span><br><span class="line">			&#123;</span><br><span class="line">				<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">			&#125;</span><br><span class="line"></span><br><span class="line">			pNextNode-&gt;data = currentNode-&gt;next-&gt;data;</span><br><span class="line">			<span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> List::ListTraverse()</span><br><span class="line">&#123;</span><br><span class="line">	Node *currentNode = m_pList;</span><br><span class="line">	<span class="keyword">while</span> (currentNode-&gt;next != <span class="literal">NULL</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		currentNode = currentNode-&gt;next;</span><br><span class="line">		currentNode-&gt;printNode();</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="demo-cpp-1"><a href="#demo-cpp-1" class="headerlink" title="demo.cpp"></a>demo.cpp</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"List.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	List *pList = <span class="keyword">new</span> List();</span><br><span class="line">	Node node1;</span><br><span class="line">	node1.data = <span class="number">1</span>;</span><br><span class="line">	Node node2;</span><br><span class="line">	node2.data = <span class="number">2</span>;</span><br><span class="line">	Node node3;</span><br><span class="line">	node3.data = <span class="number">3</span>;</span><br><span class="line">	Node node4;</span><br><span class="line">	node4.data = <span class="number">4</span>;</span><br><span class="line">	Node node5;</span><br><span class="line">	node5.data = <span class="number">5</span>;</span><br><span class="line"></span><br><span class="line">	<span class="comment">// 	pList-&gt;ListInsertHead(&amp;node1);</span></span><br><span class="line">	<span class="comment">// 	pList-&gt;ListInsertHead(&amp;node2);</span></span><br><span class="line">	<span class="comment">// 	pList-&gt;ListInsertHead(&amp;node3);</span></span><br><span class="line">	<span class="comment">// 	pList-&gt;ListInsertHead(&amp;node4);</span></span><br><span class="line"></span><br><span class="line">	pList-&gt;ListInsertTail(&amp;node1);</span><br><span class="line">	pList-&gt;ListInsertTail(&amp;node2);</span><br><span class="line">	pList-&gt;ListInsertTail(&amp;node3);</span><br><span class="line">	pList-&gt;ListInsertTail(&amp;node4);</span><br><span class="line"></span><br><span class="line">	pList-&gt;ListInsert(<span class="number">1</span>, &amp;node5);</span><br><span class="line"></span><br><span class="line">	<span class="comment">// 	Node temp;</span></span><br><span class="line">	<span class="comment">// 	pList-&gt;ListDelete(1, &amp;temp);</span></span><br><span class="line">	<span class="comment">// 	cout &lt;&lt; "temp = " &lt;&lt; temp.data &lt;&lt; endl;</span></span><br><span class="line"></span><br><span class="line">	pList-&gt;ListTraverse();</span><br><span class="line"></span><br><span class="line">	<span class="keyword">delete</span> pList;</span><br><span class="line">	pList = <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="链表应用之通讯录"><a href="#链表应用之通讯录" class="headerlink" title="链表应用之通讯录"></a>链表应用之通讯录</h1><h2 id="Person-h"><a href="#Person-h" class="headerlink" title="Person.h"></a>Person.h</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> PERSON_H</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PERSON_H</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;ostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">	<span class="keyword">friend</span> ostream &amp;<span class="keyword">operator</span>&lt;&lt;(ostream &amp;out, Person &amp;person);</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">	<span class="built_in">string</span> name;</span><br><span class="line">	<span class="built_in">string</span> phone;</span><br><span class="line">	Person &amp;<span class="keyword">operator</span>=(Person &amp;person);</span><br><span class="line">	<span class="keyword">bool</span> <span class="keyword">operator</span>==(Person &amp;person);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br></pre></td></tr></table></figure>
<h2 id="Person-cpp"><a href="#Person-cpp" class="headerlink" title="Person.cpp"></a>Person.cpp</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"Person.h"</span></span></span><br><span class="line"></span><br><span class="line">ostream &amp;<span class="keyword">operator</span>&lt;&lt;(ostream &amp;out, Person &amp;person)</span><br><span class="line">&#123;</span><br><span class="line">	out &lt;&lt; person.name &lt;&lt; <span class="string">"----"</span> &lt;&lt; person.phone &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	<span class="keyword">return</span> out;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Person &amp;Person::<span class="keyword">operator</span>=(Person &amp;person)</span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">this</span>-&gt;name = person.name;</span><br><span class="line">	<span class="keyword">this</span>-&gt;phone = person.phone;</span><br><span class="line">	<span class="keyword">return</span> *<span class="keyword">this</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">bool</span> Person::<span class="keyword">operator</span>==(Person &amp;person)</span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">if</span> (<span class="keyword">this</span>-&gt;name == person.name &amp;&amp; <span class="keyword">this</span>-&gt;phone==person.phone)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="Node-h-1"><a href="#Node-h-1" class="headerlink" title="Node.h"></a>Node.h</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> NODE_H</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> NODE_H</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"Person.h"</span></span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Node</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">	Person data;</span><br><span class="line">	Node *next;</span><br><span class="line">	<span class="function"><span class="keyword">void</span> <span class="title">printNode</span><span class="params">()</span></span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br></pre></td></tr></table></figure>
<h2 id="Node-cpp-1"><a href="#Node-cpp-1" class="headerlink" title="Node.cpp"></a>Node.cpp</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"Node.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> Node::printNode()</span><br><span class="line">&#123;</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; data &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="List-h-2"><a href="#List-h-2" class="headerlink" title="List.h"></a>List.h</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> LIST_H</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LIST_H</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">"Node.h"</span></span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">List</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">	List();</span><br><span class="line">	~List();</span><br><span class="line">	<span class="function"><span class="keyword">void</span> <span class="title">ClearList</span><span class="params">()</span></span>;</span><br><span class="line">	<span class="function"><span class="keyword">bool</span> <span class="title">ListEmpty</span><span class="params">()</span></span>;</span><br><span class="line">	<span class="function"><span class="keyword">int</span> <span class="title">ListLength</span><span class="params">()</span></span>;</span><br><span class="line">	<span class="function"><span class="keyword">bool</span> <span class="title">GetElem</span><span class="params">(<span class="keyword">int</span> i, Node *pNode)</span></span>;</span><br><span class="line">	<span class="function"><span class="keyword">int</span> <span class="title">LocateElem</span><span class="params">(Node *pNode)</span></span>;</span><br><span class="line">	<span class="function"><span class="keyword">bool</span> <span class="title">PriorElem</span><span class="params">(Node *pCurrentNode, Node *pPreNode)</span></span>;</span><br><span class="line">	<span class="function"><span class="keyword">bool</span> <span class="title">NextElem</span><span class="params">(Node *pCurrentNode, Node *pNextNode)</span></span>;</span><br><span class="line">	<span class="function"><span class="keyword">void</span> <span class="title">ListTraverse</span><span class="params">()</span></span>;</span><br><span class="line">	<span class="function"><span class="keyword">bool</span> <span class="title">ListInsert</span><span class="params">(<span class="keyword">int</span> i, Node *pNode)</span></span>;</span><br><span class="line">	<span class="function"><span class="keyword">bool</span> <span class="title">ListDelete</span><span class="params">(<span class="keyword">int</span> i, Node *pNode)</span></span>;</span><br><span class="line">	<span class="function"><span class="keyword">bool</span> <span class="title">ListInsertHead</span><span class="params">(Node *pNode)</span></span>;</span><br><span class="line">	<span class="function"><span class="keyword">bool</span> <span class="title">ListInsertTail</span><span class="params">(Node *pNode)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">	Node *m_pList;</span><br><span class="line">	<span class="keyword">int</span> m_iLength;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br></pre></td></tr></table></figure>
<h2 id="List-cpp-2"><a href="#List-cpp-2" class="headerlink" title="List.cpp"></a>List.cpp</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//线性表--顺序表</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"List.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line">List::List()</span><br><span class="line">&#123;</span><br><span class="line">	m_pList = <span class="keyword">new</span> Node;</span><br><span class="line"><span class="comment">// 	m_pList-&gt;data = 0;</span></span><br><span class="line">	m_pList-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line">	m_iLength = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">List::~List()</span><br><span class="line">&#123;</span><br><span class="line">	ClearList();</span><br><span class="line">	<span class="keyword">delete</span> m_pList;</span><br><span class="line">	m_pList = <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">bool</span> List::ListInsertHead(Node *pNode)</span><br><span class="line">&#123;</span><br><span class="line">	Node *newNode = <span class="keyword">new</span> Node;</span><br><span class="line">	<span class="keyword">if</span> (newNode == <span class="literal">NULL</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	newNode-&gt;data = pNode-&gt;data;</span><br><span class="line">	newNode-&gt;next = m_pList-&gt;next;</span><br><span class="line">	m_pList-&gt;next = newNode;</span><br><span class="line">	m_iLength++;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">bool</span> List::ListInsertTail(Node *pNode)</span><br><span class="line">&#123;</span><br><span class="line">	Node *currentNode = m_pList;</span><br><span class="line">	<span class="keyword">while</span> (currentNode-&gt;next != <span class="literal">NULL</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		currentNode = currentNode-&gt;next;</span><br><span class="line">	&#125;</span><br><span class="line">	Node *newNode = <span class="keyword">new</span> Node;</span><br><span class="line">	<span class="keyword">if</span> (newNode == <span class="literal">NULL</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	newNode-&gt;data = pNode-&gt;data;</span><br><span class="line">	newNode-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line">	currentNode-&gt;next = newNode;</span><br><span class="line">	m_iLength++;</span><br><span class="line">	<span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">bool</span> List::ListInsert(<span class="keyword">int</span> i, Node* pNode)</span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">if</span> (i&lt;<span class="number">0</span> || i&gt;m_iLength)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	Node *currentNode = m_pList;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">0</span>; k &lt; i; ++k)</span><br><span class="line">	&#123;</span><br><span class="line">		currentNode = currentNode-&gt;next;</span><br><span class="line">	&#125;</span><br><span class="line">	Node *newNode = <span class="keyword">new</span> Node;</span><br><span class="line">	<span class="keyword">if</span> (newNode == <span class="literal">NULL</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	newNode-&gt;data = pNode-&gt;data;</span><br><span class="line">	newNode-&gt;next = currentNode-&gt;next;</span><br><span class="line">	currentNode-&gt;next = newNode;</span><br><span class="line">	<span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">bool</span> List::ListDelete(<span class="keyword">int</span> i, Node *pNode)</span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">if</span> (i &lt; <span class="number">0</span> || i &gt;= m_iLength)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	Node *currentNode = m_pList;</span><br><span class="line">	Node *currentNodeBefore = <span class="literal">NULL</span>;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">0</span>; k &lt;= i; ++k)</span><br><span class="line">	&#123;</span><br><span class="line">		currentNodeBefore = currentNode;</span><br><span class="line">		currentNode = currentNode-&gt;next;</span><br><span class="line">	&#125;</span><br><span class="line">	currentNodeBefore-&gt;next = currentNode-&gt;next;</span><br><span class="line">	pNode-&gt;data = currentNode-&gt;data;</span><br><span class="line">	<span class="keyword">delete</span> currentNode;</span><br><span class="line">	currentNode = <span class="literal">NULL</span>;</span><br><span class="line">	m_iLength--;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">void</span> List::ClearList()</span><br><span class="line">&#123;</span><br><span class="line">	Node *currentNode = m_pList-&gt;next;</span><br><span class="line">	<span class="keyword">while</span> (currentNode != <span class="literal">NULL</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		Node *temp = currentNode-&gt;next;</span><br><span class="line">		<span class="keyword">delete</span> currentNode;</span><br><span class="line">		currentNode = temp;</span><br><span class="line">	&#125;</span><br><span class="line">	m_pList-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line">	m_iLength = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">bool</span> List::ListEmpty()</span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">if</span> (m_iLength == <span class="number">0</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> List::ListLength()</span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">return</span> m_iLength;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">bool</span> List::GetElem(<span class="keyword">int</span> i, Node *pNode)</span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">if</span> (i &lt; <span class="number">0</span> || i &gt;= m_iLength)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	Node *currentNode = m_pList;</span><br><span class="line">	Node *currentNodeBefore = <span class="literal">NULL</span>;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">0</span>; k &lt;= i; ++k)</span><br><span class="line">	&#123;</span><br><span class="line">		currentNodeBefore = currentNode;</span><br><span class="line">		currentNode = currentNode-&gt;next;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	pNode-&gt;data = currentNode-&gt;data;</span><br><span class="line">	<span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> List::LocateElem(Node *pNode)</span><br><span class="line">&#123;</span><br><span class="line">	Node *currentNode = m_pList;</span><br><span class="line">	<span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">while</span> (currentNode-&gt;next != <span class="literal">NULL</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		currentNode = currentNode-&gt;next;</span><br><span class="line">		<span class="keyword">if</span> (currentNode-&gt;data == pNode-&gt;data)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">return</span> count;</span><br><span class="line">		&#125;</span><br><span class="line">		count++;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">bool</span> List::PriorElem(Node *pCurrentNode, Node *pPreNode)</span><br><span class="line">&#123;</span><br><span class="line">	Node *currentNode = m_pList;</span><br><span class="line">	Node *tempNode = <span class="literal">NULL</span>;</span><br><span class="line">	<span class="keyword">while</span> (currentNode-&gt;next != <span class="literal">NULL</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		tempNode = currentNode;</span><br><span class="line">		currentNode = currentNode-&gt;next;</span><br><span class="line">		<span class="keyword">if</span> (currentNode-&gt;data == pCurrentNode-&gt;data)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">if</span> (tempNode == m_pList)</span><br><span class="line">			&#123;</span><br><span class="line">				<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">			&#125;</span><br><span class="line">			pPreNode-&gt;data = tempNode-&gt;data;</span><br><span class="line">			<span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">bool</span> List::NextElem(Node *pCurrentNode, Node *pNextNode)</span><br><span class="line">&#123;</span><br><span class="line">	Node *currentNode = m_pList;</span><br><span class="line">	<span class="keyword">while</span> (currentNode-&gt;next != <span class="literal">NULL</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		currentNode = currentNode-&gt;next;</span><br><span class="line">		<span class="keyword">if</span> (currentNode-&gt;data == pCurrentNode-&gt;data)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">if</span> (currentNode-&gt;next == <span class="literal">NULL</span>)</span><br><span class="line">			&#123;</span><br><span class="line">				<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">			&#125;</span><br><span class="line"></span><br><span class="line">			pNextNode-&gt;data = currentNode-&gt;next-&gt;data;</span><br><span class="line">			<span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> List::ListTraverse()</span><br><span class="line">&#123;</span><br><span class="line">	Node *currentNode = m_pList;</span><br><span class="line">	<span class="keyword">while</span> (currentNode-&gt;next != <span class="literal">NULL</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		currentNode = currentNode-&gt;next;</span><br><span class="line">		currentNode-&gt;printNode();</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="demo-cpp-2"><a href="#demo-cpp-2" class="headerlink" title="demo.cpp"></a>demo.cpp</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"List.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">menu</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">"功能菜单"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">"1.新建联系人"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">"2.删除联系人"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">"3.浏览通讯录"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">"4.退出通讯录"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">"请输入："</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">int</span> order = <span class="number">0</span>;</span><br><span class="line">	<span class="built_in">cin</span> &gt;&gt; order;</span><br><span class="line">	<span class="keyword">return</span> order;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">createPerson</span><span class="params">(List *pList)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	Node node;</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">"请输入姓名："</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	<span class="built_in">cin</span> &gt;&gt; node.data.name;</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">"请输入电话："</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	<span class="built_in">cin</span> &gt;&gt; node.data.phone;</span><br><span class="line">	pList-&gt;ListInsertTail(&amp;node);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">deletePerson</span><span class="params">(List *pList)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	Node node;</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">"请输入姓名："</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	<span class="built_in">cin</span> &gt;&gt; node.data.name;</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">"请输入电话："</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	<span class="built_in">cin</span> &gt;&gt; node.data.phone;</span><br><span class="line">	<span class="keyword">int</span> num = <span class="number">0</span>;</span><br><span class="line">	num = pList-&gt;LocateElem(&amp;node);</span><br><span class="line">	pList-&gt;ListDelete(num, &amp;node);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	List *pList = <span class="keyword">new</span> List();</span><br><span class="line"></span><br><span class="line">	<span class="keyword">int</span> userOrder = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">while</span> (userOrder != <span class="number">4</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		userOrder = menu();</span><br><span class="line">		<span class="keyword">switch</span> (userOrder)</span><br><span class="line">		&#123;</span><br><span class="line">		<span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">			<span class="built_in">cout</span> &lt;&lt; <span class="string">"用户指令---&gt;新建联系人："</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">			createPerson(pList);</span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">		<span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">			<span class="built_in">cout</span> &lt;&lt; <span class="string">"用户指令---&gt;删除联系人："</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">			<span class="built_in">cout</span> &lt;&lt; <span class="string">"请输入被删除者姓名："</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">			deletePerson(pList);</span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">		<span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">			<span class="built_in">cout</span> &lt;&lt; <span class="string">"用户指令---&gt;浏览通讯录："</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">			pList-&gt;ListTraverse();</span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">		<span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">			<span class="built_in">cout</span> &lt;&lt; <span class="string">"用户指令---&gt;退出通讯录："</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">default</span>:</span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">delete</span> pList;</span><br><span class="line">	pList = <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
        <categories>
            
            <category> 互联网 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> CPP </tag>
            
            <tag> 数据结构 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[浅谈面向接口编程]]></title>
      <url>https://hubojing.github.io/2019/06/11/%E6%B5%85%E8%B0%88%E9%9D%A2%E5%90%91%E6%8E%A5%E5%8F%A3%E7%BC%96%E7%A8%8B/</url>
      <content type="html"><![CDATA[<div align="left"><br><img src="https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1560271954691&di=bc0217f3ed0bb15433fc257bc850e091&imgtype=0&src=http%3A%2F%2Fpic.baike.soso.com%2Fugc%2Fbaikepic2%2F20126%2F20170917153020-370301936_png_864_479_719568.jpg%2F0" width="300" height="180" style="float:right;"><br><br><br>　　<strong>聊一聊面向接口编程。</strong><br><br><br> </div>

<a id="more"></a>
<p>　　最近看Go语言的资料，看到interface类型，突然想起来以前面试的时候面试官问过我是否了解C++接口编程。当时对于这个问题，我脑袋里只有类？抽象类？这样模糊的答案。Bug产出者的我好像经常把接口当类和函数在写。现在再看这个问题，包括对面向对象，似乎明白了些。</p>
<h1 id="从王者荣耀说开去"><a href="#从王者荣耀说开去" class="headerlink" title="从王者荣耀说开去"></a>从王者荣耀说开去</h1><p>　　比如玩王者荣耀，里面有各种英雄。比如智商250的鲁班七号，他会跑，攻击。<br>　　<code>面向过程</code>的思维就是先定义一个结构体，里面有英雄的静态信息，比如名字、性别等等。“跑”、“攻击”这些动作让它发生，很简单啊，写一个run()和attack()的函数就好了。这时优秀的思维活跃的大佬们想，这个动作是鲁班本身就能发出的啊，不是我外界赋予的，这不够科学。<br>　　于是<code>面向对象</code>诞生了。<br>　　干脆写一个名为“LubanSeven”的类，把run()和attack()放入类里。<br>　　此时对面迎来的敌人是扁鹊。<br>　　他也会跑，攻击。于是还有一个名为“BianQue”的类，同样地，有run()和attack()两个方法。</p>
<p>　　但是，这似乎很浪费代码。除了名字不同，他们的方法一样啊。<br>　　优秀的思维活跃的大佬们说，要改。这样吧，鲁班七号是英雄，扁鹊也是英雄。干脆写个英雄的基类吧。鲁班七号类和扁鹊类继承它不就好了嘛!<br>　　于是有了英雄类，类里有两个方法run()和attack()。</p>
<p>　　英雄总归是要推塔的。于是还有一个防御塔类，防御塔也不是省油的灯，你靠近它它也会攻击的。所以里面也有个attack()方法。</p>
<p>　　同是攻击，但英雄不会承认自己的攻击和防御塔的攻击是一回事。<br>　　可是无聊的看客说，管它是什么，反正就是攻击就完事了，对方会掉血。<br>　　那……这个攻击能不能放一块说？英雄表示拒绝（我又不是个塔），防御塔也闪光表示不服（<del>我…又不是个人？</del>）。<br>　　这时优秀的思维活跃的大佬们又说话了。<br>　　得了得了，我给你们写个接口吧。这个接口就叫做攻击，你们都可以用。<br>　　甚至，水晶都可以用。</p>
<p>　　这样一来，好像是更抽象了有没有？<br>　　把不同类别的事物的相同特性摘出来，就是<code>接口</code>。使用者可以忽略细节。就像人会吃，猪也会吃。干脆接口就叫吃，下次有个猫来了，也可以调用。</p>
<p>　　例子讲完。</p>
<h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>　　C++貌似是没有接口这个狭义的语法概念的，但是我们依然可以写出类似于java里的interface这样的设计概念（使用纯虚函数）。</p>
<p>　　<code>面向过程编程(Procedure Oriented Programming, POP)</code>对应的是<code>面向对象编程(Object Oriented Programming, OOP)</code>，<code>面向接口编程(Interface Oriented Programming, IOP)</code>对应的是<code>面向实现编程(Realize Oriented Programming, ROP)</code>。<br>　　<code>面向过程编程</code>把世界分为数据结构和函数，追求过程一步步实现，<code>面向对象编程</code>把世界分为对象和方法。<br>　　<code>面向实现编程</code>和<code>面向接口编程</code>都是基于面向对象编程来谈的。<br>　　<code>面向实现编程</code>就是在自身类中实例化该类，直接调用相应方法。耦合度高。<br>　　<code>面向接口编程</code>主要是为了将定义和实现分开，提高了代码的解耦度，复用性强，便于扩展，能够更好的维护。<br>　　所有的思想本质都是模拟现实。</p>
<p>　　之前分不清<code>抽象类</code>和<code>接口</code>的区别，但现在觉得抽象类是广义的用法，而其中针对某些特定功能实现的抽象类就可以称之为接口，或者说接口更侧重于定义规则。比如高考学生类、考研学生类它们的抽象类是学生类，而其中一个接口是“考试”。</p>
<h1 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h1><p><a href="https://www.cnblogs.com/moveofgod/archive/2013/05/08/3066325.html" target="_blank" rel="noopener">https://www.cnblogs.com/moveofgod/archive/2013/05/08/3066325.html</a><br><a href="https://blog.csdn.net/u013400743/article/details/51252003" target="_blank" rel="noopener">https://blog.csdn.net/u013400743/article/details/51252003</a><br><a href="https://blog.csdn.net/qq_35923749/article/details/78422977" target="_blank" rel="noopener">https://blog.csdn.net/qq_35923749/article/details/78422977</a></p>
]]></content>
      
        <categories>
            
            <category> 互联网 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Java </tag>
            
            <tag> CPP </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[计算机图形学实验]]></title>
      <url>https://hubojing.github.io/2019/05/12/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6%E5%AE%9E%E9%AA%8C/</url>
      <content type="html"><![CDATA[<div align="left"><br><img src="https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1557677072935&di=16e57f4481b390fc87b48f03d54f1fdf&imgtype=0&src=http%3A%2F%2Fs1.51cto.com%2Fimages%2F201612%2F1359d3a151a8f27b15a727f0ecfc4482141874.png" width="300" height="180" style="float:right;"><br><br><br>　　<strong>计算机图形学实验笔记</strong><br>　　<strong>计算机视觉学累了就看看计算机图形学…反向消化…</strong><br>　　<strong>理论看累了就敲敲代码</strong><br>　　<strong>说不弃坑，就不弃坑|( ´・∧・｀)</strong><br><br> </div>

<a id="more"></a>
<h1 id="实验：搭建OpenGL环境"><a href="#实验：搭建OpenGL环境" class="headerlink" title="实验：搭建OpenGL环境"></a>实验：搭建OpenGL环境</h1><p>　　OpenGL版本：3.3</p>
<h2 id="GLFW"><a href="#GLFW" class="headerlink" title="GLFW"></a>GLFW</h2><p>　　GLFW是一个OpenGL的C语言库，是对之前固定管线常用的GLUT的一种改进。<br>　　<a href="https://www.glfw.org/download.html" target="_blank" rel="noopener">官网</a>下载源代码包（推荐），或者下载32位的预编译的二进制版本。</p>
<h3 id="编译glfw3-lib"><a href="#编译glfw3-lib" class="headerlink" title="编译glfw3.lib"></a>编译glfw3.lib</h3><p>　　我下载的最新3.3版，下载后解压。并新建一个build文件夹。<br>　　下载<a href="https://cmake.org/download/" target="_blank" rel="noopener">CMake</a>，安装Win32版本。</p>
<p>　　找到bin文件夹下cmake-gui.exe，<br>　　填入源代码路径和build文件夹路径：<br>　　Where is the source code: E:/glfw-3.3<br>　　Where to build the binaries: E:/glfw-3.3/build</p>
<p>　　点击Configure按钮，选择合适的生成器（我选择的是VS2015)。点Finish。<br>　　再次点击Configure按钮保存设置。<br>　　点击Generate按钮，生成工程文件。</p>
<p>　　在build文件夹打开GLFW.sln文件，并且生成解决方案。<br>　　在E:\glfw-3.3\build\src\Debug中所需要的glfw3.lib就有了。</p>
<h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><p>　　方便起见，我专门建立了一个文件夹OpenGLFiles用来存放相关的头文件和库文件。<br>　　在文件夹下新建include文件夹和lib文件夹。</p>
<p>　　将glfw-3.3\include下的文件复制到新建的include文件夹中，将glfw3.lib复制到新建的lib文件夹中。</p>
<p>　　新建项目所需工程文件，创建空项目。<br>　　打开工程属性页，选择VC++目录-包含目录中加上：<br>　　E:\OpenGLFiles\include<br>　　库目录加上：<br>　　E:\OpenGLFiles\lib</p>
<p>　　链接器-输入，附加依赖项加上：<br>　　glfw3.lib</p>
<h2 id="GLAD"><a href="#GLAD" class="headerlink" title="GLAD"></a>GLAD</h2><p>　　开发者需要在OpenGL运行时获取函数地址并保存在一个函数指针中，取地址方法因平台而异，而GLAD库能简化该过程。</p>
<p>　　通过<a href="https://glad.dav1d.de/" target="_blank" rel="noopener">GLAD在线服务</a>，language选择C/C++,gl选择3.3，Profile选择Core，Options选中Generate a loader。<br>　　点击Generate，下载压缩包。解压后，将include文件夹下的文件复制到我新建的include文件夹里，并且将src下的glad.c添加到工程中。</p>
<p>　　环境搭好了！</p>
<hr>
<h1 id="实验：绘制一个窗口"><a href="#实验：绘制一个窗口" class="headerlink" title="实验：绘制一个窗口"></a>实验：绘制一个窗口</h1><h2 id="包含头文件"><a href="#包含头文件" class="headerlink" title="包含头文件"></a>包含头文件</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;glad/glad.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;GLFW/glfw3.h&gt;</span></span></span><br></pre></td></tr></table></figure>
<h2 id="初始化GLFW"><a href="#初始化GLFW" class="headerlink" title="初始化GLFW"></a>初始化GLFW</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">glfwInit();                                                     <span class="comment">// 初始化GLFW</span></span><br><span class="line">glfwWindowHint(GLFW_CONTEXT_VERSION_MAJOR, <span class="number">3</span>);                  <span class="comment">// OpenGL版本为3.3，主次版本号均设为3</span></span><br><span class="line">glfwWindowHint(GLFW_CONTEXT_VERSION_MINOR, <span class="number">3</span>);</span><br><span class="line">glfwWindowHint(GLFW_OPENGL_PROFILE, GLFW_OPENGL_CORE_PROFILE);  <span class="comment">// 使用核心模式(无需向后兼容性)</span></span><br><span class="line">glfwWindowHint(GLFW_OPENGL_FORWARD_COMPAT, GL_TRUE);            <span class="comment">// 如果使用的是Mac OS X系统，需加上这行</span></span><br><span class="line">glfwWindowHint(GLFW_RESIZABLE, <span class="literal">false</span>);						    <span class="comment">// 不可改变窗口大小</span></span><br></pre></td></tr></table></figure>
<h2 id="查看GLFW版本"><a href="#查看GLFW版本" class="headerlink" title="查看GLFW版本"></a>查看GLFW版本</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> Major, Minor, Rev;</span><br><span class="line">glfwGetVersion(&amp;Major, &amp;Minor, &amp;Rev);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"GLFW %d.%d.%d initialized\n"</span>, Major, Minor, Rev);</span><br></pre></td></tr></table></figure>
<h2 id="创建窗口"><a href="#创建窗口" class="headerlink" title="创建窗口"></a>创建窗口</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">GLFWwindow* window = glfwCreateWindow(screen_width, screen_height, <span class="string">"HelloWorld"</span>, <span class="literal">nullptr</span>, <span class="literal">nullptr</span>);</span><br><span class="line">   <span class="keyword">if</span> (window == <span class="literal">nullptr</span>) </span><br><span class="line">&#123;	<span class="comment">// 如果窗口创建失败</span></span><br><span class="line">       <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">"Failed to Create OpenGL Context"</span> &lt;&lt; <span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line">       glfwTerminate();</span><br><span class="line">       <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">   &#125;</span><br><span class="line">   glfwMakeContextCurrent(window); <span class="comment">// 将窗口的上下文设置为当前线程的主上下文</span></span><br></pre></td></tr></table></figure>
<h2 id="初始化GLAD"><a href="#初始化GLAD" class="headerlink" title="初始化GLAD"></a>初始化GLAD</h2><p>加载OpenGL函数指针地址的函数<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (!gladLoadGLLoader((GLADloadproc)glfwGetProcAddress))</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">"Failed to initialize GLAD"</span> &lt;&lt; <span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h2 id="指定视口"><a href="#指定视口" class="headerlink" title="指定视口"></a>指定视口</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">glViewport(<span class="number">0</span>, <span class="number">0</span>, screen_width, screen_height);</span><br></pre></td></tr></table></figure>
<p>glViewport函数前两个参数控制窗口左下角的位置，第三、第四个参数<br>控制渲染窗口的宽度和高度（像素）。<br>实际上也可以将视口的维度设置为比GLFW的维度小，这样所<br>有的OpenGL渲染将会在一个更小的窗口中显示，这样我们可以将一<br>些其它元素显示在OpenGL视口之外。 </p>
<h2 id="渲染"><a href="#渲染" class="headerlink" title="渲染"></a>渲染</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span> (!glfwWindowShouldClose(window)) </span><br><span class="line">&#123;	</span><br><span class="line">    glfwSwapBuffers(window);<span class="comment">// 交换缓冲</span></span><br><span class="line">    glfwPollEvents();<span class="comment">//检查是否有触发事件(比如键盘输入、鼠标移动等）</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>双缓冲：<br>单缓冲使图像闪烁（图像是从左到右，从上到下逐像素绘制），不够真实。使用双缓冲规避该问题，前缓冲保存着最终输出的图像，显示在屏幕上。所有渲染指令在后缓冲上绘制，指令执行完毕后交换(swap)前缓冲和后缓冲，图像会立即呈现。</p>
<p>渲染结束，释放资源：<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">glfwTerminate();</span><br></pre></td></tr></table></figure></p>
<p>运行，此时会看到一个黑色的窗口。</p>
<h2 id="修改窗口颜色"><a href="#修改窗口颜色" class="headerlink" title="修改窗口颜色"></a>修改窗口颜色</h2><p>在渲染循环中加入：<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">glClearColor(<span class="number">0.0f</span>, <span class="number">0.34f</span>, <span class="number">0.57f</span>, <span class="number">1.0f</span>);</span><br><span class="line">glClear(GL_COLOR_BUFFER_BIT);</span><br></pre></td></tr></table></figure></p>
<p>当调用 glClear函数，清除颜色缓冲之后，整个颜色缓冲都会被填充为<br>glClearColor里所设置的颜色。</p>
<h2 id="运行效果"><a href="#运行效果" class="headerlink" title="运行效果"></a>运行效果</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GLFW 3.3.0 initialized</span><br></pre></td></tr></table></figure>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="https://github.com/hubojing/BlogImages/blob/master/计算机图形学实验——绘制窗口.png?raw=true" alt="绘制窗口" title="">
                </div>
                <div class="image-caption">绘制窗口</div>
            </figure>
<h2 id="完整代码"><a href="#完整代码" class="headerlink" title="完整代码"></a>完整代码</h2><p><a href="https://github.com/hubojing/ComputerGraphics/blob/master/CreateWindow.cpp" target="_blank" rel="noopener">https://github.com/hubojing/ComputerGraphics/blob/master/CreateWindow.cpp</a></p>
<p>总结：</p>
<ul>
<li>初始化：GLFW窗口，GLAD。</li>
<li>渲染：清空缓冲，交换缓冲区检查触发事件后释放资源。</li>
</ul>
<hr>
<h1 id="实验：绘制三角形"><a href="#实验：绘制三角形" class="headerlink" title="实验：绘制三角形"></a>实验：绘制三角形</h1><h2 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//初始化GLFW</span></span><br><span class="line">glfwInit();</span><br><span class="line">glfwWindowHint(GLFW_CONTEXT_VERSION_MAJOR, <span class="number">3</span>);</span><br><span class="line">glfwWindowHint(GLFW_CONTEXT_VERSION_MINOR, <span class="number">3</span>);</span><br><span class="line">glfwWindowHint(GLFW_OPENGL_PROFILE, GLFW_OPENGL_CORE_PROFILE);</span><br><span class="line">glfwWindowHint(GLFW_RESIZABLE, FALSE);</span><br><span class="line"></span><br><span class="line"><span class="comment">//创建窗口</span></span><br><span class="line"><span class="keyword">auto</span> window = glfwCreateWindow(screen_width, screen_height, <span class="string">"Triangle"</span>,</span><br><span class="line">	<span class="literal">nullptr</span>, <span class="literal">nullptr</span>);</span><br><span class="line"><span class="keyword">if</span> (window == <span class="literal">nullptr</span>)</span><br><span class="line">&#123;</span><br><span class="line">	<span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">"Failed to Create OpenGL Context"</span> &lt;&lt; <span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line">	glfwTerminate();</span><br><span class="line">	<span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line">glfwMakeContextCurrent(window);</span><br><span class="line"></span><br><span class="line"><span class="comment">//初始化GLAD</span></span><br><span class="line"><span class="keyword">if</span> (!gladLoadGLLoader((GLADloadproc)glfwGetProcAddress))</span><br><span class="line">&#123;</span><br><span class="line">	<span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">"Failed to initialize GLAD"</span> &lt;&lt; <span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//指定当前视口尺寸 </span></span><br><span class="line">glViewport(<span class="number">0</span>, <span class="number">0</span>, screen_width, screen_height);</span><br></pre></td></tr></table></figure>
<h2 id="顶点输入"><a href="#顶点输入" class="headerlink" title="顶点输入"></a>顶点输入</h2><p>　　三角形顶点数据是标准化的设备坐标，即x,y,z轴坐标映射到[-1,1]之间。<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">float</span> triangle[]=</span><br><span class="line">&#123;</span><br><span class="line">	<span class="number">-0.5f</span>,<span class="number">-0.5f</span>,<span class="number">0.0f</span>;<span class="comment">//左下</span></span><br><span class="line">	<span class="number">0.5f</span>, <span class="number">-0.5f</span>, <span class="number">0.0f</span>;<span class="comment">//右下</span></span><br><span class="line">	<span class="number">0.0f</span>, <span class="number">0.5f</span>, <span class="number">0.0f</span>;<span class="comment">//正上</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></p>
<h2 id="数据处理"><a href="#数据处理" class="headerlink" title="数据处理"></a>数据处理</h2><h3 id="VBO"><a href="#VBO" class="headerlink" title="VBO"></a>VBO</h3><p>　　将顶点数据发送到GPU处理。生成一个顶点缓冲对象VBO，将其绑定到顶点缓冲对象上。<br>　　作用：不用将顶点数据逐个发送至显卡，可借助VBO一次性发送过去。<br>　　再使用glBufferData将顶点数据绑定到当前默认的缓冲上。<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//生成并绑定VBO</span></span><br><span class="line">GLuint vertex_buffer_object;</span><br><span class="line">glGenBuffers(<span class="number">1</span>, &amp;vertex_buffer_object);</span><br><span class="line">glBindBuffer(GL_ARRAY_BUFFER, vertex_buffer_object);</span><br><span class="line"><span class="comment">//将顶点数据绑定到当前默认的缓冲中</span></span><br><span class="line">glBufferData(GL_ARRAY_BUFFER, <span class="keyword">sizeof</span>(triangle), triangle, GL_STATIC_DRAW);</span><br></pre></td></tr></table></figure></p>
<h3 id="VAO"><a href="#VAO" class="headerlink" title="VAO"></a>VAO</h3><p>　　作用：核心模式需要使用VAO，渲染时只需调用一次VAO即可，之前的数据对应存储在VAO中，不用再调用VBO。<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">GLuint vertex_array_object;</span><br><span class="line">glGenVertexArrays(<span class="number">1</span>, &amp;vertex_array_object);</span><br><span class="line">glBindVertexArray(vertex_array_object);</span><br></pre></td></tr></table></figure></p>
<h3 id="顶点属性"><a href="#顶点属性" class="headerlink" title="顶点属性"></a>顶点属性</h3><p>　　告诉OpenGL如何解释顶点数据。<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//设置顶点属性指针</span></span><br><span class="line">glVertexAttribPointer(<span class="number">0</span>, <span class="number">3</span>, GL_FLOAT, GL_FALSE, <span class="number">3</span> * <span class="keyword">sizeof</span>(<span class="keyword">float</span>), (<span class="keyword">void</span>*)<span class="number">0</span>);</span><br><span class="line">glEnableVertexAttribArray(<span class="number">0</span>);</span><br></pre></td></tr></table></figure></p>
<p>　　glVertexAttribPointer函数参数含义：<br>　　1-顶点着色器位置值<br>　　2-顶点属性是一个三分量的向量<br>　　3-顶点类型<br>　　4-数据是否被标准化（映射到0-1之间）<br>　　5-步长（这里表示下组数据在3个float之后）<br>　　6-数据偏移量（此处位置属性在数组开头，因此为0）</p>
<p>　　glEnableVertexAttribArray表示开启0这个通道，默认状态是关闭的。</p>
<p>　　此时需要解绑VAO和VBO。<br>　　原因：<br>　　1. 防止继续绑定VAO时影响当前VAO。<br>　　2. 使代码更具灵活性，在渲染需要时会再次绑定VAO。<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">glBindVertexArray(<span class="number">0</span>);</span><br><span class="line">glBindBuffer(GL_ARRAY_BUFFER, <span class="number">0</span>);</span><br></pre></td></tr></table></figure></p>
<h2 id="顶点着色器和片段着色器"><a href="#顶点着色器和片段着色器" class="headerlink" title="顶点着色器和片段着色器"></a>顶点着色器和片段着色器</h2><h3 id="顶点着色器"><a href="#顶点着色器" class="headerlink" title="顶点着色器"></a>顶点着色器</h3><p>　　GLSL语言，类似C语言。<br>　　源码：<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">char</span> *vertex_shader_source =</span><br><span class="line">	<span class="string">"#version 330 core\n"</span></span><br><span class="line">	<span class="string">"layout (location = 0) in vec3 aPos;\n"</span></span><br><span class="line">	<span class="string">"void main()\n"</span></span><br><span class="line">	<span class="string">"&#123;\n"</span></span><br><span class="line">	<span class="string">"	gl_Position = vec4(aPos, 1.0);\n"</span></span><br><span class="line">	<span class="string">"&#125;\n\0"</span>;</span><br></pre></td></tr></table></figure></p>
<p>　　第一行：使用OpenGL3.3核心模式<br>　　第二行：上面提到的位置值 in表示输入变量<br>　　main函数中将顶点数据直接输出到GLSL定义好的内建变量gl_Position中，这是顶点着色器的输出。<br>　　（即在顶点着色器这儿上面都没做，只是将顶点位置作为顶点着色器的输出。）</p>
<h3 id="片段着色器"><a href="#片段着色器" class="headerlink" title="片段着色器"></a>片段着色器</h3><p>　　源码：<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">char</span> *fragment_shader_source =</span><br><span class="line">	<span class="string">"#version 330 core\n"</span></span><br><span class="line">	<span class="string">"out vec4 FragColor;\n"</span></span><br><span class="line">	<span class="string">"void main()\n"</span></span><br><span class="line">	<span class="string">"&#123;\n"</span></span><br><span class="line">	<span class="string">"	FragColor = vec4(1.0f, 0.5f, 0.2f, 1.0f);\n"</span></span><br><span class="line">	<span class="string">"&#125;\n\0"</span>;</span><br></pre></td></tr></table></figure></p>
<p>　　前两行类似上面，out表示输出变量。四分量是RGBA。</p>
<h3 id="生成和编译"><a href="#生成和编译" class="headerlink" title="生成和编译"></a>生成和编译</h3><p>　　目的是为了得到着色器程序，所以首先生成和编译着色器，再链接到着色器程序中。<br>　　生成并编译顶点着色器<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> vertex_shader = glCreateShader(GL_VERTEX_SHADER);</span><br><span class="line">glShaderSource(vertex_shader, <span class="number">1</span>, &amp;vertex_shader_source, <span class="literal">NULL</span>);</span><br><span class="line">glCompileShader(vertex_shader);</span><br><span class="line"><span class="keyword">int</span> success;</span><br><span class="line"><span class="keyword">char</span> info_log[<span class="number">512</span>];</span><br><span class="line"><span class="comment">//是否成功编译</span></span><br><span class="line">glGetShaderiv(vertex_shader, GL_COMPILE_STATUS, &amp;success);</span><br><span class="line"><span class="keyword">if</span> (!success)</span><br><span class="line">&#123;</span><br><span class="line">	glGetShaderInfoLog(vertex_shader, <span class="number">512</span>, <span class="literal">NULL</span>, info_log);</span><br><span class="line">	<span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">"ERROR::SHADER::VERTEX::COMPILATION_FAILED\n"</span> &lt;&lt; info_log &lt;&lt; <span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>　　生成并编译片段着色器<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> fragment_shader = glCreateShader(GL_FRAGMENT_SHADER);</span><br><span class="line">glShaderSource(fragment_shader, <span class="number">1</span>, &amp;fragment_shader_source, <span class="literal">NULL</span>);</span><br><span class="line">glCompileShader(fragment_shader);</span><br><span class="line"><span class="comment">//是否成功编译</span></span><br><span class="line">glGetShaderiv(fragment_shader, GL_COMPILE_STATUS, &amp;success);</span><br><span class="line"><span class="keyword">if</span> (!success)</span><br><span class="line">&#123;</span><br><span class="line">	glGetShaderInfoLog(fragment_shader, <span class="number">512</span>, <span class="literal">NULL</span>, info_log);</span><br><span class="line">	<span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">"ERROR::SHADER::FRAGMENT::COMPILATION_FAILED\n"</span> &lt;&lt; info_log &lt;&lt; <span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>　　链接顶点和片段着色器至一个着色器程序，并删除着色器<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> shader_program = glCreateProgram();</span><br><span class="line">glAttachShader(shader_program, vertex_shader);</span><br><span class="line">glAttachShader(shader_program, fragment_shader);</span><br><span class="line">glLinkProgram(shader_program);</span><br><span class="line"><span class="comment">//是否成功链接</span></span><br><span class="line">glGetProgramiv(shader_program, GL_LINK_STATUS, &amp;success);</span><br><span class="line"><span class="keyword">if</span> (!success)</span><br><span class="line">&#123;</span><br><span class="line">	glGetProgramInfoLog(shader_program, <span class="number">512</span>, <span class="literal">NULL</span>, info_log);</span><br><span class="line">	<span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">"ERROR::SHADER::PROGRAM::LINKING_FAILED\n"</span> &lt;&lt; info_log &lt;&lt; <span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//删除着色器</span></span><br><span class="line">glDeleteShader(vertex_shader);</span><br><span class="line">glDeleteShader(fragment_shader);</span><br></pre></td></tr></table></figure></p>
<h2 id="渲染-1"><a href="#渲染-1" class="headerlink" title="渲染"></a>渲染</h2><p>　　渲染时只需使用链接好的着色器程序就行，不再需要使用顶点和片段着色器。<br>　　窗口未关闭就一直进行渲染。<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span> (!glfwWindowShouldClose(window))</span><br><span class="line">&#123;</span><br><span class="line">	<span class="comment">//渲染操作</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>　　这里使用蓝色背景色清空屏幕颜色缓冲。<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">glClearColor(<span class="number">0.0f</span>, <span class="number">0.34f</span>, <span class="number">0.57f</span>, <span class="number">1.0f</span>);</span><br><span class="line">glClear(GL_COLOR_BUFFER_BIT);</span><br></pre></td></tr></table></figure></p>
<p>　　接下来使用链接好的着色器和VAO来绘制三角形。<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//使用着色器程序</span></span><br><span class="line">glUseProgram(shader_program);</span><br><span class="line"><span class="comment">//绘制三角形</span></span><br><span class="line">glBindVertexArray(vertex_array_object);</span><br><span class="line">glDrawArrays(GL_TRIANGLES, <span class="number">0</span>, <span class="number">3</span>);</span><br><span class="line">glBindVertexArray(<span class="number">0</span>);</span><br></pre></td></tr></table></figure></p>
<p>　　其实绘制本身只是一个glDrawArrays函数，参数1表示三角形，参数2表示顶点数组起始索引值，参数3表示要绘制的顶点数量。　　绘制结束后解除绑定。<br>　　双缓冲技术：<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//交换缓冲</span></span><br><span class="line">glfwSwapBuffers(window);</span><br><span class="line"><span class="comment">//检查是否有触发事件（键盘输入、鼠标移动等）</span></span><br><span class="line">glfwPollEvents();</span><br></pre></td></tr></table></figure></p>
<h2 id="善后工作"><a href="#善后工作" class="headerlink" title="善后工作"></a>善后工作</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//删除VAO和VBO</span></span><br><span class="line">glDeleteVertexArrays(<span class="number">1</span>, &amp;vertex_array_object);</span><br><span class="line">glDeleteBuffers(<span class="number">1</span>, &amp;vertex_buffer_object);</span><br><span class="line"></span><br><span class="line"><span class="comment">//退出</span></span><br><span class="line">glfwTerminate();</span><br></pre></td></tr></table></figure>
<h2 id="实验效果"><a href="#实验效果" class="headerlink" title="实验效果"></a>实验效果</h2><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="https://github.com/hubojing/BlogImages/blob/master/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6%E5%AE%9E%E9%AA%8C%E2%80%94%E2%80%94%E7%BB%98%E5%88%B6%E4%B8%89%E8%A7%92%E5%BD%A2.png?raw=true" alt="三角形" title="">
                </div>
                <div class="image-caption">三角形</div>
            </figure>
<h2 id="完整代码-1"><a href="#完整代码-1" class="headerlink" title="完整代码"></a>完整代码</h2><p><a href="https://github.com/hubojing/ComputerGraphics/blob/master/Triangle" target="_blank" rel="noopener">https://github.com/hubojing/ComputerGraphics/blob/master/Triangle</a></p>
<p>总结：</p>
<ul>
<li>初始化。</li>
<li>数据处理：给定顶点数据，生成并绑定VAO和VBO，准备在GPU处理，设置顶点属性指针（告诉OpenGL怎么处理数据）。</li>
<li>着色器：生成并编译顶点和片段着色器，链接为着色器程序。</li>
<li>渲染绘制三角形。</li>
</ul>
<hr>
<p><strong>下一个实验准备中…</strong></p>
]]></content>
      
        <categories>
            
            <category> 互联网 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 计算机图形学 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[记一回失败的渲染操作]]></title>
      <url>https://hubojing.github.io/2019/04/20/%E8%AE%B0%E4%B8%80%E6%AC%A1%E5%A4%B1%E8%B4%A5%E7%9A%84%E6%B8%B2%E6%9F%93%E6%93%8D%E4%BD%9C/</url>
      <content type="html"><![CDATA[<div align="left"><br><img src="https://ss1.bdstatic.com/70cFvXSh_Q1YnxGkpoWK1HF6hhy/it/u=3165543944,3291609435&fm=26&gp=0.jpg" width="300" height="180" style="float:right;"><br><br><br>　　<strong>离烧CPU就差这一篇文章</strong><br><br><br> </div>

<a id="more"></a>
<p>　　时间：今晚<br>　　地点：诡异的电脑<br>　　起因：剪辑视频<br>　　结果：写这篇文章</p>
<p>　　T_T</p>
<p>　　配置：CPU 锐龙5 1600X</p>
<p>　　作为一枚初级音视频剪辑玩家，音频处理得多，而上次认真剪视频是一两年前（或者三年？时间过得有点快啊……）的事情了吧…….我几乎忘记了渲染操作，把渲染想得和导出一样简单ε=(´ο｀*)))唉</p>
<p>　　视频时长只有1分钟！为了严谨行文，我又打开了Vegas确认一下（是00:01:06)。</p>
<p>　　第一次渲染操作：输出格式：Internet HD 1080P,渲染到一半，电脑关机了？？？<br>　　我的内心：<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="https://github.com/hubojing/BlogImages/blob/master/记一回失败的渲染操作——问号表情包.jpg?raw=true" alt="???" title="">
                </div>
                <div class="image-caption">???</div>
            </figure><br>　　目光下移，我腿踢机箱了？</p>
<p>　　开机，再整一次。又黑了。<br>　　我：？？？？？？锐龙1600x怎么这么经不起折腾，之前用y400（i5 3230M）渲染十分钟的视频都毫无问题呢~</p>
<p>　　再开机。看一眼CPU温度，55°。隐隐感觉热啊…</p>
<p>　　再来一次，这次降低要求，720P，720P也可以。把温度监控就放在一边，然后就静静地看着温度往上爬……</p>
<p>　　后来换输出格式又测试了几次，几乎都是八十多度，最高直逼90度。那还是关机吧，烧了我的CPU我心疼。就算CPU没烧，烧了主板我也心疼。</p>
<p>　　看着我只有一分钟的视频，我默默关掉了Vegas，转身打开了年迈的笔记本。</p>
<p>　　P.S. Vegas12用GPU加速感觉效果..没有效果（不过只尝试了一次）</p>
<p>　　虽说渲染是会升温吧，可是CPU占有率只有37%，这显然已经没有很好地发挥CPU性能了，温度还如此高，散热出了问题吧。</p>
<p>　　但我已经不记得装的什么散热器了。只有打开京东查记录—&gt;</p>
<p>　　安钛克(Antec)战虎A40战斗版 CPU散热器 送导热硅脂硅胶(纯铜4热管/9cm风扇/LED蓝光风扇/电脑主机箱显卡风冷<br>　　<a href="https://item.jd.com/695774.html" target="_blank" rel="noopener">https://item.jd.com/695774.html</a></p>
<p>　　当时看来是没单独买散热器，直接用的买CPU送的散热器，作为一名初级装机玩家留下了悔不当初的眼泪。</p>
<p>　　<del>这么凉爽的天气</del>还算不够热的天气，我才发现什么都不干的情况下CPU就有47°，早知道就不卸载鲁大师了。</p>
<p>　　一个一分钟的视频让我又要开箱了……</p>
<p>　　还水了一篇文章。</p>
<p>　　那..看官推荐一个渲染时CPU不会超过80°（70°以下就更好了）的散热器？另外CPU占比提不起来要改善啊…</p>
]]></content>
      
        <categories>
            
            <category> 通信工程 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 硬件 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[小概念杂记]]></title>
      <url>https://hubojing.github.io/2019/02/25/%E8%AE%BA%E6%96%87%E6%9D%82%E8%AE%B0/</url>
      <content type="html"><![CDATA[<div align="left"><br><img src="https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1555785194162&di=9fcd936a6e390cb5feb68dfc5b657441&imgtype=0&src=http%3A%2F%2Fb-ssl.duitang.com%2Fuploads%2Fitem%2F201705%2F07%2F20170507211114_Txv4P.jpeg" width="300" height="180" style="float:right;"><br><br><br>　　<strong>零碎记录（自用）。</strong><br><br><br> </div>

<a id="more"></a>
<p>分集增益（Diversity Gain）：分集技术是研究如何充分利用传输中的多径信号能量，以改善传输的可靠性，它也是一项研究利用信号的基本参量在时域、频域与空域中，如何分散开又如何收集起来的技术。</p>
<p>Zipf定律：Zipf定律可以表述为在自然语言的语料库里，一个单词出现的次数与它在频率表里的排名成反比。Zipf定律是美国学者G.K.齐普夫1935年提出的。</p>
<p>Zipf分布：用X~Zipf(alpha,n)表示随机变量X具有带参数alpha和n的Zipf分布。带有参数alpha和n的Zipf随机变量X是有概率质量函数在里面。</p>
<p>概率质量函数：<br>在概率论中，概率质量函数 (Probability Mass Function，PMF)是离散随机变量在各特定取值上的概率。概率质量函数和概率密度函数不同之处在于：概率密度函数是对连续随机变量定义的，本身不是概率，只有对连续随机变量的取值进行积分后才是概率。</p>
<p>上面公式的含义为在随机变量X的映射函数下，所有样本空间中的结果在此映射下输出结果为x的概率。</p>
<p>讲人话：<br>所谓的二八原则（20%的用户，会占有80%的访问量）即是Zipf应用。<br>比如，按照单词在语料库中出现的次数排序，该单词的排序数与其在语料库中出现频数成反比，或者说，二者乘积为一个常数。</p>
<p>其公式为：P(r) = C / r^α</p>
<p>这里 r 表示一个单词的出现频率的排名，P(r)表示排名为r的单词的出现频率。单词频率分布中 C约等于0.1, α约等于1。<br>这说明在英语单词中，只有极少部分的词被经常使用，而绝大部分词很少被使用。</p>
<p>SNR （信噪比SIGNAL-NOISE RATIO）</p>
<p>通信中断概率（Outage Probability）</p>
]]></content>
      
        <categories>
            
            <category> 通信工程 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[JingPic——github图床外链小工具]]></title>
      <url>https://hubojing.github.io/2019/01/27/JingPic%E2%80%94%E2%80%94github%E5%9B%BE%E5%BA%8A%E5%BF%AB%E9%80%9F%E5%A4%8D%E5%88%B6%E5%A4%96%E9%93%BE%E5%B7%A5%E5%85%B7/</url>
      <content type="html"><![CDATA[<div align="left"><br><img src="https://github.com/hubojing/BlogImages/blob/master/JingPic%E2%80%94%E2%80%94github%E5%9B%BE%E5%BA%8A%E5%A4%96%E9%93%BE%E5%B0%8F%E5%B7%A5%E5%85%B7%E2%80%94%E2%80%94%E6%95%B4%E4%BD%93%E7%95%8C%E9%9D%A2.png?raw=true" width="300" height="180" style="float:right;"><br><br><br>　　<strong>针对写markdown文章贴图过程繁琐的问题，写了一个小工具自用。（C++版）</strong><br><br><br> </div>

<a id="more"></a>
<h1 id="源起"><a href="#源起" class="headerlink" title="源起"></a>源起</h1><p>Markdown写作者都会对贴图的问题进行一番探索。好在现在有很多优秀的图床上传工具（比如PicGo）。<br>那为什么还会自己写一个工具呢？<br>主要是目前的工具不能完全满足我的需求，比如图片上传后，备注需注明是哪篇文章，方便整理。</p>
<p>这个工具是这两天利用闲散时间做成的，未来还会根据自我需要进行更新完善。</p>
<p><del>一开始是打算用python写的</del></p>
<h1 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h1><p>平台：VS2015<br>图床：github<br>开发前理清思路，罗列出需求是必要的。<br>于是我大概列了几点：</p>
<ol>
<li>有UI界面，不要在控制台操作</li>
<li>采用直接拖入图片到窗口的形式，不要采用选择文件的形式（<del>懒</del>）</li>
<li>自动推送到github对应项目，形成外链</li>
<li>拖入图片时要求输入文章标题即符合备注格式</li>
<li>该文章标题以备注形式出现在github对应项</li>
<li>url链接地址可以一键复制</li>
<li>给小工具起一个名字</li>
</ol>
<p>原有上传图片的备注格式<br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="https://github.com/hubojing/BlogImages/blob/master/JingPic%E2%80%94%E2%80%94github%E5%9B%BE%E5%BA%8A%E5%A4%96%E9%93%BE%E5%B0%8F%E5%B7%A5%E5%85%B7%E2%80%94%E2%80%94%E5%A4%87%E6%B3%A8%E6%A0%BC%E5%BC%8F.png?raw=true" alt="备注格式" title="">
                </div>
                <div class="image-caption">备注格式</div>
            </figure></p>
<p>事实证明最后一条最难</p>
<h1 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h1><p>把github图床项目下载到本地。</p>
<h1 id="设计"><a href="#设计" class="headerlink" title="设计"></a>设计</h1><p>最开始设计的是网页。后来考虑是网页的话，就要考虑用户独立性，比如设置账户登录，或者能证明是我本人的id什么的。（<del>麻烦，不够快准狠</del>）</p>
<p>整个问题大致分为三个。</p>
<ol>
<li>拖动<br>图片拖动到窗口，并复制到本地图床文件夹。</li>
<li>git推送<br>一开始打算直接调cmd完成，后来用bat脚本文件包装看起来清爽一点。</li>
<li>如何获取外链<br>最初是准备解析网页的。后来发现url有规律可循：<br>如 <a href="https://github.com/hubojing/test/blob/master/%E6%93%8D%E4%BD%9C%E7%AC%A6%E9%87%8D%E8%BD%BD%E4%B9%8B%E6%88%90%E5%91%98%E5%87%BD%E6%95%B0.png?raw=true" target="_blank" rel="noopener">https://github.com/hubojing/test/blob/master/%E6%93%8D%E4%BD%9C%E7%AC%A6%E9%87%8D%E8%BD%BD%E4%B9%8B%E6%88%90%E5%91%98%E5%87%BD%E6%95%B0.png?raw=true</a><br>每一张图都是<a href="https://github.com/hubojing/项目名/blob/master/" target="_blank" rel="noopener">https://github.com/hubojing/项目名/blob/master/</a> 开头 ?raw=true结尾。<br>这就省了解析网页这一步，直接拼url就好了。</li>
</ol>
<h1 id="界面"><a href="#界面" class="headerlink" title="界面"></a>界面</h1><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="https://github.com/hubojing/BlogImages/blob/master/JingPic%E2%80%94%E2%80%94github%E5%9B%BE%E5%BA%8A%E5%A4%96%E9%93%BE%E5%B0%8F%E5%B7%A5%E5%85%B7%E2%80%94%E2%80%94%E6%95%B4%E4%BD%93%E7%95%8C%E9%9D%A2.png?raw=true" alt="整体界面" title="">
                </div>
                <div class="image-caption">整体界面</div>
            </figure>
<h1 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h1><h2 id="拖动"><a href="#拖动" class="headerlink" title="拖动"></a>拖动</h2><p>JingPicDlg.h加上<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">afx_msg <span class="keyword">void</span> <span class="title">OnDropFiles</span><span class="params">(HDROP hDropInfo)</span></span>;</span><br></pre></td></tr></table></figure></p>
<p>JingPicDlg.cpp  <code>BEGIN_MESSAGE_MAP</code>加上<code>ON_WM_DROPFILES()</code></p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> CJingPicDlg::OnDropFiles(HDROP hDropInfo)</span><br><span class="line">&#123;</span><br><span class="line">	UINT Num;</span><br><span class="line">	TCHAR filePath[MAX_PATH];</span><br><span class="line">	Num = DragQueryFile(hDropInfo, <span class="number">0xFFFFFFFF</span>, <span class="literal">NULL</span>, <span class="number">0</span>);</span><br><span class="line">	<span class="keyword">if</span> (Num &gt; <span class="number">0</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">for</span> (UINT i = <span class="number">0</span>; i &lt; Num; i++)</span><br><span class="line">		&#123;</span><br><span class="line">			DragQueryFile(hDropInfo, i, filePath, <span class="keyword">sizeof</span>(filePath));</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	DragFinish(hDropInfo);</span><br><span class="line">    CDialog::OnDropFiles(hDropInfo);</span><br></pre></td></tr></table></figure>
<h2 id="复制到剪贴板"><a href="#复制到剪贴板" class="headerlink" title="复制到剪贴板"></a>复制到剪贴板</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">BOOL CJingPicDlg::CopyToClipboard(<span class="keyword">const</span> <span class="keyword">char</span>* pszData, <span class="keyword">const</span> <span class="keyword">int</span> nDataLen)</span><br><span class="line">&#123;</span><br><span class="line">		<span class="keyword">if</span> (::OpenClipboard(<span class="literal">NULL</span>))</span><br><span class="line">		&#123;</span><br><span class="line">			::EmptyClipboard();</span><br><span class="line">			HGLOBAL clipbuffer;</span><br><span class="line">			<span class="keyword">char</span> *buffer;</span><br><span class="line">			clipbuffer = ::GlobalAlloc(GMEM_DDESHARE, nDataLen + <span class="number">1</span>);</span><br><span class="line">			buffer = (<span class="keyword">char</span> *)::GlobalLock(clipbuffer);</span><br><span class="line">			<span class="built_in">strcpy</span>(buffer, pszData);</span><br><span class="line">			::GlobalUnlock(clipbuffer);</span><br><span class="line">			::SetClipboardData(CF_TEXT, clipbuffer);</span><br><span class="line">			::CloseClipboard();</span><br><span class="line">			<span class="keyword">return</span> TRUE;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span> FALSE;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="调用脚本"><a href="#调用脚本" class="headerlink" title="调用脚本"></a>调用脚本</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">char</span> s[MAX_PATH];</span><br><span class="line">sprintf_s(s, <span class="string">"%s %s"</span>, <span class="string">"E:\\AutoUpload.bat"</span>, strNotes);</span><br><span class="line">system(s);</span><br></pre></td></tr></table></figure>
<h2 id="脚本"><a href="#脚本" class="headerlink" title="脚本"></a>脚本</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">E:</span><br><span class="line"><span class="built_in">cd</span> E:\<span class="built_in">test</span> @rem 此处是本地图床地址</span><br><span class="line">git add .</span><br><span class="line">git commit -m %1%</span><br><span class="line">git push</span><br><span class="line"><span class="built_in">exit</span></span><br></pre></td></tr></table></figure>
<h2 id="url拼接"><a href="#url拼接" class="headerlink" title="url拼接"></a>url拼接</h2><p>本来这里应该有UrlEncode一步的，毕竟我所得到的url里有中文字，需要编码后才是真正所需的url。<br>比如我们现在拼接的地址是：<a href="https://github.com/hubojing/test/blob/master/动态分配所得的array.png?raw=true" target="_blank" rel="noopener">https://github.com/hubojing/test/blob/master/动态分配所得的array.png?raw=true</a><br>应得到：<a href="https://github.com/hubojing/test/blob/master/%E5%8A%A8%E6%80%81%E5%88%86%E9%85%8D%E6%89%80%E5%BE%97%E7%9A%84array.png?raw=true" target="_blank" rel="noopener">https://github.com/hubojing/test/blob/master/%E5%8A%A8%E6%80%81%E5%88%86%E9%85%8D%E6%89%80%E5%BE%97%E7%9A%84array.png?raw=true</a></p>
<p>然而我发现在浏览器里输入上面的网址，也能得到正确的图片，大概是github已经处理了该问题。<del>所以我就偷懒了</del></p>
<h1 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h1><ul>
<li>克隆项目到本地最好选择ssh方式下载，可以避免输入用户名密码。<br>第一次推送要用<code>git push -u origin master</code>，加了参数-u后，下次即可直接用<code>git push</code>代替<code>git push origin master</code>。</li>
</ul>
<h1 id="代码地址"><a href="#代码地址" class="headerlink" title="代码地址"></a>代码地址</h1><p><a href="https://github.com/hubojing/JingPic" target="_blank" rel="noopener">JingPic——github图床外链小工具</a></p>
<hr>
<p>再没有理由写文章不带图了o(一︿一+)o</p>
]]></content>
      
        <categories>
            
            <category> 互联网 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> C++ </tag>
            
            <tag> MFC </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[C++程序设计之兼谈对象模型]]></title>
      <url>https://hubojing.github.io/2019/01/22/C-%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E4%B9%8B%E5%85%BC%E8%B0%88%E5%AF%B9%E8%B1%A1%E6%A8%A1%E5%9E%8B/</url>
      <content type="html"><![CDATA[<div align="left"><br><img src="https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1550344961406&di=3458256e6924d9242a5313858733a0ec&imgtype=0&src=http%3A%2F%2Fimage.bubuko.com%2Finfo%2F201808%2F20180822232018940216.png" width="300" height="180" style="float:right;"><br><br><br>　　<strong>C++ Programming(part II), and Object Model.</strong><br>　　<strong>侯捷</strong><br>　　<strong>笔记</strong><br><br><br> </div>

<a id="more"></a>
<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><h2 id="应具备的基础"><a href="#应具备的基础" class="headerlink" title="应具备的基础"></a>应具备的基础</h2><ul>
<li>是上一篇博文“面向对象程序设计”的续集</li>
<li>本文将探讨上文未讨论的主题</li>
</ul>
<h2 id="目标"><a href="#目标" class="headerlink" title="目标"></a>目标</h2><ul>
<li>在先前培养正规、大器的编程素养上，继续探讨更多技术。</li>
<li>泛型编程(Generic Programming)和面向对象编程(Object-Oriented Programming)虽然分属不同思维，但它们正是C++的技术主线。本文也讨论template(模板)。</li>
<li>深入探索面向对象之继承关系(inheritance)所形成的对象模型(Object Model)，包括隐藏于底层的this指针，vptr指针（虚指针），vtbl(虚表)，virtual mechanism（虚机制），以及虚函数(virtual functions)造成的polymorphism（多态）效果。</li>
</ul>
<h2 id="将获得的代码"><a href="#将获得的代码" class="headerlink" title="将获得的代码"></a>将获得的代码</h2><p>Test-Cpp.cpp</p>
<h2 id="C-编译器"><a href="#C-编译器" class="headerlink" title="C++编译器"></a>C++编译器</h2><ul>
<li>编译(compile)</li>
<li>连接(link)</li>
</ul>
<h1 id="conversion-function-转换函数"><a href="#conversion-function-转换函数" class="headerlink" title="conversion function, 转换函数"></a>conversion function, 转换函数</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Fraction</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    Fraction(<span class="keyword">int</span> num, <span class="keyword">int</span> den=<span class="number">1</span>):m_numerator(num), m_denominator(den) &#123; &#125;</span><br><span class="line">    <span class="function"><span class="keyword">operator</span> <span class="title">double</span><span class="params">()</span> <span class="keyword">const</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> (<span class="keyword">double</span>)(m_numerator / m_denominator)</span><br><span class="line">    &#125;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    <span class="keyword">int</span> m_numerator;<span class="comment">//分子</span></span><br><span class="line">    <span class="keyword">int</span> m_denominator;<span class="comment">//分母</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<p>使用：<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">Fraction <span class="title">f</span><span class="params">(<span class="number">3</span>, <span class="number">5</span>)</span></span>;</span><br><span class="line"><span class="keyword">double</span> d = <span class="number">4</span> + f;<span class="comment">//调用operator double()将f转为0.6</span></span><br></pre></td></tr></table></figure></p>
<h1 id="non-explicit-one-argument-ctor"><a href="#non-explicit-one-argument-ctor" class="headerlink" title="non-explicit-one-argument ctor"></a>non-explicit-one-argument ctor</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Fraction</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    Fraction(<span class="keyword">int</span> num, <span class="keyword">int</span> den=<span class="number">1</span>):m_numerator(num), m_denominator(den) &#123; &#125;</span><br><span class="line"></span><br><span class="line">    Fraction <span class="keyword">operator</span>+(<span class="keyword">const</span> Fraction&amp; f)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> Fraction(......);</span><br><span class="line">    &#125;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    <span class="keyword">int</span> m_numerator;</span><br><span class="line">    <span class="keyword">int</span> m_denominator;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<p>使用：<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">Fraction <span class="title">f</span><span class="params">(<span class="number">3</span>, <span class="number">5</span>)</span></span>;</span><br><span class="line">Fraction d2 = f + <span class="number">4</span>;<span class="comment">//调用non-explicit ctor将4转为Fraction(4, 1)，然后调用operator+</span></span><br></pre></td></tr></table></figure></p>
<h2 id="conversion-function-vs-non-explicit-one-argument-ctor"><a href="#conversion-function-vs-non-explicit-one-argument-ctor" class="headerlink" title="conversion function vs. non-explicit-one-argument ctor"></a>conversion function vs. non-explicit-one-argument ctor</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Fraction</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    Fraction(<span class="keyword">int</span> num, <span class="keyword">int</span> den=<span class="number">1</span>):m_numerator(num), m_denominator(den) &#123; &#125;</span><br><span class="line">    <span class="function"><span class="keyword">operator</span> <span class="title">double</span><span class="params">()</span> <span class="keyword">const</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> (<span class="keyword">double</span>) (m_numerator / m_denominator);</span><br><span class="line">    &#125;</span><br><span class="line">    Fraction <span class="keyword">operator</span>+(<span class="keyword">const</span> Fraction&amp; f)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> Fraction(......);</span><br><span class="line">    &#125;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    <span class="keyword">int</span> m_numerator;</span><br><span class="line">    <span class="keyword">int</span> m_denominator;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<p>使用：<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">Fraction <span class="title">f</span><span class="params">(<span class="number">3</span>, <span class="number">5</span>)</span></span>;</span><br><span class="line">Fraction d2 = f + <span class="number">4</span>;<span class="comment">//[ERROR]ambiguous 二义</span></span><br></pre></td></tr></table></figure></p>
<h1 id="explicit-one-argument-ctor"><a href="#explicit-one-argument-ctor" class="headerlink" title="explicit-one-argument ctor"></a>explicit-one-argument ctor</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Fraction</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    explicit Fraction(int num, int den=1):m_numerator(num), m_denominator(den) &#123; &#125;</span><br><span class="line">    <span class="function"><span class="keyword">operator</span> <span class="title">double</span><span class="params">()</span> <span class="keyword">const</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> (<span class="keyword">double</span>) (m_numerator / m_denominator);</span><br><span class="line">    &#125;</span><br><span class="line">    Fraction <span class="keyword">operator</span>+(<span class="keyword">const</span> Fraction&amp; f)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> Fraction(......);</span><br><span class="line">    &#125;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    <span class="keyword">int</span> m_numerator;</span><br><span class="line">    <span class="keyword">int</span> m_denominator;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<p>使用：<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">Fraction <span class="title">f</span><span class="params">(<span class="number">3</span>, <span class="number">5</span>)</span></span>;</span><br><span class="line">Fraction d2 = f + <span class="number">4</span>;<span class="comment">//[ERROR]conersion from 'double' to 'Fraction' requested</span></span><br></pre></td></tr></table></figure></p>
<p>conversion function, 转换函数<br><strong>proxy</strong><br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">template</span>&lt;<span class="class"><span class="keyword">class</span> <span class="title">Alloc</span>&gt;</span></span><br><span class="line"><span class="class"><span class="title">class</span> <span class="title">vector</span>&lt;bool, Alloc&gt;</span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="keyword">typedef</span> __bit_reference reference;</span><br><span class="line"><span class="keyword">protected</span>:</span><br><span class="line">    reference <span class="keyword">operator</span>[] (size_type n)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> *(begin() + difference_type(n));</span><br><span class="line">    &#125;</span><br><span class="line">...</span><br></pre></td></tr></table></figure></p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> __<span class="title">bit_reference</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span>* p;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span> mask;</span><br><span class="line">    ...</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function"><span class="keyword">operator</span> <span class="title">bool</span><span class="params">()</span> <span class="keyword">const</span> </span>&#123;<span class="keyword">return</span> !(!(*p &amp; mask)); &#125;</span><br><span class="line">...</span><br></pre></td></tr></table></figure>
<h1 id="pointer-like-classes-关于智能指针"><a href="#pointer-like-classes-关于智能指针" class="headerlink" title="pointer-like classes, 关于智能指针"></a>pointer-like classes, 关于智能指针</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">template</span>&lt;<span class="class"><span class="keyword">class</span> <span class="title">T</span>&gt;</span></span><br><span class="line"><span class="class"><span class="title">class</span> <span class="title">shared_ptr</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    T&amp; <span class="keyword">operator</span>*() <span class="keyword">const</span></span><br><span class="line">    &#123;<span class="keyword">return</span> *px;&#125;</span><br><span class="line"></span><br><span class="line">    T* <span class="keyword">operator</span>-&gt;() <span class="keyword">const</span></span><br><span class="line">    &#123;<span class="keyword">return</span> px;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">shared_ptr</span>(T* p):px(p) &#123; &#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    T* px;</span><br><span class="line">    <span class="keyword">long</span>* pn;</span><br><span class="line">...</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<p>使用：<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Foo</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    ...</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">method</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;......&#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">shared_ptr</span>&lt;Foo&gt; sp(<span class="keyword">new</span> Foo);</span><br><span class="line"></span><br><span class="line"><span class="function">Foo <span class="title">f</span><span class="params">(*sp)</span></span>;</span><br><span class="line"></span><br><span class="line">sp-&gt;method();</span><br></pre></td></tr></table></figure>
<p>相当于<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">px-&gt;method();</span><br></pre></td></tr></table></figure></p>
<h2 id="pointer-like-classes-关于迭代器"><a href="#pointer-like-classes-关于迭代器" class="headerlink" title="pointer-like classes, 关于迭代器"></a>pointer-like classes, 关于迭代器</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">template</span>&lt;<span class="class"><span class="keyword">class</span> <span class="title">T</span>, <span class="title">class</span> <span class="title">Ref</span>, <span class="title">class</span> <span class="title">Ptr</span>&gt;</span></span><br><span class="line"><span class="class"><span class="title">struct</span> __<span class="title">list_iterator</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">typedef</span> __list_iterator&lt;T, Ref, Ptr&gt; self;</span><br><span class="line">    <span class="keyword">typedef</span> Ptr pointer;</span><br><span class="line">    <span class="keyword">typedef</span> Ref reference;</span><br><span class="line">    <span class="keyword">typedef</span> __list_node&lt;T&gt;* link_type;</span><br><span class="line">    link_type node;</span><br><span class="line">    <span class="keyword">bool</span> <span class="keyword">operator</span>==(<span class="keyword">const</span> self&amp; x) <span class="keyword">const</span> &#123;<span class="keyword">return</span> node == x.node; &#125;</span><br><span class="line">    <span class="keyword">bool</span> <span class="keyword">operator</span>!=(<span class="keyword">const</span> self&amp; x) <span class="keyword">const</span> &#123; <span class="keyword">return</span> node != x.node; &#125;</span><br><span class="line">    reference <span class="keyword">operator</span>*() <span class="keyword">const</span> &#123; <span class="keyword">return</span> &#123;*node&#125;.data; &#125;</span><br><span class="line">    pointer <span class="keyword">operator</span>-&gt;() <span class="keyword">const</span> &#123; <span class="keyword">return</span> &amp;(<span class="keyword">operator</span>*());&#125;</span><br><span class="line">    self&amp; <span class="keyword">operator</span>++() &#123; node = (link_type)((*node).next); <span class="keyword">return</span> *<span class="keyword">this</span>;&#125;</span><br><span class="line">    self <span class="keyword">operator</span>++(<span class="keyword">int</span>) &#123; self tmp = *<span class="keyword">this</span>; ++*<span class="keyword">this</span>; <span class="keyword">return</span> tmp;&#125;</span><br><span class="line">    self&amp; <span class="keyword">operator</span>--() &#123; node = (link_type)((*node).prev); <span class="keyword">return</span> *<span class="keyword">this</span>;&#125;</span><br><span class="line">    self <span class="keyword">operator</span>--(<span class="keyword">int</span>) &#123; self tmp = *<span class="keyword">this</span>; --*<span class="keyword">this</span>; <span class="keyword">return</span> tmp; &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<p>使用：<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">list</span>&lt;Foo&gt;::iterator ite;</span><br><span class="line">...</span><br><span class="line">*ite;<span class="comment">//获得一个Foo object</span></span><br><span class="line">ite-&gt;method();</span><br><span class="line"><span class="comment">//意思是调用Foo::method()</span></span><br><span class="line"><span class="comment">//相当于(*ite).method();</span></span><br><span class="line"><span class="comment">//相当于(&amp;(*ite))-&gt;method();</span></span><br></pre></td></tr></table></figure></p>
<h1 id="funciton-like-classes-所谓仿函数"><a href="#funciton-like-classes-所谓仿函数" class="headerlink" title="funciton-like classes, 所谓仿函数"></a>funciton-like classes, 所谓仿函数</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">template</span> &lt;<span class="class"><span class="keyword">class</span> <span class="title">T</span>&gt;</span></span><br><span class="line"><span class="class"><span class="title">struct</span> <span class="title">identity</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">const</span> T&amp;</span><br><span class="line">    <span class="keyword">operator</span>() (<span class="keyword">const</span> T&amp; x) <span class="keyword">const</span> &#123; <span class="keyword">return</span> x; &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="class"><span class="keyword">class</span> <span class="title">Pair</span>&gt;</span></span><br><span class="line"><span class="class"><span class="title">struct</span> <span class="title">select1st</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">const</span> <span class="keyword">typename</span> Pair::first_type&amp;</span><br><span class="line">    <span class="keyword">operator</span>() (<span class="keyword">const</span> Pair&amp; x) <span class="keyword">const</span></span><br><span class="line">    &#123; <span class="keyword">return</span> x.first; &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="class"><span class="keyword">class</span> <span class="title">Pair</span>&gt;</span></span><br><span class="line"><span class="class"><span class="title">struct</span> <span class="title">select2nd</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">const</span> <span class="keyword">typename</span> Pair::second_type&amp;</span><br><span class="line">    <span class="keyword">operator</span>() (<span class="keyword">const</span> Pair&amp; x) <span class="keyword">const</span></span><br><span class="line">    &#123; <span class="keyword">return</span> x.second; &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">template</span> &lt;<span class="class"><span class="keyword">class</span> <span class="title">T1</span>, <span class="title">class</span> <span class="title">T2</span>&gt;</span></span><br><span class="line"><span class="class"><span class="title">struct</span> <span class="title">pair</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    T1 first;</span><br><span class="line">    T2 second;</span><br><span class="line">    pair() : first(T1()), second(T2()) &#123;&#125;</span><br><span class="line">    pair(<span class="keyword">const</span> T1&amp; a, <span class="keyword">const</span> T2&amp; b): first(a), second(b) &#123;&#125;</span><br><span class="line">......</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<h2 id="标准库中仿仿函数的奇特模样"><a href="#标准库中仿仿函数的奇特模样" class="headerlink" title="标准库中仿仿函数的奇特模样"></a>标准库中仿仿函数的奇特模样</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">template</span> &lt;<span class="class"><span class="keyword">class</span> <span class="title">T</span>&gt;</span></span><br><span class="line"><span class="class"><span class="title">struct</span> <span class="title">identity</span> :</span> <span class="keyword">public</span> unary_function&lt;T, T&gt;</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">const</span> T&amp;</span><br><span class="line">    <span class="keyword">operator</span>() (<span class="keyword">const</span> T&amp; x) <span class="keyword">const</span> &#123; <span class="keyword">return</span> x; &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="class"><span class="keyword">class</span> <span class="title">Pair</span>&gt;</span></span><br><span class="line"><span class="class"><span class="title">struct</span> <span class="title">select1st</span> :</span> <span class="keyword">public</span> unary_function&lt;Pair, <span class="keyword">typename</span> Pair::first_type&gt;</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">const</span> <span class="keyword">typename</span> Pair::first_type&amp;</span><br><span class="line">    <span class="keyword">operator</span>() (<span class="keyword">const</span> Pair&amp; x) <span class="keyword">const</span></span><br><span class="line">    &#123; <span class="keyword">return</span> x.first; &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="class"><span class="keyword">class</span> <span class="title">Pair</span>&gt;</span></span><br><span class="line"><span class="class"><span class="title">struct</span> <span class="title">select2nd</span> :</span> <span class="keyword">public</span> unary_function&lt;Pair, <span class="keyword">typename</span> Pair::second_type&gt;</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">const</span> <span class="keyword">typename</span> Pair::second_type&amp;</span><br><span class="line">    <span class="keyword">operator</span>() (<span class="keyword">const</span> Pair&amp; x) <span class="keyword">const</span></span><br><span class="line">    &#123; <span class="keyword">return</span> x.second; &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">template</span> &lt;<span class="class"><span class="keyword">class</span> <span class="title">T</span>&gt;</span></span><br><span class="line"><span class="class"><span class="title">struct</span> <span class="title">plus</span> :</span> <span class="keyword">public</span> binary_function&lt;T, T, T&gt;</span><br><span class="line">&#123;</span><br><span class="line">    <span class="function">T <span class="title">operator</span><span class="params">()</span><span class="params">(<span class="keyword">const</span> T&amp; x, <span class="keyword">const</span> T&amp; y)</span> <span class="keyword">const</span> </span>&#123; <span class="keyword">return</span> x + y; &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">template</span> &lt;<span class="class"><span class="keyword">class</span> <span class="title">T</span>&gt;</span></span><br><span class="line"><span class="class"><span class="title">struct</span> <span class="title">minus</span> :</span> <span class="keyword">public</span> binary_function&lt;T, T, T&gt;</span><br><span class="line">&#123;</span><br><span class="line">    <span class="function">T <span class="title">operator</span><span class="params">()</span><span class="params">(<span class="keyword">const</span> T&amp; x, <span class="keyword">const</span> T&amp; y)</span> <span class="keyword">const</span> </span>&#123; <span class="keyword">return</span> x - y; &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">template</span> &lt;<span class="class"><span class="keyword">class</span> <span class="title">T</span>&gt;</span></span><br><span class="line"><span class="class"><span class="title">struct</span> <span class="title">equal_to</span> :</span> <span class="keyword">public</span> binary_function&lt;T, T, <span class="keyword">bool</span>&gt;</span><br><span class="line">&#123;</span><br><span class="line">    <span class="function">T <span class="title">operator</span><span class="params">()</span><span class="params">(<span class="keyword">const</span> T&amp; x, <span class="keyword">const</span> T&amp; y)</span> <span class="keyword">const</span> </span>&#123; <span class="keyword">return</span> x == y; &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">template</span> &lt;<span class="class"><span class="keyword">class</span> <span class="title">T</span>&gt;</span></span><br><span class="line"><span class="class"><span class="title">struct</span> <span class="title">plus</span> :</span> <span class="keyword">public</span> binary_function&lt;T, T, <span class="keyword">bool</span>&gt;</span><br><span class="line">&#123;</span><br><span class="line">    <span class="function">T <span class="title">operator</span><span class="params">()</span><span class="params">(<span class="keyword">const</span> T&amp; x, <span class="keyword">const</span> T&amp; y)</span> <span class="keyword">const</span> </span>&#123; <span class="keyword">return</span> x &lt; y; &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<h2 id="标准库中，仿函数所使用的奇特的base-classes"><a href="#标准库中，仿函数所使用的奇特的base-classes" class="headerlink" title="标准库中，仿函数所使用的奇特的base classes"></a>标准库中，仿函数所使用的奇特的base classes</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">template</span> &lt;<span class="class"><span class="keyword">class</span> <span class="title">Arg</span>, <span class="title">class</span> <span class="title">Result</span>&gt;</span></span><br><span class="line"><span class="class"><span class="title">struct</span> <span class="title">unary_function</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">typedef</span> Arg argument_type;</span><br><span class="line">    <span class="keyword">typedef</span> Result result_type;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="class"><span class="keyword">class</span> <span class="title">Arg1</span>, <span class="title">class</span> <span class="title">Arg2</span>, <span class="title">class</span> <span class="title">Result</span>&gt;</span></span><br><span class="line"><span class="class"><span class="title">struct</span> <span class="title">binary_function</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">typedef</span> Arg1 first_argument_type;</span><br><span class="line">    <span class="keyword">typedef</span> Arg2 second_argument_type;</span><br><span class="line">    <span class="keyword">typedef</span> Result result_type;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<p>less<int>::result_type-&gt;bool</int></p>
<h1 id="namespace经验谈"><a href="#namespace经验谈" class="headerlink" title="namespace经验谈"></a>namespace经验谈</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="comment">//-----------------------------------</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;memory&gt;//share_ptr</span></span></span><br><span class="line"><span class="keyword">namespace</span> jj01</span><br><span class="line">&#123;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test_member_template</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123; ...... &#125;</span><br><span class="line">&#125;<span class="comment">//namespace</span></span><br><span class="line"><span class="comment">//-----------------------------------</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;list&gt;</span></span></span><br><span class="line"><span class="keyword">namespace</span> jj02</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;</span><br><span class="line"><span class="keyword">using</span> Lst = <span class="built_in">list</span>&lt;T, allocator&lt;T&gt;&gt;;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test_template_template_param</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123; ...... &#125;</span><br><span class="line">&#125;<span class="comment">//namespace</span></span><br><span class="line"><span class="comment">//-----------------------------------</span></span><br></pre></td></tr></table></figure>
<p>使用：<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span>** argv)</span></span></span><br><span class="line">jj01::test_member_template();</span><br><span class="line">jj02::test_template_template();</span><br></pre></td></tr></table></figure></p>
<h1 id="class-template-类模板"><a href="#class-template-类模板" class="headerlink" title="class template, 类模板"></a>class template, 类模板</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">complex</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="keyword">complex</span>(T r = <span class="number">0</span>, T i = <span class="number">0</span>)</span><br><span class="line">    : re(r), im(i)</span><br><span class="line">    &#123;&#125;</span><br><span class="line">    <span class="keyword">complex</span>&amp; <span class="keyword">operator</span> += (<span class="keyword">const</span> <span class="keyword">complex</span>&amp;);</span><br><span class="line">    <span class="function">T <span class="title">real</span> <span class="params">()</span> <span class="keyword">const</span> </span>&#123; <span class="keyword">return</span> re; &#125;</span><br><span class="line">    <span class="function">T <span class="title">imag</span> <span class="params">()</span> <span class="keyword">const</span> </span>&#123; <span class="keyword">return</span> im; &#125;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    T re, im;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">friend</span> <span class="keyword">complex</span>&amp; __doapl (<span class="keyword">complex</span>*, <span class="keyword">const</span> <span class="keyword">complex</span>&amp;);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<p>使用：<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="keyword">complex</span>&lt;<span class="keyword">double</span>&gt; c1(<span class="number">2.5</span>, <span class="number">1.5</span>);</span><br><span class="line">    <span class="keyword">complex</span>&lt;<span class="keyword">int</span>&gt; c2(<span class="number">2</span>, <span class="number">6</span>);</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h2 id="function-template-函数模板"><a href="#function-template-函数模板" class="headerlink" title="function template, 函数模板"></a>function template, 函数模板</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">stone r1(2, 3), r2(3, 3), r3;</span><br><span class="line">r3 = min(r1, r2);</span><br></pre></td></tr></table></figure>
<p>编译器会对function template进行实参推导(argument deduction)<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">template</span> &lt;<span class="class"><span class="keyword">class</span> <span class="title">T</span>&gt;</span></span><br><span class="line"><span class="class"><span class="title">inline</span> <span class="title">const</span> <span class="title">T</span>&amp; <span class="title">min</span>(<span class="title">const</span> <span class="title">T</span>&amp; <span class="title">a</span>, <span class="title">const</span> <span class="title">T</span>&amp; <span class="title">b</span>)</span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">return</span> b &lt; a ? b : a;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>实参推导的结果，T为stone，于是调用stone::operator&lt;<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">stone</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    stone(<span class="keyword">int</span> w, <span class="keyword">int</span> h, <span class="keyword">int</span> we) </span><br><span class="line">    : _w(w), _h(h), _weight(we)</span><br><span class="line">    &#123; &#125;</span><br><span class="line">    <span class="keyword">bool</span> <span class="keyword">operator</span>&lt; (<span class="keyword">const</span> stone&amp; rhs) <span class="keyword">const</span></span><br><span class="line">    &#123; <span class="keyword">return</span> _weight &lt; rhs._weight; &#125;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    <span class="keyword">int</span> _w, _h, _weight;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></p>
<h2 id="member-template-成员函数"><a href="#member-template-成员函数" class="headerlink" title="member template, 成员函数"></a>member template, 成员函数</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">template</span> &lt;<span class="class"><span class="keyword">class</span> <span class="title">T1</span>, <span class="title">class</span> <span class="title">T2</span>&gt;</span></span><br><span class="line"><span class="class"><span class="title">struct</span> <span class="title">pair</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">typedef</span> T1 first_type;</span><br><span class="line">    <span class="keyword">typedef</span> T2 second_type;</span><br><span class="line"></span><br><span class="line">    T1 first;</span><br><span class="line">    T2 second;</span><br><span class="line"></span><br><span class="line">    pair()</span><br><span class="line">        : first(T1()), second(T2()) &#123;&#125;</span><br><span class="line">    pair(<span class="keyword">const</span> T1&amp; a, <span class="keyword">const</span> T2&amp; b)</span><br><span class="line">        : first(a), second(b) &#123;&#125;</span><br><span class="line">    <span class="keyword">template</span> &lt;<span class="class"><span class="keyword">class</span> <span class="title">U1</span>, <span class="title">class</span> <span class="title">U2</span>&gt;</span></span><br><span class="line"><span class="class">    <span class="title">pair</span>(<span class="title">const</span> <span class="title">pair</span>&lt;U1, U2&gt;&amp; <span class="title">p</span>)</span></span><br><span class="line"><span class="class">        :</span> first(p.first), second(p.second) &#123;&#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Base1</span>&#123;</span>&#125;;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Derived1</span>:</span><span class="keyword">public</span> Base1&#123;&#125;;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Base2</span>&#123;</span>&#125;;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Derived2</span>:</span><span class="keyword">public</span> Base2&#123;&#125;;</span><br></pre></td></tr></table></figure>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pair&lt;Derived1, Derived2&gt;p;</span><br><span class="line">pair&lt;Base1, Base2&gt;p2(p);</span><br></pre></td></tr></table></figure>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pair&lt;Base1, Base2&gt;p2(pair&lt;Derived1, Derived2&gt;());</span><br></pre></td></tr></table></figure>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> _Tp&gt;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">shared_ptr</span>:</span><span class="keyword">public</span> __shared_ptr&lt;_Tp&gt;</span><br><span class="line">&#123;</span><br><span class="line">...</span><br><span class="line">    <span class="keyword">template</span>&lt;<span class="keyword">typename</span> _Tp1&gt;</span><br><span class="line">    <span class="function"><span class="keyword">explicit</span> <span class="title">shared_ptr</span><span class="params">(_Tpl* __p)</span></span></span><br><span class="line">    :__shared_ptr&lt;_Tp&gt;(__p)&#123;&#125;</span><br><span class="line">...    </span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Base1* ptr = <span class="keyword">new</span> Derived1;<span class="comment">//up-cast</span></span><br><span class="line"><span class="built_in">shared_ptr</span>&lt;Base1&gt;sptr(<span class="keyword">new</span> Derived1);<span class="comment">//模拟up-cast</span></span><br></pre></td></tr></table></figure>
<h1 id="specialization-模板特化"><a href="#specialization-模板特化" class="headerlink" title="specialization, 模板特化"></a>specialization, 模板特化</h1><p>【注】特化反义词：泛化</p>
<p>泛化<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">template</span> &lt;<span class="class"><span class="keyword">class</span> <span class="title">Key</span>&gt;</span></span><br><span class="line"><span class="class"><span class="title">struct</span> <span class="title">hash</span>&#123;</span> &#125;;</span><br></pre></td></tr></table></figure></p>
<p>特化<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">template</span>&lt;&gt;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">hash</span>&lt;char&gt;</span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">size_t</span> <span class="keyword">operator</span>() (<span class="keyword">char</span> x) <span class="keyword">const</span> &#123; <span class="keyword">return</span> x; &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span>&lt;&gt;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">hash</span>&lt;int&gt;</span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">size_t</span> <span class="keyword">operator</span>() (<span class="keyword">int</span> x) <span class="keyword">const</span> &#123; <span class="keyword">return</span> x; &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span>&lt;&gt;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">hash</span>&lt;long&gt;</span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">size_t</span> <span class="keyword">operator</span>() (<span class="keyword">long</span> x) <span class="keyword">const</span> &#123; <span class="keyword">return</span> x; &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></p>
<p>使用：<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cout</span> &lt;&lt; hash&lt;<span class="keyword">long</span>&gt;() (<span class="number">1000</span>);</span><br></pre></td></tr></table></figure></p>
<p>泛化又叫full specialization，全泛化，对应偏特化。</p>
<h2 id="patial-specialization-模板偏特化——个数的偏"><a href="#patial-specialization-模板偏特化——个数的偏" class="headerlink" title="patial specialization, 模板偏特化——个数的偏"></a>patial specialization, 模板偏特化——个数的偏</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span> Alloc=...&gt;</span><br><span class="line">class <span class="built_in">vector</span></span><br><span class="line">&#123;</span><br><span class="line">    ...</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<p>绑定<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> Alloc=...&gt;</span><br><span class="line">class <span class="built_in">vector</span>&lt;<span class="keyword">bool</span>, Alloc&gt;</span><br><span class="line">&#123;</span><br><span class="line">    ...</span><br></pre></td></tr></table></figure></p>
<h2 id="patial-specialization-模板偏特化——范围的偏"><a href="#patial-specialization-模板偏特化——范围的偏" class="headerlink" title="patial specialization, 模板偏特化——范围的偏"></a>patial specialization, 模板偏特化——范围的偏</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">C</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    ...</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<p>【注】上下的T不是一个T<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">C</span>&lt;T*&gt;</span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    ...</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></p>
<p>这样写也可以<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> U&gt;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">C</span>&lt;U*&gt;</span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    ...</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></p>
<p>使用：<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">C&lt;<span class="built_in">string</span>&gt; obj1;</span><br><span class="line">C&lt;<span class="built_in">string</span>*&gt; obj2;</span><br></pre></td></tr></table></figure></p>
<h1 id="template-template-parameter-模板模板参数"><a href="#template-template-parameter-模板模板参数" class="headerlink" title="template template parameter, 模板模板参数"></a>template template parameter, 模板模板参数</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T, </span><br><span class="line">        <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</span><br><span class="line">            <span class="class"><span class="keyword">class</span> <span class="title">Container</span></span></span><br><span class="line"><span class="class">        &gt;</span></span><br><span class="line"><span class="class"><span class="title">class</span> <span class="title">XCls</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    Container&lt;T&gt; c;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    ......</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;</span><br><span class="line"><span class="keyword">using</span> Lst = <span class="built_in">list</span>&lt;T, allocator&lt;T&gt;&gt;;</span><br></pre></td></tr></table></figure>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">XCls&lt;<span class="built_in">string</span>, <span class="built_in">list</span>&gt; mylst1;<span class="comment">//错误</span></span><br><span class="line">XCls&lt;<span class="built_in">string</span>, Lst&gt; mylst2;</span><br></pre></td></tr></table></figure>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T,</span><br><span class="line">            <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</span><br><span class="line">                <span class="class"><span class="keyword">class</span> <span class="title">SmartPtr</span></span></span><br><span class="line"><span class="class">        &gt;</span></span><br><span class="line"><span class="class"><span class="title">class</span> <span class="title">XCls</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    SmartPtr&lt;T&gt; sp;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    XCls():sp(<span class="keyword">new</span> T) &#123; &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">XCls&lt;<span class="built_in">string</span>, <span class="built_in">shared_ptr</span>&gt; p1;</span><br><span class="line">XCls&lt;<span class="built_in">string</span>, <span class="built_in">unique_ptr</span>&gt; p2;<span class="comment">//错误</span></span><br><span class="line">XCls&lt;<span class="keyword">int</span>, weak_ptr&gt; p3;<span class="comment">//错误</span></span><br><span class="line">XCls&lt;<span class="keyword">long</span>, <span class="built_in">auto_ptr</span>&gt; p4;</span><br></pre></td></tr></table></figure>
<h2 id="这不是template-template-parameter"><a href="#这不是template-template-parameter" class="headerlink" title="这不是template template parameter"></a>这不是template template parameter</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">template</span> &lt;<span class="class"><span class="keyword">class</span> <span class="title">T</span>, <span class="title">class</span> <span class="title">Sequence</span> = <span class="title">deque</span>&lt;T&gt;&gt;</span></span><br><span class="line"><span class="class"><span class="title">class</span> <span class="title">stack</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">friend</span> <span class="keyword">bool</span> <span class="keyword">operator</span>== &lt;&gt; (<span class="keyword">const</span> <span class="built_in">stack</span>&amp;, <span class="keyword">const</span> <span class="built_in">stack</span>&amp;);</span><br><span class="line">    <span class="keyword">friend</span> <span class="keyword">bool</span> <span class="keyword">operator</span>&lt; &lt;&gt; (<span class="keyword">const</span> <span class="built_in">stack</span>&amp;, <span class="keyword">const</span> <span class="built_in">stack</span>&amp;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">protected</span>:</span><br><span class="line">    Sequence c;<span class="comment">//底层容器</span></span><br><span class="line">......</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<p>使用<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">stack</span>&lt;<span class="keyword">int</span>&gt; s1;</span><br><span class="line"><span class="built_in">stack</span>&lt;<span class="keyword">int</span>, <span class="built_in">list</span>&lt;<span class="keyword">int</span>&gt;&gt; s2;</span><br></pre></td></tr></table></figure></p>
<h1 id="关于C-标准库"><a href="#关于C-标准库" class="headerlink" title="关于C++标准库"></a>关于C++标准库</h1><h2 id="容器"><a href="#容器" class="headerlink" title="容器"></a>容器</h2><h3 id="Sequence-containers"><a href="#Sequence-containers" class="headerlink" title="Sequence containers"></a>Sequence containers</h3><p>array<br>vector<br>deque<br>forward_list<br>list</p>
<h3 id="Container-adaptors"><a href="#Container-adaptors" class="headerlink" title="Container adaptors"></a>Container adaptors</h3><p>stack<br>queue<br>priority_queue</p>
<h3 id="Associative-containers"><a href="#Associative-containers" class="headerlink" title="Associative containers"></a>Associative containers</h3><p>set<br>multiset<br>map<br>multimap</p>
<h3 id="Unordered-associative-con"><a href="#Unordered-associative-con" class="headerlink" title="Unordered associative con"></a>Unordered associative con</h3><p>unordered_set<br>unordered_multiset<br>unordered_map<br>unordered_multimap</p>
<h2 id="算法"><a href="#算法" class="headerlink" title="算法"></a>算法</h2><p>…</p>
<h3 id="Sorting"><a href="#Sorting" class="headerlink" title="Sorting"></a>Sorting</h3><p>sort<br>stable_sort<br>partial_sort<br>partial_sort_copy<br>is_sorted<br>is_sorted_until<br>nth_element</p>
<h3 id="Binary-search"><a href="#Binary-search" class="headerlink" title="Binary search"></a>Binary search</h3><p>lower_bound<br>upper_bound<br>equal_range<br>binary_search</p>
<h3 id="Merge"><a href="#Merge" class="headerlink" title="Merge"></a>Merge</h3><p>merge<br>inplace_merge<br>includes<br>set_union<br>set_intersection<br>set_difference<br>set_symmetric_difference</p>
<p>…</p>
<p>推书：Algorithms + Data Structures = Programs(Niklaus Wirth)</p>
<p>确认支持C++11： macro __cplusplus<br>测试：<br>VS2012<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">"stdafx.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;__cplusplus&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>Dev-C++ 5<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">cout</span>&lt;&lt;__cplusplus;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>如果是199711，则不支持C++11，需修改编译器<br>如果是201103，则支持C++11</p>
<h1 id="variadic-templates-since-C-11-数量不定的模板参数"><a href="#variadic-templates-since-C-11-数量不定的模板参数" class="headerlink" title="variadic templates(since C++11) 数量不定的模板参数"></a>variadic templates(since C++11) 数量不定的模板参数</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">print</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span>... Types&gt;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">print</span><span class="params">(<span class="keyword">const</span> T&amp; firstArg, <span class="keyword">const</span> Type&amp;... args)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;firstArg&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    print(args...);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>Inside variadic templates, sizeof…(arg) yields the number of arguments</p>
<p>…就是一个所谓的pack(包)<br>用于template parameters, 就是template parameters pack(模板参数包)<br>用于function parameter types, 就是function parameter types pack(函数参数类型包)<br>用于function parameters, 就是function parameters pack(函数参数包)</p>
<p>使用：<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print(<span class="number">7.5</span>, <span class="string">"hello"</span>, <span class="built_in">bitset</span>&lt;<span class="number">16</span>&gt;(<span class="number">377</span>), <span class="number">42</span>);</span><br></pre></td></tr></table></figure></p>
<p>结果：<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">7.5</span></span><br><span class="line">hello</span><br><span class="line"><span class="number">0000000101111001</span></span><br><span class="line"><span class="number">42</span></span><br></pre></td></tr></table></figure></p>
<h1 id="auto-since-C-11"><a href="#auto-since-C-11" class="headerlink" title="auto(since C++11)"></a>auto(since C++11)</h1><p>过去：<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">list</span>&lt;<span class="built_in">string</span>&gt; c;</span><br><span class="line">...</span><br><span class="line"><span class="built_in">list</span>&lt;<span class="built_in">string</span>&gt;::iterator ite;</span><br><span class="line">ite = find(c.begin(), c.end(), target);</span><br></pre></td></tr></table></figure></p>
<p>现在：<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">list</span>&lt;<span class="built_in">string</span>&gt; c;</span><br><span class="line">...</span><br><span class="line"><span class="keyword">auto</span> ite = find(c.begin(), c.end(), target);</span><br></pre></td></tr></table></figure></p>
<p>错误：<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">list</span>&lt;<span class="built_in">string</span>&gt; c;</span><br><span class="line">...</span><br><span class="line"><span class="keyword">auto</span> ite;<span class="comment">//错误</span></span><br><span class="line">ite = find(c.begin(), c.end(), target);</span><br></pre></td></tr></table></figure></p>
<h1 id="ranged-base-for-since-C-11"><a href="#ranged-base-for-since-C-11" class="headerlink" title="ranged-base for(since C++11)"></a>ranged-base for(since C++11)</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(decl : coll)</span><br><span class="line">&#123;</span><br><span class="line">    statement</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i : &#123;<span class="number">2</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">7</span>, <span class="number">9</span>, <span class="number">13</span>, <span class="number">17</span>, <span class="number">19</span>&#125;)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt; i &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">double</span>&gt; vec;</span><br><span class="line">...</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">auto</span> elem : vec)<span class="comment">//pass by value</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; elem &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">auto</span>&amp; elem : vec)<span class="comment">// pass by reference</span></span><br><span class="line">&#123;</span><br><span class="line">    elem *= <span class="number">3</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="reference"><a href="#reference" class="headerlink" title="reference"></a>reference</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> x=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span>* p = &amp;x;</span><br><span class="line"><span class="keyword">int</span>&amp; r = x;<span class="comment">//r代表x。现在r,x都是0</span></span><br><span class="line"><span class="keyword">int</span> x2 = <span class="number">5</span>;</span><br><span class="line"></span><br><span class="line">r = x2;<span class="comment">//r不能重新代表其他物体。现在r,x都是5</span></span><br><span class="line"><span class="keyword">int</span>&amp; r2 = r;<span class="comment">//现在r2是5(r2代表r:亦相当于代表x)</span></span><br></pre></td></tr></table></figure>
<p>从内存上看，<br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="https://github.com/hubojing/BlogImages/blob/master/C++程序设计之兼谈对象模型——reference.png?raw=true" alt="从内存上看" title="">
                </div>
                <div class="image-caption">从内存上看</div>
            </figure></p>
<p>注意：</p>
<ol>
<li>sizeof(r) == sizeof(x)</li>
<li>&amp;x = &r;</li>
</ol>
<p>object和其reference的大小相同，地址也相同（全都是假象）<br>Java里头所有变量都是reference</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">Stag</span>&#123;</span><span class="keyword">int</span> a, b, c, d;&#125; S;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">double</span> x = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">double</span>* p = &amp;x;<span class="comment">//p指向x，p的值是x的地址</span></span><br><span class="line">    <span class="keyword">double</span>&amp; r = x;<span class="comment">//r代表x,现在r,x都是0</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="keyword">sizeof</span>(x) &lt;&lt; <span class="built_in">endl</span>;<span class="comment">//8</span></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="keyword">sizeof</span>(p) &lt;&lt; <span class="built_in">endl</span>;<span class="comment">//4</span></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="keyword">sizeof</span>(r) &lt;&lt; <span class="built_in">endl</span>;<span class="comment">//8</span></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; p &lt;&lt; <span class="built_in">endl</span>;<span class="comment">//0065FDFC</span></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; *p &lt;&lt; <span class="built_in">endl</span>;<span class="comment">//0</span></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; x &lt;&lt; <span class="built_in">endl</span>;<span class="comment">//0</span></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; r &lt;&lt; <span class="built_in">endl</span>;<span class="comment">//0</span></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; &amp;x &lt;&lt; <span class="built_in">endl</span>;<span class="comment">//0065FDFC</span></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; &amp;r &lt;&lt; <span class="built_in">endl</span>;<span class="comment">//0065FDFC</span></span><br><span class="line"></span><br><span class="line">    S s;</span><br><span class="line">    S&amp; rs = s;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="keyword">sizeof</span>(s) &lt;&lt; <span class="built_in">endl</span>;<span class="comment">//16</span></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="keyword">sizeof</span>(rs) &lt;&lt; <span class="built_in">endl</span>;<span class="comment">//16</span></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; &amp;s &lt;&lt; <span class="built_in">endl</span>;<span class="comment">//0065FDE8</span></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; &amp;rs &lt;&lt; <span class="built_in">endl</span>;<span class="comment">//0065FDE8</span></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>
<p>object和其reference的大小相同，地址也相同（全都是假象）</p>
<h2 id="reference的常见用途"><a href="#reference的常见用途" class="headerlink" title="reference的常见用途"></a>reference的常见用途</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">func1</span><span class="params">(Cls* pobj)</span> </span>&#123;pobj-&gt;xxx();&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">func2</span><span class="params">(Cls obj)</span> </span>&#123;obj.xxx();&#125;<span class="comment">////被调用端 写法相同，很好</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">func3</span><span class="params">(Cls&amp; obj)</span> </span>&#123;obj.xxx();&#125;<span class="comment">//被调用端 写法相同，很好</span></span><br><span class="line">......</span><br><span class="line">Cls obj;</span><br><span class="line">func1(&amp;obj);<span class="comment">//接口不同，困扰</span></span><br><span class="line">fun2(obj);<span class="comment">//调用端接口相同，很好</span></span><br><span class="line">func3(obj);<span class="comment">//调用端接口相同，很好</span></span><br></pre></td></tr></table></figure>
<p>reference通常不用于声明变量，而用于参数类型(parameters type)和返回类型(return type)的描述。</p>
<p>以下被视为”same signature”(所以二者不能同时存在)：<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">imag</span><span class="params">(<span class="keyword">const</span> <span class="keyword">double</span>&amp; im)</span> </span>&#123;...&#125;</span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">imag</span><span class="params">(<span class="keyword">const</span> <span class="keyword">double</span> im)</span> </span>&#123;...&#125;  <span class="comment">//Ambiguity</span></span><br></pre></td></tr></table></figure></p>
<p>【注】imag(const double&amp; im)为signature, 不含return type.<br>imag(const double&amp; im)后面可以加const, const是函数签名的一部分。<br>所以imag(const double&amp; im)和imag(const double&amp; im) const两个函数可以并存。</p>
<h1 id="对象模型-Object-Model-关于vptr-和-vtbl"><a href="#对象模型-Object-Model-关于vptr-和-vtbl" class="headerlink" title="对象模型(Object Model):关于vptr 和 vtbl"></a>对象模型(Object Model):关于vptr 和 vtbl</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">vfunc1</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">vfunc2</span><span class="params">()</span></span>;</span><br><span class="line">            <span class="function"><span class="keyword">void</span> <span class="title">func1</span><span class="params">()</span></span>;</span><br><span class="line">            <span class="function"><span class="keyword">void</span> <span class="title">func2</span><span class="params">()</span></span>;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    <span class="keyword">int</span> m_data1, m_data2;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">B</span>:</span><span class="keyword">public</span> A</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">vfunc1</span><span class="params">()</span></span>;</span><br><span class="line">            <span class="function"><span class="keyword">void</span> <span class="title">func2</span><span class="params">()</span></span>;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    <span class="keyword">int</span> m_data3;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">C</span>:</span><span class="keyword">public</span> B</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">vfunc1</span><span class="params">()</span></span>;</span><br><span class="line">            <span class="function"><span class="keyword">void</span> <span class="title">func2</span><span class="params">()</span></span>;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    <span class="keyword">int</span> m_data1 m_data4;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="https://github.com/hubojing/BlogImages/blob/master/C++程序设计之兼谈对象模型——关于vptr和vtbl.png?raw=true" alt="从内存上看" title="">
                </div>
                <div class="image-caption">从内存上看</div>
            </figure>
<h1 id="对象模型-Object-Model-关于this"><a href="#对象模型-Object-Model-关于this" class="headerlink" title="对象模型(Object Model):关于this"></a>对象模型(Object Model):关于this</h1><p><strong>Template Method</strong><br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="https://github.com/hubojing/BlogImages/blob/master/C++程序设计之兼谈对象模型——关于this.png?raw=true" alt="关于this" title="">
                </div>
                <div class="image-caption">关于this</div>
            </figure></p>
<h1 id="再谈const"><a href="#再谈const" class="headerlink" title="再谈const"></a>再谈const</h1><p>　　　　　　　　const object(data members不得变动)　　non-const object(data members可变动)<br>const member functions<br>(保证不更改data members)　　　　　　　　　　　√　　　　　　　　　　　　　　　　√<br>non-const member functions<br>(不保证data members不变)　　　　　　　　　　　×　　　　　　　　　　　　　　　　√</p>
<p>当成员函数的const和non-const版本同时存在，const object只会（只能）调用const版本，non-const object只会（只能）调用non-const版本。</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">const</span> String <span class="title">str</span><span class="params">(<span class="string">"hello world"</span>)</span></span>;</span><br><span class="line">str.print();</span><br></pre></td></tr></table></figure>
<p>如果当初设计string::print()时未指明const，那么上行便是经由const object调用non-const member function，会出错。此非所愿。</p>
<p>non-const member functions可调用const member functions，反之则不行，会引发：<br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(VC)error C2662:cannot convert 'this' pointer from 'const class X' to 'class X &amp;'.Conversion loses qualifiers</span><br></pre></td></tr></table></figure></p>
<p>class template std::basic_string&lt;…&gt;有如下两个member functions:<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">charT</span><br><span class="line"><span class="keyword">operator</span>[](size_type pos) <span class="keyword">const</span></span><br><span class="line">&#123;......<span class="comment">/*不必考虑COW*/</span>&#125;</span><br><span class="line"></span><br><span class="line">reference</span><br><span class="line"><span class="keyword">operator</span>[](size_type pos)</span><br><span class="line">&#123;......<span class="comment">/*必须考虑COW*/</span>&#125;</span><br></pre></td></tr></table></figure></p>
<p>COW:Copy On Write</p>
<h1 id="对象模型-Object-Model-关于Dynamic-Binding"><a href="#对象模型-Object-Model-关于Dynamic-Binding" class="headerlink" title="对象模型(Object Model):关于Dynamic Binding"></a>对象模型(Object Model):关于Dynamic Binding</h1><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="https://github.com/hubojing/BlogImages/blob/master/C++程序设计之兼谈对象模型——静态绑定.png?raw=true" alt="静态绑定" title="">
                </div>
                <div class="image-caption">静态绑定</div>
            </figure>
<p>动态绑定三个条件：</p>
<ol>
<li>通过指针</li>
<li>虚函数</li>
<li>向上转型</li>
</ol>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="https://github.com/hubojing/BlogImages/blob/master/C++程序设计之兼谈对象模型——动态绑定.png?raw=true" alt="动态绑定" title="">
                </div>
                <div class="image-caption">动态绑定</div>
            </figure>
<h1 id="再谈new和delete"><a href="#再谈new和delete" class="headerlink" title="再谈new和delete"></a>再谈new和delete</h1><h2 id="operator-new-operator-delete-operator-new-operator-delete"><a href="#operator-new-operator-delete-operator-new-operator-delete" class="headerlink" title="::operator new, ::operator delete, ::operator new[], ::operator delete[]"></a>::operator new, ::operator delete, ::operator new[], ::operator delete[]</h2><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="https://github.com/hubojing/BlogImages/blob/master/C++程序设计之兼谈对象模型——new&delete.png?raw=true" alt="new&delete" title="">
                </div>
                <div class="image-caption">new&delete</div>
            </figure>
<h2 id="重载member-operator-new-delete"><a href="#重载member-operator-new-delete" class="headerlink" title="重载member operator new/delete"></a>重载member operator new/delete</h2><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="https://github.com/hubojing/BlogImages/blob/master/C++程序设计之兼谈对象模型——重载.png?raw=true" alt="重载member operator new/delete" title="">
                </div>
                <div class="image-caption">重载member operator new/delete</div>
            </figure>
<h2 id="重载member-operator-new-delete-1"><a href="#重载member-operator-new-delete-1" class="headerlink" title="重载member operator new[]/delete[]"></a>重载member operator new[]/delete[]</h2><p>和上图的区别在于多了一个[]<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Foo</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="keyword">void</span>* <span class="keyword">operator</span> <span class="keyword">new</span>[](<span class="keyword">size_t</span>);</span><br><span class="line">    <span class="keyword">void</span> <span class="keyword">operator</span> <span class="keyword">delete</span>[](<span class="keyword">void</span>*, <span class="keyword">size_t</span>);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></p>
<h2 id="示例，-接口"><a href="#示例，-接口" class="headerlink" title="示例， 接口"></a>示例， 接口</h2><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="https://github.com/hubojing/BlogImages/blob/master/C++程序设计之兼谈对象模型——示例.png?raw=true" alt="示例" title="">
                </div>
                <div class="image-caption">示例</div>
            </figure>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="https://github.com/hubojing/BlogImages/blob/master/C++程序设计之兼谈对象模型——示例2.png?raw=true" alt="示例2" title="">
                </div>
                <div class="image-caption">示例2</div>
            </figure>
<p>int 4字节，long 4字节，string（里面是个指针）4字节<br>有虚函数就多一个指针（12+4=16）</p>
<p>Foo[5] 数组，有5个，12*5=60，第一个记录有5个元素，这个记录的size为4，60+4=64<br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="https://github.com/hubojing/BlogImages/blob/master/C++程序设计之兼谈对象模型——示例3.png?raw=true" alt="示例3" title="">
                </div>
                <div class="image-caption">示例3</div>
            </figure></p>
<h2 id="重载new-delete"><a href="#重载new-delete" class="headerlink" title="重载new(), delete()"></a>重载new(), delete()</h2><p>我们可以重载class member operator new(),写出多个版本，前提是每一个版本的声明都必须有独特的参数列，其中第一参数必须是size_t，其余参数以new所指定的placement arguments为初值。出现于new(……)小括号内的便是所谓placement arguments。</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Foo* pf = <span class="keyword">new</span>(<span class="number">300</span>, <span class="string">'c'</span>) Foo;</span><br></pre></td></tr></table></figure>
<p>我们也可以重载class member operator delete()（或称此为placement operator delete），写出多个版本，但它们绝不会被delete调用。只有当new所调用的ctor抛出exception，才会调用这些重载版的operator delete()。它只可能这样被调用，主要用来归还未能完全创建成功的object所占用的memory。</p>
<h3 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Foo</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    Foo()&#123;<span class="built_in">cout</span>&lt;&lt;<span class="string">"Foo::Foo()"</span> &lt;&lt; <span class="built_in">endl</span>; &#125;</span><br><span class="line">    Foo(<span class="keyword">int</span>)&#123;<span class="built_in">cout</span> &lt;&lt; <span class="string">"Foo::Foo(int)"</span> &lt;&lt; <span class="built_in">endl</span>; <span class="keyword">throw</span> Bad();&#125;<span class="comment">//class Bad&#123;&#125;;</span></span><br><span class="line">    <span class="comment">//故意在这儿抛出exception，测试placement operator delete.s</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//(1)这里就是一般的operator new()的重载</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span>* <span class="keyword">operator</span> <span class="title">new</span><span class="params">(<span class="keyword">size_t</span> size)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">malloc</span>(size);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//(2)这个就是标准库已提供的placement new()的重载（的形式），（所以此处也模拟standard placement new,就只是传回pointer）</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span>* <span class="keyword">operator</span> <span class="title">new</span><span class="params">(<span class="keyword">size_t</span> size, <span class="keyword">void</span>* start)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> start;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//(3)这个才是崭新的palcement new</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span>* <span class="keyword">operator</span> <span class="title">new</span><span class="params">(<span class="keyword">size_t</span> size, <span class="keyword">long</span> extra)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">malloc</span>(size+extra);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//(4)这又是一个placement new</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span>* <span class="keyword">operator</span> <span class="title">new</span><span class="params">(<span class="keyword">size_t</span> size, <span class="keyword">long</span> extra, <span class="keyword">char</span> init)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">malloc</span>(size+extra);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//(5)这又是一个placement new, 但故意写错第一参数的type（那必须是size_t以符合正常的operator new）</span></span><br><span class="line">    <span class="comment">//void* operator new(long extra, char init)</span></span><br><span class="line">    <span class="comment">//&#123;</span></span><br><span class="line">    <span class="comment">//    [Error]'Operator new' takes type 'size_t'('unsigned int') as first parameter[-fpermissive]</span></span><br><span class="line">    <span class="comment">//    return malloc(extra);</span></span><br><span class="line">    <span class="comment">//&#125;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//以下是搭配上述placement new的各个所谓placement delete.</span></span><br><span class="line">    <span class="comment">//当ctor发出异常，这儿对应的operator(placement) delete就会被调用.</span></span><br><span class="line">    <span class="comment">//其用于是释放对应之placement new分配所得的memory.</span></span><br><span class="line">    <span class="comment">//(1)这儿就是一般的operator delete()的重载</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="keyword">operator</span> <span class="title">delete</span><span class="params">(<span class="keyword">void</span>*,<span class="keyword">size_t</span>)</span></span></span><br><span class="line"><span class="function">    </span>&#123;<span class="built_in">cout</span> &lt;&lt; <span class="string">"operator delete(void*, size_t)"</span> &lt;&lt; <span class="built_in">endl</span>;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//(2)这是对应的(2)</span></span><br><span class="line">     <span class="function"><span class="keyword">void</span> <span class="keyword">operator</span> <span class="title">delete</span><span class="params">(<span class="keyword">void</span>*,<span class="keyword">void</span>*)</span></span></span><br><span class="line"><span class="function">    </span>&#123;<span class="built_in">cout</span> &lt;&lt; <span class="string">"operator delete(void*, void*)"</span> &lt;&lt; <span class="built_in">endl</span>;&#125;  </span><br><span class="line">    </span><br><span class="line">    <span class="comment">//(3)这是对应的(3)</span></span><br><span class="line">     <span class="function"><span class="keyword">void</span> <span class="keyword">operator</span> <span class="title">delete</span><span class="params">(<span class="keyword">void</span>*, <span class="keyword">long</span>)</span></span></span><br><span class="line"><span class="function">    </span>&#123;<span class="built_in">cout</span> &lt;&lt; <span class="string">"operator delete(void*, long)"</span> &lt;&lt; <span class="built_in">endl</span>;&#125;  </span><br><span class="line"></span><br><span class="line">    <span class="comment">//(4)这是对应的(4)</span></span><br><span class="line">     <span class="function"><span class="keyword">void</span> <span class="keyword">operator</span> <span class="title">delete</span><span class="params">(<span class="keyword">void</span>*, <span class="keyword">long</span>, <span class="keyword">char</span>)</span></span></span><br><span class="line"><span class="function">    </span>&#123;<span class="built_in">cout</span> &lt;&lt; <span class="string">"operator delete(void*, long, char)"</span> &lt;&lt; <span class="built_in">endl</span>;&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    <span class="keyword">int</span> m_i;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<p>测试代码：<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Foo start;</span><br><span class="line">Foo* p1 = <span class="keyword">new</span> Foo;</span><br><span class="line">Foo* p2 = <span class="keyword">new</span>(&amp;start) Foo;</span><br><span class="line">Foo* p3 = <span class="keyword">new</span>(<span class="number">100</span>) Foo;</span><br><span class="line">Foo* p4 = <span class="keyword">new</span>(<span class="number">100</span>,<span class="string">'a'</span>) Foo;</span><br><span class="line">Foo* p5 = <span class="keyword">new</span>(<span class="number">100</span>) Foo(<span class="number">1</span>);<span class="comment">//ctor抛出异常</span></span><br><span class="line">Foo* p6 = <span class="keyword">new</span>(<span class="number">100</span>,<span class="string">'a'</span>) Foo(<span class="number">1</span>);</span><br><span class="line">Foo* p7 = <span class="keyword">new</span>(&amp;start) Foo(<span class="number">1</span>);</span><br><span class="line">Foo* p8 = <span class="keyword">new</span> Foo(<span class="number">1</span>);</span><br></pre></td></tr></table></figure></p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="https://github.com/hubojing/BlogImages/blob/master/C++程序设计之兼谈对象模型——test.png?raw=true" alt="test" title="">
                </div>
                <div class="image-caption">test</div>
            </figure>
<p>ctor抛出异常，但G4.9没调用operator delete(void*, long),但G2.9确实调用了。</p>
<p>即使operator delete(…)未能一一对应于operator new(…)，也不会出现任何报错。意思是：放弃处理ctor发出的异常。</p>
<h2 id="basic-string使用new-extra-扩充申请量"><a href="#basic-string使用new-extra-扩充申请量" class="headerlink" title="basic_string使用new(extra)扩充申请量"></a>basic_string使用new(extra)扩充申请量</h2><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="https://github.com/hubojing/BlogImages/blob/master/C++程序设计之兼谈对象模型——basic_string.png?raw=true" alt="basic_string使用new(extra)扩充申请量" title="">
                </div>
                <div class="image-caption">basic_string使用new(extra)扩充申请量</div>
            </figure>]]></content>
      
        <categories>
            
            <category> 互联网 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> CPP </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Django博客demo]]></title>
      <url>https://hubojing.github.io/2019/01/11/django%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/</url>
      <content type="html"><![CDATA[<div align="left"><br><img src="https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1547395242880&di=51c657b409cc95bb168dde1d33880538&imgtype=0&src=http%3A%2F%2F5b0988e595225.cdn.sohucs.com%2Fimages%2F20171129%2F35c49523c50843f3ba22b8bc246c5d42.jpeg" width="300" height="180" style="float:right;"><br><br><br>　　<strong>Django-blog-demo笔记。</strong><br><br><br> </div>

<a id="more"></a>
<h1 id="搭建"><a href="#搭建" class="headerlink" title="搭建"></a>搭建</h1><h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><p>　　python 3.7<br>　　Django 2.1.5<br>　　pycharm</p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>　　cmd里敲：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install Django==2.1.5</span><br></pre></td></tr></table></figure></p>
<h1 id="创建项目和应用"><a href="#创建项目和应用" class="headerlink" title="创建项目和应用"></a>创建项目和应用</h1><h2 id="创建项目"><a href="#创建项目" class="headerlink" title="创建项目"></a>创建项目</h2><p>　　在预想安装博客目录下计入cmd，敲：<br><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">django-admin startproject myblog</span><br></pre></td></tr></table></figure></p>
<p>　　对应目录下生成一个myblog文件夹。</p>
<p>　　manage.py:与项目进行交互的命令行工具集的入口<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python manage.py</span><br></pre></td></tr></table></figure></p>
<p>　　查看所有命令。</p>
<p>　　启动命令：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python manage.py runserver</span><br></pre></td></tr></table></figure></p>
<p>　　浏览器127.0.0.1:8000查看效果。</p>
<p>　　改端口号：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python manage.py runserver <span class="number">8888</span></span><br></pre></td></tr></table></figure></p>
<h2 id="myblog目录"><a href="#myblog目录" class="headerlink" title="myblog目录"></a>myblog目录</h2><p>　　myblog<br>　　|–__init__.py<br>　　|–settings.py<br>　　|–urls.py<br>　　|–wsgi.py<br>　　manage.py</p>
<p>　　wsgi.py<br>　　WSGI(Python Web Server Gateway Interface)   Python服务器网关接口<br>　　Python应用与Web服务器之间的接口</p>
<p>　　urls.py<br>　　URL配置文件</p>
<p>　　settings.py<br>　　项目总配置文件，包含数据库、Web应用、时间等各种配置</p>
<p>　　__init__.py<br>　　内容默认为空</p>
<h2 id="创建应用"><a href="#创建应用" class="headerlink" title="创建应用"></a>创建应用</h2><p>　　打开命令行，进入manage.py同级目录<br><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python manage.py startapp blog</span><br></pre></td></tr></table></figure></p>
<p>　　会多一个blog文件夹。<br>　　添加应用名到settings.py中的INSTALLED_APPS里<br><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">INSTALLED_APPS = [</span><br><span class="line">    <span class="string">'django.contrib.admin'</span>,</span><br><span class="line">    <span class="string">'django.contrib.auth'</span>,</span><br><span class="line">    <span class="string">'django.contrib.contenttypes'</span>,</span><br><span class="line">    <span class="string">'django.contrib.sessions'</span>,</span><br><span class="line">    <span class="string">'django.contrib.messages'</span>,</span><br><span class="line">    <span class="string">'django.contrib.staticfiles'</span>,</span><br><span class="line">    <span class="string">'blog'</span></span><br><span class="line">]</span><br></pre></td></tr></table></figure></p>
<h2 id="blog目录"><a href="#blog目录" class="headerlink" title="blog目录"></a>blog目录</h2><p>　　blog<br>　　|–migrations<br>　　|—-__init__.py<br>　　|–__init__.py<br>　　|–admin.py<br>　　|–apps.py<br>　　|–models.py<br>　　|–tests.py<br>　　|–views.py</p>
<p>　　migrations 数据移植（迁移）模块，内容自动生成</p>
<p>　　admin.py    该应用的后台管理系统配置<br>　　apps.py 应用配置（Django-1.9以后自动生成）<br>　　models.py   数据模块，使用ORM框架，类似于MVC结构中的Models(模型)<br>　　test.py 自动化测试模块，在此编写测试脚本（语句）<br>　　views.py    执行响应的代码所在模块，代码逻辑处理地（项目大部分代码在此）</p>
<h2 id="Hello-World"><a href="#Hello-World" class="headerlink" title="Hello World"></a>Hello World</h2><p>　　打开view.py，输入<br><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.shortcuts <span class="keyword">import</span> render</span><br><span class="line"><span class="keyword">from</span> django.http <span class="keyword">import</span> HttpResponse</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span><span class="params">(request)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> HttpResponse(<span class="string">'Hello World!'</span>)</span><br></pre></td></tr></table></figure></p>
<p>　　即编辑blog.views<br>　　每个相应对应一个函数，函数必须返回一个响应<br>　　函数必须存在一个参数，一般约定为request<br>　　每个相应（函数）对应一个URL</p>
<p>在urls.py中，输入<br><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.contrib <span class="keyword">import</span> admin</span><br><span class="line"><span class="keyword">from</span> django.urls <span class="keyword">import</span> path</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> blog.views <span class="keyword">as</span> bv</span><br><span class="line"></span><br><span class="line">urlpatterns = [</span><br><span class="line">    path(<span class="string">'admin/'</span>, admin.site.urls),</span><br><span class="line">    path(<span class="string">'index/'</span>, bv.index),</span><br><span class="line">]</span><br></pre></td></tr></table></figure></p>
<p>　　即编辑urls.py<br>　　url函数放在urlpatterns列表中<br>　　url函数三个参数：URL(正则)，对应方法，名称</p>
<p>　　运行，输入地址<a href="http://localhost:8000/index/" target="_blank" rel="noopener">http://localhost:8000/index/</a> 即可。</p>
<h2 id="第二种URL配置"><a href="#第二种URL配置" class="headerlink" title="第二种URL配置"></a>第二种URL配置</h2><p>　　如果页面很多，都写在根urls.py中就很乱。于是，在根urls.py中引入include，在APP目录下创建urls.py文件，格式与根urls.py相同。</p>
<p>　　更改后：<br><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.contrib <span class="keyword">import</span> admin</span><br><span class="line"><span class="keyword">from</span> django.urls <span class="keyword">import</span> path,include</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> blog.views <span class="keyword">as</span> bv</span><br><span class="line"></span><br><span class="line">urlpatterns = [</span><br><span class="line">    path(<span class="string">'admin/'</span>, admin.site.urls),</span><br><span class="line">    path(<span class="string">'index/'</span>, include(<span class="string">'blog.urls'</span>)),</span><br><span class="line">]</span><br></pre></td></tr></table></figure></p>
<p>　　新blog.urls.py<br><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.urls <span class="keyword">import</span> path</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> . <span class="keyword">import</span> views</span><br><span class="line"></span><br><span class="line">urlpatterns = [</span><br><span class="line">    path(<span class="string">''</span>, views.index),</span><br><span class="line">]</span><br></pre></td></tr></table></figure></p>
<h1 id="Templates"><a href="#Templates" class="headerlink" title="Templates"></a>Templates</h1><p>　　HTML文件使用了Django模板语言（Django Template Language, DTL）</p>
<h2 id="开发第一个Template"><a href="#开发第一个Template" class="headerlink" title="开发第一个Template"></a>开发第一个Template</h2><ul>
<li>在APP的<strong>根目录</strong>下创建名叫Templates的目录</li>
<li>在该目录下创建HTML文件</li>
<li>在views.py中返回<code>render()</code></li>
</ul>
<p>　　html中敲入：<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>Hello blog!<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>　　修改views.py为：<br><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.shortcuts <span class="keyword">import</span> render</span><br><span class="line"><span class="keyword">from</span> django.http <span class="keyword">import</span> HttpResponse</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span><span class="params">(request)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> render(request,<span class="string">'index.html'</span>)</span><br></pre></td></tr></table></figure></p>
<p>　　运行查看效果。</p>
<h2 id="DTL初步使用"><a href="#DTL初步使用" class="headerlink" title="DTL初步使用"></a>DTL初步使用</h2><p>　　<code>render()</code>函数中支持一个dict类型参数<br>　　该字典是后台传递到模板的参数，键为参数名<br>　　在模板中使用<code></code>来直接使用</p>
<p>　　修改views.py<br><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line"><span class="keyword">return</span> render(request,<span class="string">'index.html'</span>,&#123;<span class="string">'hello'</span>:<span class="string">'Hello blog!'</span>&#125;)</span><br><span class="line">...</span><br></pre></td></tr></table></figure></p>
<p>　　修改html<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>&#123;&#123;hello&#125;&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">...</span><br></pre></td></tr></table></figure></p>
<p>　　运行查看效果。</p>
<h1 id="Models"><a href="#Models" class="headerlink" title="Models"></a>Models</h1><p>　　通常，一个Model对应数据库的一张数据表<br>　　Django中Models以类的形式表现<br>　　它包含了一些基本字段以及数据的一些行为</p>
<h2 id="ORM"><a href="#ORM" class="headerlink" title="ORM"></a>ORM</h2><p>　　对象关系映射（Object Relation Mapping）<br>　　实现了对象和数据库之间的映射<br>　　隐藏了数据访问的细节，不需要编写SQL语句</p>
<h2 id="编写Models"><a href="#编写Models" class="headerlink" title="编写Models"></a>编写Models</h2><ul>
<li>在应用根目录下创建models.py，并引入models模块</li>
<li>创建类，继承models.Model，该类即是一张数据表</li>
<li>在类中创建字段</li>
</ul>
<h3 id="字段创建"><a href="#字段创建" class="headerlink" title="字段创建"></a>字段创建</h3><p>　　字段即类里面的属性（变量）<br><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">attr = models.CharField(max_length = <span class="number">64</span>)</span><br></pre></td></tr></table></figure></p>
<h3 id="生成数据表"><a href="#生成数据表" class="headerlink" title="生成数据表"></a>生成数据表</h3><p>　　命令行中进入manage.py同级目录<br>　　执行命令<br><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">python manage.py makemigrations app名（可选）</span><br><span class="line">python manage.py migrate</span><br></pre></td></tr></table></figure></p>
<p>　　不加app名默认给所有app进行数据迁移。</p>
<p>　　cmd将显示：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">E:\PythonCode\myblog&gt;python manage.py makemigrations</span><br><span class="line">Migrations <span class="keyword">for</span> <span class="string">'blog'</span>:</span><br><span class="line">  blog\migrations\0001_initial.py</span><br><span class="line">    - Create model Article</span><br><span class="line"></span><br><span class="line">E:\PythonCode\myblog&gt;python manage.py migrate</span><br><span class="line">Operations to perform:</span><br><span class="line">  Apply all migrations: admin, auth, blog, contenttypes, sessions</span><br><span class="line">Running migrations:</span><br><span class="line">  Applying contenttypes.0001_initial... OK</span><br><span class="line">  Applying auth.0001_initial... OK</span><br><span class="line">  Applying admin.0001_initial... OK</span><br><span class="line">  Applying admin.0002_logentry_remove_auto_add... OK</span><br><span class="line">  Applying admin.0003_logentry_add_action_flag_choices... OK</span><br><span class="line">  Applying contenttypes.0002_remove_content_type_name... OK</span><br><span class="line">  Applying auth.0002_alter_permission_name_max_length... OK</span><br><span class="line">  Applying auth.0003_alter_user_email_max_length... OK</span><br><span class="line">  Applying auth.0004_alter_user_username_opts... OK</span><br><span class="line">  Applying auth.0005_alter_user_last_login_null... OK</span><br><span class="line">  Applying auth.0006_require_contenttypes_0002... OK</span><br><span class="line">  Applying auth.0007_alter_validators_add_error_messages... OK</span><br><span class="line">  Applying auth.0008_alter_user_username_max_length... OK</span><br><span class="line">  Applying auth.0009_alter_user_last_name_max_length... OK</span><br><span class="line">  Applying blog.0001_initial... OK</span><br><span class="line">  Applying sessions.0001_initial... OK</span><br></pre></td></tr></table></figure></p>
<h3 id="生成数据表-1"><a href="#生成数据表-1" class="headerlink" title="生成数据表"></a>生成数据表</h3><p>　　查看<br>　　Django会自动在app/migrations/目录下生成移植文件<br>　　执行命令查看SQL语句<br><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python manage.py sqlmigrate 应用名 文件id</span><br></pre></td></tr></table></figure></p>
<p>　　cmd将显示：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">E:\PythonCode\myblog&gt;python manage.py sqlmigrate blog 0001</span><br><span class="line">BEGIN;</span><br><span class="line">--</span><br><span class="line">-- Create model Article</span><br><span class="line">--</span><br><span class="line">CREATE TABLE <span class="string">"blog_article"</span> (<span class="string">"id"</span> <span class="built_in">integer</span> NOT NULL PRIMARY KEY AUTOINCREMENT, <span class="string">"title"</span> varchar(32) NOT NULL, <span class="string">"content"</span> text NULL);</span><br><span class="line">COMMIT;</span><br></pre></td></tr></table></figure></p>
<p>　　默认sqlite3的数据库在项目根目录下db.sqlite3<br>　　查看并编辑db.sqlite3，使用第三方软件，如SQLite Expert Personal</p>
<h3 id="页面呈现数据"><a href="#页面呈现数据" class="headerlink" title="页面呈现数据"></a>页面呈现数据</h3><h4 id="后台步骤"><a href="#后台步骤" class="headerlink" title="后台步骤"></a>后台步骤</h4><p>　　views.py中import models<br><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">article = models.Article.objects.get(pk = <span class="number">1</span>)</span><br><span class="line">render(request, page, &#123;<span class="string">'article'</span>:article&#125;)</span><br></pre></td></tr></table></figure></p>
<h4 id="后端步骤"><a href="#后端步骤" class="headerlink" title="后端步骤"></a>后端步骤</h4><p>　　模板可直接使用对象以及对象的“.”操作<br><code></code></p>
<p>　　修改html<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>&#123;&#123;article.title&#125;&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h3</span>&gt;</span>&#123;&#123;article.content&#125;&#125;<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>　　运行，查看<a href="http://localhost:8000/index/" target="_blank" rel="noopener">http://localhost:8000/index/</a></p>
<h1 id="Admin"><a href="#Admin" class="headerlink" title="Admin"></a>Admin</h1><p>Django自带的一个功能强大的自动化数据管理界面<br>被授权的用户可直接在Admin中管理数据库<br>Django提供了许多针对Admin的定制功能</p>
<h2 id="配置Admin"><a href="#配置Admin" class="headerlink" title="配置Admin"></a>配置Admin</h2><h3 id="创建用户"><a href="#创建用户" class="headerlink" title="创建用户"></a>创建用户</h3><p>创建超级用户<br><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python manage.py createsuperuser</span><br></pre></td></tr></table></figure></p>
<p>之后要求输入用户名<br>邮箱<br>密码</p>
<p>Admin入口访问地址：localhost:8000/admin/</p>
<p>如需修改成中文版，修改settings.py中LANGUAGE_CODE = ‘zh_Hans’<br>（英文：LANGUAGE_CODE = ‘en-us’）</p>
<h3 id="配置应用"><a href="#配置应用" class="headerlink" title="配置应用"></a>配置应用</h3><p>在应用下admin.py中引入自身的models模块（或里面的模型类）<br>编辑admin.py<br><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> .models <span class="keyword">import</span> Article</span><br><span class="line">admin.site.register(models.Article)</span><br></pre></td></tr></table></figure></p>
<h3 id="修改数据"><a href="#修改数据" class="headerlink" title="修改数据"></a>修改数据</h3><p>点击Article超链接进入Article列表页面，按页面指示修改。</p>
<h4 id="修改数据默认显示名称"><a href="#修改数据默认显示名称" class="headerlink" title="修改数据默认显示名称"></a>修改数据默认显示名称</h4><p>每条都显示的Article object，很不方便，显示文章标题比较好。</p>
<ul>
<li>在Article类下添加一个方法</li>
<li>根据Python版本选择<strong>str</strong>(self) (python3以上)或<strong>unicode</strong>(self) （python2.7）</li>
<li>return self.title</li>
</ul>
<h1 id="博客开发"><a href="#博客开发" class="headerlink" title="博客开发"></a>博客开发</h1><h2 id="页面设计"><a href="#页面设计" class="headerlink" title="页面设计"></a>页面设计</h2><p>　　博客主页面<br>　　博客文章内容页面<br>　　博客撰写页面</p>
<h3 id="主页面内容"><a href="#主页面内容" class="headerlink" title="主页面内容"></a>主页面内容</h3><p>　　文章标题列表，超链接<br>　　发表博客按钮（超链接）</p>
<h4 id="列表编写思路"><a href="#列表编写思路" class="headerlink" title="列表编写思路"></a>列表编写思路</h4><ul>
<li>取出数据库中所有文章对象</li>
<li>将文章对象们打包成列表，传递到前端</li>
<li>前端页面把文章以标题超链接的形式逐个列出</li>
</ul>
<p>　　模板For循环<br><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;%<span class="keyword">for</span> xx <span class="keyword">in</span> xxs%&#125;</span><br><span class="line"><span class="comment"># HTML语句</span></span><br><span class="line">&#123;%endfor%&#125;</span><br></pre></td></tr></table></figure></p>
<p>　　修改views.py<br><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.shortcuts <span class="keyword">import</span> render</span><br><span class="line"><span class="keyword">from</span> django.http <span class="keyword">import</span> HttpResponse</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> . <span class="keyword">import</span> models</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span><span class="params">(request)</span>:</span></span><br><span class="line">    articles = models.Article.objects.all()</span><br><span class="line">    <span class="keyword">return</span> render(request,<span class="string">'index.html'</span>,&#123;<span class="string">'articles'</span>: articles&#125;)</span><br></pre></td></tr></table></figure></p>
<p>　　修改html<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>新文章<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">&#123;% for article in articles %&#125;</span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>&#123;&#123;article.title&#125;&#125;<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">&#123;% endfor %&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<h2 id="页面内容"><a href="#页面内容" class="headerlink" title="页面内容"></a>页面内容</h2><p>　　标题<br>　　文章内容<br>　　修改文章按钮（超链接）</p>
<p>　　在templates中新增article_page.html<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Article Page<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>&#123;&#123;article.title&#125;&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h3</span>&gt;</span>&#123;&#123;article.content&#125;&#125;<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span>/&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>修改文章<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>　　修改views.py<br><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.shortcuts <span class="keyword">import</span> render</span><br><span class="line"><span class="keyword">from</span> django.http <span class="keyword">import</span> HttpResponse</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> . <span class="keyword">import</span> models</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span><span class="params">(request)</span>:</span></span><br><span class="line">    articles = models.Article.objects.all()</span><br><span class="line">    <span class="keyword">return</span> render(request,<span class="string">'index.html'</span>,&#123;<span class="string">'articles'</span>: articles&#125;)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">article_page</span><span class="params">(request, article_id)</span>:</span></span><br><span class="line">    article=models.Article.objects.get(pk = article_id)</span><br><span class="line">    <span class="keyword">return</span> render(request,<span class="string">'article_page.html'</span>,&#123;<span class="string">'article'</span>:article&#125;)</span><br><span class="line">``</span><br><span class="line"><span class="comment">### URL传递参数</span></span><br><span class="line">　　参数写在相应函数中request后，可以有默认值</span><br><span class="line"></span><br><span class="line">　　修改blog下的urls.py</span><br><span class="line">```py</span><br><span class="line"><span class="keyword">from</span> django.urls <span class="keyword">import</span> path</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> . <span class="keyword">import</span> views</span><br><span class="line"></span><br><span class="line">urlpatterns = [</span><br><span class="line">    path(<span class="string">''</span>, views.index),</span><br><span class="line">    path(<span class="string">'article/&lt;article_id&gt;'</span>, views.article_page),</span><br><span class="line">]</span><br></pre></td></tr></table></figure></p>
<p>　　顺便把myblog\urls.py里的index改成blog（非必要，只是更符合博客url）<br><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.contrib <span class="keyword">import</span> admin</span><br><span class="line"><span class="keyword">from</span> django.urls <span class="keyword">import</span> path,include</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> blog.views <span class="keyword">as</span> bv</span><br><span class="line"></span><br><span class="line">urlpatterns = [</span><br><span class="line">    path(<span class="string">'admin/'</span>, admin.site.urls),</span><br><span class="line">    path(<span class="string">'blog/'</span>, include(<span class="string">'blog.urls'</span>)),</span><br><span class="line">]</span><br></pre></td></tr></table></figure></p>
<p>　　运行，输入<a href="http://localhost:8000/blog/article/1" target="_blank" rel="noopener">http://localhost:8000/blog/article/1</a> 查看。</p>
<h3 id="超链接"><a href="#超链接" class="headerlink" title="超链接"></a>超链接</h3><p>　　href后是目标地址，template中可用<br><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;%url <span class="string">'app_name:url_name'</span> param%&#125;</span><br></pre></td></tr></table></figure></p>
<p>　　其中app_name和url_name都在url中配置</p>
<h4 id="再配URL"><a href="#再配URL" class="headerlink" title="再配URL"></a>再配URL</h4><h5 id="uel函数的名称参数"><a href="#uel函数的名称参数" class="headerlink" title="uel函数的名称参数"></a>uel函数的名称参数</h5><p>　　法一：根urls，写在<code>include()</code>的第二个参数位置，<code>namespace=&#39;blog&#39;</code><br>　　法二：应用下则写在<code>url()</code>的第三个参数位置，<code>name=&#39;article&#39;</code><br>　　主要取决于是否使用<code>include</code>引用了另一个url配置文件</p>
<h2 id="撰写页面"><a href="#撰写页面" class="headerlink" title="撰写页面"></a>撰写页面</h2><p>　　标题编辑栏<br>　　文章内容编辑区域<br>　　提交按钮</p>
<p>　　新建edit_page.html<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Edit Page<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">""</span> <span class="attr">method</span>=<span class="string">"post"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span>&gt;</span>文章标题</span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"title"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">label</span>&gt;</span>文章内容</span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"content"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"提交"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>　　views.py新增<br><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">edit_page</span><span class="params">(request)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> render(request,<span class="string">'edit_page.html'</span>)</span><br></pre></td></tr></table></figure></p>
<p>　　blog\urls.py新增<br><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">path(<span class="string">'edit'</span>, views.edit_page),</span><br></pre></td></tr></table></figure></p>
<p>　　运行，输入<a href="http://localhost:8000/blog/edit" target="_blank" rel="noopener">http://localhost:8000/blog/edit</a> 查看。</p>
<h3 id="编辑相应函数"><a href="#编辑相应函数" class="headerlink" title="编辑相应函数"></a>编辑相应函数</h3><p>　　使用<code>request.POST[&#39;参数名&#39;]</code>获取表单数据<br>　　models.Article.objects.create(title, content)创建对象</p>
<h2 id="两个编辑页面"><a href="#两个编辑页面" class="headerlink" title="两个编辑页面"></a>两个编辑页面</h2><p>　　思路：新文章为空，修改文章有内容<br>　　修改文章页面有文章对象<br>　　文章的ID</p>
<p>　　修改数据<br>　　article.title = title<br>　　article.save()</p>
<p>　　修改views.py<br><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">edit_page</span><span class="params">(request, article_id)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> str(article_id) == <span class="string">'0'</span>:</span><br><span class="line">        <span class="keyword">return</span> render(request,<span class="string">'edit_page.html'</span>)</span><br><span class="line">    article = models.Article.objects.get(pk=article_id)</span><br><span class="line">    <span class="keyword">return</span> render(request, <span class="string">'edit_page.html'</span>, &#123;<span class="string">'article'</span>: article&#125;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">edit_action</span><span class="params">(request)</span>:</span></span><br><span class="line">    title = request.POST.get(<span class="string">'title'</span>, <span class="string">'TITLE'</span>)</span><br><span class="line">    content = request.POST.get(<span class="string">'content'</span>, <span class="string">'CONTENT'</span>)</span><br><span class="line">    article_id = request.POST.get(<span class="string">'article_id'</span>, <span class="string">'0'</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> article_id == <span class="string">'0'</span>:</span><br><span class="line">        models.Article.objects.create(title=title, content=content)</span><br><span class="line">        articles = models.Article.objects.all()</span><br><span class="line">        <span class="keyword">return</span> render(request, <span class="string">'index.html'</span>, &#123;<span class="string">'articles'</span>: articles&#125;)</span><br><span class="line"></span><br><span class="line">    article = models.Article.objects.get(pk=article_id)</span><br><span class="line">    article.title = title</span><br><span class="line">    article.content = content</span><br><span class="line">    article.save()</span><br><span class="line">    <span class="keyword">return</span> render(request,<span class="string">'article_page.html'</span>, &#123;<span class="string">'article'</span>: article&#125;)</span><br></pre></td></tr></table></figure></p>
<p>　　修改blog\urls.py<br><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">urlpatterns = [</span><br><span class="line">    path(<span class="string">''</span>, views.index),</span><br><span class="line">    path(<span class="string">'article/(?P&lt;article_id&gt;[0-9]+)$'</span>, views.article_page,name=<span class="string">'article_page'</span>),</span><br><span class="line">    path(<span class="string">'edit/(?P&lt;article_id&gt;[0-9]+)$'</span>, views.edit_page,name=<span class="string">'edit_page'</span>),</span><br><span class="line">    path(<span class="string">'edit/Action$'</span>, views.edit_action,name=<span class="string">'edit_action'</span>),</span><br><span class="line">]</span><br></pre></td></tr></table></figure></p>
<p>　　修改article_page.html<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Article Page<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>&#123;&#123;article.title&#125;&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h3</span>&gt;</span>&#123;&#123;article.content&#125;&#125;<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span>/&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&#123;% url 'blog:edit_page' article.id %&#125;"</span>&gt;</span>修改文章<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>　　修改主页index.html<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&#123;% url 'blog:edit_page' 0 %&#125;"</span>&gt;</span>新文章<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">&#123;% for article in articles %&#125;</span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&#123;% url 'blog:article_page' article.id %&#125;"</span>&gt;</span>&#123;&#123;article.title&#125;&#125;<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">&#123;% endfor %&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>　　修改edit_page.gtml<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Edit Page<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"&#123;% url 'blog:edit_action' %&#125;"</span> <span class="attr">method</span>=<span class="string">"post"</span>&gt;</span></span><br><span class="line">    &#123;% csrf_token %&#125;</span><br><span class="line">    &#123;% if article %&#125;</span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"hidden"</span> <span class="attr">name</span>=<span class="string">"article_id"</span> <span class="attr">value</span>=<span class="string">"&#123;&#123;article.id&#125;&#125;"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span>&gt;</span>文章标题</span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"title"</span> <span class="attr">value</span>=<span class="string">"&#123;&#123;article.title&#125;&#125;"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span>&gt;</span>文章内容</span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"content"</span> <span class="attr">value</span>=<span class="string">"&#123;&#123;article.content&#125;&#125;"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">    &#123;% else %&#125;</span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"hidden"</span> <span class="attr">name</span>=<span class="string">"article_id"</span> <span class="attr">value</span>=<span class="string">"0"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span>&gt;</span>文章标题</span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"title"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span>&gt;</span>文章内容</span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"content"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">    &#123;% endif %&#125;</span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"提交"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<h1 id="Templates过滤器"><a href="#Templates过滤器" class="headerlink" title="Templates过滤器"></a>Templates过滤器</h1><p>　　写在模板中，属于Django模板语言<br>　　可以修改模板中的变量，从而显示不同的内容<br>　　使用<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;value | filter&#125;&#125;</span><br></pre></td></tr></table></figure></p>
<p>e.g.<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;list_nums | length&#125;&#125;</span><br></pre></td></tr></table></figure></p>
<p>　　过滤器可叠加：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;value | filter1 | filter2 | ...&#125;&#125;</span><br></pre></td></tr></table></figure></p>
<p>　　修改edit_page.html<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Edit Page<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"&#123;% url 'blog:edit_action' %&#125;"</span> <span class="attr">method</span>=<span class="string">"post"</span>&gt;</span></span><br><span class="line">    &#123;% csrf_token %&#125;</span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"hidden"</span> <span class="attr">name</span>=<span class="string">"article_id"</span> <span class="attr">value</span>=<span class="string">"&#123;&#123;article.id | default:'0'&#125;&#125;"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span>&gt;</span>文章标题</span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"title"</span> <span class="attr">value</span>=<span class="string">"&#123;&#123;article.title&#125;&#125;"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span>&gt;</span>文章内容</span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"content"</span> <span class="attr">value</span>=<span class="string">"&#123;&#123;article.content&#125;&#125;"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"提交"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<h1 id="Django-Shell"><a href="#Django-Shell" class="headerlink" title="Django Shell"></a>Django Shell</h1><p>　　Python交互式命令行程序，自动引入了项目环境，可使用它与项目进行交互<br>　　使用<br><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">python manage.py shell</span><br><span class="line"><span class="keyword">from</span> blog.models <span class="keyword">import</span> Article</span><br><span class="line">Article.objects.all()</span><br></pre></td></tr></table></figure></p>
<p>　　可以使用它进行调试<br>　　测试未知的方法</p>
<h1 id="Admin增强"><a href="#Admin增强" class="headerlink" title="Admin增强"></a>Admin增强</h1><h2 id="创建admin配置类"><a href="#创建admin配置类" class="headerlink" title="创建admin配置类"></a>创建admin配置类</h2><p>　　class ArticleAdmin(admin.ModelAdmin)<br>　　注册：admin.site.register(Article, ArticleAdmin)</p>
<h2 id="显示其他字段"><a href="#显示其他字段" class="headerlink" title="显示其他字段"></a>显示其他字段</h2><p>　　list_display = (‘title’, ‘content’)<br>　　list_display同时支持tuple和list</p>
<p>　　修改admin.py<br><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.contrib <span class="keyword">import</span> admin</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> .models <span class="keyword">import</span> Article</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ArticleAdmin</span><span class="params">(admin.ModelAdmin)</span>:</span></span><br><span class="line">    list_display = (<span class="string">'title'</span>, <span class="string">'content'</span>,<span class="string">'pub_time'</span>)</span><br><span class="line"></span><br><span class="line">admin.site.register(Article, ArticleAdmin)</span><br></pre></td></tr></table></figure></p>
<p>　　修改models.py<br><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.db <span class="keyword">import</span> models</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Article</span><span class="params">(models.Model)</span>:</span></span><br><span class="line">    title = models.CharField(max_length=<span class="number">32</span>, default=<span class="string">'Title'</span>)</span><br><span class="line">    content=models.TextField(null=<span class="keyword">True</span>)</span><br><span class="line">    pub_time = models.DateTimeField(auto_now=<span class="keyword">True</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__str__</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> self.title</span><br></pre></td></tr></table></figure></p>
<p>　　如果是<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pub_time = models.DateTimeField(null=True)</span><br></pre></td></tr></table></figure></p>
<p>　　则可自己设定时间。</p>
<p>　　修改完代码记得进行数据移植<br><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">python manage.py makemigrations</span><br><span class="line">python manage.py migrate</span><br></pre></td></tr></table></figure></p>
<h2 id="过滤器"><a href="#过滤器" class="headerlink" title="过滤器"></a>过滤器</h2><p>　　list_filter = (‘pub_time’,)<br>　　注意有个逗号</p>
<h1 id="相关资料"><a href="#相关资料" class="headerlink" title="相关资料"></a>相关资料</h1><p><a href="https://docs.djangoproject.com/en/2.1/ref/" target="_blank" rel="noopener">Django API Reference</a></p>
<h1 id="代码下载"><a href="#代码下载" class="headerlink" title="代码下载"></a>代码下载</h1><p><a href="https://github.com/hubojing/django-blog-demo" target="_blank" rel="noopener">django-blog-demo</a></p>
<hr>
<p>hexo天坑：<br>遇到 两个大括号 以及 一个大括号一个% 一定放入代码行（如下），<code>这样是不行的</code>。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;&#125;&#125;</span><br><span class="line">&#123;%%&#125;</span><br></pre></td></tr></table></figure></p>
<p>排查这个bug花了我半个小时…</p>
]]></content>
      
        <categories>
            
            <category> 互联网 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Python </tag>
            
            <tag> Django </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[新年Flag]]></title>
      <url>https://hubojing.github.io/2019/01/01/%E6%96%B0%E5%B9%B4Flag/</url>
      <content type="html"><![CDATA[<div align="left"><br><img src="https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1546778719714&di=dc8a0026620328217ea579b8991c2354&imgtype=0&src=http%3A%2F%2Fpic2.zhimg.com%2Fv2-673bcb24e3663cabbeb18216130e8d05_1200x500.jpg" width="300" height="180" style="float:right;"><br><br><br>　　<strong>简短地写一写今年的规划。</strong><br><br><br> </div>

<a id="more"></a>
<p>　　元旦快乐！</p>
<p>　　2019年刚刚开始，不过我总有一种2019已经结束的错觉……<br>　　去年元旦前夕洋洋洒洒写了不少，2018也有很多事情可写，但可能不是一篇两篇写得下的……</p>
<p>　　去年我只立了两条Flag：<br>　　1. 每日看足1小时技术类图书<br>　　2. 不要熬夜</p>
<p>　　验收：<br>　　第一条算自己基本做到了吧，不过手头还有一叠书没看，不少时候也是利用的碎片化时间阅读。<br>　　第二条2018年上半年没做到，下半年基本做到了。</p>
<p>　　今年的Flag：<br>　　1. 不要熬夜，加强锻炼<br>　　2. 技术方面基础和实战两头抓<br>　　3. 提高算法能力，首先从多做题开始<br>　　4. 继续提高英语水平，尤其是计算机英语<br>　　5. 研究方向的趋向性研讨</p>
<p>　　2019年理应是一个自我技术能力快速提高的一年。</p>
<p>　　之前有朋友提醒我更博，Thanks♪(･ω･)ﾉ。2018年是忙碌的一年，其实也并非从八月起就停更了。只是那段时间折腾，开了一个微信公众号：玩代码，并且打算在上面更完关于OpenCV学习的一个系列笔记。这个系列可能文章比较多，但每篇篇幅较短，质量也可能参差不齐，因为主要是我进行自我查阅和复习使用。我之前没有和任何人提及过该公众号，只是在github上提交了部分代码。感谢各位默默关注。<br>　　可以说，公众号目前只是一个我折腾的玩具，技术博客依然是我的主要记录地。不过后期也许在公众号写点技术方面别的东西（比如一些日常写代码的bug或者计算机相关的新闻感想？）技术公众号和技术博客的分界点在哪，还没想好。<br>　　不过公众号借助微信的开发平台，很多方面省事省力。贴图也不用担心哪天图就挂了。我前几年写的文章不少配图失效了，而我当时也没有备份，算是找不到了。最初用极简图床丢了一波图，后来用七牛扣了一波钱，现在用VSCode写markdown，图床外链也不能实时显示。现在写文章怕丢图还得自我先备份，着实有些麻烦。关于这方面，还是得想想有没有什么好办法。</p>
<p>　　感觉没图太单调<br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="https://github.com/hubojing/BlogImages/blob/master/%E6%96%B0%E5%B9%B4Flag%E2%80%94%E2%80%94%E6%88%91%E7%9A%84%E7%9F%A5%E4%B9%8E.jpg?raw=true" alt="2018我的知乎" title="">
                </div>
                <div class="image-caption">2018我的知乎</div>
            </figure><br>　　跟上时代，未来必是人工智能的世界。</p>
<p>　　2019，扬帆起航吧。</p>
]]></content>
      
        <categories>
            
            <category> 杂谈 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 杂谈 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[C++面向对象程序设计（侯捷）笔记]]></title>
      <url>https://hubojing.github.io/2018/12/27/C-%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%EF%BC%88%E4%BE%AF%E6%8D%B7%EF%BC%89%E7%AC%94%E8%AE%B0/</url>
      <content type="html"><![CDATA[<div align="left"><br><img src="https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1550076388605&di=ccc7e1012e5eadf4fdefe9ed6bee1170&imgtype=0&src=http%3A%2F%2Fimg.mp.itc.cn%2Fupload%2F20170622%2F57ea5e537b91482b93347c7254ee59dd_th.jpg" width="300" height="180" style="float:right;"><br><br><br>　　<strong>侯捷老师带我飞，再学习C++系列。</strong><br><br><br> </div>

<a id="more"></a>
<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>　　再复习C++，现整理笔记如下。（以下【注】为我的注释）<br>　　写正规大气的C++代码。感谢侯捷老师！</p>
<h1 id="C-编程简介"><a href="#C-编程简介" class="headerlink" title="C++编程简介"></a>C++编程简介</h1><h2 id="你应具备的基础"><a href="#你应具备的基础" class="headerlink" title="你应具备的基础"></a>你应具备的基础</h2><ul>
<li>曾学过某种procedural language(C语言)<br> 变量(variables)<br> 类型(types):int, float, char, struct …<br> 作用域(scope)<br> 循环(loops):while, for<br> 流程控制：if-else, switch-case</li>
<li>知道一个程序需要编译、连结才能被执行</li>
<li>知道如何编译和连结（如何建立一个可运行程序）</li>
</ul>
<p>【注】台湾译法也许有某些不同，如此处“连结”。本笔记不改变作者用词。</p>
<h2 id="我们的目标"><a href="#我们的目标" class="headerlink" title="我们的目标"></a>我们的目标</h2><ul>
<li>培养正规的、大气的编程习惯</li>
<li>以良好的方式编写C++ class(Object Based)<ul>
<li>class without pointer members  – Complex</li>
<li>class with pointer members – String</li>
</ul>
</li>
<li>学习Classes之间的关系(Objected Oriented)<ul>
<li>继承（inheritance）</li>
<li>复合（composition）</li>
<li>委托（delegation） </li>
</ul>
</li>
</ul>
<h2 id="你将获得的代码"><a href="#你将获得的代码" class="headerlink" title="你将获得的代码"></a>你将获得的代码</h2><p>complex.h<br>complex-test.cpp</p>
<p>string.h<br>string-test.cpp</p>
<p>oop-demo.h<br>oop-test.cpp</p>
<h2 id="C-的历史"><a href="#C-的历史" class="headerlink" title="C++的历史"></a>C++的历史</h2><ul>
<li>B语言（1969）</li>
<li>C语言（1972）</li>
<li>C++语言（1983）<br>(new C -&gt; C with Class -&gt;C++)</li>
<li>Java语言</li>
<li>C#语言</li>
</ul>
<h2 id="C-演化"><a href="#C-演化" class="headerlink" title="C++演化"></a>C++演化</h2><ul>
<li>C++ 98(1.0)</li>
<li>C++ 03(TR1, Technical Report 1)</li>
<li>C++ 11(2.0)</li>
<li>C++ 14</li>
</ul>
<p>C++:C++语言、C++标准库</p>
<h2 id="Bibliography-书目志"><a href="#Bibliography-书目志" class="headerlink" title="Bibliography(书目志)"></a>Bibliography(书目志)</h2><ol>
<li>C++ Primer</li>
<li>The C++ PROGRAMMING LANGUAGE</li>
<li>Effective C++</li>
<li>THE C++ STANDARD LIBRARY</li>
<li>STL源码剖析</li>
</ol>
<h1 id="头文件与类的声明"><a href="#头文件与类的声明" class="headerlink" title="头文件与类的声明"></a>头文件与类的声明</h1><h2 id="C-vs-C-关于数据和函数"><a href="#C-vs-C-关于数据和函数" class="headerlink" title="C vs C++,关于数据和函数"></a>C vs C++,关于数据和函数</h2><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="https://github.com/hubojing/BlogImages/blob/9d26e12a3e8f9bb1b75015884287637c9af86692/C++%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%EF%BC%88%E4%BE%AF%E6%8D%B7%EF%BC%89%E7%AC%94%E8%AE%B0%E2%80%94%E2%80%94C%20vs%20C++.png?raw=true" alt="C vs C++" title="">
                </div>
                <div class="image-caption">C vs C++</div>
            </figure>
<h2 id="C-关于数据和函数"><a href="#C-关于数据和函数" class="headerlink" title="C++,关于数据和函数"></a>C++,关于数据和函数</h2><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="https://github.com/hubojing/BlogImages/blob/master/C++%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%EF%BC%88%E4%BE%AF%E6%8D%B7%EF%BC%89%E7%AC%94%E8%AE%B0%E2%80%94%E2%80%94C++,%E5%85%B3%E4%BA%8E%E6%95%B0%E6%8D%AE%E5%92%8C%E5%87%BD%E6%95%B0.png?raw=true" alt="C++,关于数据和函数" title="">
                </div>
                <div class="image-caption">C++,关于数据和函数</div>
            </figure>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">complex</span> <span class="title">c1</span><span class="params">(<span class="number">2</span>,<span class="number">1</span>)</span></span>;</span><br><span class="line"><span class="keyword">complex</span> c2;</span><br><span class="line"><span class="keyword">complex</span>* pc = <span class="keyword">new</span> <span class="keyword">complex</span>(<span class="number">0</span>,<span class="number">1</span>);</span><br></pre></td></tr></table></figure>
<p>【注】数据可以有很多份，函数只有一份。</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="built_in">string</span> <span class="title">s1</span><span class="params">(<span class="string">"Hello"</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="built_in">string</span> <span class="title">s2</span><span class="params">(<span class="string">"World"</span>)</span></span>;</span><br><span class="line"><span class="built_in">string</span>* ps = <span class="keyword">new</span> <span class="built_in">string</span>;</span><br></pre></td></tr></table></figure>
<h2 id="Object-Based-基于对象-vs-Object-Oriented-面向对象"><a href="#Object-Based-基于对象-vs-Object-Oriented-面向对象" class="headerlink" title="Object Based(基于对象) vs Object Oriented(面向对象)"></a>Object Based(基于对象) vs Object Oriented(面向对象)</h2><p>Object Based:面向的是单一class的设计<br>Object Oriented:面对的是多重classes的设计，classes和classes之间的关系。</p>
<h2 id="我们的第一个C-程序"><a href="#我们的第一个C-程序" class="headerlink" title="我们的第一个C++程序"></a>我们的第一个C++程序</h2><p>Classes的两个经典分类：</p>
<ul>
<li>Class without pointer member(s)<br>complex</li>
<li>Class with pointer member(s)<br>string</li>
</ul>
<h2 id="C-programs代码基本形式"><a href="#C-programs代码基本形式" class="headerlink" title="C++ programs代码基本形式"></a>C++ programs代码基本形式</h2><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="https://github.com/hubojing/BlogImages/blob/master/C++%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%EF%BC%88%E4%BE%AF%E6%8D%B7%EF%BC%89%E7%AC%94%E8%AE%B0%E2%80%94%E2%80%94C++%E4%BB%A3%E7%A0%81%E5%9F%BA%E6%9C%AC%E5%BD%A2%E5%BC%8F.png?raw=true" alt="代码基本形式" title="">
                </div>
                <div class="image-caption">代码基本形式</div>
            </figure>
<p>延伸文件名（extension file name）不一定是.h或.cpp，也可能是.hpp或其他或甚至无延伸名。</p>
<h2 id="Output-C-vs-C"><a href="#Output-C-vs-C" class="headerlink" title="Output, C++ vs. C"></a>Output, C++ vs. C</h2><p>C++<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">7</span>;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt; <span class="string">"i="</span> &lt;&lt; i &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>C<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">include &lt;stdio.h&gt;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">7</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"i=%d \n"</span>, i);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h2 id="Header-头文件-中的防卫式声明"><a href="#Header-头文件-中的防卫式声明" class="headerlink" title="Header(头文件)中的防卫式声明"></a>Header(头文件)中的防卫式声明</h2><p>guard(防卫式声明)<br>complex.h<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> __COMPLEX__</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> __COMPLEX__</span></span><br><span class="line"></span><br><span class="line">...</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br></pre></td></tr></table></figure></p>
<p>【注】如果xxx已经定义过了，则不进入下方的定义。 </p>
<p>complex-test.h</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"complex.h"</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">complex</span> <span class="title">c1</span><span class="params">(<span class="number">2</span>,<span class="number">1</span>)</span></span>;</span><br><span class="line">    <span class="keyword">complex</span> c2;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; c1 &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; c2 &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">    c2 = c1 + <span class="number">5</span>;</span><br><span class="line">    c2 = <span class="number">7</span> + c1;</span><br><span class="line">    c2 = c1 + c2;</span><br><span class="line">    c2 += c1;</span><br><span class="line">    c2 += <span class="number">3</span>;</span><br><span class="line">    c2 = -c1;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; (c1 == c2) &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; (c1 != c2) &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; conj(c1) &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="Header-头文件-的布局"><a href="#Header-头文件-的布局" class="headerlink" title="Header(头文件)的布局"></a>Header(头文件)的布局</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> __COMPLEX__</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> __COMPLEX__</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//forward declarations(前置声明)</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ostream</span>;</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">complex</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">complex</span>&amp;</span><br><span class="line">    __doapl (<span class="keyword">complex</span>* ths, <span class="keyword">const</span> <span class="keyword">complex</span>&amp; r);</span><br><span class="line"></span><br><span class="line"><span class="comment">//class declarations(类-声明)</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">complex</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    ...</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//class definiton(类-定义)</span></span><br><span class="line"><span class="keyword">complex</span>::function ...</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br></pre></td></tr></table></figure>
<h2 id="class的声明-declaration"><a href="#class的声明-declaration" class="headerlink" title="class的声明(declaration)"></a>class的声明(declaration)</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">complex</span>//<span class="title">class</span> <span class="title">head</span></span></span><br><span class="line"><span class="class">&#123;</span><span class="comment">//class body</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="keyword">complex</span> (<span class="keyword">double</span> r = <span class="number">0</span>, <span class="keyword">double</span> i = <span class="number">0</span>)</span><br><span class="line">    : re (r), im(i)</span><br><span class="line">    &#123;&#125;</span><br><span class="line">    <span class="keyword">complex</span>&amp; <span class="keyword">operator</span> += (<span class="keyword">const</span> <span class="keyword">complex</span>&amp;);</span><br><span class="line">    <span class="function"><span class="keyword">double</span> <span class="title">real</span> <span class="params">()</span> <span class="keyword">const</span> </span>&#123;<span class="keyword">return</span> re;&#125;</span><br><span class="line">    <span class="function"><span class="keyword">double</span> <span class="title">imag</span> <span class="params">()</span> <span class="keyword">const</span> </span>&#123;reutn im;&#125;<span class="comment">//有些函数在此直接定义，另一些在body之外定义</span></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    <span class="keyword">double</span> re, im;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">friend</span> <span class="keyword">complex</span>&amp; __doapl (<span class="keyword">complex</span>*, <span class="keyword">const</span> <span class="keyword">complex</span>&amp;);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<p>使用：<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">complex</span> <span class="title">c1</span><span class="params">(<span class="number">2</span>,<span class="number">1</span>)</span></span>;</span><br><span class="line">    <span class="keyword">complex</span> c2;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h2 id="class-template-模板-简介"><a href="#class-template-模板-简介" class="headerlink" title="class template(模板)简介"></a>class template(模板)简介</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">complex</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="keyword">complex</span> (T r = <span class="number">0</span>, T i = <span class="number">0</span>)</span><br><span class="line">    : re (r), im(i)</span><br><span class="line">    &#123;&#125;</span><br><span class="line">    <span class="keyword">complex</span>&amp; <span class="keyword">operator</span> += (<span class="keyword">const</span> <span class="keyword">complex</span>&amp;);</span><br><span class="line">    <span class="function">T <span class="title">real</span> <span class="params">()</span> <span class="keyword">const</span> </span>&#123;<span class="keyword">return</span> re;&#125;</span><br><span class="line">    <span class="function">T <span class="title">imag</span> <span class="params">()</span> <span class="keyword">const</span> </span>&#123;reutn im;&#125;<span class="comment">//有些函数在此直接定义，另一些在body之外定义</span></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    T re, im;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">friend</span> <span class="keyword">complex</span>&amp; __doapl (<span class="keyword">complex</span>*, <span class="keyword">const</span> <span class="keyword">complex</span>&amp;);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<p>使用：<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="keyword">complex</span>&lt;<span class="keyword">double</span>&gt; c1(<span class="number">2.5</span>,<span class="number">1.5</span>);</span><br><span class="line">    <span class="keyword">complex</span>&lt;<span class="keyword">int</span>&gt; c2(<span class="number">2</span>,<span class="number">6</span>);</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h1 id="构造函数"><a href="#构造函数" class="headerlink" title="构造函数"></a>构造函数</h1><h2 id="inline-内联-函数"><a href="#inline-内联-函数" class="headerlink" title="inline(内联)函数"></a>inline(内联)函数</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">complex</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="keyword">complex</span> (<span class="keyword">double</span> r = <span class="number">0</span>, <span class="keyword">double</span> i = <span class="number">0</span>)</span><br><span class="line">    : re (r), im(i)</span><br><span class="line">    &#123;&#125;<span class="comment">//函数若在class body内定义完成，便成为inline候选人</span></span><br><span class="line">    <span class="keyword">complex</span>&amp; <span class="keyword">operator</span> += (<span class="keyword">const</span> <span class="keyword">complex</span>&amp;);</span><br><span class="line">    <span class="function"><span class="keyword">double</span> <span class="title">real</span> <span class="params">()</span> <span class="keyword">const</span> </span>&#123;<span class="keyword">return</span> re;&#125;<span class="comment">//可以inline</span></span><br><span class="line">    <span class="function"><span class="keyword">double</span> <span class="title">imag</span> <span class="params">()</span> <span class="keyword">const</span> </span>&#123;reutn im;&#125;<span class="comment">//可以inline</span></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    <span class="keyword">double</span> re, im;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">friend</span> <span class="keyword">complex</span>&amp; __doapl (<span class="keyword">complex</span>*, <span class="keyword">const</span> <span class="keyword">complex</span>&amp;);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<p>使用：<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">inline</span> <span class="keyword">double</span></span><br><span class="line">imag(<span class="keyword">const</span> <span class="keyword">complex</span>&amp; x)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">return</span> x.imag ();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>【注】函数太复杂，就不能inline。</p>
<h2 id="access-level-访问级别"><a href="#access-level-访问级别" class="headerlink" title="access level(访问级别)"></a>access level(访问级别)</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">complex</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="keyword">complex</span> (<span class="keyword">double</span> r = <span class="number">0</span>, <span class="keyword">double</span> i = <span class="number">0</span>)</span><br><span class="line">    : re (r), im(i)</span><br><span class="line">    &#123;&#125;</span><br><span class="line">    <span class="keyword">complex</span>&amp; <span class="keyword">operator</span> += (<span class="keyword">const</span> <span class="keyword">complex</span>&amp;);</span><br><span class="line">    <span class="function"><span class="keyword">double</span> <span class="title">real</span> <span class="params">()</span> <span class="keyword">const</span> </span>&#123;<span class="keyword">return</span> re;&#125;</span><br><span class="line">    <span class="function"><span class="keyword">double</span> <span class="title">imag</span> <span class="params">()</span> <span class="keyword">const</span> </span>&#123;reutn im;&#125;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    <span class="keyword">double</span> re, im;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">friend</span> <span class="keyword">complex</span>&amp; __doapl (<span class="keyword">complex</span>*, <span class="keyword">const</span> <span class="keyword">complex</span>&amp;);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<p>错误使用：<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">complex</span> <span class="title">c1</span><span class="params">(<span class="number">2</span>,<span class="number">1</span>)</span></span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; c1.re;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; c1.im;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>正确使用：<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">complex</span> <span class="title">c1</span><span class="params">(<span class="number">2</span>,<span class="number">1</span>)</span></span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; c1.real();</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; c1.imag();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h2 id="constructor-ctor-构造函数"><a href="#constructor-ctor-构造函数" class="headerlink" title="constructor(ctor,构造函数)"></a>constructor(ctor,构造函数)</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">complex</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="keyword">complex</span> (<span class="keyword">double</span> r = <span class="number">0</span>, <span class="keyword">double</span> i = <span class="number">0</span>)<span class="comment">//default argument(默认实参)</span></span><br><span class="line">    : re (r), im(i)<span class="comment">//initialization list(初值列，初始列)</span></span><br><span class="line">    &#123; &#125;</span><br><span class="line">    <span class="keyword">complex</span>&amp; <span class="keyword">operator</span> += (<span class="keyword">const</span> <span class="keyword">complex</span>&amp;);</span><br><span class="line">    <span class="function"><span class="keyword">double</span> <span class="title">real</span> <span class="params">()</span> <span class="keyword">const</span> </span>&#123;<span class="keyword">return</span> re;&#125;</span><br><span class="line">    <span class="function"><span class="keyword">double</span> <span class="title">imag</span> <span class="params">()</span> <span class="keyword">const</span> </span>&#123;reutn im;&#125;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    <span class="keyword">double</span> re, im;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">friend</span> <span class="keyword">complex</span>&amp; __doapl (<span class="keyword">complex</span>*, <span class="keyword">const</span> <span class="keyword">complex</span>&amp;);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<p>【注】其他函数也可以有默认值。构造函数没有返回值类型。initialization list(初值列，初始列)上下三行等价于<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">complex</span> (<span class="keyword">double</span> r = <span class="number">0</span>, <span class="keyword">double</span> i = <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">    re = r; im = i;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>但建议用初始列方式写。初始化+赋值。初始列就是初始化的阶段。</p>
<p>使用：<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">complex</span> <span class="title">c1</span><span class="params">(<span class="number">2</span>,<span class="number">1</span>)</span></span>;</span><br><span class="line">    <span class="keyword">complex</span> c2;<span class="comment">//没有指明，用默认值</span></span><br><span class="line">    <span class="keyword">complex</span>* p = <span class="keyword">new</span> <span class="keyword">complex</span>(<span class="number">4</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>【注】不带指针的类多半不用写析构函数。</p>
<h2 id="ctor-构造函数-可以有很多个-overloading-重载"><a href="#ctor-构造函数-可以有很多个-overloading-重载" class="headerlink" title="ctor(构造函数)可以有很多个 - overloading(重载)"></a>ctor(构造函数)可以有很多个 - overloading(重载)</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">complex</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="keyword">complex</span> (<span class="keyword">double</span> r = <span class="number">0</span>, <span class="keyword">double</span> i = <span class="number">0</span>)</span><br><span class="line">    : re (r), im(i)</span><br><span class="line">    &#123; &#125;</span><br><span class="line">    <span class="keyword">complex</span> () : re(<span class="number">0</span>), im(<span class="number">0</span>) &#123; &#125;<span class="comment">//？！</span></span><br><span class="line">    <span class="keyword">complex</span>&amp; <span class="keyword">operator</span> += (<span class="keyword">const</span> <span class="keyword">complex</span>&amp;);</span><br><span class="line">    <span class="function"><span class="keyword">double</span> <span class="title">real</span> <span class="params">()</span> <span class="keyword">const</span> </span>&#123;<span class="keyword">return</span> re;&#125;</span><br><span class="line">    <span class="function"><span class="keyword">double</span> <span class="title">imag</span> <span class="params">()</span> <span class="keyword">const</span> </span>&#123;reutn im;&#125;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    <span class="keyword">double</span> re, im;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">friend</span> <span class="keyword">complex</span>&amp; __doapl (<span class="keyword">complex</span>*, <span class="keyword">const</span> <span class="keyword">complex</span>&amp;);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">real</span><span class="params">(<span class="keyword">double</span> r)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    re = r;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>real函数编译后的实际名称可能是：<br>?real@Complex@@QBENXZ<br>?real@Complex@@QAENABN@Z<br>取决于编译器。</p>
<p>【注】重载表面名字相同，其实在编译器内名字不同。</p>
<p>构造函数重载：<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    Complex c1;</span><br><span class="line">    <span class="function">Complex <span class="title">c2</span><span class="params">()</span></span>;<span class="comment">//写法不同，意思相同</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>所以？！处的构造函数不能这样重载。</p>
<h1 id="参数传递与返回值"><a href="#参数传递与返回值" class="headerlink" title="参数传递与返回值"></a>参数传递与返回值</h1><h2 id="constructor-ctor-构造函数-被放在private区"><a href="#constructor-ctor-构造函数-被放在private区" class="headerlink" title="constructor(ctor,构造函数)被放在private区"></a>constructor(ctor,构造函数)被放在private区</h2><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="https://github.com/hubojing/BlogImages/blob/master/C++面向对象程序设计（侯捷）笔记——ctor被放在private区.png?raw=true" alt="ctor被放在private区" title="">
                </div>
                <div class="image-caption">ctor被放在private区</div>
            </figure>
<p>以下无法使用：<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">complex</span> <span class="title">c1</span><span class="params">(<span class="number">2</span>,<span class="number">1</span>)</span></span>;</span><br><span class="line"><span class="keyword">complex</span> c2;</span><br></pre></td></tr></table></figure></p>
<p>那么是不是说ctor不应该放在private区呢？也不是。</p>
<p>Singleton(单例)设计模式：<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">static</span> A&amp; <span class="title">getInstance</span><span class="params">()</span></span>;</span><br><span class="line">    setup() &#123;...&#125;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    A();</span><br><span class="line">    A(<span class="keyword">const</span> A&amp; rhs);</span><br><span class="line">    ...</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">A&amp; A::getInstance()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">static</span> A a;</span><br><span class="line">    <span class="keyword">return</span> a;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>使用：<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">A::getInstance().setup();</span><br></pre></td></tr></table></figure></p>
<h2 id="const-member-functions-常量成员函数"><a href="#const-member-functions-常量成员函数" class="headerlink" title="const member functions(常量成员函数)"></a>const member functions(常量成员函数)</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">complex</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="keyword">complex</span> (<span class="keyword">double</span> r = <span class="number">0</span>, <span class="keyword">double</span> i = <span class="number">0</span>)</span><br><span class="line">    : re (r), im(i)</span><br><span class="line">    &#123; &#125;</span><br><span class="line">    <span class="keyword">complex</span>&amp; <span class="keyword">operator</span> += (<span class="keyword">const</span> <span class="keyword">complex</span>&amp;);</span><br><span class="line">    <span class="function"><span class="keyword">double</span> <span class="title">real</span> <span class="params">()</span> <span class="keyword">const</span> </span>&#123;<span class="keyword">return</span> re;&#125;</span><br><span class="line">    <span class="function"><span class="keyword">double</span> <span class="title">imag</span> <span class="params">()</span> <span class="keyword">const</span> </span>&#123;reutn im;&#125;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    <span class="keyword">double</span> re, im;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">friend</span> <span class="keyword">complex</span>&amp; __doapl (<span class="keyword">complex</span>*, <span class="keyword">const</span> <span class="keyword">complex</span>&amp;);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<p>正确使用：<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">complex</span> <span class="title">c1</span><span class="params">(<span class="number">2</span>,<span class="number">1</span>)</span></span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; c1.real();</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; c1.imag();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>【注】不改变数据就加const。</p>
<p>？！<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">const</span> <span class="keyword">complex</span> <span class="title">c1</span><span class="params">(<span class="number">2</span>,<span class="number">1</span>)</span></span>;<span class="comment">//我这个值是不能改变的哦</span></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; c1.real();<span class="comment">//万一real函数没写const，就可能改data。就会产生矛盾</span></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; c2.imag();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h2 id="参数传递：pass-by-value-vs-pass-by-reference-to-const"><a href="#参数传递：pass-by-value-vs-pass-by-reference-to-const" class="headerlink" title="参数传递：pass by value vs. pass by reference(to const)"></a>参数传递：pass by value vs. pass by reference(to const)</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">complex</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="keyword">complex</span> (<span class="keyword">double</span> r = <span class="number">0</span>, <span class="keyword">double</span> i = <span class="number">0</span>)</span><br><span class="line">    : re (r), im(i)</span><br><span class="line">    &#123; &#125;</span><br><span class="line">    <span class="keyword">complex</span>&amp; <span class="keyword">operator</span> += (<span class="keyword">const</span> <span class="keyword">complex</span>&amp;);<span class="comment">//传引用速度很快哦，并且不能改我，我加了const哦。如果你改我，编译器就会报错</span></span><br><span class="line">    <span class="function"><span class="keyword">double</span> <span class="title">real</span> <span class="params">()</span> <span class="keyword">const</span> </span>&#123;<span class="keyword">return</span> re;&#125;</span><br><span class="line">    <span class="function"><span class="keyword">double</span> <span class="title">imag</span> <span class="params">()</span> <span class="keyword">const</span> </span>&#123;reutn im;&#125;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    <span class="keyword">double</span> re, im;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">friend</span> <span class="keyword">complex</span>&amp; __doapl (<span class="keyword">complex</span>*, <span class="keyword">const</span> <span class="keyword">complex</span>&amp;);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<p>没有const:<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">ostream&amp;</span><br><span class="line"><span class="keyword">operator</span> &lt;&lt; (ostream&amp; os, <span class="keyword">const</span> <span class="keyword">complex</span>&amp; x)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">return</span> os &lt;&lt; <span class="string">'('</span> &lt;&lt; real (x) &lt;&lt; <span class="string">','</span></span><br><span class="line">              &lt;&lt; imag (x) &lt;&lt; <span class="string">')'</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>【注】pass by value压到栈里。大的遵循守则，尽量不要pass by value。在C里用指针。C++ pass by reference。<br>如果不希望对方改数据，加const。</p>
<p>使用：<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">complex</span> <span class="title">c1</span><span class="params">(<span class="number">2</span>,<span class="number">1</span>)</span></span>;</span><br><span class="line">    <span class="keyword">complex</span> c2;</span><br><span class="line"></span><br><span class="line">    c2 += c1;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; c2;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h2 id="返回值传递：return-by-value-vs-return-by-reference-to-const"><a href="#返回值传递：return-by-value-vs-return-by-reference-to-const" class="headerlink" title="返回值传递：return by value vs. return by reference(to const)"></a>返回值传递：return by value vs. return by reference(to const)</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">complex</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="keyword">complex</span> (<span class="keyword">double</span> r = <span class="number">0</span>, <span class="keyword">double</span> i = <span class="number">0</span>)</span><br><span class="line">    : re (r), im(i)</span><br><span class="line">    &#123; &#125;</span><br><span class="line">    <span class="keyword">complex</span>&amp; <span class="keyword">operator</span> += (<span class="keyword">const</span> <span class="keyword">complex</span>&amp;);</span><br><span class="line">    <span class="function"><span class="keyword">double</span> <span class="title">real</span> <span class="params">()</span> <span class="keyword">const</span> </span>&#123;<span class="keyword">return</span> re;&#125;</span><br><span class="line">    <span class="function"><span class="keyword">double</span> <span class="title">imag</span> <span class="params">()</span> <span class="keyword">const</span> </span>&#123;reutn im;&#125;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    <span class="keyword">double</span> re, im;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">friend</span> <span class="keyword">complex</span>&amp; __doapl (<span class="keyword">complex</span>*, <span class="keyword">const</span> <span class="keyword">complex</span>&amp;);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<h2 id="friend-友元"><a href="#friend-友元" class="headerlink" title="friend(友元)"></a>friend(友元)</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">complex</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="keyword">complex</span> (<span class="keyword">double</span> r = <span class="number">0</span>, <span class="keyword">double</span> i = <span class="number">0</span>)</span><br><span class="line">    : re (r), im(i)</span><br><span class="line">    &#123; &#125;</span><br><span class="line">    <span class="keyword">complex</span>&amp; <span class="keyword">operator</span> += (<span class="keyword">const</span> <span class="keyword">complex</span>&amp;);</span><br><span class="line">    <span class="function"><span class="keyword">double</span> <span class="title">real</span> <span class="params">()</span> <span class="keyword">const</span> </span>&#123;<span class="keyword">return</span> re;&#125;</span><br><span class="line">    <span class="function"><span class="keyword">double</span> <span class="title">imag</span> <span class="params">()</span> <span class="keyword">const</span> </span>&#123;reutn im;&#125;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    <span class="keyword">double</span> re, im;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">friend</span> <span class="keyword">complex</span>&amp; __doapl (<span class="keyword">complex</span>*, <span class="keyword">const</span> <span class="keyword">complex</span>&amp;);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<p>使用：<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">inline</span> <span class="keyword">complex</span>&amp;</span><br><span class="line">__doapl (<span class="keyword">complex</span>* ths, <span class="keyword">const</span> <span class="keyword">complex</span>&amp; r)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">this</span>-&gt;re += r.re;</span><br><span class="line">    <span class="keyword">this</span>-&gt;im += r.im;<span class="comment">//自由取得friend的private成员</span></span><br><span class="line">    <span class="keyword">return</span> *ths;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>【注】friend打破封装。</p>
<h2 id="相同class的各个objects互为friends-友元"><a href="#相同class的各个objects互为friends-友元" class="headerlink" title="相同class的各个objects互为friends(友元)"></a>相同class的各个objects互为friends(友元)</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">complex</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="keyword">complex</span> (<span class="keyword">double</span> r = <span class="number">0</span>; <span class="keyword">double</span> i = <span class="number">0</span>)</span><br><span class="line">    : re (r), im (i)</span><br><span class="line">    &#123; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">func</span><span class="params">(<span class="keyword">const</span> <span class="keyword">complex</span>&amp; param)</span></span></span><br><span class="line"><span class="function">    </span>&#123; <span class="keyword">return</span> param.re + param.im; &#125;<span class="comment">//这个怎么可以直接拿咧~</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    <span class="keyword">double</span> re, im;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<p>使用：<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">complex</span> <span class="title">c1</span><span class="params">(<span class="number">2</span>,<span class="number">1</span>)</span></span>;</span><br><span class="line">    <span class="keyword">complex</span> c2;</span><br><span class="line"></span><br><span class="line">    c2.func(c1);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h2 id="class-body外的各种定义-definitions"><a href="#class-body外的各种定义-definitions" class="headerlink" title="class body外的各种定义(definitions)"></a>class body外的各种定义(definitions)</h2><p>什么情况下可以pass by reference<br>什么情况下可以return by reference</p>
<p>do assignment plus<br>第一参数将会被改动，第二参数不会被改动<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">inline</span> <span class="keyword">complex</span>&amp;</span><br><span class="line">__doapl (<span class="keyword">complex</span>* ths, <span class="keyword">const</span> <span class="keyword">complex</span>&amp; r)</span><br><span class="line">&#123;</span><br><span class="line">    ths-&gt;re += r.re;</span><br><span class="line">    ths-&gt;im += r.im;</span><br><span class="line">    <span class="keyword">return</span> *ths;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">inline</span> <span class="keyword">complex</span>&amp;</span><br><span class="line"><span class="keyword">complex</span>::<span class="keyword">operator</span> += (<span class="keyword">const</span> <span class="keyword">complex</span>&amp; r)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">return</span> __doapl (<span class="keyword">this</span>, r);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h1 id="操作符重载与临时对象"><a href="#操作符重载与临时对象" class="headerlink" title="操作符重载与临时对象"></a>操作符重载与临时对象</h1><h2 id="operator-overloading-操作符重载-1，成员函数-this"><a href="#operator-overloading-操作符重载-1，成员函数-this" class="headerlink" title="operator overloading(操作符重载-1，成员函数) this"></a>operator overloading(操作符重载-1，成员函数) this</h2><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="https://github.com/hubojing/BlogImages/blob/master/C++面向对象程序设计（侯捷）笔记——操作符重载之成员函数.png?raw=true" alt="操作符重载之成员函数" title="">
                </div>
                <div class="image-caption">操作符重载之成员函数</div>
            </figure>
<h2 id="return-by-reference语法分析"><a href="#return-by-reference语法分析" class="headerlink" title="return by reference语法分析"></a>return by reference语法分析</h2><p>传递者无需知道接受者是以reference形式接收。<br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="https://github.com/hubojing/BlogImages/blob/master/C++面向对象程序设计（侯捷）笔记——返回引用语法分析.png?raw=true" alt="语法分析" title="">
                </div>
                <div class="image-caption">语法分析</div>
            </figure></p>
<p>【注】return *ths;  接收端是complex&amp;，不矛盾。</p>
<h2 id="class-body外的各种定义-definitions-1"><a href="#class-body外的各种定义-definitions-1" class="headerlink" title="class body外的各种定义(definitions)"></a>class body外的各种定义(definitions)</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">inline</span> <span class="keyword">double</span></span><br><span class="line">imag(<span class="keyword">const</span> <span class="keyword">complex</span>&amp; x)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">return</span> x.imag ();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">inline</span> <span class="keyword">double</span></span><br><span class="line">real(<span class="keyword">const</span> <span class="keyword">complex</span>&amp; x)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">return</span> x.real ();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>使用：<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">complex</span> <span class="title">c1</span><span class="params">(<span class="number">2</span>,<span class="number">1</span>)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; imag(c1);</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; real(c1);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h2 id="operator-overloading-操作符重载-2，非成员函数-无this"><a href="#operator-overloading-操作符重载-2，非成员函数-无this" class="headerlink" title="operator overloading(操作符重载-2，非成员函数)(无this)"></a>operator overloading(操作符重载-2，非成员函数)(无this)</h2><p>为了应对client的三种可能用法，这儿对应开发三个函数。<br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="https://github.com/hubojing/BlogImages/blob/master/C++面向对象程序设计（侯捷）笔记——操作符重载之非成员函数.png?raw=true" alt="操作符重载之非成员函数" title="">
                </div>
                <div class="image-caption">操作符重载之非成员函数</div>
            </figure></p>
<h2 id="temp-object-临时对象-typename"><a href="#temp-object-临时对象-typename" class="headerlink" title="temp object(临时对象) typename();"></a>temp object(临时对象) typename();</h2><p>上图complex这些函数绝不可return by reference,因为它们返回的必定是个local object。</p>
<h1 id="三大函数：拷贝构造，拷贝复制，析构"><a href="#三大函数：拷贝构造，拷贝复制，析构" class="headerlink" title="三大函数：拷贝构造，拷贝复制，析构"></a>三大函数：拷贝构造，拷贝复制，析构</h1><ul>
<li>Class without pointer member(s)<br>complex</li>
<li>Class with pointer member(s)<br>string</li>
</ul>
<h2 id="String-class"><a href="#String-class" class="headerlink" title="String class"></a>String class</h2><p>string-test.cpp<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    String s1(),</span><br><span class="line">    <span class="function">String <span class="title">s2</span><span class="params">(<span class="string">"hello"</span>)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function">String <span class="title">s3</span><span class="params">(s1)</span></span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; s3 &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    s3 = s2;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; s3 &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>string.h<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> __MYSTRING__</span></span><br><span class="line">define __MYSTRING__</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">String</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    ...</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">String::function(...)   ...</span><br><span class="line">Global-function(...)    ...</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br></pre></td></tr></table></figure></p>
<h3 id="Big-Three-三个特殊函数"><a href="#Big-Three-三个特殊函数" class="headerlink" title="Big Three, 三个特殊函数"></a>Big Three, 三个特殊函数</h3><p>Big Three：拷贝构造、拷贝赋值、析构函数<br>【注】拷贝构造、拷贝赋值，在带有指针的情况下，不能用编译器自带的那一套，需要自己编写。</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">String</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    String(<span class="keyword">const</span> <span class="keyword">char</span>* cstr = <span class="number">0</span>);</span><br><span class="line">    String(<span class="keyword">const</span> String&amp; str);<span class="comment">//拷贝构造</span></span><br><span class="line">    String&amp; <span class="keyword">operator</span>=(<span class="keyword">const</span> String&amp; s);<span class="comment">//操作符重载（拷贝赋值）</span></span><br><span class="line">    ~String();<span class="comment">//析构函数</span></span><br><span class="line">    <span class="function"><span class="keyword">char</span>* <span class="title">get_c_str</span><span class="params">()</span> <span class="keyword">const</span> </span>&#123; <span class="keyword">return</span> m_data&#125;;<span class="comment">//inline</span></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    <span class="keyword">char</span>* m_data;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<p>【注】类似于动态分配的方式，用指针指向字符串，而不要用数组。</p>
<h3 id="ctor和dtor-构造函数和析构函数"><a href="#ctor和dtor-构造函数和析构函数" class="headerlink" title="ctor和dtor(构造函数和析构函数)"></a>ctor和dtor(构造函数和析构函数)</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">inline</span> String::String(<span class="keyword">const</span> <span class="keyword">char</span>* cstr = <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span>(cstr)</span><br><span class="line">    &#123;</span><br><span class="line">        m_data = <span class="keyword">new</span> <span class="keyword">char</span>[<span class="built_in">strlen</span>(cstr)+<span class="number">1</span>];</span><br><span class="line">        <span class="built_in">strcpy</span>(m_data, cstr);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;<span class="comment">//未指定初值</span></span><br><span class="line">        m_data = <span class="keyword">new</span> <span class="keyword">char</span>[<span class="number">1</span>];</span><br><span class="line">        *m_data = <span class="string">'\0'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">inline</span> String::~String()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">delete</span>[] m_data;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>使用：<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="function">String <span class="title">s1</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="function">String <span class="title">s2</span><span class="params">(<span class="string">"hello"</span>)</span></span>;</span><br><span class="line"></span><br><span class="line">    String* p = <span class="keyword">new</span> String(<span class="string">"hello"</span>);</span><br><span class="line">    <span class="keyword">delete</span> p;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>【注】离开作用域（一对大括号）时，s1,s2自然而然调用析构函数，p手动调用析构函数。</p>
<h3 id="class-with-pointer-members-必须有-copy-ctor-和-copy-op"><a href="#class-with-pointer-members-必须有-copy-ctor-和-copy-op" class="headerlink" title="class with pointer members 必须有 copy ctor 和 copy op="></a>class with pointer members 必须有 copy ctor 和 copy op=</h3><p>copy ctor(拷贝构造)<br>copy op=(拷贝赋值) </p>
<p>e.g.<br>a有一个data，指向Hello\0<br>b有一个data，指向World\0</p>
<p>如果使用 default copy ctor 或 default op= 就会形成以下局面<br>b = a;<br>导致b的指针也指向Hello\0</p>
<p>而World\0造成memory leak（内存泄漏）<br>这种叫做<strong>浅拷贝</strong></p>
<h4 id="cpoy-ctor-拷贝构造函数"><a href="#cpoy-ctor-拷贝构造函数" class="headerlink" title="cpoy ctor(拷贝构造函数)"></a>cpoy ctor(拷贝构造函数)</h4><p><strong>深拷贝</strong><br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">inline</span> String::String(<span class="keyword">const</span> String&amp; str)</span><br><span class="line">&#123;</span><br><span class="line">    m_data = <span class="keyword">new</span> <span class="keyword">char</span>[<span class="built_in">strlen</span>(str.m_data)+<span class="number">1</span>];</span><br><span class="line">    <span class="built_in">strcpy</span>(m_data, str.m_data);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>使用：<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="function">String <span class="title">s1</span><span class="params">(<span class="string">"hello"</span>)</span></span>;</span><br><span class="line">    <span class="function">String <span class="title">s2</span><span class="params">(s1)</span></span>;</span><br><span class="line"><span class="comment">//  String s2 = s1;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h4 id="copy-assignment-operator-拷贝赋值函数"><a href="#copy-assignment-operator-拷贝赋值函数" class="headerlink" title="copy assignment operator(拷贝赋值函数)"></a>copy assignment operator(拷贝赋值函数)</h4><p>【注】类比：原来有一个装水和油的瓶子。现在要赋值，步骤：</p>
<ol>
<li>倒掉油（杀掉自己）</li>
<li>将瓶子改造成水瓶一样大（重新创造自己）</li>
<li>将水从水瓶倒入新瓶（拷贝过来）</li>
</ol>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">inline</span> String&amp; String::<span class="keyword">operator</span>=(<span class="keyword">const</span> String&amp;)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">this</span> == &amp;str)<span class="comment">//检测自我赋值(self assignment)</span></span><br><span class="line">        <span class="keyword">return</span> *<span class="keyword">this</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">delete</span>[] m_data;<span class="comment">//杀掉自己</span></span><br><span class="line">    m_data = <span class="keyword">new</span> <span class="keyword">char</span>[<span class="built_in">strlen</span>(str.m_data) + <span class="number">1</span>];<span class="comment">//重新创造自己</span></span><br><span class="line">    <span class="built_in">strcpy</span>(m_data, str.m_data);<span class="comment">//拷贝过来</span></span><br><span class="line">    <span class="keyword">return</span> *<span class="keyword">this</span>;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>使用：<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="function">String <span class="title">s1</span><span class="params">(<span class="string">"hello"</span>)</span></span>;</span><br><span class="line">    <span class="function">String <span class="title">s2</span><span class="params">(s1)</span></span>;</span><br><span class="line">    s2 = s1;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h5 id="一定要在-operator-中检查是否-self-assignment"><a href="#一定要在-operator-中检查是否-self-assignment" class="headerlink" title="一定要在 operator= 中检查是否 self assignment"></a>一定要在 operator= 中检查是否 self assignment</h5><p>【注】这样做不仅是为了提高效率，不做还会影响正确性。</p>
<p>比如， <em>this和rhs的指针指向同一片内存Hello\0<br>前述operator=的第一件事情就是delete，造成</em>this和rhs指向？？？<br>然后，当企图存取（访问）rhs，产生不确定行为(undefined behavior)</p>
<p>output函数<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream.h&gt;</span></span></span><br><span class="line">ostream&amp; <span class="keyword">operator</span>&lt;&lt;(ostream&amp; os, <span class="keyword">const</span> String&amp; str)</span><br><span class="line">&#123;</span><br><span class="line">    os &lt;&lt; str.get_c_str();</span><br><span class="line">    <span class="keyword">return</span> os;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>使用：<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="function">String <span class="title">s1</span><span class="params">(<span class="string">"hello"</span>)</span></span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; s1;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h1 id="堆，栈与内存管理"><a href="#堆，栈与内存管理" class="headerlink" title="堆，栈与内存管理"></a>堆，栈与内存管理</h1><h2 id="所谓stack-栈-，所谓heap-堆"><a href="#所谓stack-栈-，所谓heap-堆" class="headerlink" title="所谓stack(栈)，所谓heap(堆)"></a>所谓stack(栈)，所谓heap(堆)</h2><p>Stack，是存在于某作用域(scope)的一块内存空间(memory space)。例如当你调用函数，函数本身即会形成一个stack用来放置它所接收的参数，以及返回地址。<br>在函数本体(function body)内声明的任何变量，其所使用的内存块都取自上述stack。</p>
<p>Heap，或谓system heap，是指由操作系统提供的一块global内存空间，程序可动态分配(dynamic allocated)从某中获得若干区块(blocks)。<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Complex</span>&#123;</span>...&#125;;</span><br><span class="line">...</span><br><span class="line">&#123;</span><br><span class="line">    <span class="function">Complex <span class="title">c1</span><span class="params">(<span class="number">1</span>, <span class="number">2</span>)</span></span>;</span><br><span class="line">    Complex* p = <span class="keyword">new</span> Complex(<span class="number">3</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>c1所占用的空间来自stack<br>Complex(3)是个临时对象，其所占用的空间乃是以new自heap动态分配而得，并由p指向。</p>
<h2 id="stack-objects-的生命期"><a href="#stack-objects-的生命期" class="headerlink" title="stack objects 的生命期"></a>stack objects 的生命期</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Complex</span>&#123;</span>...&#125;;</span><br><span class="line">...</span><br><span class="line">&#123;</span><br><span class="line">    <span class="function">Complex <span class="title">c1</span><span class="params">(<span class="number">1</span>, <span class="number">2</span>)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>c1便是所谓stack object，其生命在作用域(scope)结束之后结束。<br>这种作用域内的object，又称为auto object，因为它会被“自动”清理。</p>
<h2 id="stack-local-objects-的生命期"><a href="#stack-local-objects-的生命期" class="headerlink" title="stack local objects 的生命期"></a>stack local objects 的生命期</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Complex</span>&#123;</span>...&#125;;</span><br><span class="line">...</span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">static</span> Complex <span class="title">c2</span><span class="params">(<span class="number">1</span>, <span class="number">2</span>)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>c2便是所谓的static object，其生命在作用域(scope)结束之后仍然存在，直到整个程序结束。</p>
<h2 id="global-objects-的生命期"><a href="#global-objects-的生命期" class="headerlink" title="global objects 的生命期"></a>global objects 的生命期</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Complex</span>&#123;</span>...&#125;;</span><br><span class="line">...</span><br><span class="line"><span class="function">Complex <span class="title">c3</span><span class="params">(<span class="number">1</span>, <span class="number">2</span>)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>c3便是所谓global object，其生命在整个程序结束之后才结束。也可以把它视为一种static object，其作用域是“整个程序”。</p>
<h2 id="heap-objects-的生命期"><a href="#heap-objects-的生命期" class="headerlink" title="heap objects 的生命期"></a>heap objects 的生命期</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Complex</span>&#123;</span>...&#125;;</span><br><span class="line">...</span><br><span class="line">&#123;</span><br><span class="line">    Complex* p = <span class="keyword">new</span> Complex;</span><br><span class="line">    ...</span><br><span class="line">    <span class="keyword">delete</span> p;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>p所指的便是heap object，其生命在它被deleted之后结束。</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Complex</span>&#123;</span>...&#125;;</span><br><span class="line">...</span><br><span class="line">&#123;</span><br><span class="line">    Complex* p = <span class="keyword">new</span> Complex;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>以上为内存泄漏(memory leak)，因为当作用域结束，p所指的heap object仍然存在，但指针p的生命却结束了，作用域之外再也看不到p（也就没机会delete p）。</p>
<h2 id="new-先分配memory-再调用ctor"><a href="#new-先分配memory-再调用ctor" class="headerlink" title="new:先分配memory,再调用ctor"></a>new:先分配memory,再调用ctor</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Complex* pc = <span class="keyword">new</span> Complex(<span class="number">1</span>, <span class="number">2</span>);</span><br></pre></td></tr></table></figure>
<p>编译器转化为<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Complex *pc;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span>* mem = <span class="keyword">operator</span> <span class="keyword">new</span>(<span class="keyword">sizeof</span>(Complex));<span class="comment">//分配内存</span></span><br><span class="line">pc = <span class="keyword">static_cast</span>&lt;Complex*&gt;(mem);<span class="comment">//转型</span></span><br><span class="line">pc-&gt;Complex::Complex(<span class="number">1</span>, <span class="number">2</span>);<span class="comment">//构造函数</span></span><br></pre></td></tr></table></figure></p>
<p>operator new是一个函数，其内部调用malloc(n)<br>构造函数的全名是<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Complex::Complex(pc, <span class="number">1</span> ,<span class="number">2</span>);</span><br></pre></td></tr></table></figure></p>
<p>pc即隐藏的参数this。</p>
<h2 id="delete-先调用dtor-再释放memory"><a href="#delete-先调用dtor-再释放memory" class="headerlink" title="delete: 先调用dtor,再释放memory"></a>delete: 先调用dtor,再释放memory</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Complex* ps = <span class="keyword">new</span> Complex(<span class="number">1</span>, <span class="number">2</span>);</span><br><span class="line">...</span><br><span class="line"><span class="keyword">delete</span> ps;</span><br></pre></td></tr></table></figure>
<p>编译器转化为<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Complex::~Complex(ps);<span class="comment">//析构函数</span></span><br><span class="line"><span class="function"><span class="keyword">operator</span> <span class="title">delete</span><span class="params">(ps)</span></span>;<span class="comment">//释放内存</span></span><br></pre></td></tr></table></figure></p>
<p>delete函数内部调用free(ps)</p>
<p>析构函数先删除内容，delete删除指针</p>
<h2 id="动态分配所得的内存块-memory-block-in-VC"><a href="#动态分配所得的内存块-memory-block-in-VC" class="headerlink" title="动态分配所得的内存块(memory block),in VC"></a>动态分配所得的内存块(memory block),in VC</h2><p>Complex大小为8b，调试模式下会增加灰色的内存块（32+4），并且收尾各有一个cookie（4*2）（用于回收）<br>vc每一块都是16的倍数，所以需要一些填补物(pad)</p>
<p>release下没有灰色部分</p>
<p>String大小为4b<br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="https://github.com/hubojing/BlogImages/blob/master/C++面向对象程序设计（侯捷）笔记——动态分配所得的内存块.png?raw=true" alt="动态分配所得的内存块" title="">
                </div>
                <div class="image-caption">动态分配所得的内存块</div>
            </figure></p>
<h2 id="动态分配所得的array"><a href="#动态分配所得的array" class="headerlink" title="动态分配所得的array"></a>动态分配所得的array</h2><p>vc用一个整数记录数组个数，所以+4<br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="https://github.com/hubojing/BlogImages/blob/master/C++面向对象程序设计（侯捷）笔记——动态分配所得的array.png?raw=true" alt="动态分配所得的array" title="">
                </div>
                <div class="image-caption">动态分配所得的array</div>
            </figure></p>
<h2 id="array-new一定要搭配array-delete"><a href="#array-new一定要搭配array-delete" class="headerlink" title="array new一定要搭配array delete"></a>array new一定要搭配array delete</h2><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="https://raw.githubusercontent.com/hubojing/BlogImages/master/C%2B%2B%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%EF%BC%88%E4%BE%AF%E6%8D%B7%EF%BC%89%E7%AC%94%E8%AE%B0%E2%80%94%E2%80%94array%20new%E4%B8%80%E5%AE%9A%E8%A6%81%E6%90%AD%E9%85%8Darray%20delete.png" alt="array new一定要搭配array delete" title="">
                </div>
                <div class="image-caption">array new一定要搭配array delete</div>
            </figure>
<p>【注】看清内存泄漏的地方。  </p>
<h1 id="扩展补充：类模板，函数模板及其他"><a href="#扩展补充：类模板，函数模板及其他" class="headerlink" title="扩展补充：类模板，函数模板及其他"></a>扩展补充：类模板，函数模板及其他</h1><h2 id="static"><a href="#static" class="headerlink" title="static"></a>static</h2><p>静态函数和一般成员函数的区别：静态函数没有this pointer<br>静态函数只能处理静态数据</p>
<p>如设计银行户头的类<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Account</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">double</span> m_rate;<span class="comment">//静态数据</span></span><br><span class="line">    <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">set_rate</span><span class="params">(<span class="keyword">const</span> <span class="keyword">double</span>&amp; x)</span></span>&#123;m_rate = x;&#125;<span class="comment">//静态函数</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">double</span> Account::m_rate = <span class="number">8.0</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    Account::set_rate(<span class="number">5.0</span>);</span><br><span class="line"></span><br><span class="line">    Account a;</span><br><span class="line">    a.set_rate(<span class="number">7.0</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>调用static函数的方式有二：<br>（1）通过object调用<br>（2）通过class name调用</p>
<h2 id="把ctor放在private区"><a href="#把ctor放在private区" class="headerlink" title="把ctor放在private区"></a>把ctor放在private区</h2><p>Singleton<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="keyword">static</span> A&amp; getInstance&#123;<span class="keyword">return</span> a;&#125;;<span class="comment">//取得唯一的自己</span></span><br><span class="line">    setup()&#123;...&#125;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    A();<span class="comment">//任何人不能创建它</span></span><br><span class="line">    A(<span class="keyword">const</span> A&amp; rhs);</span><br><span class="line">    <span class="keyword">static</span> A a;<span class="comment">//已经创建了一份</span></span><br><span class="line">    ...</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></p>
<p>使用：<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">A::getInstance().setup();</span><br></pre></td></tr></table></figure></p>
<p>如果不用a，但a仍然存在，为避免资源浪费，更好的写法是：<br>Meyers Singleton<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">static</span> A&amp; <span class="title">getInstance</span><span class="params">()</span></span>;</span><br><span class="line">    setup() &#123;...&#125;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    A();</span><br><span class="line">    A(<span class="keyword">const</span> A&amp; rhs);</span><br><span class="line">    ...</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">A&amp; A::getInstance()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">static</span> A a;</span><br><span class="line">    <span class="keyword">return</span> a;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>使用：<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">A::getInstance().setup();</span><br></pre></td></tr></table></figure></p>
<h2 id="cout"><a href="#cout" class="headerlink" title="cout"></a>cout</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> _<span class="title">IO_ostream_withassign</span>:</span><span class="keyword">public</span> ostream&#123;</span><br><span class="line">    ...</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">extern</span> _IO_ostream_withassign <span class="built_in">cout</span>;</span><br></pre></td></tr></table></figure>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ostream</span>:</span><span class="keyword">virtual</span> <span class="keyword">public</span> ios</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    ostream&amp; <span class="keyword">operator</span>&lt;&lt;(<span class="keyword">char</span> c);</span><br><span class="line">    ostream&amp; <span class="keyword">operator</span>&lt;&lt;(<span class="keyword">unsigned</span> <span class="keyword">char</span> c)&#123;<span class="keyword">return</span> (*<span class="keyword">this</span>)&lt;&lt;(<span class="keyword">char</span>)c;&#125;</span><br><span class="line">    ostream&amp; <span class="keyword">operator</span>&lt;&lt;(<span class="keyword">signed</span> <span class="keyword">char</span> c)&#123;<span class="keyword">return</span> (*<span class="keyword">this</span>)&lt;&lt;(<span class="keyword">char</span>)c;&#125;</span><br><span class="line">    ostream&amp; <span class="keyword">operator</span>&lt;&lt;(<span class="keyword">const</span> <span class="keyword">char</span> *s);</span><br><span class="line">    ostream&amp; <span class="keyword">operator</span>&lt;&lt;(<span class="keyword">const</span> <span class="keyword">unsigned</span> <span class="keyword">char</span> *s)</span><br><span class="line">    &#123;<span class="keyword">return</span> (*<span class="keyword">this</span>) &lt;&lt; (<span class="keyword">const</span> <span class="keyword">char</span>*)s;&#125;</span><br><span class="line">    ostream&amp; <span class="keyword">operator</span>&lt;&lt;(<span class="keyword">const</span> <span class="keyword">signed</span> <span class="keyword">char</span> *s)</span><br><span class="line">    &#123;reutrn (*<span class="keyword">this</span>) &lt;&lt; (<span class="keyword">const</span> <span class="keyword">char</span>*)s;&#125;</span><br><span class="line">    ostream&amp; <span class="keyword">operator</span>&lt;&lt;(<span class="keyword">const</span> <span class="keyword">void</span> *p);</span><br><span class="line">    ostream&amp; <span class="keyword">operator</span>&lt;&lt;(<span class="keyword">int</span> n);</span><br><span class="line">    ostream&amp; <span class="keyword">operator</span>&lt;&lt;(<span class="keyword">unsigned</span> <span class="keyword">int</span> n);</span><br><span class="line">    ostream&amp; <span class="keyword">operator</span>&lt;&lt;(<span class="keyword">long</span> n);</span><br><span class="line">    ostream&amp; <span class="keyword">operator</span>&lt;&lt;(<span class="keyword">unsigned</span> <span class="keyword">long</span> n);</span><br><span class="line">    ...</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<h2 id="class-template-类模板"><a href="#class-template-类模板" class="headerlink" title="class template,类模板"></a>class template,类模板</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">complex</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="keyword">complex</span>(T r = <span class="number">0</span>, T i = <span class="number">0</span>):re(r), im(i)</span><br><span class="line">    &#123;&#125;</span><br><span class="line">    <span class="keyword">complex</span>&amp; <span class="keyword">operator</span> += (<span class="keyword">const</span> <span class="keyword">complex</span>)</span><br><span class="line">    T real() <span class="keyword">const</span> &#123;<span class="keyword">return</span> re;&#125;</span><br><span class="line">    <span class="function">T <span class="title">imag</span><span class="params">()</span> <span class="keyword">const</span> </span>&#123;<span class="keyword">return</span> im;&#125;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    T re, im;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">friend</span> <span class="keyword">complex</span>&amp; __doapl(<span class="keyword">complex</span>*, <span class="keyword">const</span> <span class="keyword">complex</span>&amp;);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<p>使用：<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="keyword">complex</span>&lt;<span class="keyword">double</span>&gt; c1(<span class="number">2.5</span>, <span class="number">1.5</span>);</span><br><span class="line">    <span class="keyword">complex</span>&lt;<span class="keyword">int</span>&gt; c2(<span class="number">2</span>, <span class="number">6</span>);</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h2 id="function-template-函数模板"><a href="#function-template-函数模板" class="headerlink" title="function template, 函数模板"></a>function template, 函数模板</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">stone r1(2,3),r(3,3),r3;</span><br><span class="line">r3 = min(r1, r2);</span><br></pre></td></tr></table></figure>
<p>编译器会对function template进行引数推导(argument deduction)<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">template</span>&lt;<span class="class"><span class="keyword">class</span> <span class="title">T</span>&gt;</span></span><br><span class="line"><span class="class"><span class="title">inline</span> <span class="title">const</span> <span class="title">T</span>&amp; <span class="title">min</span>(<span class="title">const</span> <span class="title">T</span>&amp; <span class="title">a</span>, <span class="title">const</span> <span class="title">T</span>&amp; <span class="title">b</span>)</span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">return</span> b &lt; a ? b : a;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>引数推导的结果，T为stone，于是调用stone::operator&lt;<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">stone</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    stone(<span class="keyword">int</span> w, <span class="keyword">int</span> h, <span class="keyword">int</span> we):_w(w), _h(h), _weight(we)</span><br><span class="line">    &#123;&#125;</span><br><span class="line">    <span class="keyword">bool</span> <span class="keyword">operator</span>&lt; (<span class="keyword">const</span> strone&amp; rhs) <span class="keyword">const</span></span><br><span class="line">    &#123;<span class="keyword">return</span> _weight &lt; rhs._weight;&#125;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    <span class="keyword">int</span> _w, _h, _weight;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></p>
<h2 id="namespace"><a href="#namespace" class="headerlink" title="namespace"></a>namespace</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">namespace</span> <span class="built_in">std</span></span><br><span class="line">&#123;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>using directive<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">cin</span> &lt;&lt; ...;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; ...;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>using declaration<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="built_in">std</span>::<span class="built_in">cout</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">cin</span>&lt;&lt;...;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;...;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">cin</span>&lt;&lt;...;</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">cout</span>&lt;&lt;...;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="更多细节与深入"><a href="#更多细节与深入" class="headerlink" title="更多细节与深入"></a>更多细节与深入</h2><ul>
<li>operator type() const;</li>
<li>*explicit complex(…):initialization list{}</li>
<li>pointer-like object</li>
<li>funtion-like object</li>
<li>Namespace</li>
<li>template specialization</li>
<li>Standard Library</li>
<li>variadic template(since C++11)</li>
<li>move ctor(since C++11)</li>
<li>Rvalue reference(since C++11)</li>
<li>auto(since C++11)</li>
<li>lambda(since C++11)</li>
<li>range-base for loop(since C++11)</li>
<li>unordered containers(since C++ 11)</li>
<li>…</li>
</ul>
<h1 id="组合与继承"><a href="#组合与继承" class="headerlink" title="组合与继承"></a>组合与继承</h1><h2 id="Object-Oriented-Programming-Object-Oriented-Design-OOP-OOD"><a href="#Object-Oriented-Programming-Object-Oriented-Design-OOP-OOD" class="headerlink" title="Object Oriented Programming, Object Oriented Design  OOP, OOD"></a>Object Oriented Programming, Object Oriented Design  OOP, OOD</h2><ul>
<li>Inheritance(继承)</li>
<li>Composition(复合)</li>
<li>Delegation(委托)</li>
</ul>
<h3 id="Compostion-复合-，表示has-a"><a href="#Compostion-复合-，表示has-a" class="headerlink" title="Compostion(复合)，表示has-a"></a>Compostion(复合)，表示has-a</h3><p><strong>Adapter</strong><br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">template</span> &lt;<span class="class"><span class="keyword">class</span> <span class="title">T</span>, <span class="title">class</span> <span class="title">Sequence</span> = <span class="title">deque</span>&lt;T&gt;&gt;</span></span><br><span class="line"><span class="class"><span class="title">class</span> <span class="title">queue</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    ...</span><br><span class="line"><span class="keyword">protected</span>:</span><br><span class="line">    Sequence c;<span class="comment">//底层容器</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="comment">//以下完全利用c的操作函数完成</span></span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">empty</span><span class="params">()</span> <span class="keyword">const</span> </span>&#123;<span class="keyword">return</span> c.empty();&#125;</span><br><span class="line">    <span class="function">size_type <span class="title">size</span><span class="params">()</span> <span class="keyword">const</span> </span>&#123;<span class="keyword">return</span> c.size();&#125;</span><br><span class="line">    <span class="function">reference <span class="title">front</span><span class="params">()</span> </span>&#123;<span class="keyword">return</span> c.front();&#125;</span><br><span class="line">    <span class="function">reference <span class="title">back</span><span class="params">()</span> </span>&#123;<span class="keyword">return</span> c.back();&#125;</span><br><span class="line">    <span class="comment">//deque是两端可进出，queue是末端进前端出（先进先出）</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">push</span><span class="params">(<span class="keyword">const</span> value_type&amp; x)</span> </span>&#123;c.push_back(x);&#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">pop</span><span class="params">()</span> </span>&#123;c.pop_front();&#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></p>
<p>从内存角度看<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">template</span> &lt;<span class="class"><span class="keyword">class</span> <span class="title">T</span>&gt;</span></span><br><span class="line"><span class="class"><span class="title">class</span> <span class="title">queue</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">protected</span>:</span><br><span class="line">    <span class="built_in">deque</span>&lt;T&gt; c;</span><br><span class="line">...</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></p>
<p>Sizeof: 40</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">template</span> &lt;<span class="class"><span class="keyword">class</span> <span class="title">T</span>&gt;</span></span><br><span class="line"><span class="class"><span class="title">class</span> <span class="title">deque</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">protected</span>:</span><br><span class="line">    Itr&lt;T&gt; start;</span><br><span class="line">    Itr&lt;T&gt; finish;</span><br><span class="line">    T** <span class="built_in">map</span>;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span> map_size;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<p>Sizeof: 16 * 2 + 4 + 4</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">template</span> &lt;<span class="class"><span class="keyword">class</span> <span class="title">T</span>&gt;</span></span><br><span class="line"><span class="class"><span class="title">struct</span> <span class="title">Itr</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    T* cur;</span><br><span class="line">    T* first;</span><br><span class="line">    T* last;</span><br><span class="line">    T** node;</span><br><span class="line">...</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<p>Sizeof: 4*4</p>
<h3 id="Composition-复合-关系下的构造和析构"><a href="#Composition-复合-关系下的构造和析构" class="headerlink" title="Composition(复合)关系下的构造和析构"></a>Composition(复合)关系下的构造和析构</h3><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="https://github.com/hubojing/BlogImages/blob/master/C++面向对象程序设计（侯捷）笔记——复合关系下的构造和析构.png?raw=true" alt="复合关系下的构造和析构" title="">
                </div>
                <div class="image-caption">复合关系下的构造和析构</div>
            </figure>
<p><strong>构造由内而外</strong><br>Container的构造函数首先调用Component的default构造函数，然后才执行自己。<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Container::Container(...):Component()&#123;...&#125;;</span><br></pre></td></tr></table></figure></p>
<p><strong>析构由外而内</strong><br>Container的析构函数首先执行自己，然后才调用Component的析构函数。<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Container:~Container(...)&#123;... ~Component()&#125;;</span><br></pre></td></tr></table></figure></p>
<h3 id="Delegation-委托-Composition-by-reference"><a href="#Delegation-委托-Composition-by-reference" class="headerlink" title="Delegation(委托). Composition by reference."></a>Delegation(委托). Composition by reference.</h3><p><strong>Handle/Body(pImpl)</strong><br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//file String.hpp</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">StringRep</span>;</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">String</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    String();</span><br><span class="line">    String(<span class="keyword">const</span> <span class="keyword">char</span>* s);</span><br><span class="line">    String(<span class="keyword">const</span> String&amp; s);</span><br><span class="line">    String &amp;<span class="keyword">operator</span>=(<span class="keyword">const</span> String&amp; s);</span><br><span class="line">    ~String();</span><br><span class="line">...</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    StringRep* rep;<span class="comment">//pimpl</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//file String.cpp</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"String.hpp"</span></span></span><br><span class="line"><span class="keyword">namespace</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">StringRep</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">friend</span> <span class="class"><span class="keyword">class</span> <span class="title">String</span>;</span></span><br><span class="line">    StringRep(<span class="keyword">const</span> <span class="keyword">char</span>* s);</span><br><span class="line">    ~StringRep();</span><br><span class="line">    <span class="keyword">int</span> count;</span><br><span class="line">    <span class="keyword">char</span>* rep;</span><br><span class="line">&#125;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">String::String()&#123;...&#125;</span><br><span class="line">...</span><br></pre></td></tr></table></figure>
<p>这种手法可称为编译防火墙<br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="https://github.com/hubojing/BlogImages/blob/master/C++面向对象程序设计（侯捷）笔记——引用计数.png?raw=true" alt="引用计数" title="">
                </div>
                <div class="image-caption">引用计数</div>
            </figure><br>n=3<br>共享同一个Hello，节省内存。<br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="https://raw.githubusercontent.com/hubojing/BlogImages/master/C%2B%2B%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%EF%BC%88%E4%BE%AF%E6%8D%B7%EF%BC%89%E7%AC%94%E8%AE%B0%E2%80%94%E2%80%94%E5%A7%94%E6%89%98%20%E5%9B%BE.png" alt="委托 图" title="">
                </div>
                <div class="image-caption">委托 图</div>
            </figure></p>
<h3 id="Inheritance-继承-表示is-a"><a href="#Inheritance-继承-表示is-a" class="headerlink" title="Inheritance(继承), 表示is-a"></a>Inheritance(继承), 表示is-a</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> _<span class="title">List_node_base</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    _List_node_base* _M_next;</span><br><span class="line">    _List_node_base* _M_prev;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> _Tp&gt;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> _<span class="title">List_node</span>:</span><span class="keyword">public</span> _List_node_base</span><br><span class="line">&#123;</span><br><span class="line">    _Tp _M_data;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="https://raw.githubusercontent.com/hubojing/BlogImages/master/C%2B%2B%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%EF%BC%88%E4%BE%AF%E6%8D%B7%EF%BC%89%E7%AC%94%E8%AE%B0%E2%80%94%E2%80%94%E7%BB%A7%E6%89%BF%20%E5%9B%BE.png" alt="继承 图" title="">
                </div>
                <div class="image-caption">继承 图</div>
            </figure>
<h4 id="Inheritance-继承-关系下的构造和析构"><a href="#Inheritance-继承-关系下的构造和析构" class="headerlink" title="Inheritance(继承)关系下的构造和析构"></a>Inheritance(继承)关系下的构造和析构</h4><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="https://github.com/hubojing/BlogImages/blob/master/C++面向对象程序设计（侯捷）笔记——继承关系下的构造和析构.png?raw=true" alt="内存上看" title="">
                </div>
                <div class="image-caption">内存上看</div>
            </figure>
<p>base class的dtor必须是virtual，否则会出现undefined behavior</p>
<p><strong>构造由内而外</strong><br>Derived的构造函数首先调用Base的default构造函数，然后才执行自己。<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Derived::Derived(...):Base()&#123;...&#125;;</span><br></pre></td></tr></table></figure></p>
<p><strong>析构由外而内</strong><br>Derived的析构函数首先执行自己，然后才调用Base的析构函数。<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Derived::~Derived(...)&#123;...~Base()&#125;;</span><br></pre></td></tr></table></figure></p>
<h4 id="Inheritance-继承-with-virtual-functions-虚函数"><a href="#Inheritance-继承-with-virtual-functions-虚函数" class="headerlink" title="Inheritance(继承) with virtual functions(虚函数)"></a>Inheritance(继承) with virtual functions(虚函数)</h4><p>non-virtual函数：不希望derived class重新定义(override,复写)它。<br>virtual函数：希望derived class重新定义(override，复写)它，它已有默认定义。<br>pure virtual函数：希望derived class一定要重新定义(override)它，对它没有默认定义。</p>
<p>【注】：纯虚函数其实可以有定义，只是本文不提及。</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Shape</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">draw</span><span class="params">()</span> <span class="keyword">const</span> </span>= <span class="number">0</span>;<span class="comment">//pure virtual</span></span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">error</span><span class="params">(<span class="keyword">const</span> <span class="built_in">std</span>::<span class="built_in">string</span>&amp; msg)</span></span>;<span class="comment">//impure virtual</span></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">objectID</span><span class="params">()</span> <span class="keyword">const</span></span>;<span class="comment">//non-virtual</span></span><br><span class="line">    ...</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Rectangle</span>:</span><span class="keyword">public</span> Shape &#123;...&#125;;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Ellipse</span>:</span><span class="keyword">public</span> Shape &#123;...&#125;;</span><br></pre></td></tr></table></figure>
<p><strong>Template Method</strong><br><img src="" alt="继承 虚函数"></p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CDocument</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">OnFileOpen</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="comment">//这是个算法，每个cout输出代表一个实际动作</span></span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">"dialog..."</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">"check file status..."</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">"open file..."</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        Serialize();</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">"close file..."</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">"update all views..."</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">Serialize</span><span class="params">()</span>  </span>&#123;&#125;;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CMyDoc</span> :</span> <span class="keyword">public</span> CDocument</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">Serialize</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="comment">//只有应用程序本身才知道如何读取自己的文件（格式）</span></span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">"CMyDoc::Serialize()"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    CMyDoc myDoc;<span class="comment">//假设对应[File/open]</span></span><br><span class="line">    myDoc.OnFileOpen();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="Inheritance-Composition关系下的构造和析构"><a href="#Inheritance-Composition关系下的构造和析构" class="headerlink" title="Inheritance + Composition关系下的构造和析构"></a>Inheritance + Composition关系下的构造和析构</h3><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="https://github.com/hubojing/BlogImages/blob/master/C++面向对象程序设计（侯捷）笔记——继承+复合.png?raw=true" alt="继承+复合" title="">
                </div>
                <div class="image-caption">继承+复合</div>
            </figure>
<p>第一个问号：</p>
<p>第二个问号：构造函数调用顺序：Component, Base , Derived<br>析构函数则相反。</p>
<h3 id="Delegation-委托-Inheritance-继承"><a href="#Delegation-委托-Inheritance-继承" class="headerlink" title="Delegation(委托) + Inheritance(继承)"></a>Delegation(委托) + Inheritance(继承)</h3><p><strong>Observer</strong><br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Subject</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">int</span> m_value;</span><br><span class="line">    <span class="built_in">vector</span>&lt;Observer*&gt; m_views;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">attach</span><span class="params">(Observer* obs)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        m_views.push_back(obs);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">set_val</span><span class="params">(<span class="keyword">int</span> value)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        m_value = value;</span><br><span class="line">        notify();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">notify</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; m_views.size(); ++i)</span><br><span class="line">            m_views[i]-&gt;update(<span class="keyword">this</span>, m_value);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Observer</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">update</span><span class="params">(Subject* sub, <span class="keyword">int</span> value)</span> </span>= <span class="number">0</span>;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="https://github.com/hubojing/BlogImages/blob/master/C++面向对象程序设计（侯捷）笔记——委托+继承.png?raw=true" alt="委托+继承" title="">
                </div>
                <div class="image-caption">委托+继承</div>
            </figure>
<p><strong>Composite</strong><br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="https://github.com/hubojing/BlogImages/blob/master/C++面向对象程序设计（侯捷）笔记——Composite.png?raw=true" alt="Composite" title="">
                </div>
                <div class="image-caption">Composite</div>
            </figure></p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Primitive</span>:</span><span class="keyword">public</span> Component</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    Primitive(<span class="keyword">int</span> val):Component(val) &#123;&#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Component</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">int</span> value;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    Component(<span class="keyword">int</span> val) &#123; value = val; &#125;</span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">add</span><span class="params">(Component*)</span> </span>&#123;&#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Composite</span>:</span><span class="keyword">public</span> Component</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">vector</span>&lt;Component*&gt;c;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    Composite(<span class="keyword">int</span> val):Component(val) &#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(Component* elem)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        c.push_back(elem);</span><br><span class="line">    &#125;</span><br><span class="line">...</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">**Prototype**</span><br><span class="line">![Prototype](https:<span class="comment">//github.com/hubojing/BlogImages/blob/master/C++面向对象程序设计（侯捷）笔记——Prototype.png?raw=true)</span></span><br><span class="line">出自Design Patterns Explained Simply</span><br><span class="line">```cpp</span><br><span class="line">#include&lt;iostream.h&gt;</span><br><span class="line"><span class="keyword">enum</span> imageType</span><br><span class="line">&#123;</span><br><span class="line">    LSAT, SPOT</span><br><span class="line">&#125;;</span><br><span class="line">class Image</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="keyword">virtual</span> <span class="keyword">void</span> draw() = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">static</span> Image *findAndClone(imageType);</span><br><span class="line"><span class="keyword">protected</span>:</span><br><span class="line">    <span class="keyword">virtual</span> imageType returnType() = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">virtual</span> Image* clone() = <span class="number">0</span>;</span><br><span class="line">    <span class="comment">//As each subclass of Image is declared, it registers its prototype</span></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">void</span> addPrototype(Image *image)</span><br><span class="line">    &#123;</span><br><span class="line">        _prototypes[_nextSlot++] = image;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    <span class="comment">//addPrototype() saves each registered prototype here</span></span><br><span class="line">    <span class="keyword">static</span> Image* _prototypes[<span class="number">10</span>];</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">int</span> _nextSlot;</span><br><span class="line">&#125;;</span><br><span class="line">Image *Image::prototypes[];<span class="comment">//定义</span></span><br><span class="line"><span class="keyword">int</span> Image::_nextSlot;<span class="comment">//定义</span></span><br></pre></td></tr></table></figure>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//Client calls this public static member function when it needs an instance </span></span><br><span class="line">Image *Image::findAndClone(imageType type)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; _nextSlot; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(_prototypes[i]-&gt;returnType())</span><br><span class="line">        <span class="keyword">return</span> _prototypes[i]-&gt;clone();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>子类<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">LandSatImage</span>:</span><span class="keyword">public</span> Image</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">imageType <span class="title">returnType</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> LSAT;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">draw</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">"LandSatImage::draw"</span> &lt;&lt; _id &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//When clone() is called, call the one-argument with a dummy arg</span></span><br><span class="line">    <span class="function">Image *<span class="title">clone</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> LandSatImage(<span class="number">1</span>); </span><br><span class="line">    &#125;</span><br><span class="line"><span class="keyword">protected</span>:</span><br><span class="line">    <span class="comment">//This is only called from clone()</span></span><br><span class="line">    LandSatImage(<span class="keyword">int</span> dummy)</span><br><span class="line">    &#123;</span><br><span class="line">        _id = _count++;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    <span class="comment">//Mechanism for initializing an Image subclass - this causes</span></span><br><span class="line">    the <span class="keyword">default</span> ctor to be called, which registers the subclass's prototype</span><br><span class="line">    <span class="keyword">static</span> LandSatImage _landSatImage;</span><br><span class="line">    <span class="comment">//This is only called when the private static data member is inited</span></span><br><span class="line">    LandSatImage()</span><br><span class="line">    &#123;</span><br><span class="line">        addPrototype(<span class="keyword">this</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//Nominal "state" per instance mechanism</span></span><br><span class="line">    <span class="keyword">int</span> _id;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">int</span> _count;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">//Register the subclass's prototype</span></span><br><span class="line">LandSatImage LandSatImage::_landSatImage;</span><br><span class="line"><span class="comment">//Initialize the "state" per instance mechanism</span></span><br><span class="line"><span class="keyword">int</span> LandSatImage::_count = <span class="number">1</span>;</span><br></pre></td></tr></table></figure></p>
]]></content>
      
        <categories>
            
            <category> 编程语言 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> CPP </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[linux C语言结构体]]></title>
      <url>https://hubojing.github.io/2018/07/21/linux%20C%E8%AF%AD%E8%A8%80%E7%BB%93%E6%9E%84%E4%BD%93/</url>
      <content type="html"><![CDATA[<div align="left"><br><img src="https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1532916110&di=4947d07d2456caefff7ea9ef09ce4c65&imgtype=jpg&er=1&src=http%3A%2F%2Fimg2.mukewang.com%2F5567d48300010ba306000338.jpg" width="300" height="180" style="float:right;"><br><br><br>　　<strong>再学C语言，复习&amp;笔记。</strong><br><br><br> </div>

<a id="more"></a>
<p>系列顺序：<br><a href="https://hubojing.github.io/2018/07/17/Linux%20C%E8%AF%AD%E8%A8%80%E7%BC%96%E7%A8%8B%E5%9F%BA%E6%9C%AC%E5%8E%9F%E7%90%86%E4%B8%8E%E5%AE%9E%E8%B7%B5/">Linux C语言编程基本原理与实践</a><br><a href="https://hubojing.github.io/2018/07/20/Linux%20C%E8%AF%AD%E8%A8%80%E6%8C%87%E9%92%88%E4%B8%8E%E5%86%85%E5%AD%98/">Linux C语言指针与内存</a><br><a href="https://hubojing.github.io/2018/07/21/linux%20C%E8%AF%AD%E8%A8%80%E7%BB%93%E6%9E%84%E4%BD%93/">Linux C语言结构体</a></p>
<p>更多Linux知识：<br><a href="https://hubojing.github.io/2016/12/26/linux%E6%95%B4%E7%90%86%E7%AC%94%E8%AE%B0/">一天一点linux</a></p>
<hr>
<h1 id="预处理"><a href="#预处理" class="headerlink" title="预处理"></a>预处理</h1><p>编译的四个步骤：.c文件—&gt;.i文件（预处理）-&gt;.s文件（编译）-&gt;.o文件（汇编）-&gt;可执行文件（链接）</p>
<p>gcc -o helloWorld.i helloWorld.c -E<br>-E表示只让helloWorld.c进行预处理</p>
<h1 id="结构体"><a href="#结构体" class="headerlink" title="结构体"></a>结构体</h1><p>结构体对象所占的空间大小涉及到一个字节对齐的问题。字节对齐的目的是让计算机快速读写，是一个以空间换取时间的方式。<br>结构体对象的大小 = 最后一个成员的偏移量 + 最后一个成员变量的大小 + 填充字节<br>结构体字节对齐准则：当前成员的偏移量必须是成员变量大小的整数倍，不是的话在后面填充字节。<br>最后还要判断结构体大小是不是成员中最大成员类型的整数倍，不是的话还需填充。</p>
<p>例：<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">data</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> a;</span><br><span class="line">    <span class="keyword">char</span> b;</span><br><span class="line">    <span class="keyword">int</span> b;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></p>
<p>a 4字节，b 1字节，c 4字节<br>计算方法：</p>
<ol>
<li>a的长度为4，为b的长度1的整数倍，故b的偏移量4字节。</li>
<li>b的偏移量+b的长度=5字节，但5不能整除c的长度（4字节），故需填充偏移量到8字节。所以c的偏移量为8。</li>
<li>c的偏移量+c的长度=8+4=12字节，且12字节是最大成员类型（4字节）的整数倍，故结构体所占空间为12字节。</li>
</ol>
<p><strong>注：C语言结构体和C++结构体定义的区别</strong></p>
<ol>
<li>C结构体中只能自定义数据类型，不允许有函数。C++结构体可以加入成员函数，且允许该函数是虚函数。所以C结构体没有构造函数、析构函数和this指针。</li>
<li>C结构体对内部成员变量的访问权限<strong>只能</strong>是public，C++结构体<strong>默认</strong>是public，可以是public,protected,private三种。</li>
<li>C结构体不可继承，C++结构体可以从其它结构体或类继承。<br>以上是表面区别，实际区别是面向过程和面向对象编程思路的区别：C的结构体只是把数据变量给包裹起来了，并不涉及算法。C++是把数据变量及对这些数据变量的相关算法给封装起来，并且给对这些数据和类不同的访问权限。<br>C语言中没有类的概念，但可通过结构体内创建函数指针实现面向对象思想。</li>
<li>声明定义有区别：<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">weapon</span></span></span><br><span class="line"><span class="class">&#123;</span>	</span><br><span class="line">    <span class="keyword">int</span> price;</span><br><span class="line">    <span class="keyword">int</span> atk;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
</li>
</ol>
<p>C语言用struct weapon a;<br>C++可以直接 weapon a;</p>
<p>若C也希望直接声明，则需引入typedef，定义为：<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">weapon</span></span></span><br><span class="line"><span class="class">&#123;</span>	</span><br><span class="line">    <span class="keyword">int</span> price;</span><br><span class="line">    <span class="keyword">int</span> atk;</span><br><span class="line">&#125;Wea;</span><br></pre></td></tr></table></figure></p>
<p>Wea a;</p>
<h1 id="共用体"><a href="#共用体" class="headerlink" title="共用体"></a>共用体</h1><p>共用体的作用就使不同的类型的变量共享同一个地址，好处是节省开销，缺点是同一时刻仅仅能存储一个成员。<br>共用体的大小是所有成员中占内存最长的长度，初始化时只能有一个常量。</p>
<h1 id="动态数据结构"><a href="#动态数据结构" class="headerlink" title="动态数据结构"></a>动态数据结构</h1><h2 id="静态链表"><a href="#静态链表" class="headerlink" title="静态链表"></a>静态链表</h2><p>每一个结点都是在程序中定义的而不是临时开辟的。<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">weapon</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">  <span class="keyword">int</span> price;</span><br><span class="line">  <span class="keyword">int</span> atk;</span><br><span class="line">  <span class="class"><span class="keyword">struct</span> <span class="title">weapon</span> \*<span class="title">next</span>;</span> <span class="comment">//指向下一个节点</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="class"><span class="keyword">struct</span> <span class="title">weapon</span> <span class="title">a</span>,<span class="title">b</span>,<span class="title">c</span>,\*<span class="title">head</span>;</span></span><br><span class="line">	a.price = <span class="number">100</span>;</span><br><span class="line">	a.atk = <span class="number">100</span>;</span><br><span class="line">	b.price = <span class="number">200</span>;</span><br><span class="line">	b.atk = <span class="number">200</span>;</span><br><span class="line">	c.price = <span class="number">300</span>;</span><br><span class="line">	c.atk = <span class="number">300</span>;</span><br><span class="line"></span><br><span class="line">	head = &amp;a;</span><br><span class="line">	a.next = &amp;b;</span><br><span class="line">	b.next = &amp;c;</span><br><span class="line">	c.next = <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line">	<span class="class"><span class="keyword">struct</span> <span class="title">weapon</span> \*<span class="title">p</span>;</span></span><br><span class="line">	p = head;</span><br><span class="line">	<span class="keyword">while</span>(p != <span class="literal">NULL</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">"%d, %d\n"</span>, p-&gt;atk, p-&gt;price);</span><br><span class="line">  	  p = p-&gt;next;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h2 id="动态链表"><a href="#动态链表" class="headerlink" title="动态链表"></a>动态链表</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;malloc.h&gt;</span></span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">weapon</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">  <span class="keyword">int</span> price;</span><br><span class="line">  <span class="keyword">int</span> atk;</span><br><span class="line">  <span class="class"><span class="keyword">struct</span> <span class="title">weapon</span> \*<span class="title">next</span>;</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function">struct weapon * <span class="title">create</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">weapon</span> * <span class="title">head</span>;</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">weapon</span> * <span class="title">p1</span>, *<span class="title">p2</span>;</span><span class="comment">//p1当前结点，p2上一个结点</span></span><br><span class="line">    <span class="keyword">int</span> n = <span class="number">0</span>;<span class="comment">//记录链表长度</span></span><br><span class="line">    p1 = p2 = (struct weapon*)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(struct weapon));</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d,%d"</span>,&amp;p1-&gt;price,&amp;p1-&gt;atk);</span><br><span class="line">    head = <span class="literal">NULL</span>;</span><br><span class="line">    <span class="keyword">while</span>(p1-&gt;price!=<span class="number">0</span>)<span class="comment">//约定价格为0时停止输入</span></span><br><span class="line">    &#123;</span><br><span class="line">    	n++;</span><br><span class="line">        <span class="keyword">if</span>(n == <span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">        	head = p1;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">        	p2-&gt;next = p1;</span><br><span class="line">        &#125;</span><br><span class="line">        p2 = p1;</span><br><span class="line">        p1 = (struct weapon*)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(struct weapon));</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d,%d"</span>,&amp;p1-&gt;price, &amp;p1-&gt;atk);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">weapon</span> *<span class="title">p</span>;</span></span><br><span class="line">    p = create();</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d,%d"</span>,p-&gt;price,p-&gt;atk);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><strong>注：</strong>更多数据结构知识请参阅《数据结构（C语言版）》。</p>
<h1 id="递归与递推"><a href="#递归与递推" class="headerlink" title="递归与递推"></a>递归与递推</h1><p>递归：将一个问题规模为n的问题降为规模为(n-1)的问题，然后依次降低规模（层层往下），直至问题得到低规模的解，之后依次带入高规模的问题中（层层往上），最终得到规模为n解。从n -&gt; 1 -&gt; n。<br>递推：先构造解决一个低的规模问题，然后依次（层层往上）推导出高规模的问题解。<br>从1 -&gt; n。</p>
]]></content>
      
        <categories>
            
            <category> 互联网 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Linux </tag>
            
            <tag> C </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Linux C语言指针与内存]]></title>
      <url>https://hubojing.github.io/2018/07/20/Linux%20C%E8%AF%AD%E8%A8%80%E6%8C%87%E9%92%88%E4%B8%8E%E5%86%85%E5%AD%98/</url>
      <content type="html"><![CDATA[<div align="left"><br><img src="https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1532192612472&di=54237945ef2418e1a659ba5a4db2ba1d&imgtype=0&src=http%3A%2F%2Fimg.mukewang.com%2F5707624d0001423906000338-590-330.jpg" width="300" height="180" style="float:right;"><br><br><br>　　<strong>再学C语言，复习&amp;笔记。</strong><br><br><br> </div>

<a id="more"></a>
<p>系列顺序：<br><a href="https://hubojing.github.io/2018/07/17/Linux%20C%E8%AF%AD%E8%A8%80%E7%BC%96%E7%A8%8B%E5%9F%BA%E6%9C%AC%E5%8E%9F%E7%90%86%E4%B8%8E%E5%AE%9E%E8%B7%B5/">Linux C语言编程基本原理与实践</a><br><a href="https://hubojing.github.io/2018/07/20/Linux%20C%E8%AF%AD%E8%A8%80%E6%8C%87%E9%92%88%E4%B8%8E%E5%86%85%E5%AD%98/">Linux C语言指针与内存</a><br><a href="https://hubojing.github.io/2018/07/21/linux%20C%E8%AF%AD%E8%A8%80%E7%BB%93%E6%9E%84%E4%BD%93/">Linux C语言结构体</a></p>
<p>更多Linux知识：<br><a href="https://hubojing.github.io/2016/12/26/linux%E6%95%B4%E7%90%86%E7%AC%94%E8%AE%B0/">一天一点linux</a></p>
<hr>
<h1 id="gdb调试工具的使用"><a href="#gdb调试工具的使用" class="headerlink" title="gdb调试工具的使用"></a>gdb调试工具的使用</h1><p><code>gdb -help</code> 查看gdb用法<br>gcc -g main.c -o main.out 编译命令<br>gdb ./main.out 调试命令<br><code>l</code> （list）列出代码（按回车显示全部）<br><code>break + 行号</code>    打断点<br><code>start</code> 开始单步调试<br><code>n</code>   执行下一行<br><code>p a</code> 打印a变量在内存中的情况<br><code>s</code> 进入调用函数内部<br><code>bt</code> 查看函数堆栈<br><code>f 1</code> 表示切换函数栈(切换到编号为1的函数)<br><code>q</code> 退出调试</p>
<h2 id="demo"><a href="#demo" class="headerlink" title="demo"></a>demo</h2><p>main.c<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">change</span><span class="params">(<span class="keyword">int</span> *a, <span class="keyword">int</span> *b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> temp;</span><br><span class="line">    temp = *a;</span><br><span class="line">    *a = *b;</span><br><span class="line">    *b = temp;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> a =  <span class="number">5</span>;</span><br><span class="line">    <span class="keyword">int</span> b = <span class="number">3</span>;</span><br><span class="line">    change(&amp;a, &amp;b);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"a = %d\n, b = %d\n"</span>, a, b);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>main2.c<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">change</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> temp;</span><br><span class="line">    temp = a;</span><br><span class="line">    a = b;</span><br><span class="line">    b = temp;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> a =  <span class="number">5</span>;</span><br><span class="line">    <span class="keyword">int</span> b = <span class="number">3</span>;</span><br><span class="line">    change(a, b);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"a = %d\n, b = %d\n"</span>, a, b);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>调试main2.c：<br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="https://github.com/hubojing/BlogImages/blob/master/Linux%20C%E8%AF%AD%E8%A8%80%E6%8C%87%E9%92%88%E4%B8%8E%E5%86%85%E5%AD%98%E2%80%94%E2%80%94%E8%B0%83%E8%AF%95main2.c.png?raw=true" alt="调试main2.c" title="">
                </div>
                <div class="image-caption">调试main2.c</div>
            </figure></p>
<p>注意change函数传入的是a=5,b=3这两个数值。</p>
<p>调试main.c:<br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="https://github.com/hubojing/BlogImages/blob/master/Linux%20C%E8%AF%AD%E8%A8%80%E6%8C%87%E9%92%88%E4%B8%8E%E5%86%85%E5%AD%98%E2%80%94%E2%80%94%E8%B0%83%E8%AF%95main.c.png?raw=true" alt="调试main.c" title="">
                </div>
                <div class="image-caption">调试main.c</div>
            </figure></p>
<p>注意change函数传入的是两个地址。</p>
<h1 id="指针与内存"><a href="#指针与内存" class="headerlink" title="指针与内存"></a>指针与内存</h1><p>32位主机——32位总线（2^32个字节）最多只能放4G内存条。<br>2^10*2^10*2^10^2^2<br>=1024*1024*1024*4字节<br>=1024*1024*4K<br>=1024*4M<br>=4G</p>
<p>2^30=G<br>2^40=T</p>
<hr>
<h2 id="内存分配"><a href="#内存分配" class="headerlink" title="内存分配"></a>内存分配</h2><p> 系统内核（48位以上）<br> 栈（暂时存储首先执行的程序状态）<br> 自由可分配内存（可动态分配内存）<br> 堆<br> 数据段（声明一些全局变量或者声明一些常量）<br> 代码段（程序源代码编译后存放在此）</p>
<hr>
<p> C语言语法是不允许直接操作代码段的。<br> 函数调用信息保存在栈(stack)中。</p>
<p> 变量的本质是什么？<br> 变量名它只是一个代号，变量的本质就是内存。<br> 指针保存的是什么？<br> 指针保存的就是内存地址。</p>
<p> int *pa=&amp;a<br> 指将a的地址传给pa。<br> p pa看到的是a的地址（&amp;a）。<br>p &amp;pa才能看到pa本身的地址。</p>
<p>GCC会对内存变量分配进行优化：同一种变量类型会放到一块儿。<br>静态变量、常量、全局变量存于内存的数据段（数据段位置高于代码段）。<br>栈区域（最接近系统控制的内存空间）保存的是函数的运行状态：函数执行到哪一个命令？每一个变量保存的什么值？等等。</p>
<p>地址分配：代码,数据段是从下往上分配(先低地址，后高地址)，即：先声明的函数地址小，后声明的函数地址大；栈是从上往下分配(先高地址，后低地址)</p>
<p>函数中静态变量、局部变量区别:<br>局部变量在栈(相对数据段而言的高地址)中，而静态变量在数据段(低地址)中。<br>所以在多次调用函数时，静态变量不会被重新初始化。或者这么说，静态变量的生存周期和数据段相同，局部变量生存时间受调用函数时，所属函数进栈出栈的影响而会重新初始化。<br>全局变量和静态变量都在数据段中，但静态变量是某个函数特有的。</p>
<h2 id="函数指针"><a href="#函数指针" class="headerlink" title="函数指针"></a>函数指针</h2><p>函数指针格式：<br>返回值类型 (*变量名)(形参列表);<br>p pa指找到数据的内存地址（a的地址）；<br>p *pa指找到pa中的数据；<br>p &amp;pa指找到pa本身的地址。<br>quadrate在代码段时，<br>p quadrate 函数的内存地址(quadrate )<br>p *quadrate 在地址前加*，表示通过地址取值<br> int quadrate(int a);是一个函数<br>int （*pquadrate)(int a)=&quadrate;则是指向这个函数的指针<br>int s=(*pquadrate)(a)可以调用函数</p>
<h1 id="字符串与数组"><a href="#字符串与数组" class="headerlink" title="字符串与数组"></a>字符串与数组</h1><p>x/3d 地址    gdb调试打印内存：x代表打印，3代表打印长度，d代表十进制输出<br>例： x/3d 0x7fffffffde14<br>x/6cb   c:字符形式 :b byte为单位</p>
<p>数组是指针常量，指针是指针变量。<br>数组当作内存地址输入的话，可以直接当作参数传进去，不用加&amp;取址符。</p>
<p>栈内存中，gcc编译会作内存优化：</p>
<ol>
<li>使同一数据结构的变量在一起；</li>
<li>先定义的变量内存地址会小于后定义的；</li>
<li>只有堆内存和栈内存可以写入数据，代码段的内存编译以后无法修改。<br>例：<br>char *str=”world”;<br>scanf(“%s”, str);<br>将报错。因为”world”是一个常量，在代码段中，不可更改。<br>char str[]=”hello”;<br>scanf(“%s”, str);<br>正确。str在栈或堆中，可修改。</li>
</ol>
]]></content>
      
        <categories>
            
            <category> 互联网 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Linux </tag>
            
            <tag> C </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Linux C语言编程基本原理与实践]]></title>
      <url>https://hubojing.github.io/2018/07/17/Linux%20C%E8%AF%AD%E8%A8%80%E7%BC%96%E7%A8%8B%E5%9F%BA%E6%9C%AC%E5%8E%9F%E7%90%86%E4%B8%8E%E5%AE%9E%E8%B7%B5/</url>
      <content type="html"><![CDATA[<div align="left"><br><img src="https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1531846872888&di=911d449b8951faf6481a160bd65576ce&imgtype=0&src=http%3A%2F%2Fimg.mukewang.com%2F570762760001a1db06000338-590-330.jpg" width="300" height="180" style="float:right;"><br><br><br>　　<strong>再学C语言，复习&amp;笔记。</strong><br><br><br> </div>

<a id="more"></a>
<p>系列顺序：<br><a href="https://hubojing.github.io/2018/07/17/Linux%20C%E8%AF%AD%E8%A8%80%E7%BC%96%E7%A8%8B%E5%9F%BA%E6%9C%AC%E5%8E%9F%E7%90%86%E4%B8%8E%E5%AE%9E%E8%B7%B5/">Linux C语言编程基本原理与实践</a><br><a href="https://hubojing.github.io/2018/07/20/Linux%20C%E8%AF%AD%E8%A8%80%E6%8C%87%E9%92%88%E4%B8%8E%E5%86%85%E5%AD%98/">Linux C语言指针与内存</a><br><a href="https://hubojing.github.io/2018/07/21/linux%20C%E8%AF%AD%E8%A8%80%E7%BB%93%E6%9E%84%E4%BD%93/">Linux C语言结构体</a></p>
<p>更多Linux知识：<br><a href="https://hubojing.github.io/2016/12/26/linux%E6%95%B4%E7%90%86%E7%AC%94%E8%AE%B0/">一天一点linux</a></p>
<hr>
<h1 id="常用指令"><a href="#常用指令" class="headerlink" title="常用指令"></a>常用指令</h1><p><code>sudo</code>管理员权限<br><code>sudo apt-get update</code> 更新资源（安装软件前最好先更新资源）<br><code>sudo apt-get install vim(软件名称)</code> 安装某软件<br><code>cd ~</code>   进入home目录<br><code>pwd</code>  显示当前目录路径<br><code>ls</code> 显示当前文件夹下所有文件夹及文件<br><code>ls -l</code> 进入当前目录的文件夹目录后查看当前文件夹包含的文件/文件夹的类型、创建时间、用户权限、用户和用户组<br>（最前面是“d”为文件夹；“-”为普通类型的文件）<br><code>touch + 文件名</code>  新建文件<br><code>rm + 文件名</code>     删除文件<br><code>mkdir + 目录名</code>  新建目录<br><code>vi(vim) + 文件名</code> 使用vim编辑文件<br><code>clear</code> 清洁屏幕<br><code>cc -v</code> 检查编译器<br><code>gcc -v</code> 检查编译器</p>
<p>VIM命令模式：<br><code>dd</code> 删除整行<br><code>i</code> 在光标前面插入<br><code>a</code> 在光标后面插入<br><code>x</code> 删除单个字符<br><code>Shift + a</code> 行尾插入<br><code>Shift + i</code> 行首插入<br><code>o</code> 下一行插入<br><code>Shift + o</code> 上行插入<br><code>:$</code> 跳到代码末尾</p>
<h1 id="第一个Linux-C程序"><a href="#第一个Linux-C程序" class="headerlink" title="第一个Linux C程序"></a>第一个Linux C程序</h1><p>编译文件：<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cc a.c</span><br></pre></td></tr></table></figure></p>
<p>会得到a.out<br>编译文件后查看文件权限：<br>rw-：可读、可写<br>rwx:可读、可写、可执行<br>三个rwx  1创建用户  2与创建用户在同一个用户组  3任意用户<br>运行文件：<br>“.” 当前路径<br>“./” 当前路径下的文件<br>执行文件：./a.out</p>
<h1 id="多文件操作"><a href="#多文件操作" class="headerlink" title="多文件操作"></a>多文件操作</h1><p><code>sp max.c</code>  新建max.c文件(窗口打开多个文件)<br><code>ctrl + w +下箭头</code> 跳转到下一个编辑框<br><code>ctrl + w +下箭头</code> 跳转到上一个编辑框<br><code>对应行数+d+d</code> 剪切光标下相应行数的程序<br>9dd（代码占九行，剪切代码）<br>按<code>p</code>粘贴在剪切板的程序<br><code>set nu</code> 打开行号<br><code>:wqa</code> 保存所有文件并退出<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">gcc hello.c -o hello.out  指定编译文件（-o 给编译后的文件重命名）</span><br><span class="line">cp a.c b.c  拷贝文件：将a.c拷贝到b.c</span><br><span class="line">cat a.c 查看源代码程序</span><br></pre></td></tr></table></figure></p>
<p>分开编译：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gcc -c 文件名.c -o 文件名.o</span><br></pre></td></tr></table></figure></p>
<p>函数可以先编译成.o文件，然后再和主文件一起编译成可执行文件。在源代码多的时候可以提高效率。<br>例如：<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">gcc -c max.c -o max.o</span><br><span class="line">gcc max.o hello.c</span><br><span class="line">./a.out</span><br><span class="line">cp max.c min.c</span><br><span class="line">rm a.out</span><br><span class="line">gcc-c min.c -o min.o </span><br><span class="line">gcc gcc max.o min.o hello.c</span><br><span class="line">./a.out</span><br></pre></td></tr></table></figure></p>
<p>gcc编译流程分为4步：<br>预处理(Pre-Processing) －&gt; 编译(Compling) -&gt; 汇编(Assembling) -&gt; 连接(Linking)<br>预处理：处理#include、#define、#ifdef 等宏命令<br>编译：把预处理完的文件编译为汇编程序.s<br>汇编：把汇编程序.s编译为.o二进制文件<br>链接：把多个二进制文件.o集合（链接）成一个可执行文件</p>
<p>使用别人的静态库.o文件(机器码，无法查看原代码)可以创建.h文件，然后在源程序中#include&lt;文件名.h&gt;来引用。</p>
<p>hello.c<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"max.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"min.h"</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> a1 = <span class="number">33</span>;</span><br><span class="line">    <span class="keyword">int</span> a2 = <span class="number">21</span>;</span><br><span class="line">    <span class="keyword">int</span> maxNum = max(a1, a2);</span><br><span class="line">    <span class="keyword">int</span> minNum = min(a1, a2);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d,%d\n"</span>, maxNum, minNum);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>max.c<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">max</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">if</span>(a &gt; b)&#123;</span><br><span class="line">    	<span class="keyword">return</span> a;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    	<span class="keyword">return</span> b;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>min.c<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">min</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">if</span>(a &lt; b)&#123;</span><br><span class="line">    	<span class="keyword">return</span> a;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    	<span class="keyword">return</span> b;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>max.h<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">max</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span>;</span><br></pre></td></tr></table></figure></p>
<p>min.h<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">min</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span>;</span><br></pre></td></tr></table></figure></p>
<h1 id="makeFile的编写与使用"><a href="#makeFile的编写与使用" class="headerlink" title="makeFile的编写与使用"></a>makeFile的编写与使用</h1><p>make工具可以将大型的开发项目分成若干个模块。<br>make工具可以很清晰和很快捷的编译和整理源文件。</p>
<p><code>rm *.o</code> 表示删除所有.o文件<br><code>make -v</code> 检查make版本<br>vi Makefile  编译修改过的部分<br>输出文件：源文件<br>一个tab gcc命令<br>从上到下逐层求精<br>eg:<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">hello.out:max.o min.o hello.c</span><br><span class="line">        gcc max.o min.o hello -o hello.out</span><br><span class="line">max.o:max.c</span><br><span class="line">        gcc -c max.c</span><br><span class="line">min.o:min.c</span><br><span class="line">        gcc -c min.c</span><br></pre></td></tr></table></figure></p>
<p>最后用make命令执行</p>
<p>重复使用make时，中间生成过的文件不需要再生成，没有修改过的文件不用再编译，会直接跳过该段代码，所以更加节省编译时间。</p>
<p><code>gcc-c</code> 参数的意义：<br><code>-c</code> 参数是将源代码编译成“目标文件 .o”，不进行连接<br>后面多个目标文件可通过-o链接成可执行文件。<br>不使用这个参数时gcc会直接进行编译链接，生成可执行文件。</p>
<h1 id="main函数详解"><a href="#main函数详解" class="headerlink" title="main函数详解"></a>main函数详解</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># main函数的完整形式</span></span><br><span class="line"><span class="keyword">int</span> main（<span class="keyword">int</span> argc，<span class="keyword">char</span>* argv[]）</span><br><span class="line">&#123;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"hello world\n"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>gcc main.c -o main.out &amp;&amp; ./ main.out<br>echo \$?    执行成功则返回0</p>
<p>参数<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc,<span class="keyword">char</span>* argv[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"argc is %d\n"</span>,argc);</span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;argv;i++)&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"argv[%d] is %s\n"</span>,i,argv[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>./out.c -l -s asd qwe</p>
<p>输出为：<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">argc is <span class="number">5</span></span><br><span class="line">argv[<span class="number">0</span>] is ./m3.out</span><br><span class="line">argv[<span class="number">1</span>] is -l</span><br><span class="line">argv[<span class="number">2</span>] is -a</span><br><span class="line">argv[<span class="number">3</span>] is asd</span><br><span class="line">argv[<span class="number">4</span>] is qwe</span><br></pre></td></tr></table></figure></p>
<h1 id="标准输入流输出流以及错误流"><a href="#标准输入流输出流以及错误流" class="headerlink" title="标准输入流输出流以及错误流"></a>标准输入流输出流以及错误流</h1><p>cio.c<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt; //标准输入输出</span></span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">stdin</span></span><br><span class="line"><span class="comment">stdout</span></span><br><span class="line"><span class="comment">stderr</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">"hello world!\n"</span>); <span class="comment">//输出功能由标准输出流完成，printf是系统封装后的</span></span><br><span class="line">  <span class="keyword">int</span> a;</span><br><span class="line">  <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;a); <span class="comment">//标准输入流，错误流是系统出错的时候的</span></span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">"input value is : %d\n"</span>, a);</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>在输入a.out时，程序执行，系统给程序提供了一个进程，当程序启动时，系统也提供给程序一系列的指针。linux将所有的外设（摄像头，打印机等），都视为文件。当启动应用程序时候，会产生三个文件（stdin，stdout，stderr，即标准输入，输出，错误流）。<br>默认情况下，输入流就是键盘，stdout默认为显示器，可切换为网卡或者打印机。</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">printf</span>(<span class="string">"Please input the value a:\n"</span>);</span><br><span class="line"><span class="built_in">fprintf</span>(<span class="built_in">stdout</span>, <span class="string">"please input the value a:\n"</span>);</span><br></pre></td></tr></table></figure>
<p>因为stdout默认是显示器，上两句就是等价的，printf其实就是fprintf封装后得到的。<br>同理，scanf和fscanf等价：<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;a);</span><br><span class="line"><span class="built_in">fscanf</span>(<span class="built_in">stdin</span>, <span class="string">"%d"</span>, &amp;a);</span><br></pre></td></tr></table></figure></p>
<p>错误流：<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(a &lt; <span class="number">0</span>)&#123;</span><br><span class="line"><span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">"the value must &gt; 0\n"</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br></pre></td></tr></table></figure></p>
<p>通过返回值1和0,让程序知道出错了。再次编译cc cio.c -o a2.out，我们运行a2.out，输入2则正常执行，当输入-1，则有对应的提示，即错误流发挥作用。<br>其实Linux这个很大的系统，就是由这些类似的小工具完成的。当等于0是为正确，错的话为其他值。<br>标准的输入流，输出流，以及错误流还可以重定向。</p>
<p>Linux几乎可以用于任何领域，这里我们不得不提出linux的通道，管道起到了很重要的作用，不同应用程序之间要配合使用，就需要用到管道。<br>先说输入流，输出流和错误流的重定向机制：<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"input the int value i:\n"</span>); \\<span class="built_in">printf</span>其实对<span class="built_in">fprintf</span>的封装，是从标准输出流（即<span class="built_in">stdout</span>）来输出这个过程</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;i); <span class="comment">//默认输入流是键盘</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"input the int value j:\n"</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;j);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"i+j=%d\n"</span>, i+j);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>cc main.c<br>得到a.out，运行a.out，我们分别输入3和5输入到终端。我们标准输出流是1，输出入是0。<br><code>&gt;&gt;</code> 标准输出流重新定向符<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">./a.out <span class="number">1</span>&gt;&gt; a.txt   输出到a.txt（默认为<span class="number">1</span>，可不写<span class="number">1</span>）</span><br><span class="line">./a.out &gt;&gt; a.txt	内容追加下方</span><br><span class="line">./a.out &gt; a.txt		内容覆盖</span><br></pre></td></tr></table></figure></p>
<p>执行命令后，分别输入3回车后再输入5。再使用命令cat a.txt，可以看到已经输出到文件里的内容。<br>错误流重定向：1&gt;标准输出流重定向 2&gt;标准错误流重定向<br>./a.out 1&gt;t.txt 2&gt;f.txt 将正确的输出流重定向输出到t.txt，错误的输出流重定向输出到f.txt</p>
<p><code>&lt;&lt;</code> 标准输入流重新定向符<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./a.out &lt; input.txt 将input.txt的内容作为输入流传递给程序a.out</span><br></pre></td></tr></table></figure></p>
<p>综合使用标准输出流、标准错误流、标准输入流<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./a.out <span class="number">1</span>&gt;t.txt <span class="number">2</span>&gt;f.txt &lt;input.txt</span><br></pre></td></tr></table></figure></p>
<h1 id="管道原理及应用"><a href="#管道原理及应用" class="headerlink" title="管道原理及应用"></a>管道原理及应用</h1><p><code>ls /</code>    查看根目录<br><code>ls /etc/</code>    查看Linux默认配置目录<br><code>ls /etc/ | grep 关键字符</code>    将etc文件输出到一个管道<br><code>|</code>管道<br>eg. 要查找某个目录下有多少个文件名包含“ab”，可以写<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ls /etc/ | grep ab</span><br></pre></td></tr></table></figure></p>
<p>将前一个程序输出流重定向到grep，通过管道得到需要的内容。<br>ps -e | grep ssh<br>ps查看当前的进程，当前操作系统是否开启ssh进程</p>
<h2 id="管道使用demo"><a href="#管道使用demo" class="headerlink" title="管道使用demo"></a>管道使用demo</h2><p>程序avg.c，求任意个数的平均值：<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> sum, n;</span><br><span class="line">  <span class="built_in">scanf</span>(<span class="string">"%d,%d"</span>, &amp;sum, &amp;n);</span><br><span class="line">  <span class="keyword">float</span> v = sum / n;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">"v = %f\n"</span>, v);</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>cc avg.c -o avg.out</p>
<p>再写一个统计输入的程序input.c：<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> flag = <span class="number">1</span>;</span><br><span class="line">  <span class="keyword">int</span> i;</span><br><span class="line">  <span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">while</span>(flag)&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;i);</span><br><span class="line">    <span class="keyword">if</span>(<span class="number">0</span>==i)&#123; </span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    count++;</span><br><span class="line">    sum+=i;         </span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d,%d\n"</span>,sum,count);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>cc input.c -o input.out<br>结合使用以上两个程序，将所有数据进行统计，执行input.out，之后通过管道经过avg.out计算平均值。<br>./input.out | ./avg.out<br>以上就是通过管道，将两个小程序连接起来得到更复杂的程序的过程。</p>
]]></content>
      
        <categories>
            
            <category> 互联网 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Linux </tag>
            
            <tag> C </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[读取24位bmp像素数据（带透明通道）]]></title>
      <url>https://hubojing.github.io/2018/05/26/%E8%AF%BB%E5%8F%9624%E4%BD%8Dbmp%E5%83%8F%E7%B4%A0%E6%95%B0%E6%8D%AE%EF%BC%88%E5%B8%A6%E9%80%8F%E6%98%8E%E9%80%9A%E9%81%93%EF%BC%89/</url>
      <content type="html"><![CDATA[<div align="left"><br><img src="https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1526924327173&di=b20d0c60e8cde64ff85f51171d6ce16e&imgtype=0&src=http%3A%2F%2Fs6.51cto.com%2Fwyfs02%2FM01%2F73%2FCF%2FwKiom1YInRjCxIlAAAA5HZX_kU4372.jpg" width="300" height="180" style="float:right;"><br><br><br>　　<strong>一种读取24位bitmap资源的全部像素数据（加透明通道）的方法。</strong><br><br><br> </div>

<a id="more"></a>
<h1 id="相关知识"><a href="#相关知识" class="headerlink" title="相关知识"></a>相关知识</h1><p>BMP文件的数据按照从文件头开始的先后顺序分为四个部分：<br>◆ 位图文件头(bmp file header)：  提供文件的格式、大小等信息<br>◆ 位图信息头(bitmap information)：提供图像数据的尺寸、位平面数、压缩方式、颜色索引等信息<br>◆ 调色板(color palette)：可选，如使用索引来表示图像，调色板就是索引与其对应的颜色的映射表<br>◆ 位图数据(bitmap data)：图像数据区<br>24位和32位不需要调色板。</p>
<h1 id="提取像素原理"><a href="#提取像素原理" class="headerlink" title="提取像素原理"></a>提取像素原理</h1><p>24位，除去位图信息头后的剩余部分就是所需的像素信息。需注意的是，它的像素数据按照<strong>BGR排列</strong>，且数据从位图左下方开始，从左到右，<strong>从下到上</strong>存储。并且24位位图是没有透明通道的。</p>
<p>但我需要将其转换为RGB排列，且从上到下读取数据。另外我需要能显示透明色，也就是说，将24位位图转换为32位位图，即读取数据时增加一个透明通道（设置为0则透明）。</p>
<h1 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h1><p>以下是我写的实现该功能的粗糙代码。<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">BYTE* <span class="title">GetImageData</span><span class="params">(CBitmap* cBitmap)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	BITMAP bmp;</span><br><span class="line">    cBitmap-&gt;GetBitmap(&amp;bmp);</span><br><span class="line">    HBITMAP hbm = (HBITMAP)*cBitmap;</span><br><span class="line">    </span><br><span class="line">    HDC hDC = ::GetDC(<span class="literal">NULL</span>);</span><br><span class="line">    </span><br><span class="line">    LONG width = bmp.bmWidth * <span class="number">4</span>;</span><br><span class="line">    LONG height = bmp.bmHeight;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//定义位图信息</span></span><br><span class="line">    BITMAPINFO bi;</span><br><span class="line">    bi.bmiHeader.biSize = <span class="keyword">sizeof</span>(bi.bmiHeader);</span><br><span class="line">    bi.bmiHeader.biWidth = bmp.bmWidth;</span><br><span class="line">    bi.bmiHeader.biHeight = bmp.bmHeight;</span><br><span class="line">    bi.bmiHeader.biPlanes = <span class="number">1</span>;</span><br><span class="line">    bi.bmiHeader.biBitCount = <span class="number">32</span>;</span><br><span class="line">    bi.bmiHeader.biCompression = BI_RGB;</span><br><span class="line">    bi.bmiHeader.biSizeImage = width * height;</span><br><span class="line">    bi.bmiHeader.biClrUsed = <span class="number">0</span>;</span><br><span class="line">    bi.bmiHeader.biImportant = <span class="number">0</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//获取位图数据</span></span><br><span class="line">    BYTE* lpvBits = <span class="keyword">new</span> BYTE[width * height];</span><br><span class="line">    ::ZeroMemory(lpvBits, width * height);</span><br><span class="line">    ::GetDC(<span class="literal">NULL</span>);</span><br><span class="line">    ::GetDIBits(hDC, hbm, <span class="number">0</span>, height, lpvBits, &amp;bi, DIB_RGB_COLORS);</span><br><span class="line">    </span><br><span class="line">    BYTE buffer = <span class="number">0</span>;</span><br><span class="line">    BYTE* pData=<span class="keyword">new</span> BYTE[width * height];</span><br><span class="line">    <span class="keyword">int</span> temp = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i= height - <span class="number">1</span>;i &gt;= <span class="number">0</span>; --i)</span><br><span class="line">    &#123;</span><br><span class="line">    	<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j &lt; width; ++j)</span><br><span class="line">        &#123;</span><br><span class="line">        	<span class="keyword">if</span>(j % <span class="number">4</span> == <span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">            	BYTE tempBR = <span class="number">0</span>;</span><br><span class="line">                tempBR = lpvBits[width * i + j];<span class="comment">//b赋给temp</span></span><br><span class="line">                lpvBits[width * i + j] = lpvBits[width * i + j + <span class="number">2</span>];<span class="comment">//r赋给b</span></span><br><span class="line">                lpvBits[width * i + j + <span class="number">2</span>] = tempBR;<span class="comment">//temp赋给r</span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(j % <span class="number">4</span> == <span class="number">3</span>)<span class="comment">//透明通道</span></span><br><span class="line">            &#123;</span><br><span class="line">            	<span class="keyword">if</span>(lpvBits[width * i + j - <span class="number">3</span>] == <span class="number">255</span> &amp;&amp; lpvBits[width * i + j - <span class="number">2</span>] == <span class="number">255</span> &amp;&amp; lpvBits[width * i + j - <span class="number">1</span>] == <span class="number">255</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                	lpvBits[width * i + j] == <span class="number">0</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                &#123;</span><br><span class="line">                	lpvBits[width * i + j] == <span class="number">255</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            buffer = lpvBits[width * i + j];</span><br><span class="line">            <span class="built_in">memcpy</span>(&amp;pData[temp++], &amp;buffer, <span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span>(lpvBits != <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">    	<span class="keyword">delete</span> lpvBits;</span><br><span class="line">        lpvBits = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    ::ReleaseDC(<span class="literal">NULL</span>, hDC);</span><br><span class="line">    </span><br><span class="line">	DeleteObject(cBitmap);</span><br><span class="line">	</span><br><span class="line">    <span class="keyword">return</span> pData;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
]]></content>
      
        <categories>
            
            <category> 互联网 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> CPP </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[bmp保存和imagelist读取]]></title>
      <url>https://hubojing.github.io/2018/05/21/bmp%E4%BF%9D%E5%AD%98%E5%92%8Cimagelist%E8%AF%BB%E5%8F%96/</url>
      <content type="html"><![CDATA[<div align="left"><br><img src="https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1526924327173&di=b20d0c60e8cde64ff85f51171d6ce16e&imgtype=0&src=http%3A%2F%2Fs6.51cto.com%2Fwyfs02%2FM01%2F73%2FCF%2FwKiom1YInRjCxIlAAAA5HZX_kU4372.jpg" width="300" height="180" style="float:right;"><br><br><br>　　<strong>代码整理。</strong><br><br><br> </div>

<a id="more"></a>
<h1 id="bmp保存"><a href="#bmp保存" class="headerlink" title="bmp保存"></a>bmp保存</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">SaveBitmapToFile</span><span class="params">(CBitmap* bitmap, LPSTR lpFileName)</span>  </span></span><br><span class="line"><span class="function"></span>&#123;              </span><br><span class="line">    HBITMAP hBitmap;    <span class="comment">// 为刚才的屏幕位图句柄  </span></span><br><span class="line">    HDC hDC; <span class="comment">//设备描述表    </span></span><br><span class="line">    <span class="keyword">int</span> iBits; <span class="comment">//当前显示分辨率下每个像素所占字节数    </span></span><br><span class="line">    WORD wBitCount; <span class="comment">//位图中每个像素所占字节数    </span></span><br><span class="line">    DWORD dwPaletteSize = <span class="number">0</span>, <span class="comment">//定义调色板大小  </span></span><br><span class="line">        dwBmBitsSize,  <span class="comment">//位图中像素字节大小     </span></span><br><span class="line">        dwDIBSize,   <span class="comment">//位图文件大小  </span></span><br><span class="line">        dwWritten;  <span class="comment">//写入文件字节数  </span></span><br><span class="line">    BITMAP Bitmap; <span class="comment">//位图属性结构    </span></span><br><span class="line">    BITMAPFILEHEADER bmfHdr; <span class="comment">//位图文件头结构    </span></span><br><span class="line">    BITMAPINFOHEADER bi; <span class="comment">//位图信息头结构      </span></span><br><span class="line">    LPBITMAPINFOHEADER lpbi; <span class="comment">//指向位图信息头结构    </span></span><br><span class="line">    HANDLE fh,   <span class="comment">//定义文件  </span></span><br><span class="line">        hDib,    <span class="comment">//分配内存句柄  </span></span><br><span class="line">        hPal,   <span class="comment">//调色板句柄  </span></span><br><span class="line">        hOldPal = <span class="literal">NULL</span>;  </span><br><span class="line">      </span><br><span class="line">    <span class="comment">//计算位图文件每个像素所占字节数    </span></span><br><span class="line">    hBitmap = (HBITMAP)*bitmap;    </span><br><span class="line">    hDC = CreateDC(<span class="string">"DISPLAY"</span>,<span class="literal">NULL</span>,<span class="literal">NULL</span>,<span class="literal">NULL</span>);    </span><br><span class="line">    iBits = GetDeviceCaps(hDC, BITSPIXEL) * GetDeviceCaps(hDC, PLANES);    </span><br><span class="line">    DeleteDC(hDC);  </span><br><span class="line">      </span><br><span class="line">    <span class="keyword">if</span> (iBits &lt;= <span class="number">1</span>)    </span><br><span class="line">        wBitCount = <span class="number">1</span>;    </span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (iBits &lt;= <span class="number">4</span>)    </span><br><span class="line">        wBitCount = <span class="number">4</span>;    </span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (iBits &lt;= <span class="number">8</span>)    </span><br><span class="line">        wBitCount = <span class="number">8</span>;    </span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (iBits &lt;= <span class="number">24</span>)    </span><br><span class="line">        wBitCount = <span class="number">24</span>;    </span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (iBits &lt;= <span class="number">32</span>)  </span><br><span class="line">        wBitCount = <span class="number">32</span>;  </span><br><span class="line">      </span><br><span class="line">    <span class="comment">//计算调色板大小    </span></span><br><span class="line">    <span class="keyword">if</span> (wBitCount &lt;= <span class="number">8</span>)    </span><br><span class="line">        dwPaletteSize = (<span class="number">1</span> &lt;&lt; wBitCount) * <span class="keyword">sizeof</span> (RGBQUAD);  </span><br><span class="line">      </span><br><span class="line">    <span class="comment">//设置位图信息头结构    </span></span><br><span class="line">    GetObject(hBitmap, <span class="keyword">sizeof</span> (BITMAP), (LPSTR)&amp;Bitmap);  </span><br><span class="line">    bi.biSize = <span class="keyword">sizeof</span> (BITMAPINFOHEADER);    </span><br><span class="line">    bi.biWidth = Bitmap.bmWidth;    </span><br><span class="line">    bi.biHeight = Bitmap.bmHeight;    </span><br><span class="line">    bi.biPlanes = <span class="number">1</span>;      </span><br><span class="line">    bi.biBitCount = wBitCount;    </span><br><span class="line">    bi.biCompression = BI_RGB;    </span><br><span class="line">    bi.biSizeImage = <span class="number">0</span>;    </span><br><span class="line">    bi.biXPelsPerMeter = <span class="number">0</span>;    </span><br><span class="line">    bi.biYPelsPerMeter = <span class="number">0</span>;    </span><br><span class="line">    bi.biClrUsed = <span class="number">0</span>;    </span><br><span class="line">    bi.biClrImportant = <span class="number">0</span>;    </span><br><span class="line">      </span><br><span class="line">    dwBmBitsSize = ((Bitmap.bmWidth * wBitCount+<span class="number">31</span>) / <span class="number">32</span>) * <span class="number">4</span> * Bitmap.bmHeight;    </span><br><span class="line">      </span><br><span class="line">    <span class="comment">//为位图内容分配内存    </span></span><br><span class="line">    hDib = GlobalAlloc(GHND, dwBmBitsSize + dwPaletteSize + <span class="keyword">sizeof</span> (BITMAPINFOHEADER));    </span><br><span class="line">    lpbi = (LPBITMAPINFOHEADER)GlobalLock(hDib);    </span><br><span class="line">    *lpbi = bi;  </span><br><span class="line">      </span><br><span class="line">    <span class="comment">// 处理调色板         </span></span><br><span class="line">    hPal = GetStockObject(DEFAULT_PALETTE);    </span><br><span class="line">    <span class="keyword">if</span> (hPal)    </span><br><span class="line">    &#123;    </span><br><span class="line">        hDC = ::GetDC(<span class="literal">NULL</span>);      </span><br><span class="line">        hOldPal = ::SelectPalette(hDC, (HPALETTE)hPal, FALSE);    </span><br><span class="line">        RealizePalette(hDC);  </span><br><span class="line">    &#125;    </span><br><span class="line">      </span><br><span class="line">    <span class="comment">//   获取该调色板下新的像素值    </span></span><br><span class="line">    GetDIBits(hDC, hBitmap, <span class="number">0</span>, (UINT) Bitmap.bmHeight,    </span><br><span class="line">        (LPSTR)lpbi + <span class="keyword">sizeof</span> (BITMAPINFOHEADER) + dwPaletteSize,  </span><br><span class="line">        (LPBITMAPINFO)lpbi, DIB_RGB_COLORS);    </span><br><span class="line">      </span><br><span class="line">    <span class="comment">//恢复调色板       </span></span><br><span class="line">    <span class="keyword">if</span> (hOldPal)      </span><br><span class="line">    &#123;    </span><br><span class="line">        SelectPalette(hDC, (HPALETTE)hOldPal, TRUE);    </span><br><span class="line">        RealizePalette(hDC);    </span><br><span class="line">        ::ReleaseDC(<span class="literal">NULL</span>, hDC);  </span><br><span class="line">    &#125;    </span><br><span class="line">      </span><br><span class="line">    <span class="comment">//创建位图文件              </span></span><br><span class="line">    fh = CreateFile(lpFileName, GENERIC_WRITE,  </span><br><span class="line">        <span class="number">0</span>, <span class="literal">NULL</span>, CREATE_ALWAYS,  </span><br><span class="line">        FILE_ATTRIBUTE_NORMAL | FILE_FLAG_SEQUENTIAL_SCAN, <span class="literal">NULL</span>);    </span><br><span class="line">      </span><br><span class="line">    <span class="keyword">if</span> (fh == INVALID_HANDLE_VALUE)  </span><br><span class="line">        <span class="keyword">return</span> FALSE;    </span><br><span class="line">      </span><br><span class="line">    <span class="comment">//   设置位图文件头    </span></span><br><span class="line">    bmfHdr.bfType = <span class="number">0x4D42</span>;     <span class="comment">//   "BM"    </span></span><br><span class="line">    dwDIBSize = <span class="keyword">sizeof</span> (BITMAPFILEHEADER)       </span><br><span class="line">        + <span class="keyword">sizeof</span> (BITMAPINFOHEADER)    </span><br><span class="line">        + dwPaletteSize + dwBmBitsSize;      </span><br><span class="line">    bmfHdr.bfSize = dwDIBSize;    </span><br><span class="line">    bmfHdr.bfReserved1 = <span class="number">0</span>;    </span><br><span class="line">    bmfHdr.bfReserved2 = <span class="number">0</span>;    </span><br><span class="line">    bmfHdr.bfOffBits = (DWORD)<span class="keyword">sizeof</span> (BITMAPFILEHEADER)     </span><br><span class="line">        + (DWORD)<span class="keyword">sizeof</span> (BITMAPINFOHEADER)    </span><br><span class="line">        + dwPaletteSize;      </span><br><span class="line">      </span><br><span class="line">    <span class="comment">//   写入位图文件头    </span></span><br><span class="line">    WriteFile(fh, (LPSTR)&amp;bmfHdr, <span class="keyword">sizeof</span>(BITMAPFILEHEADER), &amp;dwWritten, <span class="literal">NULL</span>);    </span><br><span class="line">      </span><br><span class="line">    <span class="comment">//   写入位图文件其余内容    </span></span><br><span class="line">    WriteFile(fh, (LPSTR)lpbi, dwDIBSize,  </span><br><span class="line">        &amp;dwWritten, <span class="literal">NULL</span>);  </span><br><span class="line">      </span><br><span class="line">    <span class="comment">//清除            </span></span><br><span class="line">    GlobalUnlock(hDib);    </span><br><span class="line">    GlobalFree(hDib);    </span><br><span class="line">    CloseHandle(fh);    </span><br><span class="line">  </span><br><span class="line">    <span class="keyword">return</span> TRUE;      </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>调用方法：SaveBitmapToFile(cbm, “1.bmp”);  </p>
<h1 id="imagelist读取bmp"><a href="#imagelist读取bmp" class="headerlink" title="imagelist读取bmp"></a>imagelist读取bmp</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">GetImage</span><span class="params">(CImageList&amp; imglist, CBitmap&amp; dist ,<span class="keyword">int</span> num)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="function">CClientDC <span class="title">dc</span><span class="params">(<span class="literal">NULL</span>)</span></span>;</span><br><span class="line"></span><br><span class="line">IMAGEINFO ii;</span><br><span class="line">imglist.GetImageInfo(num, &amp;ii);</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> nWidth = ii.rcImage.right - ii.rcImage.left;</span><br><span class="line"><span class="keyword">int</span> nHeight = ii.rcImage.bottom - ii.rcImage.top;</span><br><span class="line"></span><br><span class="line">dist.CreateCompatibleBitmap(&amp;dc, nWidth, nHeight);</span><br><span class="line">CDC memDC;</span><br><span class="line">memDC.CreateCompatibleDC(&amp;dc);</span><br><span class="line">CBitmap* pOldBitmap = memDC.SelectObject(&amp;dist);</span><br><span class="line"></span><br><span class="line">memDC.FillSolidRect(<span class="number">0</span>, <span class="number">0</span>, nWidth, nHeight, </span><br><span class="line">RGB(<span class="number">255</span>,<span class="number">255</span>,<span class="number">255</span>) );</span><br><span class="line"></span><br><span class="line">imglist.Draw(&amp;memDC, num, CPoint(<span class="number">0</span>, <span class="number">0</span>), ILD_NORMAL);</span><br><span class="line"></span><br><span class="line">memDC.SelectObject(pOldBitmap);</span><br><span class="line"></span><br><span class="line">memDC.DeleteDC();</span><br><span class="line"></span><br><span class="line">::DeleteObject(ii.hbmImage);</span><br><span class="line">::DeleteObject(ii.hbmMask);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>代码整理自互联网。</p>
]]></content>
      
        <categories>
            
            <category> 互联网 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> CPP </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Python开发简单爬虫]]></title>
      <url>https://hubojing.github.io/2018/03/11/Python%E5%BC%80%E5%8F%91%E7%AE%80%E5%8D%95%E7%88%AC%E8%99%AB/</url>
      <content type="html"><![CDATA[<div align="left"><br><img src="https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1520877147729&di=7931c89b81b24de8d540c04e40c7228a&imgtype=0&src=http%3A%2F%2Fserver.zzidc.com%2Fuploads%2Fallimg%2F171210%2F1-1G210204413632.png" width="300" height="180" style="float:right;"><br><br><br>　　<strong>人生苦短，Python当歌。</strong><br><br><br> </div>

<a id="more"></a>
<h1 id="简单爬虫架构"><a href="#简单爬虫架构" class="headerlink" title="简单爬虫架构"></a>简单爬虫架构</h1><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="https://github.com/hubojing/BlogImages/blob/master/Python%E5%BC%80%E5%8F%91%E7%AE%80%E5%8D%95%E7%88%AC%E8%99%AB%E2%80%94%E2%80%94%E7%AE%80%E5%8D%95%E7%88%AC%E8%99%AB%E6%9E%B6%E6%9E%84.png?raw=true" alt="简单爬虫架构" title="">
                </div>
                <div class="image-caption">简单爬虫架构</div>
            </figure>
<p>简单爬虫架构——运行流程<br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="https://github.com/hubojing/BlogImages/blob/master/Python%E5%BC%80%E5%8F%91%E7%AE%80%E5%8D%95%E7%88%AC%E8%99%AB%E2%80%94%E2%80%94%E8%BF%90%E8%A1%8C%E6%B5%81%E7%A8%8B.png?raw=true" alt="运行流程" title="">
                </div>
                <div class="image-caption">运行流程</div>
            </figure></p>
<h1 id="URL管理器和实现方法"><a href="#URL管理器和实现方法" class="headerlink" title="URL管理器和实现方法"></a>URL管理器和实现方法</h1><ul>
<li>URL管理器：管理待抓取URL集合和已抓取URL集合<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="https://github.com/hubojing/BlogImages/blob/master/Python%E5%BC%80%E5%8F%91%E7%AE%80%E5%8D%95%E7%88%AC%E8%99%AB%E2%80%94%E2%80%94URL%E7%AE%A1%E7%90%86%E5%99%A8.png?raw=true" alt="URL管理器" title="">
                </div>
                <div class="image-caption">URL管理器</div>
            </figure></li>
<li>实现方式<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="https://github.com/hubojing/BlogImages/blob/master/Python%E5%BC%80%E5%8F%91%E7%AE%80%E5%8D%95%E7%88%AC%E8%99%AB%E2%80%94%E2%80%94URL%E7%AE%A1%E7%90%86%E5%99%A8%E5%AE%9E%E7%8E%B0%E6%96%B9%E5%BC%8F.png?raw=true" alt="实现方式" title="">
                </div>
                <div class="image-caption">实现方式</div>
            </figure>
</li>
</ul>
<h1 id="网页下载器和urllib2模块"><a href="#网页下载器和urllib2模块" class="headerlink" title="网页下载器和urllib2模块"></a>网页下载器和urllib2模块</h1><ul>
<li><p>网页下载器：将互联网上URL对应的网页下载到本地的工具</p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="https://github.com/hubojing/BlogImages/blob/master/Python%E5%BC%80%E5%8F%91%E7%AE%80%E5%8D%95%E7%88%AC%E8%99%AB%E2%80%94%E2%80%94%E7%BD%91%E9%A1%B5%E4%B8%8B%E8%BD%BD%E5%99%A8.png?raw=true" alt="网页下载器" title="">
                </div>
                <div class="image-caption">网页下载器</div>
            </figure>
</li>
<li><p>Python的几种网页下载器</p>
</li>
</ul>
<ol>
<li>urllib2——Python官方基础模块</li>
<li>requests——第三方包更强大</li>
</ol>
<h2 id="urllib2下载网页的三种方法"><a href="#urllib2下载网页的三种方法" class="headerlink" title="urllib2下载网页的三种方法"></a>urllib2下载网页的三种方法</h2><p>以下代码基于Python2。</p>
<h3 id="最简洁方法"><a href="#最简洁方法" class="headerlink" title="最简洁方法"></a>最简洁方法</h3><p>url—&gt;urllib2.urlopen(url)</p>
<h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> urllib2</span><br><span class="line"></span><br><span class="line"><span class="comment"># 直接请求</span></span><br><span class="line">response = urllib2.urlopen(<span class="string">'http://www.baidu.com'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取状态码，如果是200表示获取成功</span></span><br><span class="line"><span class="keyword">print</span> response.getcode()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 读取内容</span></span><br><span class="line">cont = response.read()</span><br></pre></td></tr></table></figure>
<h3 id="法2：添加data、http-header"><a href="#法2：添加data、http-header" class="headerlink" title="法2：添加data、http header"></a>法2：添加data、http header</h3><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="https://github.com/hubojing/BlogImages/blob/master/Python%E5%BC%80%E5%8F%91%E7%AE%80%E5%8D%95%E7%88%AC%E8%99%AB%E2%80%94%E2%80%94urllib2%E6%B3%952.png?raw=true" alt="urllib2法2" title="">
                </div>
                <div class="image-caption">urllib2法2</div>
            </figure>
<h4 id="代码-1"><a href="#代码-1" class="headerlink" title="代码"></a>代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> urllib2</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建Request对象</span></span><br><span class="line">request = urllib2.Request(url)</span><br><span class="line"></span><br><span class="line"><span class="comment">#添加数据</span></span><br><span class="line">request.add_data(<span class="string">'a'</span>,<span class="string">'1'</span>)</span><br><span class="line"><span class="comment">#添加http的header</span></span><br><span class="line">request.add_header(<span class="string">'User-Agent'</span>,<span class="string">'Mozilla/5.0'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 发送请求获取结果</span></span><br><span class="line">response = urllib2.urlopen(request)</span><br></pre></td></tr></table></figure>
<h3 id="法3：添加特殊情景的处理器"><a href="#法3：添加特殊情景的处理器" class="headerlink" title="法3：添加特殊情景的处理器"></a>法3：添加特殊情景的处理器</h3><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="https://github.com/hubojing/BlogImages/blob/master/Python%E5%BC%80%E5%8F%91%E7%AE%80%E5%8D%95%E7%88%AC%E8%99%AB%E2%80%94%E2%80%94urllib2%E6%B3%953.png?raw=true" alt="urllib2法3" title="">
                </div>
                <div class="image-caption">urllib2法3</div>
            </figure>
<h4 id="代码-2"><a href="#代码-2" class="headerlink" title="代码"></a>代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> urllib2, cookielib</span><br><span class="line"></span><br><span class="line"><span class="comment">#创建cookie容器</span></span><br><span class="line">cj = cookielib.CookieJar()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建1个opener</span></span><br><span class="line">opener = urllib2.build_opener(urllib2.HTTPCookieProcessor(cj))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 给urllib2安装opener</span></span><br><span class="line">urllib2.install_opener(opener)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用带有cookie的urllib2访问网页</span></span><br><span class="line">response = urllib2.urlopen(<span class="string">"http://www/baidu.com/"</span>)</span><br></pre></td></tr></table></figure>
<h1 id="Python3代码"><a href="#Python3代码" class="headerlink" title="Python3代码"></a>Python3代码</h1><p>Python版本：3.7<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf8</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> urllib <span class="keyword">import</span> request</span><br><span class="line"><span class="keyword">import</span> http.cookiejar</span><br><span class="line"></span><br><span class="line">url=<span class="string">"http://www.baidu.com"</span></span><br><span class="line"></span><br><span class="line">print(<span class="string">'第一种方法'</span>)</span><br><span class="line">response1=request.urlopen(url)</span><br><span class="line">print(response1.getcode())</span><br><span class="line">print(len(response1.read()))</span><br><span class="line"></span><br><span class="line">print(<span class="string">'第二种方法'</span>)</span><br><span class="line">req=request.Request(url)</span><br><span class="line">req.add_header(<span class="string">'user-agent'</span>,<span class="string">'Mozilla/5.0'</span>)</span><br><span class="line">response2=request.urlopen(req)</span><br><span class="line">print(response2.getcode())</span><br><span class="line">print(len(response2.read()))</span><br><span class="line"></span><br><span class="line">print(<span class="string">'第三种方法'</span>)</span><br><span class="line">cj=http.cookiejar.CookieJar()</span><br><span class="line">opener=request.build_opener(request.HTTPCookieProcessor(cj))</span><br><span class="line">request.install_opener(opener)</span><br><span class="line">response3=request.urlopen(url)</span><br><span class="line">print(response3.getcode())</span><br><span class="line">print(cj)</span><br><span class="line">print(response3.read())</span><br></pre></td></tr></table></figure></p>
<p>注意：<strong>python3要使用urllib.request替换urllib2。</strong></p>
<h1 id="网页解析器和BeautifulSoup第三方模块"><a href="#网页解析器和BeautifulSoup第三方模块" class="headerlink" title="网页解析器和BeautifulSoup第三方模块"></a>网页解析器和BeautifulSoup第三方模块</h1><ul>
<li>网页解析器：从网页中提取有价值数据的工具<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="https://github.com/hubojing/BlogImages/blob/master/Python%E5%BC%80%E5%8F%91%E7%AE%80%E5%8D%95%E7%88%AC%E8%99%AB%E2%80%94%E2%80%94%E7%BD%91%E9%A1%B5%E8%A7%A3%E6%9E%90%E5%99%A8.png?raw=true" alt="网页解析器" title="">
                </div>
                <div class="image-caption">网页解析器</div>
            </figure></li>
<li><p>Python的几种网页解析器</p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="https://github.com/hubojing/BlogImages/blob/master/Python%E5%BC%80%E5%8F%91%E7%AE%80%E5%8D%95%E7%88%AC%E8%99%AB%E2%80%94%E2%80%94%E5%87%A0%E7%A7%8D%E7%BD%91%E9%A1%B5%E8%A7%A3%E6%9E%90%E5%99%A8.png?raw=true" alt="几种网页解析器" title="">
                </div>
                <div class="image-caption">几种网页解析器</div>
            </figure>
</li>
<li><p>结构化解析-DOM(Document Object Model)树</p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="https://github.com/hubojing/BlogImages/blob/master/Python%E5%BC%80%E5%8F%91%E7%AE%80%E5%8D%95%E7%88%AC%E8%99%AB%E2%80%94%E2%80%94DOM.png?raw=true" alt="DOM" title="">
                </div>
                <div class="image-caption">DOM</div>
            </figure>
</li>
</ul>
<h2 id="Beautiful-Soup安装"><a href="#Beautiful-Soup安装" class="headerlink" title="Beautiful Soup安装"></a>Beautiful Soup安装</h2><p>官方文档：<a href="https://www.crummy.com/software/BeautifulSoup/bs4/doc/index.zh.html" target="_blank" rel="noopener">https://www.crummy.com/software/BeautifulSoup/bs4/doc/index.zh.html</a></p>
<p>安装：pip install beautifulsoup4<br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="https://github.com/hubojing/BlogImages/blob/master/Python%E5%BC%80%E5%8F%91%E7%AE%80%E5%8D%95%E7%88%AC%E8%99%AB%E2%80%94%E2%80%94%E5%AE%89%E8%A3%85beautifulsoup.png?raw=true" alt="安装" title="">
                </div>
                <div class="image-caption">安装</div>
            </figure></p>
<p>pip install bs4<br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="https://github.com/hubojing/BlogImages/blob/master/Python%E5%BC%80%E5%8F%91%E7%AE%80%E5%8D%95%E7%88%AC%E8%99%AB%E2%80%94%E2%80%94%E5%AE%89%E8%A3%85bs4.png?raw=true" alt="安装bs4" title="">
                </div>
                <div class="image-caption">安装bs4</div>
            </figure></p>
<h2 id="Beautiful-Soup语法"><a href="#Beautiful-Soup语法" class="headerlink" title="Beautiful Soup语法"></a>Beautiful Soup语法</h2><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="https://github.com/hubojing/BlogImages/blob/master/Python%E5%BC%80%E5%8F%91%E7%AE%80%E5%8D%95%E7%88%AC%E8%99%AB%E2%80%94%E2%80%94BS%E8%AF%AD%E6%B3%95.png?raw=true" alt="BS语法" title="">
                </div>
                <div class="image-caption">BS语法</div>
            </figure>
<p>eg.<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;a href=&apos;123.html&apos; class=&apos;article_link&apos;&gt; Python &lt;/a&gt;</span><br></pre></td></tr></table></figure></p>
<p>节点名称：a<br>节点属性：href=’123.html’<br>节点属性：class=’article_link’<br>节点内容：Python</p>
<h2 id="代码-3"><a href="#代码-3" class="headerlink" title="代码"></a>代码</h2><h3 id="创建BeautifulSoup对象"><a href="#创建BeautifulSoup对象" class="headerlink" title="创建BeautifulSoup对象"></a>创建BeautifulSoup对象</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"></span><br><span class="line"><span class="comment"># 根据HTML网页字符串创建BeautifulSoup对象</span></span><br><span class="line">soup = BeautifulSoup(</span><br><span class="line">html_doc,<span class="comment"># HTML文档字符串</span></span><br><span class="line"><span class="string">'html.parser'</span><span class="comment"># HTML解析器</span></span><br><span class="line">from_encoding=<span class="string">'utf8'</span><span class="comment"># HTML文档的编码</span></span><br><span class="line">)</span><br></pre></td></tr></table></figure>
<h3 id="搜索节点（find-all-find）"><a href="#搜索节点（find-all-find）" class="headerlink" title="搜索节点（find_all,find）"></a>搜索节点（find_all,find）</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 方法：find_all(name, attrs, string)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查找所有标签为a的节点</span></span><br><span class="line">soup.find_all(<span class="string">'a'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查找所有标签为a，链接符合/view/123.htm形式的节点</span></span><br><span class="line">soup.find_all(<span class="string">'a'</span>, href=<span class="string">'/view/123.htm'</span>)</span><br><span class="line">soup.find_all(<span class="string">'a'</span>, href=re.compile(<span class="string">r'/view/\d+\.htm'</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查找所有标签为div，class为abc，文字为Python的节点</span></span><br><span class="line">soup.find_all(<span class="string">'div'</span>, class_=<span class="string">'abc'</span>, string=<span class="string">'Python'</span>)</span><br></pre></td></tr></table></figure>
<h3 id="访问节点信息"><a href="#访问节点信息" class="headerlink" title="访问节点信息"></a>访问节点信息</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 得到节点：&lt;a href='1.html'&gt;Python&lt;/a&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#获取查找到的节点的标签名称</span></span><br><span class="line">node.name</span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取查找到的a节点的href属性</span></span><br><span class="line">node[<span class="string">'href'</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取查找到的a节点的链接文字</span></span><br><span class="line">node.get_text()</span><br></pre></td></tr></table></figure>
<h3 id="Python3测试"><a href="#Python3测试" class="headerlink" title="Python3测试"></a>Python3测试</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf8</span></span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">html_doc = <span class="string">"""</span></span><br><span class="line"><span class="string">&lt;html&gt;&lt;head&gt;&lt;title&gt;The Dormouse's story&lt;/title&gt;&lt;/head&gt;</span></span><br><span class="line"><span class="string">&lt;body&gt;</span></span><br><span class="line"><span class="string">&lt;p class="title"&gt;&lt;b&gt;The Dormouse's story&lt;/b&gt;&lt;/p&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&lt;p class="story"&gt;Once upon a time there were three little sisters; and their names were</span></span><br><span class="line"><span class="string">&lt;a href="http://example.com/elsie" class="sister" id="link1"&gt;Elsie&lt;/a&gt;,</span></span><br><span class="line"><span class="string">&lt;a href="http://example.com/lacie" class="sister" id="link2"&gt;Lacie&lt;/a&gt; and</span></span><br><span class="line"><span class="string">&lt;a href="http://example.com/tillie" class="sister" id="link3"&gt;Tillie&lt;/a&gt;;</span></span><br><span class="line"><span class="string">and they lived at the bottom of a well.&lt;/p&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&lt;p class="story"&gt;...&lt;/p&gt;</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"></span><br><span class="line">soup=BeautifulSoup(html_doc, <span class="string">'html.parser'</span>)</span><br><span class="line"></span><br><span class="line">print(<span class="string">'获取所有的链接'</span>)</span><br><span class="line">links = soup.find_all(<span class="string">'a'</span>)</span><br><span class="line"><span class="keyword">for</span> link <span class="keyword">in</span> links:</span><br><span class="line">    print(link.name, link[<span class="string">'href'</span>], link.get_text())</span><br><span class="line">    </span><br><span class="line">print(<span class="string">'获取lacie的链接'</span>)</span><br><span class="line">link_node = soup.find(<span class="string">'a'</span>, href=<span class="string">'http://example.com/lacie'</span>)</span><br><span class="line">print(link_node.name, link_node[<span class="string">'href'</span>], link_node.get_text())</span><br><span class="line"></span><br><span class="line">print(<span class="string">'正则匹配'</span>)</span><br><span class="line">link_node = soup.find(<span class="string">'a'</span>, href=re.compile(<span class="string">r"ill"</span>))</span><br><span class="line">print(link_node.name, link_node[<span class="string">'href'</span>], link_node.get_text())</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">print(<span class="string">'获取p段落文字'</span>)</span><br><span class="line">p_node = soup.find(<span class="string">'p'</span>, class_=<span class="string">"title"</span>)</span><br><span class="line">print(p_node.name, p_node.get_text())</span><br></pre></td></tr></table></figure>
<p>结果：<br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="https://github.com/hubojing/BlogImages/blob/master/Python%E5%BC%80%E5%8F%91%E7%AE%80%E5%8D%95%E7%88%AC%E8%99%AB%E2%80%94%E2%80%94%E7%BB%93%E6%9E%9C.png?raw=true" alt="结果" title="">
                </div>
                <div class="image-caption">结果</div>
            </figure></p>
<h1 id="爬取百度百科1000个页面的数据"><a href="#爬取百度百科1000个页面的数据" class="headerlink" title="爬取百度百科1000个页面的数据"></a>爬取百度百科1000个页面的数据</h1><h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p>确定目标—&gt;分析目标（URL格式、数据格式、网页编码）—&gt;编写代码—&gt;执行爬虫</p>
<blockquote>
<p>目标：百度百科Python词条相关词条网页——标题和简介</p>
</blockquote>
<blockquote>
<p>入口页：<a href="http://baike.baidu.com/item/Python/" target="_blank" rel="noopener">http://baike.baidu.com/item/Python/</a></p>
</blockquote>
<blockquote>
<p>URL格式：</p>
<ul>
<li>词条页面URL：/item/%E8%87%AA%E7%94%B1%E8%BD%AF%E4%BB%B6</li>
</ul>
</blockquote>
<blockquote>
<p>数据格式：</p>
<ul>
<li>标题：  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">	&lt;dd class=&quot;lemmaWgt-lemmaTitle-title&quot;&gt;</span><br><span class="line">&lt;h1&gt;***&lt;/h1&gt;</span><br><span class="line">&lt;/dd&gt;</span><br></pre></td></tr></table></figure>
</li>
</ul>
</blockquote>
<blockquote>
<ul>
<li>简介：  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;lemma-summary&quot; label-module=&quot;lemmaSummary&quot;&gt;***&lt;/div&gt;</span><br></pre></td></tr></table></figure>
</li>
</ul>
</blockquote>
<blockquote>
<p>页面编码：UTF-8</p>
</blockquote>
<h2 id="易错处及解决"><a href="#易错处及解决" class="headerlink" title="易错处及解决"></a>易错处及解决</h2><ul>
<li>url易变，以后需结合最新url修改正则表达式或总入口url。</li>
<li><p>若只能爬取到一条数据，注意有些url是没有summary的，需添加</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">summary_node = soup.find(<span class="string">'div'</span>, class_=<span class="string">'lemma-summary'</span>)</span><br><span class="line"><span class="comment">#添加判空判断</span></span><br><span class="line"><span class="keyword">if</span> summary_node <span class="keyword">is</span> <span class="keyword">None</span>:</span><br><span class="line"><span class="keyword">return</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>outputer.html为空时，检查代码outputer代码是否有误。这种情况通常是data为空，可以断点调试一下，定位问题。比如我的问题在html_parser中<code>_get_new_data</code>函数中将<code>lemma-summary</code>写为了<code>lemmasummary</code>。</p>
</li>
<li>outputer.html乱码时，检查编码问题。Python3将编码写在open里。<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">fout = open(<span class="string">'output.html'</span>, <span class="string">'w'</span>, encoding=<span class="string">'utf-8'</span>)</span><br><span class="line"> </span><br><span class="line"> fout.write(<span class="string">"&lt;html&gt;"</span>)</span><br><span class="line"> fout.write(<span class="string">"&lt;body&gt;"</span>)</span><br><span class="line"> fout.write(<span class="string">"&lt;table&gt;"</span>)</span><br><span class="line"> <span class="keyword">for</span> data <span class="keyword">in</span> self.datas:</span><br><span class="line">     fout.write(<span class="string">"&lt;tr&gt;"</span>)</span><br><span class="line">     fout.write(<span class="string">"&lt;td&gt;%s&lt;/td&gt;"</span> % data[<span class="string">'url'</span>])</span><br><span class="line">     fout.write(<span class="string">"&lt;td&gt;%s&lt;/td&gt;"</span> % data[<span class="string">'title'</span>])</span><br><span class="line">     fout.write(<span class="string">"&lt;td&gt;%s&lt;/td&gt;"</span> % data[<span class="string">'summary'</span>])</span><br><span class="line">     fout.write(<span class="string">"&lt;/tr&gt;"</span>)</span><br><span class="line"> fout.write(<span class="string">"&lt;/table&gt;"</span>)</span><br><span class="line"> fout.write(<span class="string">"&lt;/body&gt;"</span>)</span><br><span class="line"> fout.write(<span class="string">"&lt;/html&gt;"</span>)</span><br><span class="line"> fout.close()</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h1 id="结果"><a href="#结果" class="headerlink" title="结果"></a>结果</h1><ul>
<li>经测试，爬1000个页面用时为12min（比较慢），全部爬取成功。</li>
<li>控制台</li>
<li><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="https://github.com/hubojing/BlogImages/blob/master/Python%E5%BC%80%E5%8F%91%E7%AE%80%E5%8D%95%E7%88%AC%E8%99%AB%E2%80%94%E2%80%94%E7%88%AC%E8%99%AB%E7%BB%93%E6%9E%9C.png?raw=true" alt="爬虫数据" title="">
                </div>
                <div class="image-caption">爬虫数据</div>
            </figure></li>
<li>输出的html</li>
<li><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="https://github.com/hubojing/BlogImages/blob/master/Python%E5%BC%80%E5%8F%91%E7%AE%80%E5%8D%95%E7%88%AC%E8%99%AB%E2%80%94%E2%80%94html.png?raw=true" alt="html" title="">
                </div>
                <div class="image-caption">html</div>
            </figure>
</li>
</ul>
<h1 id="全部代码下载地址"><a href="#全部代码下载地址" class="headerlink" title="全部代码下载地址"></a>全部代码下载地址</h1><p><a href="https://github.com/hubojing/PythonSpider" target="_blank" rel="noopener">https://github.com/hubojing/PythonSpider</a></p>
<hr>
<p>感谢慕课平台。</p>
]]></content>
      
        <categories>
            
            <category> 互联网 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Python </tag>
            
            <tag> 爬虫 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[计算机图形学学习笔记]]></title>
      <url>https://hubojing.github.io/2018/03/05/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
      <content type="html"><![CDATA[<p><div align="left"><br><img src="https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1522260185415&di=c78f4ea45fb5db5337c73e8189e82ff8&imgtype=0&src=http%3A%2F%2Fp.ananas.chaoxing.com%2Fstar%2F1024_0%2F1385010809221kidou.jpg" width="300" height="180" style="float:right;"><br>　　<br>　　<strong>每周一点图形学重启，不弃坑。。。。。。</strong><br>　　最新：裁剪算法完毕<br>   　　<br></div><br><a id="more"></a></p>
<h1 id="帧缓冲器及分辨率"><a href="#帧缓冲器及分辨率" class="headerlink" title="帧缓冲器及分辨率"></a>帧缓冲器及分辨率</h1><p>帧缓冲器每一个存储单元的位长决定了一幅画面上能同时显示的不同灰度的数目或颜色的种类。<br>如果是单色，则每个像素只需要1Bit表示；<br>如果是16色，则每个像素需要4Bit(2^4=16)表示；<br>如果是256色，则每个需要1个字节（8位，2^8=256）表示；<br>如果是65536（64K）色，则每个像素需要2个字节（16位，2^16=64K）表示；<br>如果是16777216（16.7M）色，则每个需要3个字节（24位，2^24=16.7M）表示（24位真彩色）。</p>
<p>举例：显卡有2MB显存，当分辨率是1024x768时，可支持的色彩数又是多少？<br>2MB=2x1024x1024=2097152(字节)<br>1024x768=786432(个像素)<br>每个像素如果需要3个字节表示，将超过2MB显存，最多只需要2个字节表示，故只能支持64K色彩数。</p>
<blockquote>
<p>题目：显示颜色64K，分辨率为1024*1024的显示器，至少需要的帧缓存容量为(C)<br>A.1MB B.3MB C.2MB D.512KB</p>
<ul>
<li>解：显示颜色64K，故每个像素需要2个字节表示。1024x1024=1048576(个像素)，1048576x2=2097152(字节)<br>2097152/1024/1024=2MB</li>
</ul>
</blockquote>
<h1 id="二维图形变换"><a href="#二维图形变换" class="headerlink" title="二维图形变换"></a>二维图形变换</h1><p>两大基本工具：向量分析    图形变换</p>
<h2 id="向量分析"><a href="#向量分析" class="headerlink" title="向量分析"></a>向量分析</h2><p>向量线性组合<br>w=a1v1+a2v2+…+anvn</p>
<ol>
<li>仿射组合<br>a1+a2+…+am=1</li>
<li>凸组合<br>a1+a2+…+am=1<br>i=1,2,…,m        ai≥0</li>
</ol>
<ul>
<li><p>点积<br>a=(a1,a2) b=(b1,b2)<br>a·b=a1b1+a2b2<br>点积最重要的应用是计算两个向量的夹角或者两条直线的夹角。<br>b·c=|b||c|cosθ<br>cosθ=(b·c)/(|b||c|)=b的单位向量·c的单位向量<br>b·c &gt; 0   θ &lt; 90°<br>b·c = 0   θ = 90°<br>b·c &lt; 0   θ &gt; 90°</p>
<blockquote>
<p>如何设计一个算法描述任意两篇新闻的相似性？<br>用一个向量来描述一篇新闻。当夹角的余弦接近1时，相似，归为一类。夹角余弦越小，两条新闻越不相关。</p>
</blockquote>
</li>
<li><p>叉积</p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="https://github.com/hubojing/BlogImages/blob/master/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E2%80%94%E2%80%94%E5%8F%89%E7%A7%AF%E5%85%AC%E5%BC%8F.png?raw=true" alt="叉积公式" title="">
                </div>
                <div class="image-caption">叉积公式</div>
            </figure></li>
</ul>
<ol>
<li>axb和a、b两个向量都正交</li>
<li>axb的长度等于由a和b决定的平行四边形面积<br>axb=|a||b|sinθ<br>利用叉积求平面的法向量</li>
</ol>
<h2 id="图形变换"><a href="#图形变换" class="headerlink" title="图形变换"></a>图形变换</h2><p>将程序中用于描述对象几何信息的数值和那些用于表示对象中大小和位置的数值区分开来。前者通常被看作一个建模（modeling）的任务，后者是一个观察（viewing）的任务。<br>图形显示的过程是几何（对象）模型在不同坐标系之间的映射变换。</p>
<h3 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h3><p><strong>世界坐标系</strong><br>用最适合手中问题的坐标系来描述对象，并且可以自动的缩放和平移图形，使得其能正确地在屏幕窗口中显示。<br><strong>建模坐标系（局部坐标系）</strong><br>建模坐标系独立于世界坐标系来定义物体的几何特性<br><strong>观察坐标系</strong><br>观察坐标系主要用于从观察者的角度对整个世界坐标系内的对象进行重新定位和描述。依据观察窗口的方向和形状在世界坐标系中定义的坐标系成为观察坐标系。观察坐标系用于指定图形的输出范围。<br>二维观察变换的一般方法是在世界坐标系中指定一个观察坐标系统，以该系统为参考通过选定方向和位置来指定矩形剪裁窗口。<br><strong>设备坐标系</strong><br>适合特定输出设备输出对象的坐标系。比如屏幕坐标系。<br>在多数情况下，对于每一个具体的显示设备，都有一个单独的坐标系统。设备坐标是整数。<br><strong>规范化坐标系</strong><br>规范化坐标系独立于设备，能容易地转变为设备坐标系，是一个中间坐标系。<br>为使图形软件能在不同的设备之间移植，采用规范化坐标，坐标轴取值范围是0-1。</p>
<h3 id="二维变换"><a href="#二维变换" class="headerlink" title="二维变换"></a>二维变换</h3><p>变换图形就是要变换图形的几何关系，即改变顶点的坐标；同时，保持图形的原拓扑关系不变。<br><strong>仿射变换</strong>（Affine Transformation或Affine Map）是一种二维坐标到二维坐标之间的线性变换。<br>（1）“平直性”。即：直线经过变换之后依然是直线<br>（2）“平行性”。即：平行线依然是平行线，且直线上<br>点的位置顺序不变）</p>
<p><strong>齐次坐标</strong><br>如n维向量（p1,p2,…,pn）表示为（hp1,hp2,…,hpn,h），其中h称为哑坐标。<br>普通坐标与齐次坐标的关系为“一对多”：<br>普通坐标×h→齐次坐标<br>齐次坐标÷h→普通坐标<br>当h = 1时产生的齐次坐标称为“规格化坐标”，因为前n个<br>坐标就是普通坐标系下的n维坐标</p>
<ul>
<li>基本几何变换</li>
</ul>
<ol>
<li><p>平移变换</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">x*=x+Tx</span><br><span class="line">y*=y+Ty</span><br></pre></td></tr></table></figure>
</li>
<li><p>比例变换</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">x*=x·Sx</span><br><span class="line">y*=y·Sy</span><br></pre></td></tr></table></figure>
</li>
<li><p>对称变换（反射变换/镜像变换）</p>
</li>
<li><p>旋转变换</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">x*=rcos(α+θ)=rcosαcosθ-rsinαsinθ</span><br><span class="line">y*=rsin(α+θ)=rcosasinθ+rsinαcosθ</span><br><span class="line">x*=xcosθ-ysinθ</span><br><span class="line">y*=xsinθ+ycosθ</span><br></pre></td></tr></table></figure>
</li>
<li><p>错切变换</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">x*=x+cy</span><br><span class="line">y*=bx+y</span><br></pre></td></tr></table></figure>
</li>
</ol>
<p><strong>坐标系变换</strong><br>1.平移变换<br>2.旋转变换<br><strong>相对任意参考点的二维几何变换</strong><br>比例、旋转变换等均与参考点相关。如要对某个参考点（xf，yf）作二维几何变换，其变换过程如下：<br>a、将固定点移至坐标原点，此时进行平移变换<br>b、针对原点进行二维几何变换<br>c、进行反平移，将固定点又移回到原来的位置<br><strong>二维变换矩阵</strong><br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="https://github.com/hubojing/BlogImages/blob/master/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E2%80%94%E2%80%94%E4%BA%8C%E7%BB%B4%E5%8F%98%E6%8D%A2%E7%9F%A9%E9%98%B5.png?raw=true" alt="二维变换矩阵" title="">
                </div>
                <div class="image-caption">二维变换矩阵</div>
            </figure><br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="https://github.com/hubojing/BlogImages/blob/master/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E2%80%94%E2%80%94%E4%BA%8C%E7%BB%B4%E5%8F%98%E6%8D%A2%E7%9F%A9%E9%98%B5%E8%AF%B4%E6%98%8E.png?raw=true" alt="二维变换矩阵说明" title="">
                </div>
                <div class="image-caption">二维变换矩阵说明</div>
            </figure></p>
<h3 id="窗口视区变换"><a href="#窗口视区变换" class="headerlink" title="窗口视区变换"></a>窗口视区变换</h3><p>窗口：世界坐标系中药显示的区域成为窗口。<br>视区：窗口映射到显示器（设备）上的区域称为视区。<br>观察变换（Viewing Transformation），将窗口到视区的变换处理。<br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="https://github.com/hubojing/BlogImages/blob/master/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E2%80%94%E2%80%94%E7%AA%97%E5%8F%A3%E8%A7%86%E5%8C%BA%E5%8F%98%E6%8D%A2.png?raw=true" alt="窗口视区变换" title="">
                </div>
                <div class="image-caption">窗口视区变换</div>
            </figure><br>窗口到视区的映射是基于一个等式，即对每一个在世界坐标下的点（x,y），产生屏幕坐标系中的一个点（sx,sy）。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sx=A*x+C</span><br><span class="line">sy=B*y+D</span><br></pre></td></tr></table></figure></p>
<p>A、B、C、D为常数<br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="https://github.com/hubojing/BlogImages/blob/master/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E2%80%94%E2%80%94%E7%AA%97%E5%8F%A3%E8%A7%86%E5%8C%BA%E5%8F%98%E6%8D%A2%E6%98%A0%E5%B0%84%E5%85%B3%E7%B3%BB.png?raw=true" alt="映射关系" title="">
                </div>
                <div class="image-caption">映射关系</div>
            </figure><br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="https://github.com/hubojing/BlogImages/blob/master/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E2%80%94%E2%80%94%E7%AA%97%E5%8F%A3%E8%A7%86%E5%8C%BA%E5%8F%98%E6%8D%A2%E5%85%AC%E5%BC%8F1.png?raw=true" alt="公式" title="">
                </div>
                <div class="image-caption">公式</div>
            </figure><br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="https://github.com/hubojing/BlogImages/blob/master/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E2%80%94%E2%80%94%E7%AA%97%E5%8F%A3%E8%A7%86%E5%8C%BA%E5%8F%98%E6%8D%A2%E5%85%AC%E5%BC%8F2.png?raw=true" alt="公式" title="">
                </div>
                <div class="image-caption">公式</div>
            </figure></p>
<h1 id="三维图形几何变换"><a href="#三维图形几何变换" class="headerlink" title="三维图形几何变换"></a>三维图形几何变换</h1><p>三维空间中某点的变换可以表示成点的齐次坐标与四阶的三维变换矩阵相乘：<br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="https://github.com/hubojing/BlogImages/blob/master/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E2%80%94%E2%80%94%E4%B8%89%E7%BB%B4%E5%8F%98%E6%8D%A2%E7%9F%A9%E9%98%B5.png?raw=true" alt="三维变换矩阵" title="">
                </div>
                <div class="image-caption">三维变换矩阵</div>
            </figure><br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="https://github.com/hubojing/BlogImages/blob/master/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E2%80%94%E2%80%94T3D.png?raw=true" alt="T3D" title="">
                </div>
                <div class="image-caption">T3D</div>
            </figure></p>
<h2 id="基本变换"><a href="#基本变换" class="headerlink" title="基本变换"></a>基本变换</h2><h3 id="平移变换"><a href="#平移变换" class="headerlink" title="平移变换"></a>平移变换</h3><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="https://github.com/hubojing/BlogImages/blob/master/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E2%80%94%E2%80%94%E4%B8%89%E7%BB%B4%E5%B9%B3%E7%A7%BB.png?raw=true" alt="三维平移" title="">
                </div>
                <div class="image-caption">三维平移</div>
            </figure>
<h3 id="比例变换"><a href="#比例变换" class="headerlink" title="比例变换"></a>比例变换</h3><h4 id="局部比例变换"><a href="#局部比例变换" class="headerlink" title="局部比例变换"></a>局部比例变换</h4><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="https://github.com/hubojing/BlogImages/blob/master/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E2%80%94%E2%80%94%E5%B1%80%E9%83%A8%E6%AF%94%E4%BE%8B%E5%8F%98%E6%8D%A2.png?raw=true" alt="局部比例变换" title="">
                </div>
                <div class="image-caption">局部比例变换</div>
            </figure>
<h4 id="整体比例变换"><a href="#整体比例变换" class="headerlink" title="整体比例变换"></a>整体比例变换</h4><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="https://github.com/hubojing/BlogImages/blob/master/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E2%80%94%E2%80%94%E6%95%B4%E4%BD%93%E6%AF%94%E4%BE%8B%E5%8F%98%E6%8D%A2.png?raw=true" alt="整体比例变换" title="">
                </div>
                <div class="image-caption">整体比例变换</div>
            </figure>
<h3 id="旋转变换"><a href="#旋转变换" class="headerlink" title="旋转变换"></a>旋转变换</h3><h4 id="绕z轴旋转θ"><a href="#绕z轴旋转θ" class="headerlink" title="绕z轴旋转θ"></a>绕z轴旋转θ</h4><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="https://github.com/hubojing/BlogImages/blob/master/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E2%80%94-%E4%B8%89%E7%BB%B4%E7%BB%95z%E6%97%8B%E8%BD%AC.png?raw=true" alt="三维绕z旋转" title="">
                </div>
                <div class="image-caption">三维绕z旋转</div>
            </figure>
<h4 id="绕x轴旋转"><a href="#绕x轴旋转" class="headerlink" title="绕x轴旋转"></a>绕x轴旋转</h4><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="https://github.com/hubojing/BlogImages/blob/master/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E2%80%94-%E4%B8%89%E7%BB%B4%E7%BB%95x%E6%97%8B%E8%BD%AC.png?raw=true" alt="三维绕x旋转" title="">
                </div>
                <div class="image-caption">三维绕x旋转</div>
            </figure>
<h4 id="绕y轴旋转"><a href="#绕y轴旋转" class="headerlink" title="绕y轴旋转"></a>绕y轴旋转</h4><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="https://github.com/hubojing/BlogImages/blob/master/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E2%80%94-%E4%B8%89%E7%BB%B4%E7%BB%95y%E6%97%8B%E8%BD%AC.png?raw=true" alt="三维绕y旋转" title="">
                </div>
                <div class="image-caption">三维绕y旋转</div>
            </figure>
<h3 id="对称变换"><a href="#对称变换" class="headerlink" title="对称变换"></a>对称变换</h3><h4 id="关于坐标平面的对称"><a href="#关于坐标平面的对称" class="headerlink" title="关于坐标平面的对称"></a>关于坐标平面的对称</h4><p>xoy:<br>[x’ y’ z’ 1] =  [x y -z 1]<br>yoz:<br>[x’ y’ z’ 1] =  [-x y z 1]<br>zox:<br>[x’ y’ z’ 1] =  [x -y z 1]</p>
<h4 id="关于坐标轴对称"><a href="#关于坐标轴对称" class="headerlink" title="关于坐标轴对称"></a>关于坐标轴对称</h4><p>x:<br>[x’ y’ z’ 1] = [x -y -z 1]<br>y:<br>[x’ y’ z’ 1] = [-x y -z 1]<br>z:<br>[x’ y’ z’ 1] = [-x -y z 1]</p>
<h2 id="投影变换"><a href="#投影变换" class="headerlink" title="投影变换"></a>投影变换</h2><p>在二维平面上显示三维物体的解决方法：投影变换。<br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="https://github.com/hubojing/BlogImages/blob/master/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E2%80%94-%E5%B9%B3%E9%9D%A2%E5%87%A0%E4%BD%95%E6%8A%95%E5%BD%B1.png?raw=true" alt="平面几何投影分类" title="">
                </div>
                <div class="image-caption">平面几何投影分类</div>
            </figure><br>正投影根据投影面与坐标轴的夹角又可分为两类：三视图和<br>正轴侧图。<br>当投影面与某一坐标轴垂直时，得到的投影为三视图，这时<br>投影方向与这个坐标轴的方向一致；否则，得到的投影为正<br>轴侧图。</p>
<h3 id="三视图的计算"><a href="#三视图的计算" class="headerlink" title="三视图的计算"></a>三视图的计算</h3><p>具体计算步骤如下：<br>a、确定三维物体上各点的位置坐标；<br>b、引入齐次坐标，求出所作变换相应的变换矩阵；<br>c、将所作变换用矩阵表示，通过运算求得三维物<br>体上各点经变换后的点坐标值；<br>d、由变换后得到的二维点绘出三维物体投影后的三视图</p>
<h4 id="主视图"><a href="#主视图" class="headerlink" title="主视图"></a>主视图</h4><p>投影变换矩阵：[x’ y’ z’ 1] = [x 0 z 1]</p>
<h4 id="俯视图"><a href="#俯视图" class="headerlink" title="俯视图"></a>俯视图</h4><p>投影变换矩阵：[x’ y’ z’ 1] = [x y 0 1]<br>为了使俯视图与主视图都画在一个平面内，就要使H面绕x轴<br>顺时针转90°，即应有一个旋转变换。为了使主视图和俯视图有一定的间距，还要使H面沿z方向平移一段距离-z<sub>0</sub>，有一个平移矩阵。<br>所以，最终俯视图投影变换矩阵：<br>[x’ y’ z’ 1] = [x y -(y+z<sub>0</sub>） 1]</p>
<h3 id="侧视图"><a href="#侧视图" class="headerlink" title="侧视图"></a>侧视图</h3><p>为了使侧视图与主视图也在一个平面内，就要使W面绕z轴正<br>转90°，有一个旋转矩阵。为使主视图和侧视图有一定的间距，还要使W面沿负x方向平移一段距离-x<sub>0</sub>，有一个平移矩阵。<br>所以，最终侧视图投影变换矩阵：<br>[x’ y’ z’ 1] = [-(y+z<sub>0</sub>) 0 z 1]</p>
<p>三个视图中的y’均为0，表明三个视图均落在xoz面上。</p>
<h2 id="正轴测图"><a href="#正轴测图" class="headerlink" title="正轴测图"></a>正轴测图</h2><p>正轴测有等轴测、正二测和正三测三种：<br>当投影面与三个坐标轴之间的夹角都相等时为等轴测<br>当投影面与两个坐标轴之间的夹角相等时为正二测<br>当投影面与三个坐标轴之间的夹角都不相等时为正三测<br>变换矩阵为：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">x*=xcosγ-ysinγ</span><br><span class="line">y*=0</span><br><span class="line">z*=-xsinγsinα-ycosγsina+zcosα</span><br></pre></td></tr></table></figure></p>
<h2 id="透视投影"><a href="#透视投影" class="headerlink" title="透视投影"></a>透视投影</h2><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="https://github.com/hubojing/BlogImages/blob/master/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E2%80%94%E2%80%94T3D.png?raw=true" alt="T3D" title="">
                </div>
                <div class="image-caption">T3D</div>
            </figure>
<p>其中的[p,q,r]能产生透视变换的效果</p>
<h3 id="一点透视"><a href="#一点透视" class="headerlink" title="一点透视"></a>一点透视</h3><p>灭点：聚焦的那个点</p>
<h3 id="多点透视"><a href="#多点透视" class="headerlink" title="多点透视"></a>多点透视</h3><p>多个灭点</p>
<p>构造二点透视的一般步骤如下：<br>（1）将物体平移到适当位置l、m、n<br>（2）将物体绕y轴旋转θ角<br>（3）进行透视变换<br>（4）最后向xoy面做正投影，即得二点透视图</p>
<p>构造三点透视的一般步骤如下：<br>（1）将物体平移到适当位置<br>（2）将物体绕y轴旋转θ角<br>（3）再绕x轴旋转α角<br>（4）进行透视变换<br>（5）最后向xoy面做正投影，即得三点透视图</p>
<h1 id="光栅图形学算法"><a href="#光栅图形学算法" class="headerlink" title="光栅图形学算法"></a>光栅图形学算法</h1><h2 id="研究内容"><a href="#研究内容" class="headerlink" title="研究内容"></a>研究内容</h2><ul>
<li>直线段的扫描转换算法</li>
<li>多边形的扫描转换与区域填充算法</li>
<li>裁剪算法</li>
<li>反走样算法</li>
<li>消隐算法</li>
</ul>
<h2 id="直线段的扫描转换算法"><a href="#直线段的扫描转换算法" class="headerlink" title="直线段的扫描转换算法"></a>直线段的扫描转换算法</h2><p>P<sub>0</sub>（x<sub>0</sub>,y<sub>0</sub>）    P<sub>1</sub>(x<sub>1</sub>,y<sub>1</sub>)<br>y=kx+b<br>k=(y<sub>1</sub>-y<sub>o</sub>)/(x<sub>1</sub>-x<sub>0</sub>)  (x<sub>1</sub>≠x<sub>0</sub>)<br>假设x已知，即从x的起点xo开始，沿x方向前进一个像素（步长=1），可以计算出相应的y值。因为像素的坐标是整数，所以y值要进行取整处理。<br>如何把数学上的一个点扫描转换一个屏幕像素点？<br>如：P（1.7, 0.8）—(取整)—&gt;P(1, 0)<br>P(1.7, 0.8) -(+0.5)-&gt; p(2.2, 1.3)<br>P(2.2, 1.3) -(取整)-&gt; p(2, 1)<br>为提高效率，减小计算量，要把乘法消掉。</p>
<h2 id="直线绘制的三个著名的常用算法"><a href="#直线绘制的三个著名的常用算法" class="headerlink" title="直线绘制的三个著名的常用算法"></a>直线绘制的三个著名的常用算法</h2><ol>
<li>数值微分法（DDA）</li>
<li>中点画线法</li>
<li>Bresenham算法</li>
</ol>
<h3 id="数值微分DDA（Digital-Differential-Analyzer）"><a href="#数值微分DDA（Digital-Differential-Analyzer）" class="headerlink" title="数值微分DDA（Digital Differential Analyzer）"></a>数值微分DDA（Digital Differential Analyzer）</h3><p>引进图形学中一个重要思想——增量思想<br>直线斜率小于1：<br>x=x+1<br>y=y+k<br>(注意y+0.5化为整数)<br>直线斜率大于1：<br>x=x+1/k<br>y=y+1<br>（注意x+0.5化为整数）</p>
<h3 id="DDA算法代码"><a href="#DDA算法代码" class="headerlink" title="DDA算法代码"></a>DDA算法代码</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> CDrawLinesDlg::DDALine(<span class="keyword">int</span> iBeginX, <span class="keyword">int</span> iBeginY, <span class="keyword">int</span> iEndX, <span class="keyword">int</span> iEndY, COLORREF col)</span><br><span class="line">&#123;</span><br><span class="line">	CDC *pDC = GetDC();</span><br><span class="line">	pDC-&gt;TextOut(<span class="number">450</span>, <span class="number">18</span>, _T(<span class="string">"DDA画线成功！"</span>));</span><br><span class="line"></span><br><span class="line">	<span class="keyword">float</span> x, y, dx, dy, k, r;</span><br><span class="line">	<span class="keyword">float</span> xm, ym;</span><br><span class="line">	dx = iEndX - iBeginX;</span><br><span class="line">	dy = iEndY - iBeginY;</span><br><span class="line">	k = dy / dx;</span><br><span class="line">	r = dx / dy;<span class="comment">//r为斜率倒数</span></span><br><span class="line">	x = iEndX;</span><br><span class="line">	y = iEndY;</span><br><span class="line">	xm = iBeginX;</span><br><span class="line">	ym = iBeginY;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">if</span> (<span class="built_in">abs</span>(dx) &gt; <span class="built_in">abs</span>(dy))<span class="comment">//斜率小于1</span></span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span> (iBeginX &lt;= iEndX)</span><br><span class="line">		&#123;</span><br><span class="line">			x = iBeginX;</span><br><span class="line">			xm = iEndX;</span><br><span class="line">			y = iBeginY;</span><br><span class="line">			ym = iEndY;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">while</span>(x &lt;= xm)</span><br><span class="line">		&#123;</span><br><span class="line">			y = y + k;</span><br><span class="line">			pDC-&gt;SetPixel(x, (<span class="keyword">int</span>)(y + <span class="number">0.5</span>), col);</span><br><span class="line">			++x;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span><span class="comment">//斜率大于1</span></span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span> (iBeginY &lt;= iEndY)</span><br><span class="line">		&#123;</span><br><span class="line">			x = iBeginX;</span><br><span class="line">			xm = iEndX;</span><br><span class="line">			y = iBeginY;</span><br><span class="line">			ym = iEndY;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">while</span> (y &lt;= ym)</span><br><span class="line">		&#123;</span><br><span class="line">			x = x + r;</span><br><span class="line">			pDC-&gt;SetPixel((<span class="keyword">int</span>)(x + <span class="number">0.5</span>), y, col);</span><br><span class="line">			++y;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="中点画线法"><a href="#中点画线法" class="headerlink" title="中点画线法"></a>中点画线法</h3><p>核心思想：考虑斜率小于1，若x每次+1，y值要么+1，要么不+1。<br>直线一般式方程；Ax+By+C=0<br>设y+1和y之间的中点M，把M带入方程。d=Ax+By+C<br>d &lt; 0    M在直线下方 选上面那个点(y+1)<br>d &gt; 0    M在直线上方 选下面那个点(y)</p>
<h3 id="中点画线法代码"><a href="#中点画线法代码" class="headerlink" title="中点画线法代码"></a>中点画线法代码</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> CDrawLinesDlg::MidLine(<span class="keyword">int</span> iBeginX, <span class="keyword">int</span> iBeginY, <span class="keyword">int</span> iEndX, <span class="keyword">int</span> iEndY, COLORREF col)</span><br><span class="line">&#123;</span><br><span class="line">	CDC  *pDc = GetDC();</span><br><span class="line">	pDc-&gt;TextOut(<span class="number">450</span>, <span class="number">18</span>, _T(<span class="string">"中点画线法成功！"</span>));</span><br><span class="line">	<span class="keyword">int</span>  d1, d2, d;</span><br><span class="line">	<span class="keyword">int</span> num = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">int</span> p, p1, q, q1;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">int</span> x = iBeginX;</span><br><span class="line">	<span class="keyword">int</span> y = iBeginY;</span><br><span class="line">	<span class="keyword">int</span> a = iBeginY - iEndY;</span><br><span class="line">	<span class="keyword">int</span> b = iEndX - iEndY;</span><br><span class="line">	<span class="keyword">int</span> dx = <span class="built_in">abs</span>(iBeginX - iEndX);</span><br><span class="line">	<span class="keyword">int</span> dy = <span class="built_in">abs</span>(iBeginY - iEndY);</span><br><span class="line"></span><br><span class="line">	<span class="comment">//第二、四象限</span></span><br><span class="line">	<span class="keyword">if</span> (((iEndX - iBeginX &gt;= <span class="number">0</span>) &amp;&amp; (iEndY - iBeginY&lt;<span class="number">0</span>)) || ((iEndX - iBeginX &lt;= <span class="number">0</span>) &amp;&amp; (iEndY - iBeginY&gt;<span class="number">0</span>)))</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="comment">//从第四象限到第二象限</span></span><br><span class="line">		<span class="keyword">if</span> ((iEndX - iBeginX &lt;= <span class="number">0</span>) &amp;&amp; (iEndY - iBeginY &gt; <span class="number">0</span>))</span><br><span class="line">		&#123;</span><br><span class="line">			a = -a;</span><br><span class="line">			b = -b;</span><br><span class="line">			x = iEndX;</span><br><span class="line">			y = iEndY;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="comment">//斜率小于1</span></span><br><span class="line">		<span class="keyword">if</span> (dx &gt;= dy)</span><br><span class="line">		&#123;</span><br><span class="line">			num = dx;<span class="comment">//以x轴为基准</span></span><br><span class="line">			p = <span class="number">1</span>;</span><br><span class="line">			p1 = <span class="number">0</span>;</span><br><span class="line">			q = <span class="number">1</span>;</span><br><span class="line">			q1 = <span class="number">-1</span>;</span><br><span class="line">			d = <span class="number">2</span> * a - b;<span class="comment">//初始值</span></span><br><span class="line">			d2 = <span class="number">2</span> * a;<span class="comment">//当大于0时的增量</span></span><br><span class="line">			d1 = <span class="number">2</span> * (a - b);<span class="comment">//当小于0时的增量</span></span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span></span><br><span class="line">		&#123;</span><br><span class="line">			num = dy;<span class="comment">//以y轴为基准</span></span><br><span class="line">			p = <span class="number">1</span>;</span><br><span class="line">			p1 = <span class="number">-1</span>;</span><br><span class="line">			q = <span class="number">0</span>;</span><br><span class="line">			q1 = <span class="number">-1</span>;</span><br><span class="line">			d = a - <span class="number">2</span> * b;</span><br><span class="line">			d1 = -(<span class="number">2</span> * b);</span><br><span class="line">			d2 = <span class="number">2</span> * (a - b);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span><span class="comment">//第一、三象限</span></span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span> ((iEndX - iBeginX &lt;= <span class="number">0</span>) &amp;&amp; (iEndY - iBeginY &lt; <span class="number">0</span>))</span><br><span class="line">		&#123;</span><br><span class="line">			a = -a;</span><br><span class="line">			b = -b;</span><br><span class="line">			x = iEndX;</span><br><span class="line">			y = iEndY;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span> (dx &gt;= dy)</span><br><span class="line">		&#123;</span><br><span class="line">			num = dx;</span><br><span class="line">			p = <span class="number">1</span>;</span><br><span class="line">			p1 = <span class="number">1</span>;</span><br><span class="line">			q = <span class="number">1</span>;</span><br><span class="line">			q1 = <span class="number">0</span>;</span><br><span class="line">			d = <span class="number">2</span> * a + b;</span><br><span class="line">			d1 = <span class="number">2</span> * a;</span><br><span class="line">			d2 = <span class="number">2</span> * (a + b);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span></span><br><span class="line">		&#123;</span><br><span class="line">			num = dy;</span><br><span class="line">			p = <span class="number">0</span>;</span><br><span class="line">			p1 = <span class="number">1</span>;</span><br><span class="line">			q = <span class="number">1</span>;</span><br><span class="line">			q1 = <span class="number">1</span>;</span><br><span class="line">			d = a + <span class="number">2</span> * b;</span><br><span class="line">			d2 = <span class="number">2</span> * b;</span><br><span class="line">			d1 = <span class="number">2</span> * (a + b);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	pDc-&gt;SetPixel(x, y, col);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= num; ++i)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span> (d &lt; <span class="number">0</span>)<span class="comment">//d(new)=d(old)+A+B	选Pu(上面一点)</span></span><br><span class="line">		&#123;</span><br><span class="line">			x += p;</span><br><span class="line">			y += p1;</span><br><span class="line">			d += d2;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span><span class="comment">//d(new)=d(old)+A 选Pd(下面一点)</span></span><br><span class="line">		&#123;</span><br><span class="line">			x += q;</span><br><span class="line">			y += q1;</span><br><span class="line">			d += d1;</span><br><span class="line">		&#125;</span><br><span class="line">		pDc-&gt;SetPixel(x, y, col);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="Bresenham算法"><a href="#Bresenham算法" class="headerlink" title="Bresenham算法"></a>Bresenham算法</h3><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="https://github.com/hubojing/BlogImages/blob/master/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E2%80%94%E2%80%94Bresenham%E7%AE%97%E6%B3%95%E6%AD%A5%E9%AA%A4.png?raw=true" alt="算法步骤" title="">
                </div>
                <div class="image-caption">算法步骤</div>
            </figure>
<h3 id="Bresenham算法代码"><a href="#Bresenham算法代码" class="headerlink" title="Bresenham算法代码"></a>Bresenham算法代码</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line">void CDrawLinesDlg::BresenhamLine(int iBeginX, int iBeginY, int iEndX, int iEndY, COLORREF col)</span><br><span class="line">&#123;</span><br><span class="line">	CDC *pDC = GetDC();</span><br><span class="line">	pDC-&gt;TextOut(450, 18, _T(&quot;Bresenham画线成功！&quot;));</span><br><span class="line"></span><br><span class="line">	int dx = abs(iEndX - iBeginX);</span><br><span class="line">	int dy = abs(iEndY - iBeginY);</span><br><span class="line">	int x = iBeginX;</span><br><span class="line">	int y = iBeginY;</span><br><span class="line">	int stepX = 1;</span><br><span class="line">	int stepY = 1;</span><br><span class="line">	if (iBeginX &gt; iEndX)  //从右向左画  </span><br><span class="line">	&#123;</span><br><span class="line">		stepX = -1;</span><br><span class="line">	&#125;</span><br><span class="line">	if (iBeginY &gt; iEndY)//从下往上画</span><br><span class="line">	&#123;</span><br><span class="line">		stepY = -1;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	if (dx &gt; dy)  //斜率大于1</span><br><span class="line">	&#123;</span><br><span class="line">		int e = dy * 2 - dx;</span><br><span class="line">		for (int i = 0; i &lt;= dx; i++)</span><br><span class="line">		&#123;</span><br><span class="line">			pDC-&gt;SetPixel(x, y, col);</span><br><span class="line">			x += stepX;</span><br><span class="line">			e += dy;</span><br><span class="line">			if (e &gt;= 0)</span><br><span class="line">			&#123;</span><br><span class="line">				y += stepY;</span><br><span class="line">				e -= dx;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	else//斜率小于1</span><br><span class="line">	&#123;</span><br><span class="line">		int e = 2 * dx - dy;</span><br><span class="line">		for (int i = 0; i &lt;= dy; i++)</span><br><span class="line">		&#123;</span><br><span class="line">			pDC-&gt;SetPixel(x, y, col);</span><br><span class="line">			y += stepY;</span><br><span class="line">			e += dx;</span><br><span class="line">			if (e &gt;= 0)</span><br><span class="line">			&#123;</span><br><span class="line">				x += stepX;</span><br><span class="line">				e -= dy;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><strong>三者区别</strong>：DDA是浮点数加法，中点画线是整数加法，Bresenham不判断大小，是判断符号。</p>
<hr>
<p>以下待填坑</p>
<h2 id="多边形扫描转换"><a href="#多边形扫描转换" class="headerlink" title="多边形扫描转换"></a>多边形扫描转换</h2><h3 id="x扫描线算法"><a href="#x扫描线算法" class="headerlink" title="x扫描线算法"></a>x扫描线算法</h3><h3 id="改进的x扫描线算法"><a href="#改进的x扫描线算法" class="headerlink" title="改进的x扫描线算法"></a>改进的x扫描线算法</h3><h2 id="区域填充算法"><a href="#区域填充算法" class="headerlink" title="区域填充算法"></a>区域填充算法</h2><h2 id="反走样"><a href="#反走样" class="headerlink" title="反走样"></a>反走样</h2><p>以上待填坑</p>
<hr>
<h1 id="裁剪算法"><a href="#裁剪算法" class="headerlink" title="裁剪算法"></a>裁剪算法</h1><p>使用计算机处理图形信息时，计算机内部存储的图像往往比较大，而屏幕显示的只是图形的一部分。<br>因此需要确定图形哪些部分落在显示区之内，哪些落在显示区之外。这个选择的过程称为<strong>裁剪</strong>。<br>最简单的裁剪方法是把各种图形扫描转换为点之后，再判断点是否在窗口内。</p>
<h2 id="点的裁剪"><a href="#点的裁剪" class="headerlink" title="点的裁剪"></a>点的裁剪</h2><p>对于任意一点P(x, y)<br>若满足下列两个不等式：<br>x<sub>left</sub> ≤ x ≤ x<sub>right</sub><br>y<sub>bottom</sub> ≤ y ≤ y<sub>top</sub><br>则点P在矩形窗口内；否则在矩形窗口外<br>但判断图形中每个点是否在窗口内，太费时，一般不可取</p>
<h2 id="直线段的裁剪"><a href="#直线段的裁剪" class="headerlink" title="直线段的裁剪"></a>直线段的裁剪</h2><p>直线段裁剪算法是复杂图形裁剪的基础<br>直线段和剪裁窗口的可能关系：</p>
<ul>
<li>完全落在窗口内</li>
<li>完全落在窗口外</li>
<li>与窗口边界相交<br>要裁剪一条直线段，首先要判断：<br>（1）它是否完全落在裁剪窗口内？<br>（2）它是否完全在窗口外？<br>（3）如果不满足以上两个条件，则计算它与一个或多个裁剪边界的交点<br>常用的裁剪算法有三种：Cohen-Sutherland、中点分割法、Liang-Barsky裁剪算法</li>
</ul>
<h3 id="Cohen-Sutherland算法"><a href="#Cohen-Sutherland算法" class="headerlink" title="Cohen-Sutherland算法"></a>Cohen-Sutherland算法</h3><p>本算法又称为编码裁剪算法，基本思想：</p>
<ul>
<li>若点p1和p2完全在裁剪窗口内<br>“简取”之</li>
<li>若点p1(x1, y1)和p2(x2, y2)均在窗口外，且满足下列四个条件之一：<br>x<sub>1</sub> &lt; x<sub>left</sub> 且 x<sub>2</sub> &lt; x<sub>left</sub><br>x<sub>1</sub> &gt; x<sub>right</sub> 且 x<sub>2</sub> &gt; x<sub>right</sub><br>y<sub>1</sub> &lt; y<sub>bottom</sub> 且 y<sub>2</sub> &lt; y<sub>bottom</sub><br>y<sub>1</sub> &lt; y<sub>top</sub> 且 y<sub>2</sub> &lt; y<sub>top</sub></li>
</ul>
<p>这四种类型的直线，“简弃”之</p>
<ul>
<li>既不满足“简取”也不满足“简弃”<br>需要对直线段按交点进行分段，分段后判断直线是“简取”还是“简弃”<br>每条线段的端点都赋以四位二进制码D3D2D1D0，编码规则如下：<br>若x &lt; x<sub>left</sub> ，则D<sub>0</sub>=1，否则为0<br>若x &gt; x<sub>right</sub> ，则D<sub>1</sub>=1，否则为0<br>若y &lt; y<sub>bottom</sub> ，则D<sub>2</sub>=1，否则为0<br>若y &lt; y<sub>top</sub> ，则D<sub>3</sub>=1，否则为0</li>
</ul>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="https://github.com/hubojing/BlogImages/blob/master/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E2%80%94%E2%80%94Cohen-Sutherland%E7%AE%97%E6%B3%95.png?raw=true" alt="Cohen-Sutherland算法" title="">
                </div>
                <div class="image-caption">Cohen-Sutherland算法</div>
            </figure>
<p>窗口及其延长线构成了9个区域。根据编码规则：<br>D<sub>0</sub>对应窗口左边界<br>D<sub>1</sub>对应窗口右边界<br>D<sub>2</sub>对应窗口下边界<br>D<sub>3</sub>对应窗口上边界</p>
<p>裁剪一条线段时，先求出端点p1和p2的编码code1和code2，然后进行二进制“或”运算和“与”运算。<br>（1）若code1|code2=0，对直线段简取之<br>（2）若code1&amp;code2≠0，对直线段简弃之<br>（3）若上述两条件均不成立<br>需求出直线段与窗口边界的交点在交点处把线段一分为二</p>
<p>比较适合两种情况：一是大部分线段完全可见；二是大部分线段完全不可见</p>
<p>存在的问题：<br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="https://github.com/hubojing/BlogImages/blob/master/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E2%80%94%E2%80%94Cohen-Sutherland%E7%AE%97%E6%B3%95%E5%AD%98%E5%9C%A8%E7%9A%84%E9%97%AE%E9%A2%98.png?raw=true" alt="最坏情况" title="">
                </div>
                <div class="image-caption">最坏情况</div>
            </figure><br>或：0001 | 0100 = 0101<br>与：0001 &amp; 0100 = 0000<br>最坏情况下，被裁剪线段与窗口4条边计算交点，然后所得的裁剪结果却可能是全部舍弃。</p>
<h3 id="中点分割算法"><a href="#中点分割算法" class="headerlink" title="中点分割算法"></a>中点分割算法</h3><p>和Cohen-Sutherland算法一样，首先对直线段的端点进行编码。<br>把线段和窗口的关系分成三种情况：</p>
<ol>
<li>完全在窗口内</li>
<li>完全在窗口外</li>
<li>和窗口有交点</li>
</ol>
<p>核心思想：通过<strong>二分逼近</strong>来确定直线段与窗口的交点。<br>注意：1. 若中点不在窗口内，则把中点和离窗口边界最远点构成的线段丢掉，以线段上的另一点和该中点再构成线段求其中点。<br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="https://github.com/hubojing/BlogImages/blob/0af2eaee70de59ca7907796db13b07ead7ae75d7/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E2%80%94%E2%80%94%E4%B8%AD%E7%82%B9%E5%88%86%E5%89%B2%E7%BC%96%E7%A0%81%E7%AE%97%E6%B3%951.png?raw=true" alt="图1" title="">
                </div>
                <div class="image-caption">图1</div>
            </figure></p>
<ol start="2">
<li>如中点再窗口内，则又以中点和最远点构成线段，并求其中点，直到中点与窗口边界的坐标值在规定的误差范围内相等。<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="https://github.com/hubojing/BlogImages/blob/master/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E2%80%94%E2%80%94%E4%B8%AD%E7%82%B9%E5%88%86%E5%89%B2%E7%BC%96%E7%A0%81%E7%AE%97%E6%B3%952.png?raw=true" alt="图2" title="">
                </div>
                <div class="image-caption">图2</div>
            </figure>
中点分割算法会不会无限循环二分下去？<br>不会。因为屏幕像素有限。</li>
</ol>
<p>假如屏幕分辨率是1024*1024，请问被裁减线段最多被分割几次？<br>10次。</p>
<h3 id="Liang-Barsky算法"><a href="#Liang-Barsky算法" class="headerlink" title="Liang-Barsky算法"></a>Liang-Barsky算法</h3><p>主要思想：<br>（1）用参数方程表示一条直线<br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="https://github.com/hubojing/BlogImages/blob/master/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E2%80%94%E2%80%94%E7%94%A8%E5%8F%82%E6%95%B0%E6%96%B9%E7%A8%8B%E8%A1%A8%E7%A4%BA%E4%B8%80%E6%9D%A1%E7%9B%B4%E7%BA%BF.png?raw=true" alt="用参数方程表示一条直线" title="">
                </div>
                <div class="image-caption">用参数方程表示一条直线</div>
            </figure></p>
<p>x = x1 + u · (x2 - x1) = x1 + △x · u<br>y = y1 + u · (y2 - y1) = y1 + △y · u<br>(0 ≤ u ≤ 1)</p>
<p>（2）把被裁剪的红色直线段看成是一条有方向的线段，把窗口的四条边分成两类：<br>入边和出边<br>裁剪结果的线段起点是直线和两条入边的交点以及始端点三个点里最前面的一个点，即参数u最大的那个点；<br>裁剪线段的终点是和两条出边的交点以及端点最后面的一个点，取参数u最小的那个点。</p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="https://github.com/hubojing/BlogImages/blob/master/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E2%80%94%E2%80%94%E6%A2%81%E7%AE%97%E6%B3%95%E7%9A%84%E4%B8%BB%E8%A6%81%E6%80%9D%E6%83%B3.png?raw=true" alt="梁算法的主要思想" title="">
                </div>
                <div class="image-caption">梁算法的主要思想</div>
            </figure>
<p>即取图中的绿点。</p>
<p>注意，当u从负无穷到正无穷遍历直线时，首先对裁剪窗口的两条边界直线（下边和左边）从外面向里面移动，再对裁剪窗口两条边界直线（上边和右边）从里面向外面移动。</p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="https://github.com/hubojing/BlogImages/blob/master/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E2%80%94%E2%80%94%E6%A2%81%E7%AE%97%E6%B3%95.png?raw=true" alt="梁算法" title="">
                </div>
                <div class="image-caption">梁算法</div>
            </figure>
<p>如果用u1, u2分别表示线段（u1 ≤ u2）可见部分的开始和结束<br>u1 = max(0, u1, ub)<br>u2 = min(1, ut, ur)</p>
<p>若窗口如下<br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="https://github.com/hubojing/BlogImages/blob/master/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E2%80%94%E2%80%94%E6%A2%81%E7%AE%97%E6%B3%95%E4%B9%8B%E7%AA%97%E5%8F%A3.png?raw=true" alt="梁算法之窗口" title="">
                </div>
                <div class="image-caption">梁算法之窗口</div>
            </figure><br>x<sub>left</sub> ≤ x1 + u · △x ≤ x<sub>right</sub><br>y<sub>bottom</sub> ≤ y1 + u · △y ≤ y<sub>top</sub></p>
<p>简单的推导变形后：<br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="https://github.com/hubojing/BlogImages/blob/master/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E2%80%94%E2%80%94%E6%A2%81%E7%AE%97%E6%B3%95%E6%8E%A8%E5%AF%BC1.png?raw=true" alt="梁算法推导1" title="">
                </div>
                <div class="image-caption">梁算法推导1</div>
            </figure><br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="https://github.com/hubojing/BlogImages/blob/master/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E2%80%94%E2%80%94%E6%A2%81%E7%AE%97%E6%B3%95%E6%8E%A8%E5%AF%BC2.png?raw=true" alt="梁算法推导2" title="">
                </div>
                <div class="image-caption">梁算法推导2</div>
            </figure></p>
<p>（1）分析Pk = 0的情况<br>若P1 = P2 = 0<br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="https://github.com/hubojing/BlogImages/blob/master/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E2%80%94%E2%80%94P1=P2=0.png?raw=true" alt="P1=P2=0" title="">
                </div>
                <div class="image-caption">P1=P2=0</div>
            </figure><br>平行于y轴</p>
<p>若P3 = P4 = 0<br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="https://github.com/hubojing/BlogImages/blob/master/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E2%80%94%E2%80%94P3=P4=0.png?raw=true" alt="P3=P4=0" title="">
                </div>
                <div class="image-caption">P3=P4=0</div>
            </figure><br>平行于x轴</p>
<p>任何平行于窗口某边界的直线，其Pk=0</p>
<p>如果还满足qk &lt; 0<br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="https://github.com/hubojing/BlogImages/blob/master/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E2%80%94%E2%80%94pk=0,qk%E5%B0%8F%E4%BA%8E0.png?raw=true" alt="pk=0, qk < 0" title="">
                </div>
                <div class="image-caption">pk=0, qk < 0</div>
            </figure><br>则线段完全在边界外，应舍弃</p>
<p>如果qk ≥ 0 ，则进一步判断</p>
<p>(2)当pk ≠ 0 时：<br>当pk &lt; 0时<br>线段从裁剪边界延长线的外部延伸到内部，是入边交点<br>当pk &gt; 0时<br>线段从裁剪边界延长线的内部延伸到外部，是出边交点</p>
<p>线段和窗口边界一共有四个交点，根据pk的符号，就知道哪两个是入交点，哪两个是出交点</p>
<p>当pk &lt; 0时：对应入边交点<br>当pk &gt; 0时：对应出边交点</p>
<p>一共四个u值，再叫上u=0、u=1两个端点值，总共六个值</p>
<p>把pk &lt; 0的两个u值和0比较去找最大的，把pk &gt; 0的两个u值和1比较去找最小的，这样得到两个端点的参数值。</p>
<p>uk = qk / pk (pk≠0， k = 1,2,3,4)<br>uk是窗口边界及其延长线的交点的对应参数值</p>
<p>umax =max(0, uk|pk &lt; 0, uk|pk &lt; 0)<br>umin =min(0, uk|pk &gt; 0, uk|pk &gt; 0, 1)</p>
<p>注意：pk &lt; 0，代表入边；pk &gt; 0代表出边</p>
<p>umax &gt; umin，则直线段在窗口外，删除该直线<br>若umax≤umin，将umax和umin代回直线参数方程，即求出直线与窗口的两实交点坐标。<br>x = x1 + u·(x2 - x1)<br>y = y1 + u·(y2 - y1)</p>
<p>注意：因为对于实交点0≤u≤1，因此umax不能小于0，umin不能大于1</p>
<h4 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h4><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="https://github.com/hubojing/BlogImages/blob/master/计算机图形学学习笔记——梁算法步骤.png?raw=true" alt="梁算法步骤" title="">
                </div>
                <div class="image-caption">梁算法步骤</div>
            </figure>
<h2 id="多边形裁剪"><a href="#多边形裁剪" class="headerlink" title="多边形裁剪"></a>多边形裁剪</h2><h3 id="Sutherland-Hodgeman多边形裁剪"><a href="#Sutherland-Hodgeman多边形裁剪" class="headerlink" title="Sutherland-Hodgeman多边形裁剪"></a>Sutherland-Hodgeman多边形裁剪</h3><p>思想：将边界看作整体，每次用窗口的一条边对要裁剪的多边形和中间结果多边形进行裁剪。分而治之的思想。<br>缺点：只适合凸多边形</p>
<p>过程：<br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="https://github.com/hubojing/BlogImages/blob/master/计算机图形学学习笔记——多边形裁剪.png?raw=true" alt="多边形裁剪" title="">
                </div>
                <div class="image-caption">多边形裁剪</div>
            </figure></p>
<p>顶点处理四种情况：<br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="https://github.com/hubojing/BlogImages/blob/master/计算机图形学学习笔记——顶点处理.png?raw=true" alt="顶点处理" title="">
                </div>
                <div class="image-caption">顶点处理</div>
            </figure></p>
<h2 id="文字裁剪"><a href="#文字裁剪" class="headerlink" title="文字裁剪"></a>文字裁剪</h2><ol>
<li>串精度裁剪<br>当字符串中的所有字符都在裁剪窗口内时，就全部保留它，否则舍弃整个字符串。</li>
<li>字符精度裁剪<br>裁剪时，任何与窗口有重叠或落在窗口边界以外的字符都被裁减掉。</li>
<li>笔画/像素精度裁剪<br>将笔划分解成直线段对窗口作裁剪。判断字符串中各字符的哪些像素、笔划的哪一部分在窗口内，保留窗口内部分，裁减掉窗口外的部分。</li>
</ol>
<h1 id="消隐算法"><a href="#消隐算法" class="headerlink" title="消隐算法"></a>消隐算法</h1><p>…未完待续</p>
]]></content>
      
        <categories>
            
            <category> 互联网 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> CPP </tag>
            
            <tag> 计算机图形学 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[BCG网格控件增删移动]]></title>
      <url>https://hubojing.github.io/2018/03/03/BCG%E7%BD%91%E6%A0%BC%E6%8E%A7%E4%BB%B6%E5%A2%9E%E5%88%A0%E7%A7%BB%E5%8A%A8/</url>
      <content type="html"><![CDATA[<div align="left"><br><img src="https://github.com/hubojing/BlogImages/blob/master/BCG%E7%BD%91%E6%A0%BC%E6%8E%A7%E4%BB%B6%E5%A2%9E%E5%88%A0%E7%A7%BB%E5%8A%A8.png?raw=true" width="300" height="180" style="float:right;"><br><br><br>　　<strong>一个小demo——CBCGPGridCtrl网格控件增加行、删除行、上下移动行。</strong><br><br><br> </div>

<a id="more"></a>
<h1 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h1><h2 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">BOOL CtestDlg::OnInitDialog()</span><br><span class="line">&#123;</span><br><span class="line">	CBCGPDialog::OnInitDialog();</span><br><span class="line"></span><br><span class="line">	<span class="comment">// Set the icon for this dialog.  The framework does this automatically</span></span><br><span class="line">	<span class="comment">//  when the application's main window is not a dialog</span></span><br><span class="line">	SetIcon(m_hIcon, TRUE);			<span class="comment">// Set big icon</span></span><br><span class="line">	SetIcon(m_hIcon, FALSE);		<span class="comment">// Set small icon</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">// <span class="doctag">TODO:</span> Add extra initialization here</span></span><br><span class="line">	<span class="function">CRect <span class="title">rect</span><span class="params">(<span class="number">0</span>, <span class="number">0</span>, <span class="number">400</span>, <span class="number">400</span>)</span></span>;</span><br><span class="line">	m_pGridCtrl = <span class="keyword">new</span> CBCGPGridCtrl;</span><br><span class="line">	m_pGridCtrl-&gt;Create(WS_CHILD, rect, <span class="keyword">this</span>, <span class="number">1</span>);</span><br><span class="line">	m_pGridCtrl-&gt;ShowWindow(SW_SHOW);</span><br><span class="line"></span><br><span class="line">	m_pGridCtrl-&gt;InsertColumn(<span class="number">0</span>, _T(<span class="string">"name"</span>), <span class="number">40</span>);</span><br><span class="line">	m_pGridCtrl-&gt;InsertColumn(<span class="number">1</span>, _T(<span class="string">"sex"</span>), <span class="number">40</span>);</span><br><span class="line"></span><br><span class="line">	CBCGPGridRow* pRow = <span class="keyword">new</span> CBCGPGridRow;</span><br><span class="line">	m_pGridCtrl-&gt;AddRow(pRow);</span><br><span class="line">	CBCGPGridItem* pNameItem = pRow-&gt;CreateItem(<span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">	pRow-&gt;AddItem(pNameItem);</span><br><span class="line">	pNameItem-&gt;SetValue(<span class="string">"Nancy"</span>);</span><br><span class="line"></span><br><span class="line">	CBCGPGridItem* pSexItem = pRow-&gt;CreateItem(<span class="number">0</span>, <span class="number">1</span>);</span><br><span class="line">	pRow-&gt;AddItem(pSexItem);</span><br><span class="line">	pSexItem-&gt;AddOption(<span class="string">"男"</span>);</span><br><span class="line">	pSexItem-&gt;AddOption(<span class="string">"女"</span>);</span><br><span class="line">	pSexItem-&gt;SetValue(<span class="string">"男"</span>);<span class="comment">//默认值为“男”</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> TRUE;  <span class="comment">// return TRUE  unless you set the focus to a control</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="增加行"><a href="#增加行" class="headerlink" title="增加行"></a>增加行</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> CtestDlg::OnBnClickedBtnAdd()</span><br><span class="line">&#123;</span><br><span class="line">	CBCGPGridRow* pRow = <span class="keyword">new</span> CBCGPGridRow;</span><br><span class="line">	m_pGridCtrl-&gt;AddRow(pRow);</span><br><span class="line">	<span class="keyword">int</span> iRow = pRow-&gt;GetRowId();</span><br><span class="line">	CBCGPGridItem* pNameItem = pRow-&gt;CreateItem(iRow, <span class="number">0</span>);</span><br><span class="line">	pRow-&gt;AddItem(pNameItem);</span><br><span class="line">	CBCGPGridItem* pSexItem = pRow-&gt;CreateItem(iRow, <span class="number">1</span>);</span><br><span class="line">	pRow-&gt;AddItem(pSexItem);</span><br><span class="line">	pSexItem-&gt;AddOption(<span class="string">"男"</span>);</span><br><span class="line">	pSexItem-&gt;AddOption(<span class="string">"女"</span>);</span><br><span class="line">	pSexItem-&gt;SetValue(<span class="string">"男"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="删除行"><a href="#删除行" class="headerlink" title="删除行"></a>删除行</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> CtestDlg::OnBnClickedBtnDelete()</span><br><span class="line">&#123;</span><br><span class="line">	CBCGPGridRow* pRow = m_pGridCtrl-&gt;GetCurSel();</span><br><span class="line">	<span class="keyword">if</span> (!pRow)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">return</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">int</span> iRow = pRow-&gt;GetRowId();</span><br><span class="line">	m_pGridCtrl-&gt;RemoveRow(iRow);</span><br><span class="line">	CBCGPGridRow* pPreRow = m_pGridCtrl-&gt;GetRow(iRow - <span class="number">1</span>);</span><br><span class="line">	m_pGridCtrl-&gt;AdjustLayout();</span><br><span class="line">	m_pGridCtrl-&gt;SetCurSel(pPreRow);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="上移行"><a href="#上移行" class="headerlink" title="上移行"></a>上移行</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> CtestDlg::OnBnClickedBtnMoveUp()</span><br><span class="line">&#123;</span><br><span class="line">	CBCGPGridRow* pRow = m_pGridCtrl-&gt;GetCurSel();</span><br><span class="line">	<span class="keyword">if</span> (!pRow)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">return</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">int</span> iRow = pRow-&gt;GetRowId();</span><br><span class="line">	CBCGPGridRow* pNewRow = <span class="keyword">new</span> CBCGPGridRow;</span><br><span class="line">	m_pGridCtrl-&gt;InsertRowBefore(iRow - <span class="number">1</span>, pNewRow);</span><br><span class="line">	CBCGPGridItem* pNameItem = pNewRow-&gt;CreateItem(<span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">	pNewRow-&gt;AddItem(pNameItem);</span><br><span class="line">	pNameItem-&gt;SetValue(pRow-&gt;GetItem(<span class="number">0</span>)-&gt;GetValue());</span><br><span class="line"></span><br><span class="line">	CBCGPGridItem* pSexItem = pNewRow-&gt;CreateItem(<span class="number">0</span>, <span class="number">1</span>);</span><br><span class="line">	pNewRow-&gt;AddItem(pSexItem);</span><br><span class="line">	pSexItem-&gt;AddOption(<span class="string">"男"</span>);</span><br><span class="line">	pSexItem-&gt;AddOption(<span class="string">"女"</span>);</span><br><span class="line">	pSexItem-&gt;SetValue(pRow-&gt;GetItem(<span class="number">1</span>)-&gt;GetValue());</span><br><span class="line"></span><br><span class="line">	m_pGridCtrl-&gt;RemoveRow(iRow + <span class="number">1</span>);</span><br><span class="line">	m_pGridCtrl-&gt;AdjustLayout();</span><br><span class="line"></span><br><span class="line">	m_pGridCtrl-&gt;SetCurSel(iRow - <span class="number">1</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="下移行"><a href="#下移行" class="headerlink" title="下移行"></a>下移行</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> CtestDlg::OnBnClickedBtnMoveDown()</span><br><span class="line">&#123;</span><br><span class="line">	CBCGPGridRow* pRow = m_pGridCtrl-&gt;GetCurSel();</span><br><span class="line">	<span class="keyword">if</span> (!pRow)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">return</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">int</span> iRow = pRow-&gt;GetRowId();</span><br><span class="line">	</span><br><span class="line">	CBCGPGridRow* pNewRow = <span class="keyword">new</span> CBCGPGridRow;</span><br><span class="line">	m_pGridCtrl-&gt;InsertRowAfter(iRow+<span class="number">1</span>, pNewRow);</span><br><span class="line">	CBCGPGridItem* pNameItem = pNewRow-&gt;CreateItem(<span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">	pNewRow-&gt;AddItem(pNameItem);</span><br><span class="line">	pNameItem-&gt;SetValue(pRow-&gt;GetItem(<span class="number">0</span>)-&gt;GetValue());</span><br><span class="line"></span><br><span class="line">	CBCGPGridItem* pSexItem = pNewRow-&gt;CreateItem(<span class="number">0</span>, <span class="number">1</span>);</span><br><span class="line">	pNewRow-&gt;AddItem(pSexItem);</span><br><span class="line">	pSexItem-&gt;AddOption(<span class="string">"男"</span>);</span><br><span class="line">	pSexItem-&gt;AddOption(<span class="string">"女"</span>);</span><br><span class="line">	pSexItem-&gt;SetValue(pRow-&gt;GetItem(<span class="number">1</span>)-&gt;GetValue());</span><br><span class="line"></span><br><span class="line">	m_pGridCtrl-&gt;RemoveRow(iRow);</span><br><span class="line"></span><br><span class="line">	m_pGridCtrl-&gt;AdjustLayout();</span><br><span class="line"></span><br><span class="line">	m_pGridCtrl-&gt;SetCurSel(iRow+<span class="number">1</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h1><ol>
<li><p>pRow可以有多种方式创建，可以先new CBCGPGridRow后再AddRow到网格控件对象m_pGridCtrl中。也可以直接    <code>m_pGridCtrl-&gt;CreateRow();</code>。不过CBCGPGridItem不可以直接new，只能通过    <code>CBCGPGridItem* pNameItem = pRow-&gt;CreateItem(iRow, 0)</code>来得到。</p>
</li>
<li><p><code>m_pGridCtrl-&gt;RemoveRow(iRow);</code>操作后若想继续选中现有某行，需要<strong>    <code>m_pGridCtrl-&gt;AdjustLayout();</code></strong>来调整布局刷新网格，再调用SetCurSel实现选中操作。</p>
</li>
<li><p><code>InsertRowBefore</code>和<code>InsertRowAfter</code>的两个参数是：被插入行（在该行前或后插入新行），新插入行数据指针<code>CBCGPGridRow* pRow</code>。</p>
</li>
</ol>
]]></content>
      
        <categories>
            
            <category> 互联网 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> CPP </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Android Studio配置JDK]]></title>
      <url>https://hubojing.github.io/2018/02/23/AndroidStudio%E9%85%8D%E7%BD%AEJDK/</url>
      <content type="html"><![CDATA[<div align="left"><br><img src="https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1548152038543&di=cdd514655c4667a5b051cf38587b8436&imgtype=0&src=http%3A%2F%2Fstatic.open-open.com%2Flib%2FuploadImg%2F20170220%2F20170220110034_186.jpg" width="300" height="180" style="float:right;"><br><br><br>　　<strong>Android Studio配置内嵌JDK。</strong><br><br><br> </div>

<a id="more"></a>
<p>　　今天发现JDK环境变量没有配置好。</p>
<p>　　我没有专门去下载java，在下载Android Studio时，会自带内嵌的JDK。<br>　　打开File-OtherSettings-DefaultProjectStructure，可看到AS已自动勾选Use embedded JDK，而且是官方推荐的做法。<br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="https://github.com/hubojing/BlogImages/blob/master/AndroidStudio%E9%85%8D%E7%BD%AEJDK%E2%80%94%E2%80%94JDK%E9%80%89%E9%A1%B9.png?raw=true" alt="JDK选项" title="">
                </div>
                <div class="image-caption">JDK选项</div>
            </figure></p>
<p>　　以下是配置环境变量的操作。<br>　　java 1.8以后就无需CLASSPATH环境变量了。<br>　　我们只需配置JAVA_HOME和PATH即可。<br>　　JAVA_HOME    C:\AndroidStudio\jre    (JDK安装目录)<br>　　在PATH后新增：<br>　　%JAVA_HOME%\bin<br>　　%JAVA_HOME%\jre\bin</p>
<p>　　测试一下：<br>　　在cmd中查看java版本。<br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="https://github.com/hubojing/BlogImages/blob/master/AndroidStudio%E9%85%8D%E7%BD%AEJDK%E2%80%94%E2%80%94%E6%B5%8B%E8%AF%95.png?raw=true" alt="测试" title="">
                </div>
                <div class="image-caption">测试</div>
            </figure><br>　　成功。</p>
]]></content>
      
        <categories>
            
            <category> 互联网 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Android </tag>
            
            <tag> Java </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[递归中的return]]></title>
      <url>https://hubojing.github.io/2018/02/22/%E9%80%92%E5%BD%92%E4%B8%AD%E7%9A%84return/</url>
      <content type="html"><![CDATA[<div align="left"><br><img src="https://github.com/hubojing/BlogImages/blob/master/%E9%80%92%E5%BD%92%E4%B8%AD%E7%9A%84return%E2%80%94%E2%80%94%E9%80%92%E5%BD%92%E6%B5%81%E7%A8%8B.jpg?raw=true" width="300" height="180" style="float:right;"><br><br><br>　　<strong>浅谈递归。</strong><br><br><br> </div>

<a id="more"></a>
<p>　　递归的核心是重复和嵌套。<br>　　看到的一个惊人比喻来解释什么是递归：</p>
<blockquote>
<p>古之欲明明德于天下者，先治其国；欲治其国者，先齐其家；欲齐其家者，先修其身；欲修其身者，先正其心；欲正其心者，先诚其意；欲诚其意者，先致其知，致知在格物。物格而后知至，知至而后意诚，意诚而后心正，心正而后身修，身修而后家齐，家齐而后国治，国治而后天下平。</p>
</blockquote>
<p>　　可以理解为调用自身的过程，最外层函数是“明德于天下”，每一层传入的参数依次是治国、齐家、修身、正心、诚意、致知、格物。然后再从最内层逐层返回。</p>
<p>　　如果文言比较难理解，看到的另外一个好解释，以查字典作比：</p>
<blockquote>
<p>我们使用的词典，本身就是递归，为了解释一个词，需要使用更多的词。当你查一个词，发现这个词的解释中某个词仍然不懂，于是你开始查这第二个词，可惜，第二个词里仍然有不懂的词，于是查第三个词，这样查下去，直到有一个词的解释是你完全能看懂的，那么递归走到了尽头，然后你开始后退，逐个明白之前查过的每一个词，最终，你明白了最开始那个词的意思。</p>
</blockquote>
<p>　　本文的右上方配图很直观说明了递归的层次关系。现放大如下：<br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="https://github.com/hubojing/BlogImages/blob/master/%E9%80%92%E5%BD%92%E4%B8%AD%E7%9A%84return%E2%80%94%E2%80%94%E9%80%92%E5%BD%92%E6%B5%81%E7%A8%8B.jpg?raw=true" alt="递归层次" title="">
                </div>
                <div class="image-caption">递归层次</div>
            </figure></p>
<p>　　但递归不该是无限的。所以，这样的比喻欠妥：</p>
<blockquote>
<p>从前有座山，山里有个庙，庙里有个老和尚，他在讲：<br>从前有座山，山里有个庙，庙里有个老和尚，他在讲：<br>……</p>
</blockquote>
<p>　　因为这个调用自身的情况没有尽头，也就是没有返回条件。如果是实际情况估计会内存溢出。</p>
<p>　　所以递归中的返回条件是很重要的，常以程序里的return示之。所以要看清，return后是返回到了哪里。笼统地说，遇到return就会跳出函数。细致一点，return是返回到被调用处。在递归函数里，遇到return退出了这一次的调用，回到被调用处即上一层调用递归处。</p>
<p>　eg.<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">bool Traverse()</span><br><span class="line">&#123;</span><br><span class="line">	if(满足条件)</span><br><span class="line">    &#123;</span><br><span class="line">    	return true;</span><br><span class="line">    &#125;</span><br><span class="line">    else</span><br><span class="line">    &#123;</span><br><span class="line">    	bool bFlag = Traverse();//递归</span><br><span class="line">        if(bFlag == true)</span><br><span class="line">        &#123;</span><br><span class="line">        	return true;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    return false;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>　　梳理这段代码。干脆，把“满足条件”设为“中彩票”吧。第一次进入Traverse()函数，如果中了彩票，就返回true，跳出Traverse()函数。如果没中彩票，就调用递归（即第二次进入Traverse()函数）。<br>　　在第二次Traverse()函数里，如果中了彩票就返回true,跳出<strong>第二次Traverse()函数</strong>，返回到被调用处，即bool bFlag=Traverse();这里，此时，bFlag的值为true。接着判断bFlag的值是否为true，如果为true，则返回true，跳出<strong>第一次Traverse()函数</strong>。这样子Traverse()函数的调用才算结束。<br>在第二次Traverse()函数里，如果没中彩票，就调用递归（即进入第三次Traverse()函数）。<br>　　在第三次Traverse()函数里……</p>
<p>　　会发现第n+1次和第n次的调用方法是一样一样的。不过既然递归次数应该有限，那么也就是说，经过x次递归后，必中彩票。（x是有限次）</p>
<p>　　例子归例子，我们知道，现实生活中彩票依概率满足“无限递归”（编程里不被允许），x依概率趋近于无穷大。</p>
<p>　　其中需要引起重视的是，<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">if(bFlag == true)</span><br><span class="line">&#123;</span><br><span class="line">	return true;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>　　这个判断在很多时候是非常重要的。因为子递归时多数场合需得到该层递归的返回值，来判断究竟是再次递归呢，还是已得到目标值返回到上一层。</p>
<p>　　如果是不需要返回值的递归，就易懂得多了。<br>　　eg.<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">int iAge = 0;</span><br><span class="line">void Grow()</span><br><span class="line">&#123;</span><br><span class="line">	iAge++;</span><br><span class="line">    if(iAge &gt; 18)</span><br><span class="line">    &#123;</span><br><span class="line">    	cout&lt;&lt;&quot;成年啦！&quot;&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">    else</span><br><span class="line">    &#123;</span><br><span class="line">    	Grow();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>　　虽然没有用return返回要求值，但实质一样，通过条件语句及递归调用自身累加类变量iAge，得到了所需值。</p>
<p>　　浅谈递归，如有错误，不吝赐教。^_^</p>
<p>相关：<a href="https://www.zhihu.com/question/20507130" target="_blank" rel="noopener">什么是递归？</a><br>（抖机灵太多……）</p>
]]></content>
      
        <categories>
            
            <category> 互联网 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> CPP </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[ffmpeg开发环境搭建]]></title>
      <url>https://hubojing.github.io/2018/02/22/ffmpeg%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</url>
      <content type="html"><![CDATA[<div align="left"><br><img src="https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1519277154249&di=8b9a60a72da8a1979c84f0f3bd11dfc1&imgtype=jpg&src=http%3A%2F%2Fimg0.imgtn.bdimg.com%2Fit%2Fu%3D1768997415%2C378959485%26fm%3D214%26gp%3D0.jpg" width="300" height="180" style="float:right;"><br><br><br>　　<strong>VS2013+ffmpeg开发环境搭建。</strong><br><br><br> </div>

<a id="more"></a>
<h1 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h1><p>　　<a href="https://ffmpeg.zeranoe.com/builds/" target="_blank" rel="noopener">https://ffmpeg.zeranoe.com/builds/</a></p>
<ul>
<li>Static版本包含ffmpeg.exe 、ffplay.exe 、ffprobe.exe，相关的DLL已经被编译到exe里。</li>
<li>Shared版本除了ffmpeg.exe , ffplay.exe , ffprobe.exe之外还有一些DLL，exe体积很小，在运行时到相应的DLL中调用功能。</li>
<li>Dev开发者（developer）版本，包含了库文件xxx.lib以及头文件xxx.h，不含exe文件。</li>
</ul>
<p>这里选择下载Shared版本和Dev版本。（ffmpeg.exe 、ffplay.exe 、ffprobe.exe可以直接通过命令行运行使用）</p>
<p>或者直接下载我打包好的环境配置文件：<br><a href="http://download.csdn.net/download/hubojing/10254452" target="_blank" rel="noopener">http://download.csdn.net/download/hubojing/10254452</a><br>（csdn现在没免费的了，就勾了最低的2分）</p>
<h1 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h1><ol>
<li>将dev版本文件夹中的Include和lib目录复制到所需工程项目目录下，并在工程属性中设置附加包含目录<code>$(ProjectDir)\include</code>和附加库目录<code>$(ProjectDir)\lib</code>。</li>
<li>将share版本文件夹中bin目录下对应的所有dll复制到项目路径下。</li>
<li>附加依赖项填入（根据所需）<br>avcodec.lib<br>avdevice.lib<br>avfilter.lib<br>avformat.lib<br>avutil.lib<br>postproc.lib<br>swresample.lib<br>swscale.lib</li>
</ol>
<p>　　由于ffmpeg是C语言所写，include头文件时需使用extern “C”标明。</p>
<h1 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line">extern &quot;C&quot;</span><br><span class="line">&#123;</span><br><span class="line">#include &lt;libavformat/avformat.h&gt;</span><br><span class="line">#include &lt;libavutil/dict.h&gt;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">int main(int argc, char **argv)</span><br><span class="line">&#123;</span><br><span class="line">	AVFormatContext *fmt_ctx = NULL;</span><br><span class="line">	AVDictionaryEntry *tag = NULL;</span><br><span class="line">	int ret;</span><br><span class="line"></span><br><span class="line">	if (argc != 2) &#123;</span><br><span class="line">		printf(&quot;usage: %s &lt;input_file&gt;\n&quot;</span><br><span class="line">			&quot;example program to demonstrate the use of the libavformat metadata API.\n&quot;</span><br><span class="line">			&quot;\n&quot;, argv[0]);</span><br><span class="line">		system(&quot;pause&quot;);</span><br><span class="line">		return 1;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	if ((ret = avformat_open_input(&amp;fmt_ctx, argv[1], NULL, NULL)))</span><br><span class="line">		return ret;</span><br><span class="line"></span><br><span class="line">	while ((tag = av_dict_get(fmt_ctx-&gt;metadata, &quot;&quot;, tag, AV_DICT_IGNORE_SUFFIX)))</span><br><span class="line">		printf(&quot;%s=%s\n&quot;, tag-&gt;key, tag-&gt;value);</span><br><span class="line"></span><br><span class="line">	avformat_close_input(&amp;fmt_ctx);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>测试结果：<br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="https://github.com/hubojing/BlogImages/blob/master/ffmpeg%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA%E2%80%94%E2%80%94test%E7%BB%93%E6%9E%9C.png?raw=true" alt="test" title="">
                </div>
                <div class="image-caption">test</div>
            </figure></p>
<p>至此，开发环境已就位。</p>
<p>参考：<a href="http://blog.csdn.net/spaceyqy/article/details/43115391" target="_blank" rel="noopener">vs2013+ffmpeg开发环境搭建</a></p>
<p>资料：<a href="http://blog.csdn.net/leixiaohua1020/article/details/15811977#comments" target="_blank" rel="noopener">FFMPEG视音频编解码零基础学习方法</a><br><a href="http://ffmpeg.org/documentation.html" target="_blank" rel="noopener">ffmpeg官方文档</a></p>
]]></content>
      
        <categories>
            
            <category> 互联网 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> CPP </tag>
            
            <tag> ffmpeg </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[联想Y400拆机]]></title>
      <url>https://hubojing.github.io/2018/02/20/%E8%81%94%E6%83%B3Y400%E6%8B%86%E6%9C%BA/</url>
      <content type="html"><![CDATA[<div align="left"><br><img src="https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1519130696277&di=44a7bcb7af8244e6e2c2f8ca5c95c8f9&imgtype=jpg&src=http%3A%2F%2Fimg2.imgtn.bdimg.com%2Fit%2Fu%3D3592072107%2C2343326581%26fm%3D214%26gp%3D0.jpg" width="300" height="180" style="float:right;"><br><br><br>　　<strong>记一次失败的拆机T_T</strong><br><br><br> </div>

<a id="more"></a>
<p>　　根源：笔记本卡慢，想加一块ssd和一根内存。（其实就是想看看里面长啥样）</p>
<p>　　过程：不停卸螺丝。。。。。。不停扒壳子。。。。。。不停清灰！</p>
<p>　　咳咳，四年没有清过灰<br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="https://github.com/hubojing/BlogImages/blob/master/%E8%81%94%E6%83%B3Y400%E6%8B%86%E6%9C%BA%E2%80%94%E2%80%94%E8%83%8C%E9%9D%A2.jpg?raw=true" alt="背面" title="">
                </div>
                <div class="image-caption">背面</div>
            </figure></p>
<p>　　打开后盖<br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="https://github.com/hubojing/BlogImages/blob/master/%E8%81%94%E6%83%B3Y400%E6%8B%86%E6%9C%BA%E2%80%94%E2%80%94%E5%86%85%E9%83%A8.jpg?raw=true" alt="整体结构" title="">
                </div>
                <div class="image-caption">整体结构</div>
            </figure></p>
<p>　　拿下内存条，原装配的是DDR3 4G。所以是再加一根4G呢，还是干脆换一根8G呢<br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="https://github.com/hubojing/BlogImages/blob/master/%E8%81%94%E6%83%B3Y400%E6%8B%86%E6%9C%BA%E2%80%94%E2%80%94%E5%86%85%E5%AD%98%E6%9D%A1.jpg?raw=true" alt="内存条" title="">
                </div>
                <div class="image-caption">内存条</div>
            </figure></p>
<p>　　可以加2根内存条，联想Y400预留了一个mSATA接口，可以加装mSATA接口的SSD。<br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="https://github.com/hubojing/BlogImages/blob/master/%E8%81%94%E6%83%B3Y400%E6%8B%86%E6%9C%BA%E2%80%94%E2%80%94%E5%86%85%E5%AD%98%E5%92%8Cssd.jpg?raw=true" alt="内存和ssd" title="">
                </div>
                <div class="image-caption">内存和ssd</div>
            </figure></p>
<p>　　好贵啊啊啊啊啊啊啊啊啊啊啊啊<br><a href="https://item.jd.com/3749477.html" target="_blank" rel="noopener">https://item.jd.com/3749477.html</a></p>
<p>　　原装三星硬盘，据说现在被希捷收购了。硬盘盒上有一层防静电锡纸。没拍的D面盖板上也有薄薄的铝板，起电磁屏蔽作用。<br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="https://github.com/hubojing/BlogImages/blob/master/%E8%81%94%E6%83%B3Y400%E6%8B%86%E6%9C%BA%E2%80%94%E2%80%94%E7%A1%AC%E7%9B%98.jpg?raw=true" alt="硬盘" title="">
                </div>
                <div class="image-caption">硬盘</div>
            </figure></p>
<p>　　光驱，莫名其妙的坏掉了……没修好<br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="https://github.com/hubojing/BlogImages/blob/master/%E8%81%94%E6%83%B3Y400%E6%8B%86%E6%9C%BA%E2%80%94%E2%80%94%E5%85%89%E9%A9%B1.jpg?raw=true" alt="光驱" title="">
                </div>
                <div class="image-caption">光驱</div>
            </figure></p>
<p>　　看向光驱位内部，可以看到常规接口<br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="https://github.com/hubojing/BlogImages/blob/master/%E8%81%94%E6%83%B3Y400%E6%8B%86%E6%9C%BA%E2%80%94%E2%80%94%E5%85%89%E9%A9%B1%E5%86%85%E9%83%A8.jpg?raw=true" alt="接口" title="">
                </div>
                <div class="image-caption">接口</div>
            </figure></p>
<p>　　到处还有一些防震海绵，绝缘胶布，整体而言还是比较干净整洁的。但是，屏幕转轴很容易断啊。打开后盖，转轴就是碎的……我整了好久才让笔记本屏幕能正常打开，但已经不能灵活合上盖子了。就是这样：<br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="https://github.com/hubojing/BlogImages/blob/master/%E8%81%94%E6%83%B3Y400%E6%8B%86%E6%9C%BA%E2%80%94%E2%80%94%E5%B1%8F%E5%B9%95%E8%BD%AC%E8%BD%B4.jpg?raw=true" alt="机械故障" title="">
                </div>
                <div class="image-caption">机械故障</div>
            </figure><br>问题出在<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="https://github.com/hubojing/BlogImages/blob/master/%E8%81%94%E6%83%B3Y400%E6%8B%86%E6%9C%BA%E2%80%94%E2%80%94%E5%B1%8F%E8%BD%B4.png?raw=true" alt="屏轴" title="">
                </div>
                <div class="image-caption">屏轴</div>
            </figure></p>
<p>　　由于固定它的塑料壳碎了，转动屏幕它就自由转动，抵到后方的电路板，估计抵坏了左侧音响的音频放大部分电路。一开始直接没声了，倒腾半天有声音了，然后让杂音消了，但声音不能正常放大了。</p>
<p>　　无知者无畏，秉着玩跨了再拼回去的探索精神，本打算都给拆了的。然而螺丝不给面子，滑丝打不开……………………连风扇的螺丝都没找到合适规格的十字口螺丝刀拧开。看来干不了维修→_→失败的拆机，基本就没有拆……忽悠你们点进来</p>
<p>　　拼回去了还能用，还可以，除了我的JBL专业音响T_T。清灰效果不明显啊，还是要一键还原啊。希望小Y再坚持几年不垮</p>
<p>　　好了不拆了！弄得一手灰╭(╯^╰)╮谁和我组队打个游戏赢几盘排解一下</p>
<p>　　附一篇<a href="http://nb.zol.com.cn/337/3374073.html" target="_blank" rel="noopener">正儿八经的拆机</a></p>
]]></content>
      
        <categories>
            
            <category> 通信工程 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 硬件 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[域名更换公告]]></title>
      <url>https://hubojing.github.io/2018/02/19/%E5%85%AC%E5%91%8A/</url>
      <content type="html"><![CDATA[<div align="left"><br><img src="https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1519130846687&di=d0a3a597ccffeaff65b2e3eeb22cf389&imgtype=0&src=http%3A%2F%2F5b0988e595225.cdn.sohucs.com%2Fimages%2F20170929%2F818198511153441585d8013421e01fea.jpeg" width="300" height="180" style="float:right;"><br>　　<strong>本博客域名还原为<a href="https://hubojing.github.io/">https://hubojing.github.io/</a></strong><br>　　域名<del><a href="http://hubojing.me/" target="_blank" rel="noopener">http://hubojing.me/</a></del>已弃用。由于更换域名，原有每篇文章浏览量被清空。<br>　　特此公告。<br><br>　　小博客点击一万五啦(づ￣ 3￣)づ，谢谢各位的来访。<br>  　　<br>    　　<br> </div>

<a id="more"></a>
<p>　　</p>
]]></content>
      
        <categories>
            
            <category> 杂谈 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 公告 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[OpenCV3.4.0编译]]></title>
      <url>https://hubojing.github.io/2018/01/28/OpenCV3-4-0%E7%BC%96%E8%AF%91/</url>
      <content type="html"><![CDATA[<div align="left"><br><img src="https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1517760219&di=39b7b7cc2c84d7dd42bf4db67fa2cd4e&imgtype=jpg&er=1&src=http%3A%2F%2Fpic.baike.soso.com%2Fp%2F20140221%2Fbki-20140221032221-753276011.jpg" width="300" height="180" style="float:right;"><br><br><br>　　<strong>OpenCV文件编译及问题记录。</strong><br><br><br> </div>

<a id="more"></a>
<p>目前最新OpenCV官网发布最新版为3.4.0（2017年12月23日发布）。</p>
<h1 id="OpenCV库使用方法"><a href="#OpenCV库使用方法" class="headerlink" title="OpenCV库使用方法"></a>OpenCV库使用方法</h1><p>下载地址：<a href="https://github.com/opencv/opencv/releases/tag/3.4.0" target="_blank" rel="noopener">https://github.com/opencv/opencv/releases/tag/3.4.0</a><br>或<br><a href="https://sourceforge.net/projects/opencvlibrary/" target="_blank" rel="noopener">https://sourceforge.net/projects/opencvlibrary/</a></p>
<h2 id="法一：使用官方提供的已编译好的文件"><a href="#法一：使用官方提供的已编译好的文件" class="headerlink" title="法一：使用官方提供的已编译好的文件"></a>法一：使用官方提供的已编译好的文件</h2><p>优点：方便快捷<br>缺点：版本限制<br>选择opencv-3.4.0-vc14_vc15.exe，下载完成后可以直接打开解压，即可在自己的项目中直接使用。<br>具体步骤为：</p>
<ol>
<li><p>配置环境变量<br>打开电脑右键属性-高级系统设置-环境变量，Path中新增：E:\opencv\build\x64\vc14\bin，（此处为解压对应目录）。</p>
</li>
<li><p>引入相应头文件、库文件、链接库<br>打开自己的工程，右键属性-配置属性-VC++目录-包含目录，新增：<br>E:\opencv\build\include\opencv<br>E:\opencv\build\include\opencv2<br>E:\opencv\build\include</p>
</li>
</ol>
<p>库目录，新增：<br>E:\opencv\build\x64\vc14\lib<br>（注意修改为你解压对应的目录）。</p>
<p>链接器-输入-附加依赖项，新增：<br>opencv_world340d.lib<br>点击确定即可。<br>至此所有准备工作就绪，可以愉快地编译自己的工程啦。</p>
<p>但想如此一劳永逸解决问题，需符合以下特点：你的VS版本是VC14（2015）或VC15（2017）。<br>另附几种对应关系：<br>Microsoft Visual Studio 6.0:          VC6.0<br>Microsoft Visual Studio 2002：          VC7.0<br>Microsoft Visual Studio 2003：        VC7.1<br>Microsoft Visual Studio 2005：           VC8.0<br>Microsoft Visual Studio 2008：        VC9.0<br>Microsoft Visual Studio 2010：        VC10.0<br>Microsoft Visual Studio 2012：        VC11.0<br>Microsoft Visual Studio 2013：        VC12.0<br>Microsoft Visual Studio 2014：        VC13.0<br>Microsoft Visual Studio 2015：        VC14.0<br>Microsoft Visual studio 2017：         VC15.0</p>
<p>由于我使用VS2013，因此无法使用该方法。（当然，可以自行下载VS2015的运行库）。<br>我使用法二。</p>
<h2 id="法二：自行编译"><a href="#法二：自行编译" class="headerlink" title="法二：自行编译"></a>法二：自行编译</h2><h3 id="下载源码Source-code并解压"><a href="#下载源码Source-code并解压" class="headerlink" title="下载源码Source code并解压"></a>下载源码Source code并解压</h3><h3 id="下载CMake"><a href="#下载CMake" class="headerlink" title="下载CMake"></a>下载CMake</h3><p>下载地址：<a href="https://cmake.org/download/" target="_blank" rel="noopener">https://cmake.org/download/</a><br>选择相应操作系统版本，例如我选择Windows win64-x64 Installer。安装，打开bin\cmake-gui.exe。</p>
<h3 id="使用CMake"><a href="#使用CMake" class="headerlink" title="使用CMake"></a>使用CMake</h3><p>在Where is the source code中选择OpenCV解压目录，如：E:/opencv-3.4.0/opencv-3.4.0。<br>一般可以在解压目录下新建一个build文件夹，用来存放编译生成的文件。<br>于是，在Where to build the binaries中填入该路径，如：E:/opencv-3.4.0/opencv-3.4.0/build。（也可自行选择路径）</p>
<p>点击Configure，选择所需环境，如：Visual Studio 12 2013。进入漫长的等待。<br>如果区域有红色出现，需再次点击Configure，直到全部变成白色。</p>
<p>第一次Configure后：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br></pre></td><td class="code"><pre><span class="line">General configuration for OpenCV 3.4.0 =====================================</span><br><span class="line">  Version control:               unknown</span><br><span class="line"></span><br><span class="line">  Platform:</span><br><span class="line">    Timestamp:                   2018-01-29T14:29:24Z</span><br><span class="line">    Host:                        Windows 10.0.16299 AMD64</span><br><span class="line">    CMake:                       3.10.2</span><br><span class="line">    CMake generator:             Visual Studio 12 2013</span><br><span class="line">    CMake build tool:            C:/Program Files (x86)/MSBuild/12.0/bin/MSBuild.exe</span><br><span class="line">    MSVC:                        1800</span><br><span class="line"></span><br><span class="line">  CPU/HW features:</span><br><span class="line">    Baseline:                    SSE SSE2</span><br><span class="line">      requested:                 SSE2</span><br><span class="line">    Dispatched code generation:  SSE4_1 SSE4_2 FP16 AVX</span><br><span class="line">      requested:                 SSE4_1 SSE4_2 AVX FP16 AVX2</span><br><span class="line">      SSE4_1 (3 files):          + SSE3 SSSE3 SSE4_1</span><br><span class="line">      SSE4_2 (1 files):          + SSE3 SSSE3 SSE4_1 POPCNT SSE4_2</span><br><span class="line">      FP16 (2 files):            + SSE3 SSSE3 SSE4_1 POPCNT SSE4_2 FP16 AVX</span><br><span class="line">      AVX (5 files):             + SSE3 SSSE3 SSE4_1 POPCNT SSE4_2 AVX</span><br><span class="line"></span><br><span class="line">  C/C++:</span><br><span class="line">    Built as dynamic libs?:      YES</span><br><span class="line">    C++11:                       YES</span><br><span class="line">    C++ Compiler:                C:/software/vs2013/VC/bin/cl.exe  (ver 18.0.21005.1)</span><br><span class="line">    C++ flags (Release):         /DWIN32 /D_WINDOWS /W4 /GR  /EHa  /D _CRT_SECURE_NO_DEPRECATE /D _CRT_NONSTDC_NO_DEPRECATE /D _SCL_SECURE_NO_WARNINGS /Gy /bigobj /Oi /fp:fast   /arch:SSE /arch:SSE2 /wd4127 /wd4251 /wd4324 /wd4275 /wd4512 /wd4589 /MP12  /MD /O2 /Ob2 /DNDEBUG  /Zi</span><br><span class="line">    C++ flags (Debug):           /DWIN32 /D_WINDOWS /W4 /GR  /EHa  /D _CRT_SECURE_NO_DEPRECATE /D _CRT_NONSTDC_NO_DEPRECATE /D _SCL_SECURE_NO_WARNINGS /Gy /bigobj /Oi /fp:fast   /arch:SSE /arch:SSE2 /wd4127 /wd4251 /wd4324 /wd4275 /wd4512 /wd4589 /MP12  /MDd /Zi /Ob0 /Od /RTC1 </span><br><span class="line">    C Compiler:                  C:/software/vs2013/VC/bin/cl.exe</span><br><span class="line">    C flags (Release):           /DWIN32 /D_WINDOWS /W3  /D _CRT_SECURE_NO_DEPRECATE /D _CRT_NONSTDC_NO_DEPRECATE /D _SCL_SECURE_NO_WARNINGS /Gy /bigobj /Oi /fp:fast   /arch:SSE /arch:SSE2   /MP12  /MD /O2 /Ob2 /DNDEBUG  /Zi</span><br><span class="line">    C flags (Debug):             /DWIN32 /D_WINDOWS /W3  /D _CRT_SECURE_NO_DEPRECATE /D _CRT_NONSTDC_NO_DEPRECATE /D _SCL_SECURE_NO_WARNINGS /Gy /bigobj /Oi /fp:fast   /arch:SSE /arch:SSE2   /MP12  /MDd /Zi /Ob0 /Od /RTC1 </span><br><span class="line">    Linker flags (Release):      /machine:X86  /INCREMENTAL:NO  /debug</span><br><span class="line">    Linker flags (Debug):        /machine:X86  /debug /INCREMENTAL </span><br><span class="line">    ccache:                      NO</span><br><span class="line">    Precompiled headers:         YES</span><br><span class="line">    Extra dependencies:</span><br><span class="line">    3rdparty dependencies:</span><br><span class="line"></span><br><span class="line">  OpenCV modules:</span><br><span class="line">    To be built:                 calib3d core dnn features2d flann highgui imgcodecs imgproc ml objdetect photo python_bindings_generator shape stitching superres ts video videoio videostab</span><br><span class="line">    Disabled:                    js world</span><br><span class="line">    Disabled by dependency:      -</span><br><span class="line">    Unavailable:                 cudaarithm cudabgsegm cudacodec cudafeatures2d cudafilters cudaimgproc cudalegacy cudaobjdetect cudaoptflow cudastereo cudawarping cudev java python2 python3 viz</span><br><span class="line">    Applications:                tests perf_tests apps</span><br><span class="line">    Documentation:               NO</span><br><span class="line">    Non-free algorithms:         NO</span><br><span class="line"></span><br><span class="line">  Windows RT support:            NO</span><br><span class="line"></span><br><span class="line">  GUI: </span><br><span class="line">    Win32 UI:                    YES</span><br><span class="line">    VTK support:                 NO</span><br><span class="line"></span><br><span class="line">  Media I/O: </span><br><span class="line">    ZLib:                        build (ver 1.2.11)</span><br><span class="line">    JPEG:                        build (ver 90)</span><br><span class="line">    WEBP:                        build (ver encoder: 0x020e)</span><br><span class="line">    PNG:                         build (ver 1.6.34)</span><br><span class="line">    TIFF:                        build (ver 42 - 4.0.9)</span><br><span class="line">    JPEG 2000:                   build (ver 1.900.1)</span><br><span class="line">    OpenEXR:                     build (ver 1.7.1)</span><br><span class="line"></span><br><span class="line">  Video I/O:</span><br><span class="line">    Video for Windows:           YES</span><br><span class="line">    DC1394:                      NO</span><br><span class="line">    FFMPEG:                      NO</span><br><span class="line">      avcodec:                   NO</span><br><span class="line">      avformat:                  NO</span><br><span class="line">      avutil:                    NO</span><br><span class="line">      swscale:                   NO</span><br><span class="line">      avresample:                NO</span><br><span class="line">    GStreamer:                   NO</span><br><span class="line">    DirectShow:                  YES</span><br><span class="line"></span><br><span class="line">  Parallel framework:            Concurrency</span><br><span class="line"></span><br><span class="line">  Trace:                         YES (with Intel ITT)</span><br><span class="line"></span><br><span class="line">  Other third-party libraries:</span><br><span class="line">    Lapack:                      NO</span><br><span class="line">    Eigen:                       NO</span><br><span class="line">    Custom HAL:                  NO</span><br><span class="line"></span><br><span class="line">  NVIDIA CUDA:                   NO</span><br><span class="line"></span><br><span class="line">  OpenCL:                        YES (no extra features)</span><br><span class="line">    Include path:                E:/opencv-3.4.0/opencv-3.4.0/3rdparty/include/opencl/1.2</span><br><span class="line">    Link libraries:              Dynamic load</span><br><span class="line"></span><br><span class="line">  Python (for build):            NO</span><br><span class="line"></span><br><span class="line">  Java:</span><br><span class="line">    ant:                         NO</span><br><span class="line">    JNI:                         NO</span><br><span class="line">    Java wrappers:               NO</span><br><span class="line">    Java tests:                  NO</span><br><span class="line"></span><br><span class="line">  Matlab:                        NO</span><br><span class="line"></span><br><span class="line">  Install to:                    E:/opencv-3.4.0/opencv-3.4.0/build/install</span><br><span class="line">-----------------------------------------------------------------</span><br><span class="line"></span><br><span class="line">Configuring done</span><br></pre></td></tr></table></figure></p>
<p>此时可能出现常见问题：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">FFMPEG: Download: opencv_ffmpeg.dll</span><br><span class="line">CMake Warning at cmake/OpenCVDownload.cmake:190 (message):</span><br><span class="line">  FFMPEG: Download failed: 28;&quot;Timeout was reached&quot;</span><br><span class="line"></span><br><span class="line">FFMPEG: Download: opencv_ffmpeg_64.dll</span><br><span class="line">CMake Warning at cmake/OpenCVDownload.cmake:190 (message):</span><br><span class="line">  FFMPEG: Download failed: 28;&quot;Timeout was reached&quot;</span><br><span class="line"></span><br><span class="line">IPPICV: Download: ippicv_2017u3_win_ia32_general_20170822.zip</span><br><span class="line">CMake Warning at cmake/OpenCVDownload.cmake:190 (message):</span><br><span class="line">  IPPICV: Download failed: 28;&quot;Timeout was reached&quot;</span><br></pre></td></tr></table></figure></p>
<p> 总之就是有文件下载不成功。根据CMake的提示，打开build下的CMakeDownloadLog.txt，上面写着：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">use_cache &quot;E:/opencv-3.4.0/opencv-3.4.0/.cache&quot;</span><br><span class="line">do_copy &quot;opencv_ffmpeg.dll&quot; &quot;3ae76b105113d944984b2351c61e21c6&quot; &quot;https://raw.githubusercontent.com/opencv/opencv_3rdparty/66b1fed06cf3510235f367f96aa26da5cb234a15/ffmpeg/opencv_ffmpeg.dll&quot; &quot;E:/opencv-3.4.0/opencv-3.4.0/build/3rdparty/ffmpeg&quot;</span><br><span class="line">#missing &quot;E:/opencv-3.4.0/opencv-3.4.0/build/3rdparty/ffmpeg/opencv_ffmpeg.dll&quot;</span><br><span class="line">#check_md5 &quot;E:/opencv-3.4.0/opencv-3.4.0/.cache/ffmpeg/3ae76b105113d944984b2351c61e21c6-opencv_ffmpeg.dll&quot;</span><br><span class="line">#mismatch_md5 &quot;E:/opencv-3.4.0/opencv-3.4.0/.cache/ffmpeg/3ae76b105113d944984b2351c61e21c6-opencv_ffmpeg.dll&quot; &quot;299b46e2c4cf8047b0ef420c9a61c6ef&quot;</span><br><span class="line">#delete &quot;E:/opencv-3.4.0/opencv-3.4.0/.cache/ffmpeg/3ae76b105113d944984b2351c61e21c6-opencv_ffmpeg.dll&quot;</span><br><span class="line">#cmake_download &quot;E:/opencv-3.4.0/opencv-3.4.0/.cache/ffmpeg/3ae76b105113d944984b2351c61e21c6-opencv_ffmpeg.dll&quot; &quot;https://raw.githubusercontent.com/opencv/opencv_3rdparty/66b1fed06cf3510235f367f96aa26da5cb234a15/ffmpeg/opencv_ffmpeg.dll&quot;</span><br><span class="line">do_copy &quot;opencv_ffmpeg_64.dll&quot; &quot;cf3bb5bc9d393b022ea7a42eb63e794d&quot; &quot;https://raw.githubusercontent.com/opencv/opencv_3rdparty/66b1fed06cf3510235f367f96aa26da5cb234a15/ffmpeg/opencv_ffmpeg_64.dll&quot; &quot;E:/opencv-3.4.0/opencv-3.4.0/build/3rdparty/ffmpeg&quot;</span><br><span class="line">#missing &quot;E:/opencv-3.4.0/opencv-3.4.0/build/3rdparty/ffmpeg/opencv_ffmpeg_64.dll&quot;</span><br><span class="line">#check_md5 &quot;E:/opencv-3.4.0/opencv-3.4.0/.cache/ffmpeg/cf3bb5bc9d393b022ea7a42eb63e794d-opencv_ffmpeg_64.dll&quot;</span><br><span class="line">#mismatch_md5 &quot;E:/opencv-3.4.0/opencv-3.4.0/.cache/ffmpeg/cf3bb5bc9d393b022ea7a42eb63e794d-opencv_ffmpeg_64.dll&quot; &quot;3ab964d23e60d2b961737a8bb556bd45&quot;</span><br><span class="line">#delete &quot;E:/opencv-3.4.0/opencv-3.4.0/.cache/ffmpeg/cf3bb5bc9d393b022ea7a42eb63e794d-opencv_ffmpeg_64.dll&quot;</span><br><span class="line">#cmake_download &quot;E:/opencv-3.4.0/opencv-3.4.0/.cache/ffmpeg/cf3bb5bc9d393b022ea7a42eb63e794d-opencv_ffmpeg_64.dll&quot; &quot;https://raw.githubusercontent.com/opencv/opencv_3rdparty/66b1fed06cf3510235f367f96aa26da5cb234a15/ffmpeg/opencv_ffmpeg_64.dll&quot;</span><br><span class="line">do_copy &quot;ffmpeg_version.cmake&quot; &quot;ec59008da403fb18ab3c1ed66aed583b&quot; &quot;https://raw.githubusercontent.com/opencv/opencv_3rdparty/66b1fed06cf3510235f367f96aa26da5cb234a15/ffmpeg/ffmpeg_version.cmake&quot; &quot;E:/opencv-3.4.0/opencv-3.4.0/build/3rdparty/ffmpeg&quot;</span><br><span class="line">#check_md5 &quot;E:/opencv-3.4.0/opencv-3.4.0/build/3rdparty/ffmpeg/ffmpeg_version.cmake&quot;</span><br><span class="line">#match_md5 &quot;E:/opencv-3.4.0/opencv-3.4.0/build/3rdparty/ffmpeg/ffmpeg_version.cmake&quot; &quot;ec59008da403fb18ab3c1ed66aed583b&quot;</span><br><span class="line">do_unpack &quot;ippicv_2017u3_win_ia32_general_20170822.zip&quot; &quot;8a7680ae352c192de2e2e34936164bd0&quot; &quot;https://raw.githubusercontent.com/opencv/opencv_3rdparty/dfe3162c237af211e98b8960018b564bc209261d/ippicv/ippicv_2017u3_win_ia32_general_20170822.zip&quot; &quot;E:/opencv-3.4.0/opencv-3.4.0/build/3rdparty/ippicv&quot;</span><br><span class="line">#check_md5 &quot;E:/opencv-3.4.0/opencv-3.4.0/.cache/ippicv/8a7680ae352c192de2e2e34936164bd0-ippicv_2017u3_win_ia32_general_20170822.zip&quot;</span><br><span class="line">#mismatch_md5 &quot;E:/opencv-3.4.0/opencv-3.4.0/.cache/ippicv/8a7680ae352c192de2e2e34936164bd0-ippicv_2017u3_win_ia32_general_20170822.zip&quot; &quot;c7fcfb626b50daa8bd728b7598328455&quot;</span><br><span class="line">#delete &quot;E:/opencv-3.4.0/opencv-3.4.0/.cache/ippicv/8a7680ae352c192de2e2e34936164bd0-ippicv_2017u3_win_ia32_general_20170822.zip&quot;</span><br><span class="line">#cmake_download &quot;E:/opencv-3.4.0/opencv-3.4.0/.cache/ippicv/8a7680ae352c192de2e2e34936164bd0-ippicv_2017u3_win_ia32_general_20170822.zip&quot; &quot;https://raw.githubusercontent.com/opencv/opencv_3rdparty/dfe3162c237af211e98b8960018b564bc209261d/ippicv/ippicv_2017u3_win_ia32_general_20170822.zip&quot;</span><br></pre></td></tr></table></figure></p>
<p><del>可以看到文本中记录了下载链接，于是在浏览器中复制上述链接，自行下载好这几个文件到文本指向的路径中。<br>比如：我缺的三个文件是：<br>opencv_ffmpeg.dll，需放到：E:/opencv-3.4.0/opencv-3.4.0/build/3rdparty/ffmpeg。<br>下载链接：<a href="https://raw.githubusercontent.com/opencv/opencv_3rdparty/66b1fed06cf3510235f367f96aa26da5cb234a15/ffmpeg/opencv_ffmpeg.dll" target="_blank" rel="noopener">https://raw.githubusercontent.com/opencv/opencv_3rdparty/66b1fed06cf3510235f367f96aa26da5cb234a15/ffmpeg/opencv_ffmpeg.dll</a><br>opencv_ffmpeg_64.dll，需放到：E:/opencv-3.4.0/opencv-3.4.0/build/3rdparty/ffmpeg。<br>下载链接：<br><a href="https://raw.githubusercontent.com/opencv/opencv_3rdparty/66b1fed06cf3510235f367f96aa26da5cb234a15/ffmpeg/opencv_ffmpeg_64.dll" target="_blank" rel="noopener">https://raw.githubusercontent.com/opencv/opencv_3rdparty/66b1fed06cf3510235f367f96aa26da5cb234a15/ffmpeg/opencv_ffmpeg_64.dll</a><br>ippicv_2017u3_win_ia32_general_20170822.zip，注意：需在压缩包前加上文件的hash值，即压缩名变为hash值-原名。提供一个在线查看哈希值的网站：<a href="http://www.atool.org/file_hash.php" target="_blank" rel="noopener">http://www.atool.org/file_hash.php</a> ，需要的是MD5 Hash。<br>需放到：E:/opencv-3.4.0/opencv-3.4.0/build/3rdparty/ippicv。（然而并没有生成ippicv文件夹）<br>下载链接：<br><a href="https://raw.githubusercontent.com/opencv/opencv_3rdparty/dfe3162c237af211e98b8960018b564bc209261d/ippicv/ippicv_2017u3_win_ia32_general_20170822.zip" target="_blank" rel="noopener">https://raw.githubusercontent.com/opencv/opencv_3rdparty/dfe3162c237af211e98b8960018b564bc209261d/ippicv/ippicv_2017u3_win_ia32_general_20170822.zip</a><br>建议科学上网后下载，不然网速感人。<br>不过还是不匹配。</del><br>根据大佬提示，CMake3.10.2没有downloader.cmake，干脆……不要这三个文件了……<br>修改E:\opencv-3.4.0\opencv-3.4.0\3rdparty\ffmpeg中的ffmpeg.cmake，如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"># Binary branch name: ffmpeg/master_20171009</span><br><span class="line"># Binaries were created for OpenCV: 8ac2c5d620b467d3f22802e96c88ddde6da707af</span><br><span class="line">set(FFMPEG_BINARIES_COMMIT &quot;66b1fed06cf3510235f367f96aa26da5cb234a15&quot;)</span><br><span class="line">set(FFMPEG_FILE_HASH_BIN32 &quot;3ae76b105113d944984b2351c61e21c6&quot;)</span><br><span class="line">set(FFMPEG_FILE_HASH_BIN64 &quot;cf3bb5bc9d393b022ea7a42eb63e794d&quot;)</span><br><span class="line">set(FFMPEG_FILE_HASH_CMAKE &quot;ec59008da403fb18ab3c1ed66aed583b&quot;)</span><br><span class="line"></span><br><span class="line">function(download_win_ffmpeg script_var)</span><br><span class="line">  set($&#123;script_var&#125; &quot;&quot; PARENT_SCOPE)</span><br><span class="line"></span><br><span class="line">  # set(ids BIN32 BIN64 CMAKE)</span><br><span class="line">  # set(name_BIN32 &quot;opencv_ffmpeg.dll&quot;)</span><br><span class="line">  # set(name_BIN64 &quot;opencv_ffmpeg_64.dll&quot;)</span><br><span class="line">  # set(name_CMAKE &quot;ffmpeg_version.cmake&quot;)</span><br><span class="line"></span><br><span class="line">  # set(FFMPEG_DOWNLOAD_DIR &quot;$&#123;OpenCV_BINARY_DIR&#125;/3rdparty/ffmpeg&quot;)</span><br><span class="line"></span><br><span class="line">  # set(status TRUE)</span><br><span class="line">  # foreach(id $&#123;ids&#125;)</span><br><span class="line">    # ocv_download(FILENAME $&#123;name_$&#123;id&#125;&#125;</span><br><span class="line">               # HASH $&#123;FFMPEG_FILE_HASH_$&#123;id&#125;&#125;</span><br><span class="line">               # URL</span><br><span class="line">                 # &quot;$ENV&#123;OPENCV_FFMPEG_URL&#125;&quot;</span><br><span class="line">                 # &quot;$&#123;OPENCV_FFMPEG_URL&#125;&quot;</span><br><span class="line">                 # &quot;https://raw.githubusercontent.com/opencv/opencv_3rdparty/$&#123;FFMPEG_BINARIES_COMMIT&#125;/ffmpeg/&quot;</span><br><span class="line">               # DESTINATION_DIR $&#123;FFMPEG_DOWNLOAD_DIR&#125;</span><br><span class="line">               # ID FFMPEG</span><br><span class="line">               # RELATIVE_URL</span><br><span class="line">               # STATUS res)</span><br><span class="line">    # if(NOT res)</span><br><span class="line">      # set(status FALSE)</span><br><span class="line">    # endif()</span><br><span class="line">  # endforeach()</span><br><span class="line">  # if(status)</span><br><span class="line">    # set($&#123;script_var&#125; &quot;$&#123;FFMPEG_DOWNLOAD_DIR&#125;/ffmpeg_version.cmake&quot; PARENT_SCOPE)</span><br><span class="line">  # endif()</span><br><span class="line">endfunction()</span><br></pre></td></tr></table></figure></p>
<p>修改E:\opencv-3.4.0\opencv-3.4.0\3rdparty\ippicv中的ippicv.cmake，如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line">function(download_ippicv root_var)</span><br><span class="line">  # set($&#123;root_var&#125; &quot;&quot; PARENT_SCOPE)</span><br><span class="line"></span><br><span class="line">  # # Commit SHA in the opencv_3rdparty repo</span><br><span class="line">  # set(IPPICV_COMMIT &quot;dfe3162c237af211e98b8960018b564bc209261d&quot;)</span><br><span class="line">  # # Define actual ICV versions</span><br><span class="line">  # if(APPLE)</span><br><span class="line">    # set(OPENCV_ICV_PLATFORM &quot;macosx&quot;)</span><br><span class="line">    # set(OPENCV_ICV_PACKAGE_SUBDIR &quot;ippicv_mac&quot;)</span><br><span class="line">    # if(X86_64)</span><br><span class="line">      # set(OPENCV_ICV_NAME &quot;ippicv_2017u3_mac_intel64_general_20170822.tgz&quot;)</span><br><span class="line">      # set(OPENCV_ICV_HASH &quot;c1ebb5dfa5b7f54b0c44e1917805a463&quot;)</span><br><span class="line">    # else()</span><br><span class="line">      # set(OPENCV_ICV_NAME &quot;ippicv_2017u3_mac_ia32_general_20170822.tgz&quot;)</span><br><span class="line">      # set(OPENCV_ICV_HASH &quot;49b05a669042753ae75895a445ebd612&quot;)</span><br><span class="line">    # endif()</span><br><span class="line">  # elseif((UNIX AND NOT ANDROID) OR (UNIX AND ANDROID_ABI MATCHES &quot;x86&quot;))</span><br><span class="line">    # set(OPENCV_ICV_PLATFORM &quot;linux&quot;)</span><br><span class="line">    # set(OPENCV_ICV_PACKAGE_SUBDIR &quot;ippicv_lnx&quot;)</span><br><span class="line">    # if(X86_64)</span><br><span class="line">      # set(OPENCV_ICV_NAME &quot;ippicv_2017u3_lnx_intel64_general_20170822.tgz&quot;)</span><br><span class="line">      # set(OPENCV_ICV_HASH &quot;4e0352ce96473837b1d671ce87f17359&quot;)</span><br><span class="line">    # else()</span><br><span class="line">      # set(OPENCV_ICV_NAME &quot;ippicv_2017u3_lnx_ia32_general_20170822.tgz&quot;)</span><br><span class="line">      # set(OPENCV_ICV_HASH &quot;dcdb0ba4b123f240596db1840cd59a76&quot;)</span><br><span class="line">    # endif()</span><br><span class="line">  # elseif(WIN32 AND NOT ARM)</span><br><span class="line">    # set(OPENCV_ICV_PLATFORM &quot;windows&quot;)</span><br><span class="line">    # set(OPENCV_ICV_PACKAGE_SUBDIR &quot;ippicv_win&quot;)</span><br><span class="line">    # if(X86_64)</span><br><span class="line">      # set(OPENCV_ICV_NAME &quot;ippicv_2017u3_win_intel64_general_20170822.zip&quot;)</span><br><span class="line">      # set(OPENCV_ICV_HASH &quot;0421e642bc7ad741a2236d3ec4190bdd&quot;)</span><br><span class="line">    # else()</span><br><span class="line">      # set(OPENCV_ICV_NAME &quot;ippicv_2017u3_win_ia32_general_20170822.zip&quot;)</span><br><span class="line">      # set(OPENCV_ICV_HASH &quot;8a7680ae352c192de2e2e34936164bd0&quot;)</span><br><span class="line">    # endif()</span><br><span class="line">  # else()</span><br><span class="line">    # return()</span><br><span class="line">  # endif()</span><br><span class="line"></span><br><span class="line">  # set(THE_ROOT &quot;$&#123;OpenCV_BINARY_DIR&#125;/3rdparty/ippicv&quot;)</span><br><span class="line">  # ocv_download(FILENAME $&#123;OPENCV_ICV_NAME&#125;</span><br><span class="line">               # HASH $&#123;OPENCV_ICV_HASH&#125;</span><br><span class="line">               # URL</span><br><span class="line">                 # &quot;$&#123;OPENCV_IPPICV_URL&#125;&quot;</span><br><span class="line">                 # &quot;$ENV&#123;OPENCV_IPPICV_URL&#125;&quot;</span><br><span class="line">                 # &quot;https://raw.githubusercontent.com/opencv/opencv_3rdparty/$&#123;IPPICV_COMMIT&#125;/ippicv/&quot;</span><br><span class="line">               # DESTINATION_DIR &quot;$&#123;THE_ROOT&#125;&quot;</span><br><span class="line">               # ID IPPICV</span><br><span class="line">               # STATUS res</span><br><span class="line">               # UNPACK RELATIVE_URL)</span><br><span class="line"></span><br><span class="line">  # if(res)</span><br><span class="line">    # set($&#123;root_var&#125; &quot;$&#123;THE_ROOT&#125;/$&#123;OPENCV_ICV_PACKAGE_SUBDIR&#125;&quot; PARENT_SCOPE)</span><br><span class="line">  # endif()</span><br><span class="line">endfunction()</span><br></pre></td></tr></table></figure></p>
<p>再重新Configure两次，Generate一次，成功。</p>
<h3 id="用VS2013编译"><a href="#用VS2013编译" class="headerlink" title="用VS2013编译"></a>用VS2013编译</h3><p>打开OpenCV.sln编译，debug-Win32调试器。</p>
<h3 id="添加到所需工程"><a href="#添加到所需工程" class="headerlink" title="添加到所需工程"></a>添加到所需工程</h3><p>根据法一：<br>添加环境变量：<br>E:\opencv-3.4.0\opencv-3.4.0\build\install\x86\vc12\bin<br>VS包含目录：E:\opencv-3.4.0\opencv-3.4.0\build\install\include<br>E:\opencv-3.4.0\opencv-3.4.0\build\install\include\opencv<br>E:\opencv-3.4.0\opencv-3.4.0\build\install\include\opencv2<br>库目录：<br>E:\opencv-3.4.0\opencv-3.4.0\build\install\x86\vc12\lib<br>链接器：<br>opencv_calib3d340d.lib<br>opencv_core340d.lib<br>opencv_dnn340d.lib<br>opencv_features2d340d.lib<br>opencv_flann340d.lib<br>opencv_highgui340d.lib<br>opencv_imgcodecs340d.lib<br>opencv_imgproc340d.lib<br>opencv_ml340d.lib<br>opencv_objdetect340d.lib<br>opencv_photo340d.lib<br>opencv_shape340d.lib<br>opencv_stitching340d.lib<br>opencv_superres340d.lib<br>opencv_video340d.lib<br>opencv_videoio340d.lib<br>opencv_videostab340d.lib</p>
<h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><p>比较两张图片的不同之处。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;cv.h&gt;  </span><br><span class="line">#include &lt;highgui.h&gt;  </span><br><span class="line">#include &lt;stdio.h&gt;  </span><br><span class="line"></span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">	IplImage *pSrc = cvLoadImage(&quot;1.jpg&quot;, 1);</span><br><span class="line">	CvSize size = cvSize(600, 376);//区域大小  </span><br><span class="line">	cvSetImageROI(pSrc, cvRect(0, 0, size.width, size.height));//设置源图像ROI  </span><br><span class="line">	IplImage* pDest1 = cvCreateImage(size, pSrc-&gt;depth, pSrc-&gt;nChannels);//创建目标图像  </span><br><span class="line">	cvCopy(pSrc, pDest1); //复制图像  </span><br><span class="line">	cvResetImageROI(pDest1);//源图像用完后，清空ROI  </span><br><span class="line">	cvSaveImage(&quot;Image_1.jpg&quot;, pDest1);//保存目标图像  </span><br><span class="line">	cvSetImageROI(pSrc, cvRect(0, 393, size.width, size.height));//设置源图像ROI  </span><br><span class="line">	IplImage* pDest2 = cvCreateImage(size, pSrc-&gt;depth, pSrc-&gt;nChannels);//创建目标图像  </span><br><span class="line">	cvCopy(pSrc, pDest2); //复制图像  </span><br><span class="line">	cvResetImageROI(pDest2);//源图像用完后，清空ROI  </span><br><span class="line">	cvSaveImage(&quot;Image_2.jpg&quot;, pDest2);//保存目标图像  </span><br><span class="line">	IplImage *dst;</span><br><span class="line">	dst = cvCreateImage(cvGetSize(pDest1), pDest1-&gt;depth, pDest1-&gt;nChannels);</span><br><span class="line">	cvAbsDiff(pDest1, pDest2, dst);</span><br><span class="line">	cvNamedWindow(&quot;Compare_Images&quot;, 1);</span><br><span class="line">	cvShowImage(&quot;Compare_Images&quot;, dst);</span><br><span class="line">	cvWaitKey();</span><br><span class="line">	return 0;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>以上程序转自<a href="http://blog.csdn.net/cooelf/article/details/24663097" target="_blank" rel="noopener">http://blog.csdn.net/cooelf/article/details/24663097</a></p>
<p>可成功编译和运行，到此，基础环境算是磕磕绊绊搭建好了。</p>
]]></content>
      
        <categories>
            
            <category> 互联网 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> CPP </tag>
            
            <tag> OpenCV </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[微信自动跳一跳]]></title>
      <url>https://hubojing.github.io/2018/01/06/%E5%BE%AE%E4%BF%A1%E8%87%AA%E5%8A%A8%E8%B7%B3%E4%B8%80%E8%B7%B3/</url>
      <content type="html"><![CDATA[<div align="left"><br><img src="https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1548148807039&di=5be4543607497eec3f8625451f1a7c3f&imgtype=0&src=http%3A%2F%2Fpic2.52pk.com%2Ffiles%2F180105%2F5613886_160000_1_lit.jpg" width="300" height="180" style="float:right;"><br><br><br>　　<strong>技术探讨微信跳一跳自动实现（C++版）。</strong><br><br><br> </div>

<a id="more"></a>
<p>免责声明：请勿用于刷分，由此导致的分数被屏蔽、微信被封号后果自负。</p>
<p>近来微信跳一跳很火，手动玩的最高纪录才150分，而最常见的情况是10分以内就挂，由此萌生了是否能技术实现的想法。当然，对刷分并不感兴趣，只是想学习下各位大佬们的代码。知乎上这个话题已经炸开了锅，python版满天飞，这里是一个C++实现。（物理外挂简直丧心病狂(〝▼皿▼)）</p>
<p>适用范围：Android</p>
<h1 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h1><h2 id="借助adb"><a href="#借助adb" class="headerlink" title="借助adb"></a>借助adb</h2><p>电脑通过 adb 与Android手机互联。<br>为了捕捉屏幕信息，需要截图：<code>adb shell screencap -p 图片路径</code><br>借助<code>adb pull 图片路径</code>提交到本地。<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> ADBHelper::CapScreen()</span><br><span class="line">&#123;</span><br><span class="line">	system(<span class="string">"adb shell screencap -p /sdcard/JumpByJump.png"</span>);</span><br><span class="line">	system(<span class="string">"adb pull /sdcard/JumpByJump.png"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>模拟滑动事件<code>adb shell input swipe x1 y1 x2 y2 time</code>，即从点[x1,y1]滑动到点[x2,y2]，以及滑动时间（或者说是这儿的触摸时间）。这里我们不需要滑动到别处，因此可设置定点。<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> ADBHelper::jump(<span class="keyword">int</span> pressTime)</span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">char</span> cmd[<span class="number">256</span>] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line">	sprintf_s(cmd, <span class="string">"adb shell input swipe 320 410 320 410 %d"</span>, pressTime);</span><br><span class="line">	system(cmd);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h2 id="计算距离"><a href="#计算距离" class="headerlink" title="计算距离"></a>计算距离</h2><p>根据勾股定理，计算棋子目前所处位置到下一点（方块中心）的距离。所以就需要考虑如何获取当前位置和目标点坐标。这也是该技术探讨的<strong>核心所在</strong>。这里用到了OpenCV库来识别位置。（当初OpenCV、OpenGL傻傻分不清）</p>
<h3 id="最傻瓜"><a href="#最傻瓜" class="headerlink" title="最傻瓜"></a>最傻瓜</h3><p>手动点击棋子位置和目标位置，获取坐标。</p>
<p>优点：思路简单，准确度还可以。<br>缺点：操作麻烦，需手动跟进目标，自动化程度低。</p>
<h3 id="稍改进"><a href="#稍改进" class="headerlink" title="稍改进"></a>稍改进</h3><p>自动获取棋子位置，利用棋子颜色和方块较大的色差来做文章是很多帖子的思路。<br>然后手动点击目标位置。</p>
<p>较上述方案点击次数减少一半，但依然麻烦。</p>
<h3 id="比较好"><a href="#比较好" class="headerlink" title="比较好"></a>比较好</h3><p>利用图像处理知识，自动获取两点坐标。<br>如果想自动获取坐标，可以看到，立方体的性状是正方体和圆柱居多，立方体只需记录最上方和最右方的点的位置，取最上方的横坐标和最右方的纵坐标即得中心点坐标。<br>其它很多算法下方链接已附。</p>
<h3 id="AI"><a href="#AI" class="headerlink" title="AI"></a>AI</h3><p>神经网络截取样本进行训练，然后让其自动跳跳跳。</p>
<p>暂时只实现了前2种……</p>
<h2 id="设置参数"><a href="#设置参数" class="headerlink" title="设置参数"></a>设置参数</h2><p>可以发现触摸时间越长，跳动距离越远。最简单的假设就是线性关系。distance=time<em>k=distance</em>(1/k)，令1/k=parameter，即所需参数。我们经测试显示，parameter值在本程序和手机环境（分辨率1920×1080）中1.15比较合适。通过设置参数，计算出触摸时间。</p>
<h2 id="代码流程"><a href="#代码流程" class="headerlink" title="代码流程"></a>代码流程</h2><p>代码主体建立在参考里的jump1jump项目（借用了adb、cv库和相关的dll），进行了一些修改。</p>
<p>入口<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span>* argv[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	JumpByJump jumper;</span><br><span class="line">	jumper.CarryOut();</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>JumpByJump是主要的处理类，定义如下：<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">JumpByJump</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">	JumpByJump();</span><br><span class="line">	~JumpByJump();</span><br><span class="line"></span><br><span class="line">	<span class="keyword">double</span> m_parameter;</span><br><span class="line">	<span class="function"><span class="keyword">void</span> <span class="title">CarryOut</span><span class="params">()</span></span>;<span class="comment">//执行操作</span></span><br><span class="line">	<span class="function"><span class="keyword">void</span> <span class="title">ReadImage</span><span class="params">()</span></span>;<span class="comment">//读取截图</span></span><br><span class="line">	<span class="function">CvPoint	<span class="title">LocateChess</span><span class="params">()</span></span>;<span class="comment">//棋子定位</span></span><br><span class="line">	<span class="function"><span class="keyword">void</span> <span class="title">ShowScreen</span><span class="params">()</span></span>;<span class="comment">//刷新屏幕</span></span><br><span class="line">	<span class="keyword">double</span> m_targetPosX;</span><br><span class="line">	<span class="keyword">double</span> m_targetPosY;</span><br><span class="line">	<span class="keyword">double</span> m_sourcePosX;</span><br><span class="line">	<span class="keyword">double</span> m_sourcePosY;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">	IplImage*	m_image;</span><br><span class="line">	IplImage*	m_imgChessModel;</span><br><span class="line">	IplImage*	m_matchResult;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></p>
<p>第一次鼠标点击回调函数，获取棋子坐标-&gt;第一次鼠标点击回调函数，获取目标点坐标-&gt;计算两点距离-&gt;调用adb模拟触摸跳跃-&gt;等待截图-&gt;捕捉屏幕-&gt;读取截图-&gt;显示在电脑屏幕上<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">onClick</span><span class="params">(<span class="keyword">int</span> event, <span class="keyword">int</span> x, <span class="keyword">int</span> y, <span class="keyword">int</span> flags, <span class="keyword">void</span>* param)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">if</span> (event != CV_EVENT_LBUTTONUP)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">return</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	JumpByJump* jumper = (JumpByJump*)param;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">if</span> (m_iCount % <span class="number">2</span> == <span class="number">0</span>)</span><br><span class="line">	&#123;</span><br><span class="line"></span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt; <span class="string">"棋子坐标："</span> &lt;&lt; <span class="string">"("</span> &lt;&lt; x &lt;&lt; <span class="string">","</span> &lt;&lt; y &lt;&lt; <span class="string">")"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">		jumper-&gt;m_sourcePosX = x;</span><br><span class="line">		jumper-&gt;m_sourcePosY = y;</span><br><span class="line">		m_iCount++;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt; <span class="string">"目标点坐标："</span> &lt;&lt; <span class="string">"("</span> &lt;&lt; x &lt;&lt; <span class="string">","</span> &lt;&lt; y &lt;&lt; <span class="string">")"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">		jumper-&gt;m_targetPosX = x;</span><br><span class="line">		jumper-&gt;m_targetPosY = y;</span><br><span class="line">		<span class="comment">// 	CvPoint chessLoc = jumper-&gt;LocateChess();</span></span><br><span class="line">		<span class="keyword">double</span> distance = <span class="built_in">sqrt</span>(powf(jumper-&gt;m_targetPosX - jumper-&gt;m_sourcePosX, <span class="number">2</span>) + powf(jumper-&gt;m_targetPosY - jumper-&gt;m_sourcePosY, <span class="number">2</span>));</span><br><span class="line">		ADBHelper::jump(distance * m_parameter);</span><br><span class="line">		Sleep(<span class="number">1000</span>);<span class="comment">//等待截图</span></span><br><span class="line">		ADBHelper::CapScreen();</span><br><span class="line">		jumper-&gt;ReadImage();</span><br><span class="line">		jumper-&gt;ShowScreen();</span><br><span class="line">		m_iCount++;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>执行函数:捕捉屏幕-&gt;读取截图-&gt;获取棋子坐标-&gt;电脑显示模拟画面-&gt;刷新画面<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> JumpByJump::CarryOut()</span><br><span class="line">&#123;</span><br><span class="line">	ADBHelper::CapScreen();</span><br><span class="line">	ReadImage();</span><br><span class="line">	UpdateScreen();</span><br><span class="line">	cvWaitKey(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>cvWaitKey()函数的功能是不断刷新图像，频率时间为delay，单位为ms。</p>
<p>定位两点位置是核心关键。（手动设置两点则无需该函数）<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">CvPoint JumpByJump::LocateChess()</span><br><span class="line">&#123;</span><br><span class="line">	cvMatchTemplate(m_image, m_imgChessModel, m_matchResult, CV_TM_SQDIFF);</span><br><span class="line">	<span class="keyword">double</span> min_val = <span class="number">0</span>, max_val = <span class="number">0</span>;</span><br><span class="line">	CvPoint min_loc, max_loc, chessPt;</span><br><span class="line">	cvMinMaxLoc(m_matchResult, &amp;min_val, &amp;max_val, &amp;min_loc, &amp;max_loc);</span><br><span class="line">	cvRectangle(m_image, min_loc, cvPoint(min_loc.x + m_imgChessModel-&gt;width, min_loc.y + m_imgChessModel-&gt;height), cvScalar(<span class="number">0</span>, <span class="number">0</span>, <span class="number">255</span>), <span class="number">2</span>);</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">"棋子当前坐标："</span> &lt;&lt; <span class="string">"("</span> &lt;&lt; min_loc.x &lt;&lt; <span class="string">","</span> &lt;&lt; min_loc.y&lt;&lt;<span class="string">")"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">	chessPt = cvPoint(min_loc.x + m_imgChessModel-&gt;width / <span class="number">2</span>, min_loc.y + m_imgChessModel-&gt;height);</span><br><span class="line">	<span class="keyword">return</span> chessPt;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p><a href="http://blog.csdn.net/pinbodexiaozhu/article/details/45314725" target="_blank" rel="noopener">opencv 模板匹配(cvMatchTemplate)</a><br>模板匹配是通过在输入图像上滑动模板图像块对实际的图像块和输入图像进行匹配，并且可以利用函数cvMinMaxLoc()找到最佳匹配的位置。</p>
<h1 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h1><p>手动2点版<br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20180114233902221?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="控制台" title="">
                </div>
                <div class="image-caption">控制台</div>
            </figure><br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20180114233931154?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="成绩" title="">
                </div>
                <div class="image-caption">成绩</div>
            </figure></p>
<p>（最后点的时候手滑了…正常几百上千应该可以的）</p>
<h1 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h1><p>所有工程文件和代码可在此处下载：<a href="https://github.com/hubojing/JumpByJump" target="_blank" rel="noopener">JumpByJump</a></p>
<h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p><a href="https://github.com/mishang-aiofm/jump1jump" target="_blank" rel="noopener">jump1jump</a><br><a href="https://zhuanlan.zhihu.com/p/32643870" target="_blank" rel="noopener">人人都能看懂的“跳一跳”平民算法</a></p>
<p>附知乎热帖：<a href="https://www.zhihu.com/question/264829281" target="_blank" rel="noopener">怎样实现微信小游戏跳一跳的外挂？</a></p>
]]></content>
      
        <categories>
            
            <category> 互联网 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> CPP </tag>
            
            <tag> OpenCV </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[神转折2017]]></title>
      <url>https://hubojing.github.io/2017/12/31/%E7%A5%9E%E8%BD%AC%E6%8A%982017/</url>
      <content type="html"><![CDATA[<div align="left"><br><img src="https://ss0.bdstatic.com/70cFuHSh_Q1YnxGkpoWK1HF6hhy/it/u=3657596153,515868233&fm=27&gp=0.jpg" width="300" height="180" style="float:right;"><br><br><br>　　<strong>原来人生的转折点不必精心安排，它会以一种不经意的形式降临，不假思索甚至有些任性。</strong><br><br><br> </div>

<a id="more"></a>
<p>　　年末的这几天，看着学妹也登上学校的最高领奖台，由衷地高兴，时间总归是不会辜负努力的人。但就是这几天，她私信我考研后的不知所措和对未来的迷茫，突然觉得每个人的经历是何等的相似，我们都在走前人走过的路。去年此时，一边迎来的是周围的飘飘然的称赞和掌声，一边迎来的是无尽的未知和沉甸甸的思索。还记得自己在留下纪念照片时只附上了几个字：道阻且长。<br>　　人生总有几个关键时间点让我铭记，2017将是其中之一。<br>　　按照时间顺序，做个简单的梳理吧。由于这儿是技术博客，我尽量围绕技术相关的事情叙述。<br>　　这一年，我考研失败了。我曾经以为自己如果失败了，会非常矫情地大哭一场。然而事实是出奇地平静，仿佛只是微风吹皱了水面起了一点儿涟漪。然后人生就开始出现我从没预想到的变化……<br>　　作为一个理工科学生，自始至终我都将通信视作高端、复杂的代表，甚至有人把通信当信仰（这真是非常热爱了）。在大学四年里，我一直以为自己会按部就班的学习然后工作成为一名通信工程师……虽然在找工作以前，我从来没去真正了解过通信工程师的职责所在，我甚至不知道自己是否真正喜欢这一行，现在想来，真是too young too naive。直到考研结束后去就业市场逛了一逛，投了一波简历，参加了一些单位的面试。我不知道自己那时是否清楚了喜欢哪一行，但我明确知道了自己不喜欢哪些工作。印象最深的莫过于去某家事业单位应聘通信相关的工作，薪水颇高，起初听起来让人十分心动，父母也很有意愿。但毕竟是要把自己卖了，我怎么也得了解一下行情不是。查找了很多这方面的帖子，阅读了很多通信人的生涯。我突然发现这种工作和我心中的通信不太一样，我无法选择去过那种年纪轻轻就混吃等死的养老生活，没有追求，没有动力，没有发展，也不喜欢去深山老林实地勘测画图或者是夜半三更去蹲机房，感觉心中的通信神话一下子就跌入了深渊，这从不是我想要的生活。甚至因为自己不想去那家事业单位，前前后后和父母争辩过多次，最终慢慢让他们感受到了，我是认真的，他们也尊重我的想法。那段时间渐渐开始反复询问自己，到底喜欢什么。然后……画风就变了，简历求职意向再也看不到通信相关，取而代之是各种程序猿的工作。实事求是的说，一方面是IT业正当红，另一方面也是更重要的，我突然想起当年自己报志愿时第一志愿就是计算机专业，是临到最后两天，发现通信录取分数高于计算机专业感觉应该更好些，而当时以为通信就是计算机（所以论事先调研不妄自推测的重要性）而入了通信坑。四年里，曾有过对所学课程的质疑，但我一直将这种和兴趣有所偏离等价于没有理解知识本身的精髓。我还记得，其实当听到一种观点，通信工程约等于硬件，计算机专业约等于软件时，我就已经发现自己可能走错了，但正因有考研这个缓冲剂可以推迟这些考虑，让我心安理得地度过了这四年。<br>　　但我并不后悔和通信结缘的这四年，让我感觉自己反而是赚了，毕竟通信无处不在，而以后也能说一句，通信的那些我也是玩过的哟（此处是一个傲娇的表情）。通信将会一直是我心中高级和神圣的代名词。由于有通信工程的底子，我发现转入计算机真的不算太难。很多组成原理的知识，其实在通信工程里以微机原理甚至通信原理的形式出现了，而计算机网络、数据结构、数据库这些也都学过。而C语言的编程基础，总归还是有一些的。计算机三级当初自学的一些知识也很有用。其它的诸如matlab、Linux等课程的学习反而能增益自身。做一个了解硬件的软件工程师，也很酷。<br>　　六月，穿上学士服，我毕业了。机缘巧合，我来到现在的公司。</p>
<hr>
<p>　　工作带给我的震撼，从四月实习开始。<br>　　由于毕竟非科班出身，那时对开发的认识还非常浅薄。之前因为兴趣建立了这个博客，学习html、css、js，接触github，听说找工作最火的是java就跟风去学java，感觉app做出来成就感立显就把毕设定为app设计，可是怎么也想不到，最后竟然会去做C++开发，并且打算走下去。这真是从来没有出现在之前的人生规划里。有时候自己都要感谢自己找工作时任性了一把，完全不去想什么规划什么未来什么大公司什么稳定，只是选择一个有挑战、真正符合兴趣、能感到快乐的工作而已（好了我知道这其实也很难）。可能有时候不是在计划内才踏实，顺其自然佛系一点，也会有出其不意的惊喜。四月份实习时，从C++基础开始，当时刚接触MFC，我还去搜了一下这是个什么东东，后来网上一片人说这是个过时玩意儿，我当时很不解，那干嘛还学？学校图书馆甚至几乎借不到MFC字样的书（后来才知道，原来这属于VC范畴……）只有后来工作了一段时间，才慢慢开始体会其蕴含的思想，那么多公司至今还使用它不是没有道理的。<br>　　很巧也很幸运，从面试到实习到入组，有一个人见证我的成长，就是我的老大。老大是我的上级，更是我的师父。面试时，他问我很多我的项目上技术的细节问题（很多是通信方面的），我觉得他很厉害。实习期时，啥都不懂的我觉得所有的问题都问不倒他，很厉害。入组后，在编码设计时犯迷糊他的指导总是一针见血，让我少走很多弯路，很厉害。所以他这么厉害当初怎么会愿意选择我……现在想来，对于那时一个没什么C++基础的人，能找到一份C++开发的工作，何其幸哉。<br>　　还有一位同事，相识于面试，一起经过实习，一起进入同一个部门，共同走过试用期。在刚入公司很懵懂的时候，有一个人始终和你是同一战线，也是很幸运的事情。那段时间，两个人总是一起分享实习试用期间各种心情，共同讨论编程的问题，甚至吃饭的时候我们还会讨论当时要做的一个大作业的代码问题。虽然后来由于对自身规划不同，人各有志，她不愿意继续程序媛的生活，选择了离职，但是当初她先面试后跑回来告诉我们面试官问的很细不要招架不住的贴心、中午下班后还停留在工位上讨论技术问题、微信上吐槽分享心情的时光总是非常令人想念。<br>　　更加细节的技术总结写在了公司的工作总结里，这儿就不提了。<br>　　这是我的生命中的第一份工作，6个月以来，经历了第一次加班，第一次绩效奖励的惊喜，第一次绩效扣分的失落，第一份需求的完成，第一份文件的评审，第一次与这么多比我大的人一起合作。<br>　　我感到快乐，这就是我工作的理由。虽然工资不多，但我每天都在写代码的过程中获得成就感和点滴能力提升的快感（虽然有时也会因为缺陷改不动而焦虑失落），让我感觉自己写出来的东西是有价值的。公司里连董事长都坚持写代码，和员工讨论技术问题，我很佩服。同事们也都很关照包容我，让我快乐地做一个公司年龄最小的程序媛哈哈（趁着新一波的应届生还没来临之前赶紧体会）。所以我竟然会时不时冒出想加班的念头（随后怀疑自己怕是傻了吧）。<br>　　再谈C++，其实我觉得自己可能还没什么资格谈论它。它可能确实很难，但这样好像更容易激发我的好胜心。慢慢接触越多，C++的魅力就越能体现，它原来可以做那么多的事情。总有人问我，当程序员不累吗？呐，做自己热爱的事情怎么会感觉累？就像我现在写这篇文章都不想去睡觉一样。<br>　　工作以前，我觉得工作了的人和学生的生活是天壤之别，简直没有共同语言。当自己也成为一个社会人时，才感觉其实社会也不是那么可怕，而自己的生活虽说有了新变化，但本质里还是当初那个愿意追求所爱的青年，只是可能更加成熟理智些罢了。就像我写在云村里的一条动态一样：“有时会庆幸考研失败，没有一条路到黑，让我足够冷静下来，认真去想清楚，我到底喜欢的是什么，可以无悔地热爱一生。拼搏确实不该盲目，否则只是肤浅地让自己感动，这大概是17于我的意义吧。想来这一年的跌宕起伏，不由嘴角上扬。原来人生的转折点不必精心安排，它会以一种不经意的形式降临，不假思索甚至有些任性。”我才发现，我喜欢的从来不是一劳永逸的安稳，而是未知带来的无尽可能性。<br>　　唯一的不悦来自自身，深感编程能力的不足与工程和业务能力的匮乏。内心十分渴望成为一名合格的程序员，然后真正配得上软件工程师的“工程师”三个字。所以，辞旧迎新之际，希望2018实现一个具体的要求：每日看足1小时技术类图书，以及<strong>不要熬夜</strong>。<br>　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　写于2017年12月31日凌晨2点</p>
]]></content>
      
        <categories>
            
            <category> 杂谈 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 杂谈 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[知识杂记]]></title>
      <url>https://hubojing.github.io/2017/11/25/%E7%9F%A5%E8%AF%86%E6%9D%82%E8%AE%B0/</url>
      <content type="html"><![CDATA[<div align="left"><br><img src="https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1550075271490&di=b227316951c29ff1a653a0290adac6b1&imgtype=0&src=http%3A%2F%2Fhiphotos.baidu.com%2Fdoc%2Fpic%2Fitem%2Fb17eca8065380cd7e40f7c6ba844ad3459828127.jpg" width="300" height="180" style="float:right;"><br><br><br>　　<strong>每个月的流量大多贡献给查资料了，学习果然是件烧钱的事情啊（正经脸）</strong><br><br><br> </div>

<a id="more"></a>
<p>清空手机谷歌浏览器缓存的二十几个网页，也做一个简单的知识回顾。</p>
<h1 id="使用CImage加载PNG的一般方法"><a href="#使用CImage加载PNG的一般方法" class="headerlink" title="使用CImage加载PNG的一般方法"></a>使用CImage加载PNG的一般方法</h1><ol>
<li>打开stdafx.h添加<code>#include&lt;atlimage.h&gt;</code>；</li>
<li>定义一个CImage类对象，调用CImage::Load方法装载一个外部图像文件；</li>
<li>调用CImage::Draw方法绘制图像。</li>
</ol>
<p>eg.(待测试)<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">CRect rc;</span><br><span class="line">m_picCtrl.GetClientRect(&amp;rc);</span><br><span class="line">SetWindowPos(this, 0, 0, 320, 80, SWP_SHOWWINDOW);</span><br><span class="line">CString strTemp;</span><br><span class="line">strTemp.Format(_T(&quot;%d%d&quot;), rc.right, rc.bottom);</span><br><span class="line">CImage image;</span><br><span class="line">image.Load(_T(&quot;D:\\1.png&quot;));</span><br><span class="line">CDC* pDc = m_picCtrl.GetWindowDC();//获取设备句柄</span><br><span class="line">image.Draw(pDc-&gt;m_hDC, rc);</span><br><span class="line">UpdateWindow();</span><br></pre></td></tr></table></figure></p>
<h1 id="MFC-tab控件"><a href="#MFC-tab控件" class="headerlink" title="MFC tab控件"></a>MFC tab控件</h1><ol>
<li>创建一个对话框，放tab控件，将控件添加变量m_tabCtrl</li>
<li>再创建两个对话框，修改属性Border:none，Style:Child</li>
<li><p>在tabDlg中添加两个对话框类变量</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">CDialog1 m_dlg1;</span><br><span class="line">CDialog2 m_dlg2;</span><br></pre></td></tr></table></figure>
</li>
<li><p>在tabDlg的OnInitDialog()函数中添加：</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">CRect rect;</span><br><span class="line">m_tabCtrl.GetClientRect(&amp;rect);</span><br><span class="line">rect.top+=<span class="number">20</span>;</span><br><span class="line">rect.bottom-=<span class="number">1</span>;</span><br><span class="line">rect.left+<span class="number">1</span>=<span class="number">1</span>;</span><br><span class="line">rect.right-=<span class="number">2</span>;</span><br><span class="line"></span><br><span class="line">m_tabCtrl.InsertItem(<span class="number">0</span>,<span class="string">"第一页"</span>);</span><br><span class="line">m_tabCtrl.InsertItem(<span class="number">1</span>,<span class="string">"第二页"</span>);</span><br><span class="line"></span><br><span class="line">m_dlg1.Create(IDD_DIALOG1,&amp;m_tabCtrl);<span class="comment">//或者Create(IDD_DIALOG1,GetDlgItem(IDC_TAB));</span></span><br><span class="line">m_dlg2.Create(IDD_DIALOG2,&amp;m_tabCtrl);</span><br><span class="line"></span><br><span class="line">m_dlg1.ShowWindow(&amp;rect);</span><br><span class="line">m_dlg2.ShowWindow(&amp;rect);</span><br><span class="line"></span><br><span class="line">m_dlg1.ShowWindow(<span class="literal">true</span>);</span><br><span class="line">m_dlg2.ShowWindow(<span class="literal">false</span>);</span><br></pre></td></tr></table></figure>
</li>
<li><p>在tabDlg中添加TCN_SELECHANGE消息</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> CtabDlg::OnTcnSelchangeTab1(NMHDR *PNMHDR, LRSULT *pResult)</span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">switch</span>(m_tabCtrl.GetCurSel())</span><br><span class="line">	&#123;</span><br><span class="line">	<span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">	m_dlg1.ShowWindow(<span class="literal">true</span>);</span><br><span class="line">	m_dlg2.SWP_SHOWWINDOW(<span class="literal">false</span>);</span><br><span class="line">	<span class="keyword">break</span>;</span><br><span class="line">	case1:</span><br><span class="line">	m_dlg1.ShowWindow(<span class="literal">false</span>);</span><br><span class="line">	m_dlg2.ShowWindow(<span class="literal">true</span>);</span><br><span class="line">	<span class="keyword">break</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	*pResult = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ol>
<h1 id="安全函数"><a href="#安全函数" class="headerlink" title="安全函数"></a>安全函数</h1><p>strtok_s<br>wcstok_s</p>
<h1 id="在MFC对话框中显示html网页"><a href="#在MFC对话框中显示html网页" class="headerlink" title="在MFC对话框中显示html网页"></a>在MFC对话框中显示html网页</h1><p>创建对话框时勾选html对话框，添加控件变量m_html;<br>然后在OnInitDialog()中添加<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">m_html.Navigate(<span class="string">"www.baidu.com"</span>);</span><br></pre></td></tr></table></figure></p>
<h1 id="CXImage的使用"><a href="#CXImage的使用" class="headerlink" title="CXImage的使用"></a>CXImage的使用</h1><p>另成一篇。</p>
<h1 id="限制只启动一个exe"><a href="#限制只启动一个exe" class="headerlink" title="限制只启动一个exe"></a>限制只启动一个exe</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(FindWindow(<span class="literal">NULL</span>,<span class="string">"caption"</span>)！= <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">	MessageBox(<span class="string">"程序已运行！"</span>);</span><br><span class="line">	<span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="PCE-js"><a href="#PCE-js" class="headerlink" title="PCE.js"></a>PCE.js</h1><p><a href="https://jamesfriend.com.au/pce-js/mobile/" target="_blank" rel="noopener">https://jamesfriend.com.au/pce-js/mobile/</a></p>
<h1 id="MFC复选框"><a href="#MFC复选框" class="headerlink" title="MFC复选框"></a>MFC复选框</h1><p>法一：<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">CButton* pBtn=(CButton*)GetDlgItem(IDC_CHECK1);</span><br><span class="line"><span class="keyword">int</span> state = pBtn-&gt;GetCheck();</span><br></pre></td></tr></table></figure></p>
<p>state==0 复选框没有被选中<br>state==1 复选框被选中<br>state==2 不确定（只有button有BS_3STATE或BS_AUTO3STATE style时才可用）<br>设置状态：<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">CButton* pBtn=(CButton*)GetDlgItem(IDC_CHECK1);</span><br><span class="line"><span class="keyword">int</span> state = pBtn-&gt;GetCheck(<span class="number">1</span>);</span><br></pre></td></tr></table></figure></p>
<p>法二：<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(BST_CHECKED == IsDlgButtonChecked(IDC_CHECK1))</span><br><span class="line">&#123;</span><br><span class="line">	<span class="comment">//对应操作</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>使用BS_AUTOCHECKBOX、BS_AUTORADIOBUTTON、BS_AUTO3STATE、BS_CHECKBOX、BS_RADIOBUTTON或BS_3STATE样式创建的按钮的返回值可以是如下值之一：<br>BST_CHECKED  按钮被选中<br>BST_UNCHECKED 按钮未被选中<br>BST_INDETERMINATE 不确定，按钮灰显（只有button有BS_3STATE或BS_AUTO3STATE style时才可用）</p>
<p>法三：<br>为控件添加BOOL变量m_delete;<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> CTestDlg::DoDataExchange(CDataExchange *pDX)</span><br><span class="line">&#123;</span><br><span class="line">	CTestDlg::DoDataExchange(pDX);</span><br><span class="line">	DDX_Check(pDX,IDC_CHECK1,m_delete);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h1 id="关于“不允许指针指向不完整的类类型”问题分析"><a href="#关于“不允许指针指向不完整的类类型”问题分析" class="headerlink" title="关于“不允许指针指向不完整的类类型”问题分析"></a>关于“不允许指针指向不完整的类类型”问题分析</h1><p>神贴必看，自从看过后，再也没犯过这个错，我不会说脑海里都是作者满满的嘲讽笑声的<br><a href="http://m.blog.csdn.net/luna84/article/details/50380186" target="_blank" rel="noopener">http://m.blog.csdn.net/luna84/article/details/50380186</a></p>
<h1 id="树节点遍历"><a href="#树节点遍历" class="headerlink" title="树节点遍历"></a>树节点遍历</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">Traverse(m_tree, hChild)</span><br><span class="line">&#123;</span><br><span class="line">	HTREEITEM hChild = m_tree.GetChildren(hItem);</span><br><span class="line">	<span class="keyword">while</span>(hChild)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">bool</span> temp=Traverse(m_tree,hChild);</span><br><span class="line">		<span class="keyword">if</span>(temp==<span class="literal">true</span>)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		hChild=m_tree.GetNextSiblingItem(hChild);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="遍历Vector的几种方法"><a href="#遍历Vector的几种方法" class="headerlink" title="遍历Vector的几种方法"></a>遍历Vector的几种方法</h1><p>C++11<br>法一：<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="keyword">size_t</span> i=<span class="number">0</span>;i&lt;vec.size();++i)</span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">int</span>	iTemp = vec[i];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>法二：<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="keyword">auto</span> it = vec.begin();it!=vec.end();++it)</span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">int</span> iTemp = *it;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>法三：<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i:vec)</span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">int</span> iTemp = i;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>法四：<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">for_each(vec.begin(),vec.end(),[](<span class="keyword">int</span> i)&#123;</span><br><span class="line"><span class="keyword">int</span> iTemp = i;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></p>
<h1 id="表达式的副作用"><a href="#表达式的副作用" class="headerlink" title="表达式的副作用"></a>表达式的副作用</h1><p><a href="http://www.cnblogs.com/shiguangshuo/p/5236962.html" target="_blank" rel="noopener">http://www.cnblogs.com/shiguangshuo/p/5236962.html</a></p>
<h1 id="理解递归"><a href="#理解递归" class="headerlink" title="理解递归"></a>理解递归</h1><p>另成一篇。</p>
<h1 id="屏蔽回车和ESE"><a href="#屏蔽回车和ESE" class="headerlink" title="屏蔽回车和ESE"></a>屏蔽回车和ESE</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">BOOL CTestDlg::PreTranslateMessage(MSG* pMsg)</span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">if</span>(pMsg-&gt;message==WM_KEYDOWN)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span>(pMsg-&gt;wParam==VK_RETURN||pMsg-&gt;wParam==VK_ESCAPE)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> CDialogEx::PreTranslateMessage(pMsg);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="MFC查找特定后缀文件"><a href="#MFC查找特定后缀文件" class="headerlink" title="MFC查找特定后缀文件"></a>MFC查找特定后缀文件</h1><p>法一：<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">CFileFind findfile;</span><br><span class="line">CString strPath;</span><br><span class="line">CString strName;</span><br><span class="line">CString strFilePath;</span><br><span class="line">BOOL bRet=findfile.FindFile(strPath+_T(<span class="string">"*.txt"</span>));<span class="comment">//以.txt为例</span></span><br><span class="line"><span class="keyword">if</span>(!bRet)</span><br><span class="line">&#123;</span><br><span class="line">MessageBox(_T(<span class="string">"无此文件！"</span>));</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span>(bRet)</span><br><span class="line">&#123;</span><br><span class="line">bRet=findfile.FindNextFile();</span><br><span class="line">strName=findfile.GetFileTitle();</span><br><span class="line">strFilePath=findfile.GetFilePath();</span><br><span class="line"><span class="keyword">if</span>(<span class="comment">//操作)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//所需操作;</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>法二：<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">vector</span>&lt;CString&gt; fileList;</span><br><span class="line">WIN32_FIND_DATA wfd;</span><br><span class="line">CString sPath=_T(<span class="string">"*.txt"</span>);</span><br><span class="line">HANDLE hFile=FindFirstFile(sPath.GetBuffer(),&amp;wfd);</span><br><span class="line"><span class="keyword">if</span>(INVALID_HANDLE_VALUE==hFile)</span><br><span class="line">&#123;</span><br><span class="line">TRACE(_T(<span class="string">"不合法！\n"</span>));</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;<span class="keyword">do</span></span><br><span class="line">&#123;</span><br><span class="line">fileList.push_back(wfd.cFileName);</span><br><span class="line">TRACE(<span class="string">"%s\n"</span>,wfd.cFileName);</span><br><span class="line">&#125;<span class="keyword">while</span>(FindNextFile(hFile,&amp;wfd));</span><br></pre></td></tr></table></figure></p>
<p>使用WIN32_FIND_DATA好像存在内存释放的问题。</p>
<h1 id="为CDHtmlDialog添加滚动条"><a href="#为CDHtmlDialog添加滚动条" class="headerlink" title="为CDHtmlDialog添加滚动条"></a>为CDHtmlDialog添加滚动条</h1><p>初始化中添加以下代码即可。<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SetHostFlags(DOCHOSTUIFLAG_NO3DBORDER|DOCHOSTUIFLAG_DIALOG);</span><br></pre></td></tr></table></figure></p>
<p>Notepad++ 没有自动补全敲代码好累…</p>
]]></content>
      
        <categories>
            
            <category> 互联网 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> CPP </tag>
            
            <tag> MFC </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[PC评测]]></title>
      <url>https://hubojing.github.io/2017/11/21/PC%E8%AF%84%E6%B5%8B/</url>
      <content type="html"><![CDATA[<div align="left"><br><img src="http://img.blog.csdn.net/20171121220501999?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" width="300" height="180" style="float:right;"><br> 　　<br>　　<br>传统的贴图集。　　<br>　　<br>　　<br> </div>

<a id="more"></a>
<h1 id="配置详情"><a href="#配置详情" class="headerlink" title="配置详情"></a>配置详情</h1><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20171213203840217?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="配置" title="">
                </div>
                <div class="image-caption">配置</div>
            </figure>
<p>其中显示器、光驱用的旧的。其它都是最近的新货，价钱请看<a href="https://hubojing.github.io/2017/09/17/%E7%BB%84%E8%A3%85PC/">组装PC</a>。<br>（夸一句冠捷显示器和漫步者音响质量真的很好）</p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20171121220501999?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="集合" title="">
                </div>
                <div class="image-caption">集合</div>
            </figure>
<p>最便宜的GTX1060 6G上图（迷之塑料感）<br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20171213204736295?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="显卡" title="">
                </div>
                <div class="image-caption">显卡</div>
            </figure></p>
<p>显卡的金手指正反各有一根短一截，网上说是为了热插拔防止电涌情况发生。</p>
<h1 id="跑分"><a href="#跑分" class="headerlink" title="跑分"></a>跑分</h1><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20171213204237641?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="跑分" title="">
                </div>
                <div class="image-caption">跑分</div>
            </figure>
<p>娱乐大师跑分系列。很满足了……<br>软件优化还是有效的，华硕主板自带软件可以自动超频，很方便，1600x 3.6主频自动超频到3.9，其它优化项调一调，跑分就升了六千分……</p>
<h1 id="CPU"><a href="#CPU" class="headerlink" title="CPU"></a>CPU</h1><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20171121212434399?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="CPU-Z" title="">
                </div>
                <div class="image-caption">CPU-Z</div>
            </figure>
<p>（目前是3.89，别超了再伤了CPU，怎么得都是性能过剩啊哈哈哈）</p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20171121213654396?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="评测" title="">
                </div>
                <div class="image-caption">评测</div>
            </figure>
<p>和i7-6700k对比，明显单处理器性能比不上i7-6700k，多线程完爆i7-6700k。</p>
<p>经历了闪龙-&gt;速龙-&gt;羿龙-&gt;锐龙…一个穷字贯穿始末</p>
<h1 id="主板"><a href="#主板" class="headerlink" title="主板"></a>主板</h1><p>本来准备买华硕小板的，觉得性价比高，大板多出来的功能一般也用不到，然而京东价格战玩的很妙，守了几个月的小板套餐不降反升，价格竟然超过了大板……那我索性买大板得了。<br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20171121220740149?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="主板" title="">
                </div>
                <div class="image-caption">主板</div>
            </figure></p>
<h1 id="内存条"><a href="#内存条" class="headerlink" title="内存条"></a>内存条</h1><p>宇瞻（Apacer） 黑豹玩家系列 DDR4 台式机内存 2400 8G 实测不翻车<br>对于内存条 只想说一个字 贵<br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20171121220911715?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="内存条" title="">
                </div>
                <div class="image-caption">内存条</div>
            </figure></p>
<h1 id="SSD"><a href="#SSD" class="headerlink" title="SSD"></a>SSD</h1><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20171121224045934?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="ssd" title="">
                </div>
                <div class="image-caption">ssd</div>
            </figure>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20171121224109864?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="ssd" title="">
                </div>
                <div class="image-caption">ssd</div>
            </figure>
<p>感觉很好了</p>
<h1 id="显卡"><a href="#显卡" class="headerlink" title="显卡"></a>显卡</h1><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20171213205532253?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="GPU-Z" title="">
                </div>
                <div class="image-caption">GPU-Z</div>
            </figure>
<h1 id="装机（一新一旧）"><a href="#装机（一新一旧）" class="headerlink" title="装机（一新一旧）"></a>装机（一新一旧）</h1><p>AMD类型的散热器真是极难操作，非常难为我这样的柔弱女子(<em>^▽^</em>)<br>记录一下：电源4+4pin CPU供电，20+4pin主板供电，6+2pin 独显供电。</p>
<p>新机：<br>主板检测卡00（无任何其它数字的跳转）<br>明明就是表示一切正常……<br>百度都说是CPU或主板的问题，吓得我再想该怎么退货了，直到突然点亮。</p>
<p>旧机：<br>主板检测卡68<br>这确实是CPU的问题。我拿速龙的CPU去试，偷了懒没加散热器，结果……几秒后CPU烫手不能碰，主板也跟着热了。CPU不知道烧了没哦。上羿龙还是68，我都不敢多连通几秒就断电源。后经检查，是CPU上的硅胶涂多了，硅胶一小部分连到了两个针脚，擦除就好。</p>
<p>主板检测卡E1<br>内存条的问题，最常见的就是金手指没擦干净。</p>
<h1 id="成品"><a href="#成品" class="headerlink" title="成品"></a>成品</h1><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20171213205052557?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="背部走线" title="">
                </div>
                <div class="image-caption">背部走线</div>
            </figure>
<p>换成了背部走线，还是没什么美感。。。</p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20171213205250347?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="局部" title="">
                </div>
                <div class="image-caption">局部</div>
            </figure>
<p>（默默更换了电源的朝向。。。）</p>
<p>总结：满足了一个想要高配又没钱的青年人的装机愿望。。。</p>
]]></content>
      
        <categories>
            
            <category> 通信工程 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 硬件 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Hexo多机同步]]></title>
      <url>https://hubojing.github.io/2017/11/19/hexo%E5%A4%9A%E6%9C%BA%E5%90%8C%E6%AD%A5/</url>
      <content type="html"><![CDATA[<div align="left"><br><img src="https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1511116107294&di=a91ad5adc5431ecb1865be565f7b0e82&imgtype=0&src=http%3A%2F%2Fpic4.zhimg.com%2Fd4c1239e75c02e8482c22017a6c8d407_r.jpg" width="300" height="180" style="float:right;"><br>　　<br>　　　<br>　　<strong>Hexo多机同步简明教程。</strong><br>　　<br>　　<br> </div>

<a id="more"></a>
<h1 id="老方法-较笨拙（写于2017年）"><a href="#老方法-较笨拙（写于2017年）" class="headerlink" title="老方法-较笨拙（写于2017年）"></a>老方法-较笨拙（写于2017年）</h1><p>起因：由于装了新电脑，就想搬到新电脑上写博客，但同时要求旧电脑也能同步更新和撰写。<br>方法：主要是利用版本控制工具，将源文件上传到github，实现从github上同步repo更新。<br>一般来说，有两种较常用的方法，一是新建原有repo的分支，二是新建一个放源文件的repo。由于之前手动备份md文件到github时我已有一个单独的repo，故采取法二。</p>
<h2 id="hexo大致原理"><a href="#hexo大致原理" class="headerlink" title="hexo大致原理"></a>hexo大致原理</h2><p>用过hexo的人都会发现，本地hexo文件和github上的文件是不同的。本地hexo保存的是.md文件，github上保存的是生成的html文件。所以直接clone github上的项目是不可行的。根据上次的分析，我们已知，_config.yml，theme/，source/，scaffolds/，package.json，.gitignore，是关注的重点。</p>
<h2 id="新电脑hexo搭建工作"><a href="#新电脑hexo搭建工作" class="headerlink" title="新电脑hexo搭建工作"></a>新电脑hexo搭建工作</h2><ol>
<li>下载nodejs</li>
<li>下载git<br>(记录一下版本，很多bug都是因为版本的原因造成)<br>3.hexo五步法搭建hexo<br>（具体可见博文<a href="https://hubojing.github.io/2017/10/08/hexo%E6%90%AD%E5%BB%BA%E5%86%8D%E8%AE%B0%E5%BD%95/">hexo搭建再记录</a>，或hexo.io）</li>
</ol>
<p>至此，hexo环境完成。</p>
<h2 id="ssh秘钥生成和添加"><a href="#ssh秘钥生成和添加" class="headerlink" title="ssh秘钥生成和添加"></a>ssh秘钥生成和添加</h2><p>因为是新电脑，需要将新生成的ssh添加到github ssh key中才可以使用。<br>（具体可见博文<a href="https://hubojing.github.io/2019/09/11/Github+SSH%E5%B0%B1%E8%BF%99%E4%B9%88%E8%BF%9E/">SSH+Github就这么连</a>）</p>
<h2 id="拷贝数据文件"><a href="#拷贝数据文件" class="headerlink" title="拷贝数据文件"></a>拷贝数据文件</h2><p>从旧电脑上的blog文件夹中拷贝_config.yml，theme/，source/，scaffolds/，package.json，.gitignore。<br>其它不用，因为会在hexo g &amp;&amp; hexo d中产生。</p>
<h2 id="重装npm及插件"><a href="#重装npm及插件" class="headerlink" title="重装npm及插件"></a>重装npm及插件</h2><p>如果你安装的是最新版的git（2.15）和nodejs（V8.9.1），npm install将会自动安装好部署所需的插件。<br>否则就差什么补什么。<br>在这里容易出各种错采坑。</p>
<h2 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h2><p>和旧电脑一样的步骤部署即可。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo clean &amp;&amp; hexo g &amp;&amp; hexo d</span><br></pre></td></tr></table></figure></p>
<h2 id="同步刷新"><a href="#同步刷新" class="headerlink" title="同步刷新"></a>同步刷新</h2><p>一般在部署前会在本地预览无误后再提交。但每做一次就要重新hexo g生成相当麻烦。好在有一个很酷的插件可以及时更新页面：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-browsersync --save</span><br></pre></td></tr></table></figure></p>
<p>在localhost:4000就会同步更新你的本地修改啦。</p>
<h2 id="多机同步"><a href="#多机同步" class="headerlink" title="多机同步"></a>多机同步</h2><p>两台电脑不能总是把源文件拷来拷去的吧，又或者万一哪天数据丢失了怎么办？</p>
<p>于是我将hexo根目录下的source文件放到github上的source项目里同步更新，这样无论在哪台电脑上都可以下载最新的文件使用。</p>
<ol>
<li>进入source文件夹，右键git bash</li>
<li><code>git init</code>初始化本地仓库</li>
<li><code>git add .</code> 添加当前目录文件到暂存区域</li>
<li><code>git commit -m &quot;&lt;备注信息&gt;&quot;</code> 提交到本地仓库</li>
<li><code>git push -u origin master</code> 提交到远程仓库</li>
</ol>
<p>不过我最后一句命令出错，原因是找不到origin，大概是仓库指定不明确。我想到使用github desktop也许更方便，于是就用它将source仓库clone到本地hexo文件夹下，并且删除原有文件，放入现有源文件。最后commit和push。</p>
<p>至此，多机同步实现。</p>
<h2 id="失误操作"><a href="#失误操作" class="headerlink" title="失误操作"></a>失误操作</h2><p>github强制更新，原来的commit数600+没有了。连带着的小绿点也没了。现在的github展示页不好看了T_T</p>
<h1 id="新方法-较快捷（写于2019年）"><a href="#新方法-较快捷（写于2019年）" class="headerlink" title="新方法-较快捷（写于2019年）"></a>新方法-较快捷（写于2019年）</h1><p>因为Github私有仓库现在可以免费使用了，所以可以把整个hexo文件全部备份到Github上，而不是只备份文章。</p>
<h2 id="旧电脑需要做什么"><a href="#旧电脑需要做什么" class="headerlink" title="旧电脑需要做什么"></a>旧电脑需要做什么</h2><ul>
<li>将博客根目录全部push到Github<br>具体地，先在Github上新建仓库。<br>在博客根目录：<br><code>git init</code><br><code>git remote add origin http://xxxxxxxx(远程仓库地址)</code><br>添加文件<code>git add</code><br>提交到暂存区<code>git commit -m &quot;说明&quot;</code><br>推送到远程仓库<code>git push -u origin master</code>(以后只需<code>git push</code>)</li>
</ul>
<h2 id="新电脑需要做什么"><a href="#新电脑需要做什么" class="headerlink" title="新电脑需要做什么"></a>新电脑需要做什么</h2><ul>
<li>下载nodejs</li>
<li>下载Git</li>
<li>添加SSH到Github</li>
<li>安装Hexo</li>
<li>新建博客根目录</li>
<li><code>git init</code></li>
<li><code>git remote add origin http://xxxxxxxx(远程仓库地址)</code></li>
<li><code>git fetch --all</code></li>
<li><code>git reset --hard oridin/master</code></li>
<li>安装各种Hexo插件（页面同步刷新之类的）</li>
</ul>
<h2 id="每次发布博客后需同步"><a href="#每次发布博客后需同步" class="headerlink" title="每次发布博客后需同步"></a>每次发布博客后需同步</h2><ul>
<li><code>git pull</code></li>
<li><code>git add .</code></li>
<li><code>git commit -m &quot;说明&quot;</code></li>
<li><code>git push -u origin master</code>(以后只需<code>git push</code>)</li>
</ul>
<h2 id="目前存在的问题"><a href="#目前存在的问题" class="headerlink" title="目前存在的问题"></a>目前存在的问题</h2><p>2017年同步也出现了这个问题，就是强制更新的问题，会导致Git删除历史更新记录。如今这种方法依然存在这种问题。不过不影响写作，只是Github仓库的历史记录每次只会显示在最近一次机器上更新的全部历史记录，导致Github contributions的绿点丢失不少。<br>究其原因是根目录下两台机器的.deploy_git文件不同，但简单合并会报错。<a href="https://www.jianshu.com/p/a39fde673f7e" target="_blank" rel="noopener">Hexo git deployer 删除了提交历史记录该怎么整？</a>这篇文章也证实了我的想法。</p>
<p>所以在这次同步以前，我先截了图，纪念一下这2年的提交数……马上就从Github contributions消失了。<br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="https://github.com/hubojing/BlogImages/blob/master/Hexo多机同步——博客提交数.png?raw=true" alt="博客提交数" title="">
                </div>
                <div class="image-caption">博客提交数</div>
            </figure></p>
<h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p><a href="https://blog.csdn.net/dxxzst/article/details/76135750" target="_blank" rel="noopener">https://blog.csdn.net/dxxzst/article/details/76135750</a></p>
]]></content>
      
        <categories>
            
            <category> 互联网 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[栈]]></title>
      <url>https://hubojing.github.io/2017/11/14/%E6%A0%88/</url>
      <content type="html"><![CDATA[<div align="left"><br><img src="https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1548152135996&di=fa9f9286f44012ffd13c7d4612c72039&imgtype=0&src=http%3A%2F%2Fwww.nowamagic.net%2Flibrarys%2Fimages%2F201210%2F2012_10_08_01.jpg" width="300" height="180" style="float:right;"><br>　　　　<br>　　<br> 　　<strong>c++实现栈记录。</strong>　　　<br>　　<br>　　<br> </div>

<a id="more"></a>
<h1 id="基础版"><a href="#基础版" class="headerlink" title="基础版"></a>基础版</h1><h2 id="MyStack-h"><a href="#MyStack-h" class="headerlink" title="MyStack.h"></a>MyStack.h</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> MYSTACK_H</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MYSTACK_H</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyStack</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">	MyStack(<span class="keyword">int</span> size);	<span class="comment">//分配内存初始化栈空间，设定栈容量，栈顶</span></span><br><span class="line">	~MyStack();	<span class="comment">//回收栈空间内存</span></span><br><span class="line">	<span class="function"><span class="keyword">bool</span> <span class="title">stackEmpty</span><span class="params">()</span></span>;	<span class="comment">//判定栈是否为空，为空则返回true，非空返回false</span></span><br><span class="line">	<span class="function"><span class="keyword">bool</span> <span class="title">stackFull</span><span class="params">()</span></span>;	<span class="comment">//判定栈是否已满，为满返回true，不满返回false</span></span><br><span class="line">	<span class="function"><span class="keyword">void</span> <span class="title">clearStack</span><span class="params">()</span></span>;	<span class="comment">//清空栈</span></span><br><span class="line">	<span class="function"><span class="keyword">int</span> <span class="title">stackLength</span><span class="params">()</span></span>;	<span class="comment">//已有元素的个数</span></span><br><span class="line">	<span class="function"><span class="keyword">bool</span> <span class="title">push</span><span class="params">(<span class="keyword">char</span> elem)</span></span>;	<span class="comment">//元素入栈，栈顶上升</span></span><br><span class="line">	<span class="function"><span class="keyword">bool</span> <span class="title">pop</span><span class="params">(<span class="keyword">char</span> &amp;elem)</span></span>;	<span class="comment">//元素出栈，栈顶下降</span></span><br><span class="line">	<span class="function"><span class="keyword">void</span> <span class="title">stackTraverse</span><span class="params">(<span class="keyword">bool</span> isFromButtom)</span></span>;	<span class="comment">//遍历栈中所有元素</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">	<span class="keyword">char</span>* m_pBuffer;	<span class="comment">//栈空间指针</span></span><br><span class="line">	<span class="keyword">int</span> m_iSize;	<span class="comment">//栈容量</span></span><br><span class="line">	<span class="keyword">int</span> m_iTop;	<span class="comment">//栈顶，栈中元素个数</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br></pre></td></tr></table></figure>
<h2 id="MyStack-cpp"><a href="#MyStack-cpp" class="headerlink" title="MyStack.cpp"></a>MyStack.cpp</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"MyStack.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line">MyStack::MyStack(<span class="keyword">int</span> size)</span><br><span class="line">&#123;</span><br><span class="line">	m_iSize = size;</span><br><span class="line">	m_pBuffer = <span class="keyword">new</span> <span class="keyword">char</span>[size];</span><br><span class="line">	m_iTop = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">MyStack::~MyStack()</span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">delete</span>[]m_pBuffer;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">bool</span> MyStack::stackEmpty()</span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">if</span> (<span class="number">0</span> == m_iTop)<span class="comment">//if(m_iTop==0)</span></span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">bool</span> MyStack::stackFull()</span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">if</span> (m_iTop == m_iSize)<span class="comment">//&gt;=</span></span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> MyStack::clearStack()</span><br><span class="line">&#123;</span><br><span class="line">	m_iTop = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> MyStack::stackLength()</span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">return</span> m_iTop;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">bool</span> MyStack::push(<span class="keyword">char</span> elem)</span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">if</span> (stackFull())</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	m_pBuffer[m_iTop] = elem;</span><br><span class="line">	m_iTop++;<span class="comment">//指向空位置</span></span><br><span class="line">	<span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// char MyStack::pop()</span></span><br><span class="line"><span class="comment">// &#123;</span></span><br><span class="line"><span class="comment">// 	if (stackEmpty())</span></span><br><span class="line"><span class="comment">// 	&#123;</span></span><br><span class="line"><span class="comment">// 		throw 1;</span></span><br><span class="line"><span class="comment">// 	&#125;</span></span><br><span class="line"><span class="comment">// 	else</span></span><br><span class="line"><span class="comment">// 	&#123;</span></span><br><span class="line"><span class="comment">// 		m_iTop--;</span></span><br><span class="line"><span class="comment">// 		return m_pBuffer[m_iTop];</span></span><br><span class="line"><span class="comment">// 	&#125;</span></span><br><span class="line"><span class="comment">// &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">bool</span> MyStack::pop(<span class="keyword">char</span> &amp;elem)</span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">if</span> (stackEmpty())</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	m_iTop--;</span><br><span class="line">	elem = m_pBuffer[m_iTop];</span><br><span class="line">	<span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> MyStack::stackTraverse(<span class="keyword">bool</span> isFromButtom)</span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">if</span> (isFromButtom)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; m_iTop; i++)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="built_in">cout</span> &lt;&lt; m_pBuffer[i] &lt;&lt; <span class="string">","</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> i = m_iTop - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="built_in">cout</span> &lt;&lt; m_pBuffer[i] &lt;&lt; <span class="string">","</span>;</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="demo-cpp"><a href="#demo-cpp" class="headerlink" title="demo.cpp"></a>demo.cpp</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"stdlib.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"MyStack.h"</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*************************************************************************/</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">	栈类</span></span><br><span class="line"><span class="comment">	要求：</span></span><br><span class="line"><span class="comment">	MyStack(int size);	//分配内存初始化栈空间，设定栈容量，栈顶</span></span><br><span class="line"><span class="comment">	~MyStack();	//回收栈空间内存</span></span><br><span class="line"><span class="comment">	bool stackEmpty();	//判定栈是否为空，为空则返回true，非空返回false</span></span><br><span class="line"><span class="comment">	bool stackFull();	//判定栈是否已满，为满返回true，不满返回false</span></span><br><span class="line"><span class="comment">	void clearStack();	//清空栈</span></span><br><span class="line"><span class="comment">	int stackLength();	//已有元素的个数</span></span><br><span class="line"><span class="comment">	void push(char elem);	//元素入栈，栈顶上升</span></span><br><span class="line"><span class="comment">	char pop(char &amp;elem);	//元素出栈，栈顶下降</span></span><br><span class="line"><span class="comment">	void stackTraverse();	//遍历栈中所有元素</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">	目的：掌握栈的实现原理和运行机制</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="comment">/*************************************************************************/</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	MyStack *pStack = <span class="keyword">new</span> MyStack(<span class="number">5</span>);</span><br><span class="line"></span><br><span class="line">	pStack-&gt;push(<span class="string">'h'</span>);<span class="comment">//底</span></span><br><span class="line">	pStack-&gt;push(<span class="string">'e'</span>);</span><br><span class="line">	pStack-&gt;push(<span class="string">'l'</span>);</span><br><span class="line">	pStack-&gt;push(<span class="string">'l'</span>);</span><br><span class="line">	pStack-&gt;push(<span class="string">'o'</span>);<span class="comment">//顶</span></span><br><span class="line"></span><br><span class="line">	pStack-&gt;stackTraverse(<span class="literal">true</span>);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">char</span> elem = <span class="number">0</span>;</span><br><span class="line">	pStack-&gt;pop(elem);</span><br><span class="line"></span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; elem &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">	<span class="comment">//pStack-&gt;clearStack();</span></span><br><span class="line">	pStack-&gt;stackTraverse(<span class="literal">false</span>);</span><br><span class="line"></span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; pStack-&gt;stackLength() &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	<span class="keyword">if</span> (pStack-&gt;stackEmpty())</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt; <span class="string">"栈为空"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">if</span> (pStack-&gt;stackFull())</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt; <span class="string">"栈为满"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">	<span class="keyword">delete</span> pStack;</span><br><span class="line">	pStack = <span class="literal">NULL</span>;</span><br><span class="line">	system(<span class="string">"pause"</span>);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h2><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20171114225249767?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="result" title="">
                </div>
                <div class="image-caption">result</div>
            </figure>
<h1 id="中级版——复杂数据类型"><a href="#中级版——复杂数据类型" class="headerlink" title="中级版——复杂数据类型"></a>中级版——复杂数据类型</h1><h2 id="Coordinate-h"><a href="#Coordinate-h" class="headerlink" title="Coordinate.h"></a>Coordinate.h</h2><p>若数据类型较复杂，例如数据类型为Coordinate<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> COORDINATE_H</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> COORDINATE_H</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Coordinate</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">	Coordinate(<span class="keyword">int</span> x = <span class="number">0</span>, <span class="keyword">int</span> y = <span class="number">0</span>);</span><br><span class="line">	<span class="function"><span class="keyword">void</span> <span class="title">printCoordinate</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">	<span class="keyword">int</span> m_iX;</span><br><span class="line">	<span class="keyword">int</span> m_iY;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br></pre></td></tr></table></figure></p>
<h2 id="Coordinate-cpp"><a href="#Coordinate-cpp" class="headerlink" title="Coordinate.cpp"></a>Coordinate.cpp</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"Coordinate.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line">Coordinate::Coordinate(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span><br><span class="line">&#123;</span><br><span class="line">	m_iX = x;</span><br><span class="line">	m_iY = y;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> Coordinate::printCoordinate()</span><br><span class="line">&#123;</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">"("</span> &lt;&lt; m_iX &lt;&lt; <span class="string">","</span> &lt;&lt; m_iY &lt;&lt; <span class="string">")"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="demo-cpp-1"><a href="#demo-cpp-1" class="headerlink" title="demo.cpp"></a>demo.cpp</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"stdlib.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"MyStack.h"</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*************************************************************************/</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">	栈</span></span><br><span class="line"><span class="comment">	要求：</span></span><br><span class="line"><span class="comment">	1.定义Coordinate坐标类</span></span><br><span class="line"><span class="comment">	2.改造栈类，使其可以使用于坐标类</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">	目的：灵活掌握栈机制，理解抽象数据类型在栈中的应用</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="comment">/*************************************************************************/</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	MyStack *pStack = <span class="keyword">new</span> MyStack(<span class="number">5</span>);</span><br><span class="line"></span><br><span class="line">	pStack-&gt;push(Coordinate(<span class="number">1</span>, <span class="number">2</span>));</span><br><span class="line">	pStack-&gt;push(Coordinate(<span class="number">3</span>, <span class="number">4</span>));</span><br><span class="line"></span><br><span class="line">	pStack-&gt;stackTraverse(<span class="literal">true</span>);</span><br><span class="line"></span><br><span class="line">	pStack-&gt;stackTraverse(<span class="literal">false</span>);</span><br><span class="line"></span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; pStack-&gt;stackLength() &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	<span class="keyword">if</span> (pStack-&gt;stackEmpty())</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt; <span class="string">"栈为空"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">if</span> (pStack-&gt;stackFull())</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt; <span class="string">"栈为满"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">	<span class="keyword">delete</span> pStack;</span><br><span class="line">	pStack = <span class="literal">NULL</span>;</span><br><span class="line">	system(<span class="string">"pause"</span>);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="运行结果"><a href="#运行结果" class="headerlink" title="运行结果"></a>运行结果</h2><p>(1,2)<br>(3,4)<br>(3,4)<br>(1,2)<br>2</p>
<h1 id="高级版——类模板"><a href="#高级版——类模板" class="headerlink" title="高级版——类模板"></a>高级版——类模板</h1><p>去掉MyStack.cpp</p>
<h2 id="MyStack-h-1"><a href="#MyStack-h-1" class="headerlink" title="MyStack.h"></a>MyStack.h</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> MYSTACK_H</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MYSTACK_H</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyStack</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">	MyStack(<span class="keyword">int</span> size);	<span class="comment">//分配内存初始化栈空间，设定栈容量，栈顶</span></span><br><span class="line">	~MyStack();	<span class="comment">//回收栈空间内存</span></span><br><span class="line">	<span class="function"><span class="keyword">bool</span> <span class="title">stackEmpty</span><span class="params">()</span></span>;	<span class="comment">//判定栈是否为空，为空则返回true，非空返回false</span></span><br><span class="line">	<span class="function"><span class="keyword">bool</span> <span class="title">stackFull</span><span class="params">()</span></span>;	<span class="comment">//判定栈是否已满，为满返回true，不满返回false</span></span><br><span class="line">	<span class="function"><span class="keyword">void</span> <span class="title">clearStack</span><span class="params">()</span></span>;	<span class="comment">//清空栈</span></span><br><span class="line">	<span class="function"><span class="keyword">int</span> <span class="title">stackLength</span><span class="params">()</span></span>;	<span class="comment">//已有元素的个数</span></span><br><span class="line">	<span class="function"><span class="keyword">bool</span> <span class="title">push</span><span class="params">(T elem)</span></span>;	<span class="comment">//元素入栈，栈顶上升</span></span><br><span class="line">	<span class="function"><span class="keyword">bool</span> <span class="title">pop</span><span class="params">(T &amp;elem)</span></span>;	<span class="comment">//元素出栈，栈顶下降</span></span><br><span class="line">	<span class="function"><span class="keyword">void</span> <span class="title">stackTraverse</span><span class="params">(<span class="keyword">bool</span> isFromButtom)</span></span>;	<span class="comment">//遍历栈中所有元素</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">	T *m_pBuffer;	<span class="comment">//栈空间指针</span></span><br><span class="line">	<span class="keyword">int</span> m_iSize;	<span class="comment">//栈容量</span></span><br><span class="line">	<span class="keyword">int</span> m_iTop;	<span class="comment">//栈顶，栈中元素个数</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;</span><br><span class="line">MyStack&lt;T&gt;::MyStack(<span class="keyword">int</span> size)</span><br><span class="line">&#123;</span><br><span class="line">	m_iSize = size;</span><br><span class="line">	m_pBuffer = <span class="keyword">new</span> T[size];</span><br><span class="line">	m_iTop = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;</span><br><span class="line">MyStack&lt;T&gt;::~MyStack()</span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">delete</span>[]m_pBuffer;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;</span><br><span class="line"><span class="keyword">bool</span> MyStack&lt;T&gt;::stackEmpty()</span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">if</span> (<span class="number">0</span> == m_iTop)<span class="comment">//if(m_iTop==0)</span></span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;</span><br><span class="line"><span class="keyword">bool</span> MyStack&lt;T&gt;::stackFull()</span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">if</span> (m_iTop == m_iSize)<span class="comment">//&gt;=</span></span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;</span><br><span class="line"><span class="keyword">void</span> MyStack&lt;T&gt;::clearStack()</span><br><span class="line">&#123;</span><br><span class="line">	m_iTop = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;</span><br><span class="line"><span class="keyword">int</span> MyStack&lt;T&gt;::stackLength()</span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">return</span> m_iTop;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;</span><br><span class="line"><span class="keyword">bool</span> MyStack&lt;T&gt;::push(T elem)</span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">if</span> (stackFull())</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	m_pBuffer[m_iTop] = elem;</span><br><span class="line">	m_iTop++;<span class="comment">//指向空位置</span></span><br><span class="line">	<span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;</span><br><span class="line"><span class="keyword">bool</span> MyStack&lt;T&gt;::pop(T &amp;elem)</span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">if</span> (stackEmpty())</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	m_iTop--;</span><br><span class="line">	elem = m_pBuffer[m_iTop];</span><br><span class="line">	<span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;</span><br><span class="line"><span class="keyword">void</span> MyStack&lt;T&gt;::stackTraverse(<span class="keyword">bool</span> isFromButtom)</span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">if</span> (isFromButtom)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; m_iTop; i++)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="built_in">cout</span> &lt;&lt; m_pBuffer[i];</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> i = m_iTop - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="built_in">cout</span> &lt;&lt; m_pBuffer[i];</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br></pre></td></tr></table></figure>
<h2 id="Coordinate-h-1"><a href="#Coordinate-h-1" class="headerlink" title="Coordinate.h"></a>Coordinate.h</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> COORDINATE_H</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> COORDINATE_H</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;ostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Coordinate</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">	<span class="keyword">friend</span> ostream &amp;<span class="keyword">operator</span>&lt;&lt;(ostream &amp;out, Coordinate &amp;coor);</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">	Coordinate(<span class="keyword">int</span> x = <span class="number">0</span>, <span class="keyword">int</span> y = <span class="number">0</span>);</span><br><span class="line">	<span class="function"><span class="keyword">void</span> <span class="title">printCoordinate</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">	<span class="keyword">int</span> m_iX;</span><br><span class="line">	<span class="keyword">int</span> m_iY;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br></pre></td></tr></table></figure>
<h2 id="Coordinate-cpp-1"><a href="#Coordinate-cpp-1" class="headerlink" title="Coordinate.cpp"></a>Coordinate.cpp</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"Coordinate.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line">Coordinate::Coordinate(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span><br><span class="line">&#123;</span><br><span class="line">	m_iX = x;</span><br><span class="line">	m_iY = y;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> Coordinate::printCoordinate()</span><br><span class="line">&#123;</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">"("</span> &lt;&lt; m_iX &lt;&lt; <span class="string">","</span> &lt;&lt; m_iY &lt;&lt; <span class="string">")"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">ostream &amp;<span class="keyword">operator</span>&lt;&lt;(ostream &amp;out, Coordinate &amp;coor)</span><br><span class="line">&#123;</span><br><span class="line">	out &lt;&lt;<span class="string">"("</span> &lt;&lt; coor.m_iX &lt;&lt; <span class="string">","</span> &lt;&lt; coor.m_iY &lt;&lt; <span class="string">")"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	<span class="keyword">return</span> out;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="demo-cpp-2"><a href="#demo-cpp-2" class="headerlink" title="demo.cpp"></a>demo.cpp</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"stdlib.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"MyStack.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"Coordinate.h"</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*************************************************************************/</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">	栈 类模板</span></span><br><span class="line"><span class="comment">	要求：</span></span><br><span class="line"><span class="comment">	将普通栈制造为类模板栈，使其可以适用于任何数据类型</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">	目的：灵活掌握栈机制，理解抽象数据类型在栈中的应用</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="comment">/*************************************************************************/</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	MyStack&lt;<span class="keyword">char</span>&gt; *pStack = <span class="keyword">new</span> MyStack&lt;<span class="keyword">char</span>&gt;(<span class="number">5</span>);</span><br><span class="line"></span><br><span class="line">	pStack-&gt;push(<span class="string">'h'</span>);</span><br><span class="line">	pStack-&gt;push(<span class="string">'l'</span>);</span><br><span class="line"></span><br><span class="line">	pStack-&gt;stackTraverse(<span class="literal">true</span>);</span><br><span class="line"></span><br><span class="line">	pStack-&gt;stackTraverse(<span class="literal">false</span>);</span><br><span class="line"></span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; pStack-&gt;stackLength() &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	<span class="keyword">if</span> (pStack-&gt;stackEmpty())</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt; <span class="string">"栈为空"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">if</span> (pStack-&gt;stackFull())</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt; <span class="string">"栈为满"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">	<span class="keyword">delete</span> pStack;</span><br><span class="line">	pStack = <span class="literal">NULL</span>;</span><br><span class="line">	system(<span class="string">"pause"</span>);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="运行结果-1"><a href="#运行结果-1" class="headerlink" title="运行结果"></a>运行结果</h2><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20171123224729914?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="结果" title="">
                </div>
                <div class="image-caption">结果</div>
            </figure>
<h1 id="应用——进制转换"><a href="#应用——进制转换" class="headerlink" title="应用——进制转换"></a>应用——进制转换</h1><p>demo.cpp<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"stdlib.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"MyStack.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"Coordinate.h"</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*************************************************************************/</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">	栈应用——数制转换</span></span><br><span class="line"><span class="comment">	描述：输入任意的十进制正整数N，分别输出该整数N的二进制、八进制、十六进制的数</span></span><br><span class="line"><span class="comment">	公式：N=(N div d) * d + N mod d (div表示整除，mod表示求余)</span></span><br><span class="line"><span class="comment">	(1348)(十进制) = (2504)(八进制) = (544)(十六进制) = (10101000100)(二进制)</span></span><br><span class="line"><span class="comment">	短除法</span></span><br><span class="line"><span class="comment">			N				N div 8		N mod 8</span></span><br><span class="line"><span class="comment">			1348		168				4</span></span><br><span class="line"><span class="comment">			168			21				0</span></span><br><span class="line"><span class="comment">			21			2					5</span></span><br><span class="line"><span class="comment">			2				0					2</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">			N				N div 16		N mod 16</span></span><br><span class="line"><span class="comment">			1348		84				4</span></span><br><span class="line"><span class="comment">			84			5					4</span></span><br><span class="line"><span class="comment">			5				0					5</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">			目的：通过实例灵活掌握栈机制的使用技巧</span></span><br><span class="line"><span class="comment">	</span></span><br><span class="line"><span class="comment">	*/</span></span><br><span class="line"><span class="comment">/*************************************************************************/</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> BINARY					2</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> OCTONARY			8</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> HEXADECTMAL		16</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	MyStack&lt;<span class="keyword">int</span>&gt; *pStack = <span class="keyword">new</span> MyStack&lt;<span class="keyword">int</span>&gt;(<span class="number">30</span>);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">int</span> N = <span class="number">1348</span>;</span><br><span class="line">	<span class="keyword">int</span> mod = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">while</span> (N != <span class="number">0</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		mod = N % OCTONARY;</span><br><span class="line">		pStack-&gt;push(mod);</span><br><span class="line">		N = N / OCTONARY;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	pStack-&gt;stackTraverse(<span class="literal">false</span>);</span><br><span class="line">	<span class="keyword">delete</span> pStack;</span><br><span class="line">	pStack = <span class="literal">NULL</span>;</span><br><span class="line">	system(<span class="string">"pause"</span>);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>上述可使用于二进制、八进制，但对于十六进制还有些瑕疵。改进一下：<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> BINARY					2</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> OCTONARY			8</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> HEXADECTMAL		16</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">char</span> num[] = <span class="string">"0123456789ABCDEF"</span>;</span><br><span class="line">	MyStack&lt;<span class="keyword">int</span>&gt; *pStack = <span class="keyword">new</span> MyStack&lt;<span class="keyword">int</span>&gt;(<span class="number">30</span>);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">int</span> N = <span class="number">2016</span>;</span><br><span class="line">	<span class="keyword">int</span> mod = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">while</span> (N != <span class="number">0</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		mod = N % HEXADECTMAL;</span><br><span class="line">		pStack-&gt;push(mod);</span><br><span class="line">		N = N / HEXADECTMAL;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 	pStack-&gt;stackTraverse(false);</span></span><br><span class="line">	</span><br><span class="line"><span class="comment">// 	for (int i = pStack-&gt;stackLength() - 1; i &gt;= 0; i--)</span></span><br><span class="line"><span class="comment">// 	&#123;</span></span><br><span class="line"><span class="comment">// 		num[pStack[i]]</span></span><br><span class="line"><span class="comment">// 	&#125;</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">int</span> elem = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">while</span> (!pStack-&gt;stackEmpty())</span><br><span class="line">	&#123;</span><br><span class="line">		pStack-&gt;pop(elem);</span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt; num[elem];</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">delete</span> pStack;</span><br><span class="line">	pStack = <span class="literal">NULL</span>;</span><br><span class="line">	system(<span class="string">"pause"</span>);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>输出：7E0</p>
<h1 id="应用——括号匹配"><a href="#应用——括号匹配" class="headerlink" title="应用——括号匹配"></a>应用——括号匹配</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"stdlib.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"MyStack.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"Coordinate.h"</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*************************************************************************/</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">	栈应用——括号匹配</span></span><br><span class="line"><span class="comment">	描述：任意输入一组括号，可以判断括号是否匹配</span></span><br><span class="line"><span class="comment">	字符串示例：[()]		[()()]		[()[()]]		[[()]</span></span><br><span class="line"><span class="comment">	目的：通过实例灵活掌握栈机制的使用技巧</span></span><br><span class="line"><span class="comment">	*/</span></span><br><span class="line"><span class="comment">/*************************************************************************/</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	MyStack&lt;<span class="keyword">char</span>&gt; *pStack = <span class="keyword">new</span> MyStack&lt;<span class="keyword">char</span>&gt;(<span class="number">30</span>);</span><br><span class="line">	MyStack&lt;<span class="keyword">char</span>&gt; *pNeedStack = <span class="keyword">new</span> MyStack&lt;<span class="keyword">char</span>&gt;(<span class="number">30</span>);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">char</span> str[] = <span class="string">"[()]]"</span>;</span><br><span class="line">	<span class="keyword">char</span> currentNeed = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="built_in">strlen</span>(str); i++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span> (str[i] != currentNeed)</span><br><span class="line">		&#123;</span><br><span class="line">			pStack-&gt;push(str[i]);</span><br><span class="line">			<span class="keyword">switch</span> (str[i])</span><br><span class="line">			&#123;</span><br><span class="line">				<span class="keyword">case</span> <span class="string">'['</span>:</span><br><span class="line">					<span class="keyword">if</span> (currentNeed != <span class="number">0</span>)</span><br><span class="line">					&#123;</span><br><span class="line">						pNeedStack-&gt;push(currentNeed);</span><br><span class="line">					&#125;</span><br><span class="line">					currentNeed = <span class="string">']'</span>;</span><br><span class="line">					<span class="keyword">break</span>;</span><br><span class="line">				<span class="keyword">case</span> <span class="string">'('</span>:</span><br><span class="line">					<span class="keyword">if</span> (currentNeed != <span class="number">0</span>)</span><br><span class="line">					&#123;</span><br><span class="line">						pNeedStack-&gt;push(currentNeed);</span><br><span class="line">					&#125;</span><br><span class="line">					currentNeed = <span class="string">')'</span>;</span><br><span class="line">					<span class="keyword">break</span>;</span><br><span class="line">				<span class="keyword">default</span>:</span><br><span class="line">					<span class="built_in">cout</span> &lt;&lt; <span class="string">"字符串括号不匹配"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">					system(<span class="string">"pause"</span>);</span><br><span class="line">					<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span></span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">char</span> elem;</span><br><span class="line">			pStack-&gt;pop(elem);</span><br><span class="line">			<span class="keyword">if</span> (!pNeedStack-&gt;pop(currentNeed))</span><br><span class="line">			&#123;</span><br><span class="line">				currentNeed = <span class="number">0</span>;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">if</span> (pStack-&gt;stackEmpty())</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt; <span class="string">"字符串括号匹配"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt; <span class="string">"字符串括号不匹配"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">delete</span> pStack;</span><br><span class="line">	pStack = <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">delete</span> pNeedStack;</span><br><span class="line">	pNeedStack = <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">	system(<span class="string">"pause"</span>);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>感觉示例代码存在问题，default后没有释放内存，存在内存泄漏。</p>
<p>更好的思路：一个MyStack即可，判断是否为左括号，是就push；否则是右括号，若不匹配，则cout不匹配，匹配则pop。最后栈是否为空，空则匹配。</p>
]]></content>
      
        <categories>
            
            <category> 互联网 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> CPP </tag>
            
            <tag> 数据结构 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[windows软件使用小技巧]]></title>
      <url>https://hubojing.github.io/2017/11/12/windows%E8%BD%AF%E4%BB%B6%E4%BD%BF%E7%94%A8%E5%B0%8F%E6%8A%80%E5%B7%A7/</url>
      <content type="html"><![CDATA[<div align="left"><br><img src="https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1510501996085&di=21a819c4665e855e7e2a943cfb3c5da1&imgtype=0&src=http%3A%2F%2Fpic.58pic.com%2F58pic%2F13%2F45%2F46%2F16E58PICUSf_1024.jpg" width="300" height="180" style="float:right;"><br> 　　<br>　　<br>　　<strong>小问题解决方案记录集。</strong>　　<br> 　　<br>　　<br> </div>

<a id="more"></a>
<h1 id="word打开提示setup-error（win7）"><a href="#word打开提示setup-error（win7）" class="headerlink" title="word打开提示setup error（win7）"></a>word打开提示setup error（win7）</h1><ul>
<li>The setup controller has encountered a problem during install. Please review the log files for further informatin on the error.<blockquote>
<p>解决方法：重装不起作用。到C:\Program Files\Common Files\Microsoft Shared\OFFICE12\Office Setup Controller，将这个文件夹删除，就不再出现提示了。 （word2007）</p>
</blockquote>
</li>
</ul>
<h1 id="各软件最近历史始终为空（win7）"><a href="#各软件最近历史始终为空（win7）" class="headerlink" title="各软件最近历史始终为空（win7）"></a>各软件最近历史始终为空（win7）</h1><ul>
<li>最近打开的文件没有记录<blockquote>
<p>解决方法：在“运行”中输入<code>gpedit.msc</code>，在树中依次展开到以下项目，用户配置——管理模板——任务栏和开始菜单，在左侧的任务栏和开始菜单窗口找到并双击打开“不要保留最近打开文档的记录”项目，打开“不要保留最近打开文档的记录”属性界面，在“设置”选项卡中选择“已禁用”，最后单击“确定”按钮让设置生效。</p>
</blockquote>
</li>
</ul>
<h1 id="文件夹左边栏没有桌面选项（win7）"><a href="#文件夹左边栏没有桌面选项（win7）" class="headerlink" title="文件夹左边栏没有桌面选项（win7）"></a>文件夹左边栏没有桌面选项（win7）</h1><ul>
<li>比如点击我的电脑显示在左侧的文件夹没有桌面<blockquote>
<p>解决方法：找到桌面的路径，eg.C:\Users\lenovo\Desktop，在收藏夹上右击，选择“将当前位置添加到收藏夹”。（记得点击收藏夹旁的三角展开才看得到）</p>
</blockquote>
</li>
</ul>
<h1 id="完全卸载VS"><a href="#完全卸载VS" class="headerlink" title="完全卸载VS"></a>完全卸载VS</h1><p>最近将VS安装目录里的中文换成英文后，VS就打不开了……重新安装也无法选择安装路径。原因是原版VS未卸载。</p>
<blockquote>
<p>解决方法：<br>完全卸载方式：</p>
<ol>
<li>解压你的vs2013的安装包(iso格式)</li>
<li>cd到解压后的文件夹</li>
<li>vs_ultimate.exe /uninstall /force</li>
</ol>
</blockquote>
<h1 id="U盘格式转换"><a href="#U盘格式转换" class="headerlink" title="U盘格式转换"></a>U盘格式转换</h1><p>U盘单个4G以上的文件在ntfs格式下才可以放入。<br>convert命令FAT32转NTFS（不影响硬盘数据）<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">convert i:/fs:ntfs</span><br><span class="line"># i为disk盘符</span><br></pre></td></tr></table></figure></p>
]]></content>
      
        <categories>
            
            <category> 互联网 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 备忘 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[队列]]></title>
      <url>https://hubojing.github.io/2017/11/12/%E9%98%9F%E5%88%97/</url>
      <content type="html"><![CDATA[<div align="left"><br><img src="https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1550075379443&di=51f53328008b4821ce8f839ac9186c0c&imgtype=0&src=http%3A%2F%2Fhiphotos.baidu.com%2Fdoc%2Fpic%2Fitem%2Fb17eca8065380cd7e40f7c6ba844ad3459828127.jpg" width="300" height="180" style="float:right;"><br> 　　<br> 　　<br> 　<strong>c++实现环形队列记录。</strong>　　<br> 　　<br> 　　<br> 　　<br> </div>

<a id="more"></a>
<h1 id="MyQueue-h"><a href="#MyQueue-h" class="headerlink" title="MyQueue.h"></a>MyQueue.h</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//环形队列C++实现</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> MYQUEUE_H</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MYQUEUE_H</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyQueue</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">	MyQueue(<span class="keyword">int</span> queueCapacity);	<span class="comment">//InitQueue(&amp;Q)	创建队列</span></span><br><span class="line">	<span class="keyword">virtual</span> ~MyQueue();			<span class="comment">//DestroyQueue(&amp;Q)	销毁队列</span></span><br><span class="line">	<span class="function"><span class="keyword">void</span> <span class="title">ClearQueue</span><span class="params">()</span></span>;			<span class="comment">//ClearQueue(&amp;Q)	清空队列</span></span><br><span class="line">	<span class="function"><span class="keyword">bool</span> <span class="title">QueueEmpty</span><span class="params">()</span> <span class="keyword">const</span></span>;	<span class="comment">//QueueEmpty(Q)	判空队列</span></span><br><span class="line">	<span class="function"><span class="keyword">bool</span> <span class="title">QueueFull</span><span class="params">()</span> <span class="keyword">const</span></span>;		<span class="comment">//QueueFull(Q)	判满队列</span></span><br><span class="line">	<span class="function"><span class="keyword">int</span> <span class="title">QueueLength</span><span class="params">()</span> <span class="keyword">const</span></span>;	<span class="comment">//QueueLength(Q)	队列长度</span></span><br><span class="line">	<span class="function"><span class="keyword">bool</span> <span class="title">EnQueue</span><span class="params">(<span class="keyword">int</span> element)</span></span>;	<span class="comment">//EnQueue(&amp;Q, element) 新元素入队</span></span><br><span class="line">	<span class="function"><span class="keyword">bool</span> <span class="title">DeQueue</span><span class="params">(<span class="keyword">int</span> &amp;element)</span></span>;	<span class="comment">//DeQueue(&amp;Q, &amp;element)	首元素出队</span></span><br><span class="line">	<span class="function"><span class="keyword">void</span> <span class="title">QueueTraverse</span><span class="params">()</span></span>;		<span class="comment">//QueueTraverse(Q, visit())	遍历队列</span></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">	<span class="keyword">int</span> *m_pQueue;	<span class="comment">//队列数组指针</span></span><br><span class="line">	<span class="keyword">int</span> m_iQueueLen;	<span class="comment">//队列元素个数</span></span><br><span class="line">	<span class="keyword">int</span> m_iQueueCapacity;	<span class="comment">//队列数组容量</span></span><br><span class="line">	<span class="keyword">int</span> m_iHead;</span><br><span class="line">	<span class="keyword">int</span> m_iTail;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br></pre></td></tr></table></figure>
<p>注释为C语言版。</p>
<h1 id="MyQueue-cpp"><a href="#MyQueue-cpp" class="headerlink" title="MyQueue.cpp"></a>MyQueue.cpp</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"MyQueue.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line">MyQueue::MyQueue(<span class="keyword">int</span> queueCapacity)</span><br><span class="line">&#123;</span><br><span class="line">	m_iQueueCapacity = queueCapacity;</span><br><span class="line">	m_pQueue = <span class="keyword">new</span> <span class="keyword">int</span>[m_iQueueCapacity];</span><br><span class="line">	ClearQueue();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">MyQueue::~MyQueue()</span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">delete</span>[]m_pQueue;</span><br><span class="line">	m_pQueue = <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> MyQueue::ClearQueue()</span><br><span class="line">&#123;</span><br><span class="line">	m_iHead = <span class="number">0</span>;</span><br><span class="line">	m_iTail = <span class="number">0</span>;</span><br><span class="line">	m_iQueueLen = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">bool</span> MyQueue::QueueEmpty() <span class="keyword">const</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">if</span> (m_iQueueLen == <span class="number">0</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">	&#125;</span><br><span class="line"><span class="comment">// 	return m_iQueueLen == 0 ? true : false;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> MyQueue::QueueLength() <span class="keyword">const</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">return</span> m_iQueueLen;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">bool</span> MyQueue::QueueFull() <span class="keyword">const</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">if</span> (m_iQueueLen==m_iQueueCapacity)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">bool</span> MyQueue::EnQueue(<span class="keyword">int</span> element)</span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">if</span> (QueueFull())</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">	&#123;</span><br><span class="line">		m_pQueue[m_iTail] = element;</span><br><span class="line">		m_iTail++;</span><br><span class="line">		m_iTail = m_iTail%m_iQueueCapacity;</span><br><span class="line">		m_iQueueLen++;</span><br><span class="line">		<span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">bool</span> MyQueue::DeQueue(<span class="keyword">int</span> &amp;element)</span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">if</span> (QueueEmpty())</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">	&#123;</span><br><span class="line">		element = m_pQueue[m_iHead];</span><br><span class="line">		m_iHead++;</span><br><span class="line">		m_iHead = m_iHead%m_iQueueCapacity;</span><br><span class="line">		m_iQueueLen--;</span><br><span class="line">		<span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> MyQueue::QueueTraverse()</span><br><span class="line">&#123;</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = m_iHead; i &lt; m_iQueueLen + m_iHead; i++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt; m_pQueue[i%m_iQueueCapacity] &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="demo-cpp"><a href="#demo-cpp" class="headerlink" title="demo.cpp"></a>demo.cpp</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//实现环形队列</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"MyQueue.h"</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	MyQueue *p = <span class="keyword">new</span> MyQueue(<span class="number">4</span>);</span><br><span class="line"></span><br><span class="line">	p-&gt;EnQueue(<span class="number">1</span>);</span><br><span class="line">	p-&gt;EnQueue(<span class="number">2</span>);</span><br><span class="line">	p-&gt;EnQueue(<span class="number">3</span>);</span><br><span class="line">	p-&gt;EnQueue(<span class="number">4</span>);</span><br><span class="line">	p-&gt;EnQueue(<span class="number">5</span>);<span class="comment">//判满</span></span><br><span class="line">	p-&gt;QueueTraverse();</span><br><span class="line"></span><br><span class="line">	<span class="keyword">int</span> e = <span class="number">0</span>;</span><br><span class="line">	p-&gt;DeQueue(e);</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; e &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">	p-&gt;DeQueue(e);</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; e &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">	p-&gt;QueueTraverse();</span><br><span class="line"></span><br><span class="line">	p-&gt;ClearQueue();</span><br><span class="line">	p-&gt;QueueTraverse();</span><br><span class="line"></span><br><span class="line">	p-&gt;EnQueue(<span class="number">10</span>);</span><br><span class="line">	p-&gt;EnQueue(<span class="number">20</span>);</span><br><span class="line">	p-&gt;QueueTraverse();</span><br><span class="line"></span><br><span class="line">	<span class="keyword">delete</span> p;</span><br><span class="line">	p = <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line">	system(<span class="string">"pause"</span>);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="运行结果"><a href="#运行结果" class="headerlink" title="运行结果"></a>运行结果</h1><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20171112173342198?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="demo" title="">
                </div>
                <div class="image-caption">demo</div>
            </figure>
<p>若对象成员较复杂：比如为Custeomer类</p>
<h1 id="Customer-h"><a href="#Customer-h" class="headerlink" title="Customer.h"></a>Customer.h</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> CUSTOMER_H</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> CUSTOMER_H</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Customer</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">	Customer(<span class="built_in">string</span> name = <span class="string">""</span>, <span class="keyword">int</span> age = <span class="number">0</span>);</span><br><span class="line">	<span class="function"><span class="keyword">void</span> <span class="title">printInfo</span><span class="params">()</span> <span class="keyword">const</span></span>;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">	<span class="built_in">string</span> m_strName;</span><br><span class="line">	<span class="keyword">int</span> m_iAge;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br></pre></td></tr></table></figure>
<h1 id="Customer-cpp"><a href="#Customer-cpp" class="headerlink" title="Customer.cpp"></a>Customer.cpp</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"Customer.h"</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line">Customer::Customer(<span class="built_in">string</span> name, <span class="keyword">int</span> age)</span><br><span class="line">&#123;</span><br><span class="line">	m_strName = name;</span><br><span class="line">	m_iAge = age;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> Customer::printInfo() <span class="keyword">const</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">"姓名："</span> &lt;&lt; m_strName &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">"年龄："</span> &lt;&lt; m_iAge &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="MyQueue-h修改"><a href="#MyQueue-h修改" class="headerlink" title="MyQueue.h修改"></a>MyQueue.h修改</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"Customer.h"</span></span></span><br><span class="line">	<span class="function"><span class="keyword">bool</span> <span class="title">EnQueue</span><span class="params">(Customer element)</span></span>;	<span class="comment">//EnQueue(&amp;Q, element) 新元素入队</span></span><br><span class="line">	<span class="function"><span class="keyword">bool</span> <span class="title">DeQueue</span><span class="params">(Customer &amp;element)</span></span>;	<span class="comment">//DeQueue(&amp;Q, &amp;element)	首元素出队</span></span><br><span class="line">	Customer *m_pQueue;	<span class="comment">//队列数组指针</span></span><br></pre></td></tr></table></figure>
<h1 id="MyQueue-cpp修改"><a href="#MyQueue-cpp修改" class="headerlink" title="MyQueue.cpp修改"></a>MyQueue.cpp修改</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">bool</span> MyQueue::EnQueue(Customer element)</span><br><span class="line"><span class="keyword">bool</span> MyQueue::DeQueue(Customer &amp;element)</span><br><span class="line"></span><br><span class="line">MyQueue::MyQueue(<span class="keyword">int</span> queueCapacity)</span><br><span class="line">&#123;</span><br><span class="line">	m_iQueueCapacity = queueCapacity;</span><br><span class="line">	m_pQueue = <span class="keyword">new</span> Customer[m_iQueueCapacity];</span><br><span class="line">	ClearQueue();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> MyQueue::QueueTraverse()</span><br><span class="line">&#123;</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = m_iHead; i &lt; m_iQueueLen + m_iHead; i++)</span><br><span class="line">	&#123;</span><br><span class="line">		m_pQueue[i%m_iQueueCapacity].printInfo();</span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt; <span class="string">"前面还有"</span> &lt;&lt; (i - m_iHead) &lt;&lt; <span class="string">"人"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="demo-cpp-1"><a href="#demo-cpp-1" class="headerlink" title="demo.cpp"></a>demo.cpp</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//实现环形队列</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"MyQueue.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"Customer.h"</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	MyQueue *p = <span class="keyword">new</span> MyQueue(<span class="number">4</span>);</span><br><span class="line">	<span class="function">Customer <span class="title">c1</span><span class="params">(<span class="string">"zhangsan"</span>, <span class="number">20</span>)</span></span>;</span><br><span class="line">	<span class="function">Customer <span class="title">c2</span><span class="params">(<span class="string">"lisi"</span>, <span class="number">30</span>)</span></span>;</span><br><span class="line">	<span class="function">Customer <span class="title">c3</span><span class="params">(<span class="string">"wangwu"</span>, <span class="number">10</span>)</span></span>;</span><br><span class="line"></span><br><span class="line">	p-&gt;EnQueue(c1);</span><br><span class="line">	p-&gt;EnQueue(c2);</span><br><span class="line">	p-&gt;EnQueue(c3);</span><br><span class="line"></span><br><span class="line">	p-&gt;QueueTraverse();</span><br><span class="line"></span><br><span class="line">	<span class="function">Customer <span class="title">c4</span><span class="params">(<span class="string">""</span>, <span class="number">0</span>)</span></span>;</span><br><span class="line">	p-&gt;DeQueue(c4);</span><br><span class="line">	c4.printInfo();</span><br><span class="line"></span><br><span class="line">	p-&gt;QueueTraverse();</span><br><span class="line"></span><br><span class="line">	<span class="keyword">delete</span> p;</span><br><span class="line">	p = <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line">	system(<span class="string">"pause"</span>);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="运行结果-1"><a href="#运行结果-1" class="headerlink" title="运行结果"></a>运行结果</h1><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20171112172921363?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="result" title="">
                </div>
                <div class="image-caption">result</div>
            </figure>]]></content>
      
        <categories>
            
            <category> 互联网 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> CPP </tag>
            
            <tag> 数据结构 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[WatchYourPC]]></title>
      <url>https://hubojing.github.io/2017/10/24/WatchYourPC/</url>
      <content type="html"><![CDATA[<div align="left"><br><img src="http://img.blog.csdn.net/20171025000305209?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" width="300" height="180" style="float:right;"><br> 　　<br> 　　<br>写了一个小玩具，自动记录每次开机时间。　<br> 　　<br>　　<br> </div>

<a id="more"></a>
<h1 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;windows.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;ctime&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;fstream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;tchar.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="built_in">string</span> <span class="title">getTime</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">time_t</span> nowTime;</span><br><span class="line">	time(&amp;nowTime);</span><br><span class="line">	<span class="class"><span class="keyword">struct</span> <span class="title">tm</span> <span class="title">t</span>;</span></span><br><span class="line">	localtime_s(&amp;t, &amp;nowTime);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">char</span> chYear[<span class="number">64</span>], chMonth[<span class="number">64</span>], chDay[<span class="number">64</span>], chHour[<span class="number">64</span>], chMin[<span class="number">64</span>], chSec[<span class="number">64</span>];</span><br><span class="line">	<span class="keyword">int</span> iYear = t.tm_year + <span class="number">1900</span>;</span><br><span class="line">	<span class="keyword">int</span> iMonth = t.tm_mon + <span class="number">1</span>;</span><br><span class="line">	<span class="keyword">int</span> iDay = t.tm_mday;</span><br><span class="line">	<span class="keyword">int</span> iHour = t.tm_hour;</span><br><span class="line">	<span class="keyword">int</span> iMin = t.tm_min;</span><br><span class="line">	<span class="keyword">int</span> iSec = t.tm_sec;</span><br><span class="line">	_itoa_s(iYear, chYear, <span class="keyword">sizeof</span>(chYear), <span class="number">10</span>);</span><br><span class="line">	_itoa_s(iMonth, chMonth, <span class="keyword">sizeof</span>(chMonth), <span class="number">10</span>);</span><br><span class="line">	_itoa_s(iDay, chDay, <span class="keyword">sizeof</span>(chDay), <span class="number">10</span>);</span><br><span class="line">	_itoa_s(iHour, chHour, <span class="keyword">sizeof</span>(chHour), <span class="number">10</span>);</span><br><span class="line">	_itoa_s(iMin, chMin, <span class="keyword">sizeof</span>(chMin), <span class="number">10</span>);</span><br><span class="line">	_itoa_s(iSec, chSec, <span class="keyword">sizeof</span>(chSec), <span class="number">10</span>);</span><br><span class="line"></span><br><span class="line">	<span class="built_in">string</span> sYear = chYear;</span><br><span class="line">	<span class="built_in">string</span> sMonth = chMonth;</span><br><span class="line">	<span class="built_in">string</span> sDay = chDay;</span><br><span class="line">	<span class="built_in">string</span> sHour = chHour;</span><br><span class="line">	<span class="built_in">string</span> sMin = chMin;</span><br><span class="line">	<span class="built_in">string</span> sSec = chSec;</span><br><span class="line"></span><br><span class="line">	<span class="built_in">string</span> sTmp;</span><br><span class="line">	sTmp = <span class="string">"开机时间记录："</span> + sYear + <span class="string">"年"</span> + sMonth + <span class="string">"月"</span> + sDay + <span class="string">"日"</span> + sHour + <span class="string">"时"</span> + sMin + <span class="string">"分"</span> + sSec + <span class="string">"秒"</span>;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> sTmp;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="comment">//写入txt</span></span><br><span class="line">	<span class="function">ofstream <span class="title">fout</span><span class="params">(<span class="string">"D:\\WatchYourPC.txt"</span>, ios::app)</span></span>;</span><br><span class="line">	<span class="built_in">string</span> time = getTime();</span><br><span class="line">	fout &lt;&lt; time &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">	CHAR pathtofile[MAX_PATH] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line">	HMODULE GetModH = GetModuleHandle(<span class="literal">NULL</span>);</span><br><span class="line">	GetModuleFileName(GetModH, (LPWSTR)pathtofile, <span class="keyword">sizeof</span>(pathtofile));</span><br><span class="line"></span><br><span class="line">	<span class="comment">//写入注册表</span></span><br><span class="line">	HKEY hKey;</span><br><span class="line">	RegOpenKeyEx(HKEY_CURRENT_USER, _T(<span class="string">"Software\\Microsoft\\Windows\\CurrentVersion\\Run"</span>), <span class="number">0</span>, KEY_SET_VALUE, &amp;hKey);</span><br><span class="line">	<span class="keyword">int</span> iLen = <span class="keyword">sizeof</span>(pathtofile);</span><br><span class="line">	RegSetValueEx(hKey, _T(<span class="string">"WatchYourPC"</span>), <span class="number">0</span>, REG_SZ, (<span class="keyword">const</span> <span class="keyword">unsigned</span> <span class="keyword">char</span>*)pathtofile, iLen);</span><br><span class="line">	RegCloseKey(hKey);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h1><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20171025000305209?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="效果" title="">
                </div>
                <div class="image-caption">效果</div>
            </figure>
]]></content>
      
        <categories>
            
            <category> 互联网 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> CPP </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[C++封装exe以及资源更新]]></title>
      <url>https://hubojing.github.io/2017/10/12/%E5%B0%81%E8%A3%85exe%E4%BB%A5%E5%8F%8A%E8%B5%84%E6%BA%90%E6%9B%B4%E6%96%B0/</url>
      <content type="html"><![CDATA[<div align="left"><br><img src="https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1550075379443&di=51f53328008b4821ce8f839ac9186c0c&imgtype=0&src=http%3A%2F%2Fhiphotos.baidu.com%2Fdoc%2Fpic%2Fitem%2Fb17eca8065380cd7e40f7c6ba844ad3459828127.jpg" width="300" height="180" style="float:right;"><br><br> 　　<br> 　　<br><br> 　<strong>CDHtmlDialog、UpdateResource、ShellExecute用法简记。</strong>　　<br> 　　<br> 　　<br><br><br> </div>

<a id="more"></a>
<h1 id="C-封装exe"><a href="#C-封装exe" class="headerlink" title="C++封装exe"></a>C++封装exe</h1><p>目标：一个网页，想以exe呈现。<br>法一：使用webbrowser控件<br>工具箱右键Group Box，[选择项]-[COM组件]-[Microsoft Web Browser]。<br>初始化中，<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">m_webbrowser.Navigate(_T(<span class="string">"file:///D:/test.htm"</span>),<span class="literal">NULL</span>,<span class="literal">NULL</span>,<span class="literal">NULL</span>,<span class="literal">NULL</span>);</span><br></pre></td></tr></table></figure></p>
<p>法二：新建MFC，勾选html对话框。（实质是内嵌了一个webbrowser控件）<br>初始化中，<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Navigate(_T(<span class="string">"www.hubojing.me"</span>));</span><br></pre></td></tr></table></figure></p>
<p>MFC编译后会自动生成exe文件。</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Navigate</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">   LPCTSTR lpszURL,</span></span></span><br><span class="line"><span class="function"><span class="params">   DWORD dwFlags = <span class="number">0</span>,</span></span></span><br><span class="line"><span class="function"><span class="params">   LPCTSTR lpszTargetFrameName = <span class="literal">NULL</span>,</span></span></span><br><span class="line"><span class="function"><span class="params">   LPCTSTR lpszHeaders = <span class="literal">NULL</span>,</span></span></span><br><span class="line"><span class="function"><span class="params">   LPVOID lpvPostData = <span class="literal">NULL</span>,</span></span></span><br><span class="line"><span class="function"><span class="params">   DWORD dwPostDataLen = <span class="number">0</span> </span></span></span><br><span class="line"><span class="function"><span class="params">)</span></span>;</span><br></pre></td></tr></table></figure>
<p>详见<a href="https://msdn.microsoft.com/zh-cn/library/fyhfs9yd.aspx" target="_blank" rel="noopener">https://msdn.microsoft.com/zh-cn/library/fyhfs9yd.aspx</a></p>
<h1 id="CDHtmlDialog"><a href="#CDHtmlDialog" class="headerlink" title="CDHtmlDialog"></a>CDHtmlDialog</h1><p>html对话框继承了CDHtmlDialog，和CDialog不同之处是包含了一个HTML资源。<br><a href="http://wenwen.sogou.com/z/q704523777.htm" target="_blank" rel="noopener">如何在CDHtmlDialog中引用html资源的方法</a></p>
<h1 id="UpdateResource用法"><a href="#UpdateResource用法" class="headerlink" title="UpdateResource用法"></a>UpdateResource用法</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">BOOL WINAPI <span class="title">UpdateResource</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">  _In_     HANDLE  hUpdate,</span></span></span><br><span class="line"><span class="function"><span class="params">  _In_     LPCTSTR lpType,</span></span></span><br><span class="line"><span class="function"><span class="params">  _In_     LPCTSTR lpName,</span></span></span><br><span class="line"><span class="function"><span class="params">  _In_     WORD    wLanguage,</span></span></span><br><span class="line"><span class="function"><span class="params">  _In_opt_ LPVOID  lpData,</span></span></span><br><span class="line"><span class="function"><span class="params">  _In_     DWORD   cbData</span></span></span><br><span class="line"><span class="function"><span class="params">)</span></span>;</span><br></pre></td></tr></table></figure>
<p>参数一的句柄利用 BeginUpdateResource 来获得。<br>参数二 资源类型 详见<a href="https://msdn.microsoft.com/en-us/library/windows/desktop/ms648009(v=vs.85).aspx" target="_blank" rel="noopener">https://msdn.microsoft.com/en-us/library/windows/desktop/ms648009(v=vs.85).aspx</a><br>eg.html为RT_HTML，对话框为RT_DIALOG。<br>参数三是要插入的资源的资源ID，常用MAKEINTRESOURCE(ID)形式。注意在使用前#define IDC_XXXX_XXXX  105定义（要和资源本身ID号相同），否则报错。<br>参数四是一个指向资源指针，注意只能是Unicode格式。<br>参数五是资源的大小size。</p>
<p>官方例子：<br><a href="https://msdn.microsoft.com/en-us/library/windows/desktop/ms648008(v=vs.85).aspx#_win32_Updating_Resources" target="_blank" rel="noopener">https://msdn.microsoft.com/en-us/library/windows/desktop/ms648008(v=vs.85).aspx#_win32_Updating_Resources</a><br>eg.该版比2008版msdn有小更改，现在的更清晰明了。</p>
<p>Updating Resources<br>目标：将Hand.exe中的dialog box资源插入到Foot.exe。<br>过程：<br>1.使用LoadLibrary函数加载Hand.exe。<br>2.使用FindResource和LoadResource函数定位和加载dialog box资源。<br>3.使用LockResource函数获得一个指向dialog box资源的指针。<br>4.使用BeginUpdateResource函数打开一个Foot.exe的更新句柄。<br>5.使用UpdateResource函数从Hand.exe复制dialog box资源到Foot.exe。<br>6.使用EndUpdateResource函数来完成更新。</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line">HGLOBAL hResLoad;   <span class="comment">// handle to loaded resource</span></span><br><span class="line">HMODULE hExe;       <span class="comment">// handle to existing .EXE file</span></span><br><span class="line">HRSRC hRes;         <span class="comment">// handle/ptr. to res. info. in hExe</span></span><br><span class="line">HANDLE hUpdateRes;  <span class="comment">// update resource handle</span></span><br><span class="line">LPVOID lpResLock;   <span class="comment">// pointer to resource data</span></span><br><span class="line">BOOL result;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> IDD_HAND_ABOUTBOX   103</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> IDD_FOOT_ABOUTBOX   110</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Load the .EXE file that contains the dialog box you want to copy.</span></span><br><span class="line">hExe = LoadLibrary(TEXT(<span class="string">"hand.exe"</span>));</span><br><span class="line"><span class="keyword">if</span> (hExe == <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line">    ErrorHandler(TEXT(<span class="string">"Could not load exe."</span>));</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Locate the dialog box resource in the .EXE file.</span></span><br><span class="line">hRes = FindResource(hExe, MAKEINTRESOURCE(IDD_HAND_ABOUTBOX), RT_DIALOG);</span><br><span class="line"><span class="keyword">if</span> (hRes == <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line">    ErrorHandler(TEXT(<span class="string">"Could not locate dialog box."</span>));</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Load the dialog box into global memory.</span></span><br><span class="line">hResLoad = LoadResource(hExe, hRes);</span><br><span class="line"><span class="keyword">if</span> (hResLoad == <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line">    ErrorHandler(TEXT(<span class="string">"Could not load dialog box."</span>));</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Lock the dialog box into global memory.</span></span><br><span class="line">lpResLock = LockResource(hResLoad);</span><br><span class="line"><span class="keyword">if</span> (lpResLock == <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line">    ErrorHandler(TEXT(<span class="string">"Could not lock dialog box."</span>));</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Open the file to which you want to add the dialog box resource.</span></span><br><span class="line">hUpdateRes = BeginUpdateResource(TEXT(<span class="string">"foot.exe"</span>), FALSE);</span><br><span class="line"><span class="keyword">if</span> (hUpdateRes == <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line">    ErrorHandler(TEXT(<span class="string">"Could not open file for writing."</span>));</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Add the dialog box resource to the update list.</span></span><br><span class="line">result = UpdateResource(hUpdateRes,    <span class="comment">// update resource handle</span></span><br><span class="line">    RT_DIALOG,                         <span class="comment">// change dialog box resource</span></span><br><span class="line">    MAKEINTRESOURCE(IDD_FOOT_ABOUTBOX),         <span class="comment">// dialog box id</span></span><br><span class="line">    MAKELANGID(LANG_NEUTRAL, SUBLANG_NEUTRAL),  <span class="comment">// neutral language</span></span><br><span class="line">    lpResLock,                         <span class="comment">// ptr to resource info</span></span><br><span class="line">    SizeofResource(hExe, hRes));       <span class="comment">// size of resource info</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (result == FALSE)</span><br><span class="line">&#123;</span><br><span class="line">    ErrorHandler(TEXT(<span class="string">"Could not add resource."</span>));</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Write changes to FOOT.EXE and then close it.</span></span><br><span class="line"><span class="keyword">if</span> (!EndUpdateResource(hUpdateRes, FALSE))</span><br><span class="line">&#123;</span><br><span class="line">    ErrorHandler(TEXT(<span class="string">"Could not write changes to file."</span>));</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Clean up.</span></span><br><span class="line"><span class="keyword">if</span> (!FreeLibrary(hExe))</span><br><span class="line">&#123;</span><br><span class="line">    ErrorHandler(TEXT(<span class="string">"Could not free executable."</span>));</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="ShellExecute用法"><a href="#ShellExecute用法" class="headerlink" title="ShellExecute用法"></a>ShellExecute用法</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">ShellExecute(</span><br><span class="line">HWND hwnd, //父窗口句柄</span><br><span class="line">LPCSTR lpOperation, //操作类型</span><br><span class="line">LPCSTR lpFile, //要进行操作的文件或路径</span><br><span class="line">LPCSTR lpParameters, //当lpOperation为“explore”时指定要传递的参数，通常设为NULL</span><br><span class="line">LPCSTR lpDirectory, //指定默认目录，通常设为NULL</span><br><span class="line">INT nShowCmd //文件打开的方式，以通常方式还是最大化或最小化显示</span><br><span class="line">)</span><br></pre></td></tr></table></figure>
<p>eg：<br>ShellExecute(NULL,”open”,”calc.exe”,NULL,NULL,SW_SHOWNORMAL);//调用计算器<br>ShellExecute(NULL,”open”,”NOTEPAD.EXE”,NULL,NULL,SW_SHOWNORMAL);//调用记事本</p>
<p>详见<a href="https://msdn.microsoft.com/en-us/library/windows/desktop/bb762153(v=vs.85).aspx" target="_blank" rel="noopener">https://msdn.microsoft.com/en-us/library/windows/desktop/bb762153(v=vs.85).aspx</a></p>
]]></content>
      
        <categories>
            
            <category> 互联网 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> CPP </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[hexo搭建再记录]]></title>
      <url>https://hubojing.github.io/2017/10/08/hexo%E6%90%AD%E5%BB%BA%E5%86%8D%E8%AE%B0%E5%BD%95/</url>
      <content type="html"><![CDATA[<p><div align="left"><br><img src="https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1511116107294&di=a91ad5adc5431ecb1865be565f7b0e82&imgtype=0&src=http%3A%2F%2Fpic4.zhimg.com%2Fd4c1239e75c02e8482c22017a6c8d407_r.jpg" width="300" height="180" style="float:right;"><br>  </div><br>  　　<br>  　　<br>  　<strong>博客部署莫名崩了…重新搭建</strong><br>  　<br>  　问题突然解决　　<br>  　有新收获<br>　　<br><a id="more"></a></p>
<h1 id="hexo五步法"><a href="#hexo五步法" class="headerlink" title="hexo五步法"></a>hexo五步法</h1><p>安装hexo所需的node.js和git不再赘述。在所需目录下git bash，输入以下五步即可生成本地博客页面。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-cli -g</span><br><span class="line">hexo init blog</span><br><span class="line">cd blog</span><br><span class="line">npm install</span><br><span class="line">hexo server</span><br></pre></td></tr></table></figure></p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20171008222407752?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="1" title="">
                </div>
                <div class="image-caption">1</div>
            </figure>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20171008222452237?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="2" title="">
                </div>
                <div class="image-caption">2</div>
            </figure>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20171008222651217?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="4-1" title="">
                </div>
                <div class="image-caption">4-1</div>
            </figure>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20171008222800055?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="4-2" title="">
                </div>
                <div class="image-caption">4-2</div>
            </figure>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20171008222849267?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="5" title="">
                </div>
                <div class="image-caption">5</div>
            </figure>
<p>在浏览器中输入localhost:4000即可查看本地页面。<br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20171008222951058?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="localhost" title="">
                </div>
                <div class="image-caption">localhost</div>
            </figure></p>
<p>我们看一看生成了哪些文件。<br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20171008223056199?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="blog" title="">
                </div>
                <div class="image-caption">blog</div>
            </figure><br>根目录里生成了一个名为”blog“的文件夹。</p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20171008223149155?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="blog文件夹下" title="">
                </div>
                <div class="image-caption">blog文件夹下</div>
            </figure>
<p>1是node.js的模块，2是模板，3是源文件，4是主题，5是git用来忽略生成文件的，6是hexo配置文件，7是数据文件，8是各种包?。<br>1中已有：<br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20171008225501020?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="node_modules" title="">
                </div>
                <div class="image-caption">node_modules</div>
            </figure></p>
<p>这是目前我本地已安装的插件：<br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20171008225756148?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="所需的插件" title="">
                </div>
                <div class="image-caption">所需的插件</div>
            </figure></p>
<hr>
<blockquote>
<p>问题：国庆假期部署不上来，<code>hexo d</code>后正常跑文件然后卡住，许久（感觉至少半小时+）报错：fatal: sha1 file ‘<stdout>‘ write error: Broken pipe</stdout></p>
</blockquote>
<p>此前只进行过2种不常用操作：<br>1.一次merge<br>2.更改了博客本地目录电脑的管理员用户名</p>
<p>说一下我做过的<strong>抢救</strong>：<br>1.三次revert回滚操作——没用<br>感谢iny的pull request，让我对git命令行操作又了解了一些，并且熟悉了github客户端操作。这次的问题不是merge的问题。<br>为什么如此肯定呢？</p>
<p>2.重设ssh——也许起到了作用<br>既然和merge无关，只可能和访问权限有关了。那ssh全部清空重设，github上的公钥也清空重来。注意：像我这样部署到github和coding的，别忘了coding也要重设ssh。<br>不过还是部署失败。真是迷一般的问题哟。影响放假心情，文章写好了发不出去的苦恼……</p>
<p>2.再次搭建——助攻<br>我将原有博客文件放入hexo1文件夹中。按照上述五步法再次搭建了一个新的博客放入hexo文件夹，复制相关文件（merge前）后再次部署依然不奏效。但是！！！<br>此时再次部署hexo1中的老博客，出现<br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20171009224309375?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="强制升级" title="">
                </div>
                <div class="image-caption">强制升级</div>
            </figure><br>强制升级！</p>
<p>此时博客终于是成功部署了。迷一样的问题，迷一样的解决。我都准备保留文章放弃其他所有换新（心疼好不容易再次冲破五千的浏览量差点又要归零）的。</p>
<p>但是有没有什么不同之处呢？有。请看：<br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20171009224627646?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="新博客" title="">
                </div>
                <div class="image-caption">新博客</div>
            </figure></p>
<p>现在commit数只有6次。以前有372次，被冲掉了。（新瓶装旧酒→<em>→）<br>估计是它以为是新项目了吧，删除了之前的commit记录。<br>被冲掉竟然有一点开心，因为原来370+次刚开始都是特别小的不值得提交的改动，浪费版本号或者新增一条无意义的记录都是不恰当的行为。（新手重灾区=</em>=）</p>
<p>另外，这几天解决这个问题时，顺带终于是解了惑——为什么github上的项目和本地文件不同，压根用不了<code>git pull</code>和<code>git push</code>命令。也离年初立的flag：看懂主题文件，修改出自己满意的主题风格更近一步。</p>
<p>关于多机同步，这是个好帖子：<br><a href="https://www.zhihu.com/question/21193762" target="_blank" rel="noopener">https://www.zhihu.com/question/21193762</a></p>
<p>需要拷贝到另一台电脑必备的文件：_config.yml，theme/，source/，scaffolds/，package.json，.gitignore</p>
]]></content>
      
        <categories>
            
            <category> 互联网 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[组装PC]]></title>
      <url>https://hubojing.github.io/2017/09/17/%E7%BB%84%E8%A3%85PC/</url>
      <content type="html"><![CDATA[<p><div align="left"><br><img src="https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1505674422344&di=a8ab789e32fb918dff6341a7ca58a94b&imgtype=0&src=http%3A%2F%2Fpica.nipic.com%2F2007-08-07%2F20078717255666_2.jpg" width="300" height="180" style="float:right;"><br>  </div><br>  　　<br>  　　<br>炒房不如炒ssd和内存条<br>如果有人一年前买入三十万根内存条……　　<br>　　<br>　　<br><a id="more"></a><br>现需组装一台台式机。<br>目标：高性能<br>要求：大型游戏（看门狗系列……）、程序员办公需求（编译速度提升）、能做和3D有关的工作<br>所需设备： 除显示器、主机机箱、键鼠、音响、散热器暂不考虑外的一切硬件。<br>预算：暂定5k~6k吧，优先考虑性能</p>
<p>最终已入：<br>电源：<br>长城（GreatWall） 额定600W HOPE-7000DS电源 （60cm超长输出线/主动式PFC/静音风扇）<br>京东价：339<br>链接：<a href="https://item.jd.com/1237194.html" target="_blank" rel="noopener">https://item.jd.com/1237194.html</a></p>
<p>硬盘（机械+固态）：<br>希捷(SEAGATE)酷鱼系列 1TB 7200转64M SATA3 台式机机械硬盘(ST1000DM010)<br>京东价：295<br>链接：<a href="https://item.jd.com/3843702.html" target="_blank" rel="noopener">https://item.jd.com/3843702.html</a></p>
<p>三星(SAMSUNG) 850 EVO 250G SATA3 固态硬盘<br>京东价：649<br>链接：<a href="https://item.jd.com/1279827.html" target="_blank" rel="noopener">https://item.jd.com/1279827.html</a></p>
<p>内存条：<br>宇瞻（Apacer） 黑豹玩家系列 DDR4 台式机内存 2400 8G<br>京东价：539<br>链接：<a href="https://item.jd.com/10209750055.html" target="_blank" rel="noopener">https://item.jd.com/10209750055.html</a></p>
<p>CPU:<br>锐龙 AMD Ryzen 5 1600X 处理器6核AM4接口 3.6GHz 盒装</p>
<p>主板：<br>华硕（ASUS）PRIME B350-PLUS 主板（AMD B350/socket AM4）</p>
<p>CPU主板套装<br>京东价：2298<br>链接：<a href="https://item.jd.com/4060505.html#crumb-wrap" target="_blank" rel="noopener">https://item.jd.com/4060505.html#crumb-wrap</a></p>
<p>显卡：<br>铭瑄（MAXSUN）GTX1060终结者6G 1506-1708/8000MHz/6G/192bit GDDR5 PCI-E 3.0显卡<br>京东价：1899<br>链接：<a href="https://item.jd.com/3377596.html" target="_blank" rel="noopener">https://item.jd.com/3377596.html</a></p>
<p>共计：6019</p>
<hr>
<p>感谢所有人的意见！<br>更新清单：<br>华硕 PRIME B350M-A 主板+锐龙 AMD Ryzen5 1600X CPU主板套装<br>京东价：2259<br>链接：<a href="http://item.jd.com/4817560.html" target="_blank" rel="noopener">http://item.jd.com/4817560.html</a></p>
<p>内存条：<br>十铨（Team）Elite系列 DDR4 2133 8GB 台式机内存 x 2<br>京东价：499 x 2 = 998<br>链接：<a href="https://item.jd.com/1269597.html#none" target="_blank" rel="noopener">https://item.jd.com/1269597.html#none</a></p>
<p>独立显卡：<br>微星 MSI GTX 1050 Ti GAMING X 4G 128BIT GDDR5 PCI-E 3.0 显卡<br>京东价：1299<br>链接：<a href="https://item.jd.com/3977224.html" target="_blank" rel="noopener">https://item.jd.com/3977224.html</a></p>
<p>或</p>
<p>索泰（ZOTAC）GeForce GTX1050Ti-4GD5 X-GAMING OC 1354-1468MHz/7008MHz 4G/128bit GDDR5 PCI-E显卡<br>京东价：1299<br>链接：<a href="https://item.jd.com/3528459.html" target="_blank" rel="noopener">https://item.jd.com/3528459.html</a></p>
<p>硬盘：<br>东芝(TOSHIBA) A100系列 240G SATA3固态硬盘<br>京东价：599<br>链接：<a href="https://item.jd.com/3219717.html#crumb-wrap" target="_blank" rel="noopener">https://item.jd.com/3219717.html#crumb-wrap</a></p>
<p>希捷(SEAGATE)酷鱼系列 1TB 7200转64M SATA3 台式机机械硬盘(ST1000DM010)<br>京东价：329<br>链接：<a href="https://item.jd.com/3843702.html#crumb-wrap" target="_blank" rel="noopener">https://item.jd.com/3843702.html#crumb-wrap</a></p>
<p>电源：<br>长城（GreatWall） 额定600W HOPE-7000DS电源 （60cm超长输出线/主动式PFC/静音风扇）<br>京东价：369<br>链接：<a href="https://item.jd.com/1237194.html" target="_blank" rel="noopener">https://item.jd.com/1237194.html</a></p>
<p>总计：5853</p>
<hr>
<p>（旧单已作废）<br>看了一下午，列个清单：<br>CPU：<br>锐龙 AMD Ryzen 7 1700 处理器8核AM4接口 3.0GHz 盒装<br>京东价：2199<br>链接：<a href="https://item.jd.com/3885181.html" target="_blank" rel="noopener">https://item.jd.com/3885181.html</a></p>
<p>主板：<br>华硕（ASUS）TUF B350M-PLUS GAMING 主板（AMD B350/socket AM4）<br>京东价：799<br>链接：<a href="https://item.jd.com/5001445.html#crumb-wrap" target="_blank" rel="noopener">https://item.jd.com/5001445.html#crumb-wrap</a></p>
<p>或</p>
<p>技嘉（GIGABYTE）AB350M-Gaming 3 主板 (AMD B350/Socket AM4)  （送散热+硅胶）<br>京东价：699<br>链接：<a href="https://item.jd.com/4482434.html#none" target="_blank" rel="noopener">https://item.jd.com/4482434.html#none</a></p>
<p>内存条：<br>十铨（Team） DDR4 2400 4GB 台式机内存   两根<br>京东价：279*2=558<br>链接：<a href="https://item.jd.com/1801667.html" target="_blank" rel="noopener">https://item.jd.com/1801667.html</a></p>
<p>或<br>十铨（Team） DDR4 2400 8GB 台式机内存  一根（以后再双通道）<br>京东价：509<br><a href="https://item.jd.com/1801660.html" target="_blank" rel="noopener">https://item.jd.com/1801660.html</a></p>
<p>本想8Gx2的，可是现在的内存条是不是太贵了点。。。</p>
<p>独立显卡：<br>七彩虹（Colorful）iGame1060 烈焰战神S-6GD5 Top GTX1060 1594-1809MHz/8008MHz 6G/192bit GDDR5游戏显卡<br>京东价：2099<br>链接：<a href="https://item.jd.com/3342660.html#crumb-wrap" target="_blank" rel="noopener">https://item.jd.com/3342660.html#crumb-wrap</a></p>
<p>硬盘：<br>西部数据(WD)日常存储解决方案 (蓝盘1TB HDD + Green系列120G SSD)<br>京东价：666<br><a href="https://item.jd.com/4242118.html" target="_blank" rel="noopener">https://item.jd.com/4242118.html</a></p>
<p>电源：<br>长城（GreatWall） 额定600W HOPE-7000DS电源 （60cm超长输出线/主动式PFC/静音风扇）<br>京东价：369<br>链接：<a href="https://item.jd.com/1237194.html" target="_blank" rel="noopener">https://item.jd.com/1237194.html</a></p>
<p>散热硅胶：<br><del>酷冷至尊（CoolerMaster）黄金导热硅脂</del><br><del>京东价：19.9</del><br><del>链接：<a href="https://item.jd.com/100391.html" target="_blank" rel="noopener">https://item.jd.com/100391.html</a></del><br>还是电脑维修店里几块钱的便宜……</p>
<p>总计：6690</p>
<hr>
<p>继续观望<br>总之未来要吃土<br>　　<br>非常欢迎各位大神给意见~</p>
]]></content>
      
        <categories>
            
            <category> 通信工程 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 硬件 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[网件R7000评测]]></title>
      <url>https://hubojing.github.io/2017/09/12/%E7%BD%91%E4%BB%B6R7000%E8%AF%84%E6%B5%8B/</url>
      <content type="html"><![CDATA[<div align="left"><br><img src="https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1505329097424&di=d41ee8551a7dc53b1862bbb892050dfc&imgtype=0&src=http%3A%2F%2Fwww.happysm.cn%2Fupfile%2Fproimage%2F201512914511662165.jpg" width="300" height="180" style="float:right;"><br><br> 　　<strong>等了一个月不降价，昨天到货今天就降价。。。。。。</strong><br>　　<br><br><br> </div>

<a id="more"></a>
<p>前言：11日到货，12日凌晨R8000就降价，比R7000只贵100元。 求我的心理阴影面积？</p>
<h1 id="开包"><a href="#开包" class="headerlink" title="开包"></a>开包</h1><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20170912233339989?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="包裹" title="">
                </div>
                <div class="image-caption">包裹</div>
            </figure>
<p>评测文里总是要拍一下包装，来证明自己是亲测不是盗图。。。。。。（忽略粉粉的码）</p>
<h1 id="实物"><a href="#实物" class="headerlink" title="实物"></a>实物</h1><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20170912233557678?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="正面" title="">
                </div>
                <div class="image-caption">正面</div>
            </figure>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20170912233625250?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="背面" title="">
                </div>
                <div class="image-caption">背面</div>
            </figure>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20170912233654422?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="开盒" title="">
                </div>
                <div class="image-caption">开盒</div>
            </figure>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20170912233722773?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="内含" title="">
                </div>
                <div class="image-caption">内含</div>
            </figure>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20170912233759091?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="接口" title="">
                </div>
                <div class="image-caption">接口</div>
            </figure>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20170912233833433?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="外观" title="">
                </div>
                <div class="image-caption">外观</div>
            </figure>
<p>AC1900智能无线路由器R7000 × 1 天线 × 3 安装指导 × 1 电源适配器 × 1<br><strong>实拍，无滤镜，无P图！让你看到一个真实的关机状态没绚丽闪光的买家秀。</strong></p>
<p>不拍了，安路由器五分钟，拍照半小时……</p>
<h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><ol>
<li>把天线装上<br>只能逆时针旋转……这个反人道的设计</li>
<li>拔掉原来的路由器</li>
<li>拔掉光猫电源</li>
<li>再插上光猫电源（why？重新接入网路？）</li>
<li>连上新路由器</li>
<li>插上新路由器电源</li>
<li>按下新路由器开关</li>
<li>等待指示灯闪到正常</li>
<li>连上网线<br>这样就安好了…</li>
</ol>
<h1 id="设置"><a href="#设置" class="headerlink" title="设置"></a>设置</h1><p>打开浏览器，第一次会自动进入，以后需输入：<a href="http://www.routerlogin.net访问。" target="_blank" rel="noopener">www.routerlogin.net访问。</a><br>傻瓜式设置（二次截图使图片有些高糊）：<br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20170913000131365?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="1" title="">
                </div>
                <div class="image-caption">1</div>
            </figure><br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20170913000248884?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="2" title="">
                </div>
                <div class="image-caption">2</div>
            </figure><br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20170913231227081?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="3" title="">
                </div>
                <div class="image-caption">3</div>
            </figure><br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20170913231323903?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="4" title="">
                </div>
                <div class="image-caption">4</div>
            </figure><br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20170913231442361?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="5" title="">
                </div>
                <div class="image-caption">5</div>
            </figure><br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20170913231514495?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="6" title="">
                </div>
                <div class="image-caption">6</div>
            </figure><br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20170913231547902?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="7" title="">
                </div>
                <div class="image-caption">7</div>
            </figure><br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20170913231645967?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="8" title="">
                </div>
                <div class="image-caption">8</div>
            </figure><br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20170913231726620?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="9" title="">
                </div>
                <div class="image-caption">9</div>
            </figure><br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20170913231813695?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="10" title="">
                </div>
                <div class="image-caption">10</div>
            </figure><br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20170913231906606?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="11" title="">
                </div>
                <div class="image-caption">11</div>
            </figure><br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20170913232002043?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="12" title="">
                </div>
                <div class="image-caption">12</div>
            </figure><br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20170913232058110?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="13" title="">
                </div>
                <div class="image-caption">13</div>
            </figure><br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20170913232143914?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="14" title="">
                </div>
                <div class="image-caption">14</div>
            </figure><br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20170913232501930?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="15" title="">
                </div>
                <div class="image-caption">15</div>
            </figure><br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20170913233050401?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="16" title="">
                </div>
                <div class="image-caption">16</div>
            </figure><br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20170913233159198?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="17" title="">
                </div>
                <div class="image-caption">17</div>
            </figure><br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20170913233247869?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="18" title="">
                </div>
                <div class="image-caption">18</div>
            </figure><br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20170913234326095?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="19" title="">
                </div>
                <div class="image-caption">19</div>
            </figure></p>
<h1 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h1><p>抱着了解的态度，不能当小白…</p>
<p>AC1900 Nighthawk R7000 双频千兆无线路由器<br>博通双核1G处理器  256M内存  并发双频  5个千兆端口 USB3.0  双USB接口 动态QoS  ReadyCLOUD</p>
<p>网件R7000上市时间是2014年6月<br>R7000P上市时间是2017年<br>R8500上市时间是2015年末<br>R9000上市时间是2016年</p>
<p>接着了解一些参数：<br>传输频段：<br>2.4G频段和5G频段:<br>2.4G 穿透性好 传输距离近<br>5G穿透性差 传输距离远</p>
<p>R7000 2.4G最高600M(200Mbps x 3)<br>5G最高1300M（433Mbps x 3）<br>（电视能搜到5G频段、笔记本却搜不到…）</p>
<p>无线桥接：无线桥接技术是一种局域网络无线连接的技术，是无线射频技术和传统的有线网桥技术相结合的产物，它可以无缝地将相隔数十公里的局域网络连接在一起，创建统一的企业或城域网络系统。在最简单的网络构架中，网桥的以太网端口连接到局域网中的某个集线器或交换机上，信号发射端口则通过电缆和天线相连接；通过这样的方式实现网络系统的扩展。<br>无线路由器的好处是：无需连接网线，手机、电脑同时共享网络。缺点是：有效距离短，还会被墙壁等障碍物屏蔽或减弱讯号。简单地说就是使用多个路由器扩大无线网络的范围。</p>
<p>WPS：路由器中WPS是由Wi-Fi联盟所推出的全新Wi-Fi安全防护设定(Wi-Fi Protected Setup)标准，该标准推出的主要原因是为了解决长久以来无线网络加密认证设定的步骤过于繁杂艰难之弊病，使用者往往会因为步骤太过麻烦，以致干脆不做任何加密安全设定，因而引发许多安全上的问题。WPS用于简化Wi-Fi无线的安全设置和网络管理。它支持两种模式：个人识别码(PIN)模式和按钮(PBC)模式。只要网卡支持WPS，路由也支持，只要电脑上点击WPS配对，然后按一下路由器上的WPS系统会自动的在两个设备之间建立连接，这种方式比输入密码更方便，更安全。</p>
<p>Qos：QoS（Quality of Service）服务质量，是网络的一种安全机制, 是用来解决网络延迟和阻塞等问题的一种技术。 在正常情况下，如果网络只用于特定的无时间限制的应用系统，并不需要QoS，比如Web应用，或E-mail设置等。但是对关键应用和多媒体应用就十分必要。当网络过载或拥塞时，QoS 能确保重要业务量不受延迟或丢弃，同时保证网络的高效运行。QoS限速对局域网内各个IP地址进行流量控制，以达到稳定而优质的上网的目的。这个功能对局域网内使用P2P下载占用大量带宽的情形有非常好的改善。</p>
<p>传输标准：IEEE 802.11n；IEEE 802.11g；IEEE 802.11b；IEEE 802.11.ac；IEEE 802.11.a<br>这个没什么说的。。。</p>
<p>电源    12V 3.5A</p>
<p>内网穿透：内网穿透即NAT穿透，网络连接时术语，计算机是局域网内时，外网与内网的计算机节点需要连接通信，有时就会出现不支持内网穿透。就是说映射端口,能让外网的电脑找到处于内网的电脑,提高下载速度。不管是内网穿透还是其他类型的网络穿透，都是网络穿透的统一方法来研究和解决。端口映射，其实就是常说的NAT地址转换的一种，其功能就是把在公网的地址转翻译成私有地址， 采用路由方式的ADSL宽带路由器拥有一个动态或固定的公网IP，ADSL直接接在HUB或交换机上，所有的电脑共享上网。在局域网内部的任一PC或服务器上运行到花生壳内网穿透客户端，此时域名解析到的IP地址是局域网网关出口处的公网IP地址，再在网关处做端口映射指向监控设备即可。</p>
<p>R7000不支持内网穿透。</p>
<p>R7000P比R7000多一个MU-MIMO<br>MU-MIMO：“Multi-User Multiple-Input Multiple-Output”的缩写，“多用户多入多出技术”，让路由器同时与多个设备沟通的技术。</p>
<h1 id="网速测试"><a href="#网速测试" class="headerlink" title="网速测试"></a>网速测试</h1><p>100M光纤</p>
<p>1笔记本：<br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20170913000407719?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="laptop" title="">
                </div>
                <div class="image-caption">laptop</div>
            </figure></p>
<p>1台式：<br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20170913000445094?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="pc" title="">
                </div>
                <div class="image-caption">pc</div>
            </figure></p>
<p>相比以前的TP老路由器，网速一脸满足…</p>
<p>一天下来，路由器有点发热。查了下，R7000是BCM芯片，ARM架构CPU，性能高但发热较大。三天线，比较公认的信号强覆盖广的一款家用路由，整体兼容性好。<br>另外，路由器还是白色好看（→_→）</p>
<hr>
<p>今天有个网易云好友私信我节日快乐。。。一脸懵圈，遂百度<br>9.13程序员节 一年中的第256天，2^8次方。。。。。。<br>好吧 节日快乐</p>
]]></content>
      
        <categories>
            
            <category> 通信工程 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 硬件 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[魅蓝Note6评测]]></title>
      <url>https://hubojing.github.io/2017/09/03/%E9%AD%85%E8%93%9DNote6%E8%AF%84%E6%B5%8B/</url>
      <content type="html"><![CDATA[<div align="left"><br><img src="https://gss0.baidu.com/7LsWdDW5_xN3otqbppnN2DJv/space/pic/item/962bd40735fae6cd608220ab05b30f2443a70fc1.jpg" width="300" height="180" style="float:right;"><br><br> 　　<strong>一篇如同水贴的评测。</strong><br>　　<br><br><br> </div>

<a id="more"></a>
<p>评测对象：9月1日上新的魅族新品魅蓝note6<br>骁龙625 3GB+32GB 4000mAh<br>价格：1299<br>定位：青年良品  （翻译：又穷又天真）</p>
<h1 id="外观"><a href="#外观" class="headerlink" title="外观"></a>外观</h1><p><a href="https://www.meizu.com/note6/spec/?click=mmz_product_note6_dh_cs" target="_blank" rel="noopener">官方参数</a></p>
<p>图片一手拍摄，全无PS。<br>包装：<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20170903155236962?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="外包装" title="">
                </div>
                <div class="image-caption">外包装</div>
            </figure></p>
<p>拆封1：<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20170903155555203?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="拆封1" title="">
                </div>
                <div class="image-caption">拆封1</div>
            </figure></p>
<p>拆封2：<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20170903155856055?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="拆封2" title="">
                </div>
                <div class="image-caption">拆封2</div>
            </figure></p>
<p>正面：<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20170903164310296?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="正面" title="">
                </div>
                <div class="image-caption">正面</div>
            </figure></p>
<p>背面：<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20170903164058460?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="背面" title="">
                </div>
                <div class="image-caption">背面</div>
            </figure><br>（就是忍不住想打个码）<br>名称解释：<br>TD-LTE，即LTE-TDD，Time Division Long Term Evolution（分时长期演进），LTE是基于OFDMA技术、由3GPP组织制定的全球通用标准，包括FDD和TDD两种模式用于成对频谱和非成对频谱。<br>IMEI，International Mobile Equipment Identity，是国际移动设备身份码的缩写，国际移动装备辨识码，是由15位数字组成的”电子串号”，它与每台移动电话机一一对应，而且该码是全世界唯一的。双卡双待手机会有两个IMEI，IMEI和IMSI存在一一对应的关系。因为双卡双待手机两个卡槽都能插SIM卡，在GSM蜂窝通信网络中被看作是集成在一起的两个设备，所以会被分配有2个IMEI码。<br>MEID，移动设备识别码(Mobile Equipment Identifier)是CDMA手机的身份识别码，也是每台CDMA手机或通讯平板唯一的识别码。通过这个识别码，网络端可以对该手机进行跟踪和监管。<br>输入 *#06# IMEI即手机串号。</p>
<p>问题来了，IMEI和MEID都可看作手机的身份证，区别在哪？<br>答：IMEI是GSM网络制式专用的身份编码，MEID是CDMA网络制式专用的身份识别编码，IMEI是一组纯数字的，而MEID是以字母开头的十六进制编码。使用不同制式的手机就会显示不同的码。</p>
<p>　当手机被盗的时候，如知道IEMI码，可以通过手机供应商进行手机锁定，即：获知被盗之后的手机号码，中止手机的通话功能，获知手机的方位。但……一般情况下，供应商不会对个人或单位提出的定位或锁定手机的请求进行受理。</p>
<p>SN码，Serial Number的缩写，有时也叫SerialNo，手机SN号一般指的是软件注册码信息，也就是产品序列号，产品序列是为了验证“产品的合法身份”而引入的一个概念，它是用来保障用户的正版权益，享受合法服务的；一套正版的产品只对应一组产品序列号。别称：机器码、认证码、注册申请码等。</p>
<p>使用Nano-SIM卡，真的麻烦……手残党还是不要自己剪卡了，得去营业厅更换。<br>SIM-&gt;microSIM-&gt;NanoSIM，为了优化内存和主板排布，更轻薄。<br>然后现实是……人们买了厂商费尽心思打造的更超薄的手机然后再去加个手机壳……so interesting</p>
<p>CMIIT ID，即无线电发射设备型号核准代码。</p>
<p>初始UI设计<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20170903164644449?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="UI1" title="">
                </div>
                <div class="image-caption">UI1</div>
            </figure></p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20170903164802558?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="UI2" title="">
                </div>
                <div class="image-caption">UI2</div>
            </figure>
<p>可以看到，系统出厂安装的第三方软件：手机百度、京东、微博、今日头条、淘宝、秒拍。自带的软件例如音乐、视频、读书、便签、工具箱等应用还是做得很不错的，感觉魅族特制的音乐有点虾米风，UI做得还是很简洁的，挺耐看，就是评论不堪入目……另，工具箱里的镜子好评……</p>
<p>底部是经典的腰圆键，轻触返回上级，按压Home，长按压出语音助手。</p>
<p>存储：<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20170903170610860?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="存储" title="">
                </div>
                <div class="image-caption">存储</div>
            </figure></p>
<p>32G有29G总容量不错了，没有特别臃肿。不过可用才21G，自带软件还是挺占地。</p>
<p>P.S.可以截图的地方为什么要拍照？。。。突然地我问自己。不禁想起了这张图：<br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20170903172233366?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="吐槽截图" title="">
                </div>
                <div class="image-caption">吐槽截图</div>
            </figure></p>
<h1 id="跑分"><a href="#跑分" class="headerlink" title="跑分"></a>跑分</h1><h2 id="鲁大师"><a href="#鲁大师" class="headerlink" title="鲁大师"></a>鲁大师</h2><p>现实配置：<br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20170903214636426?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="配置" title="">
                </div>
                <div class="image-caption">配置</div>
            </figure></p>
<p>性能总分：<br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20170903173851837?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="总分" title="">
                </div>
                <div class="image-caption">总分</div>
            </figure></p>
<p>这个分数还是配得起这个价钱吧。<br>CPU想让625赶上820，还是不可能的。<br><a href="http://www.mydrivers.com/zhuanti/tianti/01/" target="_blank" rel="noopener">手机CPU性能天梯图</a></p>
<p>体验总分：<br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20170903183533646?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="体验" title="">
                </div>
                <div class="image-caption">体验</div>
            </figure></p>
<p>VR检测：<br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20170903183736693?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="VR" title="">
                </div>
                <div class="image-caption">VR</div>
            </figure></p>
<h2 id="安兔兔"><a href="#安兔兔" class="headerlink" title="安兔兔"></a>安兔兔</h2><p>为了公平公正，自然不能只跑一个地方<br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20170903183949127?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="总分" title="">
                </div>
                <div class="image-caption">总分</div>
            </figure></p>
<p>配置：<br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20170903185133658?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="配置" title="">
                </div>
                <div class="image-caption">配置</div>
            </figure></p>
<p>手机设置里存储显示是29G，鲁大师和安兔兔都显示的是22G，有一丝诡异的感觉。。。相差的内存被空气吃掉了</p>
<p>再看一眼CPU<br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20170903185609876?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="CPU" title="">
                </div>
                <div class="image-caption">CPU</div>
            </figure></p>
<p>当然，还有官方拿出的“疾速双摄”……同时段小米也鼓吹“变焦双摄”……<br>主观来说不错，各种照相模式丰富，滤镜较多，贴纸都有了，不用安B612了……</p>
<p>所以为什么说这是一篇水贴的评测，因为我实在写不出“魅蓝Note6主摄引入只在旗舰机上出现的索尼IMX362/三星2L7模组，1200W+500W双彩后置镜头组合，F/1.9超大光圈。　除了双摄，算法方面，魅蓝耗费重金打造的虹软双摄技术，官方称可针对人像背景虚化和暗光多帧降噪功能进行优化，大幅提升虚化真实度。据悉，每台魅蓝Note6需支付1美元给虹软公司。但在实际体验过程中，虚化会抹掉一些前景细节，自然程度仍旧有待提升。Dual PD极速对焦技术，让Note6对焦速度快达0.03s，实际对比体验中，魅蓝对焦速度惊人，甚至超过iPhone 7。其他方面，在光亮条件下，Note6的色彩还原、高光曝光控制与白平衡都有着不错表现，更偏写实风格。但HDR合成反应速度较慢，且在自拍模式下，色彩饱和度不高。夜拍环境中，魅蓝表现噪点控制强、亮度高，但是亮度细节会有曝光过度的问题，暗部细节丰富。Note6的慢镜头功能提供给用户更有有趣的拍摄方式，但是该模式下，噪点明显偏多。”这都归结于我对摄影没有很多的研究。当然摄影听起来就很有艺术气息……</p>
<p>　游戏表现上，我觉得把玩王者荣耀不卡当成一个标杆是不科学的，因为一个几百块的手机都能做到。不过比较个帧率还是可行的。</p>
<p>都学小米搞饥饿营销……为什么不出4G+64G版？？？说好的1699在哪里？说好的蓝色在哪里……听说黑色也没了</p>
<p>总评：作为千元机，CPU、ROM、RAM、电池容量、相机像素这几个我看重的硬指标基本令人满意。以及，我不适合写软文。</p>
<p>规定1500左右的价位，其实就性价比而言，不追求品牌，只追求性能的话，360的N5S可能最佳（前提是官方参数是真实不参假的），奈何360全家桶实在让人望而生畏……小米同等价位的性能也是比较高的，但考虑到使用者之前深受小米折磨，于是不再考虑。联想性价比也高，可惜好像放弃手机这一块了。若只考虑品牌，华为或荣耀最佳。兼顾品牌和性能，又需上市时间较近，只剩魅族可选了。</p>
<p>最后，手机停留在我手上时间太短(2h)，无法检测电池和通话等耗时操作。</p>
<p>另外，我对一加5神机充满好奇，稳居各大评测前3是一种怎样的体验？</p>
]]></content>
      
        <categories>
            
            <category> 通信工程 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 硬件 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[三维坐标旋转]]></title>
      <url>https://hubojing.github.io/2017/08/31/%E4%B8%89%E7%BB%B4%E5%9D%90%E6%A0%87%E6%97%8B%E8%BD%AC/</url>
      <content type="html"><![CDATA[<div align="left"><br><img src="https://ss0.bdstatic.com/94oJfD_bAAcT8t7mm9GUKT-xh_/timg?image&quality=100&size=b4000_4000&sec=1504196242&di=148a19814e3d8e2bc96751304edf53ba&src=http://a4.att.hudong.com/13/71/01300542856671145949714084001_s.jpg" width="300" height="180" style="float:right;"><br> 　　<br> 　　<br>　　<strong>由上一篇引发的续问。　</strong>　<br> 　　<br>　　<br>　　<br> </div>

<a id="more"></a>
<p>其实上一篇的想法都是为了这个问题进行铺垫：<br>已知任意三维坐标系中一条线上两点坐标AB，及该线绕A点任意方向旋转后B’的坐标，求B点经过怎样的变换（如先绕x轴旋转多少度，再绕y轴转多少度，再绕z轴绕多少度）得到B’。</p>
<p>弄清楚这个问题前，首先需要声明一点：<br><strong>三维空间中，旋转角不能单纯的认为是某点关于x、y、z轴的旋转角度的线性叠加。</strong></p>
<p>认清这一点后，就应老实放弃向每个平面做投影算旋转角的错误方法。</p>
<p>旋转说穿了是矩阵的相乘。</p>
<p>然后从特殊情况入手，再从特殊到一般。</p>
<p>特殊情况：<br>1.旋转轴是x轴<br>2.旋转轴是y轴<br>3.旋转轴是z轴</p>
<p>一般情况：<br>旋转轴是任意直线</p>
<p>推导过程网上很多资料，其中，绕x、y、z轴的公式见<a href="http://blog.miskcoo.com/2016/12/rotation-in-3d-space" target="_blank" rel="noopener">三维空间中的旋转</a> ，markdown写数学公式太麻烦了。</p>
<p>旋转轴是任意直线，参考<a href="http://blog.sina.cn/dpool/blog/s/blog_6541e59a0101kukr.html" target="_blank" rel="noopener">三维旋转矩阵的计算</a></p>
<p>回到开头问题，既然已知B和B’，和A三点组成一个面，求出它的法向量，结合BB’中垂线，可算出该点的旋转轴向量。将该向量平移到原点处，再使用欧拉角计算旋转向量，进而得到所需要的x、y、z轴旋转角度（这是有顺序的）。这种方法得到的角度如果旋转顺序不同，则得到的解不同。当然最后别忘了反平移回去。<br>四元数的形式看起来简单些，可惜四元数里的角度不是所希望的关于x、y、z轴的三个角度值。</p>
]]></content>
      
        <categories>
            
            <category> 互联网 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 3D </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[三维坐标系变换]]></title>
      <url>https://hubojing.github.io/2017/08/29/%E4%B8%89%E7%BB%B4%E5%9D%90%E6%A0%87%E7%B3%BB%E5%8F%98%E6%8D%A2/</url>
      <content type="html"><![CDATA[<div align="left"><br><img src="https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1504032008394&di=e99e963bf5137db65c21d19b5589cb26&imgtype=0&src=http%3A%2F%2Fpic.58pic.com%2F58pic%2F16%2F55%2F89%2F38258PICNZn_1024.jpg" width="300" height="180" style="float:right;"><br> </div>

<p>　　<strong>关于三维坐标变换的一些思考。　</strong><br>　　<strong>从两条相交直线说起。</strong><br>　　<br>　　<br><a id="more"></a><br>从最简单的情况入手，求空间两条相交直线AB、BC的夹角，AB和BC相交于B点，已知ABC三点三维坐标。<br>假设两条直线向量分别为a(x1,y1,z1),b(x2,y2,z2),根据公式cosα=a·b/(|a|*|b|)=(x1x2+y1y2+z1z2)/[√(x1^2+y1^2+z1^2)+√(x2^2+y2^2+z2^2)] 可直接求得。</p>
<p>情况变一变：<br>以此两条直线中的某一条为基准（为z’轴），求另一条直线关于基准线的x’、y’、z’轴（新的基准坐标系）夹角。</p>
<p>如果不用矩阵的做法，求解很复杂：<br>以AB为新的坐标系Z’轴为例，O为原坐标系原点。<br>B’(0,0,0)，可求AB点距离s，则A’(0,0,s)。这还是比较容易的，关键是求C’坐标。<br>首先要求z轴和AB之间的各种角度，想象从Z轴先延x轴平移绕x轴旋转，再延y轴平移绕y轴旋转，最后延z轴平移绕z轴旋转。同理，C点做同类运动，得到C’。<br>千辛万苦得到C’还没完，再将B’C’分别向x’o’y’、y’o’z’、z’o’x’面投影，求关于基准线的夹角。方可算出所求。</p>
<p>很明显，这种方法显然不适用在3D中。<br>这个问题其实等价于将世界坐标系转换为物体坐标系。,矩阵的作用就发挥广大。</p>
<p>令原坐标系为M=(i,j,k)T（转置），变换后N=(i’,j’,k’)T，i=(1,0,0),j=(0,1,0),k=(0,0,1)<br>原坐标系中一点P为(x,y,z)，则P’=((x,y,z)-O’)N^(-1)   N^(-1)指N的逆矩阵  (若N为正交矩阵，无需求逆矩阵，求转置矩阵即可。)</p>
<p>推导：∵P=O+(x,y,z)M=O’+(x’,y’,z’)N<br>∴(x’,y’,z’)=((x,y,z)M+(O-O’))N^(-1)<br>此时O’=(0，0，0),并带入M，则上式得证。</p>
<p>综上所述，讨论的情况实质就是进行了坐标系的转换。目的是求C’坐标，假设A(a1,b1,c1),B(a2,b2,c2),C(a3,b3,c3),那么根据公式C’=((a3,b3,c3)-(a2,b2,c2))N^(-1)，问题就转化为求N。记N=MK，K=M^(-1)N，也就是说，K是将i,j,k装换为i’,k’,j’的变换矩阵。<br>N^(-1)=(MK)^(-1)=K^(-1)M^(-1)<br>∴(x’,y’,z’)=((x,y,z)M+(O-O’))K^(-1)M^(-1)<br>=((x,y,z)+(-O’))K^(-1)  K=N</p>
<p>怎么求K呢？</p>
<p>可以参考这篇文章<a href="http://blog.csdn.net/jc_laoshu/article/details/69657579" target="_blank" rel="noopener">图形学1-三维坐标系间的变换矩阵推导</a></p>
<p>看似也挺麻烦，其实推导占据了大量篇幅，真正使用时直接套就好了。</p>
]]></content>
      
        <categories>
            
            <category> 互联网 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 3D </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[古风自动造句器]]></title>
      <url>https://hubojing.github.io/2017/08/10/%E5%8F%A4%E9%A3%8E%E8%87%AA%E5%8A%A8%E9%80%A0%E5%8F%A5%E5%99%A8/</url>
      <content type="html"><![CDATA[<div align="left"><br><img src="https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1502983864&di=4ae6d79210dfb4ff7b9b0fd9c23807de&imgtype=jpg&er=1&src=http%3A%2F%2Fimg4.duitang.com%2Fuploads%2Fblog%2F201306%2F27%2F20130627144045_5KSSc.jpeg" width="300" height="180" style="float:right;"><br> </div>

<p>　　小桥流水肯定有人家，<br>　　两人对坐必须在饮茶。<br>　　为何提笔再难描绘出风雅。　　</p>
<p>　　<strong>一个C++古风自动写诗器。V1.1上线</strong><br>　　【注意：有背景音乐！】</p>
<a id="more"></a>
<p>灵感来自<br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20170810230338826?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="古风" title="">
                </div>
                <div class="image-caption">古风</div>
            </figure></p>
<p>今天看到这个，突然就想到文中提到的这个想法不难实现哇~那自己实现一个玩玩儿吧，主要就是个产生随机数的问题嘛~</p>
<h1 id="V1-0"><a href="#V1-0" class="headerlink" title="V1.0"></a>V1.0</h1><p>上代码：<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> CPoetryDlg::OnBnClickedOk()</span><br><span class="line">&#123;</span><br><span class="line">	<span class="comment">// <span class="doctag">TODO:</span>  在此添加控件通知处理程序代码</span></span><br><span class="line">	CStdioFile file;</span><br><span class="line">	CString strLine, strtemp;</span><br><span class="line">	<span class="keyword">char</span> *single[<span class="number">68</span>];</span><br><span class="line">	<span class="keyword">char</span> *wanted[<span class="number">8</span>];</span><br><span class="line">	<span class="keyword">if</span> (!file.Open(_T(<span class="string">"d:\\1.txt "</span>), CFile::modeRead))</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">return</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">int</span> row = <span class="number">0</span>; </span><br><span class="line">	<span class="keyword">while</span> (file.ReadString(strLine))</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">char</span> *str = strLine.GetBufferSetLength(strLine.GetLength());</span><br><span class="line">		<span class="keyword">char</span> *p;</span><br><span class="line">		</span><br><span class="line">		<span class="keyword">int</span> i = <span class="number">0</span>, k = <span class="number">0</span>;</span><br><span class="line">		<span class="keyword">char</span> *buf;</span><br><span class="line">		<span class="keyword">if</span> (strLine != <span class="string">""</span>)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">for</span> (p = strtok_s(str, <span class="string">"、"</span>, &amp;buf); p != <span class="literal">NULL</span>; p = strtok_s(<span class="literal">NULL</span>, <span class="string">"、"</span>, &amp;buf))</span><br><span class="line">			&#123;</span><br><span class="line">				single[i] = p;</span><br><span class="line">				i++;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">			CString strSum = <span class="string">""</span>;</span><br><span class="line">			srand((<span class="keyword">unsigned</span>)time(<span class="literal">NULL</span>));</span><br><span class="line">			<span class="keyword">for</span> (<span class="keyword">int</span> m = <span class="number">0</span>; m &lt; <span class="number">6</span>; m++)</span><br><span class="line">			&#123;</span><br><span class="line">				<span class="keyword">int</span> j = random(<span class="number">68</span>);</span><br><span class="line">				wanted[m] = single[j];</span><br><span class="line">				strtemp = wanted[m];</span><br><span class="line">				strSum= strSum + strtemp;</span><br><span class="line">			&#125;</span><br><span class="line">			strSum = strSum + <span class="string">"\r\n"</span>;</span><br><span class="line">			<span class="keyword">for</span> (<span class="keyword">int</span> m = <span class="number">0</span>; m &lt; <span class="number">4</span>; m++)</span><br><span class="line">			&#123;</span><br><span class="line">				<span class="keyword">int</span> j = random(<span class="number">68</span>);</span><br><span class="line">				wanted[m] = single[j];</span><br><span class="line">				strtemp = wanted[m];</span><br><span class="line">				strSum = strSum + strtemp;</span><br><span class="line">			&#125;</span><br><span class="line">			strSum = strSum + <span class="string">"\r\n"</span>;</span><br><span class="line"></span><br><span class="line">			<span class="keyword">for</span> (<span class="keyword">int</span> m = <span class="number">0</span>; m &lt; <span class="number">5</span>; m++)</span><br><span class="line">			&#123;</span><br><span class="line">				<span class="keyword">int</span> j = random(<span class="number">68</span>);</span><br><span class="line">				wanted[m] = single[j];</span><br><span class="line">				strtemp = wanted[m];</span><br><span class="line">				strSum = strSum + strtemp;</span><br><span class="line">			&#125;</span><br><span class="line">			strSum = strSum + <span class="string">"\r\n"</span>;</span><br><span class="line"></span><br><span class="line">			<span class="keyword">for</span> (<span class="keyword">int</span> m = <span class="number">0</span>; m &lt; <span class="number">4</span>; m++)</span><br><span class="line">			&#123;</span><br><span class="line">				<span class="keyword">int</span> j = random(<span class="number">68</span>);</span><br><span class="line">				wanted[m] = single[j];</span><br><span class="line">				strtemp = wanted[m];</span><br><span class="line">				strSum = strSum + strtemp;</span><br><span class="line">			&#125;</span><br><span class="line">			SetDlgItemText(IDC_EDIT2,strSum);</span><br><span class="line">			SetDlgItemText(IDC_EDIT1, <span class="string">"烟、倾、萧、墨、歌、弦、痴、泠、幽、离、覆、寂、情、思、恋、醉、浅、尘、念、葬、负、梦、韶、陌、落、琴、夜、君、殇、朱砂、韶华、江南、烟雨、迷离、红尘、寂寞、繁华、风华、苍老、红颜、天下、彼岸、伊人、青丝、白首、陌上、千年、倾城、断弦、长歌、悲欢、沧海、天涯、尘缘、情殇、忘川、碧落、奈何、指尖、长安、青鸾、凤凰、桃花、海棠、红妆、婆娑、轻狂、未央"</span>);</span><br><span class="line"></span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	file.Close();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>当然了，这个代码写的非常的粗糙，很多可以改进之处，我就是特别想先看到一个能运行的结果，后续再来慢慢改咯~丑陋的V1.0<br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20170810230733878?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="1" title="">
                </div>
                <div class="image-caption">1</div>
            </figure></p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20170810233547056?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="2" title="">
                </div>
                <div class="image-caption">2</div>
            </figure>
<p>P.S.哈哈哈哈哈哈好想笑这自动生成的诗句  这个时候背景音乐应该是浮夸</p>
<p>随便赋几首机器作诗：<br>未央忘川梦千年长安韶<br>尘缘君幽繁华<br>风华夜梦离红妆<br>海棠烟寂痴</p>
<p>海棠白首伊人悲欢负歌<br>红妆迷离苍老覆<br>韶华红妆尘缘萧寂寞<br>墨奈何歌白首</p>
<p>彼岸覆迷离浅烟雨伊人<br>长安倾城碧落倾<br>未央倾奈何韶华陌上<br>天下迷离朱砂千年</p>
<p>苍老覆红妆陌长安青鸾<br>繁华红尘落殇<br>迷离轻狂海棠思梦<br>恋倾凤凰浅</p>
<p>可以改进的地方：<br>1.分成动词、名词 单字、双字  放在多个txt中读取<br>2.四个暴力循环可以改一改……看着太扎心了<br>3.可以增加重复词审查过滤<br>4.扩大词库<br>5.按现代诗、古诗字数韵律等分配每个循环里的约束条件</p>
<h1 id="V1-1"><a href="#V1-1" class="headerlink" title="V1.1"></a>V1.1</h1><p>因为数组不定长，换成vector实现。同时扩大了词库，换了种句式……</p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br></pre></td><td class="code"><pre><span class="line">CStdioFile file;</span><br><span class="line">	CString strLine, strtemp;</span><br><span class="line">	<span class="built_in">std</span>::<span class="built_in">vector</span>&lt;CString&gt;Word;</span><br><span class="line">	<span class="built_in">std</span>::<span class="built_in">vector</span>&lt;CString&gt;Selected;</span><br><span class="line">	<span class="keyword">if</span> (!file.Open(_T(<span class="string">"d:\\1.txt "</span>), CFile::modeRead))</span><br><span class="line">	&#123;</span><br><span class="line">		ASSERT(FALSE);</span><br><span class="line">		<span class="keyword">return</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">while</span> (file.ReadString(strLine))</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">int</span> len = strLine.GetLength();</span><br><span class="line">		</span><br><span class="line">		<span class="keyword">char</span> *str = strLine.GetBufferSetLength(strLine.GetLength());</span><br><span class="line">		<span class="keyword">char</span> *p;</span><br><span class="line">		</span><br><span class="line">		<span class="keyword">int</span> i = <span class="number">0</span>, k = <span class="number">0</span>;</span><br><span class="line">		<span class="keyword">char</span> *buf;</span><br><span class="line">		<span class="keyword">if</span> (strLine != <span class="string">""</span>)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">for</span> (p = strtok_s(str, <span class="string">"、"</span>, &amp;buf); p != <span class="literal">NULL</span>; p = strtok_s(<span class="literal">NULL</span>, <span class="string">"、"</span>, &amp;buf))</span><br><span class="line">			&#123;</span><br><span class="line">				Word.push_back(p);</span><br><span class="line">				i++;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">			CString strSum = <span class="string">""</span>;</span><br><span class="line">			srand((<span class="keyword">unsigned</span>)time(<span class="literal">NULL</span>));</span><br><span class="line">			<span class="keyword">for</span> (<span class="keyword">int</span> m = <span class="number">0</span>; m &lt; <span class="number">3</span>; m++)</span><br><span class="line">			&#123;</span><br><span class="line">				<span class="keyword">int</span> j = random(i);</span><br><span class="line">				Selected.push_back(Word.at(j));</span><br><span class="line">				strtemp = Selected.at(m);</span><br><span class="line">				strSum= strSum + strtemp;</span><br><span class="line">			&#125;</span><br><span class="line">			strSum = strSum + <span class="string">"，"</span>;</span><br><span class="line">			<span class="keyword">for</span> (<span class="keyword">int</span> m = <span class="number">3</span>; m &lt; <span class="number">7</span>; m++)</span><br><span class="line">			&#123;</span><br><span class="line">				<span class="keyword">int</span> j = random(i);</span><br><span class="line">				Selected.push_back(Word.at(j));</span><br><span class="line">				strtemp = Selected.at(m);</span><br><span class="line">				strSum = strSum + strtemp;</span><br><span class="line">			&#125;</span><br><span class="line">			strSum = strSum + <span class="string">"，"</span>;</span><br><span class="line">			strSum = strSum + <span class="string">"\r\n"</span>;</span><br><span class="line">			<span class="keyword">for</span> (<span class="keyword">int</span> m = <span class="number">7</span>; m &lt; <span class="number">10</span>; m++)</span><br><span class="line">			&#123;</span><br><span class="line">				<span class="keyword">int</span> j = random(i);</span><br><span class="line">				Selected.push_back(Word.at(j));</span><br><span class="line">				strtemp = Selected.at(m);</span><br><span class="line">				strSum = strSum + strtemp;</span><br><span class="line">			&#125;</span><br><span class="line">			strSum = strSum + <span class="string">"，"</span>;</span><br><span class="line">			<span class="keyword">for</span> (<span class="keyword">int</span> m = <span class="number">10</span>; m &lt; <span class="number">13</span>; m++)</span><br><span class="line">			&#123;</span><br><span class="line">				<span class="keyword">int</span> j = random(i);</span><br><span class="line">				Selected.push_back(Word.at(j));</span><br><span class="line">				strtemp = Selected.at(m);</span><br><span class="line">				strSum = strSum + strtemp;</span><br><span class="line">			&#125;</span><br><span class="line">			strSum = strSum + <span class="string">"，"</span>;</span><br><span class="line">			strSum = strSum + <span class="string">"\r\n"</span>;</span><br><span class="line">			<span class="keyword">for</span> (<span class="keyword">int</span> m = <span class="number">13</span>; m &lt; <span class="number">18</span>; m++)</span><br><span class="line">			&#123;</span><br><span class="line">				<span class="keyword">int</span> j = random(i);</span><br><span class="line">				Selected.push_back(Word.at(j));</span><br><span class="line">				strtemp = Selected.at(m);</span><br><span class="line">				strSum = strSum + strtemp;</span><br><span class="line">			&#125;</span><br><span class="line">			strSum = strSum + <span class="string">"，"</span>;</span><br><span class="line">			<span class="keyword">for</span> (<span class="keyword">int</span> m = <span class="number">18</span>; m &lt; <span class="number">20</span>; m++)</span><br><span class="line">			&#123;</span><br><span class="line">				<span class="keyword">int</span> j = random(i);</span><br><span class="line">				Selected.push_back(Word.at(j));</span><br><span class="line">				strtemp = Selected.at(m);</span><br><span class="line">				strSum = strSum + strtemp;</span><br><span class="line">			&#125;</span><br><span class="line">			strSum = strSum + <span class="string">"，"</span>;</span><br><span class="line">			strSum = strSum + <span class="string">"\r\n"</span>;</span><br><span class="line">			<span class="keyword">for</span> (<span class="keyword">int</span> m = <span class="number">20</span>; m &lt; <span class="number">23</span>; m++)</span><br><span class="line">			&#123;</span><br><span class="line">				<span class="keyword">int</span> j = random(i);</span><br><span class="line">				Selected.push_back(Word.at(j));</span><br><span class="line">				strtemp = Selected.at(m);</span><br><span class="line">				strSum = strSum + strtemp;</span><br><span class="line">			&#125;</span><br><span class="line"></span><br><span class="line">			strSum = strSum + <span class="string">"？"</span>;</span><br><span class="line">			strSum = strSum + <span class="string">"\r\n"</span>;</span><br><span class="line">			<span class="keyword">for</span> (<span class="keyword">int</span> m = <span class="number">23</span>; m &lt; <span class="number">25</span>; m++)</span><br><span class="line">			&#123;</span><br><span class="line">				<span class="keyword">int</span> j = random(i);</span><br><span class="line">				Selected.push_back(Word.at(j));</span><br><span class="line">				strtemp = Selected.at(m);</span><br><span class="line">				strSum = strSum + strtemp;</span><br><span class="line">			&#125;</span><br><span class="line">			strSum = strSum + <span class="string">"。"</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">			SetDlgItemText(IDC_EDIT2,strSum);</span><br><span class="line">			TCHAR szBuf[<span class="number">1264</span>];</span><br><span class="line">			FILE *pfile;</span><br><span class="line">			fopen_s(&amp;pfile,<span class="string">"d:\\library.txt"</span>, <span class="string">"r"</span>);</span><br><span class="line">			fread(szBuf, <span class="number">1</span>, <span class="number">1262</span>, pfile);</span><br><span class="line">			SetDlgItemText(IDC_EDIT1, szBuf);</span><br><span class="line"></span><br><span class="line">			fclose(pfile); </span><br><span class="line"></span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	file.Close();</span><br></pre></td></tr></table></figure>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20170816001549657?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="V1.1" title="">
                </div>
                <div class="image-caption">V1.1</div>
            </figure>
<p>字符串尾的烫烫烫烫烫还没解决</p>
<p>随机散文诗：<br>环佩离海棠，悲欢情墨红颜，<br>古道回推敲，萧瑟繁华梳妆，<br>寂寥绮罗簌簌桑麻墨，青梅尘缘，<br>花蕊墨城郭？<br>白露陌上。</p>
<p>烟读碧绿，顾青鸾青丝古墓，<br>楚楚故里尺素，念情殇柳眉，<br>伊人亮尘缘挥毫古墓，簌簌伽蓝，<br>寂寥萧尘埃？<br>桑麻知否。</p>
<p>枝桠年华尘埃，经纬竹婆娑伽蓝，<br>一觅古筝笑靥，沧海寺轩窗，<br>泠五岳勾勒磐石江，桑麻寂，<br>一觅知否袅袅？<br>萧瑟瑶池。</p>
<p>羌笛绮罗剑鞘，枯藤乌艄断弦琴，<br>绮罗朱砂萧，寺参差寒蝉，<br>一抹长安水墨朱砂踌躇，寂凤凰，<br>渔樵红烛垂钓？<br>长歌芭蕉。</p>
<p>哈哈哈哈哈看起来好有文化的样子</p>
<p>附上一首吐槽古风乱象的歌：</p>
<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=34152526&auto=1&height=66"></iframe>
]]></content>
      
        <categories>
            
            <category> 互联网 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> CPP </tag>
            
            <tag> MFC </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[树]]></title>
      <url>https://hubojing.github.io/2017/07/23/%E6%A0%91/</url>
      <content type="html"><![CDATA[<div align="left"><br><img src="https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1550075379443&di=51f53328008b4821ce8f839ac9186c0c&imgtype=0&src=http%3A%2F%2Fhiphotos.baidu.com%2Fdoc%2Fpic%2Fitem%2Fb17eca8065380cd7e40f7c6ba844ad3459828127.jpg" width="300" height="180" style="float:right;"><br><br><br>　　<strong>大热天敲代码与看书更配哦</strong>　　<br><br><br> </div>

<a id="more"></a>
<h1 id="数据结构系列"><a href="#数据结构系列" class="headerlink" title="数据结构系列"></a>数据结构系列</h1><p>栈 <a href="https://hubojing.github.io/2017/11/14/%E6%A0%88/">https://hubojing.github.io/2017/11/14/%E6%A0%88/</a><br>队列 <a href="https://hubojing.github.io/2017/11/12/%E9%98%9F%E5%88%97/">https://hubojing.github.io/2017/11/12/%E9%98%9F%E5%88%97/</a><br>线性表    <a href="https://hubojing.github.io/2019/06/12/%E7%BA%BF%E6%80%A7%E8%A1%A8/">https://hubojing.github.io/2019/06/12/%E7%BA%BF%E6%80%A7%E8%A1%A8/</a></p>
<h1 id="二叉树的链式存储结构"><a href="#二叉树的链式存储结构" class="headerlink" title="二叉树的链式存储结构"></a>二叉树的链式存储结构</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">BiTNode</span>&#123;</span></span><br><span class="line">	ElemType data;<span class="comment">//数据域</span></span><br><span class="line">	<span class="class"><span class="keyword">struct</span> <span class="title">BiTNode</span> *<span class="title">lchild</span>, *<span class="title">rchild</span>;</span><span class="comment">//左、右孩子指针</span></span><br><span class="line">&#125;BiTNode, *BiTree;</span><br></pre></td></tr></table></figure>
<h1 id="二叉树的遍历"><a href="#二叉树的遍历" class="headerlink" title="二叉树的遍历"></a>二叉树的遍历</h1><p>例：　1<br>　　2　　3<br>　　　4　　5<br>　　6  </p>
<h2 id="先序遍历（PreOrder）"><a href="#先序遍历（PreOrder）" class="headerlink" title="先序遍历（PreOrder）"></a>先序遍历（PreOrder）</h2><p>根-&gt;左-&gt;右<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">PreOrder</span><span class="params">(BiTree T)</span></span>&#123;</span><br><span class="line">	<span class="keyword">if</span> (T != <span class="literal">NULL</span>)&#123;</span><br><span class="line">		visit(T);<span class="comment">//访问根节点</span></span><br><span class="line">		PreOrder(T-&gt;lchild);<span class="comment">//递归遍历左子树</span></span><br><span class="line">		PreOrder(T-&gt;rchild);<span class="comment">//递归遍历右子树</span></span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>124635</p>
<h2 id="中序遍历（InOrder）"><a href="#中序遍历（InOrder）" class="headerlink" title="中序遍历（InOrder）"></a>中序遍历（InOrder）</h2><p>左-&gt;根-&gt;右<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">InOrder</span><span class="params">(BiTree T)</span></span>&#123;</span><br><span class="line">	<span class="keyword">if</span> (T != <span class="literal">NULL</span>)&#123;</span><br><span class="line">		InOrder(T-&gt;lchild);<span class="comment">//递归遍历左子树</span></span><br><span class="line">		visit(T);<span class="comment">//访问根节点</span></span><br><span class="line">		InOrder(T-&gt;rchild);<span class="comment">//递归遍历右子树</span></span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>264135</p>
<h2 id="后序遍历（PostOrder）"><a href="#后序遍历（PostOrder）" class="headerlink" title="后序遍历（PostOrder）"></a>后序遍历（PostOrder）</h2><p>左-&gt;右-&gt;根<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">PostOrder</span><span class="params">(BiTree T)</span></span>&#123;</span><br><span class="line">	<span class="keyword">if</span> (T != <span class="literal">NULL</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		PostOrder(T-&gt;lchild);<span class="comment">//递归遍历左子树</span></span><br><span class="line">		PostOrder(T-&gt;rchild);<span class="comment">//递归遍历右子树</span></span><br><span class="line">		visit(T);<span class="comment">//访问根节点</span></span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>642531</p>
<p>时间复杂度都是O(n)，空间复杂度为O(n)。</p>
<h1 id="中序遍历的非递归算法"><a href="#中序遍历的非递归算法" class="headerlink" title="中序遍历的非递归算法"></a>中序遍历的非递归算法</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">InOrder2</span><span class="params">(BiTree T)</span></span>&#123;</span><br><span class="line">	<span class="comment">//二叉树中序遍历的非递归算法，算法需要借助一个栈</span></span><br><span class="line">	InitStack(S);</span><br><span class="line">	BiTree p = T;				<span class="comment">//初始化栈；p是遍历指针</span></span><br><span class="line">	<span class="keyword">while</span> (p || !IsEmpty(S))&#123;		<span class="comment">//栈不空或p不空时循环</span></span><br><span class="line">		<span class="keyword">if</span> (p)&#123;						<span class="comment">//根指针进展，遍历左子树</span></span><br><span class="line">			Push(S, p);					<span class="comment">//每遇到非空二叉树先向左走</span></span><br><span class="line">			p = p-&gt;lchild;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span>&#123;						<span class="comment">//根指针退栈，访问根节点，遍历右子树</span></span><br><span class="line">			Pop(S, p); visit(p);		<span class="comment">//退栈，访问根节点</span></span><br><span class="line">			p = p-&gt;rchild;			<span class="comment">//再向右子树走</span></span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="二叉树的层次遍历"><a href="#二叉树的层次遍历" class="headerlink" title="二叉树的层次遍历"></a>二叉树的层次遍历</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">LevelOrder</span><span class="params">(BiTree T)</span></span>&#123;</span><br><span class="line">	InitQueue(Q);<span class="comment">//初始化辅助队列</span></span><br><span class="line">	BiTree p;</span><br><span class="line">	EnQueue(Q, T);<span class="comment">//将根结点入队</span></span><br><span class="line">	<span class="keyword">while</span> (!IsEmpty(Q))&#123;<span class="comment">//队列不空循环</span></span><br><span class="line">		DeQueue(Q, p);<span class="comment">//队头元素出队</span></span><br><span class="line">		visit(p);<span class="comment">//访问当前p所指向结点</span></span><br><span class="line">		<span class="keyword">if</span> (p-&gt;lchild != <span class="literal">NULL</span>)</span><br><span class="line">		&#123;</span><br><span class="line">			EnQueue(Q, p-&gt;lchild);<span class="comment">//左子树不空，则左子树入队列</span></span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span> (p-&gt;rchild != <span class="literal">NULL</span>)</span><br><span class="line">		&#123;</span><br><span class="line">			EnQueue(Q, p-&gt;rchild);<span class="comment">//右子树不空，则右子树入队列</span></span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="树的存储结构"><a href="#树的存储结构" class="headerlink" title="树的存储结构"></a>树的存储结构</h1><h2 id="双亲表示法"><a href="#双亲表示法" class="headerlink" title="双亲表示法"></a>双亲表示法</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAX_TREE_SIZE 100	<span class="comment">//树中最多结点数</span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span>&#123;</span>		<span class="comment">//树的结点定义</span></span><br><span class="line">	ElemType data;	<span class="comment">//数据元素</span></span><br><span class="line">	<span class="keyword">int</span> parent;	<span class="comment">//双亲位置域</span></span><br><span class="line">&#125;PTNode;</span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span>&#123;</span>		<span class="comment">//树的类型定义</span></span><br><span class="line">	PTNode nodes[MAX_TREE_SIZE];	<span class="comment">//双亲表示</span></span><br><span class="line">	<span class="keyword">int</span> n;		<span class="comment">//结点数</span></span><br><span class="line">&#125;PTree;</span><br></pre></td></tr></table></figure>
<p>求结点的孩子时需遍历整个结构。</p>
<h2 id="孩子表示法"><a href="#孩子表示法" class="headerlink" title="孩子表示法"></a>孩子表示法</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">CTNode</span>	//孩子结点</span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">	<span class="keyword">int</span> child;</span><br><span class="line">	<span class="class"><span class="keyword">struct</span> <span class="title">CTNode</span> *<span class="title">next</span>;</span></span><br><span class="line">&#125;*ChildPtr;</span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">	TElemType data;</span><br><span class="line">	ChildPtr firstchild;<span class="comment">//孩子链表头指针</span></span><br><span class="line">&#125;CTBox;</span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">	CTBox nodes[MAX_TREE_SIZE];</span><br><span class="line">	<span class="keyword">int</span> n, r;	<span class="comment">//结点数和根的位置</span></span><br><span class="line">&#125;CTree;</span><br></pre></td></tr></table></figure>
<p>求结点的双亲时需遍历N个结点中孩子链表指针域所指向的N个孩子链表。</p>
<h2 id="孩子兄弟表示法（二叉树表示法）"><a href="#孩子兄弟表示法（二叉树表示法）" class="headerlink" title="孩子兄弟表示法（二叉树表示法）"></a>孩子兄弟表示法（二叉树表示法）</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">CSNode</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">	ElemType data;	<span class="comment">//数据域</span></span><br><span class="line">	<span class="class"><span class="keyword">struct</span> <span class="title">CSNode</span> *<span class="title">firstchild</span>, *<span class="title">nextsibling</span>;</span>	<span class="comment">//第一个孩子和右兄弟指针</span></span><br><span class="line">&#125;CSNode, *CSTree;</span><br></pre></td></tr></table></figure>
<p>易查找结点的孩子，若为每个结点增设一个parent域指向其父节点，则查找结点的父结点也很方便。</p>
<p>树转换为二叉树的规则：每个结点左指针指向它的第一个孩子结点，右指针指向它在树中的相邻兄弟结点，可表示为“左孩子右兄弟”。由于根节点没有兄弟，所以由树转换而得的二叉树没有右子树。</p>
<p>例：<br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20160405115409687" alt="一颗具体的树" title="">
                </div>
                <div class="image-caption">一颗具体的树</div>
            </figure><br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20160405121851681" alt="转换后" title="">
                </div>
                <div class="image-caption">转换后</div>
            </figure></p>
<h1 id="C-实现"><a href="#C-实现" class="headerlink" title="C++实现"></a>C++实现</h1><h2 id="数组实现"><a href="#数组实现" class="headerlink" title="数组实现"></a>数组实现</h2><h3 id="tree-h"><a href="#tree-h" class="headerlink" title="tree.h"></a>tree.h</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> TREE_H</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> TREE_H</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Tree</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">	Tree(<span class="keyword">int</span> size, <span class="keyword">int</span> *pRoot);</span><br><span class="line">	~Tree();</span><br><span class="line">	<span class="function"><span class="keyword">int</span> *<span class="title">SearchNode</span><span class="params">(<span class="keyword">int</span> nodeIndex)</span></span>;</span><br><span class="line">	<span class="function"><span class="keyword">bool</span> <span class="title">AddNode</span><span class="params">(<span class="keyword">int</span> nodeIndex, <span class="keyword">int</span> direction, <span class="keyword">int</span> *pNode)</span></span>;</span><br><span class="line">	<span class="function"><span class="keyword">bool</span> <span class="title">DeleteNode</span><span class="params">(<span class="keyword">int</span> nodeIndex, <span class="keyword">int</span> *pNode)</span></span>;</span><br><span class="line">	<span class="function"><span class="keyword">void</span> <span class="title">TreeTraverse</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">	<span class="keyword">int</span> *m_pTree;</span><br><span class="line">	<span class="keyword">int</span> m_iSize;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br></pre></td></tr></table></figure>
<h3 id="tree-cpp"><a href="#tree-cpp" class="headerlink" title="tree.cpp"></a>tree.cpp</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"tree.h"</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line">Tree::Tree(<span class="keyword">int</span> size, <span class="keyword">int</span> *pRoot)</span><br><span class="line">&#123;</span><br><span class="line">	m_iSize = size;</span><br><span class="line">	m_pTree = <span class="keyword">new</span> <span class="keyword">int</span>[size];</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; size; ++i)</span><br><span class="line">	&#123;</span><br><span class="line">		m_pTree[i] = <span class="number">0</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	m_pTree[<span class="number">0</span>] = *pRoot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Tree::~Tree()</span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">delete</span>[]m_pTree;</span><br><span class="line">	m_pTree = <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> *Tree::SearchNode(<span class="keyword">int</span> nodeIndex)</span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">if</span> (nodeIndex &lt; <span class="number">0</span> || nodeIndex &gt;= m_iSize)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span> (m_pTree[nodeIndex] == <span class="number">0</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> &amp;m_pTree[nodeIndex];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">bool</span> Tree::AddNode(<span class="keyword">int</span> nodeIndex, <span class="keyword">int</span> direction, <span class="keyword">int</span> *pNode)</span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">if</span> (nodeIndex &lt; <span class="number">0</span> || nodeIndex &gt;= m_iSize)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span> (m_pTree[nodeIndex] == <span class="number">0</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span> (direction == <span class="number">0</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span> (nodeIndex * <span class="number">2</span> + <span class="number">1</span> &gt;= m_iSize)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span> (m_pTree[nodeIndex * <span class="number">2</span> + <span class="number">1</span>] != <span class="number">0</span>)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		m_pTree[nodeIndex * <span class="number">2</span> + <span class="number">1</span>] = *pNode;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span> (direction == <span class="number">1</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span> (nodeIndex * <span class="number">2</span> + <span class="number">2</span> &gt;= m_iSize)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span> (m_pTree[nodeIndex * <span class="number">2</span> + <span class="number">2</span>] != <span class="number">0</span>)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		m_pTree[nodeIndex * <span class="number">2</span> + <span class="number">2</span>] = *pNode;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">bool</span> Tree::DeleteNode(<span class="keyword">int</span> nodeIndex, <span class="keyword">int</span> *pNode)</span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">if</span> (nodeIndex &lt; <span class="number">0</span> || nodeIndex &gt;= m_iSize)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span> (m_pTree[nodeIndex] == <span class="number">0</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	*pNode = m_pTree[nodeIndex];</span><br><span class="line">	m_pTree[nodeIndex] = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> Tree::TreeTraverse()</span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; m_iSize; ++i)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt; m_pTree[i] &lt;&lt; <span class="string">" "</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="demo-cpp"><a href="#demo-cpp" class="headerlink" title="demo.cpp"></a>demo.cpp</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"tree.h"</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> root = <span class="number">1</span>;</span><br><span class="line">	Tree *pTree = <span class="keyword">new</span> Tree(<span class="number">10</span>, &amp;root);</span><br><span class="line">	<span class="keyword">int</span> node1 = <span class="number">2</span>;</span><br><span class="line">	<span class="keyword">int</span> node2 = <span class="number">3</span>;</span><br><span class="line">	<span class="keyword">int</span> node3 = <span class="number">4</span>;</span><br><span class="line">	<span class="keyword">int</span> node4 = <span class="number">5</span>;</span><br><span class="line">	<span class="keyword">int</span> node5 = <span class="number">6</span>;</span><br><span class="line">	<span class="keyword">int</span> node6 = <span class="number">7</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">	pTree-&gt;AddNode(<span class="number">0</span>, <span class="number">0</span>, &amp;node1);</span><br><span class="line">	pTree-&gt;AddNode(<span class="number">0</span>, <span class="number">1</span>, &amp;node2);</span><br><span class="line">	pTree-&gt;AddNode(<span class="number">1</span>, <span class="number">0</span>, &amp;node3);</span><br><span class="line">	pTree-&gt;AddNode(<span class="number">1</span>, <span class="number">1</span>, &amp;node4);</span><br><span class="line">	pTree-&gt;AddNode(<span class="number">2</span>, <span class="number">0</span>, &amp;node5);</span><br><span class="line">	pTree-&gt;AddNode(<span class="number">2</span>, <span class="number">1</span>, &amp;node6);</span><br><span class="line"></span><br><span class="line">	pTree-&gt;TreeTraverse();</span><br><span class="line">	<span class="keyword">int</span> *p = pTree-&gt;SearchNode(<span class="number">2</span>);</span><br><span class="line"></span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span> &lt;&lt; <span class="string">"node = "</span> &lt;&lt; *p &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">delete</span> pTree;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="链表实现"><a href="#链表实现" class="headerlink" title="链表实现"></a>链表实现</h2><h3 id="Node-h"><a href="#Node-h" class="headerlink" title="Node.h"></a>Node.h</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> NODE_H</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> NODE_H</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Node</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">	Node();</span><br><span class="line">	<span class="function">Node *<span class="title">SearchNode</span><span class="params">(<span class="keyword">int</span> nodeIndex)</span></span>;</span><br><span class="line">	<span class="function"><span class="keyword">void</span> <span class="title">DeleteNode</span><span class="params">()</span></span>;</span><br><span class="line">	<span class="function"><span class="keyword">void</span> <span class="title">PreoderTraversal</span><span class="params">()</span></span>;</span><br><span class="line">	<span class="function"><span class="keyword">void</span> <span class="title">InorderTraversal</span><span class="params">()</span></span>;</span><br><span class="line">	<span class="function"><span class="keyword">void</span> <span class="title">PostorderTraversal</span><span class="params">()</span></span>;</span><br><span class="line">	<span class="keyword">int</span> index;</span><br><span class="line">	<span class="keyword">int</span> data;</span><br><span class="line">	Node *pLChild;</span><br><span class="line">	Node *pRChild;</span><br><span class="line">	Node *pParent;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br></pre></td></tr></table></figure>
<h3 id="Node-cpp"><a href="#Node-cpp" class="headerlink" title="Node.cpp"></a>Node.cpp</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"Node.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line">Node::Node()</span><br><span class="line">&#123;</span><br><span class="line">	index = <span class="number">0</span>;</span><br><span class="line">	data = <span class="number">0</span>;</span><br><span class="line">	pLChild = <span class="literal">NULL</span>;</span><br><span class="line">	pRChild = <span class="literal">NULL</span>;</span><br><span class="line">	pParent = <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Node *Node::SearchNode(<span class="keyword">int</span> nodeIndex)</span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">if</span> (<span class="keyword">this</span>-&gt;index == nodeIndex)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	Node *temp = <span class="literal">NULL</span>;</span><br><span class="line">	<span class="keyword">if</span> (<span class="keyword">this</span>-&gt;pLChild != <span class="literal">NULL</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span> (<span class="keyword">this</span>-&gt;pLChild-&gt;index == nodeIndex)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">return</span> <span class="keyword">this</span>-&gt;pLChild;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span></span><br><span class="line">		&#123;</span><br><span class="line">			temp = <span class="keyword">this</span>-&gt;pLChild-&gt;SearchNode(nodeIndex);</span><br><span class="line">			<span class="keyword">if</span> (temp != <span class="literal">NULL</span>)</span><br><span class="line">			&#123;</span><br><span class="line">				<span class="keyword">return</span> temp;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span> (<span class="keyword">this</span>-&gt;pRChild != <span class="literal">NULL</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span> (<span class="keyword">this</span>-&gt;pRChild-&gt;index == nodeIndex)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">return</span> <span class="keyword">this</span>-&gt;pRChild;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span></span><br><span class="line">		&#123;</span><br><span class="line">			temp = <span class="keyword">this</span>-&gt;pRChild-&gt;SearchNode(nodeIndex);</span><br><span class="line">			<span class="keyword">return</span> temp;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> Node::DeleteNode()</span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">if</span> (<span class="keyword">this</span>-&gt;pLChild != <span class="literal">NULL</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">this</span>-&gt;pLChild-&gt;DeleteNode();</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span> (<span class="keyword">this</span>-&gt;pRChild != <span class="literal">NULL</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">this</span>-&gt;pRChild-&gt;DeleteNode();</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span> (<span class="keyword">this</span>-&gt;pParent != <span class="literal">NULL</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span> (<span class="keyword">this</span>-&gt;pParent-&gt;pLChild == <span class="keyword">this</span>)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">this</span>-&gt;pParent-&gt;pLChild = <span class="literal">NULL</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span> (<span class="keyword">this</span>-&gt;pParent != <span class="literal">NULL</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span> (<span class="keyword">this</span>-&gt;pParent-&gt;pRChild == <span class="keyword">this</span>)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">this</span>-&gt;pParent-&gt;pRChild = <span class="literal">NULL</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">delete</span> <span class="keyword">this</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> Node::PreoderTraversal()</span><br><span class="line">&#123;</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="keyword">this</span>-&gt;index &lt;&lt; <span class="string">" "</span> &lt;&lt; <span class="keyword">this</span>-&gt;data &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	<span class="keyword">if</span> (<span class="keyword">this</span>-&gt;pLChild != <span class="literal">NULL</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">this</span>-&gt;pLChild-&gt;PreoderTraversal();</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span> (<span class="keyword">this</span>-&gt;pRChild != <span class="literal">NULL</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">this</span>-&gt;pRChild-&gt;PreoderTraversal();</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">void</span> Node::InorderTraversal()</span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">if</span> (<span class="keyword">this</span>-&gt;pLChild != <span class="literal">NULL</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">this</span>-&gt;pLChild-&gt;InorderTraversal();</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="keyword">this</span>-&gt;index &lt;&lt; <span class="string">" "</span> &lt;&lt; <span class="keyword">this</span>-&gt;data &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	<span class="keyword">if</span> (<span class="keyword">this</span>-&gt;pRChild != <span class="literal">NULL</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">this</span>-&gt;pRChild-&gt;InorderTraversal();</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">void</span> Node::PostorderTraversal()</span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">if</span> (<span class="keyword">this</span>-&gt;pLChild != <span class="literal">NULL</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">this</span>-&gt;pLChild-&gt;PostorderTraversal();</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span> (<span class="keyword">this</span>-&gt;pRChild != <span class="literal">NULL</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">this</span>-&gt;pRChild-&gt;PostorderTraversal();</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="keyword">this</span>-&gt;index &lt;&lt; <span class="string">" "</span> &lt;&lt; <span class="keyword">this</span>-&gt;data &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="tree-h-1"><a href="#tree-h-1" class="headerlink" title="tree.h"></a>tree.h</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> TREE_H</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> TREE_H</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"Node.h"</span></span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Tree</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">	Tree();</span><br><span class="line">	~Tree();</span><br><span class="line">	<span class="function">Node *<span class="title">SearchNode</span><span class="params">(<span class="keyword">int</span> nodeIndex)</span></span>;</span><br><span class="line">	<span class="function"><span class="keyword">bool</span> <span class="title">AddNode</span><span class="params">(<span class="keyword">int</span> nodeIndex, <span class="keyword">int</span> direction, Node *pNode)</span></span>;</span><br><span class="line">	<span class="function"><span class="keyword">bool</span> <span class="title">DeleteNode</span><span class="params">(<span class="keyword">int</span> nodeIndex, Node *pNode)</span></span>;</span><br><span class="line">	<span class="function"><span class="keyword">void</span> <span class="title">PreoderTraversal</span><span class="params">()</span></span>;</span><br><span class="line">	<span class="function"><span class="keyword">void</span> <span class="title">InorderTraversal</span><span class="params">()</span></span>;</span><br><span class="line">	<span class="function"><span class="keyword">void</span> <span class="title">PostorderTraversal</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">	Node *m_pRoot;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br></pre></td></tr></table></figure>
<h3 id="tree-cpp-1"><a href="#tree-cpp-1" class="headerlink" title="tree.cpp"></a>tree.cpp</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"tree.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line">Tree::Tree()</span><br><span class="line">&#123;</span><br><span class="line">	m_pRoot = <span class="keyword">new</span> Node();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Tree::~Tree()</span><br><span class="line">&#123;</span><br><span class="line">	DeleteNode(<span class="number">0</span>, <span class="literal">NULL</span>);</span><br><span class="line">	<span class="comment">// 	m_pRoot-&gt;DeleteNode();</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Node *Tree::SearchNode(<span class="keyword">int</span> nodeIndex)</span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">return</span> m_pRoot-&gt;SearchNode(nodeIndex);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">bool</span> Tree::AddNode(<span class="keyword">int</span> nodeIndex, <span class="keyword">int</span> direction, Node *pNode)</span><br><span class="line">&#123;</span><br><span class="line">	Node *temp = SearchNode(nodeIndex);</span><br><span class="line">	<span class="keyword">if</span> (temp == <span class="literal">NULL</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	Node *node = <span class="keyword">new</span> Node();</span><br><span class="line">	<span class="keyword">if</span> (node == <span class="literal">NULL</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	node-&gt;index = pNode-&gt;index;</span><br><span class="line">	node-&gt;data = pNode-&gt;data;</span><br><span class="line">	node-&gt;pParent = temp;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">if</span> (direction == <span class="number">0</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		temp-&gt;pLChild = node;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span> (direction == <span class="number">1</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		temp-&gt;pRChild = node;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">bool</span> Tree::DeleteNode(<span class="keyword">int</span> nodeIndex, Node *pNode)</span><br><span class="line">&#123;</span><br><span class="line">	Node *temp = SearchNode(nodeIndex);</span><br><span class="line">	<span class="keyword">if</span> (temp == <span class="literal">NULL</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">if</span> (pNode != <span class="literal">NULL</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		pNode-&gt;data = temp-&gt;data;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	temp-&gt;DeleteNode();</span><br><span class="line">	<span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> Tree::PreoderTraversal()</span><br><span class="line">&#123;</span><br><span class="line">	m_pRoot-&gt;PreoderTraversal();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> Tree::InorderTraversal()</span><br><span class="line">&#123;</span><br><span class="line">	m_pRoot-&gt;InorderTraversal();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> Tree::PostorderTraversal()</span><br><span class="line">&#123;</span><br><span class="line">	m_pRoot-&gt;PostorderTraversal();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="demo-cpp-1"><a href="#demo-cpp-1" class="headerlink" title="demo.cpp"></a>demo.cpp</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"tree.h"</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	Node *node1 = <span class="keyword">new</span> Node();</span><br><span class="line">	node1-&gt;index = <span class="number">1</span>;</span><br><span class="line">	node1-&gt;data = <span class="number">5</span>;</span><br><span class="line">	Node *node2 = <span class="keyword">new</span> Node();</span><br><span class="line">	node2-&gt;index = <span class="number">2</span>;</span><br><span class="line">	node2-&gt;data = <span class="number">4</span>;</span><br><span class="line">	Node *node3 = <span class="keyword">new</span> Node();</span><br><span class="line">	node3-&gt;index = <span class="number">3</span>;</span><br><span class="line">	node3-&gt;data = <span class="number">3</span>;</span><br><span class="line">	Node *node4 = <span class="keyword">new</span> Node();</span><br><span class="line">	node4-&gt;index = <span class="number">4</span>;</span><br><span class="line">	node4-&gt;data = <span class="number">2</span>;</span><br><span class="line">	Node *node5 = <span class="keyword">new</span> Node();</span><br><span class="line">	node5-&gt;index = <span class="number">5</span>;</span><br><span class="line">	node5-&gt;data = <span class="number">1</span>;</span><br><span class="line">	Node *node6 = <span class="keyword">new</span> Node();</span><br><span class="line">	node6-&gt;index = <span class="number">6</span>;</span><br><span class="line">	node6-&gt;data = <span class="number">7</span>;</span><br><span class="line"></span><br><span class="line">	Tree *tree = <span class="keyword">new</span> Tree();</span><br><span class="line">	tree-&gt;AddNode(<span class="number">0</span>, <span class="number">0</span>, node1);</span><br><span class="line">	tree-&gt;AddNode(<span class="number">0</span>, <span class="number">1</span>, node2);</span><br><span class="line">	tree-&gt;AddNode(<span class="number">1</span>, <span class="number">0</span>, node3);</span><br><span class="line">	tree-&gt;AddNode(<span class="number">1</span>, <span class="number">1</span>, node4);</span><br><span class="line">	tree-&gt;AddNode(<span class="number">2</span>, <span class="number">0</span>, node5);</span><br><span class="line">	tree-&gt;AddNode(<span class="number">2</span>, <span class="number">1</span>, node6);</span><br><span class="line"></span><br><span class="line">	tree-&gt;DeleteNode(<span class="number">6</span>, <span class="literal">NULL</span>);</span><br><span class="line">	tree-&gt;PostorderTraversal();</span><br><span class="line"></span><br><span class="line">	<span class="keyword">delete</span> tree;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p>数据结构教材<br><a href="http://blog.csdn.net/linux_ever/article/details/51063795" target="_blank" rel="noopener">数据结构与算法——普通树的定义与C++实现</a><br><a href="http://blog.csdn.net/jkay_wong/article/details/6635984" target="_blank" rel="noopener">C++树（兄弟孩子结构实现）</a><br><a href="http://www.educity.cn/develop/478944.html" target="_blank" rel="noopener">VC++ 树的孩子兄弟表示法</a><br><a href="http://blog.csdn.net/insistgogo/article/details/6876867" target="_blank" rel="noopener">使用C++ 和 孩子兄弟表示法实现树</a><br><a href="http://blog.csdn.net/htyurencaotang/article/details/7781920" target="_blank" rel="noopener">孩子兄弟表示法实现树</a></p>
]]></content>
      
        <categories>
            
            <category> 互联网 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> CPP </tag>
            
            <tag> 数据结构 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[树状控件与列表控件交互以及XML的解析]]></title>
      <url>https://hubojing.github.io/2017/07/20/%E6%A0%91%E7%8A%B6%E6%8E%A7%E4%BB%B6%E4%B8%8E%E5%88%97%E8%A1%A8%E6%8E%A7%E4%BB%B6%E4%BA%A4%E4%BA%92%E4%BB%A5%E5%8F%8AXML%E7%9A%84%E8%A7%A3%E6%9E%90/</url>
      <content type="html"><![CDATA[<div align="left"><br><img src="http://s8.51cto.com/wyfs02/M00/5B/67/wKioL1UI1-LRY-VkAADQ3snhmcU770.jpg" width="300" height="180" style="float:right;"><br><br><br>　　<strong>自查笔记。</strong><br>　　<br>　　　<br><br> </div>

<a id="more"></a>
<h1 id="方法记录"><a href="#方法记录" class="headerlink" title="方法记录"></a>方法记录</h1><h2 id="MSXML相关"><a href="#MSXML相关" class="headerlink" title="MSXML相关"></a>MSXML相关</h2><h3 id="创建对象"><a href="#创建对象" class="headerlink" title="创建对象"></a>创建对象</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">MSXML2::IXMLDOMDocumentPtr pDoc;</span><br><span class="line"></span><br><span class="line">HRESULT hr = pDoc.CreateInstance(_uuidof(MSXML2::DOMDocument60));</span><br><span class="line"><span class="keyword">if</span>(!pDoc)</span><br><span class="line">&#123;</span><br><span class="line">	ASSERT(FALSE);</span><br><span class="line">	<span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">_variant_t</span> varOut((<span class="keyword">bool</span>)TRUE);</span><br><span class="line">varOut = pDoc-&gt;load(xmlPath);</span><br><span class="line"><span class="keyword">if</span> ((<span class="keyword">bool</span>)varOut == FALSE)</span><br><span class="line">&#123;</span><br><span class="line">	::MessageBox(<span class="literal">NULL</span>, <span class="string">"Wrong!"</span>, <span class="string">"提示"</span>, MB_ICONERROR);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="获取根节点"><a href="#获取根节点" class="headerlink" title="获取根节点"></a>获取根节点</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">MSXML2::IXMLDOMElementPtr pNode;</span><br><span class="line">pNode = pDoc-&gt;GetdocumentElement();</span><br></pre></td></tr></table></figure>
<h3 id="获取属性（法一）"><a href="#获取属性（法一）" class="headerlink" title="获取属性（法一）"></a>获取属性（法一）</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">MSXML2::IXMLDOMNamedNodeMapPtr pAttrMap;</span><br><span class="line">MSXML2::IXMLDOMNodePtr pAttrItem;</span><br><span class="line">MSXML2::IXMLDOMNodeListPtr pNodeList = pNode-&gt;GetchildNodes();</span><br><span class="line"><span class="keyword">long</span> Len = pNodeList-&gt;Getlength();</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; Len; ++i)</span><br><span class="line">&#123;</span><br><span class="line">	MSXML2::IXMLDOMElementPtr pChildNode = (MSXML2::IXMLDOMElementPtr)pNodeList-&gt;Getitem(i);</span><br><span class="line">	pChildNode-&gt;get_attributes(&amp;pAttrMap);</span><br><span class="line">	<span class="keyword">long</span> count;</span><br><span class="line">	pAttrMap-&gt;get_length(&amp;count);</span><br><span class="line">	<span class="keyword">if</span> (count)</span><br><span class="line">	&#123;</span><br><span class="line">		pAttrMap-&gt;get_item(<span class="number">0</span>, &amp;pAttrItem);</span><br><span class="line">		<span class="keyword">_variant_t</span> variantItemName;</span><br><span class="line">		pAttrItem-&gt;get_nodeTypedValue(&amp;variantItemName);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="获取属性（法二）"><a href="#获取属性（法二）" class="headerlink" title="获取属性（法二）"></a>获取属性（法二）</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">MSXML2::IXMLDOMNodeListPtr pList = pRoot-&gt;GetchildNodes();</span><br><span class="line"><span class="keyword">int</span> iCount = pList-&gt;Getlength();</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; iCount; ++i)</span><br><span class="line">&#123;</span><br><span class="line">	MSXML2::IXMLDOMElementPtr pItem = (MSXML2::IXMLDOMElementPtr)pList-&gt;item[i];</span><br><span class="line">	MSXML2::IXMLDOMNamedNodeMapPtr pAttrMap = pItem-&gt;Getattributes();</span><br><span class="line">	MSXML2::IXMLDOMNodePtr pAttrItem;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> att = <span class="number">0</span>; att &lt; pAttrMap-&gt;length; ++att)</span><br><span class="line">	&#123;</span><br><span class="line">		pAttrItem = pAttrMap-&gt;Getitem(att);</span><br><span class="line">		strTemp = (LPCTSTR)pAttrItem-&gt;GetnodeName();</span><br><span class="line">		<span class="keyword">_variant_t</span> value;</span><br><span class="line">		value = pAttrItem-&gt;GetnodeValue();</span><br><span class="line">		<span class="keyword">if</span> (strTemp == <span class="string">"某属性名1"</span>)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="comment">//需要进行的操作</span></span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span> (strTemp == <span class="string">"某属性名2"</span>)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="comment">//需要进行的操作</span></span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="删除节点"><a href="#删除节点" class="headerlink" title="删除节点"></a>删除节点</h3><p>连同子节点一起删 pChildNode-&gt;GetParentNode()-&gt;removeChild(pChildNode);</p>
<h2 id="树控件相关"><a href="#树控件相关" class="headerlink" title="树控件相关"></a>树控件相关</h2><h3 id="插入"><a href="#插入" class="headerlink" title="插入"></a>插入</h3><p>HTREEITEM ht = m_tree.InsertItem((_bstr_t)variantValue, 1, 1, ht, TVI_LAST);<br>依次是：插入的数据，树前图标点击前，树前图标点击后，父节点，插在最后。</p>
<h3 id="存入数据"><a href="#存入数据" class="headerlink" title="存入数据"></a>存入数据</h3><p>m_tree.SetItemData(ht,(DWORD_PTR)数据);</p>
<h3 id="获得根节点"><a href="#获得根节点" class="headerlink" title="获得根节点"></a>获得根节点</h3><p>HTREEITEM hRoot=m_tree.GetRootItem();</p>
<h3 id="展开树"><a href="#展开树" class="headerlink" title="展开树"></a>展开树</h3><p>m_tree.Expand(ht,TVE_EXPAND);</p>
<h3 id="获取选中树"><a href="#获取选中树" class="headerlink" title="获取选中树"></a>获取选中树</h3><p>HTREEITEM ChooseItem = m_tree.GetSelectedItem();<br>获取数据<br>数据类型animal <em>pStructure = (数据类型animal</em>)m_tree.GetitemData(ChooseItem);</p>
<h2 id="列表控件相关"><a href="#列表控件相关" class="headerlink" title="列表控件相关"></a>列表控件相关</h2><h3 id="插入-1"><a href="#插入-1" class="headerlink" title="插入"></a>插入</h3><p>m_list.InsertItem(i,(LPCTSTR)数据,i);</p>
<h3 id="存入数据-1"><a href="#存入数据-1" class="headerlink" title="存入数据"></a>存入数据</h3><p>m_list.SetItemData(i,(DWORD_PTR)数据);</p>
<h3 id="删除全部项"><a href="#删除全部项" class="headerlink" title="删除全部项"></a>删除全部项</h3><p>m_list.DeleteAllItems();</p>
<h3 id="在列表最后插入"><a href="#在列表最后插入" class="headerlink" title="在列表最后插入"></a>在列表最后插入</h3><p>int iRow = m_list.GetItemCount();<br>m_list.InsertItem(iRow, text, 0);<br>text 插入的文本 0表示imagelist中的第一个图片<br>imagelist是由一幅幅image拼起来的长图列表</p>
<h2 id="其它C-相关"><a href="#其它C-相关" class="headerlink" title="其它C++相关"></a>其它C++相关</h2><h3 id="MessageBox"><a href="#MessageBox" class="headerlink" title="MessageBox"></a>MessageBox</h3><p>MessageBox分为win API 和 MFC封装两种。<br>win API:<br>::MessageBox(1, 2, 3, 4);<br>1为父窗口句柄，常用NULL<br>2为显示的字符串<br>3为标题栏显示的字符串<br>4为图标icon  有四种：MB_ICONERROR,MB_ICONINFORMATION,MB_ICONWARNING,MB_ICONQUESTION</p>
<h3 id="父对话框给子对话框传值"><a href="#父对话框给子对话框传值" class="headerlink" title="父对话框给子对话框传值"></a>父对话框给子对话框传值</h3><p>如果子对话框是模态对话框，那么子对话框是无法在弹出后调用父对话框的控件变量的。只能在DoModal之前，通过一个子对话框的自定义成员变量传递过去。<br>eg.<br>CxxDlg dlg;<br>UpdateData(TRUE);<br>dlg.m_str=m_edit;<br>dlg.DoModal();</p>
<p>一种不良的方式：<br>父对话框 BookDlg  子对话框TitleDlg<br>在父对话框中 TitleDlg dlg(this);<br>在子对话框中 CBookDlg <em>parent = (CBookDlg</em>)GetParent();<br>然后就可以使用了：<br>CString text=pParent-&gt;m_sentence;<br>m_sentence是父对话框类的成员变量</p>
<p>父窗口引用子窗口变量<br>在父窗口中 xxxDlg dlg;<br>if(dlg.DoModal() == IDOK)<br>{<br>//操作<br>}</p>
<h3 id="在子对话框显示图片"><a href="#在子对话框显示图片" class="headerlink" title="在子对话框显示图片"></a>在子对话框显示图片</h3><p>给自对话框添加OnInitDlg()<br>添加OnPaint()<br>(记得加WM_ONPAINT消息)<br>在OnInitDlg中加载图片，在OnPanint()中重绘图片。（在初始化里重绘是不行的）</p>
<h3 id="vector"><a href="#vector" class="headerlink" title="vector"></a>vector</h3><p>添加头文件#include <vector><br>vector容器，std::vector&lt;类型*&gt; name;  push_back添加元素。<br>遍历元素使用迭代器iterator，for循环<br>vector&lt;数据类型&gt;::iterator it;<br>for(it=数据.begin();it!=数据.end();it++)<br>{<br>    //操作<br>    Break;<br>}</vector></p>
<h3 id="map"><a href="#map" class="headerlink" title="map"></a>map</h3><p>添加头文件#include <map><br>std::map&lt;CString, std::vector&lt;信息&gt;&gt;<br>一个CString对应一个vector。查询时也是先遍历（迭代器）再比较，it-&gt;first指代返回关键字，it-&gt;second指代数据。</map></p>
<h3 id="父子循环"><a href="#父子循环" class="headerlink" title="父子循环"></a>父子循环</h3><p>父子循环遍历时避免使用相同的变量名。</p>
<h3 id="几个函数"><a href="#几个函数" class="headerlink" title="几个函数"></a>几个函数</h3><p>检查路径合法性 PathFileExists(path)，使用它需要加上头文件#include “shlwapi.h”<br>字符连接 CString str;<br>str.Format((“%s%s\%s\“),path,”第三层”,”第四层”));<br>复制文件CopyFile(原完整带后缀路径，复制后的带后缀完整目的路径,TRUE);  该函数有返回值<br>比较<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(strTemp.Compare(<span class="string">"相比较的字符串"</span>)==<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//操作</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h3 id="创建临时文件夹"><a href="#创建临时文件夹" class="headerlink" title="创建临时文件夹"></a>创建临时文件夹</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">TCHAR Temp[<span class="number">512</span>];</span><br><span class="line">GetTempPath(<span class="number">512</span>, Temp);</span><br><span class="line">CString strTempPath;</span><br><span class="line">strTempPath.Format(<span class="string">"%s\\Mydata"</span>, Temp);</span><br><span class="line"><span class="keyword">if</span> (!PathFileExists(strTempPath))</span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">if</span> (!CreateDirectory(strTempPath, <span class="literal">NULL</span>))</span><br><span class="line">	&#123;</span><br><span class="line">		ASSERT(FALSE);</span><br><span class="line">		<span class="keyword">return</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="复制文件夹及子文件"><a href="#复制文件夹及子文件" class="headerlink" title="复制文件夹及子文件"></a>复制文件夹及子文件</h3><p>写一个函数CopyDiretory(CString source, CString target)<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">	CFileFind finder;</span><br><span class="line"><span class="keyword">bool</span> bWorking = finder.FindFile(source);</span><br><span class="line"><span class="keyword">while</span> (bWorking)</span><br><span class="line">&#123;</span><br><span class="line">	bWorking = finder.FindNextFile();</span><br><span class="line">	<span class="keyword">if</span> (finder.IsDirectory() &amp;&amp; !finder.IsDots())</span><br><span class="line">	&#123;</span><br><span class="line">		copyDiretory(finder.GetFilePath(), target + <span class="string">"\\"</span> + finder.GetFileName();</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">	&#123;</span><br><span class="line">		Bool temp = CopyFile(finder.GetFilePath(), target + <span class="string">"\\"</span> + finder.GetFileName(), FALSE);</span><br><span class="line">		<span class="keyword">if</span> (temp == <span class="number">0</span>)</span><br><span class="line">		&#123;</span><br><span class="line">			MessageBox(<span class="string">"复制失败！"</span>);</span><br><span class="line">			<span class="keyword">return</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line">	</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h3 id="删除文件目录及子文件夹"><a href="#删除文件目录及子文件夹" class="headerlink" title="删除文件目录及子文件夹"></a>删除文件目录及子文件夹</h3><p>写一个DeleteDirectory函数<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">CFileFind finder;</span><br><span class="line">CString path;</span><br><span class="line">path.Format(<span class="string">"%s\\*.*"</span>, directorypath);</span><br><span class="line">BOOL bWorking = finder.FindFile(path);</span><br><span class="line"><span class="keyword">while</span> (bWorking)</span><br><span class="line">&#123;</span><br><span class="line">	bWorking = finder.FindNextFile();</span><br><span class="line">	<span class="keyword">if</span> (finder.IsDirectory() &amp;&amp; !finder.IsDots())</span><br><span class="line">	&#123;</span><br><span class="line">		DeleteDirectory(finder.GetFilePath());</span><br><span class="line">		RemoveDirectory(finder.GetFilePath();)</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">	&#123;</span><br><span class="line">		DeleteFile(finder.GetFilePath());</span><br><span class="line">	&#125;</span><br><span class="line">	finder.Close();</span><br><span class="line">	RemoveDirectory(directoryPath);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h3 id="文件遍历"><a href="#文件遍历" class="headerlink" title="文件遍历"></a>文件遍历</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">CFileFind finder;</span><br><span class="line">CString strName;</span><br><span class="line">BOOL bWorking = finder.FindFile(path);</span><br><span class="line"><span class="built_in">std</span>::<span class="built_in">vector</span>&lt;CString&gt;a;</span><br><span class="line"><span class="keyword">while</span> (bWorking)</span><br><span class="line">&#123;</span><br><span class="line">	bWorking = finder.FindNextFile();</span><br><span class="line">	strName = finder.GetFileName();</span><br><span class="line">	a.push_back(strName);<span class="comment">//获取全部文件名</span></span><br><span class="line">	<span class="built_in">vector</span>&lt;CString&gt;::iterator it;</span><br><span class="line">	<span class="keyword">for</span> (it = a.begin(); it != a.end(); it++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span> ((*it) == strFileName)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="comment">//需要的处理代码</span></span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="截取字符串"><a href="#截取字符串" class="headerlink" title="截取字符串"></a>截取字符串</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">char</span>* temp = <span class="keyword">new</span> <span class="keyword">char</span>[<span class="number">260</span>];</span><br><span class="line">::GetCurrentDirectory(<span class="number">260</span>, temp);<span class="comment">//得到的是DWord型</span></span><br><span class="line">CString strTempDir = temp;</span><br><span class="line"><span class="keyword">char</span>* str = strTempDir.GetBuffer(strTempDir.GetLength() + <span class="number">1</span>);</span><br><span class="line"><span class="keyword">char</span>* delim = <span class="string">"\\"</span>;</span><br><span class="line"><span class="keyword">char</span>* buf;</span><br><span class="line"><span class="keyword">char</span>* p1 = strtok_s(str, delim, &amp;buf);</span><br><span class="line"><span class="keyword">char</span>*p2 = strtok_s(<span class="literal">NULL</span>, delim, &amp;buf);</span><br><span class="line">CString strp1 = (<span class="keyword">_bstr_t</span>)p1;</span><br><span class="line">CString strp2 = (<span class="keyword">_bstr_t</span>)p2;</span><br></pre></td></tr></table></figure>
<p>循环截取<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">char</span>* str = strName.GetBuffer(strName.GetLength() + <span class="number">1</span>);</span><br><span class="line"><span class="keyword">char</span>* delim = <span class="string">"\\"</span>;</span><br><span class="line"><span class="keyword">char</span>* buf;</span><br><span class="line"><span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; str[i]; i++)</span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">if</span> (str[i] == *delim)</span><br><span class="line">	&#123;</span><br><span class="line">		count++;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">char</span>* p = strtok_s(str, delim, *buf);</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; count; j++)</span><br><span class="line">	&#123;</span><br><span class="line">		p = strtok_s(<span class="literal">NULL</span>, delim, &amp;buf);</span><br><span class="line">	&#125;</span><br><span class="line">	CString strp = (<span class="keyword">_bstr_t</span>)p;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h3 id="禁用"><a href="#禁用" class="headerlink" title="禁用"></a>禁用</h3><p>GetDlgItem(IDC_Text)-&gt;EnableWindow(FALSE);</p>
<h3 id="调用exe"><a href="#调用exe" class="headerlink" title="调用exe"></a>调用exe</h3><p>法一：<br>UINT temp=WinExec(strPath,SW_SHOWNORMAL);<br>法二：<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">STARTUPINFO si;</span><br><span class="line"><span class="built_in">memset</span>(&amp;si, <span class="number">0</span>, <span class="keyword">sizeof</span>(STARTUPINFO));</span><br><span class="line">si.cb = <span class="keyword">sizeof</span>(STARTUPINFO);</span><br><span class="line">si.dwFlags = STARTF_USESHOWWINDOW;</span><br><span class="line">si.wShowWindow = SW_SHOW;</span><br><span class="line">PROCESS_INFORMATION pi;</span><br><span class="line">BOOL bDemoPro = CreateProcess(path, <span class="literal">NULL</span>, <span class="literal">NULL</span>, <span class="literal">NULL</span>, FALSE, <span class="number">0</span>, <span class="literal">NULL</span>, <span class="literal">NULL</span>, &amp;si, &amp;pi);</span><br><span class="line"><span class="keyword">if</span> (!bDemoPro)</span><br><span class="line">&#123;</span><br><span class="line">	ASSERT(FALSE);</span><br><span class="line">&#125;</span><br><span class="line">WaitForSingleObject(pi.hProcess, INFINITE);</span><br><span class="line">CloseHandle(pi.hThread);</span><br><span class="line">CloseHandle(pi.hProcess);</span><br></pre></td></tr></table></figure></p>
<h3 id="窗口缩放"><a href="#窗口缩放" class="headerlink" title="窗口缩放"></a>窗口缩放</h3><p>.h文件中：<br>protected:<br>afx_msg void OnSize(UINT nType,int cx, int cy);<br>POINT old;<br>CRect m_rect;</p>
<p>.cpp文件中：<br>ON_WM_SIZE()</p>
<p>在OnInitDialog()中：<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">GetClientRect(&amp;m_rect);<span class="comment">//初始大小</span></span><br><span class="line">old.x = m_rect.right - m_rect.left;</span><br><span class="line">old.y = m_rect.bottom - m_rect.top;</span><br></pre></td></tr></table></figure></p>
<p>在OnSize函数中：<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">	CDialog::OnSize(nTpye, cx, cy);</span><br><span class="line">	<span class="comment">//TODO</span></span><br><span class="line">	<span class="keyword">float</span> fsp[<span class="number">2</span>];</span><br><span class="line">	POINT Newp;</span><br><span class="line">	CRect rectNow;</span><br><span class="line">	GetClientRect(&amp;rectNow);</span><br><span class="line">	Newp.x = rectNow.right - rectNow.left;</span><br><span class="line">	Newp.y = rectNow.bottom - rectNow.top;</span><br><span class="line">	fsp[<span class="number">0</span>] = (<span class="keyword">float</span>)Newp.x / old.x;</span><br><span class="line">	fsp[<span class="number">1</span>] = (<span class="keyword">float</span>)Newp.y / old.y;</span><br><span class="line">	CRect Rect;</span><br><span class="line">	<span class="keyword">int</span> woc;</span><br><span class="line">	CPoint OldTLPoint, TLPoint;<span class="comment">//左上</span></span><br><span class="line">	CPoint OldBRPoint, BRPoint;<span class="comment">//右下</span></span><br><span class="line">	HWND hwndChild = ::GetWindow(m_hWnd, GW_CHILD);<span class="comment">//列出所有控件</span></span><br><span class="line">	<span class="keyword">while</span> (hwndChild)</span><br><span class="line">	&#123;</span><br><span class="line">		woc = ::GetDlgCtrlID(hwndChild);</span><br><span class="line">		GetDlgItem(woc)-&gt;GetWindowRect(Rect);</span><br><span class="line">		ScreenToClient(Rect);</span><br><span class="line">		OldTLPoint = Rect.TopLeft();</span><br><span class="line">		TLPoint.x = <span class="keyword">long</span>(OldTLPoint.x*fsp[<span class="number">0</span>]);</span><br><span class="line">		TLPoint.y = <span class="keyword">long</span>(OldTLPoint.y*fsp[<span class="number">1</span>]);</span><br><span class="line">		OldBRPoint = Rect.BottomRight();</span><br><span class="line">		BRPoint.x = <span class="keyword">long</span>(OldBRPoint.x*fsp[<span class="number">0</span>]);</span><br><span class="line">		BRPoint.y = <span class="keyword">long</span>(OldBRPoint.y*fsp[<span class="number">1</span>]);</span><br><span class="line">		Rect.SetRect(TLPoint, BRPoint);</span><br><span class="line">		GetDlgItem(woc)-&gt;MoveWindow(Rect, TRUE);</span><br><span class="line">		hwndChild = ::GetWindow(hwndChild, GW_HWNDNEXT);</span><br><span class="line">	&#125;</span><br><span class="line">	old = Newp;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h3 id="更新数据"><a href="#更新数据" class="headerlink" title="更新数据"></a>更新数据</h3><p>UpdateData(TRUE);//更新值到界面<br>UpdateData(FALSE);//更新界面到值</p>
<h2 id="数据类型转换"><a href="#数据类型转换" class="headerlink" title="数据类型转换"></a>数据类型转换</h2><ol>
<li>int转CString<br>iRow是int型，number是CString型。<br>CString number;<br>number.Format(“%d”, iRow);</li>
</ol>
<p>2._variant_t转int<br>_variant_t a;<br>int b;<br>b=_ttoi((LPCTSTR)(_bstr_t)a);</p>
<hr>
<h1 id="MSDN参考"><a href="#MSDN参考" class="headerlink" title="MSDN参考"></a>MSDN参考</h1><h2 id="MSXML"><a href="#MSXML" class="headerlink" title="MSXML"></a>MSXML</h2><p>MSXML API 历史记录 <a href="https://msdn.microsoft.com/zh-cn/library/ms762314(v=vs.85).aspx" target="_blank" rel="noopener">https://msdn.microsoft.com/zh-cn/library/ms762314(v=vs.85).aspx</a> </p>
<p>MSXML SDK 概述 <a href="https://msdn.microsoft.com/zh-cn/library/ms760399(v=vs.85).aspx" target="_blank" rel="noopener">https://msdn.microsoft.com/zh-cn/library/ms760399(v=vs.85).aspx</a> </p>
<h2 id="TreeControl控件"><a href="#TreeControl控件" class="headerlink" title="TreeControl控件"></a>TreeControl控件</h2><p>使用 CTreeCtrl <a href="https://msdn.microsoft.com/zh-cn/library/8ws6dh1y(v=vs.120).aspx" target="_blank" rel="noopener">https://msdn.microsoft.com/zh-cn/library/8ws6dh1y(v=vs.120).aspx</a> </p>
<h2 id="ListControl控件"><a href="#ListControl控件" class="headerlink" title="ListControl控件"></a>ListControl控件</h2><p>使用 CListCtrl <a href="https://msdn.microsoft.com/zh-cn/library/cc468276(v=vs.71).aspx" target="_blank" rel="noopener">https://msdn.microsoft.com/zh-cn/library/cc468276(v=vs.71).aspx</a><br>创建列表控件 (List Control) <a href="https://msdn.microsoft.com/zh-cn/library/cc451545(v=vs.71).aspx" target="_blank" rel="noopener">https://msdn.microsoft.com/zh-cn/library/cc451545(v=vs.71).aspx</a> </p>
<hr>
<p>现有一个XML文档如下：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;root&gt;</span><br><span class="line">	&lt;Node world = <span class="string">"生命"</span>&gt;</span><br><span class="line">		&lt;Node animal = “动物<span class="string">"&gt;</span></span><br><span class="line"><span class="string">			&lt;Node aniname = "</span>熊猫<span class="string">"&gt;</span></span><br><span class="line"><span class="string">			&lt;/Node&gt;</span></span><br><span class="line"><span class="string">			&lt;Node aniname = "</span>兔子<span class="string">"&gt;</span></span><br><span class="line"><span class="string">			&lt;/Node&gt;</span></span><br><span class="line"><span class="string">		&lt;/Node&gt;</span></span><br><span class="line"><span class="string">		&lt;Node plant = "</span>植物<span class="string">"&gt;</span></span><br><span class="line"><span class="string">			&lt;Node planame = "</span>仙人掌<span class="string">"&gt;</span></span><br><span class="line"><span class="string">			&lt;/Node&gt;</span></span><br><span class="line"><span class="string">			&lt;Node planame = "</span>玫瑰<span class="string">"&gt;</span></span><br><span class="line"><span class="string">			&lt;/Node&gt;</span></span><br><span class="line"><span class="string">		&lt;/Node&gt;</span></span><br><span class="line"><span class="string">	&lt;/Node&gt;</span></span><br><span class="line"><span class="string">&lt;/root&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>要求在树状控件上显示如下：<br>–root<br>—-动物<br>—-植物</p>
<p>在树状控件上点击“动物”，在列表控件上出现<br>1 熊猫<br>2 兔子</p>
<p>同理，点击“植物”，在列表控件上出现<br>1 仙人掌<br>2 玫瑰</p>
<h1 id="思维碰撞"><a href="#思维碰撞" class="headerlink" title="思维碰撞"></a>思维碰撞</h1><p><del>之前的思路：先SelectedSingleNode(“/Node/Node”)，定位到动物这一层。然后获得该结点的属性即aniname，插入树状控件。接着指向其兄弟结点，将兄弟结点（植物）的属性同样插入树状控件。如果新插入结点，可能需递归（但都是在动物同层面）。</del><br><del>因为并没有将“熊猫”“兔子”插入树状控件，因此无法使用m_tree.GetChildItem(ht)获取。所以我想通过“动物”植物“的aniname和planame来反过来查找对应xml里的结点pNode（这里存在问题how to find it?遍历xml找同样的名字？Item能和node存在对应关系么）。找到后，只需GetChildNode之类获取孩子结点，再插入到列表控件中（也就是和列表控件交互实际是列表控件在和xml直接交互，树控件只起到选择某个item，对应到xml中）。</del><br><del>简单说来：选择树结点-&gt;获得该xml对应结点-&gt;获得每一个孩子结点-&gt;获得孩子结点的文本和其他路径属性-&gt;通过列表插入</del></p>
<p><del>就算是为树状控件和列表控件设置一个类或者一个结构，先要把xml所需的信息全部放入。毕竟投射到树状控件的结点并非全部结点，最重要的是<strong>列表控件所需结点不在树状控件中</strong>。那么添加删除时，对应的类或结构也应相应操作，是否繁琐。但感觉之前用树控件用错了，只是获取了文本，数据并没传入。</del></p>
<p>又过了一天。思路变为：为不直接操作XML，应创建一个结构体，利用MSXML解析XML将信息放入结构体中，在后续树状控件和列表控件操作时都调用该结构体而非XML。</p>
<p>前面那么多废话，其实说白了就是要<strong>自己生成一棵树</strong>，数据来源是xml，通过MSXML获得每个结点信息，自己生成的树中只包含所需要的xml片段信息，之后树控件根据指针来获得选择结点的孩子结点。<br>xml解析的最关键之处，就是如何将xml文件内容解析成内存中的可用、易用的程序数据—DOM(Document Object Model)树。DOM其实就是多叉树，每个节点只需知道自己的第一个子节点（first child）和下一个兄弟节点（next sibling），即可实现元素数据的解析。</p>
<p>理一理六层结构：<br>map-&gt;分类节点-&gt;vector-&gt;n个小节点-&gt;结构体-&gt;xml</p>
<p>如果要求分类节点就一层，是完全OK的。但如果要求分类下面还需要小分类，这就很不ok了。换为<br>两个结构体：1）小节点结构体-&gt;xml<br>2)分类节点结构体-&gt;vector-&gt;1)</p>
<p>发现六层结构办不到时，仿佛多米诺骨牌立到最后几块，突然看到最开始的一段里有一块距离放远了……<br>但换成双结构体其实改动也没太多，又好像把那块出差错的给换了块适合长度的，整个链条还是能补完整的。<br>思维过山车  跌宕起伏</p>
]]></content>
      
        <categories>
            
            <category> 互联网 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> CPP </tag>
            
            <tag> MFC </tag>
            
            <tag> XML </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[求购]]></title>
      <url>https://hubojing.github.io/2017/07/18/%E6%B1%82%E8%B4%AD/</url>
      <content type="html"><![CDATA[<div align="left"><br><img src="http://b-ssl.duitang.com/uploads/item/201510/12/20151012094245_twKjA.jpeg" width="300" height="180" style="float:right;"><br><br> </div>

<p> 　　　　<br>　　<br>这贴适合又不适合卡吧老司机进来<br>　　<br>　　<br>　　<br> <a id="more"></a></p>
<p> <strong>不是组装电脑！让你失望了[微笑]</strong></p>
<p>直连光猫<br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20170722004202507?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="直连光猫" title="">
                </div>
                <div class="image-caption">直连光猫</div>
            </figure></p>
<p> 连接路由器<br> <figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20170722004135465?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="路由器" title="">
                </div>
                <div class="image-caption">路由器</div>
            </figure></p>
<p> 这还是最快的信道  100M的钱  10M的同等感受</p>
<p>1.求推路由器<br>100M光纤 家用 连Wifi设备还比较多 需跨墙<br>要求：性能好 性能好 性能好 性价比高</p>
<p>2.求推电视音响<br>要求：音质好 音质好 音质好 重低音强（低音炮！）<br>价格……当然性价比越高越好……价位……高中低各给一款参考？</p>
<p>能直接给京东链接最好了……</p>
<p>。。。。。。</p>
<p>之所以不去卡吧等土豪吧发帖，当然是  因为  穷</p>
<p>默默想起几年前的一首诗<br>三千预算进卡吧 加钱加到九万八 八核 E5 装上去 四路Titan抱回家<br>4K 屏幕组三屏 万元水冷温度压 固态硬盘装三块 硬盘内存使劲加 　<br>键鼠必花几千元 耳机手柄三千八 还有机箱六千元 红星炸弹劈劈啪</p>
<p>—华丽的分界线—</p>
<p>一天不能同时留2个Flag是真的<br>总有一个会打脸<br>比如上一篇写的 今天说好写MSHTML例子的  结果今天先被MSXML弄昏了<br>昨晚去云村留Flag说早睡  总要做到一个吧<br>真的！我要早点睡觉！不过12点！！！</p>
<p>附上两张公司厕所励志图…………………………<br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20170718232530408?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="1" title="">
                </div>
                <div class="image-caption">1</div>
            </figure></p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20170718232554242?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="2" title="">
                </div>
                <div class="image-caption">2</div>
            </figure>
<p>各位看到的大神们晚安~<br>我要做一只美丽的小菜鸟<br>⁄(⁄ ⁄•⁄ω⁄•⁄ ⁄)⁄　　</p>
]]></content>
      
        <categories>
            
            <category> 杂谈 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 杂谈 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[一个MFC利用MSXML解析XML的最简例子]]></title>
      <url>https://hubojing.github.io/2017/07/13/%E4%B8%80%E4%B8%AAMFC%E5%88%A9%E7%94%A8MSXML%E8%A7%A3%E6%9E%90XML%E7%9A%84%E6%9C%80%E7%AE%80%E4%BE%8B%E5%AD%90/</url>
      <content type="html"><![CDATA[<p><div align="left"><br><img src="http://p7.qhimg.com/t01ca7ccf3b4a3ffe38.png" width="300" height="180" style="float:right;"></div></p>
<p><br>　　<br>　　<br>　　<br>如题。<br>　　<br>　<br>　　　<br><a id="more"></a></p>
<h1 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h1><p>系统自带MSXML6.dll，在C盘system32下。先要导入文件，定义使用空间。</p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#import <span class="meta-string">&lt;msxml6.dll&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> MSXML2;</span><br></pre></td></tr></table></figure>
<p>为三个编辑框分别添加变量m_strId,m_strAuthor,m_strTitle。</p>
<p>主要代码：</p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> CXMLDlg::OnBnClickedBtncreate()</span><br><span class="line">&#123;</span><br><span class="line">	<span class="comment">// <span class="doctag">TODO:</span>  在此添加控件通知处理程序代码</span></span><br><span class="line">	UpdateData();</span><br><span class="line"></span><br><span class="line">	MSXML2::IXMLDOMDocumentPtr pDoc;</span><br><span class="line">	MSXML2::IXMLDOMElementPtr xmlRoot;</span><br><span class="line"></span><br><span class="line">	<span class="comment">//创建DOMDocument对象</span></span><br><span class="line">	HRESULT hr = pDoc.CreateInstance(__uuidof(MSXML2::DOMDocument60));</span><br><span class="line"></span><br><span class="line">	<span class="comment">//根节点的名称为Book</span></span><br><span class="line">	<span class="comment">//创建元素并添加到文档中</span></span><br><span class="line">	xmlRoot = pDoc-&gt;createElement((<span class="keyword">_bstr_t</span>)<span class="string">"Book"</span>);</span><br><span class="line"></span><br><span class="line">	<span class="comment">//设置属性</span></span><br><span class="line">	xmlRoot-&gt;setAttribute(<span class="string">"id"</span>, (<span class="keyword">_variant_t</span>)m_strId);</span><br><span class="line">	pDoc-&gt;appendChild(xmlRoot);</span><br><span class="line">	MSXML2::IXMLDOMElementPtr pNode;</span><br><span class="line">	<span class="comment">//添加“author”元素</span></span><br><span class="line">	pNode = pDoc-&gt;createElement((<span class="keyword">_bstr_t</span>)<span class="string">"Author"</span>);</span><br><span class="line">	pNode-&gt;Puttext((<span class="keyword">_bstr_t</span>)m_strAuthor);</span><br><span class="line">	xmlRoot-&gt;appendChild(pNode);</span><br><span class="line"></span><br><span class="line">	<span class="comment">//添加“Title”元素</span></span><br><span class="line">	pNode = pDoc-&gt;createElement(<span class="string">"Title"</span>);</span><br><span class="line">	pNode-&gt;Puttext((<span class="keyword">_bstr_t</span>)m_strTitle);</span><br><span class="line">	xmlRoot-&gt;appendChild(pNode);</span><br><span class="line"></span><br><span class="line">	<span class="comment">//如果不存在就建立,存在就覆盖</span></span><br><span class="line">	pDoc-&gt;save(<span class="string">"text.xml"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> CXMLDlg::OnBnClickedBtnload()</span><br><span class="line">&#123;</span><br><span class="line">	<span class="comment">// <span class="doctag">TODO:</span>  在此添加控件通知处理程序代码</span></span><br><span class="line">	MSXML2::IXMLDOMDocumentPtr pDoc;</span><br><span class="line">	HRESULT hr = pDoc.CreateInstance(__uuidof(MSXML2::DOMDocument60));</span><br><span class="line"></span><br><span class="line">	<span class="comment">//加载文件</span></span><br><span class="line">	pDoc-&gt;load(<span class="string">"text.xml"</span>);</span><br><span class="line"></span><br><span class="line">	MSXML2::IXMLDOMNodePtr pNode;</span><br><span class="line">	<span class="comment">//在树中查找名为Book的节点,"//"表示在任意一层查找</span></span><br><span class="line">	pNode = pDoc-&gt;selectSingleNode(<span class="string">"//Book"</span>);</span><br><span class="line">	MSXML2::DOMNodeType nodeType;</span><br><span class="line">	<span class="comment">//得到节点类型</span></span><br><span class="line">	pNode-&gt;get_nodeType(&amp;nodeType);</span><br><span class="line">	<span class="comment">//节点名称</span></span><br><span class="line">	CString strName;</span><br><span class="line">	strName = (<span class="keyword">char</span> *)pNode-&gt;GetnodeName();</span><br><span class="line">	<span class="comment">//节点属性,放在链表中</span></span><br><span class="line">	MSXML2::IXMLDOMNamedNodeMapPtr pAttrMap = <span class="literal">NULL</span>;</span><br><span class="line">	MSXML2::IXMLDOMNodePtr   pAttrItem;</span><br><span class="line">	<span class="keyword">_variant_t</span> variantValue;</span><br><span class="line">	pNode-&gt;get_attributes(&amp;pAttrMap);</span><br><span class="line">	<span class="keyword">long</span> count;</span><br><span class="line">	count = pAttrMap-&gt;get_length(&amp;count);</span><br><span class="line">	pAttrMap-&gt;get_item(<span class="number">0</span>, &amp;pAttrItem);</span><br><span class="line">	<span class="comment">//取得节点的值</span></span><br><span class="line">	pAttrItem-&gt;get_nodeTypedValue(&amp;variantValue);</span><br><span class="line">	m_strId = (<span class="keyword">char</span> *)(<span class="keyword">_bstr_t</span>)variantValue;</span><br><span class="line">	UpdateData(FALSE);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> CXMLDlg::OnBnClickedBtnclear()</span><br><span class="line">&#123;</span><br><span class="line">	<span class="comment">// <span class="doctag">TODO:</span>  在此添加控件通知处理程序代码</span></span><br><span class="line">	m_temp = <span class="string">""</span>;</span><br><span class="line">	SetDlgItemText(IDC_EDIT1, m_temp);</span><br><span class="line">	SetDlgItemText(IDC_EDIT2, m_temp);</span><br><span class="line">	SetDlgItemText(IDC_EDIT3, m_temp);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h1><p>生成的XML:</p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20170713215940972?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="XML" title="">
                </div>
                <div class="image-caption">XML</div>
            </figure>
<p>界面：</p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20170713220135411?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="界面" title="">
                </div>
                <div class="image-caption">界面</div>
            </figure>
<h1 id="报错"><a href="#报错" class="headerlink" title="报错"></a>报错</h1><p>1.<br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20170713214333758?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="报错" title="">
                </div>
                <div class="image-caption">报错</div>
            </figure><br>之前也遇到过类似情况。</p>
<p>解决：<br><a href="http://cs.cuc.edu.cn/huangwei/wiki/teaching_c_ds_fileio_unicode.html" target="_blank" rel="noopener">Unicode in the Windows API</a><br><a href="https://msdn.microsoft.com/en-us/library/windows/desktop/dd317766%28v=vs.85%29.aspx" target="_blank" rel="noopener">Conventions for Function Prototypes</a></p>
<p>简单说来，是因为随着版本更替，老规则渐渐不使用，现在的字符多是Unicode字符集，为了各版本的兼容，最好的方法是使用TEXT宏。即将程序改为：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (!SUCCEEDED(hr))</span><br><span class="line"></span><br><span class="line">	&#123;</span><br><span class="line"></span><br><span class="line">		MessageBox(_T(<span class="string">"无法创建DOMDocument对象，请检查是否安装了MS XML Parser 运行库!"</span>));</span><br><span class="line"></span><br><span class="line">		<span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">	&#125;</span><br></pre></td></tr></table></figure></p>
<p>即能编译通过。</p>
<p>2.<br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20170713214741223?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="报错2" title="">
                </div>
                <div class="image-caption">报错2</div>
            </figure><br>这个DOMDocument40是什么？同样的程序，WIN7电脑就可以编译通过，WIN10就报错？要换成DOMDocument60才行。</p>
<p>答：MSXML SDK版本不同造成的差异。</p>
<h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p><a href="http://m.blog.csdn.net/John_ToStr/article/details/50970443" target="_blank" rel="noopener">MFC中利用MSXML解析XML文档</a></p>
]]></content>
      
        <categories>
            
            <category> 互联网 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> CPP </tag>
            
            <tag> MFC </tag>
            
            <tag> XML </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[新闻杂谈]]></title>
      <url>https://hubojing.github.io/2017/06/29/%E5%8B%92%E7%B4%A2%E7%97%85%E6%AF%92/</url>
      <content type="html"><![CDATA[<div align="left"><br><img src="http://n.sinaimg.cn/translate/20170628/njjU-fyhneam5185815.jpg" width="300" height="180" style="float:right;"><br><br><br><br><br>给Petya病毒差评，比永恒之蓝的用户体验差太多了，竟然没有简体中文版！！！<br>　　<br><br><br> </div>

<a id="more"></a>
<p><strong>三条新闻</strong></p>
<p>巴铁狗带<br>今天看新闻巴铁终于被拆了……<br>还记得当初第一回看到这个新概念视频时还觉得超酷的，然而仔细一想就漏洞百出。黑科技常有，但在众人提出质疑后却给不出解决方案的情况下一意孤行就很不地道。只能说是打着科研旗号骗国家钱的玩意儿……</p>
<hr>
<p>之前报道：<br>【微软惊呆：Win 10源代码泄漏！】外媒Theregister获得消息称，Win10源代码目前在网上被大量泄漏，这些源代码大小超过32TB。据悉，这些代码在今年三月左右在微软内部系统当中流出，包含Win10硬件驱动程序源码及USB和Wi-Fi协议栈等，获得源代码的黑客将可以查找系统中的漏洞用来破坏全球Windows系统.. ​</p>
<p>标题我都想好了：<br>震惊！！Windows系统将走向开源 国产自主研发加速</p>
<p>最新消息：微软承认遭泄露，不过只有1.2G。（这就很不新闻了）</p>
<hr>
<p>最近勒索病毒又升级了……吓得我又去看看自己win10升级没……</p>
<p>Petya病毒对勒索对象的加密，分为以下7个步骤：<br>遍历所有驱动器，对每个驱动器创建一个线程并行加密 -&gt; 生成AES-128密钥key -&gt; 遍历磁盘文件，用key对其进行AES加密 -&gt; 从程序中获取一个公钥pubkey（内置固定） -&gt; 用pubkey加密key，得到ekey -&gt; 将ekey写入README.TXT -&gt; 释放key</p>
<p><a href="https://yq.aliyun.com/articles/85783?spm=5176.100239.blogcont111587.33.CQn23O&amp;utm_content=m_24432" target="_blank" rel="noopener">WanaCrypt0r勒索蠕虫完全分析报告</a></p>
]]></content>
      
        <categories>
            
            <category> 杂谈 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 杂谈 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[HOOPS记录]]></title>
      <url>https://hubojing.github.io/2017/06/25/HOOPS%E8%AE%B0%E5%BD%95/</url>
      <content type="html"><![CDATA[<div align="left"><br><img src="https://ss2.bdstatic.com/70cFvnSh_Q1YnxGkpoWK1HF6hhy/it/u=2467623496,1926622754&fm=15&gp=0.jpg" width="300" height="180" style="float:right;"><br><br> HOOPS初学概念小记（自用笔记）。<br>　　<br><br><br> </div>

<a id="more"></a>
<h1 id="HOOPS-3D-Application-Framework-HOOPS-3dAF"><a href="#HOOPS-3D-Application-Framework-HOOPS-3dAF" class="headerlink" title="HOOPS 3D Application Framework (HOOPS/3dAF)"></a>HOOPS 3D Application Framework (HOOPS/3dAF)</h1><p>官网描述<br>With HOOPS Visualize, you can rapidly produce eye-popping graphics across both mobile and desktop platforms. </p>
<p>At its core, HOOPS Visualize provides a flexible, hierarchical scene management engine capable of handling a range of graphics entities, together with a sophisticated graphics pipeline and high-performance graphics and interaction handling algorithms. It also delivers advanced capabilities to accelerate your application development, including an animation engine, clash detection, multi-plane sectioning, and large model visualization. </p>
<h1 id="HOOPS-基本图元和属性支持"><a href="#HOOPS-基本图元和属性支持" class="headerlink" title="HOOPS 基本图元和属性支持"></a>HOOPS 基本图元和属性支持</h1><blockquote>
<p>几 何</p>
<ul>
<li>Images, Unicode Text, Points, Lines, Polygons, Polylines, Polycylinders, NURBS curves, NURBS surfaces, Arcs, Ellipses, Circles, Tristrips, Trifans, Indexed Facesets, Cutting Planes, Capping Geometry<br>几何属性<br>Color, Transparency, Textures, Visibility, Patterns (Facet,edge 和 Line), Color Ramps, Lighting Interpolation, Selectability<br>渲染属性<br>Shaded, Analytic Hidden Line, Wireframe,Color Maps, Various Color Ramping Algorithms, Window Background Coloring</li>
</ul>
</blockquote>
<p>edges包含polygons,shells,meshes.<br>faces包含shells和meshes.<br>markers 单独的点.</p>
<p>标记marker</p>
<blockquote>
<p>可作为注释来使用</p>
<ul>
<li>当放大和缩小时标记的大小是不变的</li>
<li>标记的大小是朝向相机的，它并不旋转</li>
</ul>
</blockquote>
<h1 id="HOOPS-MVO-（MVO分别是Model、View、Operator的缩写）"><a href="#HOOPS-MVO-（MVO分别是Model、View、Operator的缩写）" class="headerlink" title="HOOPS MVO  （MVO分别是Model、View、Operator的缩写）"></a>HOOPS MVO  （MVO分别是Model、View、Operator的缩写）</h1><blockquote>
<p>段结构</p>
<ul>
<li>HDB</li>
<li>HBaseModel：处理在包含库下的段</li>
<li>HBaseView：处理在驱动段下的段和实例</li>
<li>HbaseOperator：处理图形用户界面/事件循环<br>· 相机操作<br>· 几何对象操作<br>· 选择</li>
</ul>
</blockquote>
<h1 id="3D应用程序中经常用到的函数"><a href="#3D应用程序中经常用到的函数" class="headerlink" title="3D应用程序中经常用到的函数"></a>3D应用程序中经常用到的函数</h1><ul>
<li>保存应用程序数据</li>
<li>绘制应用程序数据</li>
<li>管理应用程序数据</li>
<li>相机</li>
<li>选择</li>
<li>坐标</li>
<li>查询</li>
<li>驱动器设置</li>
</ul>
<h1 id="shell官网描述"><a href="#shell官网描述" class="headerlink" title="shell官网描述"></a>shell官网描述</h1><p>3D applications typically represent 3D objects with an “indexed face set” or “polygon-point mesh”. In Visualize, such primitives are called ‘shells’. A shell defines the boundary surface of an object in 3D using a set of planar polygons. Polygons can be multi-sided and can include holes. A shell is defined as an array of vertices (3D points) and an array of indices into the vertex array that define each polygonal face.</p>
<p>HOOPS Visualize supports a wide range of advanced functionality relating to shells, including the ability to select, highlight, and modify individual sub-entities (faces, edges, and vertices). Attributes such as normals, colors, and texture coordinates can also be set at the sub-entity level to enable a variety of complex shading and display.</p>
<p>Shell   一系列连通的Face / Wire的集合。线、面的集合，能位于实体外，也能在内部形成空洞。一个体含一个悬挂面，一个体内嵌许多和外表面相连的面都称为shell。</p>
<h2 id="shell-attributes属性"><a href="#shell-attributes属性" class="headerlink" title="shell attributes属性"></a>shell attributes属性</h2><p>1.Vertex markers<br>2.Silhouette（外表面）/perimeter/hard/adjacent edges<br>3.Cut edges/faces<br>4.Attributes on subparts<br>5.Smooth shading<br>6.Advanced rendering</p>
<h1 id="selection官网描述"><a href="#selection官网描述" class="headerlink" title="selection官网描述"></a>selection官网描述</h1><p>The Visualize libraries provide multiple operations for selection and several advanced highlighting techniques.</p>
<p>Selection</p>
<p>Control over what is targeted for selection is configurable:</p>
<p>Segments in the scene graph can be marked as available for selection<br>The selection level can be specified – entity, geometry, segment, or segment tree. Selection of individual vertices, edges and faces can be configured<br>The number of selected items to search for is configurable<br>The selection proximity can be used to select the nearest item on screen within a screen-based tolerance<br>Selections can be made of all items inside and outside a drag box, inside arbitrary screen regions defined by polylines or polygons, by a volume of 3D space, and by an arbitrary triangle mesh in 3D for clash/collision detection.</p>
<h1 id="坐标系（Coordinate-Systems）"><a href="#坐标系（Coordinate-Systems）" class="headerlink" title="坐标系（Coordinate Systems）"></a>坐标系（Coordinate Systems）</h1><p>对象（Object）-&gt;世界（World）-&gt;(-&gt;视点ViewPoint)-&gt;外窗口（Outer Window）-&gt;像素（Pixel）</p>
<h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><p><a href="http://blog.csdn.net/myan/article/details/647511" target="_blank" rel="noopener">理解矩阵（一）</a><br><a href="http://blog.csdn.net/myan/article/details/649018" target="_blank" rel="noopener">理解矩阵（二）</a><br><a href="http://blog.csdn.net/myan/article/details/1865397" target="_blank" rel="noopener">理解矩阵（三）</a><br><a href="https://wenku.baidu.com/view/a19bf8ec4afe04a1b071ded2.html?re=view" target="_blank" rel="noopener">HOOPS基础培训课程1</a><br><a href="https://wenku.baidu.com/view/a0154f28915f804d2b16c1d2.html?re=view" target="_blank" rel="noopener">HOOPS基础培训课程2</a><br><a href="https://wenku.baidu.com/view/84fdc0c789eb172ded63b7d2.html?re=view" target="_blank" rel="noopener">HOOPS基础培训课程3</a><br><a href="https://wenku.baidu.com/view/796caa5377232f60ddcca102.html?re=view" target="_blank" rel="noopener">HOOPS_MFC应用程序向导</a></p>
]]></content>
      
        <categories>
            
            <category> 互联网 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 3D </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[MFC+多线程+进度条+复制文件（夹）]]></title>
      <url>https://hubojing.github.io/2017/06/15/MFC-%E5%A4%9A%E7%BA%BF%E7%A8%8B-%E8%BF%9B%E5%BA%A6%E6%9D%A1-%E5%A4%8D%E5%88%B6%E6%96%87%E4%BB%B6%EF%BC%88%E5%A4%B9%EF%BC%89/</url>
      <content type="html"><![CDATA[<div align="left"><br><img src="https://ss3.bdstatic.com/70cFv8Sh_Q1YnxGkpoWK1HF6hhy/it/u=1049830277,1612840852&fm=26&gp=0.jpg" width="300" height="180" style="float:right;"><br><br><br>　　<strong>MFC，多线程+进度条+复制文件（夹）小程序。</strong><br><br><br> </div>

<a id="more"></a>
<p>　　多线程：</p>
<ol>
<li>做一个MFC对话框程序。</li>
<li>点击开始按钮，程序启动一个工作线程，复制指定的文件夹到目标位置。</li>
<li>同时在更新进度条，反映当前的复制进度（按文件数量计算进度）。</li>
<li>点击停止按钮时终止，但需要保证当前正在复制的文件得以复制完成。</li>
<li>工作线程访问主线程需要使用消息机制，不能直接访问。</li>
<li>主界面不能锁死，停止按钮需要随时可以响应点击。</li>
</ol>
<p>整体思路：<br>在开始按钮里的响应函数中创建一个线程，在线程里复制，通过消息机制更新进度条，在消息机制的函数中和复制过程关联显示进度。</p>
<p>需要解决的问题：<br>1.怎么创建线程<br>2.怎么更新进度条<br>3.怎么将编辑框中输入的路径被copyfile函数读取到<br>4.怎么获取文件个数（遍历）<br>5.怎么把进度条和复制文件进度关联<br>（通过文件个数 进度条范围设置为0-文件数量长度    步长为1 完成一次复制加一次）<br>6.点击取消怎么保证当前正在复制的文件得以复制完成</p>
<p>获取个数：<br>递归遍历整个文件夹，然后递归复制文件到目的文件夹。<br>在递归遍历整个文件夹的时候，就可以拿到整个文件夹的大小以及文件数量。</p>
<p>传递进度数据，用postmessage到该进度条的窗口，在进度条窗口获取该消息 设置SetPos，updatedata该控件。<br>一个对话框里有个进度条控件，当线程接收到数据（文件的总大小和收到的大小）postmessage给对话框，对话框的PreTranslateMessage(MSG* pMsg)截取该消息设置进度条控件（范围和增量，setpos）。</p>
<p>我的方案：<br>关键代码：</p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//复制函数</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">CopyDirectory</span><span class="params">(CString source, CString target, CCopyFoldersDlg * pDlg)</span>    </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"> 	 </span><br><span class="line">	CreateDirectory(target,<span class="literal">NULL</span>);   </span><br><span class="line">  </span><br><span class="line">    CFileFind finder;    </span><br><span class="line">    CString path;    </span><br><span class="line">    path.Format(_T(<span class="string">"%s\\*.*"</span>),source);    </span><br><span class="line">  </span><br><span class="line">    BOOL bWorking = finder.FindFile(path);    </span><br><span class="line">    <span class="keyword">while</span> (bWorking)  </span><br><span class="line">    &#123;   </span><br><span class="line">        bWorking = finder.FindNextFile();   </span><br><span class="line">           </span><br><span class="line">        <span class="keyword">if</span> (finder.IsDirectory() &amp;&amp; !finder.IsDots())  </span><br><span class="line">        &#123;   </span><br><span class="line">            CopyDirectory(finder.GetFilePath(), target+_T(<span class="string">"\\"</span>)+finder.GetFileName(), pDlg);  <span class="comment">//递归 </span></span><br><span class="line">        &#125;    </span><br><span class="line">        <span class="keyword">else</span>  </span><br><span class="line">        &#123;      </span><br><span class="line"></span><br><span class="line">			WaitForSingleObject(pDlg-&gt;hEvent,INFINITE);</span><br><span class="line"></span><br><span class="line">            CopyFile(finder.GetFilePath(), target+_T(<span class="string">"\\"</span>)+finder.GetFileName(), FALSE);   </span><br><span class="line">            count++;  </span><br><span class="line">            pDlg-&gt;PostMessage(WM_USER_PROCESS, count);  </span><br><span class="line">          </span><br><span class="line">  </span><br><span class="line">             Sleep(<span class="number">50</span>);   </span><br><span class="line">        &#125;   </span><br><span class="line">    &#125;    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">VOID <span class="title">GetInfo</span><span class="params">(CString csPath, <span class="keyword">long</span>&amp; FoldersNum, <span class="keyword">long</span>&amp; FilesNum)</span>  </span></span><br><span class="line"><span class="function"></span>&#123;     </span><br><span class="line">    SetCurrentDirectory(csPath);  </span><br><span class="line">    CFileFind finder;  </span><br><span class="line">    BOOL bWorking = finder.FindFile(_T(<span class="string">"*.*"</span>));  </span><br><span class="line">    <span class="keyword">while</span>(bWorking)  </span><br><span class="line">    &#123;  </span><br><span class="line">        bWorking = finder.FindNextFile();  </span><br><span class="line">  </span><br><span class="line">        <span class="keyword">if</span>(finder.IsDots())   </span><br><span class="line">        &#123;  </span><br><span class="line">            <span class="keyword">continue</span>;  </span><br><span class="line">        &#125;  </span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(finder.IsDirectory())  </span><br><span class="line">        &#123;  </span><br><span class="line">            ++FoldersNum;  </span><br><span class="line">            GetInfo(finder.GetFilePath(), FoldersNum, FilesNum);  </span><br><span class="line">        &#125;  </span><br><span class="line">        <span class="keyword">else</span>  </span><br><span class="line">        &#123;  </span><br><span class="line">            ++FilesNum;  </span><br><span class="line">        &#125;  </span><br><span class="line">    &#125;  </span><br><span class="line">      </span><br><span class="line">&#125;  </span><br><span class="line"></span><br><span class="line"><span class="comment">//复制线程</span></span><br><span class="line">DWORD WINAPI CCopyFoldersDlg::CopyFolders(LPVOID pParam)</span><br><span class="line">&#123;  </span><br><span class="line">	CCopyFoldersDlg* pDlg = (CCopyFoldersDlg*)pParam;  </span><br><span class="line"></span><br><span class="line">	 <span class="keyword">if</span> (!pDlg) </span><br><span class="line">	 &#123;</span><br><span class="line">		 <span class="keyword">return</span> <span class="number">0</span>;  </span><br><span class="line">	 &#125;</span><br><span class="line">	 ResetEvent(pDlg-&gt;hExit);  </span><br><span class="line"></span><br><span class="line">	<span class="keyword">long</span> FoldersNum  = <span class="number">0</span>;                 </span><br><span class="line">    <span class="keyword">long</span> FilesNum = <span class="number">0</span>;                  </span><br><span class="line">    GetInfo(pDlg-&gt;m_SrcPath,FoldersNum, FilesNum);  </span><br><span class="line">	pDlg-&gt;m_Progress.SetRange(<span class="number">0</span>, FilesNum);  </span><br><span class="line">    pDlg-&gt;m_Progress.SetStep(<span class="number">1</span>); </span><br><span class="line">	CopyDirectory(pDlg-&gt;m_SrcPath, pDlg-&gt;m_DesPath, pDlg);   </span><br><span class="line"></span><br><span class="line">	SetEvent(pDlg-&gt;hExit);  </span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">LRESULT CCopyFoldersDlg::Do_process(WPARAM wParam, LPARAM lParam)   </span><br><span class="line">&#123;   </span><br><span class="line">   wParam += <span class="number">1</span>;  </span><br><span class="line">   m_Progress.SetPos(wParam);    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;  </span><br><span class="line">&#125;         </span><br><span class="line">  </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> CCopyFoldersDlg::OnStart() </span><br><span class="line">&#123;</span><br><span class="line">	UpdateData(<span class="literal">true</span>);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">if</span> ((m_SrcPath.IsEmpty() &amp;&amp; m_DesPath.IsEmpty()))</span><br><span class="line">	&#123;</span><br><span class="line">		MessageBox(<span class="string">"路径不能为空！"</span>);</span><br><span class="line">		<span class="keyword">return</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">	&#123;</span><br><span class="line">		<span class="comment">//创建线程</span></span><br><span class="line">		hThread = CreateThread(<span class="literal">NULL</span>, <span class="number">0</span>, CopyFolders, <span class="keyword">this</span>, <span class="number">0</span>, <span class="literal">NULL</span>);</span><br><span class="line">		hEvent = CreateEvent(<span class="literal">NULL</span>, TRUE, TRUE, <span class="literal">NULL</span>);</span><br><span class="line">		CloseHandle(hThread);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> CCopyFoldersDlg::OnStop() </span><br><span class="line">&#123;</span><br><span class="line">	m_iStatus++;  </span><br><span class="line">         </span><br><span class="line">    <span class="keyword">if</span> (m_iStatus % <span class="number">2</span> == <span class="number">0</span>)  </span><br><span class="line">    &#123;    </span><br><span class="line">         SetEvent(hEvent);</span><br><span class="line">    &#125;   </span><br><span class="line">    <span class="keyword">else</span>  </span><br><span class="line">    &#123;  </span><br><span class="line">        ResetEvent(hEvent);</span><br><span class="line">    &#125;  </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> CCopyFoldersDlg::OnTimer(UINT_PTR nIDEvent)  </span><br><span class="line">&#123;  </span><br><span class="line">    CDialog::OnTimer(nIDEvent);  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>完整代码：<br>.cpp文件</p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// CopyFoldersDlg.cpp : implementation file</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"stdafx.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"CopyFolders.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"CopyFoldersDlg.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"windows.h"</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> _DEBUG</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> new DEBUG_NEW</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">undef</span> THIS_FILE</span></span><br><span class="line"><span class="keyword">static</span> <span class="keyword">char</span> THIS_FILE[] = __FILE__;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">static</span> <span class="keyword">int</span> count = <span class="number">0</span>; </span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> WM_USER_PROCESS (WM_USER+101)  </span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">CopyDirectory</span><span class="params">(CString source, CString target,CWnd * pWndMsg)</span></span>;  </span><br><span class="line"><span class="comment">/////////////////////////////////////////////////////////////////////////////</span></span><br><span class="line"><span class="comment">// CAboutDlg dialog used for App About</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CAboutDlg</span> :</span> <span class="keyword">public</span> CDialog</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">	CAboutDlg();</span><br><span class="line"></span><br><span class="line"><span class="comment">// Dialog Data</span></span><br><span class="line">	<span class="comment">//&#123;&#123;AFX_DATA(CAboutDlg)</span></span><br><span class="line">	<span class="keyword">enum</span> &#123; IDD = IDD_ABOUTBOX &#125;;</span><br><span class="line">	<span class="comment">//&#125;&#125;AFX_DATA</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">// ClassWizard generated virtual function overrides</span></span><br><span class="line">	<span class="comment">//&#123;&#123;AFX_VIRTUAL(CAboutDlg)</span></span><br><span class="line">	<span class="keyword">protected</span>:</span><br><span class="line">	<span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">DoDataExchange</span><span class="params">(CDataExchange* pDX)</span></span>;    <span class="comment">// DDX/DDV support</span></span><br><span class="line">	<span class="comment">//&#125;&#125;AFX_VIRTUAL</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Implementation</span></span><br><span class="line"><span class="keyword">protected</span>:</span><br><span class="line">	<span class="comment">//&#123;&#123;AFX_MSG(CAboutDlg)</span></span><br><span class="line">	<span class="comment">//&#125;&#125;AFX_MSG</span></span><br><span class="line">	DECLARE_MESSAGE_MAP()</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">CAboutDlg::CAboutDlg() : CDialog(CAboutDlg::IDD)</span><br><span class="line">&#123;</span><br><span class="line">	<span class="comment">//&#123;&#123;AFX_DATA_INIT(CAboutDlg)</span></span><br><span class="line">	<span class="comment">//&#125;&#125;AFX_DATA_INIT</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> CAboutDlg::DoDataExchange(CDataExchange* pDX)</span><br><span class="line">&#123;</span><br><span class="line">	CDialog::DoDataExchange(pDX);</span><br><span class="line">	<span class="comment">//&#123;&#123;AFX_DATA_MAP(CAboutDlg)</span></span><br><span class="line">	<span class="comment">//&#125;&#125;AFX_DATA_MAP</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">BEGIN_MESSAGE_MAP(CAboutDlg, CDialog)</span><br><span class="line">	<span class="comment">//&#123;&#123;AFX_MSG_MAP(CAboutDlg)</span></span><br><span class="line">		<span class="comment">// No message handlers</span></span><br><span class="line">	<span class="comment">//&#125;&#125;AFX_MSG_MAP</span></span><br><span class="line">END_MESSAGE_MAP()</span><br><span class="line"></span><br><span class="line"><span class="comment">/////////////////////////////////////////////////////////////////////////////</span></span><br><span class="line"><span class="comment">// CCopyFoldersDlg dialog</span></span><br><span class="line"></span><br><span class="line">CCopyFoldersDlg::CCopyFoldersDlg(CWnd* pParent <span class="comment">/*=NULL*/</span>)</span><br><span class="line">	: CDialog(CCopyFoldersDlg::IDD, pParent)</span><br><span class="line">&#123;</span><br><span class="line">	<span class="comment">//&#123;&#123;AFX_DATA_INIT(CCopyFoldersDlg)</span></span><br><span class="line">	m_SrcPath = _T(<span class="string">""</span>);</span><br><span class="line">	m_DesPath = _T(<span class="string">""</span>);</span><br><span class="line">	<span class="comment">//&#125;&#125;AFX_DATA_INIT</span></span><br><span class="line">	<span class="comment">// Note that LoadIcon does not require a subsequent DestroyIcon in Win32</span></span><br><span class="line">	m_hIcon = AfxGetApp()-&gt;LoadIcon(IDR_MAINFRAME);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> CCopyFoldersDlg::DoDataExchange(CDataExchange* pDX)</span><br><span class="line">&#123;</span><br><span class="line">	CDialog::DoDataExchange(pDX);</span><br><span class="line">	<span class="comment">//&#123;&#123;AFX_DATA_MAP(CCopyFoldersDlg)</span></span><br><span class="line">	DDX_Control(pDX, IDC_PROGRESS, m_Progress);</span><br><span class="line">	DDX_Text(pDX, IDC_EDIT1, m_SrcPath);</span><br><span class="line">	DDX_Text(pDX, IDC_EDIT2, m_DesPath);</span><br><span class="line">	<span class="comment">//&#125;&#125;AFX_DATA_MAP</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">BEGIN_MESSAGE_MAP(CCopyFoldersDlg, CDialog)</span><br><span class="line">	<span class="comment">//&#123;&#123;AFX_MSG_MAP(CCopyFoldersDlg)</span></span><br><span class="line">	ON_WM_SYSCOMMAND()</span><br><span class="line">	ON_WM_PAINT()</span><br><span class="line">	ON_WM_QUERYDRAGICON()</span><br><span class="line">	ON_BN_CLICKED(IDC_START, OnStart)</span><br><span class="line">	ON_BN_CLICKED(IDC_STOP, OnStop)</span><br><span class="line">	ON_MESSAGE(WM_USER_PROCESS, Do_process)  </span><br><span class="line">	ON_WM_TIMER()  </span><br><span class="line"> </span><br><span class="line">	<span class="comment">//&#125;&#125;AFX_MSG_MAP</span></span><br><span class="line">END_MESSAGE_MAP()</span><br><span class="line"></span><br><span class="line"><span class="comment">/////////////////////////////////////////////////////////////////////////////</span></span><br><span class="line"><span class="comment">// CCopyFoldersDlg message handlers</span></span><br><span class="line"></span><br><span class="line">BOOL CCopyFoldersDlg::OnInitDialog()</span><br><span class="line">&#123;</span><br><span class="line">	CDialog::OnInitDialog();</span><br><span class="line"></span><br><span class="line">	<span class="comment">// Add "About..." menu item to system menu.</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">// IDM_ABOUTBOX must be in the system command range.</span></span><br><span class="line">	ASSERT((IDM_ABOUTBOX &amp; <span class="number">0xFFF0</span>) == IDM_ABOUTBOX);</span><br><span class="line">	ASSERT(IDM_ABOUTBOX &lt; <span class="number">0xF000</span>);</span><br><span class="line"></span><br><span class="line">	CMenu* pSysMenu = GetSystemMenu(FALSE);</span><br><span class="line">	<span class="keyword">if</span> (pSysMenu != <span class="literal">NULL</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		CString strAboutMenu;</span><br><span class="line">		strAboutMenu.LoadString(IDS_ABOUTBOX);</span><br><span class="line">		<span class="keyword">if</span> (!strAboutMenu.IsEmpty())</span><br><span class="line">		&#123;</span><br><span class="line">			pSysMenu-&gt;AppendMenu(MF_SEPARATOR);</span><br><span class="line">			pSysMenu-&gt;AppendMenu(MF_STRING, IDM_ABOUTBOX, strAboutMenu);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">// Set the icon for this dialog.  The framework does this automatically</span></span><br><span class="line">	<span class="comment">//  when the application's main window is not a dialog</span></span><br><span class="line">	SetIcon(m_hIcon, TRUE);			<span class="comment">// Set big icon</span></span><br><span class="line">	SetIcon(m_hIcon, FALSE);		<span class="comment">// Set small icon</span></span><br><span class="line">	</span><br><span class="line">	<span class="comment">// <span class="doctag">TODO:</span> Add extra initialization here</span></span><br><span class="line">	</span><br><span class="line">	<span class="keyword">return</span> TRUE;  <span class="comment">// return TRUE  unless you set the focus to a control</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> CCopyFoldersDlg::OnSysCommand(UINT nID, LPARAM lParam)</span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">if</span> ((nID &amp; <span class="number">0xFFF0</span>) == IDM_ABOUTBOX)</span><br><span class="line">	&#123;</span><br><span class="line">		CAboutDlg dlgAbout;</span><br><span class="line">		dlgAbout.DoModal();</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">	&#123;</span><br><span class="line">		CDialog::OnSysCommand(nID, lParam);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// If you add a minimize button to your dialog, you will need the code below</span></span><br><span class="line"><span class="comment">//  to draw the icon.  For MFC applications using the document/view model,</span></span><br><span class="line"><span class="comment">//  this is automatically done for you by the framework.</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> CCopyFoldersDlg::OnPaint() </span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">if</span> (IsIconic())</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="function">CPaintDC <span class="title">dc</span><span class="params">(<span class="keyword">this</span>)</span></span>; <span class="comment">// device context for painting</span></span><br><span class="line"></span><br><span class="line">		SendMessage(WM_ICONERASEBKGND, (WPARAM) dc.GetSafeHdc(), <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">		<span class="comment">// Center icon in client rectangle</span></span><br><span class="line">		<span class="keyword">int</span> cxIcon = GetSystemMetrics(SM_CXICON);</span><br><span class="line">		<span class="keyword">int</span> cyIcon = GetSystemMetrics(SM_CYICON);</span><br><span class="line">		CRect rect;</span><br><span class="line">		GetClientRect(&amp;rect);</span><br><span class="line">		<span class="keyword">int</span> x = (rect.Width() - cxIcon + <span class="number">1</span>) / <span class="number">2</span>;</span><br><span class="line">		<span class="keyword">int</span> y = (rect.Height() - cyIcon + <span class="number">1</span>) / <span class="number">2</span>;</span><br><span class="line"></span><br><span class="line">		<span class="comment">// Draw the icon</span></span><br><span class="line">		dc.DrawIcon(x, y, m_hIcon);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">	&#123;</span><br><span class="line">		CDialog::OnPaint();</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// The system calls this to obtain the cursor to display while the user drags</span></span><br><span class="line"><span class="comment">//  the minimized window.</span></span><br><span class="line">HCURSOR CCopyFoldersDlg::OnQueryDragIcon()</span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">return</span> (HCURSOR) m_hIcon;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//复制函数</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">CopyDirectory</span><span class="params">(CString source, CString target, CCopyFoldersDlg * pDlg)</span>    </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"> 	 </span><br><span class="line">	CreateDirectory(target,<span class="literal">NULL</span>);   </span><br><span class="line">  </span><br><span class="line">    CFileFind finder;    </span><br><span class="line">    CString path;    </span><br><span class="line">    path.Format(_T(<span class="string">"%s\\*.*"</span>),source);    </span><br><span class="line">  </span><br><span class="line">    BOOL bWorking = finder.FindFile(path);    </span><br><span class="line">    <span class="keyword">while</span> (bWorking)  </span><br><span class="line">    &#123;   </span><br><span class="line">        bWorking = finder.FindNextFile();   </span><br><span class="line">           </span><br><span class="line">        <span class="keyword">if</span> (finder.IsDirectory() &amp;&amp; !finder.IsDots())  </span><br><span class="line">        &#123;   </span><br><span class="line">            CopyDirectory(finder.GetFilePath(), target+_T(<span class="string">"\\"</span>)+finder.GetFileName(), pDlg);  <span class="comment">//递归 </span></span><br><span class="line">        &#125;    </span><br><span class="line">        <span class="keyword">else</span>  </span><br><span class="line">        &#123;      </span><br><span class="line"></span><br><span class="line">			WaitForSingleObject(pDlg-&gt;hEvent,INFINITE);</span><br><span class="line"></span><br><span class="line">            CopyFile(finder.GetFilePath(), target+_T(<span class="string">"\\"</span>)+finder.GetFileName(), FALSE);   </span><br><span class="line">            count++;  </span><br><span class="line">            pDlg-&gt;PostMessage(WM_USER_PROCESS, count);  </span><br><span class="line">          </span><br><span class="line">  </span><br><span class="line">             Sleep(<span class="number">50</span>);   </span><br><span class="line">        &#125;   </span><br><span class="line">    &#125;    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">VOID <span class="title">GetInfo</span><span class="params">(CString csPath, <span class="keyword">long</span>&amp; FoldersNum, <span class="keyword">long</span>&amp; FilesNum)</span>  </span></span><br><span class="line"><span class="function"></span>&#123;     </span><br><span class="line">    SetCurrentDirectory(csPath);  </span><br><span class="line">    CFileFind finder;  </span><br><span class="line">    BOOL bWorking = finder.FindFile(_T(<span class="string">"*.*"</span>));  </span><br><span class="line">    <span class="keyword">while</span>(bWorking)  </span><br><span class="line">    &#123;  </span><br><span class="line">        bWorking = finder.FindNextFile();  </span><br><span class="line">  </span><br><span class="line">        <span class="keyword">if</span>(finder.IsDots())   </span><br><span class="line">        &#123;  </span><br><span class="line">            <span class="keyword">continue</span>;  </span><br><span class="line">        &#125;  </span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(finder.IsDirectory())  </span><br><span class="line">        &#123;  </span><br><span class="line">            ++FoldersNum;  </span><br><span class="line">            GetInfo(finder.GetFilePath(), FoldersNum, FilesNum);  </span><br><span class="line">        &#125;  </span><br><span class="line">        <span class="keyword">else</span>  </span><br><span class="line">        &#123;  </span><br><span class="line">            ++FilesNum;  </span><br><span class="line">        &#125;  </span><br><span class="line">    &#125;  </span><br><span class="line">      </span><br><span class="line">&#125;  </span><br><span class="line"></span><br><span class="line"><span class="comment">//复制线程</span></span><br><span class="line">DWORD WINAPI CCopyFoldersDlg::CopyFolders(LPVOID pParam)</span><br><span class="line">&#123;  </span><br><span class="line">	CCopyFoldersDlg* pDlg = (CCopyFoldersDlg*)pParam;  </span><br><span class="line"></span><br><span class="line">	 <span class="keyword">if</span> (!pDlg) </span><br><span class="line">	 &#123;</span><br><span class="line">		 <span class="keyword">return</span> <span class="number">0</span>;  </span><br><span class="line">	 &#125;</span><br><span class="line">	 ResetEvent(pDlg-&gt;hExit);  </span><br><span class="line"></span><br><span class="line">	<span class="keyword">long</span> FoldersNum  = <span class="number">0</span>;                 </span><br><span class="line">    <span class="keyword">long</span> FilesNum = <span class="number">0</span>;                  </span><br><span class="line">    GetInfo(pDlg-&gt;m_SrcPath,FoldersNum, FilesNum);  </span><br><span class="line">	pDlg-&gt;m_Progress.SetRange(<span class="number">0</span>, FilesNum);  </span><br><span class="line">    pDlg-&gt;m_Progress.SetStep(<span class="number">1</span>); </span><br><span class="line">	CopyDirectory(pDlg-&gt;m_SrcPath, pDlg-&gt;m_DesPath, pDlg);   </span><br><span class="line"></span><br><span class="line">	SetEvent(pDlg-&gt;hExit);  </span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">LRESULT CCopyFoldersDlg::Do_process(WPARAM wParam, LPARAM lParam)   </span><br><span class="line">&#123;   </span><br><span class="line">   wParam += <span class="number">1</span>;  </span><br><span class="line">   m_Progress.SetPos(wParam);    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;  </span><br><span class="line">&#125;         </span><br><span class="line">  </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> CCopyFoldersDlg::OnStart() </span><br><span class="line">&#123;</span><br><span class="line">	UpdateData(<span class="literal">true</span>);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">if</span> ((m_SrcPath.IsEmpty() &amp;&amp; m_DesPath.IsEmpty()))</span><br><span class="line">	&#123;</span><br><span class="line">		MessageBox(<span class="string">"路径不能为空！"</span>);</span><br><span class="line">		<span class="keyword">return</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">	&#123;</span><br><span class="line">		<span class="comment">//创建线程</span></span><br><span class="line">		hThread = CreateThread(<span class="literal">NULL</span>, <span class="number">0</span>, CopyFolders, <span class="keyword">this</span>, <span class="number">0</span>, <span class="literal">NULL</span>);</span><br><span class="line">		hEvent = CreateEvent(<span class="literal">NULL</span>, TRUE, TRUE, <span class="literal">NULL</span>);</span><br><span class="line">		CloseHandle(hThread);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> CCopyFoldersDlg::OnStop() </span><br><span class="line">&#123;</span><br><span class="line">	m_iStatus++;  </span><br><span class="line">         </span><br><span class="line">    <span class="keyword">if</span> (m_iStatus % <span class="number">2</span> == <span class="number">0</span>)  </span><br><span class="line">    &#123;    </span><br><span class="line">         SetEvent(hEvent);</span><br><span class="line">    &#125;   </span><br><span class="line">    <span class="keyword">else</span>  </span><br><span class="line">    &#123;  </span><br><span class="line">        ResetEvent(hEvent);</span><br><span class="line">    &#125;  </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> CCopyFoldersDlg::OnTimer(UINT_PTR nIDEvent)  </span><br><span class="line">&#123;  </span><br><span class="line">    CDialog::OnTimer(nIDEvent);  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>.h文件：</p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// CopyFoldersDlg.h : header file</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">if</span> !defined(AFX_COPYFOLDERSDLG_H__BADF1BD0_296B_4FED_96F7_BCD2628D4B03__INCLUDED_)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> AFX_COPYFOLDERSDLG_H__BADF1BD0_296B_4FED_96F7_BCD2628D4B03__INCLUDED_</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">if</span> _MSC_VER &gt; 1000</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> once</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span> <span class="comment">// _MSC_VER &gt; 1000</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/////////////////////////////////////////////////////////////////////////////</span></span><br><span class="line"><span class="comment">// CCopyFoldersDlg dialog</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CCopyFoldersDlg</span> :</span> <span class="keyword">public</span> CDialog</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">// Construction</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">	CCopyFoldersDlg(CWnd* pParent = <span class="literal">NULL</span>);	<span class="comment">// standard constructor</span></span><br><span class="line">				</span><br><span class="line">	HANDLE hThread;</span><br><span class="line">	HANDLE hEvent;     </span><br><span class="line">	HANDLE hExit;  </span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">static</span> DWORD WINAPI <span class="title">CopyFolders</span><span class="params">(LPVOID pParam)</span></span>;</span><br><span class="line">	<span class="keyword">int</span> m_iStatus;  </span><br><span class="line"></span><br><span class="line"><span class="comment">// Dialog Data</span></span><br><span class="line">	<span class="comment">//&#123;&#123;AFX_DATA(CCopyFoldersDlg)</span></span><br><span class="line">	<span class="keyword">enum</span> &#123; IDD = IDD_COPYFOLDERS_DIALOG &#125;;</span><br><span class="line">	CProgressCtrl	m_Progress;</span><br><span class="line">	CString	m_SrcPath;</span><br><span class="line">	CString	m_DesPath;</span><br><span class="line">	<span class="comment">//&#125;&#125;AFX_DATA</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">// ClassWizard generated virtual function overrides</span></span><br><span class="line">	<span class="comment">//&#123;&#123;AFX_VIRTUAL(CCopyFoldersDlg)</span></span><br><span class="line">	<span class="keyword">protected</span>:</span><br><span class="line">	<span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">DoDataExchange</span><span class="params">(CDataExchange* pDX)</span></span>;	<span class="comment">// DDX/DDV support</span></span><br><span class="line">	<span class="comment">//&#125;&#125;AFX_VIRTUAL</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Implementation</span></span><br><span class="line"><span class="keyword">protected</span>:</span><br><span class="line">	HICON m_hIcon;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">	<span class="comment">// Generated message map functions</span></span><br><span class="line">	<span class="comment">//&#123;&#123;AFX_MSG(CCopyFoldersDlg)</span></span><br><span class="line">	<span class="function"><span class="keyword">virtual</span> BOOL <span class="title">OnInitDialog</span><span class="params">()</span></span>;</span><br><span class="line">	<span class="function">afx_msg <span class="keyword">void</span> <span class="title">OnSysCommand</span><span class="params">(UINT nID, LPARAM lParam)</span></span>;</span><br><span class="line">	<span class="function">afx_msg <span class="keyword">void</span> <span class="title">OnPaint</span><span class="params">()</span></span>;</span><br><span class="line">	<span class="function">afx_msg HCURSOR <span class="title">OnQueryDragIcon</span><span class="params">()</span></span>;</span><br><span class="line">	<span class="function">afx_msg <span class="keyword">void</span> <span class="title">OnStart</span><span class="params">()</span></span>;</span><br><span class="line">	<span class="function">afx_msg <span class="keyword">void</span> <span class="title">OnStop</span><span class="params">()</span></span>;</span><br><span class="line">	afx_msg LRESULT CCopyFoldersDlg::Do_process(WPARAM wParam,LPARAM lParam); </span><br><span class="line">    <span class="function">afx_msg <span class="keyword">void</span> <span class="title">OnTimer</span><span class="params">(UINT_PTR nIDEvent)</span></span>;  </span><br><span class="line">	<span class="comment">//&#125;&#125;AFX_MSG</span></span><br><span class="line">	DECLARE_MESSAGE_MAP()</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//&#123;&#123;AFX_INSERT_LOCATION&#125;&#125;</span></span><br><span class="line"><span class="comment">// Microsoft Visual C++ will insert additional declarations immediately before the previous line.</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span> <span class="comment">// !defined(AFX_COPYFOLDERSDLG_H__BADF1BD0_296B_4FED_96F7_BCD2628D4B03__INCLUDED_)</span></span></span><br></pre></td></tr></table></figure>
<p>界面：<br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20170615182222589?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="界面" title="">
                </div>
                <div class="image-caption">界面</div>
            </figure></p>
<p>另一种方案（大同小异）：<br>.cpp文件<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// FileCopyNumDlg.cpp : implementation file</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"stdafx.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"FileCopyNum.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"FileCopyNumDlg.h"</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> WM_COPYFILE_NOTIFY_NUM WM_USER+1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> WM_COPYFILE_NOTIFY_SUM WM_USER+8</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> _DEBUG</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> new DEBUG_NEW</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">undef</span> THIS_FILE</span></span><br><span class="line"><span class="keyword">static</span> <span class="keyword">char</span> THIS_FILE[] = __FILE__;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/////////////////////////////////////////////////////////////////////////////</span></span><br><span class="line"><span class="comment">// CAboutDlg dialog used for App About</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CAboutDlg</span> :</span> <span class="keyword">public</span> CDialog</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">	CAboutDlg();</span><br><span class="line"></span><br><span class="line"><span class="comment">// Dialog Data</span></span><br><span class="line">	<span class="comment">//&#123;&#123;AFX_DATA(CAboutDlg)</span></span><br><span class="line">	<span class="keyword">enum</span> &#123; IDD = IDD_ABOUTBOX &#125;;</span><br><span class="line">	<span class="comment">//&#125;&#125;AFX_DATA</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">// ClassWizard generated virtual function overrides</span></span><br><span class="line">	<span class="comment">//&#123;&#123;AFX_VIRTUAL(CAboutDlg)</span></span><br><span class="line">	<span class="keyword">protected</span>:</span><br><span class="line">	<span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">DoDataExchange</span><span class="params">(CDataExchange* pDX)</span></span>;    <span class="comment">// DDX/DDV support</span></span><br><span class="line">	<span class="comment">//&#125;&#125;AFX_VIRTUAL</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Implementation</span></span><br><span class="line"><span class="keyword">protected</span>:</span><br><span class="line">	<span class="comment">//&#123;&#123;AFX_MSG(CAboutDlg)</span></span><br><span class="line">	<span class="comment">//&#125;&#125;AFX_MSG</span></span><br><span class="line">	DECLARE_MESSAGE_MAP()</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">CAboutDlg::CAboutDlg() : CDialog(CAboutDlg::IDD)</span><br><span class="line">&#123;</span><br><span class="line">	<span class="comment">//&#123;&#123;AFX_DATA_INIT(CAboutDlg)</span></span><br><span class="line">	<span class="comment">//&#125;&#125;AFX_DATA_INIT</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> CAboutDlg::DoDataExchange(CDataExchange* pDX)</span><br><span class="line">&#123;</span><br><span class="line">	CDialog::DoDataExchange(pDX);</span><br><span class="line">	<span class="comment">//&#123;&#123;AFX_DATA_MAP(CAboutDlg)</span></span><br><span class="line">	<span class="comment">//&#125;&#125;AFX_DATA_MAP</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">BEGIN_MESSAGE_MAP(CAboutDlg, CDialog)</span><br><span class="line">	<span class="comment">//&#123;&#123;AFX_MSG_MAP(CAboutDlg)</span></span><br><span class="line">		<span class="comment">// No message handlers</span></span><br><span class="line">	<span class="comment">//&#125;&#125;AFX_MSG_MAP</span></span><br><span class="line">END_MESSAGE_MAP()</span><br><span class="line"></span><br><span class="line"><span class="comment">/////////////////////////////////////////////////////////////////////////////</span></span><br><span class="line"><span class="comment">// CFileCopyNumDlg dialog</span></span><br><span class="line"></span><br><span class="line">CFileCopyNumDlg::CFileCopyNumDlg(CWnd* pParent <span class="comment">/*=NULL*/</span>)</span><br><span class="line">	: CDialog(CFileCopyNumDlg::IDD, pParent)</span><br><span class="line">&#123;</span><br><span class="line">	<span class="comment">//&#123;&#123;AFX_DATA_INIT(CFileCopyNumDlg)</span></span><br><span class="line">	m_sourcePath = _T(<span class="string">""</span>);</span><br><span class="line">	m_desPath = _T(<span class="string">""</span>);</span><br><span class="line">	<span class="comment">//&#125;&#125;AFX_DATA_INIT</span></span><br><span class="line">	<span class="comment">// Note that LoadIcon does not require a subsequent DestroyIcon in Win32</span></span><br><span class="line">	m_hIcon = AfxGetApp()-&gt;LoadIcon(IDR_MAINFRAME);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> CFileCopyNumDlg::DoDataExchange(CDataExchange* pDX)</span><br><span class="line">&#123;</span><br><span class="line">	CDialog::DoDataExchange(pDX);</span><br><span class="line">	<span class="comment">//&#123;&#123;AFX_DATA_MAP(CFileCopyNumDlg)</span></span><br><span class="line">	DDX_Control(pDX, IDC_PROGRESS1, m_progress);</span><br><span class="line">	DDX_Text(pDX, IDC_EDIT1, m_sourcePath);</span><br><span class="line">	DDX_Text(pDX, IDC_EDIT2, m_desPath);</span><br><span class="line">	<span class="comment">//&#125;&#125;AFX_DATA_MAP</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">BEGIN_MESSAGE_MAP(CFileCopyNumDlg, CDialog)</span><br><span class="line">	<span class="comment">//&#123;&#123;AFX_MSG_MAP(CFileCopyNumDlg)</span></span><br><span class="line">	ON_WM_SYSCOMMAND()</span><br><span class="line">	ON_WM_PAINT()</span><br><span class="line">	ON_WM_QUERYDRAGICON()</span><br><span class="line">	ON_BN_CLICKED(IDC_BTN_CHOOSEFILE1, OnBtnChoosefile1)</span><br><span class="line">	ON_BN_CLICKED(IDC_BTN_CHOOSEFILE2, OnBtnChoosefile2)</span><br><span class="line">	ON_BN_CLICKED(IDC_BTN_PAUSE, OnBtnPause)</span><br><span class="line">	ON_BN_CLICKED(IDC_BTN_RESUME, OnBtnResume)</span><br><span class="line">	ON_WM_TIMER()</span><br><span class="line">	ON_BN_CLICKED(IDC_BTN_BEGIN, OnBtnBegin)</span><br><span class="line"></span><br><span class="line">	ON_MESSAGE(WM_COPYFILE_NOTIFY_NUM, OnCopyFileNotifyNum)</span><br><span class="line">	ON_MESSAGE(WM_COPYFILE_NOTIFY_SUM, OnCopyFileNotifySum)</span><br><span class="line">	<span class="comment">//&#125;&#125;AFX_MSG_MAP</span></span><br><span class="line">END_MESSAGE_MAP()</span><br><span class="line"></span><br><span class="line"><span class="comment">/////////////////////////////////////////////////////////////////////////////</span></span><br><span class="line"><span class="comment">// CFileCopyNumDlg message handlers</span></span><br><span class="line"></span><br><span class="line">BOOL CFileCopyNumDlg::OnInitDialog()</span><br><span class="line">&#123;</span><br><span class="line">	CDialog::OnInitDialog();</span><br><span class="line"></span><br><span class="line">	<span class="comment">// Add "About..." menu item to system menu.</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">// IDM_ABOUTBOX must be in the system command range.</span></span><br><span class="line">	ASSERT((IDM_ABOUTBOX &amp; <span class="number">0xFFF0</span>) == IDM_ABOUTBOX);</span><br><span class="line">	ASSERT(IDM_ABOUTBOX &lt; <span class="number">0xF000</span>);</span><br><span class="line"></span><br><span class="line">	CMenu* pSysMenu = GetSystemMenu(FALSE);</span><br><span class="line">	<span class="keyword">if</span> (pSysMenu != <span class="literal">NULL</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		CString strAboutMenu;</span><br><span class="line">		strAboutMenu.LoadString(IDS_ABOUTBOX);</span><br><span class="line">		<span class="keyword">if</span> (!strAboutMenu.IsEmpty())</span><br><span class="line">		&#123;</span><br><span class="line">			pSysMenu-&gt;AppendMenu(MF_SEPARATOR);</span><br><span class="line">			pSysMenu-&gt;AppendMenu(MF_STRING, IDM_ABOUTBOX, strAboutMenu);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">// Set the icon for this dialog.  The framework does this automatically</span></span><br><span class="line">	<span class="comment">//  when the application's main window is not a dialog</span></span><br><span class="line">	SetIcon(m_hIcon, TRUE);			<span class="comment">// Set big icon</span></span><br><span class="line">	SetIcon(m_hIcon, FALSE);		<span class="comment">// Set small icon</span></span><br><span class="line">	</span><br><span class="line">	<span class="comment">// <span class="doctag">TODO:</span> Add extra initialization here</span></span><br><span class="line">	m_num = <span class="number">0</span>;</span><br><span class="line">	m_sum = <span class="number">0</span>;</span><br><span class="line">	m_progress.SetRange(<span class="number">0</span>, <span class="number">100</span>);</span><br><span class="line">	m_progress.SetPos(<span class="number">0</span>);</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">return</span> TRUE;  <span class="comment">// return TRUE  unless you set the focus to a control</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> CFileCopyNumDlg::OnSysCommand(UINT nID, LPARAM lParam)</span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">if</span> ((nID &amp; <span class="number">0xFFF0</span>) == IDM_ABOUTBOX)</span><br><span class="line">	&#123;</span><br><span class="line">		CAboutDlg dlgAbout;</span><br><span class="line">		dlgAbout.DoModal();</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">	&#123;</span><br><span class="line">		CDialog::OnSysCommand(nID, lParam);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// If you add a minimize button to your dialog, you will need the code below</span></span><br><span class="line"><span class="comment">//  to draw the icon.  For MFC applications using the document/view model,</span></span><br><span class="line"><span class="comment">//  this is automatically done for you by the framework.</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> CFileCopyNumDlg::OnPaint() </span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">if</span> (IsIconic())</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="function">CPaintDC <span class="title">dc</span><span class="params">(<span class="keyword">this</span>)</span></span>; <span class="comment">// device context for painting</span></span><br><span class="line"></span><br><span class="line">		SendMessage(WM_ICONERASEBKGND, (WPARAM) dc.GetSafeHdc(), <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">		<span class="comment">// Center icon in client rectangle</span></span><br><span class="line">		<span class="keyword">int</span> cxIcon = GetSystemMetrics(SM_CXICON);</span><br><span class="line">		<span class="keyword">int</span> cyIcon = GetSystemMetrics(SM_CYICON);</span><br><span class="line">		CRect rect;</span><br><span class="line">		GetClientRect(&amp;rect);</span><br><span class="line">		<span class="keyword">int</span> x = (rect.Width() - cxIcon + <span class="number">1</span>) / <span class="number">2</span>;</span><br><span class="line">		<span class="keyword">int</span> y = (rect.Height() - cyIcon + <span class="number">1</span>) / <span class="number">2</span>;</span><br><span class="line"></span><br><span class="line">		<span class="comment">// Draw the icon</span></span><br><span class="line">		dc.DrawIcon(x, y, m_hIcon);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">	&#123;</span><br><span class="line">		CDialog::OnPaint();</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// The system calls this to obtain the cursor to display while the user drags</span></span><br><span class="line"><span class="comment">//  the minimized window.</span></span><br><span class="line">HCURSOR CFileCopyNumDlg::OnQueryDragIcon()</span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">return</span> (HCURSOR) m_hIcon;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> CFileCopyNumDlg::OnBtnChoosefile1() </span><br><span class="line">&#123;</span><br><span class="line">    <span class="function">CFileDialog <span class="title">dlg</span><span class="params">(TRUE)</span></span>;</span><br><span class="line">	<span class="keyword">if</span>(IDOK==dlg.DoModal())</span><br><span class="line">	&#123;</span><br><span class="line">		strSourceFile=dlg.GetPathName();</span><br><span class="line">	&#125;</span><br><span class="line">	SetDlgItemText(IDC_EDIT1,strSourceFile);	</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> CFileCopyNumDlg::OnBtnChoosefile2() </span><br><span class="line">&#123;</span><br><span class="line">    <span class="function">CFileDialog <span class="title">dlg</span><span class="params">(TRUE)</span></span>;</span><br><span class="line">	<span class="keyword">if</span>(IDOK==dlg.DoModal())</span><br><span class="line">	&#123;</span><br><span class="line">		strNewFile=dlg.GetPathName();</span><br><span class="line">	&#125;</span><br><span class="line">	SetDlgItemText(IDC_EDIT2,strSourceFile);	</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> CFileCopyNumDlg::OnBtnBegin() </span><br><span class="line">&#123;</span><br><span class="line">	UpdateData(TRUE);</span><br><span class="line"></span><br><span class="line">	hThread = CreateThread(<span class="literal">NULL</span>, <span class="number">0</span>, ThreadProc_Copy, <span class="keyword">this</span>, <span class="number">0</span>, <span class="literal">NULL</span>);</span><br><span class="line">	hEvent = CreateEvent(<span class="literal">NULL</span>, TRUE, TRUE, <span class="literal">NULL</span>);</span><br><span class="line">	</span><br><span class="line">	</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">DWORD WINAPI CFileCopyNumDlg::ThreadProc_Copy(LPVOID lpParam)</span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">double</span> num = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">double</span> sum = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">	CString SourcePath = ((CFileCopyNumDlg*)lpParam)-&gt;m_sourcePath;</span><br><span class="line">	CString DesPath = ((CFileCopyNumDlg*)lpParam)-&gt;m_desPath + <span class="string">L"\\"</span>;</span><br><span class="line">  </span><br><span class="line">	CFileFind findcount;</span><br><span class="line">	BOOL bRet = findcount.FindFile(((CFileCopyNumDlg*)lpParam)-&gt;m_sourcePath + CString(<span class="string">"\\*.*"</span>));</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">while</span> (bRet)</span><br><span class="line">	&#123;</span><br><span class="line">		bRet = findcount.FindNextFile();</span><br><span class="line">		<span class="keyword">if</span> (findcount.IsDirectory())</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">continue</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span></span><br><span class="line">		&#123;</span><br><span class="line">			((CFileCopyNumDlg*)lpParam)-&gt;PostMessage(WM_COPYFILE_NOTIFY_SUM);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	findcount.Close();</span><br><span class="line"></span><br><span class="line">	CFileFind find;</span><br><span class="line">	bRet =  find.FindFile(((CFileCopyNumDlg*)lpParam)-&gt;m_sourcePath + CString(<span class="string">"\\*.*"</span>));</span><br><span class="line"></span><br><span class="line">	<span class="keyword">while</span> (bRet)</span><br><span class="line">	&#123;</span><br><span class="line">		bRet = find.FindNextFile();</span><br><span class="line">		<span class="keyword">if</span> (find.IsDirectory())</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">continue</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span></span><br><span class="line">		&#123;</span><br><span class="line">			((CFileCopyNumDlg*)lpParam)-&gt;m_sourcePath = find.GetFilePath();</span><br><span class="line">			((CFileCopyNumDlg*)lpParam)-&gt;m_desPath = DesPath + find.GetFileName();</span><br><span class="line">			</span><br><span class="line">			WaitForSingleObject(((CFileCopyNumDlg*)lpParam)-&gt;hEvent,INFINITE);</span><br><span class="line"></span><br><span class="line">			CopyFile(((CFileCopyNumDlg*)lpParam)-&gt;m_sourcePath, ((CFileCopyNumDlg*)lpParam)-&gt;m_desPath, FALSE);</span><br><span class="line">			((CFileCopyNumDlg*)lpParam)-&gt;PostMessage(WM_COPYFILE_NOTIFY_NUM);</span><br><span class="line">			</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">   </span><br><span class="line">    AfxMessageBox(<span class="string">"复制成功!"</span>);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span> ;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> CFileCopyNumDlg::OnBtnPause() </span><br><span class="line">&#123;</span><br><span class="line">     ResetEvent(hEvent);	</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> CFileCopyNumDlg::OnBtnResume() </span><br><span class="line">&#123;</span><br><span class="line">     SetEvent(hEvent);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> CFileCopyNumDlg::OnTimer(UINT nIDEvent) </span><br><span class="line">&#123;</span><br><span class="line">	<span class="comment">// <span class="doctag">TODO:</span> Add your message handler code here and/or call default</span></span><br><span class="line">	</span><br><span class="line">	CDialog::OnTimer(nIDEvent);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">afx_msg LRESULT CFileCopyNumDlg::OnCopyFileNotifyNum(WPARAM wParam, LPARAM lParam)</span><br><span class="line">&#123;</span><br><span class="line">	m_num++;</span><br><span class="line">	m_progress.SetPos(<span class="keyword">int</span>(m_num / m_sum * <span class="number">100</span>));</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">afx_msg LRESULT CFileCopyNumDlg::OnCopyFileNotifySum(WPARAM wParam, LPARAM lParam)</span><br><span class="line">&#123;</span><br><span class="line">	m_sum++;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>.h文件<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// FileCopyNumDlg.h : header file</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">if</span> !defined(AFX_FILECOPYNUMDLG_H__02EF2204_005C_4A21_A048_ED73C9CD1F34__INCLUDED_)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> AFX_FILECOPYNUMDLG_H__02EF2204_005C_4A21_A048_ED73C9CD1F34__INCLUDED_</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">if</span> _MSC_VER &gt; 1000</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> once</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span> <span class="comment">// _MSC_VER &gt; 1000</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/////////////////////////////////////////////////////////////////////////////</span></span><br><span class="line"><span class="comment">// CFileCopyNumDlg dialog</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CFileCopyNumDlg</span> :</span> <span class="keyword">public</span> CDialog</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">// Construction</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">	CFileCopyNumDlg(CWnd* pParent = <span class="literal">NULL</span>);	<span class="comment">// standard constructor</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Dialog Data</span></span><br><span class="line">	<span class="comment">//&#123;&#123;AFX_DATA(CFileCopyNumDlg)</span></span><br><span class="line">	<span class="keyword">enum</span> &#123; IDD = IDD_FILECOPYNUM_DIALOG &#125;;</span><br><span class="line">	CProgressCtrl	m_progress;</span><br><span class="line">	CString	m_sourcePath;</span><br><span class="line">	CString	m_desPath;</span><br><span class="line">	<span class="comment">//&#125;&#125;AFX_DATA</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">// ClassWizard generated virtual function overrides</span></span><br><span class="line">	<span class="comment">//&#123;&#123;AFX_VIRTUAL(CFileCopyNumDlg)</span></span><br><span class="line">	<span class="keyword">protected</span>:</span><br><span class="line">	<span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">DoDataExchange</span><span class="params">(CDataExchange* pDX)</span></span>;	<span class="comment">// DDX/DDV support</span></span><br><span class="line">	<span class="comment">//&#125;&#125;AFX_VIRTUAL</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Implementation</span></span><br><span class="line"><span class="keyword">protected</span>:</span><br><span class="line">	HICON m_hIcon;</span><br><span class="line"></span><br><span class="line">	<span class="comment">// Generated message map functions</span></span><br><span class="line">	<span class="comment">//&#123;&#123;AFX_MSG(CFileCopyNumDlg)</span></span><br><span class="line">	<span class="function"><span class="keyword">virtual</span> BOOL <span class="title">OnInitDialog</span><span class="params">()</span></span>;</span><br><span class="line">	<span class="function">afx_msg <span class="keyword">void</span> <span class="title">OnSysCommand</span><span class="params">(UINT nID, LPARAM lParam)</span></span>;</span><br><span class="line">	<span class="function">afx_msg <span class="keyword">void</span> <span class="title">OnPaint</span><span class="params">()</span></span>;</span><br><span class="line">	<span class="function">afx_msg HCURSOR <span class="title">OnQueryDragIcon</span><span class="params">()</span></span>;</span><br><span class="line">	<span class="function">afx_msg <span class="keyword">void</span> <span class="title">OnBtnChoosefile1</span><span class="params">()</span></span>;</span><br><span class="line">	<span class="function">afx_msg <span class="keyword">void</span> <span class="title">OnBtnChoosefile2</span><span class="params">()</span></span>;</span><br><span class="line">	<span class="function">afx_msg <span class="keyword">void</span> <span class="title">OnBtnPause</span><span class="params">()</span></span>;</span><br><span class="line">	<span class="function">afx_msg <span class="keyword">void</span> <span class="title">OnBtnResume</span><span class="params">()</span></span>;</span><br><span class="line">	<span class="function">afx_msg <span class="keyword">void</span> <span class="title">OnTimer</span><span class="params">(UINT nIDEvent)</span></span>;</span><br><span class="line">	<span class="function">afx_msg <span class="keyword">void</span> <span class="title">OnBtnBegin</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">	<span class="function">afx_msg LRESULT <span class="title">OnCopyFileNotifyNum</span><span class="params">(WPARAM wParam, LPARAM lParam)</span></span>;</span><br><span class="line">	<span class="function">afx_msg LRESULT <span class="title">OnCopyFileNotifySum</span><span class="params">(WPARAM wParam, LPARAM lParam)</span></span>;</span><br><span class="line">	<span class="comment">//&#125;&#125;AFX_MSG</span></span><br><span class="line">	DECLARE_MESSAGE_MAP()</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">   <span class="comment">// LPCTSTR lpExistingPathName;			//源文件</span></span><br><span class="line">   <span class="comment">//LPCTSTR lpNewPathName;	            //目标文件</span></span><br><span class="line">    HANDLE hThread;                     <span class="comment">//线程句柄</span></span><br><span class="line">	HANDLE hEvent;                      <span class="comment">//复制暂停事件</span></span><br><span class="line"></span><br><span class="line">    CString strSourceFile;</span><br><span class="line">	CString strNewFile;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">double</span> m_num;</span><br><span class="line">	<span class="keyword">double</span> m_sum;</span><br><span class="line">	<span class="function"><span class="keyword">static</span> DWORD WINAPI <span class="title">ThreadProc_Copy</span><span class="params">(LPVOID lpParam)</span></span>;<span class="comment">//线程函数</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//&#123;&#123;AFX_INSERT_LOCATION&#125;&#125;</span></span><br><span class="line"><span class="comment">// Microsoft Visual C++ will insert additional declarations immediately before the previous line.</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span> <span class="comment">// !defined(AFX_FILECOPYNUMDLG_H__02EF2204_005C_4A21_A048_ED73C9CD1F34__INCLUDED_)</span></span></span><br></pre></td></tr></table></figure></p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20170710233959983?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述" title="">
                </div>
                <div class="image-caption">这里写图片描述</div>
            </figure>
]]></content>
      
        <categories>
            
            <category> 互联网 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> CPP </tag>
            
            <tag> MFC </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[MFC网页分析程序]]></title>
      <url>https://hubojing.github.io/2017/06/14/MFC%E7%BD%91%E9%A1%B5%E5%88%86%E6%9E%90%E7%A8%8B%E5%BA%8F/</url>
      <content type="html"><![CDATA[<p><div align="left"><br><img src="http://img.blog.csdn.net/20170805145839785?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" width="300" height="180" style="float:right;"><br>  </div><br> 　　<br> 　　<br>　　<strong>开发一个网页分析程序，可以抓取特定网页的内容，加以分析之后将结果保存至数据库。</strong></p>
<p>　　<strong>V1.5上线，保存至sqlite数据库用时2分13秒。</strong>
　　
　　
　　</p>
<a id="more"></a>
<pre><code>网页分析程序具体要求描述如下：
1. 使用http技术获取一个博客的首页http://blog.csdn.net/jiangsheng
2. 分析这个网页的内容，从中找到博客中每一篇文章的链接。
3. 通过这些链接，获取文章的正文网页，从内容中提取文章的标题和文章的内容。
4. 将文章的标题与内容分别保存至数据库。
5. 布局要求：提供一个列表框和一个多行文本框。列表框中显示从数据库中获取的文章标题列表；当点击列表框中的某一篇文章时，在文本框中显示该文章的内容。
</code></pre><h1 id="获取源码"><a href="#获取源码" class="headerlink" title="获取源码"></a>获取源码</h1><p>因为需多次调用获取源码功能，将它放入一个函数中。</p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">CString CGetWebDlg::DownloadCodes(CString path)</span><br><span class="line">&#123;</span><br><span class="line">	CInternetSession session;</span><br><span class="line">	CHttpFile *file = <span class="literal">NULL</span>;</span><br><span class="line">	CString strURL = path;</span><br><span class="line">	CString strHtml = _T(<span class="string">""</span>); <span class="comment">//存放网页数据</span></span><br><span class="line">	<span class="keyword">try</span></span><br><span class="line">	&#123;</span><br><span class="line">		file = (CHttpFile*)session.OpenURL(strURL);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">catch</span> (CInternetException *m_pException)</span><br><span class="line">	&#123;</span><br><span class="line">		file = <span class="literal">NULL</span>;</span><br><span class="line">		m_pException-&gt;m_dwError;</span><br><span class="line">		m_pException-&gt;Delete();</span><br><span class="line">		session.Close();</span><br><span class="line">		MessageBox(<span class="string">"网络连接错误！"</span>, <span class="string">"提示"</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	CString strLine;</span><br><span class="line">	<span class="keyword">char</span> sRecived[<span class="number">1024</span>];</span><br><span class="line">	<span class="keyword">if</span> (file != <span class="literal">NULL</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">while</span> (file-&gt;ReadString((LPTSTR)sRecived, <span class="number">1024</span>) != <span class="literal">NULL</span>)</span><br><span class="line">		&#123;</span><br><span class="line">			strHtml += sRecived;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">	&#123;</span><br><span class="line">		AfxMessageBox(_T(<span class="string">"失败！"</span>));</span><br><span class="line">	&#125;</span><br><span class="line">	session.Close();</span><br><span class="line">	file-&gt;Close();</span><br><span class="line">	<span class="keyword">delete</span> file;</span><br><span class="line">	file = <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line">	strHtml = ConvertUtf8ToGBK(strHtml);<span class="comment">//源码转换</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> strHtml;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="编码问题"><a href="#编码问题" class="headerlink" title="编码问题"></a>编码问题</h2><p>注意网页编码问题，因此需要格式转换，编写一个函数：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span>  <span class="title">ConvertUtf8ToGBK</span><span class="params">(CString &amp;strUtf8)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">          </span><br><span class="line">    <span class="keyword">int</span> len=MultiByteToWideChar(CP_UTF8, <span class="number">0</span>, (LPCTSTR)strUtf8, <span class="number">-1</span>, <span class="literal">NULL</span>,<span class="number">0</span>);</span><br><span class="line">	<span class="keyword">unsigned</span> <span class="keyword">short</span> * wszGBK = <span class="keyword">new</span> <span class="keyword">unsigned</span> <span class="keyword">short</span>[len+<span class="number">1</span>];</span><br><span class="line">	<span class="built_in">memset</span>(wszGBK, <span class="number">0</span>, len * <span class="number">2</span> + <span class="number">2</span>);</span><br><span class="line">	MultiByteToWideChar(CP_UTF8, <span class="number">0</span>, (LPCTSTR)strUtf8, <span class="number">-1</span>, (LPWSTR)wszGBK, len);</span><br><span class="line"> </span><br><span class="line">	len = WideCharToMultiByte(CP_ACP, <span class="number">0</span>, (LPCWSTR)wszGBK, <span class="number">-1</span>, <span class="literal">NULL</span>, <span class="number">0</span>, <span class="literal">NULL</span>, <span class="literal">NULL</span>); </span><br><span class="line">	<span class="keyword">char</span> *szGBK=<span class="keyword">new</span> <span class="keyword">char</span>[len + <span class="number">1</span>];</span><br><span class="line">	<span class="built_in">memset</span>(szGBK, <span class="number">0</span>, len + <span class="number">1</span>);</span><br><span class="line">	WideCharToMultiByte (CP_ACP, <span class="number">0</span>, (LPCWSTR)wszGBK, <span class="number">-1</span>, szGBK, len, <span class="literal">NULL</span>,<span class="literal">NULL</span>);</span><br><span class="line"> </span><br><span class="line">	strUtf8 = szGBK;</span><br><span class="line">	 <span class="keyword">delete</span>[] szGBK;</span><br><span class="line">	 <span class="keyword">delete</span>[] wszGBK;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20170614232311302?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="显示源码" title="">
                </div>
                <div class="image-caption">显示源码</div>
            </figure>
<p>有些类似网页爬虫的感觉。</p>
<p>由于我刚开始是用VC6.0创建项目，现在用VS2013打开，因此，提示报错：<br>error MSB8031: Building an MFC project for a non-Unicode character set is deprecated. You must change the project property to Unicode or download an additional library. See <a href="http://go.microsoft.com/fwlink/p/?LinkId=286820" target="_blank" rel="noopener">http://go.microsoft.com/fwlink/p/?LinkId=286820</a> for more information.</p>
<p>解决：用于多字节字符编码 (MBCS) 的 MFC 库 (DLL) 不再包含于 Visual Studio 中，但是可用作插件，可以在任何装有 Visual Studio Professional、Visual Studio Premium 或 Visual Studio Ultimate 的计算机上下载和安装。下载地址：<a href="https://www.microsoft.com/zh-cn/download/details.aspx?id=40770" target="_blank" rel="noopener">https://www.microsoft.com/zh-cn/download/details.aspx?id=40770</a></p>
<h1 id="解析"><a href="#解析" class="headerlink" title="解析"></a>解析</h1><p><del>为了接下来的操作，我去学正则表达式了……</del><br>还是学习html解析库 htmlcxx<br><a href="http://htmlcxx.sourceforge.net/" target="_blank" rel="noopener">官方</a><br><a href="http://blog.csdn.net/youfangyuan/article/details/7816518" target="_blank" rel="noopener">HtmlCxx用户手册</a></p>
<h2 id="HTMLCXX"><a href="#HTMLCXX" class="headerlink" title="HTMLCXX"></a>HTMLCXX</h2><h3 id="下载htmlcxx库"><a href="#下载htmlcxx库" class="headerlink" title="下载htmlcxx库"></a>下载htmlcxx库</h3><p><a href="http://sourceforge.net/projects/htmlcxx/" target="_blank" rel="noopener">http://sourceforge.net/projects/htmlcxx/</a><br>并解压。</p>
<h3 id="编译"><a href="#编译" class="headerlink" title="编译"></a>编译</h3><p>打开htmlcxx.vcproj，右键属性，配置属性-C/C++-代码生成-运行库：多线程调试 DLL (/ MDd)进行编译。编译会报错，将<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">char</span> *signature = <span class="string">"﻿"</span>;</span><br></pre></td></tr></table></figure></p>
<p>改为<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">char</span> *signature = <span class="string">"﻿\xEF\xBB\xBF"</span>;</span><br></pre></td></tr></table></figure></p>
<p>即可编译成功。</p>
<h3 id="导入"><a href="#导入" class="headerlink" title="导入"></a>导入</h3><p>把生成的htmlcxx.lib和html文件夹拷贝到所需的工程中。即：<br>在所开发项目文件夹中，新建”htmlcxx“文件，里面添加两个子文件夹”lib“和”include“。将编译好的htmlcxx.lib拷贝到lib文件夹，将html文件夹中所有的.h头文件和ParserSax.tcc添加到include文件夹。添加库文件htmlcxx.lib到项目中，具体说来：</p>
<blockquote>
<p>在VS工程中，添加c/c++工程中外部头文件及库的基本步骤：<br>    1、添加工程的头文件目录：工程—属性—配置属性—c/c++—常规—附加包含目录：加上头文件存放目录。<br>    2、添加文件引用的lib静态库路径：工程—属性—配置属性—链接器—常规—附加库目录：加上lib文件存放目录。<br>         然后添加工程引用的lib文件名：工程—属性—配置属性—链接器—输入—附加依赖项：加上lib文件名。<br>    3、添加工程引用的dll动态库：把引用的dll放到工程的可执行文件所在的目录下。<br>注意：第一步可以不用，直接在工程里加入动态库的头文件，在使用代码处引用这个头文件。</p>
</blockquote>
<p>所开发的项目的头文件中添加以下内容：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"htmlcxx/include/ParserDom.h"</span></span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> htmlcxx;</span><br><span class="line"> </span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> comment(lib,<span class="meta-string">"htmlcxx.lib"</span>)</span></span><br></pre></td></tr></table></figure></p>
<h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><p>官方测试代码：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;htmlcxx/html/ParserDom.h&gt;</span></span></span><br><span class="line"> ...</span><br><span class="line"> </span><br><span class="line"> <span class="comment">//Parse some html code</span></span><br><span class="line"> <span class="built_in">string</span> html = <span class="string">"&lt;html&gt;&lt;body&gt;hey&lt;/body&gt;&lt;/html&gt;"</span>;</span><br><span class="line"> HTML::ParserDom parser;</span><br><span class="line"> tree&lt;HTML::Node&gt; dom = parser.parseTree(html);</span><br><span class="line"> </span><br><span class="line"> <span class="comment">//Print whole DOM tree</span></span><br><span class="line"> <span class="built_in">cout</span> &lt;&lt; dom &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"> </span><br><span class="line"> <span class="comment">//Dump all links in the tree</span></span><br><span class="line"> tree&lt;HTML::Node&gt;::iterator it = dom.begin();</span><br><span class="line"> tree&lt;HTML::Node&gt;::iterator end = dom.end();</span><br><span class="line"> <span class="keyword">for</span> (; it != end; ++it)</span><br><span class="line"> &#123;</span><br><span class="line"> 	<span class="keyword">if</span> (it-&gt;tagName() == <span class="string">"A"</span>)</span><br><span class="line"> 	&#123;</span><br><span class="line"> 		it-&gt;parseAttributes();</span><br><span class="line"> 		<span class="built_in">cout</span> &lt;&lt; it-&gt;attributes(<span class="string">"href"</span>);</span><br><span class="line"> 	&#125;</span><br><span class="line"> &#125;</span><br><span class="line"> </span><br><span class="line"> <span class="comment">//Dump all text of the document</span></span><br><span class="line"> it = dom.begin();</span><br><span class="line"> end = dom.end();</span><br><span class="line"> <span class="keyword">for</span> (; it != end; ++it)</span><br><span class="line"> &#123;</span><br><span class="line"> 	<span class="keyword">if</span> ((!it-&gt;isTag()) &amp;&amp; (!it-&gt;isComment()))</span><br><span class="line"> 	&#123;</span><br><span class="line"> 		<span class="built_in">cout</span> &lt;&lt; it-&gt;text();</span><br><span class="line"> 	&#125;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure></p>
<p>  然而……</p>
<p>   <img src="http://img.blog.csdn.net/20170709011136986?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="报错1"></p>
<p>   加入#include”iostream”头文件即可。</p>
<p><img src="http://img.blog.csdn.net/20170709011240176?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="报错2"></p>
<p>修改为：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (it-&gt;tagName() == <span class="string">"A"</span>)</span><br><span class="line">			&#123;</span><br><span class="line">				it-&gt;parseAttributes();</span><br><span class="line">				<span class="built_in">std</span>::pair&lt;<span class="keyword">bool</span>, <span class="built_in">std</span>::<span class="built_in">string</span>&gt; pa = it-&gt;attribute(<span class="string">"href"</span>);</span><br><span class="line">				<span class="built_in">cout</span> &lt;&lt; pa.second;</span><br><span class="line">			&#125;</span><br></pre></td></tr></table></figure></p>
<p>编译通过。</p>
<p>  还有其他的库也可以用，比如<a href="http://blog.csdn.net/lanuage/article/details/72825878" target="_blank" rel="noopener">使用MSHTML解析HTML页面</a><br>  比如<a href="http://www.oschina.net/question/565065_67992" target="_blank" rel="noopener">LIBXML2库使用指南</a><br>  还可以用正则表达式写库……</p>
<p>  突然发现 原来的计划里有COM组件 XML和HTML 数据库访问技术<br>  都没怎么接触过  补补补<br>  在填坑的路上不能止步…</p>
<h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><p><a href="http://www.cnblogs.com/striver-zhu/p/4451781.html" target="_blank" rel="noopener">C++ 使用Htmlcxx解析Html内容(VS编译库文件)</a><br><a href="http://blog.csdn.net/farcall/article/details/20378475" target="_blank" rel="noopener">html与xml解析库htmlcxx使用过程中的若干问题及解决方案</a><br><a href="http://www.cnblogs.com/learning-lzj2014/p/3928346.html" target="_blank" rel="noopener">c++ hmtlcxx 学习之旅</a> </p>
<h2 id="MSHTML"><a href="#MSHTML" class="headerlink" title="MSHTML"></a>MSHTML</h2><p>  因为最近用过MSXML，就试试MSHTML。学有余力的话，htmlcxx之后还是想玩一下…<br>   <a href="https://msdn.microsoft.com/en-us/library/aa741317(v=vs.85).aspx" target="_blank" rel="noopener">https://msdn.microsoft.com/en-us/library/aa741317(v=vs.85).aspx</a><br>  <a href="http://blog.csdn.net/jiangsheng/article/details/3793" target="_blank" rel="noopener">蒋晟-关于MSHTML</a><br>   <a href="https://msdn.microsoft.com/zh-cn/library/mshtml(v=vs.110).aspx" target="_blank" rel="noopener">https://msdn.microsoft.com/zh-cn/library/mshtml(v=vs.110).aspx</a></p>
<h3 id="MSHTML导入"><a href="#MSHTML导入" class="headerlink" title="MSHTML导入"></a>MSHTML导入</h3><p>系统中自带了mshtml，和msxml一样，在C盘windows/system32中可找到。</p>
<p><a href="http://blog.csdn.net/mimica247706624/article/details/6128239" target="_blank" rel="noopener">如何导入</a>  </p>
<p>先看MSDN……<br> <a href="https://msdn.microsoft.com/en-us/library/aa741317%28v=vs.85%29.aspx?f=255&amp;MSPPError=-2147217396" target="_blank" rel="noopener">MSDN-MSHTML</a></p>
<p> 再看各种搜集的文章<br>  <a href="http://bbs.csdn.net/topics/330214041" target="_blank" rel="noopener">http://bbs.csdn.net/topics/330214041</a><br>  <a href="http://www.cnblogs.com/speedmancs/archive/2010/08/11/1797442.html" target="_blank" rel="noopener">http://www.cnblogs.com/speedmancs/archive/2010/08/11/1797442.html</a><br>  <a href="http://blog.csdn.net/jinyaba/article/details/17097323" target="_blank" rel="noopener">http://blog.csdn.net/jinyaba/article/details/17097323</a><br>  <a href="https://social.msdn.microsoft.com/Search/zh-CN?query=MSHTML&amp;pgArea=header&amp;emptyWatermark=true&amp;ac=4#refinementChanges=117&amp;pageNumber=1&amp;showMore=false" target="_blank" rel="noopener">https://social.msdn.microsoft.com/Search/zh-CN?query=MSHTML&amp;pgArea=header&amp;emptyWatermark=true&amp;ac=4#refinementChanges=117&amp;pageNumber=1&amp;showMore=false</a><br>  <a href="https://wenku.baidu.com/view/d571abc4ec3a87c24028c4bb.html" target="_blank" rel="noopener">https://wenku.baidu.com/view/d571abc4ec3a87c24028c4bb.html</a><br>  <a href="http://www.codeguru.com/cpp/i-n/ieprogram/article.php/c4385/Lightweight-HTML-Parsing-Using-MSHTML.htm" target="_blank" rel="noopener">http://www.codeguru.com/cpp/i-n/ieprogram/article.php/c4385/Lightweight-HTML-Parsing-Using-MSHTML.htm</a><br>  <a href="http://www.yesky.com/403/1938403.shtml?qq-pf-to=pcqq.c2c" target="_blank" rel="noopener">http://www.yesky.com/403/1938403.shtml?qq-pf-to=pcqq.c2c</a><br>  <a href="http://www.bianceng.cn/Programming/vc/201411/46771.htm" target="_blank" rel="noopener">http://www.bianceng.cn/Programming/vc/201411/46771.htm</a><br>  <a href="https://wenku.baidu.com/view/299bba4a336c1eb91a375df5.html" target="_blank" rel="noopener">https://wenku.baidu.com/view/299bba4a336c1eb91a375df5.html</a></p>
<p> <del>思路：下载源码和获取链接是两个独立函数，会被多次调用。先获取首页源码，div id=”archive_list” 遍历该div获取各月份归档链接，再使用多线程（48个线程？？？）进入每个归档链接里下载源码，获取源码中h1的每篇文章标题,保存到数据库。</del></p>
<p> 虽然有两种方法，一种通过归档获得链接，一种通过翻页获得链接，但根据本html特点，明显通过翻页要简洁方便一些，因为翻页的链接是有规律的，可通过循环搞定。每页5篇直接获得正文链接，比从归档获得少一层。<del>两核4个逻辑处理器，所以是开2个线程好还是4个好呢……</del></p>
<p>获取每篇正文链接，下载源码，解析得正文，保存到数据库。最后从数据库中提取标题和正文显示到对应窗口(使用ADO)。</p>
<h3 id="解析过程"><a href="#解析过程" class="headerlink" title="解析过程"></a>解析过程</h3><h4 id="创建"><a href="#创建" class="headerlink" title="创建"></a>创建</h4><p>1.使用CoCreateInstance创建一个接口<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">HRESULT hr = CoCreateInstance(CLSID_HTMLDocument, NULL, CLSCTX_INPROC_SERVER, IID_IHTMLDocument2, (void**)&amp;pDoc);</span><br></pre></td></tr></table></figure></p>
<p>2.创建一个COM中的数组，将HTML字符串写到数组中</p>
<p>a）SafeArrayCreateVector:函数用来创建一个对应的数组结构。函数有三个参数，第一个参数表示数组中元素类型，一般给VT_VARIANT表示它是一个自动类型，第二个参数数组元素起始位置的下标，对于VC来说，数组元素总是从0开始，所以这个位置一般给0，第三个参数是数组的维数，在这将它作为一个字符数组，所以是一个一维数组。<br>b）SafeArrayAccessData：允许用户操作这个数组，在需要读写这个数组时都需要调用这个函数，以便获取这个数组的操作权。它有两个参数，第一个参数是数组变量，第二个参数是一个输出参数，当调用这个函数成功，会提供一个缓冲区，操作这个缓冲区就相当于操作了这个数组。<br>c）SafeArrayUnaccessData：每当操作数组完成时需要调用这个函数，函数与SafeArrayAccessData配套使用，用来回收这个权限，并使对数组的操作生效。</p>
<ol start="3">
<li>调用接口的write方法，将接口与HTML字符串绑定 <figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">SAFEARRAY* psa = SafeArrayCreateVector(VT_VARIANT, <span class="number">0</span>, <span class="number">1</span>);</span><br><span class="line">VARIANT *param;</span><br><span class="line"><span class="keyword">bstr_t</span> bsData = (LPCTSTR)strHtml;</span><br><span class="line">hr = SafeArrayAccessData(psa, (LPVOID*)&amp;param);</span><br><span class="line">param-&gt;vt = VT_BSTR;</span><br><span class="line">param-&gt;bstrVal = (BSTR)bsData;</span><br><span class="line">hr = pDoc-&gt;write(psa);</span><br><span class="line">hr = SafeArrayUnaccessData(psa);</span><br></pre></td></tr></table></figure>
</li>
</ol>
<p>目标：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;span class=&quot;link_title&quot;&gt;&lt;a href=&quot;/jiangsheng/article/details/9870241&quot;&gt;</span><br><span class="line">选择剪贴板格式顺序            </span><br><span class="line">&lt;/a&gt;</span><br><span class="line">&lt;/span&gt;</span><br></pre></td></tr></table></figure>
<p>整个 \&lt;span> \&lt;/span>  是元素， \&lt;span>  是标签，class是属性名，link_title是属性值，“选择剪贴板格式顺序”是文本。</p>
<h4 id="元素遍历"><a href="#元素遍历" class="headerlink" title="元素遍历"></a>元素遍历</h4><p>至少两种方法：<br>法一：<br>获取了HTML文档的IID_IHTMLDocument2接口后，开始遍历：<br>1.get_all方法获取所有标签节点，这个函数通过一个输出参数输出IHTMLElementCollection类型的接口指针<br>2.用IHTMLElementCollection接口的get_length方法获取标签的总数量，据此写一个循环，在循环进行元素的遍历<br>3.循环中用IHTMLElementCollection接口的item方法进行迭代，获取各元素对应的IDispatch接口指针<br>4.调用IDispatch接口指针的QueryInterface方法生成对应的IHTMLElement接口。通过这个接口获取元素的各种信息</p>
<p>以下已能成功获取标题：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">void CGetWebDlg::EnumElements(IHTMLDocument2* pDoc)</span><br><span class="line">&#123;</span><br><span class="line">	CComPtr&lt;IHTMLElementCollection&gt; pCollection;</span><br><span class="line">	pDoc-&gt;get_all(&amp;pCollection);</span><br><span class="line">	if (NULL == pCollection)</span><br><span class="line">	&#123;</span><br><span class="line">		return;</span><br><span class="line">	&#125;</span><br><span class="line">	VARIANT varName;</span><br><span class="line">	CString strText;</span><br><span class="line">	long len = 0;</span><br><span class="line">	pCollection-&gt;get_length(&amp;len);</span><br><span class="line">	for (int i = 0; i &lt; len; i++)</span><br><span class="line">	&#123;</span><br><span class="line">		varName.vt = VT_I4;</span><br><span class="line">		varName.lVal = i;</span><br><span class="line">		CComPtr&lt;IHTMLElement&gt; pElement;</span><br><span class="line">		CComPtr&lt;IDispatch&gt; pDisp;</span><br><span class="line">		pCollection-&gt;item(varName, varName, &amp;pDisp);</span><br><span class="line">		if (NULL == pDisp)</span><br><span class="line">		&#123;</span><br><span class="line">			continue;</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		pDisp-&gt;QueryInterface(IID_IHTMLElement, (LPVOID*)&amp;pElement);</span><br><span class="line">		if (NULL != pElement)</span><br><span class="line">		&#123;</span><br><span class="line">			BSTR bstrClass;	</span><br><span class="line">			pElement-&gt;get_className(&amp;bstrClass);</span><br><span class="line">			CString strClass = _com_util::ConvertBSTRToString(bstrClass);</span><br><span class="line">			if (strClass.Compare(&quot;link_title&quot;) == 0)</span><br><span class="line">			&#123;</span><br><span class="line">					BSTR bstrText = NULL;</span><br><span class="line">					pElement-&gt;get_innerText(&amp;bstrText);</span><br><span class="line">					strText = bstrText;</span><br><span class="line">					m_list.InsertItem(i, strText);</span><br><span class="line">			&#125;			</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>法二：<br>利用IHTMLDocument2将字符串形式的HTML转换为DOM对象，利用IHTMLDocument3的getElementByTagName等方法来操作DOM对象。<br>以下已能成功获取标题：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">MSHTML::IHTMLDocument3Ptr pDoc3;</span><br><span class="line"> 	MSHTML::IHTMLElementCollectionPtr pCollection;</span><br><span class="line"> 	MSHTML::IHTMLElementPtr pElement;</span><br><span class="line"></span><br><span class="line">pDoc3 = pDoc;</span><br><span class="line">pCollection = pDoc3-&gt;getElementsByTagName(L&quot;span&quot;);</span><br><span class="line">for (long i = 0; i &lt; pCollection-&gt;length; i++)</span><br><span class="line">&#123;</span><br><span class="line">	pElement = pCollection-&gt;item(i, (long)0);</span><br><span class="line">	if (pElement != NULL)</span><br><span class="line">	&#123;</span><br><span class="line">		BSTR bstrClass;</span><br><span class="line">		pElement-&gt;get_className(&amp;bstrClass);</span><br><span class="line">		CString strClass = _com_util::ConvertBSTRToString(bstrClass);</span><br><span class="line">		if (strClass.Compare(&quot;link_title&quot;) == 0)</span><br><span class="line">		&#123;</span><br><span class="line">			BSTR bstrText = NULL;</span><br><span class="line">			pElement-&gt;get_innerText(&amp;bstrText);</span><br><span class="line">			CString strText = bstrText;</span><br><span class="line">			m_list.InsertItem(i, strText);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>其实两种方法大同小异，相较而言可能数据量大的话，法二效率高些吧。因为法一是直接遍历所有的元素寻找class相同的，而法二是先定位span，然后在span中找寻class。（getElementsByTagName只有IHTMLDocument3Ptr）</p>
<p><a href="http://blog.csdn.net/lanuage/article/details/72825878" target="_blank" rel="noopener">使用MSHTML解析HTML页面</a><br><a href="http://www.2cto.com/kf/201305/214730.html" target="_blank" rel="noopener">变体VARIANT</a><br>MSDN-DOM    <a href="https://msdn.microsoft.com/en-us/library/ms766487(v=vs.85).aspx" target="_blank" rel="noopener">https://msdn.microsoft.com/en-us/library/ms766487(v=vs.85).aspx</a><br><a href="http://www.360doc.com/content/12/0427/19/8006573_207099529.shtml" target="_blank" rel="noopener">使用MSHTML接口获取链接</a></p>
<p>晚上几个小时做完了一半，抵了之前一两个月。<br>数据库这块没来得及做，没加多线程，很多细节还得调。但比起之前心有余而力不足的感觉还是好多了。  学过msxml后，学习mshtml确实强一点，比一个月前完全不知道怎么下手好很多了。</p>
<p>今晚总算做出来个半成品<br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20170802003740628?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="半成品" title="">
                </div>
                <div class="image-caption">半成品</div>
            </figure></p>
<h4 id="正文解析"><a href="#正文解析" class="headerlink" title="正文解析"></a>正文解析</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> CGetWebDlg::ArticleParse(CString strArticle, Blog* blog, <span class="keyword">int</span> iRow)</span><br><span class="line">&#123;</span><br><span class="line">	IHTMLDocument2* pDoc;</span><br><span class="line">	MSHTML::IHTMLDocument3Ptr pDoc3;</span><br><span class="line">	MSHTML::IHTMLElementCollectionPtr pCollection;</span><br><span class="line">	MSHTML::IHTMLElementPtr pElement;</span><br><span class="line"></span><br><span class="line">	HRESULT hr = CoCreateInstance(CLSID_HTMLDocument, <span class="literal">NULL</span>, CLSCTX_INPROC_SERVER, IID_IHTMLDocument2, (<span class="keyword">void</span>**)&amp;pDoc);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">	<span class="comment">//将代码放入安全数组并写入文档</span></span><br><span class="line">	SAFEARRAY* psa = SafeArrayCreateVector(VT_VARIANT, <span class="number">0</span>, <span class="number">1</span>);</span><br><span class="line">	<span class="keyword">if</span> (psa == <span class="literal">NULL</span> || pDoc == <span class="literal">NULL</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		MessageBox(_T(<span class="string">"创建Document2对象失败！"</span>));</span><br><span class="line">	&#125;</span><br><span class="line">	VARIANT *param;</span><br><span class="line">	<span class="keyword">bstr_t</span> bsData = (LPCTSTR)strArticle;</span><br><span class="line">	hr = SafeArrayAccessData(psa, (LPVOID*)&amp;param);</span><br><span class="line">	param-&gt;vt = VT_BSTR;</span><br><span class="line">	param-&gt;bstrVal = (BSTR)bsData;</span><br><span class="line">	hr = pDoc-&gt;write(psa);</span><br><span class="line">	<span class="comment">//hr = pDoc-&gt;close();</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">//SafeArrayDestroy(psa);</span></span><br><span class="line">	hr = SafeArrayUnaccessData(psa);</span><br><span class="line">	<span class="keyword">_bstr_t</span> href;</span><br><span class="line">	pDoc3 = pDoc;</span><br><span class="line">	pCollection = pDoc3-&gt;getElementsByTagName(<span class="string">L"div"</span>);</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">long</span> k = <span class="number">0</span>; k &lt; pCollection-&gt;length; k++)</span><br><span class="line">	&#123;</span><br><span class="line">		pElement = pCollection-&gt;item(k, (<span class="keyword">long</span>)<span class="number">0</span>);</span><br><span class="line">		<span class="keyword">if</span> (pElement != <span class="literal">NULL</span>)</span><br><span class="line">		&#123;</span><br><span class="line">			BSTR bstrClass;</span><br><span class="line">			pElement-&gt;get_id(&amp;bstrClass);</span><br><span class="line">			CString strClass = _com_util::ConvertBSTRToString(bstrClass);</span><br><span class="line">			<span class="keyword">if</span> (strClass.CompareNoCase(<span class="string">"article_content"</span>) == <span class="number">0</span>)</span><br><span class="line">			&#123;</span><br><span class="line">				BSTR bstrText = <span class="literal">NULL</span>;</span><br><span class="line">				pElement-&gt;get_innerText(&amp;bstrText);</span><br><span class="line">				CString strText = bstrText;</span><br><span class="line">				blog-&gt;article = strText;</span><br><span class="line">				m_list.SetItemData(iRow, (DWORD_PTR)blog);							</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>建立了一个结构体用来存放每篇文章的标题和正文，方便点击列表控件项时读取对应的结构体。</p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Blog</span></span></span><br><span class="line"><span class="class">	&#123;</span></span><br><span class="line">		CString title;</span><br><span class="line">		CString article;</span><br><span class="line">	&#125;;</span><br></pre></td></tr></table></figure>
<h4 id="列表控件和编辑框交互"><a href="#列表控件和编辑框交互" class="headerlink" title="列表控件和编辑框交互"></a>列表控件和编辑框交互</h4><h5 id="列表控件初始化"><a href="#列表控件初始化" class="headerlink" title="列表控件初始化"></a>列表控件初始化</h5><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">CRect rectLocal;</span><br><span class="line">m_list.GetClientRect(rectLocal); <span class="comment">//获得当前客户区信息</span></span><br><span class="line">m_list.InsertColumn(<span class="number">0</span>, <span class="string">"序号"</span>, LVCFMT_LEFT, rectLocal.Width() / <span class="number">6</span>, <span class="number">0</span>);</span><br><span class="line">m_list.InsertColumn(<span class="number">1</span>, <span class="string">"文章列表"</span>, LVCFMT_LEFT, rectLocal.Width() / <span class="number">6</span> * <span class="number">5</span>, <span class="number">1</span>);</span><br></pre></td></tr></table></figure>
<p>添加多列后，单击只能选中第一列，这时需要修改风格 LVS_EX_FULLROWSELECT   表示整行。<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">m_list.SetExtendedStyle(LVS_EX_FULLROWSELECT);</span><br></pre></td></tr></table></figure></p>
<h5 id="添加数据"><a href="#添加数据" class="headerlink" title="添加数据"></a>添加数据</h5><p>单纯添加一项的话：    m_list.InsertItem(项的索引, 数据);<br>但要指定列的话：<br>m_list.InsertItem(项的索引, “”);<br>m_list.SetItemText(行, 列, 数据);</p>
<h5 id="OnLvnItemchangedList"><a href="#OnLvnItemchangedList" class="headerlink" title="OnLvnItemchangedList"></a>OnLvnItemchangedList</h5><p>试了多种方法，只有这一种成功了：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> CGetWebDlg::OnLvnItemchangedList1(NMHDR *pNMHDR, LRESULT *pResult)</span><br><span class="line">&#123;</span><br><span class="line">	LPNMLISTVIEW pNMLV = <span class="keyword">reinterpret_cast</span>&lt;LPNMLISTVIEW&gt;(pNMHDR);</span><br><span class="line">	<span class="comment">// <span class="doctag">TODO:</span>  在此添加控件通知处理程序代码</span></span><br><span class="line"><span class="comment">// 	m_edit.SetWindowText("");</span></span><br><span class="line"><span class="comment">// 	int index = m_list.GetNextItem(-1, LVNI_ALL | LVNI_SELECTED);</span></span><br><span class="line"><span class="comment">// 	Blog *pStructure = (Blog*)m_list.GetItemData(index);</span></span><br><span class="line"><span class="comment">// 	m_edit.SetWindowText(pStructure-&gt;article);</span></span><br><span class="line">	<span class="keyword">if</span> (pNMLV-&gt;uNewState == (LVIS_SELECTED | LVIS_FOCUSED))</span><br><span class="line">	&#123;</span><br><span class="line">		m_edit.SetWindowText(<span class="string">""</span>);</span><br><span class="line">		Blog *pStructure = (Blog*)m_list.GetItemData(pNMLV-&gt;iItem);</span><br><span class="line">		m_edit.SetWindowText(pStructure-&gt;article);</span><br><span class="line">	&#125;</span><br><span class="line">	*pResult = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>实现列表和编辑框交互后，可以说这已经是一个可以完整运行的程序了，V1.0版本出炉。<br>实测解析时间：1分41秒<br>能够成功获取该博客111篇文章，能够正确显示正文（包括清晰显示代码）。现在的运行图：<br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20170805145839785?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="V1.0" title="">
                </div>
                <div class="image-caption">V1.0</div>
            </figure><br>该版本未添加多线程、未和数据库关联。</p>
<p>V2.0实现数据库操作</p>
<h1 id="使用sqlite数据库"><a href="#使用sqlite数据库" class="headerlink" title="使用sqlite数据库"></a>使用sqlite数据库</h1><h2 id="下载导入"><a href="#下载导入" class="headerlink" title="下载导入"></a>下载导入</h2><p>官网下载sqlite<br>Source Code  sqlite-amalgamation-3200000.zip  有三个东西  shell.c  sqlite3.c  sqlite3.h<br>根据<a href="http://blog.csdn.net/sunnyloves/article/details/39010831" target="_blank" rel="noopener">VS2010下SQLite3生成lib库文件</a> 文章方法生成sqlite3.lib</p>
<p>Precompiled Binaries for Windows  sqlite-dll-win32-x86-3200000.zip  有一个所需 sqlite3.dll</p>
<p>将lib和dll放入项目工程里，在.cpp开头加上<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"sqlite3.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> comment(lib,<span class="meta-string">"sqlite3.lib"</span>)</span></span><br></pre></td></tr></table></figure></p>
<h2 id="保存至sqlite数据库"><a href="#保存至sqlite数据库" class="headerlink" title="保存至sqlite数据库"></a>保存至sqlite数据库</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> CGetWebDlg::Database(<span class="built_in">std</span>::<span class="built_in">vector</span>&lt;Blog*&gt; &amp;vecBlog)</span><br><span class="line">&#123;</span><br><span class="line">	sqlite3 * pDB;</span><br><span class="line">	<span class="keyword">char</span>* errMsg;</span><br><span class="line">	<span class="comment">// 连接SQLite数据库</span></span><br><span class="line">	<span class="keyword">int</span> res = sqlite3_open(<span class="string">"test.db"</span>, &amp;pDB);</span><br><span class="line">	<span class="keyword">if</span> (res != SQLITE_OK)</span><br><span class="line">	&#123;</span><br><span class="line">		MessageBox(_T(<span class="string">"数据库打开失败，请检查后再操作！"</span>), <span class="literal">NULL</span>, MB_ICONSTOP);</span><br><span class="line">		sqlite3_close(pDB);</span><br><span class="line">		<span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">// 创建表</span></span><br><span class="line">    <span class="built_in">string</span> strSQL = <span class="string">"create table blog (title text, article text);"</span>;</span><br><span class="line">    res = sqlite3_exec(pDB, strSQL.c_str(), <span class="number">0</span>, <span class="number">0</span>, &amp;errMsg);</span><br><span class="line">    <span class="keyword">if</span> (res != SQLITE_OK)</span><br><span class="line">    &#123;</span><br><span class="line">        MessageBox(_T(<span class="string">"数据库打开失败，请检查后再操作！"</span>), <span class="literal">NULL</span>, MB_ICONSTOP);</span><br><span class="line">        <span class="comment">//return -1;</span></span><br><span class="line">    &#125;</span><br><span class="line">	</span><br><span class="line">		<span class="comment">// 插入数据</span></span><br><span class="line">		<span class="built_in">vector</span>&lt;Blog*&gt;::iterator iter;</span><br><span class="line">		<span class="keyword">for</span> (iter = vecBlog.begin(); iter != vecBlog.end(); iter++)</span><br><span class="line">		&#123;</span><br><span class="line">			</span><br><span class="line">			CString cstrTitle = (*iter)-&gt;title;</span><br><span class="line">			CString cstrArticle = (*iter)-&gt;article;</span><br><span class="line">			cstrTitle = ConvertGBKToUtf8(cstrTitle);</span><br><span class="line">			cstrArticle = ConvertGBKToUtf8(cstrArticle);</span><br><span class="line"></span><br><span class="line">			<span class="keyword">char</span> *p1 = cstrTitle.GetBuffer(cstrTitle.GetLength() + <span class="number">1</span>);</span><br><span class="line">			cstrTitle.ReleaseBuffer();</span><br><span class="line">			<span class="keyword">char</span> *p2 = cstrArticle.GetBuffer(cstrArticle.GetLength() + <span class="number">1</span>);</span><br><span class="line">			cstrArticle.ReleaseBuffer();</span><br><span class="line">			<span class="keyword">char</span> *strSQL = sqlite3_mprintf(<span class="string">"INSERT INTO blog VALUES('%q','%q')"</span>, p1, p2);</span><br><span class="line">			sqlite3_exec(pDB, strSQL, <span class="number">0</span>, <span class="number">0</span>, &amp;errMsg);</span><br><span class="line">		&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>当然，也可以事先把数据库和表创建好……<br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20170812235933407?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="创建数据库和表" title="">
                </div>
                <div class="image-caption">创建数据库和表</div>
            </figure></p>
<p>因为sqlite数据库是UTF-8格式存储，于是，需要一个转换函数：</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">CString  <span class="title">ConvertUtf8ToGBK</span><span class="params">(CString &amp;strUtf8)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">          </span><br><span class="line">    <span class="keyword">int</span> len=MultiByteToWideChar(CP_UTF8, <span class="number">0</span>, (LPCTSTR)strUtf8, <span class="number">-1</span>, <span class="literal">NULL</span>,<span class="number">0</span>);</span><br><span class="line">	<span class="keyword">unsigned</span> <span class="keyword">short</span> * wszGBK = <span class="keyword">new</span> <span class="keyword">unsigned</span> <span class="keyword">short</span>[len+<span class="number">1</span>];</span><br><span class="line">	<span class="built_in">memset</span>(wszGBK, <span class="number">0</span>, len * <span class="number">2</span> + <span class="number">2</span>);</span><br><span class="line">	MultiByteToWideChar(CP_UTF8, <span class="number">0</span>, (LPCTSTR)strUtf8, <span class="number">-1</span>, (LPWSTR)wszGBK, len);</span><br><span class="line"> </span><br><span class="line">	len = WideCharToMultiByte(CP_ACP, <span class="number">0</span>, (LPCWSTR)wszGBK, <span class="number">-1</span>, <span class="literal">NULL</span>, <span class="number">0</span>, <span class="literal">NULL</span>, <span class="literal">NULL</span>); </span><br><span class="line">	<span class="keyword">char</span> *szGBK=<span class="keyword">new</span> <span class="keyword">char</span>[len + <span class="number">1</span>];</span><br><span class="line">	<span class="built_in">memset</span>(szGBK, <span class="number">0</span>, len + <span class="number">1</span>);</span><br><span class="line">	WideCharToMultiByte (CP_ACP, <span class="number">0</span>, (LPCWSTR)wszGBK, <span class="number">-1</span>, szGBK, len, <span class="literal">NULL</span>,<span class="literal">NULL</span>);</span><br><span class="line"> </span><br><span class="line">	strUtf8 = szGBK;</span><br><span class="line">	 <span class="keyword">delete</span>[] szGBK;</span><br><span class="line">	 <span class="keyword">delete</span>[] wszGBK;</span><br><span class="line">	 <span class="keyword">return</span> strUtf8;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="出现的问题"><a href="#出现的问题" class="headerlink" title="出现的问题"></a>出现的问题</h2><ol>
<li>如图，数据少时并不会出现。<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20171006211052844?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="Q1" title="">
                </div>
                <div class="image-caption">Q1</div>
            </figure>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20171006211119313?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="Q2" title="">
                </div>
                <div class="image-caption">Q2</div>
            </figure>
</li>
</ol>
<p>2.好像是运行了脚本<br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20171006211200087?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="Q3" title="">
                </div>
                <div class="image-caption">Q3</div>
            </figure><br>据查将“script”修改成别的字符便不会运行脚本，并没尝试成功。</p>
<h2 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h2><p>下载了一个SQLiteStudio可视化管理工具。可见数据已成功保存至数据库。<br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20171006211410475?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="sqlite" title="">
                </div>
                <div class="image-caption">sqlite</div>
            </figure></p>
<h2 id="从sqlite数据库读取数据"><a href="#从sqlite数据库读取数据" class="headerlink" title="从sqlite数据库读取数据"></a>从sqlite数据库读取数据</h2><p>新建工程。<br>主要用到该函数：<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">sqlite3_get_table</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">  sqlite3 *db,          <span class="comment">/* An open database */</span></span></span></span><br><span class="line"><span class="function"><span class="params">  <span class="keyword">const</span> <span class="keyword">char</span> *zSql,     <span class="comment">/* SQL to be evaluated */</span></span></span></span><br><span class="line"><span class="function"><span class="params">  <span class="keyword">char</span> ***pazResult,    <span class="comment">/* Results of the query */</span></span></span></span><br><span class="line"><span class="function"><span class="params">  <span class="keyword">int</span> *pnRow,           <span class="comment">/* Number of result rows written here */</span></span></span></span><br><span class="line"><span class="function"><span class="params">  <span class="keyword">int</span> *pnColumn,        <span class="comment">/* Number of result columns written here */</span></span></span></span><br><span class="line"><span class="function"><span class="params">  <span class="keyword">char</span> **pzErrmsg       <span class="comment">/* Error msg written here */</span></span></span></span><br><span class="line"><span class="function"><span class="params">)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">sqlite3_free_table</span><span class="params">(<span class="keyword">char</span> **result)</span></span>;</span><br></pre></td></tr></table></figure></p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> CGetDataFromSqliteDlg::OnBnClickedBtnreaddata()</span><br><span class="line">&#123;</span><br><span class="line">	<span class="comment">// <span class="doctag">TODO:</span>  在此添加控件通知处理程序代码</span></span><br><span class="line">	sqlite3 * pDB;</span><br><span class="line">	<span class="keyword">char</span>* errMsg;</span><br><span class="line">	<span class="comment">// 连接SQLite数据库</span></span><br><span class="line">	<span class="keyword">int</span> res = sqlite3_open(<span class="string">"test.db"</span>, &amp;pDB);</span><br><span class="line">	<span class="keyword">if</span> (res != SQLITE_OK)&#123;</span><br><span class="line">		MessageBox(_T(<span class="string">"数据库打开失败，请检查后再操作！"</span>), <span class="literal">NULL</span>, MB_ICONSTOP);</span><br><span class="line">		sqlite3_close(pDB);</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="built_in">string</span> strSql = <span class="string">"select * from blog"</span>;</span><br><span class="line">	<span class="keyword">char</span>** pResult;</span><br><span class="line">	<span class="keyword">int</span> nRow;</span><br><span class="line">	<span class="keyword">int</span> nCol;</span><br><span class="line">	<span class="keyword">int</span> nResult;</span><br><span class="line">	nResult = sqlite3_get_table(pDB, strSql.c_str(), &amp;pResult, &amp;nRow, &amp;nCol, &amp;errMsg);</span><br><span class="line">	<span class="keyword">if</span> (nResult != SQLITE_OK)</span><br><span class="line">	&#123;</span><br><span class="line">		sqlite3_close(pDB);</span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt; errMsg &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">		sqlite3_free(errMsg);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="built_in">std</span>::<span class="built_in">vector</span>&lt;Blog*&gt;vecBlog;</span><br><span class="line"></span><br><span class="line">	<span class="built_in">string</span> strOut;</span><br><span class="line">	<span class="keyword">int</span> nIndex = <span class="number">2</span>;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; nRow; i++)</span><br><span class="line">	&#123;</span><br><span class="line">		Blog* blog = <span class="keyword">new</span> Blog;</span><br><span class="line">		<span class="built_in">string</span> tempTitle = pResult[nIndex];</span><br><span class="line">		<span class="built_in">string</span> tempArticle = pResult[nIndex + <span class="number">1</span>];</span><br><span class="line">		CString number;</span><br><span class="line">		number.Format(<span class="string">"%d"</span>, i + <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">		m_list.InsertItem(nRow, <span class="string">""</span>);</span><br><span class="line">		CString strTitle(tempTitle.c_str());</span><br><span class="line">		CString strArticle(tempArticle.c_str());</span><br><span class="line">		ConvertUtf8ToGBK(strTitle);</span><br><span class="line">		ConvertUtf8ToGBK(strArticle);</span><br><span class="line">		blog-&gt;title = strTitle;</span><br><span class="line">		blog-&gt;article = strArticle;</span><br><span class="line">		vecBlog.push_back(blog);</span><br><span class="line">		m_list.SetItemText(i, <span class="number">0</span>, number);</span><br><span class="line">		m_list.SetItemText(i, <span class="number">1</span>, strTitle);</span><br><span class="line">		m_list.SetItemData(i, (DWORD_PTR)blog);</span><br><span class="line"></span><br><span class="line">		nIndex = nIndex + <span class="number">2</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	sqlite3_free_table(pResult);</span><br><span class="line">	sqlite3_close(pDB);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>同样地，注意格式转码。</p>
<h2 id="成品"><a href="#成品" class="headerlink" title="成品"></a>成品</h2><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20171006231410366?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="V1.5" title="">
                </div>
                <div class="image-caption">V1.5</div>
            </figure>
<p>V1.5成功实现从sqlite数据库读取数据并反映在列表和编辑框中。</p>
<p>To be continued…</p>
]]></content>
      
        <categories>
            
            <category> 互联网 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> CPP </tag>
            
            <tag> MFC </tag>
            
            <tag> 爬虫 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Socket点对点聊天+文件传输]]></title>
      <url>https://hubojing.github.io/2017/05/07/Socket%E7%82%B9%E5%AF%B9%E7%82%B9%E8%81%8A%E5%A4%A9-%E6%96%87%E4%BB%B6%E4%BC%A0%E8%BE%93/</url>
      <content type="html"><![CDATA[<div align="left"><br><img src="https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1494249495796&di=6e913a58ff8ec3713e96983683e150b8&imgtype=0&src=http%3A%2F%2Fimg.my.csdn.net%2Fuploads%2F201304%2F08%2F1365431054_1015.png" width="300" height="180" style="float:right;"><br><br><br>　Socket编程。　<br><br><br> </div>

<a id="more"></a>
<p>socket:<br>设计一个点对点聊天小程序。</p>
<ol>
<li>使用原生socket api实现，<strong>即不使用MFC中的socket类</strong>，也不使用其他高级socket框架</li>
<li>需要先设计一套协议</li>
<li>有GUI界面</li>
<li>可互相传递文字和文件</li>
<li>即时反应对方的在线还是离线</li>
</ol>
<h1 id="初级版"><a href="#初级版" class="headerlink" title="初级版"></a>初级版</h1><p>1.在应用程序类重载的InitInstance函数中调用AfxSocketInit()函数，加载套接字。</p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(!AfxSocketInit())</span><br><span class="line">&#123;</span><br><span class="line">    AfxMessageBox(<span class="string">"加载套接字库失败！"</span>);</span><br><span class="line">    <span class="keyword">return</span> FALSE;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>2.在你的对话框类中添加如下函数InitSocket()，初始化套接字</p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">BOOL CChatDlg::InitSocket()</span><br><span class="line">&#123;</span><br><span class="line">    m_socket=socket(AF_INET,SOCK_DGRAM,<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">if</span>(INVALID_SOCKET==m_socket)</span><br><span class="line">    &#123;</span><br><span class="line">        MessageBox(<span class="string">"套接字创建失败！"</span>);</span><br><span class="line">        <span class="keyword">return</span> FALSE;</span><br><span class="line">    &#125;</span><br><span class="line">    SOCKADDR_IN addrSock;</span><br><span class="line">    addrSock.sin_family=AF_INET;</span><br><span class="line">    addrSock.sin_port=htons(<span class="number">5000</span>);</span><br><span class="line">    addrSock.sin_addr.S_un.S_addr=htonl(INADDR_ANY);</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">int</span> retval;</span><br><span class="line">    retval=bind(m_socket,(SOCKADDR*)&amp;addrSock,<span class="keyword">sizeof</span>(SOCKADDR));</span><br><span class="line">    <span class="keyword">if</span>(SOCKET_ERROR==retval)</span><br><span class="line">    &#123;</span><br><span class="line">        closesocket(m_socket);</span><br><span class="line">        MessageBox(<span class="string">"绑定失败!"</span>);</span><br><span class="line">        <span class="keyword">return</span> FALSE;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> TRUE;</span><br><span class="line"> </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>3.在对话框类的OnInitDialog()函数中调用上述InitSocket()函数，初始化套接字，同时创建一个线程接收数据：</p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">RECVPARAM *pRecvParam=<span class="keyword">new</span> RECVPARAM;</span><br><span class="line">pRecvParam-&gt;sock=m_socket;</span><br><span class="line">pRecvParam-&gt;hwnd=m_hWnd;</span><br><span class="line">HANDLE hThread=CreateThread(<span class="literal">NULL</span>,<span class="number">0</span>,RecvProc,(LPVOID)pRecvParam,<span class="number">0</span>,<span class="literal">NULL</span>);</span><br><span class="line">CloseHandle(hThread);</span><br></pre></td></tr></table></figure>
<p>其中</p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">RECVPARAM</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    SOCKET sock;</span><br><span class="line">    HWND hwnd;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<p>是自定义结构体</p>
<p>4.接收线程函数RecvProc:</p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">DWORD WINAPI CChatDlg::RecvProc(LPVOID lpParameter)</span><br><span class="line">&#123;</span><br><span class="line">    SOCKET sock=((RECVPARAM*)lpParameter)-&gt;sock;</span><br><span class="line">    HWND hwnd=((RECVPARAM*)lpParameter)-&gt;hwnd;</span><br><span class="line">    <span class="keyword">delete</span> lpParameter;   </span><br><span class="line">    SOCKADDR_IN addrFrom;</span><br><span class="line">    <span class="keyword">int</span> len=<span class="keyword">sizeof</span>(SOCKADDR); </span><br><span class="line">    <span class="keyword">char</span> recvBuf[<span class="number">200</span>];</span><br><span class="line">    <span class="keyword">int</span> retval;</span><br><span class="line">    <span class="keyword">while</span>(TRUE)</span><br><span class="line">    &#123;</span><br><span class="line">        retval=recvfrom(sock,recvBuf,<span class="number">200</span>,<span class="number">0</span>,(SOCKADDR*)&amp;addrFrom,&amp;len);</span><br><span class="line">        <span class="keyword">if</span>(SOCKET_ERROR==retval)</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>recvBuf中就保存了你要的数据。<br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20170508183259821?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="初级版" title="">
                </div>
                <div class="image-caption">初级版</div>
            </figure></p>
<h1 id="中级版"><a href="#中级版" class="headerlink" title="中级版"></a>中级版</h1><h2 id="界面"><a href="#界面" class="headerlink" title="界面"></a>界面</h2><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20170508181716901?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="原始界面" title="">
                </div>
                <div class="image-caption">原始界面</div>
            </figure>
<p>聊天：<br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20170508181451922?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="TCP" title="">
                </div>
                <div class="image-caption">TCP</div>
            </figure></p>
<p>传文件：<br>服务器<br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20170508181526914?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="传文件" title="">
                </div>
                <div class="image-caption">传文件</div>
            </figure></p>
<p>客户端<br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20170508181625735?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="传文件2" title="">
                </div>
                <div class="image-caption">传文件2</div>
            </figure></p>
<p>显示文件传输进度：<br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20170508181907845?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="传输过程" title="">
                </div>
                <div class="image-caption">传输过程</div>
            </figure></p>
<p>传输成功，可以正常打开文件。<br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20170508181937814?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="传输成功" title="">
                </div>
                <div class="image-caption">传输成功</div>
            </figure></p>
<p>下线：<br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20170508182031143?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="下线" title="">
                </div>
                <div class="image-caption">下线</div>
            </figure></p>
<p>关于：<br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20170508182628147?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="关于" title="">
                </div>
                <div class="image-caption">关于</div>
            </figure></p>
<p>源程序：</p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br><span class="line">575</span><br><span class="line">576</span><br><span class="line">577</span><br><span class="line">578</span><br><span class="line">579</span><br><span class="line">580</span><br><span class="line">581</span><br><span class="line">582</span><br><span class="line">583</span><br><span class="line">584</span><br><span class="line">585</span><br><span class="line">586</span><br><span class="line">587</span><br><span class="line">588</span><br><span class="line">589</span><br><span class="line">590</span><br><span class="line">591</span><br><span class="line">592</span><br><span class="line">593</span><br><span class="line">594</span><br><span class="line">595</span><br><span class="line">596</span><br><span class="line">597</span><br><span class="line">598</span><br><span class="line">599</span><br><span class="line">600</span><br><span class="line">601</span><br><span class="line">602</span><br><span class="line">603</span><br><span class="line">604</span><br><span class="line">605</span><br><span class="line">606</span><br><span class="line">607</span><br><span class="line">608</span><br><span class="line">609</span><br><span class="line">610</span><br><span class="line">611</span><br><span class="line">612</span><br><span class="line">613</span><br><span class="line">614</span><br><span class="line">615</span><br><span class="line">616</span><br><span class="line">617</span><br><span class="line">618</span><br><span class="line">619</span><br><span class="line">620</span><br><span class="line">621</span><br><span class="line">622</span><br><span class="line">623</span><br><span class="line">624</span><br><span class="line">625</span><br><span class="line">626</span><br><span class="line">627</span><br><span class="line">628</span><br><span class="line">629</span><br><span class="line">630</span><br><span class="line">631</span><br><span class="line">632</span><br><span class="line">633</span><br><span class="line">634</span><br><span class="line">635</span><br><span class="line">636</span><br><span class="line">637</span><br><span class="line">638</span><br><span class="line">639</span><br><span class="line">640</span><br><span class="line">641</span><br><span class="line">642</span><br><span class="line">643</span><br><span class="line">644</span><br><span class="line">645</span><br><span class="line">646</span><br><span class="line">647</span><br><span class="line">648</span><br><span class="line">649</span><br><span class="line">650</span><br><span class="line">651</span><br><span class="line">652</span><br><span class="line">653</span><br><span class="line">654</span><br><span class="line">655</span><br><span class="line">656</span><br><span class="line">657</span><br><span class="line">658</span><br><span class="line">659</span><br><span class="line">660</span><br><span class="line">661</span><br><span class="line">662</span><br><span class="line">663</span><br><span class="line">664</span><br><span class="line">665</span><br><span class="line">666</span><br><span class="line">667</span><br><span class="line">668</span><br><span class="line">669</span><br><span class="line">670</span><br><span class="line">671</span><br><span class="line">672</span><br><span class="line">673</span><br><span class="line">674</span><br><span class="line">675</span><br><span class="line">676</span><br><span class="line">677</span><br><span class="line">678</span><br><span class="line">679</span><br><span class="line">680</span><br><span class="line">681</span><br><span class="line">682</span><br><span class="line">683</span><br><span class="line">684</span><br><span class="line">685</span><br><span class="line">686</span><br><span class="line">687</span><br><span class="line">688</span><br><span class="line">689</span><br><span class="line">690</span><br><span class="line">691</span><br><span class="line">692</span><br><span class="line">693</span><br><span class="line">694</span><br><span class="line">695</span><br><span class="line">696</span><br><span class="line">697</span><br><span class="line">698</span><br><span class="line">699</span><br><span class="line">700</span><br><span class="line">701</span><br><span class="line">702</span><br><span class="line">703</span><br><span class="line">704</span><br><span class="line">705</span><br><span class="line">706</span><br><span class="line">707</span><br><span class="line">708</span><br><span class="line">709</span><br><span class="line">710</span><br><span class="line">711</span><br><span class="line">712</span><br><span class="line">713</span><br><span class="line">714</span><br><span class="line">715</span><br><span class="line">716</span><br><span class="line">717</span><br><span class="line">718</span><br><span class="line">719</span><br><span class="line">720</span><br><span class="line">721</span><br><span class="line">722</span><br><span class="line">723</span><br><span class="line">724</span><br><span class="line">725</span><br><span class="line">726</span><br><span class="line">727</span><br><span class="line">728</span><br><span class="line">729</span><br><span class="line">730</span><br><span class="line">731</span><br><span class="line">732</span><br><span class="line">733</span><br><span class="line">734</span><br><span class="line">735</span><br><span class="line">736</span><br><span class="line">737</span><br><span class="line">738</span><br><span class="line">739</span><br><span class="line">740</span><br><span class="line">741</span><br><span class="line">742</span><br><span class="line">743</span><br><span class="line">744</span><br><span class="line">745</span><br><span class="line">746</span><br><span class="line">747</span><br><span class="line">748</span><br><span class="line">749</span><br><span class="line">750</span><br><span class="line">751</span><br><span class="line">752</span><br><span class="line">753</span><br><span class="line">754</span><br><span class="line">755</span><br><span class="line">756</span><br><span class="line">757</span><br><span class="line">758</span><br><span class="line">759</span><br><span class="line">760</span><br><span class="line">761</span><br><span class="line">762</span><br><span class="line">763</span><br><span class="line">764</span><br><span class="line">765</span><br><span class="line">766</span><br><span class="line">767</span><br><span class="line">768</span><br><span class="line">769</span><br><span class="line">770</span><br><span class="line">771</span><br><span class="line">772</span><br><span class="line">773</span><br><span class="line">774</span><br><span class="line">775</span><br><span class="line">776</span><br><span class="line">777</span><br><span class="line">778</span><br><span class="line">779</span><br><span class="line">780</span><br><span class="line">781</span><br><span class="line">782</span><br><span class="line">783</span><br><span class="line">784</span><br><span class="line">785</span><br><span class="line">786</span><br><span class="line">787</span><br><span class="line">788</span><br><span class="line">789</span><br><span class="line">790</span><br><span class="line">791</span><br><span class="line">792</span><br><span class="line">793</span><br><span class="line">794</span><br><span class="line">795</span><br><span class="line">796</span><br><span class="line">797</span><br><span class="line">798</span><br><span class="line">799</span><br><span class="line">800</span><br><span class="line">801</span><br><span class="line">802</span><br><span class="line">803</span><br><span class="line">804</span><br><span class="line">805</span><br><span class="line">806</span><br><span class="line">807</span><br><span class="line">808</span><br><span class="line">809</span><br><span class="line">810</span><br><span class="line">811</span><br><span class="line">812</span><br><span class="line">813</span><br><span class="line">814</span><br><span class="line">815</span><br><span class="line">816</span><br><span class="line">817</span><br><span class="line">818</span><br><span class="line">819</span><br><span class="line">820</span><br><span class="line">821</span><br><span class="line">822</span><br><span class="line">823</span><br><span class="line">824</span><br><span class="line">825</span><br><span class="line">826</span><br><span class="line">827</span><br><span class="line">828</span><br><span class="line">829</span><br><span class="line">830</span><br><span class="line">831</span><br><span class="line">832</span><br><span class="line">833</span><br><span class="line">834</span><br><span class="line">835</span><br><span class="line">836</span><br><span class="line">837</span><br><span class="line">838</span><br><span class="line">839</span><br><span class="line">840</span><br><span class="line">841</span><br><span class="line">842</span><br><span class="line">843</span><br><span class="line">844</span><br><span class="line">845</span><br><span class="line">846</span><br><span class="line">847</span><br><span class="line">848</span><br><span class="line">849</span><br><span class="line">850</span><br><span class="line">851</span><br><span class="line">852</span><br><span class="line">853</span><br><span class="line">854</span><br><span class="line">855</span><br><span class="line">856</span><br><span class="line">857</span><br><span class="line">858</span><br><span class="line">859</span><br><span class="line">860</span><br><span class="line">861</span><br><span class="line">862</span><br><span class="line">863</span><br><span class="line">864</span><br><span class="line">865</span><br><span class="line">866</span><br><span class="line">867</span><br><span class="line">868</span><br><span class="line">869</span><br><span class="line">870</span><br><span class="line">871</span><br><span class="line">872</span><br><span class="line">873</span><br><span class="line">874</span><br><span class="line">875</span><br><span class="line">876</span><br><span class="line">877</span><br><span class="line">878</span><br><span class="line">879</span><br><span class="line">880</span><br><span class="line">881</span><br><span class="line">882</span><br><span class="line">883</span><br><span class="line">884</span><br><span class="line">885</span><br><span class="line">886</span><br><span class="line">887</span><br><span class="line">888</span><br><span class="line">889</span><br><span class="line">890</span><br><span class="line">891</span><br><span class="line">892</span><br><span class="line">893</span><br><span class="line">894</span><br><span class="line">895</span><br><span class="line">896</span><br><span class="line">897</span><br><span class="line">898</span><br><span class="line">899</span><br><span class="line">900</span><br><span class="line">901</span><br><span class="line">902</span><br><span class="line">903</span><br><span class="line">904</span><br><span class="line">905</span><br><span class="line">906</span><br><span class="line">907</span><br><span class="line">908</span><br><span class="line">909</span><br><span class="line">910</span><br><span class="line">911</span><br><span class="line">912</span><br><span class="line">913</span><br><span class="line">914</span><br><span class="line">915</span><br><span class="line">916</span><br><span class="line">917</span><br><span class="line">918</span><br><span class="line">919</span><br><span class="line">920</span><br><span class="line">921</span><br><span class="line">922</span><br><span class="line">923</span><br><span class="line">924</span><br><span class="line">925</span><br><span class="line">926</span><br><span class="line">927</span><br><span class="line">928</span><br><span class="line">929</span><br><span class="line">930</span><br><span class="line">931</span><br><span class="line">932</span><br><span class="line">933</span><br><span class="line">934</span><br><span class="line">935</span><br><span class="line">936</span><br><span class="line">937</span><br><span class="line">938</span><br><span class="line">939</span><br><span class="line">940</span><br><span class="line">941</span><br><span class="line">942</span><br><span class="line">943</span><br><span class="line">944</span><br><span class="line">945</span><br><span class="line">946</span><br><span class="line">947</span><br><span class="line">948</span><br><span class="line">949</span><br><span class="line">950</span><br><span class="line">951</span><br><span class="line">952</span><br><span class="line">953</span><br><span class="line">954</span><br><span class="line">955</span><br><span class="line">956</span><br><span class="line">957</span><br><span class="line">958</span><br><span class="line">959</span><br><span class="line">960</span><br><span class="line">961</span><br><span class="line">962</span><br><span class="line">963</span><br><span class="line">964</span><br><span class="line">965</span><br><span class="line">966</span><br><span class="line">967</span><br><span class="line">968</span><br><span class="line">969</span><br><span class="line">970</span><br><span class="line">971</span><br><span class="line">972</span><br><span class="line">973</span><br><span class="line">974</span><br><span class="line">975</span><br><span class="line">976</span><br><span class="line">977</span><br><span class="line">978</span><br><span class="line">979</span><br><span class="line">980</span><br><span class="line">981</span><br><span class="line">982</span><br><span class="line">983</span><br><span class="line">984</span><br><span class="line">985</span><br><span class="line">986</span><br><span class="line">987</span><br><span class="line">988</span><br><span class="line">989</span><br><span class="line">990</span><br><span class="line">991</span><br><span class="line">992</span><br><span class="line">993</span><br><span class="line">994</span><br><span class="line">995</span><br><span class="line">996</span><br><span class="line">997</span><br><span class="line">998</span><br><span class="line">999</span><br><span class="line">1000</span><br><span class="line">1001</span><br><span class="line">1002</span><br><span class="line">1003</span><br><span class="line">1004</span><br><span class="line">1005</span><br><span class="line">1006</span><br><span class="line">1007</span><br><span class="line">1008</span><br><span class="line">1009</span><br><span class="line">1010</span><br><span class="line">1011</span><br><span class="line">1012</span><br><span class="line">1013</span><br><span class="line">1014</span><br><span class="line">1015</span><br><span class="line">1016</span><br><span class="line">1017</span><br><span class="line">1018</span><br><span class="line">1019</span><br><span class="line">1020</span><br><span class="line">1021</span><br><span class="line">1022</span><br><span class="line">1023</span><br><span class="line">1024</span><br><span class="line">1025</span><br><span class="line">1026</span><br><span class="line">1027</span><br><span class="line">1028</span><br><span class="line">1029</span><br><span class="line">1030</span><br><span class="line">1031</span><br><span class="line">1032</span><br><span class="line">1033</span><br><span class="line">1034</span><br><span class="line">1035</span><br><span class="line">1036</span><br><span class="line">1037</span><br><span class="line">1038</span><br><span class="line">1039</span><br><span class="line">1040</span><br><span class="line">1041</span><br><span class="line">1042</span><br><span class="line">1043</span><br><span class="line">1044</span><br><span class="line">1045</span><br><span class="line">1046</span><br><span class="line">1047</span><br><span class="line">1048</span><br><span class="line">1049</span><br><span class="line">1050</span><br><span class="line">1051</span><br><span class="line">1052</span><br><span class="line">1053</span><br><span class="line">1054</span><br><span class="line">1055</span><br><span class="line">1056</span><br><span class="line">1057</span><br><span class="line">1058</span><br><span class="line">1059</span><br><span class="line">1060</span><br><span class="line">1061</span><br><span class="line">1062</span><br><span class="line">1063</span><br><span class="line">1064</span><br><span class="line">1065</span><br><span class="line">1066</span><br><span class="line">1067</span><br><span class="line">1068</span><br><span class="line">1069</span><br><span class="line">1070</span><br><span class="line">1071</span><br><span class="line">1072</span><br><span class="line">1073</span><br><span class="line">1074</span><br><span class="line">1075</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">// traDlg.cpp : implementation file</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"stdafx.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"tra.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"traDlg.h"</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> _DEBUG</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> new DEBUG_NEW</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">undef</span> THIS_FILE</span></span><br><span class="line"><span class="keyword">static</span> <span class="keyword">char</span> THIS_FILE[] = __FILE__;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;dlgs.h&gt;</span></span></span><br><span class="line"><span class="comment">/////////////////////////////////////////////////////////////////////////////</span></span><br><span class="line"><span class="comment">// CAboutDlg dialog used for App About</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CAboutDlg</span> :</span> <span class="keyword">public</span> CDialog</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">	CAboutDlg();</span><br><span class="line">	</span><br><span class="line">	<span class="comment">// Dialog Data</span></span><br><span class="line">	<span class="comment">//&#123;&#123;AFX_DATA(CAboutDlg)</span></span><br><span class="line">	<span class="keyword">enum</span> &#123; IDD = IDD_ABOUTBOX &#125;;</span><br><span class="line">	<span class="comment">//&#125;&#125;AFX_DATA</span></span><br><span class="line">	</span><br><span class="line">	<span class="comment">// ClassWizard generated virtual function overrides</span></span><br><span class="line">	<span class="comment">//&#123;&#123;AFX_VIRTUAL(CAboutDlg)</span></span><br><span class="line"><span class="keyword">protected</span>:</span><br><span class="line">	<span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">DoDataExchange</span><span class="params">(CDataExchange* pDX)</span></span>;    <span class="comment">// DDX/DDV support</span></span><br><span class="line">	<span class="comment">//&#125;&#125;AFX_VIRTUAL</span></span><br><span class="line">	</span><br><span class="line">	<span class="comment">// Implementation</span></span><br><span class="line"><span class="keyword">protected</span>:</span><br><span class="line">	<span class="comment">//&#123;&#123;AFX_MSG(CAboutDlg)</span></span><br><span class="line">	<span class="comment">//&#125;&#125;AFX_MSG</span></span><br><span class="line">	DECLARE_MESSAGE_MAP()</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">CAboutDlg::CAboutDlg() : CDialog(CAboutDlg::IDD)</span><br><span class="line">&#123;</span><br><span class="line">	<span class="comment">//&#123;&#123;AFX_DATA_INIT(CAboutDlg)</span></span><br><span class="line">	<span class="comment">//&#125;&#125;AFX_DATA_INIT</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> CAboutDlg::DoDataExchange(CDataExchange* pDX)</span><br><span class="line">&#123;</span><br><span class="line">	CDialog::DoDataExchange(pDX);</span><br><span class="line">	<span class="comment">//&#123;&#123;AFX_DATA_MAP(CAboutDlg)</span></span><br><span class="line">	<span class="comment">//&#125;&#125;AFX_DATA_MAP</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">BEGIN_MESSAGE_MAP(CAboutDlg, CDialog)</span><br><span class="line"><span class="comment">//&#123;&#123;AFX_MSG_MAP(CAboutDlg)</span></span><br><span class="line"><span class="comment">// No message handlers</span></span><br><span class="line"><span class="comment">//&#125;&#125;AFX_MSG_MAP</span></span><br><span class="line">END_MESSAGE_MAP()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/////////////////////////////////////////////////////////////////////////////</span></span><br><span class="line"><span class="comment">// CtraDlg dialog</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PORT		34567</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> FLAG		2</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SIZEFILE	1024</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> SOCK_TCP	= <span class="number">0</span>;	<span class="comment">//TCP模式</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> SOCK_UDP  = <span class="number">1</span>;	<span class="comment">//UDP模式</span></span><br><span class="line"></span><br><span class="line">CWinThread	*pThreadSendFile;	<span class="comment">//发送文件线程--&gt;_SendFileThread</span></span><br><span class="line">CWinThread	*pThreadSendMsg;		<span class="comment">//发送消息线程</span></span><br><span class="line">CWinThread	*pThreadLisen;		<span class="comment">//监听线程--&gt;_ListenTcpThread</span></span><br><span class="line">CWinThread	*pReceiveThread;		<span class="comment">//接受线程--&gt;_ReceiveThread</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//////////////////////////////////////////////////////////////////////////////</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">CtraDlg::CtraDlg(CWnd* pParent <span class="comment">/*=NULL*/</span>)</span><br><span class="line">: CDialog(CtraDlg::IDD, pParent)</span><br><span class="line">&#123;</span><br><span class="line">	<span class="comment">//&#123;&#123;AFX_DATA_INIT(CtraDlg)</span></span><br><span class="line">	m_MsgSend = _T(<span class="string">""</span>);</span><br><span class="line">	<span class="comment">//&#125;&#125;AFX_DATA_INIT</span></span><br><span class="line">	<span class="comment">// Note that LoadIcon does not require a subsequent DestroyIcon in Win32</span></span><br><span class="line">	m_hIcon = AfxGetApp()-&gt;LoadIcon(IDR_MAINFRAME);</span><br><span class="line">	m_nSockType = <span class="number">0</span>;<span class="comment">//TCP</span></span><br><span class="line">	m_WorkType = <span class="number">2</span>;<span class="comment">//两者</span></span><br><span class="line">	m_client = <span class="number">0</span>;</span><br><span class="line">	m_server = <span class="number">0</span>;</span><br><span class="line">	FileWork = <span class="literal">false</span>;</span><br><span class="line">	FileStop = <span class="literal">false</span>;</span><br><span class="line">	StopServer = <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> CtraDlg::DoDataExchange(CDataExchange* pDX)</span><br><span class="line">&#123;</span><br><span class="line">	CDialog::DoDataExchange(pDX);</span><br><span class="line">	<span class="comment">//&#123;&#123;AFX_DATA_MAP(CtraDlg)</span></span><br><span class="line">	DDX_Control(pDX, IDC_PROGRESS_SEND_FILE, m_Progress);</span><br><span class="line">	DDX_Control(pDX, IDC_LIST_BOX_ADDMSG, m_AddMsgLIst);</span><br><span class="line">	DDX_Control(pDX, IDC_IPADDRESS, m_You_IP);</span><br><span class="line">	DDX_Text(pDX, IDC_EDIT_SENDMSG, m_MsgSend);</span><br><span class="line">	<span class="comment">//&#125;&#125;AFX_DATA_MAP</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">BEGIN_MESSAGE_MAP(CtraDlg, CDialog)</span><br><span class="line"><span class="comment">//&#123;&#123;AFX_MSG_MAP(CtraDlg)</span></span><br><span class="line">ON_WM_SYSCOMMAND()</span><br><span class="line">ON_WM_PAINT()</span><br><span class="line">ON_WM_QUERYDRAGICON()</span><br><span class="line">ON_BN_CLICKED(IDC_BUTTON_CONNECT, OnButtonConnect)</span><br><span class="line">ON_BN_CLICKED(IDC_BUTTON_DISCONNECT, OnButtonDisconnect)</span><br><span class="line">ON_BN_CLICKED(IDC_BUTTON_SEND_MSG, OnButtonSendMsg)</span><br><span class="line">ON_BN_CLICKED(IDC_BUTTON_SEND_FILE, OnButtonSendFile)</span><br><span class="line">ON_BN_CLICKED(IDC_BUTTON_CLEAR, OnButtonClear)</span><br><span class="line">ON_BN_CLICKED(IDC_RADIO_TCP, OnRadioTcp)</span><br><span class="line">ON_BN_CLICKED(IDC_RADIO_UDP, OnRadioUdp)</span><br><span class="line">ON_BN_CLICKED(IDC_RADIO_SERVER, OnRadioServer)</span><br><span class="line">ON_BN_CLICKED(IDC_RADIO_CLIENT, OnRadioClient)</span><br><span class="line">ON_BN_CLICKED(IDC_RADIO_BOTH, OnRadioBoth)</span><br><span class="line">ON_BN_CLICKED(IDC_BUTTON_STOP_FILE, OnButtonStopFile)</span><br><span class="line">ON_MESSAGE(WM_KSEND,OnKSend)</span><br><span class="line"><span class="comment">//ON_BN_CLICKED(IDC_BUTTON_CAPUTER, OnButtonCaputer)</span></span><br><span class="line"><span class="comment">//&#125;&#125;AFX_MSG_MAP</span></span><br><span class="line">END_MESSAGE_MAP()</span><br><span class="line"></span><br><span class="line"><span class="comment">/////////////////////////////////////////////////////////////////////////////</span></span><br><span class="line"><span class="comment">// CtraDlg message handlers</span></span><br><span class="line"></span><br><span class="line">BOOL CtraDlg::OnInitDialog()</span><br><span class="line">&#123;</span><br><span class="line">	CDialog::OnInitDialog();</span><br><span class="line">	</span><br><span class="line">	<span class="comment">// Add "About..." menu item to system menu.</span></span><br><span class="line">	</span><br><span class="line">	<span class="comment">// IDM_ABOUTBOX must be in the system command range.</span></span><br><span class="line">	ASSERT((IDM_ABOUTBOX &amp; <span class="number">0xFFF0</span>) == IDM_ABOUTBOX);</span><br><span class="line">	ASSERT(IDM_ABOUTBOX &lt; <span class="number">0xF000</span>);</span><br><span class="line">	</span><br><span class="line">	CMenu* pSysMenu = GetSystemMenu(FALSE);</span><br><span class="line">	<span class="keyword">if</span> (pSysMenu != <span class="literal">NULL</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		CString strAboutMenu;</span><br><span class="line">		strAboutMenu.LoadString(IDS_ABOUTBOX);</span><br><span class="line">		<span class="keyword">if</span> (!strAboutMenu.IsEmpty())</span><br><span class="line">		&#123;</span><br><span class="line">			pSysMenu-&gt;AppendMenu(MF_SEPARATOR);</span><br><span class="line">			pSysMenu-&gt;AppendMenu(MF_STRING, IDM_ABOUTBOX, strAboutMenu);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="comment">// Set the icon for this dialog.  The framework does this automatically</span></span><br><span class="line">	<span class="comment">//  when the application's main window is not a dialog</span></span><br><span class="line">	SetIcon(m_hIcon, TRUE);			<span class="comment">// Set big icon</span></span><br><span class="line">	SetIcon(m_hIcon, FALSE);		<span class="comment">// Set small icon</span></span><br><span class="line">	</span><br><span class="line">	<span class="comment">// <span class="doctag">TODO:</span> Add extra initialization here</span></span><br><span class="line">	<span class="comment">/////////////////////////////////////////////////////////</span></span><br><span class="line">	CString strLocalName;</span><br><span class="line">	GetLocalHostName(strLocalName);</span><br><span class="line">	CString strLocalIP;</span><br><span class="line">	GetIpAddress(strLocalName,strLocalIP);</span><br><span class="line">	m_You_IP.SetWindowText(<span class="string">"127.0.0.1"</span>);	<span class="comment">//设置默认IP</span></span><br><span class="line">	<span class="comment">/////////////////////////////////////////////////////////</span></span><br><span class="line">	((CButton*)GetDlgItem(IDC_RADIO_BOTH))-&gt;SetCheck(BST_CHECKED);<span class="comment">//默认为服务器、客户端一体</span></span><br><span class="line">	SetWindowText(<span class="string">"博靖牌聊天+文件传输小工具"</span>);</span><br><span class="line"></span><br><span class="line">	GetDlgItem(IDC_BUTTON_CONNECT)-&gt;SetWindowText(<span class="string">"启动"</span>);</span><br><span class="line">	GetDlgItem(IDC_BUTTON_DISCONNECT)-&gt;SetWindowText(<span class="string">"关闭"</span>);</span><br><span class="line">	</span><br><span class="line">	<span class="comment">//GetDlgItem(IDC_BUTTON_CAPUTER)-&gt;EnableWindow(false);//默认为不可用</span></span><br><span class="line">	((CButton*)GetDlgItem(IDC_RADIO_TCP))-&gt;SetCheck(BST_CHECKED);<span class="comment">//默认为TCP</span></span><br><span class="line">	GetDlgItem(IDC_BUTTON_SEND_MSG)-&gt;EnableWindow(<span class="literal">false</span>);<span class="comment">//发送消息不可用</span></span><br><span class="line">	GetDlgItem(IDC_BUTTON_SEND_FILE)-&gt;EnableWindow(<span class="literal">false</span>);<span class="comment">//发送文件不可用</span></span><br><span class="line">	GetDlgItem(IDC_BUTTON_CLEAR)-&gt;EnableWindow(<span class="literal">false</span>);<span class="comment">//清除不可用</span></span><br><span class="line">	GetDlgItem(IDC_BUTTON_DISCONNECT)-&gt;EnableWindow(<span class="literal">false</span>);<span class="comment">//断开连接不可用</span></span><br><span class="line">	GetDlgItem(IDC_PROGRESS_SEND_FILE)-&gt;ShowWindow(SW_HIDE);</span><br><span class="line">	<span class="keyword">return</span> TRUE;  <span class="comment">// return TRUE  unless you set the focus to a control</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> CtraDlg::OnSysCommand(UINT nID, LPARAM lParam)</span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">if</span> ((nID &amp; <span class="number">0xFFF0</span>) == IDM_ABOUTBOX)</span><br><span class="line">	&#123;</span><br><span class="line">		CAboutDlg dlgAbout;</span><br><span class="line">		dlgAbout.DoModal();</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">	&#123;</span><br><span class="line">		CDialog::OnSysCommand(nID, lParam);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// If you add a minimize button to your dialog, you will need the code below</span></span><br><span class="line"><span class="comment">//  to draw the icon.  For MFC applications using the document/view model,</span></span><br><span class="line"><span class="comment">//  this is automatically done for you by the framework.</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> CtraDlg::OnPaint() </span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">if</span> (IsIconic())</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="function">CPaintDC <span class="title">dc</span><span class="params">(<span class="keyword">this</span>)</span></span>; <span class="comment">// device context for painting</span></span><br><span class="line">		</span><br><span class="line">		SendMessage(WM_ICONERASEBKGND, (WPARAM) dc.GetSafeHdc(), <span class="number">0</span>);</span><br><span class="line">		</span><br><span class="line">		<span class="comment">// Center icon in client rectangle</span></span><br><span class="line">		<span class="keyword">int</span> cxIcon = GetSystemMetrics(SM_CXICON);</span><br><span class="line">		<span class="keyword">int</span> cyIcon = GetSystemMetrics(SM_CYICON);</span><br><span class="line">		CRect rect;</span><br><span class="line">		GetClientRect(&amp;rect);</span><br><span class="line">		<span class="keyword">int</span> x = (rect.Width() - cxIcon + <span class="number">1</span>) / <span class="number">2</span>;</span><br><span class="line">		<span class="keyword">int</span> y = (rect.Height() - cyIcon + <span class="number">1</span>) / <span class="number">2</span>;</span><br><span class="line">		</span><br><span class="line">		<span class="comment">// Draw the icon</span></span><br><span class="line">		dc.DrawIcon(x, y, m_hIcon);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">	&#123;</span><br><span class="line">		CDialog::OnPaint();</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// The system calls this to obtain the cursor to display while the user drags</span></span><br><span class="line"><span class="comment">//  the minimized window.</span></span><br><span class="line">HCURSOR CtraDlg::OnQueryDragIcon()</span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">return</span> (HCURSOR) m_hIcon;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**************************************线程************************************************/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/******************************服务器线程开始***********************************************/</span></span><br><span class="line"><span class="comment">//TCP监听线程</span></span><br><span class="line">UINT _ListenTcpThread(LPVOID lparam)</span><br><span class="line">&#123;</span><br><span class="line">	CtraDlg *pDlg=(CtraDlg *)lparam;</span><br><span class="line">	<span class="keyword">if</span> (pDlg-&gt;StopServer==<span class="literal">true</span>)	</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	CSocket sockSrvr;</span><br><span class="line">	pDlg-&gt;m_Potr = PORT+pDlg-&gt;m_server;<span class="comment">//保存当前使用端口，用于关闭</span></span><br><span class="line">	<span class="keyword">int</span> createSucceed=sockSrvr.Create(pDlg-&gt;m_Potr);</span><br><span class="line">	<span class="keyword">if</span> (createSucceed == <span class="number">0</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		AfxMessageBox(<span class="string">"ListenTcpThread Create错误!"</span>+pDlg-&gt;GetError(GetLastError()));</span><br><span class="line">		<span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">int</span> listenSucceed=sockSrvr.Listen();	<span class="comment">//开始监听</span></span><br><span class="line">	<span class="keyword">if</span>(listenSucceed==<span class="number">0</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		AfxMessageBox(<span class="string">"ListenTcpThread Listen错误!"</span>+pDlg-&gt;GetError(GetLastError()));</span><br><span class="line">		<span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	CSocket recSo;</span><br><span class="line">	SOCKADDR_IN client;</span><br><span class="line">	<span class="keyword">int</span> iAddrSize=<span class="keyword">sizeof</span>(client);</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">int</span> acceptSucceed=sockSrvr.Accept(recSo,(SOCKADDR *)&amp;client,&amp;iAddrSize);	<span class="comment">//接受连接并取得对方IP</span></span><br><span class="line">	<span class="keyword">if</span> (acceptSucceed==<span class="number">0</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		AfxMessageBox(<span class="string">"ListenTcpThread Accept错误!"</span>+pDlg-&gt;GetError(GetLastError()));</span><br><span class="line">		<span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	sockSrvr.Close();</span><br><span class="line">	<span class="keyword">char</span> flag[FLAG] = &#123;<span class="number">0</span>&#125;;		</span><br><span class="line">	<span class="keyword">if</span> (recSo.Receive(flag,FLAG) != <span class="number">2</span>) </span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="number">-1</span>;	</span><br><span class="line">	&#125;</span><br><span class="line">	pDlg-&gt;m_type=flag[<span class="number">0</span>];</span><br><span class="line">	<span class="keyword">if</span> (pDlg-&gt;m_type==<span class="string">'D'</span>) </span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	pThreadLisen=::AfxBeginThread(_ListenTcpThread,pDlg);</span><br><span class="line">	pDlg-&gt;ReceiveFileMsg(recSo,client);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">UINT _UDPThread(LPVOID lparam)	<span class="comment">//UDP接受信息线程开始</span></span><br><span class="line">&#123;</span><br><span class="line">	</span><br><span class="line">	CtraDlg *pDlg=(CtraDlg *)lparam;</span><br><span class="line">	<span class="keyword">if</span> (pDlg-&gt;StopServer == <span class="literal">true</span>)	</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	CSocket sockSrvrUdp;</span><br><span class="line">	sockSrvrUdp.Create(PORT+pDlg-&gt;m_client,SOCK_DGRAM);</span><br><span class="line">	<span class="keyword">char</span> buff[<span class="number">100</span>] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line">	<span class="keyword">int</span> ret=<span class="number">0</span>;</span><br><span class="line">	CString ipStr;</span><br><span class="line">	CString msg;</span><br><span class="line">	UINT port;</span><br><span class="line">	<span class="keyword">for</span>(;;)</span><br><span class="line">	&#123;</span><br><span class="line">		</span><br><span class="line">		ret=sockSrvrUdp.ReceiveFrom(buff,<span class="number">100</span>,ipStr,port);<span class="comment">//IP和port均为返回值</span></span><br><span class="line">		</span><br><span class="line">		<span class="keyword">if</span> (buff[<span class="number">0</span>]==<span class="string">'D'</span>) </span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span> (ret==SOCKET_ERROR) </span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		msg.Format(buff);</span><br><span class="line">		pDlg-&gt;AddMsgList(ipStr,msg);</span><br><span class="line">	&#125;</span><br><span class="line">	sockSrvrUdp.Close();</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//服务器线程结束</span></span><br><span class="line"><span class="comment">/*********************************************客户端线程开始*****************************************************/</span></span><br><span class="line"><span class="comment">//发送文件线程</span></span><br><span class="line">UINT _SendFileThread(LPVOID lparam)</span><br><span class="line">&#123;</span><br><span class="line">	</span><br><span class="line">	CtraDlg *pDlg = (CtraDlg *)lparam;</span><br><span class="line">	<span class="keyword">if</span> (pDlg-&gt;StopServer == <span class="literal">true</span>)	</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	CSocket sockClient;</span><br><span class="line">	sockClient.Create();</span><br><span class="line">	CString ip;</span><br><span class="line">	pDlg-&gt;m_You_IP.GetWindowText(ip);</span><br><span class="line">	sockClient.Connect(ip, PORT+pDlg-&gt;m_client); </span><br><span class="line">	<span class="comment">//首先发送标记F为文件,2</span></span><br><span class="line">	<span class="keyword">int</span> end = <span class="number">0</span>;</span><br><span class="line">	end = sockClient.Send(<span class="string">"F"</span>, FLAG);</span><br><span class="line">	</span><br><span class="line">	<span class="comment">//发送标志是否成功</span></span><br><span class="line">	<span class="keyword">if</span> (end == SOCKET_ERROR)										</span><br><span class="line">	&#123;</span><br><span class="line">		AfxMessageBox(<span class="string">"_SendFileThread Send错误!"</span>+pDlg-&gt;GetError(GetLastError()));</span><br><span class="line">		<span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">else</span> <span class="keyword">if</span> (end != <span class="number">2</span>) </span><br><span class="line">	&#123;</span><br><span class="line">		AfxMessageBox(<span class="string">"文件头错误！"</span>);</span><br><span class="line">		<span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">///////////////////////////////////////////////////////////////////</span></span><br><span class="line">	CFile myFile;</span><br><span class="line">	FILEINFO myFileInfo;</span><br><span class="line">	<span class="keyword">if</span> (!myFile.Open(pDlg-&gt;m_fileName, CFile::modeRead | CFile::typeBinary))</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	myFileInfo.fileLength=myFile.GetLength();		<span class="comment">//得到文件大小</span></span><br><span class="line">	<span class="built_in">strcpy</span>(myFileInfo.fileName,myFile.GetFileName());<span class="comment">//得到文件名称</span></span><br><span class="line">	</span><br><span class="line">	sockClient.Send(&amp;myFileInfo,<span class="keyword">sizeof</span>(myFileInfo));	<span class="comment">//发送文件信息</span></span><br><span class="line">	</span><br><span class="line">	pDlg-&gt;m_Progress.SetRange32(<span class="number">0</span>, myFileInfo.fileLength);</span><br><span class="line">	</span><br><span class="line">	myFile.Seek(<span class="number">0</span>, CFile::begin);</span><br><span class="line">	<span class="keyword">char</span> m_buf[SIZEFILE] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line">	CString strError;</span><br><span class="line">	<span class="keyword">int</span> num = <span class="number">0</span>;</span><br><span class="line">	end = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">int</span> temp = <span class="number">0</span>;</span><br><span class="line">	pDlg-&gt;GetDlgItem(IDC_BUTTON_STOP_FILE)-&gt;EnableWindow(<span class="literal">true</span>);</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">for</span> (;;)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span> (pDlg-&gt;FileWork == <span class="literal">false</span>)</span><br><span class="line">		&#123;</span><br><span class="line">			pDlg-&gt;FileWork = <span class="literal">true</span>;</span><br><span class="line">			pDlg-&gt;GetDlgItem(IDCANCEL)-&gt;EnableWindow(<span class="literal">false</span>);</span><br><span class="line">			pDlg-&gt;GetDlgItem(IDC_BUTTON_DISCONNECT)-&gt;EnableWindow(<span class="literal">false</span>);</span><br><span class="line">		&#125;</span><br><span class="line">		num = myFile.Read(m_buf, SIZEFILE);</span><br><span class="line">		<span class="keyword">if</span> (num == <span class="number">0</span>) </span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		end = sockClient.Send(m_buf, num); </span><br><span class="line">		temp += end;</span><br><span class="line">		pDlg-&gt;m_Progress.SetPos(temp);</span><br><span class="line">		<span class="keyword">if</span> (pDlg-&gt;FileStop == <span class="literal">true</span>) </span><br><span class="line">		&#123;</span><br><span class="line">			pDlg-&gt;FileStop = <span class="literal">false</span>;</span><br><span class="line">			pDlg-&gt;FileWork = <span class="literal">false</span>;</span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		</span><br><span class="line">		<span class="keyword">if</span> (end == SOCKET_ERROR)</span><br><span class="line">		&#123;</span><br><span class="line">			AfxMessageBox(<span class="string">"_SendFileThread Send错误!"</span>+pDlg-&gt;GetError(GetLastError()));</span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">			</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	pDlg-&gt;m_Progress.SetPos(<span class="number">0</span>);</span><br><span class="line">	CString strLocalName;</span><br><span class="line">	pDlg-&gt;GetLocalHostName(strLocalName);</span><br><span class="line">	CString strLocalIP;</span><br><span class="line">	pDlg-&gt;GetIpAddress(strLocalName,strLocalIP);</span><br><span class="line">	<span class="keyword">if</span>(temp == myFileInfo.fileLength)</span><br><span class="line">	&#123;</span><br><span class="line">		pDlg-&gt;AddMsgList(strLocalName, <span class="string">"文件发送成功！"</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">	&#123;</span><br><span class="line">		pDlg-&gt;AddMsgList(strLocalName, <span class="string">"文件发送失败！"</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	myFile.Close();</span><br><span class="line">	sockClient.Close();</span><br><span class="line">	pDlg-&gt;FileWork = <span class="literal">false</span>;</span><br><span class="line">	pDlg-&gt;GetDlgItem(IDC_PROGRESS_SEND_FILE)-&gt;ShowWindow(SW_HIDE);</span><br><span class="line">	pDlg-&gt;GetDlgItem(IDC_BUTTON_STOP_FILE)-&gt;EnableWindow(<span class="literal">false</span>);</span><br><span class="line"></span><br><span class="line">	pDlg-&gt;GetDlgItem(IDCANCEL)-&gt;EnableWindow(<span class="literal">true</span>);</span><br><span class="line">	pDlg-&gt;GetDlgItem(IDC_BUTTON_DISCONNECT)-&gt;EnableWindow(<span class="literal">true</span>);</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">UINT _SendMsgThread(LPVOID lparam)	<span class="comment">//TCP发送信息线程</span></span><br><span class="line">&#123;</span><br><span class="line">	</span><br><span class="line">	CtraDlg *pDlg=(CtraDlg *)lparam;</span><br><span class="line">	<span class="keyword">if</span> (pDlg-&gt;StopServer == <span class="literal">true</span>)	</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	CSocket sockClient;</span><br><span class="line">	sockClient.Create();</span><br><span class="line">	CString ip,strError;</span><br><span class="line">	pDlg-&gt;m_You_IP.GetWindowText(ip);</span><br><span class="line">	<span class="keyword">int</span> conn = sockClient.Connect(ip, PORT+pDlg-&gt;m_client);</span><br><span class="line">	<span class="keyword">if</span> (conn == <span class="number">0</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		AfxMessageBox(<span class="string">"_SendMsgThread Connect错误!"</span>+pDlg-&gt;GetError(GetLastError()));</span><br><span class="line">		sockClient.ShutDown(<span class="number">2</span>);</span><br><span class="line">		sockClient.Close();</span><br><span class="line">		AfxEndThread(<span class="number">1L</span>);</span><br><span class="line">		<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">		</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//首先发送标记M为信息,2</span></span><br><span class="line">	<span class="keyword">int</span> end = <span class="number">0</span>;</span><br><span class="line">	end = sockClient.Send(<span class="string">"M"</span>,FLAG); </span><br><span class="line">	<span class="keyword">if</span>(end == SOCKET_ERROR)</span><br><span class="line">	&#123;</span><br><span class="line">		AfxMessageBox(<span class="string">"_SendMsgThread Send错误!"</span>+pDlg-&gt;GetError(GetLastError()));</span><br><span class="line">		<span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span> <span class="keyword">if</span>(end != <span class="number">2</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		AfxMessageBox(<span class="string">"消息头错误！"</span>);</span><br><span class="line">		<span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	CString strMsg = pDlg-&gt;m_MsgSend;</span><br><span class="line">	end = sockClient.Send(strMsg,strMsg.GetLength()); </span><br><span class="line">	<span class="keyword">if</span> (end == SOCKET_ERROR)</span><br><span class="line">	&#123;</span><br><span class="line">		AfxMessageBox(<span class="string">"_SendMsgThread Send错误!"</span>+pDlg-&gt;GetError(GetLastError()));</span><br><span class="line">		<span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	CString strLocalName;</span><br><span class="line">	pDlg-&gt;GetLocalHostName(strLocalName);</span><br><span class="line">	CString strLocalIP;</span><br><span class="line">	pDlg-&gt;GetIpAddress(strLocalName,strLocalIP);</span><br><span class="line">	pDlg-&gt;AddMsgList(strLocalName,strMsg);</span><br><span class="line">	<span class="keyword">int</span> i=<span class="number">0</span>;</span><br><span class="line">	sockClient.Close();</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">///////////////////////////////////////////////////////////////////</span></span><br><span class="line">UINT _SendMsgUdpThread(LPVOID lparam)	<span class="comment">//UDP发送信息</span></span><br><span class="line">&#123;</span><br><span class="line">	</span><br><span class="line">	CtraDlg *pDlg = (CtraDlg *)lparam;</span><br><span class="line">	<span class="keyword">if</span> (pDlg-&gt;StopServer == <span class="literal">true</span>)	</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	CSocket sockClientUdp;</span><br><span class="line">	pDlg-&gt;m_type = PORT+pDlg-&gt;m_client+<span class="number">10</span>;</span><br><span class="line">	sockClientUdp.Create(pDlg-&gt;m_type, SOCK_DGRAM);</span><br><span class="line">	CString strMsg = pDlg-&gt;m_MsgSend;</span><br><span class="line">	<span class="keyword">int</span> ret = <span class="number">0</span>;</span><br><span class="line">	CString ipStr;</span><br><span class="line">	pDlg-&gt;m_You_IP.GetWindowText(ipStr);</span><br><span class="line">	UINT port = PORT+pDlg-&gt;m_server;</span><br><span class="line">	ret=sockClientUdp.SendTo(strMsg, strMsg.GetLength(), port, ipStr);</span><br><span class="line">	<span class="keyword">if</span> (ret == SOCKET_ERROR) </span><br><span class="line">	&#123;</span><br><span class="line">		DWORD error = GetLastError();</span><br><span class="line">		</span><br><span class="line">	&#125;</span><br><span class="line">	CString strLocalName;</span><br><span class="line">	pDlg-&gt;GetLocalHostName(strLocalName);</span><br><span class="line">	CString strLocalIP;</span><br><span class="line">	pDlg-&gt;GetIpAddress(strLocalName, strLocalIP);</span><br><span class="line">	pDlg-&gt;AddMsgList(strLocalName, strMsg);</span><br><span class="line">	sockClientUdp.Close();</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">	</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/************************************客户端线程结束**********************************/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*************************************函数****************************************/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> CtraDlg::ReceiveFileMsg(CSocket &amp;recSo,SOCKADDR_IN &amp;client)<span class="comment">//接受函数</span></span><br><span class="line">&#123;</span><br><span class="line">		<span class="keyword">if</span> (m_type == <span class="string">'F'</span>)			<span class="comment">//文件</span></span><br><span class="line">	&#123;</span><br><span class="line">		SaveYouFile(recSo, client);</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">else</span> <span class="keyword">if</span> (m_type == <span class="string">'M'</span>)	<span class="comment">//信息</span></span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">char</span> buff[<span class="number">100</span>] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line">		CString msg;</span><br><span class="line">		<span class="keyword">int</span> ret = <span class="number">0</span>;</span><br><span class="line">		<span class="keyword">for</span> (;;)</span><br><span class="line">		&#123;</span><br><span class="line">			ret = recSo.Receive(buff,<span class="number">100</span>);</span><br><span class="line">			<span class="keyword">if</span> (ret == <span class="number">0</span>)</span><br><span class="line">			&#123;</span><br><span class="line">				<span class="keyword">break</span>;</span><br><span class="line">			&#125;</span><br><span class="line">			msg += buff;</span><br><span class="line">		&#125;</span><br><span class="line">		CString strOut,strIn;</span><br><span class="line">		m_You_IP.GetWindowText(strIn);</span><br><span class="line">		GetNamebyAddress(strIn,strOut);</span><br><span class="line">		CString youName;</span><br><span class="line">	<span class="comment">//	youName.Format(inet_ntoa(client.sin_addr));</span></span><br><span class="line">	<span class="comment">//	CString str = youName+"&lt;-"+strOut;</span></span><br><span class="line">		CString str = strOut;</span><br><span class="line">		AddMsgList(str, msg);</span><br><span class="line">	&#125;</span><br><span class="line">	recSo.Close();	</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> CtraDlg::SaveYouFile(CSocket &amp;recSo, SOCKADDR_IN &amp;client)<span class="comment">//接受文件</span></span><br><span class="line">&#123;</span><br><span class="line">	CString fname;</span><br><span class="line">	<span class="function">CFileDialog <span class="title">dlg</span><span class="params">(<span class="literal">false</span>)</span></span>;	<span class="comment">//另存文件</span></span><br><span class="line">	FILEINFO myFileInfo;</span><br><span class="line">	recSo.Receive(&amp;myFileInfo, <span class="keyword">sizeof</span>(FILEINFO));</span><br><span class="line">	<span class="keyword">int</span> fileLength=myFileInfo.fileLength;</span><br><span class="line">	CString strfileIp,strfileName,strfileLength;</span><br><span class="line">	strfileIp.Format(inet_ntoa(client.sin_addr));</span><br><span class="line">	strfileName.Format(myFileInfo.fileName);</span><br><span class="line">	strfileLength.Format(<span class="string">"%f"</span>, myFileInfo.fileLength/<span class="number">1024.0</span>);</span><br><span class="line">	CString title = <span class="string">"文件"</span>+strfileName + <span class="string">" 大小"</span> + strfileLength + <span class="string">"KB "</span> + <span class="string">"来自"</span> + strfileIp + <span class="string">" 是否接受？"</span>;</span><br><span class="line">	dlg.m_ofn.lpstrTitle = title;<span class="comment">//标题条</span></span><br><span class="line">	<span class="keyword">char</span> fileme[<span class="number">500</span>] = &#123;<span class="number">0</span>&#125;;<span class="comment">//必须足够大小</span></span><br><span class="line">	<span class="built_in">strcpy</span>(fileme, strfileName);</span><br><span class="line">	dlg.m_ofn.lpstrFile = fileme;	<span class="comment">//文件名称</span></span><br><span class="line">	<span class="keyword">if</span> (dlg.DoModal() == IDOK)</span><br><span class="line">	&#123;</span><br><span class="line">		fname = dlg.GetPathName();	<span class="comment">//得到文件名名称、路径</span></span><br><span class="line">		GetDlgItem(IDC_PROGRESS_SEND_FILE)-&gt;ShowWindow(SW_SHOW);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">	&#123;</span><br><span class="line">		GetDlgItem(IDC_PROGRESS_SEND_FILE)-&gt;ShowWindow(SW_HIDE);</span><br><span class="line">		GetDlgItem(IDC_BUTTON_STOP_FILE)-&gt;EnableWindow(<span class="literal">false</span>);</span><br><span class="line">		</span><br><span class="line">		GetDlgItem(IDC_BUTTON_DISCONNECT)-&gt;EnableWindow(<span class="literal">true</span>);</span><br><span class="line">		GetDlgItem(IDCANCEL)-&gt;EnableWindow(<span class="literal">true</span>);</span><br><span class="line">		</span><br><span class="line">		recSo.Close();	</span><br><span class="line">		<span class="keyword">return</span> <span class="number">0</span>;	</span><br><span class="line">		</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">char</span> buf[SIZEFILE] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line">	<span class="function">CFile <span class="title">f</span><span class="params">(fname, CFile::modeCreate|CFile::modeWrite)</span></span>;	<span class="comment">//存文件</span></span><br><span class="line">	</span><br><span class="line">	m_Progress.SetRange32(<span class="number">0</span>,fileLength);</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">int</span> n = <span class="number">0</span>;	<span class="comment">//接受的字节数 0表示结束</span></span><br><span class="line">	<span class="keyword">int</span> temp = <span class="number">0</span>;</span><br><span class="line">	GetDlgItem(IDC_BUTTON_STOP_FILE)-&gt;EnableWindow(<span class="literal">true</span>);</span><br><span class="line">	</span><br><span class="line">	GetDlgItem(IDCANCEL)-&gt;EnableWindow(<span class="literal">false</span>);</span><br><span class="line">	GetDlgItem(IDC_BUTTON_DISCONNECT)-&gt;EnableWindow(<span class="literal">false</span>);</span><br><span class="line">	</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">for</span> (;;)</span><br><span class="line">	&#123;</span><br><span class="line">		n = recSo.Receive(buf,SIZEFILE);	<span class="comment">//接受</span></span><br><span class="line">		<span class="keyword">if</span> (n == <span class="number">0</span>)		<span class="comment">//0表示结束</span></span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">break</span>;<span class="comment">//接受完毕</span></span><br><span class="line">		&#125;	</span><br><span class="line">		f.Write(buf,n);</span><br><span class="line">		temp += n;</span><br><span class="line">		m_Progress.SetPos(temp);</span><br><span class="line">		<span class="keyword">if</span> (FileWork == <span class="literal">false</span>) </span><br><span class="line">		&#123;</span><br><span class="line">			FileWork = <span class="literal">true</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span> (FileStop == <span class="literal">true</span>) </span><br><span class="line">		&#123;</span><br><span class="line">			FileStop = <span class="literal">false</span>;</span><br><span class="line">			FileWork = <span class="literal">false</span>;</span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		</span><br><span class="line">	&#125;</span><br><span class="line">	f.Close();</span><br><span class="line">	m_Progress.SetPos(<span class="number">0</span>);</span><br><span class="line">	<span class="keyword">if</span> (temp == fileLength)</span><br><span class="line">	&#123;</span><br><span class="line">		AddMsgList(inet_ntoa(client.sin_addr),<span class="string">"文件接收成功！"</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">	&#123;</span><br><span class="line">		AddMsgList(inet_ntoa(client.sin_addr),<span class="string">"文件接收失败！"</span>);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	FileWork = <span class="literal">false</span>;</span><br><span class="line">	GetDlgItem(IDC_PROGRESS_SEND_FILE)-&gt;ShowWindow(SW_HIDE);</span><br><span class="line">	GetDlgItem(IDC_BUTTON_STOP_FILE)-&gt;EnableWindow(<span class="literal">false</span>);</span><br><span class="line">	</span><br><span class="line">	GetDlgItem(IDCANCEL)-&gt;EnableWindow(<span class="literal">true</span>);</span><br><span class="line">	GetDlgItem(IDC_BUTTON_DISCONNECT)-&gt;EnableWindow(<span class="literal">true</span>);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*********************************************按钮*****************************************/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> CtraDlg::OnButtonConnect() <span class="comment">//开始连接</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="comment">// <span class="doctag">TODO:</span> Add your control notification handler code here</span></span><br><span class="line">	CString str;</span><br><span class="line">	m_You_IP.GetWindowText(str);</span><br><span class="line">	CString strOut,strIn;</span><br><span class="line">	m_You_IP.GetWindowText(strIn);</span><br><span class="line">	<span class="keyword">if</span>(GetNamebyAddress(strIn,strOut) == <span class="number">-1</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		GetDlgItem(IDC_BUTTON_CONNECT)-&gt;EnableWindow(<span class="literal">true</span>);<span class="comment">//连接不可用</span></span><br><span class="line">		<span class="keyword">return</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//m_MsgSend = "你好" + strOut + "!";</span></span><br><span class="line">	m_MsgSend =<span class="string">" "</span>;</span><br><span class="line">	UpdateData(<span class="literal">false</span>);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">if</span> (m_nSockType == SOCK_TCP)</span><br><span class="line">	&#123;</span><br><span class="line">		</span><br><span class="line">		pThreadLisen=::AfxBeginThread(_ListenTcpThread,<span class="keyword">this</span>);	<span class="comment">//开始TCP线程</span></span><br><span class="line">		GetDlgItem(IDC_BUTTON_SEND_MSG)-&gt;EnableWindow(<span class="literal">true</span>);<span class="comment">//发送消息可用</span></span><br><span class="line">		GetDlgItem(IDC_BUTTON_SEND_FILE)-&gt;EnableWindow(<span class="literal">true</span>);<span class="comment">//文件可用</span></span><br><span class="line">		</span><br><span class="line">		<span class="comment">//显示上线</span></span><br><span class="line">		CString strLocalName;</span><br><span class="line">		GetLocalHostName(strLocalName);</span><br><span class="line">		AddMsgList(strLocalName, <span class="string">"上线！"</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">	&#123;</span><br><span class="line">		pThreadLisen=::AfxBeginThread(_UDPThread,<span class="keyword">this</span>);	<span class="comment">//开始UDP线程</span></span><br><span class="line">		GetDlgItem(IDC_BUTTON_SEND_MSG)-&gt;EnableWindow(<span class="literal">true</span>);<span class="comment">//发送可用</span></span><br><span class="line">		GetDlgItem(IDC_BUTTON_SEND_FILE)-&gt;EnableWindow(<span class="literal">false</span>);<span class="comment">//文件不可用</span></span><br><span class="line"></span><br><span class="line">		<span class="comment">//显示上线</span></span><br><span class="line">		CString strLocalName;</span><br><span class="line">		GetLocalHostName(strLocalName);</span><br><span class="line">		AddMsgList(strLocalName, <span class="string">"上线！"</span>);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	GetDlgItem(IDC_RADIO_TCP)-&gt;EnableWindow(<span class="literal">false</span>);<span class="comment">//单选不可用</span></span><br><span class="line">	GetDlgItem(IDC_RADIO_UDP)-&gt;EnableWindow(<span class="literal">false</span>);<span class="comment">//单选不可用</span></span><br><span class="line">	GetDlgItem(IDC_BUTTON_DISCONNECT)-&gt;EnableWindow(<span class="literal">true</span>);<span class="comment">//断开可用</span></span><br><span class="line">	GetDlgItem(IDC_BUTTON_CONNECT)-&gt;EnableWindow(<span class="literal">false</span>);<span class="comment">//连接不可用</span></span><br><span class="line">	GetDlgItem(IDC_RADIO_SERVER)-&gt;EnableWindow(<span class="literal">false</span>);</span><br><span class="line">	GetDlgItem(IDC_RADIO_CLIENT)-&gt;EnableWindow(<span class="literal">false</span>);</span><br><span class="line">	GetDlgItem(IDC_RADIO_BOTH)-&gt;EnableWindow(<span class="literal">false</span>);</span><br><span class="line">	GetDlgItem(IDC_IPADDRESS)-&gt;EnableWindow(<span class="literal">false</span>);</span><br><span class="line"></span><br><span class="line">	</span><br><span class="line">	</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> CtraDlg::OnButtonDisconnect() <span class="comment">//关闭</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="comment">// <span class="doctag">TODO:</span> Add your control notification handler code here</span></span><br><span class="line">	GetDlgItem(IDC_BUTTON_CONNECT)-&gt;EnableWindow(<span class="literal">true</span>);</span><br><span class="line">	GetDlgItem(IDC_RADIO_TCP)-&gt;EnableWindow(<span class="literal">true</span>);</span><br><span class="line">	((CButton*)GetDlgItem(IDC_RADIO_UDP))-&gt;EnableWindow(<span class="literal">true</span>);</span><br><span class="line">	GetDlgItem(IDC_BUTTON_DISCONNECT)-&gt;EnableWindow(<span class="literal">false</span>);</span><br><span class="line">	GetDlgItem(IDC_BUTTON_SEND_MSG)-&gt;EnableWindow(<span class="literal">false</span>);</span><br><span class="line">	GetDlgItem(IDC_BUTTON_SEND_FILE)-&gt;EnableWindow(<span class="literal">false</span>);</span><br><span class="line">	m_AddMsgLIst.ResetContent();</span><br><span class="line">	GetDlgItem(IDC_BUTTON_CLEAR)-&gt;EnableWindow(<span class="literal">false</span>);</span><br><span class="line">	((CButton*)GetDlgItem(IDC_RADIO_SERVER))-&gt;EnableWindow(<span class="literal">true</span>);</span><br><span class="line">	((CButton*)GetDlgItem(IDC_RADIO_CLIENT))-&gt;EnableWindow(<span class="literal">true</span>);</span><br><span class="line">	((CButton*)GetDlgItem(IDC_RADIO_BOTH))-&gt;EnableWindow(<span class="literal">true</span>);</span><br><span class="line">	GetDlgItem(IDC_IPADDRESS)-&gt;EnableWindow(<span class="literal">true</span>);</span><br><span class="line">	m_AddMsgLIst.SendMessage(LB_SETHORIZONTALEXTENT,<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**********************************************发送结束***********************************************/</span></span><br><span class="line">	<span class="keyword">if</span>(m_nSockType == SOCK_TCP)</span><br><span class="line">	&#123;</span><br><span class="line">		DWORD   dwStatus;</span><br><span class="line">		<span class="keyword">if</span> (pThreadLisen != <span class="literal">NULL</span>)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">if</span>(::GetExitCodeThread(pThreadLisen-&gt;m_hThread, &amp;dwStatus)==<span class="number">0</span>)</span><br><span class="line">			&#123;</span><br><span class="line">				<span class="keyword">int</span> errror = GetLastError();</span><br><span class="line">				<span class="keyword">return</span>;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">if</span> (dwStatus == STILL_ACTIVE)</span><br><span class="line">			&#123;</span><br><span class="line">				CSocket sockClient;</span><br><span class="line">				sockClient.Create();</span><br><span class="line">				CString ip,strError;</span><br><span class="line">				ip=<span class="string">"127.0.0.1"</span>;</span><br><span class="line">				<span class="keyword">int</span> conn = sockClient.Connect(ip, m_Potr);</span><br><span class="line">				<span class="keyword">if</span> (conn == <span class="number">0</span>)	</span><br><span class="line">				&#123;</span><br><span class="line">					AfxMessageBox(<span class="string">"关闭错误!"</span>+GetError(GetLastError()));</span><br><span class="line">					sockClient.ShutDown(<span class="number">2</span>);</span><br><span class="line">					sockClient.Close();</span><br><span class="line">					<span class="keyword">return</span>;</span><br><span class="line">					</span><br><span class="line">				&#125;</span><br><span class="line">				sockClient.Send(<span class="string">"D"</span>,FLAG); <span class="comment">//结束</span></span><br><span class="line">				</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">else</span></span><br><span class="line">			&#123;</span><br><span class="line">				<span class="keyword">delete</span> pThreadLisen;</span><br><span class="line">				pThreadLisen = <span class="literal">NULL</span>;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">	&#123;</span><br><span class="line">		CSocket sockClientUdp;</span><br><span class="line">		<span class="keyword">int</span> succeedCreate = sockClientUdp.Create(m_type, SOCK_DGRAM);</span><br><span class="line">		CString strMsg = <span class="string">"D"</span>;</span><br><span class="line">		<span class="keyword">int</span> ret = <span class="number">0</span>;</span><br><span class="line">		CString ipStr;</span><br><span class="line">		m_You_IP.GetWindowText(ipStr);</span><br><span class="line">		UINT port = PORT+m_server;</span><br><span class="line">		ret = sockClientUdp.SendTo(strMsg, <span class="number">1</span>, port, ipStr);</span><br><span class="line">		</span><br><span class="line">	&#125;</span><br><span class="line">		<span class="comment">//显示下线</span></span><br><span class="line">		CString strLocalName;</span><br><span class="line">		GetLocalHostName(strLocalName);</span><br><span class="line">		AddMsgList(strLocalName, <span class="string">"下线！"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> CtraDlg::OnButtonSendMsg() <span class="comment">//发送消息</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="comment">// <span class="doctag">TODO:</span> Add your control notification handler code here</span></span><br><span class="line">	UpdateData(<span class="literal">true</span>);</span><br><span class="line">	<span class="keyword">if</span> (m_MsgSend.GetLength() == <span class="number">0</span>) </span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">return</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span> (m_nSockType == SOCK_TCP)</span><br><span class="line">	&#123;</span><br><span class="line">		::AfxBeginThread(_SendMsgThread, <span class="keyword">this</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">	&#123;	</span><br><span class="line">		::AfxBeginThread(_SendMsgUdpThread, <span class="keyword">this</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	SetDlgItemText(IDC_EDIT_SENDMSG, <span class="string">""</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> CtraDlg::OnButtonSendFile() <span class="comment">//发送文件</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="comment">// <span class="doctag">TODO:</span> Add your control notification handler code here</span></span><br><span class="line">	<span class="function">CFileDialog <span class="title">dlg</span><span class="params">(<span class="literal">true</span>)</span></span>;</span><br><span class="line">	CString ip;</span><br><span class="line">	m_You_IP.GetWindowText(ip);</span><br><span class="line">	CString title = <span class="string">"文件发往"</span> + ip + <span class="string">"请选择"</span>;</span><br><span class="line">	dlg.m_ofn.lpstrTitle = title;<span class="comment">//标题条</span></span><br><span class="line">	<span class="keyword">if</span> (dlg.DoModal() == IDOK)</span><br><span class="line">	&#123;</span><br><span class="line">		m_fileName = dlg.GetPathName();</span><br><span class="line">		GetDlgItem(IDC_PROGRESS_SEND_FILE)-&gt;ShowWindow(SW_SHOW);</span><br><span class="line">		pThreadSendFile=::AfxBeginThread(_SendFileThread, <span class="keyword">this</span>);	<span class="comment">//开始传送文件线程</span></span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> CtraDlg::AddMsgList(CString IP,CString str) <span class="comment">//添加信息于LISTBOX 控件中</span></span><br><span class="line">&#123;</span><br><span class="line">	SYSTEMTIME tm;</span><br><span class="line">	GetLocalTime(&amp;tm);</span><br><span class="line">	CString time;</span><br><span class="line">	time.Format(_T(<span class="string">" %d:%02.2d "</span>), tm.wHour, tm.wMinute);</span><br><span class="line">	m_AddMsgLIst.AddString(IP+<span class="string">"("</span>+time+<span class="string">")"</span>+str);</span><br><span class="line">	<span class="keyword">int</span> numList = m_AddMsgLIst.GetCount()<span class="number">-1</span>;</span><br><span class="line">	GetDlgItem(IDC_BUTTON_CLEAR)-&gt;EnableWindow(<span class="literal">true</span>);</span><br><span class="line">	m_AddMsgLIst.SetTopIndex(numList);</span><br><span class="line">	m_AddMsgLIst.SetCurSel(numList);</span><br><span class="line">	<span class="comment">//水平滚动</span></span><br><span class="line">	<span class="keyword">int</span> max_width = <span class="number">0</span>;</span><br><span class="line">	CSize sz;</span><br><span class="line">	<span class="function">CClientDC <span class="title">dc</span><span class="params">(<span class="keyword">this</span>)</span></span>;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;m_AddMsgLIst.GetCount(); i++)</span><br><span class="line">	&#123;</span><br><span class="line">		m_AddMsgLIst.GetText(i,str);</span><br><span class="line">		sz = dc.GetTextExtent(str);</span><br><span class="line">		<span class="keyword">if</span> (max_width &lt; sz.cx)</span><br><span class="line">		&#123;</span><br><span class="line">			max_width = sz.cx;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	m_AddMsgLIst.SendMessage(LB_SETHORIZONTALEXTENT,max_width,<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> CtraDlg::OnButtonClear() <span class="comment">//清除聊天内容</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="comment">// <span class="doctag">TODO:</span> Add your control notification handler code here</span></span><br><span class="line">	m_AddMsgLIst.ResetContent();</span><br><span class="line">	GetDlgItem(IDC_BUTTON_CLEAR)-&gt;EnableWindow(<span class="literal">false</span>);</span><br><span class="line">	m_AddMsgLIst.SendMessage(LB_SETHORIZONTALEXTENT,<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> CtraDlg::OnRadioTcp()		<span class="comment">//选择TCP模式</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="comment">// <span class="doctag">TODO:</span> Add your control notification handler code here</span></span><br><span class="line">	m_nSockType = SOCK_TCP;</span><br><span class="line">	CString text;</span><br><span class="line">	<span class="keyword">if</span> (m_WorkType== <span class="number">0</span>) </span><br><span class="line">	&#123;</span><br><span class="line">		text = <span class="string">"服务器"</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span> <span class="keyword">if</span> (m_WorkType == <span class="number">1</span>) </span><br><span class="line">	&#123;</span><br><span class="line">		text = <span class="string">"客户端"</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span> </span><br><span class="line">	&#123;</span><br><span class="line">		text = <span class="string">"小工具"</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	SetWindowText(text + <span class="string">"TCP方式"</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> CtraDlg::OnRadioUdp()		<span class="comment">//选择UDP模式</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="comment">// <span class="doctag">TODO:</span> Add your control notification handler code here</span></span><br><span class="line">	m_nSockType = SOCK_UDP;</span><br><span class="line">	CString text;</span><br><span class="line">	<span class="keyword">if</span> (m_WorkType == <span class="number">0</span>) </span><br><span class="line">	&#123;</span><br><span class="line">		text = <span class="string">"服务器"</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span> <span class="keyword">if</span> (m_WorkType == <span class="number">1</span>) </span><br><span class="line">	&#123;</span><br><span class="line">		text = <span class="string">"客户端"</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span> </span><br><span class="line">	&#123;</span><br><span class="line">		text = <span class="string">"小工具"</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	SetWindowText(text + <span class="string">"UDP方式"</span>);</span><br><span class="line"></span><br><span class="line">	</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">CString CtraDlg::GetError(DWORD error)	<span class="comment">//返回错误信息</span></span><br><span class="line">&#123;</span><br><span class="line">	CString strError;</span><br><span class="line">	<span class="keyword">switch</span>(error)</span><br><span class="line">	&#123;</span><br><span class="line">	<span class="keyword">case</span> WSANOTINITIALISED:</span><br><span class="line">		strError = <span class="string">"初始化错误"</span>;</span><br><span class="line">		<span class="keyword">break</span>;</span><br><span class="line">	<span class="keyword">case</span> WSAENOTCONN:</span><br><span class="line">		strError = <span class="string">"对方没有启动"</span>;</span><br><span class="line">		<span class="keyword">break</span>;</span><br><span class="line">	<span class="keyword">case</span> WSAEWOULDBLOCK :</span><br><span class="line">		strError = <span class="string">"对方已经关闭"</span>;</span><br><span class="line">		<span class="keyword">break</span>;</span><br><span class="line">	<span class="keyword">case</span> WSAECONNREFUSED:</span><br><span class="line">		strError = <span class="string">"连接的尝试被拒绝"</span>;</span><br><span class="line">		<span class="keyword">break</span>;</span><br><span class="line">	<span class="keyword">case</span> WSAENOTSOCK:</span><br><span class="line">		strError = <span class="string">"在一个非套接字上尝试了一个操作"</span>;</span><br><span class="line">		<span class="keyword">break</span>;</span><br><span class="line">	<span class="keyword">case</span> WSAEADDRINUSE:</span><br><span class="line">		strError = <span class="string">"特定的地址已在使用中"</span>;</span><br><span class="line">		<span class="keyword">break</span>;</span><br><span class="line">	<span class="keyword">case</span> WSAECONNRESET:</span><br><span class="line">		strError = <span class="string">"与主机的连接被关闭"</span>;</span><br><span class="line">		<span class="keyword">break</span>;</span><br><span class="line">	<span class="keyword">default</span>:</span><br><span class="line">		strError = <span class="string">"一般错误"</span>;	</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> strError;</span><br><span class="line">	</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> CtraDlg::GetLocalHostName(CString &amp;sHostName)	<span class="comment">//获得本地计算机名称</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">char</span> szHostName[<span class="number">256</span>];</span><br><span class="line">	<span class="keyword">int</span> nRetCode;</span><br><span class="line">	nRetCode = gethostname(szHostName,<span class="keyword">sizeof</span>(szHostName));</span><br><span class="line">	<span class="keyword">if</span>(nRetCode!=<span class="number">0</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="comment">//产生错误</span></span><br><span class="line">		sHostName = _T(<span class="string">"获取不到主机名！"</span>);</span><br><span class="line">		<span class="keyword">return</span> GetLastError();</span><br><span class="line">	&#125;</span><br><span class="line">	sHostName = szHostName;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> CtraDlg::GetIpAddress(<span class="keyword">const</span> CString &amp;sHostName, CString &amp;sIpAddress)<span class="comment">//获得本地IP</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="class"><span class="keyword">struct</span> <span class="title">hostent</span> <span class="title">FAR</span> * <span class="title">lpHostEnt</span>=<span class="title">gethostbyname</span>(<span class="title">sHostName</span>);</span></span><br><span class="line">	<span class="keyword">if</span>(lpHostEnt==<span class="literal">NULL</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="comment">//产生错误</span></span><br><span class="line">		sIpAddress = _T(<span class="string">""</span>);</span><br><span class="line">		<span class="keyword">return</span> GetLastError();</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//获取IP</span></span><br><span class="line">	LPSTR lpAddr = lpHostEnt-&gt;h_addr_list[<span class="number">0</span>];</span><br><span class="line">	<span class="keyword">if</span>(lpAddr)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="class"><span class="keyword">struct</span> <span class="title">in_addr</span> <span class="title">inAddr</span>;</span></span><br><span class="line">		memmove(&amp;inAddr, lpAddr, <span class="number">4</span>);</span><br><span class="line">		<span class="comment">//转换为标准格式</span></span><br><span class="line">		sIpAddress = inet_ntoa(inAddr);</span><br><span class="line">		<span class="keyword">if</span> (sIpAddress.IsEmpty())</span><br><span class="line">		&#123;</span><br><span class="line">			sIpAddress = _T(<span class="string">"获取不到IP！"</span>);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> CtraDlg::GetNamebyAddress(<span class="keyword">const</span> CString &amp;IpAddress,CString &amp;sYouName)<span class="comment">//获得对方计算机名称</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">unsigned</span> <span class="keyword">long</span> addr;</span><br><span class="line">	addr = inet_addr(IpAddress);</span><br><span class="line">	<span class="class"><span class="keyword">struct</span> <span class="title">hostent</span> <span class="title">FAR</span> * <span class="title">lpHostEnt</span> = <span class="title">gethostbyaddr</span>((<span class="title">char</span> *)&amp;<span class="title">addr</span>, 4, <span class="title">AF_INET</span>);</span></span><br><span class="line">	<span class="keyword">if</span> (lpHostEnt == <span class="literal">NULL</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="comment">//产生错误</span></span><br><span class="line">		sYouName = _T(<span class="string">""</span>);</span><br><span class="line"></span><br><span class="line">		AfxMessageBox(<span class="string">"无法连接！"</span>);<span class="comment">//应该取得其错误</span></span><br><span class="line">		<span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	CString name = lpHostEnt-&gt;h_name;</span><br><span class="line">	sYouName = name;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> CtraDlg::OnRadioServer() </span><br><span class="line">&#123;</span><br><span class="line">	<span class="comment">// <span class="doctag">TODO:</span> Add your control notification handler code here</span></span><br><span class="line">	CString text;</span><br><span class="line">	<span class="keyword">if</span> (m_nSockType == SOCK_TCP) </span><br><span class="line">	&#123;</span><br><span class="line">		text = <span class="string">"TCP方式"</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span> </span><br><span class="line">	&#123;</span><br><span class="line">		text = <span class="string">"UDP方式"</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	m_server = <span class="number">1</span>;</span><br><span class="line">	m_client = <span class="number">2</span>;</span><br><span class="line">	m_WorkType = <span class="number">0</span>;</span><br><span class="line">	SetWindowText(<span class="string">"服务器 "</span> + text);</span><br><span class="line">	GetDlgItem(IDC_BUTTON_CONNECT)-&gt;SetWindowText(<span class="string">"启动服务"</span>);</span><br><span class="line">	GetDlgItem(IDC_BUTTON_DISCONNECT)-&gt;SetWindowText(<span class="string">"关闭服务"</span>);</span><br><span class="line">	</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> CtraDlg::OnRadioClient() </span><br><span class="line">&#123;</span><br><span class="line">	<span class="comment">// <span class="doctag">TODO:</span> Add your control notification handler code here</span></span><br><span class="line">	CString text;</span><br><span class="line">	<span class="keyword">if</span> (m_nSockType == SOCK_TCP) </span><br><span class="line">	&#123;</span><br><span class="line">		text = <span class="string">"TCP方式"</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span> </span><br><span class="line">	&#123;</span><br><span class="line">		text = <span class="string">"UDP方式"</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	m_server = <span class="number">2</span>;</span><br><span class="line">	m_client = <span class="number">1</span>;</span><br><span class="line">	m_WorkType = <span class="number">1</span>;</span><br><span class="line">	SetWindowText(<span class="string">"客户端 "</span> + text);</span><br><span class="line">	GetDlgItem(IDC_BUTTON_CONNECT)-&gt;SetWindowText(<span class="string">"连接"</span>);</span><br><span class="line">	GetDlgItem(IDC_BUTTON_DISCONNECT)-&gt;SetWindowText(<span class="string">"断开连接"</span>);</span><br><span class="line">	</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> CtraDlg::OnRadioBoth() </span><br><span class="line">&#123;</span><br><span class="line">	<span class="comment">// <span class="doctag">TODO:</span> Add your control notification handler code here</span></span><br><span class="line">	CString text;</span><br><span class="line">	<span class="keyword">if</span> (m_nSockType == SOCK_TCP) </span><br><span class="line">	&#123;</span><br><span class="line">		text = <span class="string">"TCP方式"</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span> </span><br><span class="line">	&#123;</span><br><span class="line">		text = <span class="string">"UDP方式"</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	m_server = m_client = <span class="number">0</span>;</span><br><span class="line">	m_WorkType = <span class="number">2</span>;</span><br><span class="line">	SetWindowText(text);</span><br><span class="line">	GetDlgItem(IDC_BUTTON_CONNECT)-&gt;SetWindowText(<span class="string">"启动"</span>);</span><br><span class="line">	GetDlgItem(IDC_BUTTON_DISCONNECT)-&gt;SetWindowText(<span class="string">"关闭"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> CtraDlg::OnButtonStopFile() </span><br><span class="line">&#123;</span><br><span class="line">	<span class="comment">// <span class="doctag">TODO:</span> Add your control notification handler code here</span></span><br><span class="line">	FileStop = <span class="literal">true</span>;</span><br><span class="line">	FileWork = <span class="literal">false</span>;</span><br><span class="line">	GetDlgItem(IDCANCEL)-&gt;EnableWindow(<span class="literal">true</span>);</span><br><span class="line">	GetDlgItem(IDC_BUTTON_DISCONNECT)-&gt;EnableWindow(<span class="literal">true</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">LRESULT CtraDlg::OnKSend(WPARAM wParam,LPARAM lParam)</span><br><span class="line">&#123;</span><br><span class="line">	OnButtonSendMsg();</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">BOOL CtraDlg::PreTranslateMessage(MSG* pMsg) </span><br><span class="line">&#123;</span><br><span class="line">	<span class="comment">// <span class="doctag">TODO:</span> Add your specialized code here and/or call the base class</span></span><br><span class="line">	<span class="keyword">if</span> (pMsg-&gt;message == WM_KEYDOWN &amp;&amp; pMsg-&gt;wParam == VK_RETURN)</span><br><span class="line">	&#123;	</span><br><span class="line">		<span class="keyword">if</span> (GetFocus()-&gt;GetDlgCtrlID()==IDC_EDIT_SENDMSG || GetFocus()-&gt;GetDlgCtrlID()==IDC_BUTTON_SEND_MSG)</span><br><span class="line">		&#123;</span><br><span class="line">			AfxGetMainWnd()-&gt;SendMessage(WM_KSEND);</span><br><span class="line">			<span class="keyword">return</span> TRUE;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span> CDialog::PreTranslateMessage(pMsg);</span><br><span class="line"></span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// traDlg.h : header file</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">if</span> !defined(AFX_traDLG_H__F42FE5AC_E2CC_44AB_9D0A_748191BC989F__INCLUDED_)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> AFX_traDLG_H__F42FE5AC_E2CC_44AB_9D0A_748191BC989F__INCLUDED_</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">if</span> _MSC_VER &gt; 1000</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> once</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span> <span class="comment">// _MSC_VER &gt; 1000</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//#include "ColorListBox.h"</span></span><br><span class="line"><span class="comment">/////////////////////////////////////////////////////////////////////////////</span></span><br><span class="line"><span class="comment">// CtraDlg dialog</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CtraDlg</span> :</span> <span class="keyword">public</span> CDialog</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">// Construction</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">	CtraDlg(CWnd* pParent = <span class="literal">NULL</span>);	<span class="comment">// standard constructor</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Dialog Data</span></span><br><span class="line">	<span class="comment">//&#123;&#123;AFX_DATA(CtraDlg)</span></span><br><span class="line">	<span class="keyword">enum</span> &#123; IDD = IDD_tra_DIALOG &#125;;</span><br><span class="line">	CProgressCtrl	m_Progress;</span><br><span class="line">	CListBox	m_AddMsgLIst;</span><br><span class="line">	CIPAddressCtrl	m_You_IP;</span><br><span class="line">	CString	m_MsgSend;</span><br><span class="line">	<span class="comment">//&#125;&#125;AFX_DATA</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">// ClassWizard generated virtual function overrides</span></span><br><span class="line">	<span class="comment">//&#123;&#123;AFX_VIRTUAL(CtraDlg)</span></span><br><span class="line">	<span class="keyword">public</span>:</span><br><span class="line">	<span class="function"><span class="keyword">virtual</span> BOOL <span class="title">PreTranslateMessage</span><span class="params">(MSG* pMsg)</span></span>;</span><br><span class="line">	<span class="keyword">protected</span>:</span><br><span class="line">	<span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">DoDataExchange</span><span class="params">(CDataExchange* pDX)</span></span>;	<span class="comment">// DDX/DDV support</span></span><br><span class="line">	<span class="comment">//&#125;&#125;AFX_VIRTUAL</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Implementation</span></span><br><span class="line"><span class="keyword">protected</span>:</span><br><span class="line">	HICON m_hIcon;</span><br><span class="line"></span><br><span class="line">	<span class="comment">// Generated message map functions</span></span><br><span class="line">	<span class="comment">//&#123;&#123;AFX_MSG(CtraDlg)</span></span><br><span class="line">	<span class="function"><span class="keyword">virtual</span> BOOL <span class="title">OnInitDialog</span><span class="params">()</span></span>;</span><br><span class="line">	<span class="function">afx_msg <span class="keyword">void</span> <span class="title">OnSysCommand</span><span class="params">(UINT nID, LPARAM lParam)</span></span>;</span><br><span class="line">	<span class="function">afx_msg <span class="keyword">void</span> <span class="title">OnPaint</span><span class="params">()</span></span>;</span><br><span class="line">	<span class="function">afx_msg HCURSOR <span class="title">OnQueryDragIcon</span><span class="params">()</span></span>;</span><br><span class="line">	<span class="function">afx_msg <span class="keyword">void</span> <span class="title">OnButtonConnect</span><span class="params">()</span></span>;</span><br><span class="line">	<span class="function">afx_msg <span class="keyword">void</span> <span class="title">OnButtonDisconnect</span><span class="params">()</span></span>;</span><br><span class="line">	<span class="function">afx_msg <span class="keyword">void</span> <span class="title">OnButtonSendMsg</span><span class="params">()</span></span>;</span><br><span class="line">	<span class="function">afx_msg <span class="keyword">void</span> <span class="title">OnButtonSendFile</span><span class="params">()</span></span>;</span><br><span class="line">	<span class="function">afx_msg <span class="keyword">void</span> <span class="title">OnButtonClear</span><span class="params">()</span></span>;</span><br><span class="line">	<span class="function">afx_msg <span class="keyword">void</span> <span class="title">OnRadioTcp</span><span class="params">()</span></span>;</span><br><span class="line">	<span class="function">afx_msg <span class="keyword">void</span> <span class="title">OnRadioUdp</span><span class="params">()</span></span>;</span><br><span class="line">	<span class="function">afx_msg <span class="keyword">void</span> <span class="title">OnRadioServer</span><span class="params">()</span></span>;</span><br><span class="line">	<span class="function">afx_msg <span class="keyword">void</span> <span class="title">OnRadioClient</span><span class="params">()</span></span>;</span><br><span class="line">	<span class="function">afx_msg <span class="keyword">void</span> <span class="title">OnRadioBoth</span><span class="params">()</span></span>;</span><br><span class="line">	<span class="function">afx_msg <span class="keyword">void</span> <span class="title">OnButtonStopFile</span><span class="params">()</span></span>;</span><br><span class="line">	<span class="function">afx_msg LRESULT <span class="title">OnKSend</span><span class="params">(WPARAM wParam,LPARAM lParam)</span></span>;<span class="comment">//发送消息</span></span><br><span class="line">	<span class="comment">//afx_msg void OnButtonCaputer();</span></span><br><span class="line">	<span class="comment">//&#125;&#125;AFX_MSG</span></span><br><span class="line">	DECLARE_MESSAGE_MAP()</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">	<span class="function"><span class="keyword">int</span> <span class="title">SaveYouFile</span><span class="params">(CSocket &amp;recSo,SOCKADDR_IN &amp;client)</span></span>;</span><br><span class="line">	<span class="function"><span class="keyword">int</span> <span class="title">ReceiveFileMsg</span><span class="params">(CSocket &amp; socket,SOCKADDR_IN &amp;client)</span></span>;</span><br><span class="line">	<span class="function"><span class="keyword">int</span> <span class="title">GetIpAddress</span><span class="params">(<span class="keyword">const</span> CString &amp; sHostName,CString &amp; sIpAddress)</span></span>;</span><br><span class="line">	<span class="function"><span class="keyword">int</span> <span class="title">GetLocalHostName</span><span class="params">(CString &amp;sHostName)</span></span>;</span><br><span class="line">	<span class="function">CString <span class="title">GetError</span><span class="params">(DWORD error)</span></span>;</span><br><span class="line">	<span class="keyword">int</span>	m_nSockType;	<span class="comment">//连接类型</span></span><br><span class="line">	<span class="keyword">int</span> m_WorkType;		<span class="comment">//工作方式 server0,client1,both2</span></span><br><span class="line">	<span class="function"><span class="keyword">void</span> <span class="title">AddMsgList</span><span class="params">(CString IP, CString str)</span></span>; <span class="comment">//LISTBOX控件添加信息</span></span><br><span class="line">	<span class="keyword">int</span> m_client, m_server;</span><br><span class="line">	CString m_fileName;</span><br><span class="line">	<span class="keyword">bool</span> FileWork, FileStop, StopServer;</span><br><span class="line">	<span class="keyword">char</span> m_type;<span class="comment">//接受类型/F-文件，C-抓平，D-关闭,M-消息</span></span><br><span class="line">	<span class="keyword">int</span> m_Potr;<span class="comment">//当前使用端口</span></span><br><span class="line">	<span class="function"><span class="keyword">int</span> <span class="title">GetNamebyAddress</span><span class="params">(<span class="keyword">const</span> CString &amp;IpAddress,CString &amp;sYouName)</span></span>;<span class="comment">//获得对方计算机名称</span></span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">FILEINFO</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">	<span class="keyword">int</span> fileLength;</span><br><span class="line">	<span class="keyword">char</span> fileName[<span class="number">100</span>];</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//&#123;&#123;AFX_INSERT_LOCATION&#125;&#125;</span></span><br><span class="line"><span class="comment">// Microsoft Visual C++ will insert additional declarations immediately before the previous line.</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span> <span class="comment">// !defined(AFX_traDLG_H__F42FE5AC_E2CC_44AB_9D0A_748191BC989F__INCLUDED_)</span></span></span><br></pre></td></tr></table></figure>
<hr>
<h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><p>网上的资料，查到的大部分都是用的MFC的socket类做的……</p>
<p>高级版→→→→<br>1.<a href="https://wenku.baidu.com/view/69afd693dd88d0d233d46a49.html" target="_blank" rel="noopener">基于MFC仿QQ聊天程序设计完整实例教程</a><br>2.<a href="http://blog.csdn.net/akof1314/article/details/5983443" target="_blank" rel="noopener">CRichEditCtrlEx支持静态表情聊天类的使用</a></p>
]]></content>
      
        <categories>
            
            <category> 互联网 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> CPP </tag>
            
            <tag> MFC </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[四大组件之ContentProvider记录]]></title>
      <url>https://hubojing.github.io/2017/05/05/ContentProvider%E8%AE%B0%E5%BD%95/</url>
      <content type="html"><![CDATA[<div align="left"><br><img src="https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1493829797406&di=c1112aa632e463c9a69b23a84b37c681&imgtype=0&src=http%3A%2F%2Fs15.sinaimg.cn%2Fmiddle%2F448dd084gaa5d8b13a09e%26690" width="300" height="180" style="float:right;"><br><br><br>ContentProvider记录。<br><br><br> </div>

<a id="more"></a>
<p>数据存储方式：</p>
<ul>
<li>Shared Preferences</li>
<li>文件存储</li>
<li>SQLite</li>
<li>其他还有网络存储等</li>
</ul>
<p>上述不可完成的任务：都只是在单独的一个应用程序之中达到一个数据的共享</p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20170505230346413?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="ContentProvider" title="">
                </div>
                <div class="image-caption">ContentProvider</div>
            </figure>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20170505230425672?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="Uri" title="">
                </div>
                <div class="image-caption">Uri</div>
            </figure>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20170505230442148?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="UriMatcher类" title="">
                </div>
                <div class="image-caption">UriMatcher类</div>
            </figure>
<h1 id="ContentProvider"><a href="#ContentProvider" class="headerlink" title="ContentProvider"></a>ContentProvider</h1><ol>
<li>使用 ContentResolver 操作 ContentProvider 中的数据：<br>当外部应用需要对 ContentProvider 中的数据进行增删改查的时候，可以使用 ContentResolver 类来完成。</li>
<li>使用 Activity 提供的 getContentResolver() 方法获取 ContentResolver 对象。</li>
<li>ContentResolver 类提供了与 ContentProvider 类相同签名的四个方法：</li>
</ol>
<ul>
<li>public Uri insert(Uri uri,ContentValues values)<br>该方法用于往ContentProvider里面添加数据</li>
<li>public int delete(Uri uri,String selection,String[] selectionArgs)<br>该方法从ContentProvider中删除数据</li>
<li>public int update(Uri uri,ContentValues values,String selection,String[] selectionArgs)<br>该方法用于更新ContentProvider里面的数据</li>
<li>public Cursor query(Uri uri,String[] projection,String selection,String[] selectionArgs,String sortOrder)<br>该方法用于从ContentProvider中获取数据</li>
</ul>
<h1 id="使用系统提供的ContentProvider"><a href="#使用系统提供的ContentProvider" class="headerlink" title="使用系统提供的ContentProvider"></a>使用系统提供的ContentProvider</h1><h2 id="查询联系人"><a href="#查询联系人" class="headerlink" title="查询联系人"></a>查询联系人</h2><p>MyContentProvider.java</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">package com.abc.contentproviderdemo1;</span><br><span class="line"></span><br><span class="line">import android.content.ContentProvider;</span><br><span class="line">import android.content.ContentValues;</span><br><span class="line">import android.database.Cursor;</span><br><span class="line">import android.net.Uri;</span><br><span class="line"></span><br><span class="line">public class MyContentProvider extends ContentProvider &#123;</span><br><span class="line"></span><br><span class="line">	@Override // 在ContentProvider创建后被调用</span><br><span class="line">	public boolean onCreate() &#123;</span><br><span class="line">		// TODO Auto-generated method stub</span><br><span class="line">		return false;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	@Override // 根据uri查询出selection指定的条件所匹配的全部记录，并且可以指定查询哪些列 以什么方式（order）排序</span><br><span class="line">	public Cursor query(Uri uri, String[] projection, String selection, String[] selectionArgs, String sortOrder) &#123;</span><br><span class="line">		// TODO Auto-generated method stub</span><br><span class="line">		return null;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	@Override // 返回当前uri的MIME类型，如果该URI对应的数据可能包括多条记录</span><br><span class="line">	// 如果该URI对应的数据只有一条记录 该MIME类型字符串 就是以vnd.android.cursor.item/开头</span><br><span class="line">	public String getType(Uri uri) &#123;</span><br><span class="line">		// TODO Auto-generated method stub</span><br><span class="line">		return null;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	@Override // 根据uri插入Values对应的数据</span><br><span class="line">	public Uri insert(Uri uri, ContentValues values) &#123;</span><br><span class="line">		// TODO Auto-generated method stub</span><br><span class="line">		return null;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	@Override // 根据Uri删除selection指定的条件所匹配的全部记录</span><br><span class="line">	public int delete(Uri uri, String selection, String[] selectionArgs) &#123;</span><br><span class="line">		// TODO Auto-generated method stub</span><br><span class="line">		return 0;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	@Override // 根据uri修改selection指定的条件所匹配的全部记录</span><br><span class="line">	public int update(Uri uri, ContentValues values, String selection, String[] selectionArgs) &#123;</span><br><span class="line">		// TODO Auto-generated method stub</span><br><span class="line">		return 0;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>MainActivity.java</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line">package com.abc.contentproviderdemo1;</span><br><span class="line"></span><br><span class="line">import android.app.Activity;</span><br><span class="line">import android.content.ContentResolver;</span><br><span class="line">import android.database.Cursor;</span><br><span class="line">import android.os.Bundle;</span><br><span class="line">import android.provider.ContactsContract.CommonDataKinds.Email;</span><br><span class="line">import android.provider.ContactsContract.CommonDataKinds.Phone;</span><br><span class="line">import android.provider.ContactsContract.Contacts;</span><br><span class="line">import android.util.Log;</span><br><span class="line"></span><br><span class="line">public class MainActivity extends Activity &#123;</span><br><span class="line"></span><br><span class="line">	@Override</span><br><span class="line">	protected void onCreate(Bundle savedInstanceState) &#123;</span><br><span class="line">		super.onCreate(savedInstanceState);</span><br><span class="line">		setContentView(R.layout.activity_main);</span><br><span class="line"></span><br><span class="line">		ContentResolver cr = getContentResolver();</span><br><span class="line">		Cursor c = cr.query(Contacts.CONTENT_URI, new String[] &#123; Contacts._ID, Contacts.DISPLAY_NAME &#125;, null, null,</span><br><span class="line">				null);</span><br><span class="line">		if (c != null) &#123;</span><br><span class="line">			while (c.moveToNext()) &#123;</span><br><span class="line">				int id = c.getInt(c.getColumnIndex(&quot;_id&quot;));</span><br><span class="line">				Log.i(&quot;info&quot;, &quot;_id&quot; + id);</span><br><span class="line">				Log.i(&quot;info&quot;, &quot;name:&quot; + c.getString(c.getColumnIndex(&quot;display_name&quot;)));</span><br><span class="line">				Cursor c1 = cr.query(Phone.CONTENT_URI, new String[] &#123; Phone.NUMBER, Phone.TYPE &#125;,</span><br><span class="line">						Phone.CONTACT_ID + &quot;=&quot; + id, null, null);</span><br><span class="line">				// 根据联系人ID查询出联系人的电话号码</span><br><span class="line">				if (c1 != null) &#123;</span><br><span class="line">					while (c1.moveToNext()) &#123;</span><br><span class="line">						int type = c1.getInt(c1.getColumnIndex(Phone.TYPE));</span><br><span class="line">						if (type == Phone.TYPE_HOME) &#123;</span><br><span class="line">							Log.i(&quot;info&quot;, &quot;家庭电话：&quot; + c1.getString(c1.getColumnIndex(Phone.NUMBER)));</span><br><span class="line">						&#125; else if (type == Phone.TYPE_MOBILE) &#123;</span><br><span class="line">							Log.i(&quot;info&quot;, &quot;手机&quot; + c1.getString(c1.getColumnIndex(Phone.NUMBER)));</span><br><span class="line">						&#125;</span><br><span class="line">					&#125;</span><br><span class="line">					c1.close();</span><br><span class="line">				&#125;</span><br><span class="line">				// 根据联系人的ID去查询出联系人的邮箱地址</span><br><span class="line">				Cursor c2 = cr.query(Email.CONTENT_URI, new String[] &#123; Email.DATA, Email.TYPE &#125;,</span><br><span class="line">						Email.CONTACT_ID + &quot;=&quot; + id, null, null);</span><br><span class="line"></span><br><span class="line">				if (c2 != null) &#123;</span><br><span class="line">					while (c2.moveToNext()) &#123;</span><br><span class="line">						int type = c2.getInt(c2.getColumnIndex(Email.TYPE));</span><br><span class="line">						if (type == Email.TYPE_WORK) &#123;</span><br><span class="line">							Log.i(&quot;info&quot;, &quot;工作邮箱：&quot; + c2.getString(c2.getColumnIndex(Email.DATA)));</span><br><span class="line">						&#125;</span><br><span class="line">					&#125;</span><br><span class="line">					c2.close();</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">			c.close();</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>AndroidManifest.xml注册</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;uses-permission android:name=&quot;android.permission.READ_CONTACTS&quot;/&gt;</span><br></pre></td></tr></table></figure>
<h2 id="增加联系人"><a href="#增加联系人" class="headerlink" title="增加联系人"></a>增加联系人</h2><p>MainActivity.java</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">package com.abc.contentproviderdemo2;</span><br><span class="line"></span><br><span class="line">import android.app.Activity;</span><br><span class="line">import android.content.ContentResolver;</span><br><span class="line">import android.content.ContentUris;</span><br><span class="line">import android.content.ContentValues;</span><br><span class="line">import android.net.Uri;</span><br><span class="line">import android.os.Bundle;</span><br><span class="line">import android.provider.ContactsContract.CommonDataKinds.Phone;</span><br><span class="line">import android.provider.ContactsContract.CommonDataKinds.StructuredName;</span><br><span class="line">import android.provider.ContactsContract.Data;</span><br><span class="line">import android.provider.ContactsContract.RawContacts;</span><br><span class="line"></span><br><span class="line">public class MainActivity extends Activity &#123;</span><br><span class="line"></span><br><span class="line">	@Override</span><br><span class="line">	protected void onCreate(Bundle savedInstanceState) &#123;</span><br><span class="line">		super.onCreate(savedInstanceState);</span><br><span class="line">		setContentView(R.layout.activity_main);</span><br><span class="line">		ContentResolver cr = getContentResolver();</span><br><span class="line">		// 向联系人中插入一行数据</span><br><span class="line">		ContentValues values = new ContentValues();</span><br><span class="line">		Uri uri = cr.insert(RawContacts.CONTENT_URI, values);</span><br><span class="line">		Long raw_contact_id = ContentUris.parseId(uri);</span><br><span class="line">		values.clear();</span><br><span class="line">		values.put(StructuredName.RAW_CONTACT_ID, raw_contact_id);</span><br><span class="line">		values.put(StructuredName.DISPLAY_NAME, &quot;胡博靖&quot;);</span><br><span class="line">		values.put(StructuredName.MIMETYPE, StructuredName.CONTENT_ITEM_TYPE);</span><br><span class="line">		uri = cr.insert(Data.CONTENT_URI, values);</span><br><span class="line">		// 插入电话信息</span><br><span class="line">		values.clear();</span><br><span class="line">		values.put(Phone.RAW_CONTACT_ID, raw_contact_id);</span><br><span class="line">		values.put(Phone.NUMBER, &quot;12345678910&quot;);</span><br><span class="line">		values.put(Phone.MIMETYPE, Phone.CONTENT_ITEM_TYPE);</span><br><span class="line">		uri = cr.insert(Data.CONTENT_URI, values);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>在AndroidManifest.xml中注册</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;uses-permission android:name=&quot;android.permission.WRITE_CONTACTS&quot;/&gt;</span><br></pre></td></tr></table></figure>
]]></content>
      
        <categories>
            
            <category> 互联网 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Android </tag>
            
            <tag> Java </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[四大组件之Service记录]]></title>
      <url>https://hubojing.github.io/2017/05/01/Service%E8%AE%B0%E5%BD%95/</url>
      <content type="html"><![CDATA[<div align="left"><br><img src="https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1493829797406&di=c1112aa632e463c9a69b23a84b37c681&imgtype=0&src=http%3A%2F%2Fs15.sinaimg.cn%2Fmiddle%2F448dd084gaa5d8b13a09e%26690" width="300" height="180" style="float:right;"><br>　　根据广大程序员经验，初学者请告别Eclipse，拥抱Android Studio！<br>　　原因：<br>　　1. 未来是Android Studio的天下（Google自己出品）。<br>　　2. Eclipse的配置和相关安装可以磨灭初学者一半的耐心，简直是拦路虎。（比如和我一样做类似题目毕设的同学已经哭晕在厕所）<br>　　3. 促使你换一台高配电脑。（心累，Android Studio在垃圾本上跑，几分钟编译一次，卡到怀疑人生，其实垃圾本四年前还是一条能跑lol的好本本，岁月催laptop老）<br> </div>

<a id="more"></a>
<p>　　Android sdk文件夹到了80几G…撑爆了我的硬盘……电脑里装的软件过于多了…趁着五一大好春光（下雨）都给卸载了！包括毕设用的eclipse和各种版本的VS，以及以前用过现在用的少的各种专业软件（每一个都是10G大户）。不过我还是毅然留下了常年没有玩耍的游戏们（加起来也才80多G！相比之下，sdk里都放了些什么！）。</p>
<p>　　但毕设是要做的。<br>　　所以Android套装们需要重新下载下来，当年安装的时候，对JDK、SDK、ADT这种东西一点儿不了解，现在重新来一遍。<br>这几天写了一些文字，但不能发上来，因为放入我的毕业论文里了。</p>
<p>－－－－－－－－－－－－－－－－－－－－－－－－废话终结线－－－－－－－－－－－－－－－－－－－－－－－－</p>
<h1 id="Service生命周期"><a href="#Service生命周期" class="headerlink" title="Service生命周期"></a>Service生命周期</h1><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1493825041654&di=c2451aea42f042f63f4de6675f5659d3&imgtype=0&src=http%3A%2F%2Fstatic.oschina.net%2Fuploads%2Fimg%2F201210%2F16102027_blLg.gif" alt="Service生命周期" title="">
                </div>
                <div class="image-caption">Service生命周期</div>
            </figure>
<p><strong>注意</strong></p>
<ul>
<li>运行在主线程，不能用它做耗时的请求或动作</li>
<li>可在服务中开一个线程，在线程中做耗时动作</li>
</ul>
<h1 id="两种方式（本地服务）"><a href="#两种方式（本地服务）" class="headerlink" title="两种方式（本地服务）"></a>两种方式（本地服务）</h1><p>Start方式：</p>
<ul>
<li>服务跟启动页没有任何联系</li>
<li>无法得到服务对象</li>
</ul>
<p>Bind方式（支持数据回传）：</p>
<ul>
<li>通过Ibinder接口实例，返回一个ServiceConnection对象给启动源。</li>
<li>通过ServiceConnection对象的相关方法可以得到Service对象</li>
</ul>
<h1 id="Start启动"><a href="#Start启动" class="headerlink" title="Start启动"></a>Start启动</h1><p>activity_main.xml</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line">&lt;LinearLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;</span><br><span class="line">    xmlns:tools=&quot;http://schemas.android.com/tools&quot;</span><br><span class="line">    android:layout_width=&quot;match_parent&quot;</span><br><span class="line">    android:layout_height=&quot;match_parent&quot;</span><br><span class="line">    android:orientation=&quot;vertical&quot;</span><br><span class="line">    android:paddingBottom=&quot;@dimen/activity_vertical_margin&quot;</span><br><span class="line">    android:paddingLeft=&quot;@dimen/activity_horizontal_margin&quot;</span><br><span class="line">    android:paddingRight=&quot;@dimen/activity_horizontal_margin&quot;</span><br><span class="line">    android:paddingTop=&quot;@dimen/activity_vertical_margin&quot;</span><br><span class="line">    tools:context=&quot;com.abc.service.MainActivity&quot; &gt;</span><br><span class="line"></span><br><span class="line">    &lt;TextView</span><br><span class="line">        android:id=&quot;@+id/textView1&quot;</span><br><span class="line">        android:layout_width=&quot;wrap_content&quot;</span><br><span class="line">        android:layout_height=&quot;wrap_content&quot;</span><br><span class="line">        android:text=&quot;start:&quot; /&gt;</span><br><span class="line"></span><br><span class="line">    &lt;Button</span><br><span class="line">        android:id=&quot;@+id/start&quot;</span><br><span class="line">        android:onClick=&quot;doClick&quot;</span><br><span class="line">        android:layout_width=&quot;match_parent&quot;</span><br><span class="line">        android:layout_height=&quot;wrap_content&quot;</span><br><span class="line">        android:text=&quot;StartService&quot; /&gt;</span><br><span class="line"></span><br><span class="line">    &lt;Button</span><br><span class="line">        android:id=&quot;@+id/stop&quot;</span><br><span class="line">        android:onClick=&quot;doClick&quot;</span><br><span class="line">        android:layout_width=&quot;match_parent&quot;</span><br><span class="line">        android:layout_height=&quot;wrap_content&quot;</span><br><span class="line">        android:text=&quot;StopService&quot; /&gt;</span><br><span class="line"></span><br><span class="line">    &lt;TextView</span><br><span class="line">        android:id=&quot;@+id/textView2&quot;</span><br><span class="line">        android:layout_width=&quot;wrap_content&quot;</span><br><span class="line">        android:layout_height=&quot;wrap_content&quot;</span><br><span class="line">        android:text=&quot;Bind:&quot; /&gt;</span><br><span class="line"></span><br><span class="line">    &lt;Button</span><br><span class="line">        android:id=&quot;@+id/bind&quot;</span><br><span class="line">         android:onClick=&quot;doClick&quot;</span><br><span class="line">        android:layout_width=&quot;match_parent&quot;</span><br><span class="line">        android:layout_height=&quot;wrap_content&quot;</span><br><span class="line">        android:text=&quot;BindService&quot; /&gt;</span><br><span class="line"></span><br><span class="line">    &lt;Button</span><br><span class="line">        android:id=&quot;@+id/play&quot;</span><br><span class="line">        android:onClick=&quot;doClick&quot;</span><br><span class="line">        android:layout_width=&quot;match_parent&quot;</span><br><span class="line">        android:layout_height=&quot;wrap_content&quot;</span><br><span class="line">        android:text=&quot;播放&quot; /&gt;</span><br><span class="line"></span><br><span class="line">    &lt;Button</span><br><span class="line">        android:id=&quot;@+id/pause&quot;</span><br><span class="line">        android:onClick=&quot;doClick&quot;</span><br><span class="line">        android:layout_width=&quot;match_parent&quot;</span><br><span class="line">        android:layout_height=&quot;wrap_content&quot;</span><br><span class="line">        android:text=&quot;暂停&quot; /&gt;</span><br><span class="line"></span><br><span class="line">    &lt;Button</span><br><span class="line">        android:id=&quot;@+id/next&quot;</span><br><span class="line">         android:onClick=&quot;doClick&quot;</span><br><span class="line">        android:layout_width=&quot;match_parent&quot;</span><br><span class="line">        android:layout_height=&quot;wrap_content&quot;</span><br><span class="line">        android:text=&quot;下一首&quot; /&gt;</span><br><span class="line"></span><br><span class="line">    &lt;Button</span><br><span class="line">        android:id=&quot;@+id/pervious&quot;</span><br><span class="line">        android:onClick=&quot;doClick&quot;</span><br><span class="line">        android:layout_width=&quot;match_parent&quot;</span><br><span class="line">        android:layout_height=&quot;wrap_content&quot;</span><br><span class="line">        android:text=&quot;上一首&quot; /&gt;</span><br><span class="line"></span><br><span class="line">    &lt;Button</span><br><span class="line">        android:id=&quot;@+id/unbind&quot;</span><br><span class="line">        android:onClick=&quot;doClick&quot;</span><br><span class="line">        android:layout_width=&quot;match_parent&quot;</span><br><span class="line">        android:layout_height=&quot;wrap_content&quot;</span><br><span class="line">        android:text=&quot;UnBindService&quot; /&gt;</span><br><span class="line"></span><br><span class="line">&lt;/LinearLayout&gt;</span><br></pre></td></tr></table></figure>
<p>如图。</p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20170503214551276?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="样式" title="">
                </div>
                <div class="image-caption">样式</div>
            </figure>
<p>MainActivity.java</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">package com.abc.service;</span><br><span class="line"></span><br><span class="line">import android.app.Activity;</span><br><span class="line">import android.content.Intent;</span><br><span class="line">import android.os.Bundle;</span><br><span class="line">import android.view.Menu;</span><br><span class="line">import android.view.MenuItem;</span><br><span class="line">import android.view.View;</span><br><span class="line"></span><br><span class="line">public class MainActivity extends Activity &#123;</span><br><span class="line">	Intent intent1;</span><br><span class="line"></span><br><span class="line">	@Override</span><br><span class="line">	protected void onCreate(Bundle savedInstanceState) &#123;</span><br><span class="line">		super.onCreate(savedInstanceState);</span><br><span class="line">		setContentView(R.layout.activity_main);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	public void doClick(View v) &#123;</span><br><span class="line">		switch (v.getId()) &#123;</span><br><span class="line">		case R.id.start:</span><br><span class="line">			intent1 = new Intent(MainActivity.this, MyStartService.class);</span><br><span class="line">			startService(intent1);</span><br><span class="line">			break;</span><br><span class="line">		case R.id.stop:</span><br><span class="line">			stopService(intent1);</span><br><span class="line">			break;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	@Override</span><br><span class="line">	public boolean onCreateOptionsMenu(Menu menu) &#123;</span><br><span class="line">		// Inflate the menu; this adds items to the action bar if it is present.</span><br><span class="line">		getMenuInflater().inflate(R.menu.main, menu);</span><br><span class="line">		return true;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	@Override</span><br><span class="line">	public boolean onOptionsItemSelected(MenuItem item) &#123;</span><br><span class="line">		// Handle action bar item clicks here. The action bar will</span><br><span class="line">		// automatically handle clicks on the Home/Up button, so long</span><br><span class="line">		// as you specify a parent activity in AndroidManifest.xml.</span><br><span class="line">		int id = item.getItemId();</span><br><span class="line">		if (id == R.id.action_settings) &#123;</span><br><span class="line">			return true;</span><br><span class="line">		&#125;</span><br><span class="line">		return super.onOptionsItemSelected(item);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>MyStartService.java</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">package com.abc.service;</span><br><span class="line"></span><br><span class="line">import android.app.Service;</span><br><span class="line">import android.content.Intent;</span><br><span class="line">import android.os.IBinder;</span><br><span class="line">import android.util.Log;</span><br><span class="line"></span><br><span class="line">public class MyStartService extends Service &#123;</span><br><span class="line">	@Override</span><br><span class="line">	public void onCreate() &#123;</span><br><span class="line">		// TODO Auto-generated method stub</span><br><span class="line">		Log.i(&quot;info&quot;, &quot;Service--onCreate()&quot;);</span><br><span class="line">		super.onCreate();</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	@Override</span><br><span class="line">	public int onStartCommand(Intent intent, int flags, int startId) &#123;</span><br><span class="line">		// TODO Auto-generated method stub</span><br><span class="line">		Log.i(&quot;info&quot;, &quot;Service--onStartCommand()&quot;);</span><br><span class="line">		return super.onStartCommand(intent, flags, startId);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	@Override</span><br><span class="line">	public void onDestroy() &#123;</span><br><span class="line">		// TODO Auto-generated method stub</span><br><span class="line">		Log.i(&quot;info&quot;, &quot;Service--onDestroy()&quot;);</span><br><span class="line">		super.onDestroy();</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	@Override</span><br><span class="line">	public IBinder onBind(Intent intent) &#123;</span><br><span class="line">		// TODO Auto-generated method stub</span><br><span class="line">		Log.i(&quot;info&quot;, &quot;Service--onBind()&quot;);</span><br><span class="line">		return null;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>注册</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span><br><span class="line">&lt;manifest xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;</span><br><span class="line">    package=&quot;com.abc.service&quot;</span><br><span class="line">    android:versionCode=&quot;1&quot;</span><br><span class="line">    android:versionName=&quot;1.0&quot; &gt;</span><br><span class="line"></span><br><span class="line">    &lt;uses-sdk</span><br><span class="line">        android:minSdkVersion=&quot;14&quot;</span><br><span class="line">        android:targetSdkVersion=&quot;25&quot; /&gt;</span><br><span class="line"></span><br><span class="line">    &lt;application</span><br><span class="line">        android:allowBackup=&quot;true&quot;</span><br><span class="line">        android:icon=&quot;@drawable/ic_launcher&quot;</span><br><span class="line">        android:label=&quot;@string/app_name&quot;</span><br><span class="line">        android:theme=&quot;@style/AppTheme&quot; &gt;</span><br><span class="line">        &lt;activity</span><br><span class="line">            android:name=&quot;.MainActivity&quot;</span><br><span class="line">            android:label=&quot;@string/app_name&quot; &gt;</span><br><span class="line">            &lt;intent-filter&gt;</span><br><span class="line">                &lt;action android:name=&quot;android.intent.action.MAIN&quot; /&gt;</span><br><span class="line"></span><br><span class="line">                &lt;category android:name=&quot;android.intent.category.LAUNCHER&quot; /&gt;</span><br><span class="line">            &lt;/intent-filter&gt;</span><br><span class="line">        &lt;/activity&gt;</span><br><span class="line">        &lt;service android:name=&quot;com.abc.service.MyStartService&quot;&gt;&lt;/service&gt;</span><br><span class="line">    &lt;/application&gt;</span><br><span class="line"></span><br><span class="line">&lt;/manifest&gt;</span><br></pre></td></tr></table></figure>
<p>可在LogCat中看到执行情况。</p>
<h1 id="Bind启动"><a href="#Bind启动" class="headerlink" title="Bind启动"></a>Bind启动</h1><p>注册新类</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;service android:name=&quot;com.abc.service.MyBindService&quot;&gt;&lt;/service&gt;</span><br></pre></td></tr></table></figure>
<p>MyBindService.java</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line">package com.abc.service;</span><br><span class="line"></span><br><span class="line">import android.app.Service;</span><br><span class="line">import android.content.Intent;</span><br><span class="line">import android.content.ServiceConnection;</span><br><span class="line">import android.os.Binder;</span><br><span class="line">import android.os.IBinder;</span><br><span class="line">import android.util.Log;</span><br><span class="line"></span><br><span class="line">public class MyBindService extends Service &#123;</span><br><span class="line">	@Override</span><br><span class="line">	public void onCreate() &#123;</span><br><span class="line">		// TODO Auto-generated method stub</span><br><span class="line">		super.onCreate();</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	public class MyBinder extends Binder &#123;</span><br><span class="line">		public MyBindService getService() &#123;</span><br><span class="line">			return MyBindService.this;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	@Override</span><br><span class="line">	public IBinder onBind(Intent intent) &#123;</span><br><span class="line">		// TODO Auto-generated method stub</span><br><span class="line">		Log.i(&quot;info&quot;, &quot;onBind--onCreate()&quot;);</span><br><span class="line">		return new MyBinder();</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	@Override</span><br><span class="line">	public void unbindService(ServiceConnection conn) &#123;</span><br><span class="line">		// TODO Auto-generated method stub</span><br><span class="line">		Log.i(&quot;info&quot;, &quot;BindService--unbindService()&quot;);</span><br><span class="line">		super.unbindService(conn);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	@Override</span><br><span class="line">	public void onDestroy() &#123;</span><br><span class="line">		// TODO Auto-generated method stub</span><br><span class="line">		Log.i(&quot;info&quot;, &quot;BindService--onDestroy()&quot;);</span><br><span class="line">		super.onDestroy();</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	public void Play() &#123;</span><br><span class="line">		Log.i(&quot;info&quot;, &quot;播放&quot;);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	public void Pause() &#123;</span><br><span class="line">		Log.i(&quot;info&quot;, &quot;暂停&quot;);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	public void Pervious() &#123;</span><br><span class="line">		Log.i(&quot;info&quot;, &quot;上一首&quot;);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	public void next() &#123;</span><br><span class="line">		Log.i(&quot;info&quot;, &quot;下一首&quot;);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>MainActivity.java</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br></pre></td><td class="code"><pre><span class="line">package com.abc.service;</span><br><span class="line"></span><br><span class="line">import com.abc.service.MyBindService.MyBinder;</span><br><span class="line"></span><br><span class="line">import android.app.Activity;</span><br><span class="line">import android.app.Service;</span><br><span class="line">import android.content.ComponentName;</span><br><span class="line">import android.content.Intent;</span><br><span class="line">import android.content.ServiceConnection;</span><br><span class="line">import android.os.Bundle;</span><br><span class="line">import android.os.IBinder;</span><br><span class="line">import android.view.Menu;</span><br><span class="line">import android.view.MenuItem;</span><br><span class="line">import android.view.View;</span><br><span class="line"></span><br><span class="line">public class MainActivity extends Activity &#123;</span><br><span class="line">	Intent intent1;</span><br><span class="line">	Intent intent2;</span><br><span class="line">	MyBindService service;</span><br><span class="line">	ServiceConnection conn = new ServiceConnection() &#123;</span><br><span class="line"></span><br><span class="line">		@Override // 当启动源跟Service的连接意外丢失的时候会调用这个方法</span><br><span class="line">		// 比如当Service崩溃了或者被强行杀死了</span><br><span class="line">		public void onServiceDisconnected(ComponentName name) &#123;</span><br><span class="line">			// TODO Auto-generated method stub</span><br><span class="line"></span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		@Override // 当启动页跟Service成功连接之后将会在自动调用这个方法</span><br><span class="line">		public void onServiceConnected(ComponentName name, IBinder binder) &#123;</span><br><span class="line">			// TODO Auto-generated method stub</span><br><span class="line">			service = ((MyBinder) binder).getService();</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;;</span><br><span class="line"></span><br><span class="line">	@Override</span><br><span class="line">	protected void onCreate(Bundle savedInstanceState) &#123;</span><br><span class="line">		super.onCreate(savedInstanceState);</span><br><span class="line">		setContentView(R.layout.activity_main);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	public void doClick(View v) &#123;</span><br><span class="line">		switch (v.getId()) &#123;</span><br><span class="line">		case R.id.start:</span><br><span class="line">			intent1 = new Intent(MainActivity.this, MyStartService.class);</span><br><span class="line">			startService(intent1);</span><br><span class="line">			break;</span><br><span class="line"></span><br><span class="line">		case R.id.stop:</span><br><span class="line">			stopService(intent1);</span><br><span class="line">			break;</span><br><span class="line"></span><br><span class="line">		case R.id.play:</span><br><span class="line">			service.Play();</span><br><span class="line">			break;</span><br><span class="line"></span><br><span class="line">		case R.id.pause:</span><br><span class="line">			service.Pause();</span><br><span class="line">			break;</span><br><span class="line"></span><br><span class="line">		case R.id.pervious:</span><br><span class="line">			service.Pervious();</span><br><span class="line">			break;</span><br><span class="line"></span><br><span class="line">		case R.id.next:</span><br><span class="line">			service.next();</span><br><span class="line">			break;</span><br><span class="line"></span><br><span class="line">		case R.id.bind:</span><br><span class="line">			intent2 = new Intent(MainActivity.this, MyBindService.class);</span><br><span class="line">			bindService(intent2, conn, Service.BIND_AUTO_CREATE);</span><br><span class="line">			break;</span><br><span class="line"></span><br><span class="line">		case R.id.unbind:</span><br><span class="line">			unbindService(conn);</span><br><span class="line">			break;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	@Override</span><br><span class="line">	public boolean onCreateOptionsMenu(Menu menu) &#123;</span><br><span class="line">		// Inflate the menu; this adds items to the action bar if it is present.</span><br><span class="line">		getMenuInflater().inflate(R.menu.main, menu);</span><br><span class="line">		return true;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	@Override</span><br><span class="line">	public boolean onOptionsItemSelected(MenuItem item) &#123;</span><br><span class="line">		// Handle action bar item clicks here. The action bar will</span><br><span class="line">		// automatically handle clicks on the Home/Up button, so long</span><br><span class="line">		// as you specify a parent activity in AndroidManifest.xml.</span><br><span class="line">		int id = item.getItemId();</span><br><span class="line">		if (id == R.id.action_settings) &#123;</span><br><span class="line">			return true;</span><br><span class="line">		&#125;</span><br><span class="line">		return super.onOptionsItemSelected(item);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><strong>UnBindService只能点击一次，否则会报错。</strong></p>
<h1 id="两种方法混用"><a href="#两种方法混用" class="headerlink" title="两种方法混用"></a>两种方法混用</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br></pre></td><td class="code"><pre><span class="line">package com.abc.service;</span><br><span class="line"></span><br><span class="line">import com.abc.service.MyBindService.MyBinder;</span><br><span class="line"></span><br><span class="line">import android.app.Activity;</span><br><span class="line">import android.app.Service;</span><br><span class="line">import android.content.ComponentName;</span><br><span class="line">import android.content.Intent;</span><br><span class="line">import android.content.ServiceConnection;</span><br><span class="line">import android.os.Bundle;</span><br><span class="line">import android.os.IBinder;</span><br><span class="line">import android.view.Menu;</span><br><span class="line">import android.view.MenuItem;</span><br><span class="line">import android.view.View;</span><br><span class="line"></span><br><span class="line">public class MainActivity extends Activity &#123;</span><br><span class="line">	Intent intent1;</span><br><span class="line">	Intent intent2;</span><br><span class="line">	MyBindService service;</span><br><span class="line">	ServiceConnection conn = new ServiceConnection() &#123;</span><br><span class="line"></span><br><span class="line">		@Override // 当启动源跟Service的连接意外丢失的时候会调用这个方法</span><br><span class="line">		// 比如当Service崩溃了或者被强行杀死了</span><br><span class="line">		public void onServiceDisconnected(ComponentName name) &#123;</span><br><span class="line">			// TODO Auto-generated method stub</span><br><span class="line"></span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		@Override // 当启动页跟Service成功连接之后将会在自动调用这个方法</span><br><span class="line">		public void onServiceConnected(ComponentName name, IBinder binder) &#123;</span><br><span class="line">			// TODO Auto-generated method stub</span><br><span class="line">			service = ((MyBinder) binder).getService();</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;;</span><br><span class="line"></span><br><span class="line">	@Override</span><br><span class="line">	protected void onCreate(Bundle savedInstanceState) &#123;</span><br><span class="line">		super.onCreate(savedInstanceState);</span><br><span class="line">		setContentView(R.layout.activity_main);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	public void doClick(View v) &#123;</span><br><span class="line">		switch (v.getId()) &#123;</span><br><span class="line">		case R.id.start:</span><br><span class="line">			intent1 = new Intent(MainActivity.this, MyStartService.class);</span><br><span class="line">			startService(intent1);</span><br><span class="line">			break;</span><br><span class="line"></span><br><span class="line">		case R.id.stop:</span><br><span class="line">			stopService(intent1);</span><br><span class="line">			break;</span><br><span class="line"></span><br><span class="line">		case R.id.play:</span><br><span class="line">			service.Play();</span><br><span class="line">			break;</span><br><span class="line"></span><br><span class="line">		case R.id.pause:</span><br><span class="line">			service.Pause();</span><br><span class="line">			break;</span><br><span class="line"></span><br><span class="line">		case R.id.pervious:</span><br><span class="line">			service.Pervious();</span><br><span class="line">			break;</span><br><span class="line"></span><br><span class="line">		case R.id.next:</span><br><span class="line">			service.next();</span><br><span class="line">			break;</span><br><span class="line"></span><br><span class="line">		case R.id.bind:</span><br><span class="line">			intent2 = new Intent(MainActivity.this, MyBindService.class);</span><br><span class="line">			startService(intent2);</span><br><span class="line">			bindService(intent2, conn, Service.BIND_AUTO_CREATE);</span><br><span class="line">			break;</span><br><span class="line"></span><br><span class="line">		case R.id.unbind:</span><br><span class="line">			unbindService(conn);</span><br><span class="line">			break;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	@Override</span><br><span class="line">	protected void onDestroy() &#123;</span><br><span class="line">		// TODO Auto-generated method stub</span><br><span class="line">		stopService(intent2);</span><br><span class="line">		unbindService(conn);</span><br><span class="line">		super.onDestroy();</span><br><span class="line">	&#125;</span><br><span class="line">	@Override</span><br><span class="line">	public boolean onCreateOptionsMenu(Menu menu) &#123;</span><br><span class="line">		// Inflate the menu; this adds items to the action bar if it is present.</span><br><span class="line">		getMenuInflater().inflate(R.menu.main, menu);</span><br><span class="line">		return true;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	@Override</span><br><span class="line">	public boolean onOptionsItemSelected(MenuItem item) &#123;</span><br><span class="line">		// Handle action bar item clicks here. The action bar will</span><br><span class="line">		// automatically handle clicks on the Home/Up button, so long</span><br><span class="line">		// as you specify a parent activity in AndroidManifest.xml.</span><br><span class="line">		int id = item.getItemId();</span><br><span class="line">		if (id == R.id.action_settings) &#123;</span><br><span class="line">			return true;</span><br><span class="line">		&#125;</span><br><span class="line">		return super.onOptionsItemSelected(item);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      
        <categories>
            
            <category> 互联网 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Android </tag>
            
            <tag> Java </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[MFC绘制时钟]]></title>
      <url>https://hubojing.github.io/2017/04/23/MFC%E7%BB%98%E5%88%B6%E6%97%B6%E9%92%9F/</url>
      <content type="html"><![CDATA[<div align="left"><br><img src="http://img.blog.csdn.net/20170424220400837?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" width="300" height="180" style="float:right;"><br><br> 　　<strong>使用GDI接口在视图上绘制一个时钟。</strong><br>　　<br><br><br> </div>

<a id="more"></a>
<blockquote>
<p>　　GDI是Graphics Device Interface的缩写，含义是图形设备接口，它的主要任务是负责系统与绘图程序之间的信息交换，处理所有Windows程序的图形输出。<br>　　在Windows操作系统下，绝大多数具备图形界面的应用程序都离不开GDI，我们利用GDI所提供的众多函数就可以方便的在屏幕、打印机及其它输出设备上输出图形，文本等操作。<br>GDI函数大致可分类为：<br>　　设备上下文函数(如GetDC、CreateDC、DeleteDC)、 画线函数(如LineTo、Polyline、Arc)、填充画图函数(如Ellipse、FillRect、Pie)、画图属性函数(如SetBkColor、SetBkMode、SetTextColor)、文本、字体函数(如TextOut、GetFontData)、位图函数(如SetPixel、BitBlt、StretchBlt)、坐标函数(如DPtoLP、LPtoDP、ScreenToClient、ClientToScreen)、映射函数(如SetMapMode、SetWindowExtEx、SetViewportExtEx)、元文件函数(如PlayMetaFile、SetWinMetaFileBits)、区域函数(如FillRgn、FrameRgn、InvertRgn)、路径函数(如BeginPath、EndPath、StrokeAndFillPath)、裁剪函数(如SelectClipRgn、SelectClipPath)等。<br>                                            　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　——百度百科</p>
</blockquote>
<p>最初想法：<br>建立一个单文档工程，在OnDraw利用<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">CClientDC <span class="title">dc</span><span class="params">(<span class="keyword">this</span>)</span></span>;</span><br><span class="line">dc.Ellipse(CRect(<span class="number">100</span>,<span class="number">100</span>,<span class="number">500</span>,<span class="number">500</span>));</span><br></pre></td></tr></table></figure></p>
<p>画圆，但是打开的窗口太大了。于是，想初始化窗口，在CMainFrame里的PreCreateWindow设置窗口大小：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">BOOL CMainFrame::PreCreateWindow(CREATESTRUCT&amp; cs)</span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">if</span>( !CFrameWnd::PreCreateWindow(cs) )</span><br><span class="line">		<span class="keyword">return</span> FALSE;</span><br><span class="line">	<span class="comment">// <span class="doctag">TODO:</span> Modify the Window class or styles here by modifying</span></span><br><span class="line">	<span class="comment">//  the CREATESTRUCT cs</span></span><br><span class="line">	cs.cx = <span class="number">630</span>;</span><br><span class="line">	cs.cy = <span class="number">680</span>;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> TRUE;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>接下来画钟面上的格子。用MoveTo和LineTo确定线段起始点和终点。我用了一个比较蠢的方法：手算坐标！于是，产生了这样的代码：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> CClockView::OnDraw(CDC* pDC)</span><br><span class="line">&#123;</span><br><span class="line">	CClockDoc* pDoc = GetDocument();</span><br><span class="line">	ASSERT_VALID(pDoc);</span><br><span class="line">	<span class="comment">// <span class="doctag">TODO:</span> add draw code for native data here</span></span><br><span class="line">	<span class="function">CClientDC <span class="title">dc</span><span class="params">(<span class="keyword">this</span>)</span></span>;</span><br><span class="line">	dc.Ellipse(CRect(<span class="number">100</span>,<span class="number">100</span>,<span class="number">500</span>,<span class="number">500</span>));</span><br><span class="line">	<span class="comment">//上</span></span><br><span class="line">	dc.MoveTo(<span class="number">300</span>,<span class="number">140</span>);</span><br><span class="line">	dc.LineTo(<span class="number">300</span>,<span class="number">100</span>);</span><br><span class="line">	<span class="comment">//下</span></span><br><span class="line">	dc.MoveTo(<span class="number">300</span>,<span class="number">460</span>);</span><br><span class="line">	dc.LineTo(<span class="number">300</span>,<span class="number">500</span>);</span><br><span class="line">	<span class="comment">//左</span></span><br><span class="line">	dc.MoveTo(<span class="number">140</span>,<span class="number">300</span>);</span><br><span class="line">	dc.LineTo(<span class="number">100</span>,<span class="number">300</span>);</span><br><span class="line">	<span class="comment">//右</span></span><br><span class="line">	dc.MoveTo(<span class="number">460</span>,<span class="number">300</span>);</span><br><span class="line">	dc.LineTo(<span class="number">500</span>,<span class="number">300</span>);</span><br><span class="line">	<span class="comment">//第一区间第二点</span></span><br><span class="line">	dc.MoveTo(<span class="number">380</span>,<span class="number">300</span><span class="number">-80</span>*<span class="number">1.73</span>);</span><br><span class="line">	dc.LineTo(<span class="number">400</span>,<span class="number">300</span><span class="number">-100</span>*<span class="number">1.73</span>);</span><br><span class="line">	<span class="comment">//第一区间第三点</span></span><br><span class="line">	dc.MoveTo(<span class="number">300</span>+<span class="number">80</span>*<span class="number">1.73</span>,<span class="number">220</span>);</span><br><span class="line">	dc.LineTo(<span class="number">300</span>+<span class="number">100</span>*<span class="number">1.73</span>,<span class="number">200</span>);</span><br><span class="line">	<span class="comment">//第二区间第二点</span></span><br><span class="line">	dc.MoveTo(<span class="number">300</span>+<span class="number">80</span>*<span class="number">1.73</span>,<span class="number">380</span>);</span><br><span class="line">	dc.LineTo(<span class="number">300</span>+<span class="number">100</span>*<span class="number">1.73</span>,<span class="number">400</span>);</span><br><span class="line">	<span class="comment">//第二区间第三点</span></span><br><span class="line">	dc.MoveTo(<span class="number">380</span>,<span class="number">300</span>+<span class="number">80</span>*<span class="number">1.73</span>);</span><br><span class="line">	dc.LineTo(<span class="number">400</span>,<span class="number">300</span>+<span class="number">100</span>*<span class="number">1.73</span>);</span><br><span class="line">	<span class="comment">//第三区间第二点</span></span><br><span class="line">	dc.MoveTo(<span class="number">220</span>,<span class="number">300</span>+<span class="number">80</span>*<span class="number">1.73</span>);</span><br><span class="line">	dc.LineTo(<span class="number">200</span>,<span class="number">300</span>+<span class="number">100</span>*<span class="number">1.73</span>);</span><br><span class="line">	<span class="comment">//第三区间第三点</span></span><br><span class="line">	dc.MoveTo(<span class="number">300</span><span class="number">-80</span>*<span class="number">1.73</span>,<span class="number">380</span>);</span><br><span class="line">	dc.LineTo(<span class="number">300</span><span class="number">-100</span>*<span class="number">1.73</span>,<span class="number">400</span>);</span><br><span class="line">	<span class="comment">//第四区间第二点</span></span><br><span class="line">	dc.MoveTo(<span class="number">300</span><span class="number">-80</span>*<span class="number">1.73</span>,<span class="number">220</span>);</span><br><span class="line">	dc.LineTo(<span class="number">300</span><span class="number">-100</span>*<span class="number">1.73</span>,<span class="number">200</span>);</span><br><span class="line">	<span class="comment">//第四区间第三点</span></span><br><span class="line">	dc.MoveTo(<span class="number">220</span>,<span class="number">300</span><span class="number">-80</span>*<span class="number">1.73</span>);</span><br><span class="line">	dc.LineTo(<span class="number">200</span>,<span class="number">300</span><span class="number">-100</span>*<span class="number">1.73</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>[连三角函数都近似等于的我……等会儿会谈优化问题]</p>
<p>效果是这样：<br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20170423165107245?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述" title="">
                </div>
                <div class="image-caption">这里写图片描述</div>
            </figure></p>
<p>在视类添加ＷＭ_CREATE响应函数，设置一个定时器，1秒发送一次消息。<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> CClockView::OnCreate(LPCREATESTRUCT lpCreateStruct) </span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">if</span> (CView::OnCreate(lpCreateStruct) == <span class="number">-1</span>)</span><br><span class="line">		<span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">	</span><br><span class="line">	<span class="comment">// <span class="doctag">TODO:</span> Add your specialized creation code here</span></span><br><span class="line">	SetTimer(<span class="number">1</span>, <span class="number">1000</span>, <span class="literal">NULL</span>);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>因为指针是在动的，所以要及时刷新页面，在视类添加WM_TIMER响应函数：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> CClockView::OnTimer(UINT nIDEvent) </span><br><span class="line">&#123;</span><br><span class="line">	<span class="comment">// <span class="doctag">TODO:</span> Add your message handler code here and/or call default</span></span><br><span class="line">	InvalidateRect(<span class="literal">NULL</span>, TRUE);</span><br><span class="line">	UpdateWindow();</span><br><span class="line"></span><br><span class="line">	CView::OnTimer(nIDEvent);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>为了和系统时间一致，就要获取时间，在OnDraw中加入：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">CTime Time = CTime::GetCurrentTime();</span><br></pre></td></tr></table></figure></p>
<p>接下来就是创建三个指针：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">double</span> Radians;</span><br><span class="line"></span><br><span class="line"><span class="comment">//时针</span></span><br><span class="line">Radians = Time.GetHour() + Time.GetMinute()/<span class="number">60.0</span> + Time.GetSecond()/<span class="number">3600.0</span>;</span><br><span class="line">Radians *= <span class="number">2</span> * <span class="number">3.14</span> / <span class="number">12.0</span>;</span><br><span class="line">dc.MoveTo(<span class="number">300</span>, <span class="number">300</span>);</span><br><span class="line">dc.LineTo(<span class="number">300</span> + (<span class="keyword">int</span>)((<span class="keyword">double</span>)<span class="number">100</span> * <span class="built_in">sin</span>(Radians)), <span class="number">300</span> - (<span class="keyword">int</span>)((<span class="keyword">double</span>)<span class="number">100</span> * <span class="built_in">cos</span>(Radians)));  <span class="comment">//取半径的1/2</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//分针</span></span><br><span class="line">Radians = Time.GetMinute() + Time.GetSecond()/<span class="number">60</span>;</span><br><span class="line">Radians *= <span class="number">2</span> * <span class="number">3.14</span> / <span class="number">60.0</span>;</span><br><span class="line">dc.MoveTo(<span class="number">300</span>, <span class="number">300</span>);</span><br><span class="line">dc.LineTo(<span class="number">300</span> + (<span class="keyword">int</span>)((<span class="keyword">double</span>)<span class="number">150</span> * <span class="built_in">sin</span>(Radians)), <span class="number">300</span> - (<span class="keyword">int</span>)((<span class="keyword">double</span>)<span class="number">150</span> * <span class="built_in">cos</span>(Radians)));	<span class="comment">//取半径的3/4</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//秒针</span></span><br><span class="line">Radians = Time.GetSecond();</span><br><span class="line">Radians *= <span class="number">2</span> * <span class="number">3.14</span> / <span class="number">60.0</span>;</span><br><span class="line">dc.MoveTo(<span class="number">300</span>, <span class="number">300</span>);</span><br><span class="line">dc.LineTo(<span class="number">300</span> + (<span class="keyword">int</span>)((<span class="keyword">double</span>)<span class="number">190</span> * <span class="built_in">sin</span>(Radians)), <span class="number">300</span> - (<span class="keyword">int</span>)((<span class="keyword">double</span>)<span class="number">190</span> * <span class="built_in">cos</span>(Radians))); <span class="comment">//取半径的19/20</span></span><br></pre></td></tr></table></figure></p>
<p>为了三角函数能用，在函数头部添加<code>#include &quot;math.h&quot;</code>。<br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20170423180359516?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述" title="">
                </div>
                <div class="image-caption">这里写图片描述</div>
            </figure></p>
<p>美化界面：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">BOOL CClockApp::InitInstance()</span><br><span class="line">&#123;</span><br><span class="line">…</span><br><span class="line">	m_pMainWnd-&gt;SetWindowText(<span class="string">"博靖牌时钟 V1.0"</span>);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> TRUE;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>隐藏菜单、状态栏、工具条：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> CMainFrame::OnCreate(LPCREATESTRUCT lpCreateStruct)</span><br><span class="line">&#123;</span><br><span class="line">	…</span><br><span class="line">	</span><br><span class="line">	SetMenu(<span class="literal">NULL</span>); <span class="comment">//隐藏菜单  </span></span><br><span class="line">    ShowControlBar(&amp;m_wndToolBar,FALSE,FALSE); <span class="comment">//隐藏工具条  </span></span><br><span class="line">    ShowControlBar(&amp;m_wndStatusBar,FALSE,FALSE); <span class="comment">//隐藏状态栏  </span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>效果：<br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20170423202811199?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述" title="">
                </div>
                <div class="image-caption">这里写图片描述</div>
            </figure></p>
<p>详解：<br>InvalidateRect是一个函数，该函数向指定的窗体更新区域添加一个矩形，然后窗口客户区域的这一部分将被重新绘制。</p>
<p>ShowControlBar：<br>void ShowControlBar(CControlBar* pBar,BOOL bShow,Bool bDelay);<br>参数：<br>pBar 指向要显示或隐含的控件条<br>bShow 如果为TRUE ,指定控件条将显示；如果为FALSE，则隐藏。<br>bDelay 如果为TRUE，延迟显示控件条；如果为FALSE,则立即显示<br>说明：<br>调用该函数显示或隐藏一个控件条。</p>
<p>缺点：1.不能修改指针和线条样式（例如颜色、粗细等）。<br>2.窗口拉伸后，钟面不能随窗口拉伸。</p>
<p>改进版：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> CClock2View::OnDraw(CDC* pDC)</span><br><span class="line">&#123;</span><br><span class="line">	CClock2Doc* pDoc = GetDocument();</span><br><span class="line">	ASSERT_VALID(pDoc);</span><br><span class="line">	<span class="comment">// <span class="doctag">TODO:</span> add draw code for native data here</span></span><br><span class="line">	CRect r1;  </span><br><span class="line">    GetClientRect(&amp;r1);</span><br><span class="line">	</span><br><span class="line">	CTime Time = CTime::GetCurrentTime();  </span><br><span class="line">	</span><br><span class="line">	<span class="comment">//创建画笔</span></span><br><span class="line">	CPen pen(PS_SOLID, 10, RGB(139, 115, 8));  </span><br><span class="line">	CPen *pOldPen = pDC-&gt;SelectObject(&amp;pen);  </span><br><span class="line">	</span><br><span class="line">	<span class="comment">//创建钟面</span></span><br><span class="line">	pDC-&gt;Ellipse(CRect(<span class="number">30</span>, <span class="number">30</span>, r1.right<span class="number">-30</span>, r1.bottom<span class="number">-30</span>));</span><br><span class="line">	CPoint pt = r1.CenterPoint();</span><br><span class="line">	pDC-&gt;SetTextColor(RGB(<span class="number">255</span>,<span class="number">0</span>,<span class="number">0</span>));  </span><br><span class="line">	CString strNumber;</span><br><span class="line">	CSize size;</span><br><span class="line">	<span class="keyword">double</span> Radians;</span><br><span class="line"></span><br><span class="line">	<span class="comment">//设置钟面数字</span></span><br><span class="line">	 <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">12</span>; i++)  </span><br><span class="line">    &#123;  </span><br><span class="line">        strNumber.Format(<span class="string">"%d"</span>,i);</span><br><span class="line">		Radians = (<span class="keyword">double</span>)i*<span class="number">2</span>*<span class="number">3.14</span>/<span class="number">12.0</span>; </span><br><span class="line">        size = pDC-&gt;GetTextExtent(strNumber,strNumber.GetLength());  </span><br><span class="line">		<span class="comment">//计算钟点放置位置 </span></span><br><span class="line">		<span class="comment">//x = CenterX - (size.cx/2) + (int)((double)(CenterX - 20) * sin(Radians));  </span></span><br><span class="line">        <span class="comment">//y = CenterY - (size.cy/2) - (int)((double)(CenterY - 20) * cos(Radians));  </span></span><br><span class="line"></span><br><span class="line">		<span class="keyword">double</span> x = pt.x - (size.cx/<span class="number">2</span>) + (<span class="keyword">int</span>)((<span class="keyword">double</span>)(pt.x - <span class="number">70</span>) * <span class="built_in">sin</span>(Radians));  </span><br><span class="line">		<span class="keyword">double</span> y = pt.y - (size.cy/<span class="number">2</span>) - (<span class="keyword">int</span>)((<span class="keyword">double</span>)(pt.y - <span class="number">70</span>) * <span class="built_in">cos</span>(Radians));  </span><br><span class="line"></span><br><span class="line">         </span><br><span class="line">       <span class="comment">//double x = pt.x + (double)(r1.right - 50 - pt.x) * sin(Radians);  </span></span><br><span class="line">       <span class="comment">//double y = pt.y - (double)(r1.bottom - 60 - pt.y) * cos(Radians);  </span></span><br><span class="line">        pDC-&gt;TextOut(x, y, strNumber);</span><br><span class="line"></span><br><span class="line">    &#125;  </span><br><span class="line"> 		</span><br><span class="line">	<span class="comment">//设置钟面上的格子</span></span><br><span class="line">		</span><br><span class="line">	 <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= <span class="number">12</span>; j++)  </span><br><span class="line">    &#123;  </span><br><span class="line">		Radians = (<span class="keyword">double</span>)j*<span class="number">2</span>*<span class="number">3.14</span>/<span class="number">12.0</span>; 	</span><br><span class="line">        <span class="keyword">int</span> x = pt.x  + (<span class="keyword">int</span>)((<span class="keyword">double</span>)(pt.x - <span class="number">30</span>) * <span class="built_in">sin</span>(Radians));  </span><br><span class="line">		<span class="keyword">int</span> y = pt.y  - (<span class="keyword">int</span>)((<span class="keyword">double</span>)(pt.y - <span class="number">30</span>) * <span class="built_in">cos</span>(Radians));  </span><br><span class="line">		<span class="keyword">int</span> m = pt.x  + (<span class="keyword">int</span>)((<span class="keyword">double</span>)(pt.x - <span class="number">50</span>) * <span class="built_in">sin</span>(Radians));  </span><br><span class="line">		<span class="keyword">int</span> n = pt.y  - (<span class="keyword">int</span>)((<span class="keyword">double</span>)(pt.y - <span class="number">50</span>) * <span class="built_in">cos</span>(Radians));  </span><br><span class="line">		pDC-&gt;MoveTo(m, n);</span><br><span class="line">		pDC-&gt;LineTo(x, y);</span><br><span class="line">		</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">//时针</span></span><br><span class="line">	 CPen HourPen(PS_SOLID, 6, RGB(255, 20, 147));  </span><br><span class="line">    pDC-&gt;SelectObject(&amp;HourPen);  </span><br><span class="line">	Radians = Time.GetHour() + Time.GetMinute()/<span class="number">60.0</span> + Time.GetSecond()/<span class="number">3600.0</span>;</span><br><span class="line">	Radians *= <span class="number">2</span> * <span class="number">3.14</span> / <span class="number">12.0</span>;</span><br><span class="line">	pDC-&gt;MoveTo(pt.x, pt.y);  </span><br><span class="line">    pDC-&gt;LineTo(pt.x + (<span class="keyword">int</span>)((<span class="keyword">double</span>)(pt.x/<span class="number">3</span>) * <span class="built_in">sin</span>(Radians)), pt.y - (<span class="keyword">int</span>)((<span class="keyword">double</span>)(pt.y/<span class="number">3</span>) * <span class="built_in">cos</span>(Radians)));  </span><br><span class="line"></span><br><span class="line">	<span class="comment">//分针</span></span><br><span class="line">	CPen MinPen(PS_SOLID, 4, RGB(78, 238, 148));  </span><br><span class="line">    pDC-&gt;SelectObject(&amp;MinPen);  </span><br><span class="line">	Radians = Time.GetMinute() + Time.GetSecond()/<span class="number">60</span>;</span><br><span class="line">	Radians *= <span class="number">2</span> * <span class="number">3.14</span> / <span class="number">60.0</span>;</span><br><span class="line">	pDC-&gt;MoveTo(pt.x, pt.y);  </span><br><span class="line">    pDC-&gt;LineTo(pt.x + (<span class="keyword">int</span>)((<span class="keyword">double</span>)(pt.y*<span class="number">1</span>/<span class="number">2</span>) * <span class="built_in">sin</span>(Radians)), pt.y - (<span class="keyword">int</span>)((<span class="keyword">double</span>)(pt.y*<span class="number">1</span>/<span class="number">2</span>) * <span class="built_in">cos</span>(Radians)));  </span><br><span class="line"></span><br><span class="line">	<span class="comment">//秒针</span></span><br><span class="line">	CPen SecPen(PS_SOLID, 2, RGB(0, 0, 205));  </span><br><span class="line">    pDC-&gt;SelectObject(&amp;SecPen); </span><br><span class="line">	Radians = Time.GetSecond();</span><br><span class="line">	Radians *= <span class="number">2</span> * <span class="number">3.14</span> / <span class="number">60.0</span>;</span><br><span class="line">	pDC-&gt;MoveTo(pt.x, pt.y);  </span><br><span class="line">    pDC-&gt;LineTo(pt.x + (<span class="keyword">int</span>)((<span class="keyword">double</span>)(pt.x*<span class="number">2</span>/<span class="number">3</span>) * <span class="built_in">sin</span>(Radians)), pt.y - (<span class="keyword">int</span>)((<span class="keyword">double</span>)(pt.y*<span class="number">2</span>/<span class="number">3</span>) * <span class="built_in">cos</span>(Radians)));  </span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>详解：<br>弧长公式：时针：α=l/r=(2πr/12)/r=2π/12  分针、秒针同理。<br>GetTextExtent<br>函数功能：使用该函数获得所选字体中指定字符串的高度和宽度<br>函数原型一：CSize GetTextExtent(LPCTSTR lpszString, int nCount) const；<br>参数：<br>lpszString是字符串的指针，也可以用CString 对象<br>nCount是指字符串的长度<br>函数原型二： CSize GetTextExtent( const CString&amp; str) const;<br>参数：<br>str是一个字符串对象，包含指定的字符。<br>返回值：<br>以逻辑单位返回字符串的尺寸，保存在一个CSize对象中。</p>
<p>TextOut，函数名。该函数用当前选择的字体、背景颜色和正文颜色将一个字符串写到指定位置。</p>
<p>效果：<br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20170424220400837?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述" title="">
                </div>
                <div class="image-caption">这里写图片描述</div>
            </figure></p>
<p>值得改进处：<br>1.每秒刷新时整个频幕闪动较大。<br>2.可以突出12、3、6、9的格子长度。<br>3.调整数字的大小和字体。<br>4.指针做的更美观，考虑用位图或图片替代。</p>
]]></content>
      
        <categories>
            
            <category> 互联网 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> CPP </tag>
            
            <tag> MFC </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[折腾才是人生]]></title>
      <url>https://hubojing.github.io/2017/04/21/%E6%8A%98%E8%85%BE%E6%89%8D%E6%98%AF%E4%BA%BA%E7%94%9F/</url>
      <content type="html"><![CDATA[<div align="left"><br><img src="https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1492716014892&di=39eb7cb27e728bbbea6be20b6d2501c8&imgtype=0&src=http%3A%2F%2Fjrsh.hangzhou.com.cn%2Fsale%2Fcontent%2Fattachement%2Fjpg%2Fsite2%2F20151215%2F90b11c6dae5a17da23d850.jpg" width="300" height="180" style="float:right;"><br><br> 　　其实是一篇吐槽贴和一个标准的Flag。<br>　　<br><br><br> </div>

<a id="more"></a>
<p>　　虽然现在天色已深，哦，应该说是凌晨了，明天还要早起。但！我真的还是想吐槽……</p>
<p>　　一篇文章怎么可以没有目录？ 啊？啊？啊？ 要我一篇上万字的文章怎么翻…… （于是抛弃了yilia,hueman）<br>（认真脸：我试过给hueman加目录的，一个toc函数，明明很简单的样子……然后就把主题玩崩了，其实要还原还是可以的，只是我对没目录的怨念很深呐）</p>
<p>　　为什么每一种主题评论的格式都不能统一一下……我终于找到每换一次主题就丢评论的解决方法了……（虽然数据量有点庞大，周末看有没有时间搞定）</p>
<p>　　为什么换个主题，不蒜子计数就从头开始！（尤其是近期更换频繁）现在都打算不显示点击数（网站点击和每篇文章浏览量）了（几千的点击噢，好气）……（百度统计什么的用过，然而还是直接显示出来方便（主要是显得网站有人气哈哈哈）其实到底有几个人看，无所谓啦~）</p>
<p>　　快五月了，好愁，多说到底用什么替换？？</p>
<p>　　另外，真的，图床贴图还没有CSDN博客上图来得方便。（比如刚才上传三十几张图，要是图床的话自己要不停复制外链，那效率可想而知。）</p>
<p>　　综上所述，<br>　　<strong>这都是自己不会写主题的后果！！！</strong></p>
<p>　　Flag: 　　<br>　　现在不敢说完全独立写一个主题出来（主要是时间、精力、学习工作、学习方向的问题），毕竟博客以文章质量为主，但我希望今年能修改出自己满意的样子来……</p>
]]></content>
      
        <categories>
            
            <category> 杂谈 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 杂谈 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[MFC傻瓜式教程]]></title>
      <url>https://hubojing.github.io/2017/04/13/MFC%E5%82%BB%E7%93%9C%E5%BC%8F%E6%95%99%E7%A8%8B/</url>
      <content type="html"><![CDATA[<div align="left"><br><img src="http://img.blog.csdn.net/20170413231922633?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" width="300" height="180" style="float:right;"><br><br> </div>



<p>　　<br>　　<strong>本教程重操作，轻理论，为操作减负。需了解详细原理的朋友可以自行看各种书籍。</strong><br>　　<strong>直接上菜。</strong></p>
<a id="more"></a>
<p>MFC：Microsoft Foundation Class ，微软基础类库。</p>
<h1 id="对话框"><a href="#对话框" class="headerlink" title="对话框"></a>对话框</h1><h2 id="对话框的创建和显示"><a href="#对话框的创建和显示" class="headerlink" title="对话框的创建和显示"></a>对话框的创建和显示</h2><ol>
<li>新建MFC AppWizard(exe)工程，单文档类型。工程名：Mybole。编译运行。<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20170413231922633?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="新建" title="">
                </div>
                <div class="image-caption">新建</div>
            </figure></li>
<li><p>点击帮助-关于Mybole。这是MFC自动创建的。</p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20170413231954758?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="关于" title="">
                </div>
                <div class="image-caption">关于</div>
            </figure>
</li>
<li><p>创建自己的对话框。点击Insert-Resource。选择Dialog，点击New。VC++自动将其标识设置为IDD_DIALOG1，并自动添加到ResourceView-Dialog项中。Dialog项下还有一个对话框资源标识：IDD_ABOUTBOX，即上一步中的“关于”对话框。</p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20170413232035196?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="Insert Resource对话框" title="">
                </div>
                <div class="image-caption">Insert Resource对话框</div>
            </figure>
</li>
</ol>
<p> <img src="http://img.blog.csdn.net/20170413232222055?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="新建的对话框资源"></p>
<ol start="4">
<li>选中对话框本身，右键点击属性。将Caption设置为“测试”。</li>
<li>选择View-ClassWizard，点击create a new class，OK。出现下图，并输入下图选项。<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20170413232907845?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="New Class" title="">
                </div>
                <div class="image-caption">New Class</div>
            </figure></li>
<li>在随后出现的MFC ClassWizard对话框上点击OK。<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20170413233804513?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="列表" title="">
                </div>
                <div class="image-caption">列表</div>
            </figure>
<strong>注意</strong>：看看左侧类列表中是否添加好了CTestDlg，否则会影响后续操作。</li>
</ol>
<p>接下来，我们希望在程序中显示这个对话窗口。</p>
<ol start="7">
<li><p>点击右侧菜单Menu，选中IDR_MAINFRAME。点击帮助旁边的虚线框。</p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20170413233914861?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="Menu" title="">
                </div>
                <div class="image-caption">Menu</div>
            </figure>
</li>
<li><p>对虚线框右键属性，修改为下图。</p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20170413234011986?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="属性" title="">
                </div>
                <div class="image-caption">属性</div>
            </figure>
</li>
<li><p>关闭属性。点击View-ClassWizard（中文是建立类向导），选择CMyboleView，用COMMAND命令消息响应函数。如图。</p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20170414000004060?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="COMMAND" title="">
                </div>
                <div class="image-caption">COMMAND</div>
            </figure>
</li>
</ol>
<h3 id="模态对话框的创建"><a href="#模态对话框的创建" class="headerlink" title="模态对话框的创建"></a>模态对话框的创建</h3><p>　　需要调用CDialog类的成员函数：DoModal，它能创建并显示一个模态对话框，其返回值将作为CDialog类的另一个成员函数：EndDialog的参数，后者功能是关闭模态对话框。</p>
<p>　　在FileView中选择MyboleView.cpp，编写程序。<br>　　记得在开头添加头文件 #include “testdlg.h” （头文件大小写问题，linux区分，windows不区分）<br> <figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20170414000303079?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="编程" title="">
                </div>
                <div class="image-caption">编程</div>
            </figure><br>　　显示模态对话框的具体实现代码：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> CMyboleView::OnDialog() </span><br><span class="line">&#123;</span><br><span class="line">	<span class="comment">// <span class="doctag">TODO:</span> Add your command handler code here</span></span><br><span class="line">	CTestDlg dlg;</span><br><span class="line">	dlg.DoModal();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>编译运行，点击对话框。会发现若不确认该窗口，将无法点击其他窗口。<br> <figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20170414000500779?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="模态对话框1" title="">
                </div>
                <div class="image-caption">模态对话框1</div>
            </figure></p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20170414000612202?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="模态对话框2" title="">
                </div>
                <div class="image-caption">模态对话框2</div>
            </figure>
<h3 id="非模态对话框的创建"><a href="#非模态对话框的创建" class="headerlink" title="非模态对话框的创建"></a>非模态对话框的创建</h3><p>将上面的模态对话框代码注释掉。</p>
<p>改为：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> CMyboleView::OnDialog() </span><br><span class="line">&#123;</span><br><span class="line">	<span class="comment">// <span class="doctag">TODO:</span> Add your command handler code here</span></span><br><span class="line">	<span class="comment">//CTestDlg dlg;</span></span><br><span class="line">	<span class="comment">//dlg.DoModal();</span></span><br><span class="line"></span><br><span class="line">	CTestDlg *pDlg = <span class="keyword">new</span> CTestDlg;</span><br><span class="line">	pDlg-&gt;Create(IDD_DIALOG1,<span class="keyword">this</span>);</span><br><span class="line">	pDlg-&gt;ShowWindow(SW_SHOW);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p><strong>注意</strong>：需要把之前运行的对话框关掉才能编译成功。</p>
<p>然而，当它生命周期结束时，所保存的内存地址就丢失了，那么程序中也就无法再引用到它所指向的那块内存。于是，我们这样解决该问题。<br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20170414000901869?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="MFC ClassWizard" title="">
                </div>
                <div class="image-caption">MFC ClassWizard</div>
            </figure></p>
<p><strong>注意</strong>：Message里双击添加函数或者点击add Class…</p>
<p>void CTestDlg::PostNcDestroy()<br>{<br>    // TODO: Add your specialized code here and/or call the base class<br>    delete this;<br>    CDialog::PostNcDestroy();<br>}</p>
<p><strong>区别</strong>：点击确定，对话框都会消失。但是，模态对话框窗口对象被销毁了。对非模态对话框来说，只是隐藏起来了，并未被销毁。<br>因此，若要销毁对话框，若有一个ID为IDOK的按钮，就必须重写基类的OnOK这个虚函数，并在重写的函数中调用DestroyWindow函数，完成销毁。并不要再调用基类的OnOK函数。<br>同样地，若有一个ID为IDCANCEL的按钮，也必须重写基类的OnCancel虚函数，并在重写的函数中调用DestroyWindow函数，完成销毁。并不要再调用基类的OnCancel函数。</p>
<h1 id="动态创建按钮"><a href="#动态创建按钮" class="headerlink" title="动态创建按钮"></a>动态创建按钮</h1><p>注释掉非模态对话框代码，还原模态对话框代码。</p>
<p>点击ResourceView-IDD_DIALOG1，打开资源，用鼠标拖出控件面板上的Button按钮控件，对按钮右键，选择属性，设置如下。<br> <figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20170414001008658?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="按钮" title="">
                </div>
                <div class="image-caption">按钮</div>
            </figure></p>
<p>接下来，我们实现当单击Add按钮时，在对话框中动态创建一个按钮这一功能。</p>
<ol>
<li>为CTestDlg类添加一个私有的CButton成员变量。<br>　　点击ClassView标签页右键，如图点击。<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20170414001252061?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="ClassView" title="">
                </div>
                <div class="image-caption">ClassView</div>
            </figure>
</li>
</ol>
<p>　　填入信息。<br> <figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20170414001335972?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="添加成员变量" title="">
                </div>
                <div class="image-caption">添加成员变量</div>
            </figure></p>
<ol start="2">
<li>添加Add按钮单击消息的响应函数。<br>　　按钮点右键，选ClassWizard（建立类向导），如图。<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20170414001137294?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="建立类向导" title="">
                </div>
                <div class="image-caption">建立类向导</div>
            </figure>
</li>
</ol>
<p>　　单击Edit Code，即可定位到该函数定义处。<br>　　添加一下代码：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> CTestDlg::OnBtnAdd() </span><br><span class="line">&#123;</span><br><span class="line">	<span class="comment">// <span class="doctag">TODO:</span> Add your control notification handler code here</span></span><br><span class="line">	m_btn.Create(<span class="string">"New"</span>,BS_DEFPUSHBUTTON | WS_VISIBLE | WS_CHILD,</span><br><span class="line">				 CRect(<span class="number">0</span>,<span class="number">0</span>,<span class="number">100</span>,<span class="number">100</span>),<span class="keyword">this</span>,<span class="number">123</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>　　为避免多次点击Add出现非法操作，我们需要进行如下步骤。</p>
<ol start="3">
<li><p>为CTestDlg类增加一个私有的BOOL类型成员变量。<br>变量类型：BOOL<br>变量名称：m_bIsCreated<br>Access: private</p>
</li>
<li><p>在TestDlg.cpp中找到构造函数，将m_bIsCreated初始为FALSE。如图所示。</p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20170415152155489?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述" title="">
                </div>
                <div class="image-caption">这里写图片描述</div>
            </figure>
</li>
</ol>
<p>　　或者改为如下亦可。<br>Static BOOL bIsCreated = FALSE;</p>
<ol start="5">
<li>回到Add，双击它，进入代码部分，改之。<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> CTestDlg::OnBtnAdd() </span><br><span class="line">&#123;</span><br><span class="line">	<span class="comment">// <span class="doctag">TODO:</span> Add your control notification handler code here</span></span><br><span class="line">	<span class="keyword">if</span>(m_bIsCreated==FALSE)</span><br><span class="line">	&#123;</span><br><span class="line">	m_btn.Create(<span class="string">"New"</span>,BS_DEFPUSHBUTTON | WS_VISIBLE | WS_CHILD,</span><br><span class="line">				CRect(<span class="number">0</span>,<span class="number">0</span>,<span class="number">100</span>,<span class="number">100</span>),<span class="keyword">this</span>,<span class="number">123</span>);</span><br><span class="line">	m_bIsCreated = TRUE;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">	&#123;</span><br><span class="line">		m_btn.DestroyWindow();</span><br><span class="line">		m_bIsCreated = FALSE;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ol>
<p>　　或者以下亦能实现。<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> CTestDlg::OnBtnAdd() </span><br><span class="line">&#123;</span><br><span class="line">	<span class="comment">// <span class="doctag">TODO:</span> Add your control notification handler code here</span></span><br><span class="line">	<span class="keyword">if</span>(!m_btn.m_hWnd)</span><br><span class="line">	&#123;</span><br><span class="line">	m_btn.Create(<span class="string">"New"</span>,BS_DEFPUSHBUTTON | WS_VISIBLE | WS_CHILD,</span><br><span class="line">				CRect(<span class="number">0</span>,<span class="number">0</span>,<span class="number">100</span>,<span class="number">100</span>),<span class="keyword">this</span>,<span class="number">123</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">	&#123;</span><br><span class="line">		m_btn.DestroyWindow();</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>　　效果：<br>　　<img src="http://img.blog.csdn.net/20170415152224880?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<p>　　点击Add出现New窗口，再点击就销毁。</p>
<h2 id="控件的访问"><a href="#控件的访问" class="headerlink" title="控件的访问"></a>控件的访问</h2><h3 id="控件的调整"><a href="#控件的调整" class="headerlink" title="控件的调整"></a>控件的调整</h3><p>用Layout-Align，Layout-Make Same Size，Layout-Space Evenly里的选项进行调整。<br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20170415152247131?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述" title="">
                </div>
                <div class="image-caption">这里写图片描述</div>
            </figure></p>
<h3 id="静态文本控件"><a href="#静态文本控件" class="headerlink" title="静态文本控件"></a>静态文本控件</h3><p>　　查看三个静态文本框，它们ID相同。我们可以更改第一个静态文本框ID为IDC_NUMBER1，再打开ClassWizard，可以在ObjectIDs看到新ID。<br> <figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20170415152324147?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述" title="">
                </div>
                <div class="image-caption">这里写图片描述</div>
            </figure><br>　　对BN_CLICKED进行Add Function，并Edit Code:</p>
<p>　　此时运行程序点击第一个静态文本框并没有反应。这是因为：<strong>静态文本控件在默认状态下是不发送通告消息的</strong>。</p>
<p>　　为了该控件能向父窗口发送鼠标事件，我们对该文本框右键-属性，切换到styles选项卡，勾上Notify。<br> <figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20170415152341882?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述" title="">
                </div>
                <div class="image-caption">这里写图片描述</div>
            </figure></p>
<p>　　现在可以显示了：<br>　　点击就改变。<br> <figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20170415152354773?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述" title="">
                </div>
                <div class="image-caption">这里写图片描述</div>
            </figure></p>
<p>　　<strong>总结：为了使一个静态文本控件能够响应鼠标单击消息，那么需要进行两个特殊的步骤：第一步，改变它的ID；第二步，在它的属性对话框中选中Notify选项。</strong></p>
<h3 id="编辑框控件"><a href="#编辑框控件" class="headerlink" title="编辑框控件"></a>编辑框控件</h3><p>利用上面的对话框实现这样的功能：在前两个编辑框中分别输入一个数字，然后单击Add按钮，对前两个编辑框中的数字求和，并将结果显示在第三个编辑框中。</p>
<h4 id="第一种方式"><a href="#第一种方式" class="headerlink" title="第一种方式"></a>第一种方式</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> CTestDlg::OnBtnAdd() </span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">int</span> num1, num2, num3; </span><br><span class="line">	<span class="keyword">char</span> ch1[<span class="number">10</span>], ch2[<span class="number">10</span>], ch3[<span class="number">10</span>]; </span><br><span class="line">	GetDlgItem(IDC_EDIT1)-&gt;GetWindowText(ch1,<span class="number">10</span>); </span><br><span class="line">	GetDlgItem(IDC_EDIT2)-&gt;GetWindowText(ch2,<span class="number">10</span>);</span><br><span class="line"></span><br><span class="line">	num1 = atoi(ch1); </span><br><span class="line">	num2 = atoi(ch2); </span><br><span class="line">	num3 = num1 + num2; </span><br><span class="line"></span><br><span class="line">	itoa(num3,ch3,<span class="number">10</span>);</span><br><span class="line">	GetDlgItem(IDC_EDIT3)-&gt;SetWindowText(ch3);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>C语言转换函数：atoi 将一个由数字组成的字符串转换为相应的数值<br>itoa 数值转换为文本<br>itoa函数的第三个参数表示转换的进制，数字10表示十进制。</p>
<p>效果：<br> <figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20170415152409742?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述" title="">
                </div>
                <div class="image-caption">这里写图片描述</div>
            </figure></p>
<h4 id="第二种方式"><a href="#第二种方式" class="headerlink" title="第二种方式"></a>第二种方式</h4><p>　　代码如下：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> CTestDlg::OnBtnAdd() </span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">int</span> num1, num2, num3; </span><br><span class="line">	<span class="keyword">char</span> ch1[<span class="number">10</span>], ch2[<span class="number">10</span>], ch3[<span class="number">10</span>]; </span><br><span class="line">	<span class="comment">//GetDlgItem(IDC_EDIT1)-&gt;GetWindowText(ch1,10); </span></span><br><span class="line">	<span class="comment">//GetDlgItem(IDC_EDIT2)-&gt;GetWindowText(ch2,10);</span></span><br><span class="line">	</span><br><span class="line">	GetDlgItemText(IDC_EDIT1,ch1,<span class="number">10</span>);</span><br><span class="line">	GetDlgItemText(IDC_EDIT2,ch2,<span class="number">10</span>);</span><br><span class="line"></span><br><span class="line">	num1 = atoi(ch1); </span><br><span class="line">	num2 = atoi(ch2); </span><br><span class="line">	num3 = num1 + num2; </span><br><span class="line"></span><br><span class="line">	itoa(num3,ch3,<span class="number">10</span>);</span><br><span class="line">	<span class="comment">//GetDlgItem(IDC_EDIT3)-&gt;SetWindowText(ch3);</span></span><br><span class="line">	SetDlgItemText(IDC_EDIT3,ch3);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>　　GetDlgItemText 将返回对话框中指定ID的控件上的文本，相当于将上面的GetDlgItem和GetWindowText这两个函数功能组合起来了。<br>与之对应的是SetDlgItemText，用来设置对话框中指定ID的控件上的文本。</p>
<h4 id="第三种方式"><a href="#第三种方式" class="headerlink" title="第三种方式"></a>第三种方式</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> CTestDlg::OnBtnAdd() </span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">int</span> num1, num2, num3; </span><br><span class="line">	<span class="comment">//char ch1[10], ch2[10], ch3[10]; </span></span><br><span class="line">	<span class="comment">//GetDlgItem(IDC_EDIT1)-&gt;GetWindowText(ch1,10); </span></span><br><span class="line">	<span class="comment">//GetDlgItem(IDC_EDIT2)-&gt;GetWindowText(ch2,10);</span></span><br><span class="line">	</span><br><span class="line">	<span class="comment">//GetDlgItemText(IDC_EDIT1,ch1,10);</span></span><br><span class="line">	<span class="comment">//GetDlgItemText(IDC_EDIT2,ch2,10);</span></span><br><span class="line"></span><br><span class="line">	num1 = GetDlgItemInt(IDC_EDIT1);</span><br><span class="line">	num2 = GetDlgItemInt(IDC_EDIT2);</span><br><span class="line"></span><br><span class="line">	<span class="comment">//num1 = atoi(ch1); </span></span><br><span class="line">	<span class="comment">//num2 = atoi(ch2); </span></span><br><span class="line">	num3 = num1 + num2; </span><br><span class="line"></span><br><span class="line">	<span class="comment">//itoa(num3,ch3,10);</span></span><br><span class="line">	<span class="comment">//GetDlgItem(IDC_EDIT3)-&gt;SetWindowText(ch3);</span></span><br><span class="line">	<span class="comment">//SetDlgItemText(IDC_EDIT3,ch3);</span></span><br><span class="line">	SetDlgItemInt(IDC_EDIT3,num3);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="第四种方式"><a href="#第四种方式" class="headerlink" title="第四种方式"></a>第四种方式</h4><p>　　将这三个编辑框分别与对话框类的三个成员变量相关联，然后通过这些成员变量来检索和设置编辑框的文本，这是最简单的访问控件的方式。<br>打开ClassWizard对话框，切换到Member Variables选项卡，如图。<br> <figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20170415152431039?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述" title="">
                </div>
                <div class="image-caption">这里写图片描述</div>
            </figure><br>　　首先为IDC_EDIT1编辑框添加一个关联的成员变量，方法是在Control IDs列表中选中IDC_EDIT1，再单击Add Variable按钮，如图。<br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20170415152451118?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述" title="">
                </div>
                <div class="image-caption">这里写图片描述</div>
            </figure><br> <figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20170415152505259?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述" title="">
                </div>
                <div class="image-caption">这里写图片描述</div>
            </figure></p>
<p>　　同样地，为IDC_EDIT2和IDC_EDIT3分别添加好成员变量。<br>　　接着修改代码：</p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> CTestDlg::OnBtnAdd() </span><br><span class="line">&#123;</span><br><span class="line">	UpdateData();</span><br><span class="line">	m_num3 = m_num1 + m_num2;</span><br><span class="line">	UpdateData(FALSE);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>　　对编辑框控件中输入的数值设定一个范围：<br>　　打开ClassWizard-Member Variable，选中IDC_EDIT1，下方输入0和100。同样为IDC_EDIT2也设置好。<br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20170415152522025?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述" title="">
                </div>
                <div class="image-caption">这里写图片描述</div>
            </figure></p>
<h4 id="第五种方式"><a href="#第五种方式" class="headerlink" title="第五种方式"></a>第五种方式</h4><p>　　将编辑框控件再与一个变量相关联，代表控件本身。为IDC_EDIT1增加一个控件类型的变量：m_edit1，类别为Control。同样地，也为IDC_EDIT2和IDC_EDIT3添加。<br> <figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20170415152547447?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述" title="">
                </div>
                <div class="image-caption">这里写图片描述</div>
            </figure></p>
<p>　　修改代码：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> CTestDlg::OnBtnAdd() </span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">int</span> num1, num2, num3; </span><br><span class="line">	<span class="keyword">char</span> ch1[<span class="number">10</span>], ch2[<span class="number">10</span>], ch3[<span class="number">10</span>]; </span><br><span class="line">	</span><br><span class="line">	m_edit1.GetWindowText(ch1,<span class="number">10</span>);</span><br><span class="line">	m_edit2.GetWindowText(ch2,<span class="number">10</span>);</span><br><span class="line"></span><br><span class="line">	<span class="comment">//num1 = GetDlgItemInt(IDC_EDIT1);</span></span><br><span class="line">	<span class="comment">//num2 = GetDlgItemInt(IDC_EDIT2);</span></span><br><span class="line"></span><br><span class="line">	num1 = atoi(ch1); </span><br><span class="line">	num2 = atoi(ch2); </span><br><span class="line">	num3 = num1 + num2; </span><br><span class="line"></span><br><span class="line">	itoa(num3,ch3,<span class="number">10</span>);</span><br><span class="line">	m_edit3.SetWindowText(ch3);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h4 id="第六种方式"><a href="#第六种方式" class="headerlink" title="第六种方式"></a>第六种方式</h4><p>　　修改代码：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> CTestDlg::OnBtnAdd() </span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">int</span> num1, num2, num3; </span><br><span class="line">	<span class="keyword">char</span> ch1[<span class="number">10</span>], ch2[<span class="number">10</span>], ch3[<span class="number">10</span>]; </span><br><span class="line"></span><br><span class="line">	::SendMessage(GetDlgItem(IDC_EDIT1)-&gt;m_hWnd, WM_GETTEXT, <span class="number">10</span>, (LPARAM)ch1);</span><br><span class="line">	::SendMessage(m_edit2.m_hWnd, WM_GETTEXT, <span class="number">10</span>, (LPARAM)ch2);</span><br><span class="line"></span><br><span class="line">	num1 = atoi(ch1); </span><br><span class="line">	num2 = atoi(ch2); </span><br><span class="line">	num3 = num1 + num2; </span><br><span class="line"></span><br><span class="line">	itoa(num3,ch3,<span class="number">10</span>);</span><br><span class="line">	m_edit3.SendMessage(WM_SETTEXT, <span class="number">0</span>, (LPARAM)ch3);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h4 id="第七种方式"><a href="#第七种方式" class="headerlink" title="第七种方式"></a>第七种方式</h4><p>　　修改代码：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> CTestDlg::OnBtnAdd() </span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">int</span> num1, num2, num3; </span><br><span class="line">	<span class="keyword">char</span> ch1[<span class="number">10</span>], ch2[<span class="number">10</span>], ch3[<span class="number">10</span>]; </span><br><span class="line">	</span><br><span class="line">	SendDlgItemMessage(IDC_EDIT1, WM_GETTEXT, <span class="number">10</span>, (LPARAM)ch1);</span><br><span class="line">	SendDlgItemMessage(IDC_EDIT2, WM_GETTEXT, <span class="number">10</span>, (LPARAM)ch2);</span><br><span class="line">	</span><br><span class="line">num1 = atoi(ch1); </span><br><span class="line">	num2 = atoi(ch2); </span><br><span class="line">	num3 = num1 + num2; </span><br><span class="line"></span><br><span class="line">	itoa(num3,ch3,<span class="number">10</span>);</span><br><span class="line">	SendDlgItemMessage(IDC_EDIT3, WM_SETTEXT, <span class="number">0</span>, (LPARAM)ch3);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>　　获得编辑框复选的内容：<br>　　在上述代码最后添加：<br>    SendDlgItemMessage(IDC_EDIT3, EM_SETSEL, 0, -1); //0,-1表示全选若1,3表示选中1-3位复选<br>    m_edit3.SetFocus();</p>
<p>　　效果：<br> <figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20170415152614010?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述" title="">
                </div>
                <div class="image-caption">这里写图片描述</div>
            </figure></p>
<h4 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h4><p>1    GetDlgItem()-&gt;Get(Set)WindowTest()<br>2    GetDlgItemText()/SetDlgItemText()<br>3    GetDlgItemInt()/SetDlgItemInt()<br>4    将控件和整型变量相关联<br>5    将控件和控件变量相关联<br>6    SendMessage()<br>7    SendDlgItemMessage()<br>　　最常用是1、4、5。在利用MFC编程时，6、7用得少。</p>
<h2 id="对话框伸缩功能的实现"><a href="#对话框伸缩功能的实现" class="headerlink" title="对话框伸缩功能的实现"></a>对话框伸缩功能的实现</h2><p>　　对话框上再添加一个按钮，Caption设置为“收缩&lt;&lt;”点击ClassWizard，添加一个命令相应函数（BN_CLICKED）。具体实现代码为：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> CTestDlg::OnButton1() </span><br><span class="line">&#123;</span><br><span class="line">	CString str; </span><br><span class="line">	<span class="keyword">if</span>(GetDlgItemText(IDC_BUTTON1,str), str == <span class="string">"收缩&lt;&lt;"</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		SetDlgItemText(IDC_BUTTON1, <span class="string">"拓展&gt;&gt;"</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">	&#123;</span><br><span class="line">		SetDlgItemText(IDC_BUTTON1, <span class="string">"收缩&lt;&lt;"</span>);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>　　拖动一个图像控件来划分对话框中要动态切除的部分。<br> <figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20170415152648992?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述" title="">
                </div>
                <div class="image-caption">这里写图片描述</div>
            </figure></p>
<p>　　修改该控件ID为IDC_SEPATATOR，styles选项卡勾上Sunken选项。<br>　　修改代码：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> CTestDlg::OnButton1() </span><br><span class="line">&#123;</span><br><span class="line">	CString str; </span><br><span class="line">	<span class="keyword">if</span>(GetDlgItemText(IDC_BUTTON1,str), str == <span class="string">"收缩&lt;&lt;"</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		SetDlgItemText(IDC_BUTTON1, <span class="string">"拓展&gt;&gt;"</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">	&#123;</span><br><span class="line">		SetDlgItemText(IDC_BUTTON1, <span class="string">"收缩&lt;&lt;"</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">static</span> CRect rectLarge;</span><br><span class="line">	<span class="keyword">static</span> CRect rectSmall;</span><br><span class="line"></span><br><span class="line">	<span class="function">CRect <span class="title">rect1</span><span class="params">(<span class="number">10</span>,<span class="number">10</span>,<span class="number">10</span>,<span class="number">10</span>)</span></span>;</span><br><span class="line">	<span class="function">CRect <span class="title">rect2</span><span class="params">(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>)</span></span>;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">if</span>(rectLarge.IsRectNull())</span><br><span class="line">	&#123;</span><br><span class="line">		CRect rectSeparator;</span><br><span class="line">		GetWindowRect(&amp;rectLarge);</span><br><span class="line">		GetDlgItem(IDC_SEPARATOR)-&gt;GetWindowRect(&amp;rectSeparator);</span><br><span class="line"></span><br><span class="line">		rectSmall.left=rectLarge.left;</span><br><span class="line">		rectSmall.top=rectLarge.top;</span><br><span class="line">		rectSmall.right=rectLarge.right;</span><br><span class="line">		rectSmall.bottom=rectSeparator.bottom;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span>(str == <span class="string">"收缩&lt;&lt;"</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		SetWindowPos(<span class="literal">NULL</span>, <span class="number">0</span>, <span class="number">0</span>, rectSmall.Width(), rectSmall.Height(), SWP_NOMOVE | SWP_NOZORDER);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">	&#123;</span><br><span class="line">		SetWindowPos(<span class="literal">NULL</span>, <span class="number">0</span>, <span class="number">0</span>, rectLarge.Width(), rectLarge.Height(), SWP_NOMOVE | SWP_NOZORDER);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>　　效果：<br> <figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20170415152705855?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述" title="">
                </div>
                <div class="image-caption">这里写图片描述</div>
            </figure></p>
<p>　　点击“收缩&lt;&lt;”：<br> <figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20170415152725793?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述" title="">
                </div>
                <div class="image-caption">这里写图片描述</div>
            </figure></p>
<p>　　若希望隐藏分隔条，则设置属性去掉“Visible”前的勾。</p>
<h2 id="输入焦点的传递"><a href="#输入焦点的传递" class="headerlink" title="输入焦点的传递"></a>输入焦点的传递</h2><p>　　为了屏蔽掉默认的回车键关闭对话框这一功能，应该在对话框子类（此处是CTestDlg类）中重写OK按钮的消息响应函数。<br>　　首先点击OK按钮，添加鼠标单击消息响应函数。注释掉原有函数。</p>
<h3 id="法一"><a href="#法一" class="headerlink" title="法一"></a>法一</h3><p>　　在ClassView选项卡的CTestDlg类添加WM_INITDIALOG消息的响应函数。对类右键，选择Add Windows Message Handler，在弹出的框左侧选择WM_INITDIALOG，直接单击Add and Edit，跳转。<br>　　修改代码为：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> CTestDlg::OnOK() </span><br><span class="line">&#123;</span><br><span class="line">	<span class="comment">// <span class="doctag">TODO:</span> Add extra validation here</span></span><br><span class="line">	</span><br><span class="line">	<span class="comment">//CDialog::OnOK();</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">WNDPROC prevProc;</span><br><span class="line">	<span class="function">LRESULT CALLBACK <span class="title">NewEditProc</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">		HWND hwnd,</span></span></span><br><span class="line"><span class="function"><span class="params">		UINT uMsg,</span></span></span><br><span class="line"><span class="function"><span class="params">		WPARAM wParam,</span></span></span><br><span class="line"><span class="function"><span class="params">		LPARAM lParam</span></span></span><br><span class="line"><span class="function"><span class="params">		)</span></span></span><br><span class="line"><span class="function">	</span>&#123;</span><br><span class="line">		<span class="keyword">if</span>(uMsg == WM_CHAR &amp;&amp; wParam == <span class="number">0x0d</span>)</span><br><span class="line">		&#123;</span><br><span class="line">			::SetFocus(GetNextWindow(hwnd,GW_HWNDNEXT));</span><br><span class="line">			<span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span></span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">return</span> prevProc(hwnd,uMsg,wParam,lParam);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">BOOL CTestDlg::OnInitDialog() </span><br><span class="line">&#123;</span><br><span class="line">	CDialog::OnInitDialog();</span><br><span class="line">	prevProc=(WNDPROC)SetWindowLong(GetDlgItem(IDC_EDIT1)-&gt;m_hWnd,</span><br><span class="line">		GWL_WNDPROC, (LONG)NewEditProc);</span><br><span class="line">	<span class="keyword">return</span> TRUE;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>　　查看第一个编辑框的属性，打开styles选项卡，勾上MultiLine（多行）。即可实现焦点的传递。</p>
<h3 id="法二"><a href="#法二" class="headerlink" title="法二"></a>法二</h3><p>　　只需要改变一行代码：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">WNDPROC prevProc;</span><br><span class="line">	<span class="function">LRESULT CALLBACK <span class="title">NewEditProc</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">		HWND hwnd,</span></span></span><br><span class="line"><span class="function"><span class="params">		UINT uMsg,</span></span></span><br><span class="line"><span class="function"><span class="params">		WPARAM wParam,</span></span></span><br><span class="line"><span class="function"><span class="params">		LPARAM lParam</span></span></span><br><span class="line"><span class="function"><span class="params">		)</span></span></span><br><span class="line"><span class="function">	</span>&#123;</span><br><span class="line">		<span class="keyword">if</span>(uMsg == WM_CHAR &amp;&amp; wParam == <span class="number">0x0d</span>)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="comment">//::SetFocus(GetNextWindow(hwnd,GW_HWNDNEXT));</span></span><br><span class="line">			SetFocus(::GetWindow(hwnd,GW_HWNDNEXT));</span><br><span class="line">			<span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span></span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">return</span> prevProc(hwnd,uMsg,wParam,lParam);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br></pre></td></tr></table></figure></p>
<h3 id="法三"><a href="#法三" class="headerlink" title="法三"></a>法三</h3><p>　　编辑框属性有一个WS_TABSTOP，如果勾选了，则在对话框中按下Tab键后，输入焦点可以转移到此控件上。</p>
<p>　　修改一行代码：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">WNDPROC prevProc;</span><br><span class="line">	<span class="function">LRESULT CALLBACK <span class="title">NewEditProc</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">		HWND hwnd,</span></span></span><br><span class="line"><span class="function"><span class="params">		UINT uMsg,</span></span></span><br><span class="line"><span class="function"><span class="params">		WPARAM wParam,</span></span></span><br><span class="line"><span class="function"><span class="params">		LPARAM lParam</span></span></span><br><span class="line"><span class="function"><span class="params">		)</span></span></span><br><span class="line"><span class="function">	</span>&#123;</span><br><span class="line">		<span class="keyword">if</span>(uMsg == WM_CHAR &amp;&amp; wParam == <span class="number">0x0d</span>)</span><br><span class="line">		&#123;</span><br><span class="line">			SetFocus(::GetNextDlgTabItem(::GetParent(hwnd),hwnd,FALSE));</span><br><span class="line">			<span class="comment">//::SetFocus(GetNextWindow(hwnd,GW_HWNDNEXT));</span></span><br><span class="line">			<span class="comment">//SetFocus(::GetWindow(hwnd,GW_HWNDNEXT));</span></span><br><span class="line">			<span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span></span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">return</span> prevProc(hwnd,uMsg,wParam,lParam);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br></pre></td></tr></table></figure></p>
<p>　　三种方法的缺点：只修改了第一个编辑框的窗口过程，因此从第二到第三个编辑框的焦点转移无法实现，除非继续修改第二个编辑窗口。</p>
<p>　　再介绍一种方法解决这个问题。</p>
<h3 id="法四"><a href="#法四" class="headerlink" title="法四"></a>法四</h3><p>　　在MFC中，默认情况下，当在对话框窗口中按下回车键时，会调用对话框的默认按钮的响应函数，我们可以在此默认按钮的响应函数中把焦点依次向下传递。</p>
<p>　　首先取消第一个编辑框的MultiLine。<br>　　接着修改OnOK函数为：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> CTestDlg::OnOK() </span><br><span class="line">&#123;</span><br><span class="line">	<span class="comment">// <span class="doctag">TODO:</span> Add extra validation here</span></span><br><span class="line">	<span class="comment">//GetDlgItem(IDC_EDIT1)-&gt;GetNextWindow()-&gt;SetFocus();</span></span><br><span class="line">	<span class="comment">//GetFocus()-&gt;GetNextWindow()-&gt;SetFocus();</span></span><br><span class="line">	<span class="comment">//GetFocus()-&gt;GetWindow(GW_HWNDNEXT)-&gt;SetFocus();</span></span><br><span class="line">	GetNextDlgTabItem(GetFocus())-&gt;SetFocus();</span><br><span class="line">	<span class="comment">//CDialog::OnOK();</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>　　注释掉的部分是各种失败的尝试，各有各的bug。现在程序是正常的。</p>
<pre><code>**注意：然而该屏蔽回车键的方法并非是常规做法，应该在PreTranslateMessage中进行拦截。（return TRUE即拦截）**
</code></pre><p>　　具体做法：<br>　　现在Testdlg.h中添加：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CTestDlg</span> :</span> <span class="keyword">public</span> CDialog</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">protected</span>:</span><br><span class="line">	<span class="function"><span class="keyword">virtual</span> BOOL <span class="title">PreTranslateMessage</span><span class="params">(MSG* pMsg)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">	<span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">OnOK</span><span class="params">()</span></span>;</span><br><span class="line">……</span><br></pre></td></tr></table></figure></p>
<p>　　接着：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">CTestDlg::PreTranslateMessage(MSG* pMsg)</span><br><span class="line">&#123;</span><br><span class="line">	<span class="comment">//屏蔽ESC关闭窗体</span></span><br><span class="line">	<span class="keyword">if</span> (pMsg-&gt;message == WM_KEYDOWN &amp;&amp; pMsg-&gt;wParam == VK_ESCAPE)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">return</span> TRUE;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//屏蔽回车关闭窗体，但会导致回车在窗体上失效.</span></span><br><span class="line">	<span class="comment">/*</span></span><br><span class="line"><span class="comment">	if (pMsg-&gt;message == WM_KEYDOWN &amp;&amp; pMsg-&gt;wParam == VK_RETURN &amp;&amp; pMsg-&gt;wParam)</span></span><br><span class="line"><span class="comment">	&#123;</span></span><br><span class="line"><span class="comment">		return TRUE;</span></span><br><span class="line"><span class="comment">	&#125;</span></span><br><span class="line"><span class="comment">	*/</span></span><br><span class="line">	<span class="keyword">else</span> </span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">return</span> CDialog::PreTranslateMessage(pMsg);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> CTestDlg::OnOK() </span><br><span class="line">&#123;</span><br><span class="line">	<span class="comment">// <span class="doctag">TODO:</span> Add extra validation here</span></span><br><span class="line">	</span><br><span class="line">	<span class="comment">//CDialog::OnOK();</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>　　点击Layout-Tab order，这些序号就是各控件的Tab顺序。顺序可改变，依次点击希望的顺序控件即可。</p>
<p>　　调用顺序：当用户按下回车键时，Windows将查看对话框中是否存在指定的默认按钮，如果有，就调用该默认按钮单击消息的响应函数。如果没有，就会调用虚拟的OnOK函数，即使对话框没有包含默认的OK按钮（这个默认OK按钮的ID是IDOK）。</p>
<h1 id="文件和注册表操作"><a href="#文件和注册表操作" class="headerlink" title="文件和注册表操作"></a>文件和注册表操作</h1><h2 id="C语言对文件操作的支持"><a href="#C语言对文件操作的支持" class="headerlink" title="C语言对文件操作的支持"></a>C语言对文件操作的支持</h2><p>　　新建单文档类型的MFC应用程序，工程名为File，并为主菜单添加一个子菜单，名称为“文件操作”，然后为其添加两个菜单项，并分别为它们添加相应的命令响应函数（通过COMMAND），让CFileView类接收这些菜单项的命令响应。<br> <figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20170420224900928?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述" title="">
                </div>
                <div class="image-caption">这里写图片描述</div>
            </figure><br> <figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20170420224921428?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述" title="">
                </div>
                <div class="image-caption">这里写图片描述</div>
            </figure></p>
<h3 id="文件的打开和写入"><a href="#文件的打开和写入" class="headerlink" title="文件的打开和写入"></a>文件的打开和写入</h3><p>　　代码：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> CFileView::OnFileWrite() </span><br><span class="line">&#123;</span><br><span class="line">	FILE *pFile = fopen(<span class="string">"1.txt"</span>,<span class="string">"w"</span>);</span><br><span class="line">	fwrite(<span class="string">"http://www.sunxin.org"</span>, <span class="number">1</span>, <span class="built_in">strlen</span>(<span class="string">"http://www.sunxin.org"</span>), pFile); </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>　　编译后可看到文件夹中生成了1.txt，打开有一行网址。</p>
<h3 id="文件的关闭"><a href="#文件的关闭" class="headerlink" title="文件的关闭"></a>文件的关闭</h3><p>　　增加一行代码：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> CFileView::OnFileWrite() </span><br><span class="line">&#123;</span><br><span class="line">	FILE *pFile = fopen(<span class="string">"1.txt"</span>,<span class="string">"w"</span>);</span><br><span class="line">	fwrite(<span class="string">"http://www.sunxin.org"</span>, <span class="number">1</span>, <span class="built_in">strlen</span>(<span class="string">"http://www.sunxin.org"</span>), pFile); </span><br><span class="line">	fclose(pFile);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h3 id="文件指针定位"><a href="#文件指针定位" class="headerlink" title="文件指针定位"></a>文件指针定位</h3><p>　　代码：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> CFileView::OnFileWrite() </span><br><span class="line">&#123;</span><br><span class="line">	FILE *pFile = fopen(<span class="string">"1.txt"</span>,<span class="string">"w"</span>);</span><br><span class="line">	fwrite(<span class="string">"http://www.sunxin.org"</span>, <span class="number">1</span>, <span class="built_in">strlen</span>(<span class="string">"http://www.sunxin.org"</span>), pFile); </span><br><span class="line">	fwrite(<span class="string">"欢迎访问"</span>, <span class="number">1</span>, <span class="built_in">strlen</span>(<span class="string">"欢迎访问"</span>), pFile);</span><br><span class="line">	fclose(pFile);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>　　显示：<a href="http://www.sunxin.org欢迎访问" target="_blank" rel="noopener">http://www.sunxin.org欢迎访问</a></p>
<p>　　将文件指针移动到文件的开始位置处：<br>　　代码：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> CFileView::OnFileWrite() </span><br><span class="line">&#123;</span><br><span class="line">	FILE *pFile = fopen(<span class="string">"1.txt"</span>,<span class="string">"w"</span>);</span><br><span class="line">	fwrite(<span class="string">"http://www.sunxin.org"</span>, <span class="number">1</span>, <span class="built_in">strlen</span>(<span class="string">"http://www.sunxin.org"</span>), pFile); </span><br><span class="line">	fseek(pFile, <span class="number">0</span>, SEEK_SET);</span><br><span class="line">	fwrite(<span class="string">"ftp:"</span>, <span class="number">1</span>, <span class="built_in">strlen</span>(<span class="string">"ftp:"</span>),pFile);</span><br><span class="line">	<span class="comment">//fwrite("欢迎访问", 1, strlen("欢迎访问"), pFile);</span></span><br><span class="line">	fclose(pFile);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>　　显示：ftp:://<a href="http://www.sunxin.org" target="_blank" rel="noopener">www.sunxin.org</a></p>
<h3 id="文件的读取"><a href="#文件的读取" class="headerlink" title="文件的读取"></a>文件的读取</h3><p>　　在OnFileRead函数中写入代码：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> CFileView::OnFileRead() </span><br><span class="line">&#123;</span><br><span class="line">	FILE *pFile = fopen(<span class="string">"1.txt"</span>,<span class="string">"r"</span>);</span><br><span class="line">	<span class="keyword">char</span> ch[<span class="number">100</span>];</span><br><span class="line">	fread(ch, <span class="number">1</span>, <span class="number">100</span>, pFile);</span><br><span class="line">	fclose(pFile);</span><br><span class="line">	MessageBox(ch);</span><br><span class="line">	</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>　　编译运行：<br>　　<br> <img src="http://img.blog.csdn.net/20170420224951225?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<p>　　原因：C语言以“\0”结束。</p>
<p>　　解决方法：<br>　　法一：<br>　　修改代码：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> CFileView::OnFileWrite() </span><br><span class="line">&#123;</span><br><span class="line">	FILE *pFile = fopen(<span class="string">"1.txt"</span>,<span class="string">"w"</span>);</span><br><span class="line">	<span class="keyword">char</span> buf[<span class="number">22</span>] = <span class="string">"http://www.sunxin.org"</span>;</span><br><span class="line">	buf[<span class="number">21</span>] = <span class="string">'\0'</span>;</span><br><span class="line">	fwrite(buf, <span class="number">1</span>, <span class="number">22</span>, pFile);</span><br><span class="line">	fclose(pFile);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>　　先点击写入文件，再点击读取文件，就可以看到正确的内容。<br>　　缺点：增加了文件大小。</p>
<p>法二：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> CFileView::OnFileRead() </span><br><span class="line">&#123;</span><br><span class="line">	FILE *pFile = fopen(<span class="string">"1.txt"</span>,<span class="string">"r"</span>);</span><br><span class="line">	<span class="keyword">char</span> ch[<span class="number">100</span>];</span><br><span class="line">	<span class="built_in">memset</span>(ch, <span class="number">0</span>, <span class="number">100</span>);</span><br><span class="line">	fread(ch, <span class="number">1</span>, <span class="number">100</span>, pFile);</span><br><span class="line">	fclose(pFile);</span><br><span class="line">	MessageBox(ch);</span><br><span class="line">	</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>法三：<br>　　读取文件时，不知道文件大小时的做法。<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> CFileView::OnFileRead() </span><br><span class="line">&#123;</span><br><span class="line">	FILE *pFile = fopen(<span class="string">"1.txt"</span>,<span class="string">"r"</span>);</span><br><span class="line">	<span class="keyword">char</span> *pBuf;</span><br><span class="line">	fseek(pFile, <span class="number">0</span>, SEEK_END);</span><br><span class="line">	<span class="keyword">int</span> len=ftell(pFile);</span><br><span class="line">	pBuf = <span class="keyword">new</span> <span class="keyword">char</span>[len+<span class="number">1</span>];</span><br><span class="line">	rewind(pFile);</span><br><span class="line">	fread(pBuf, <span class="number">1</span>, len, pFile);</span><br><span class="line">	pBuf[len] = <span class="number">0</span>;</span><br><span class="line">	fclose(pFile);</span><br><span class="line">	MessageBox(pBuf);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h3 id="二进制文件和文本文件"><a href="#二进制文件和文本文件" class="headerlink" title="二进制文件和文本文件"></a>二进制文件和文本文件</h3><p>　　代码：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> CFileView::OnFileWrite() </span><br><span class="line">&#123;</span><br><span class="line">	FILE *pFile = fopen(<span class="string">"2.txt"</span>, <span class="string">"w"</span>);</span><br><span class="line">	<span class="keyword">char</span> ch[<span class="number">3</span>];</span><br><span class="line">	ch[<span class="number">0</span>] = <span class="string">'a'</span>;</span><br><span class="line">	ch[<span class="number">1</span>] = <span class="number">10</span>;</span><br><span class="line">	ch[<span class="number">2</span>] = <span class="string">'b'</span>;</span><br><span class="line">	fwrite(ch, <span class="number">1</span>, <span class="number">3</span>, pFile);</span><br><span class="line">	fclose(pFile);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> CFileView::OnFileRead() </span><br><span class="line">&#123;</span><br><span class="line">	FILE *pFile = fopen(<span class="string">"2.txt"</span>,<span class="string">"r"</span>);</span><br><span class="line">	<span class="keyword">char</span> ch[<span class="number">100</span>];</span><br><span class="line">	fread(ch, <span class="number">1</span>, <span class="number">3</span>, pFile);</span><br><span class="line">	ch[<span class="number">3</span>] = <span class="number">0</span>;</span><br><span class="line">	fclose(pFile);</span><br><span class="line">	MessageBox(ch);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>　　效果：<br>　　<br> <img src="http://img.blog.csdn.net/20170420225018961?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<p>　　文本方式：10实际上是换行符的ASCII码。</p>
<p>　　以文本方式和二进制方式读取文件是有明显的区别的。</p>
<h3 id="文本方式和二进制方式"><a href="#文本方式和二进制方式" class="headerlink" title="文本方式和二进制方式"></a>文本方式和二进制方式</h3><p>　　二进制方式：换行是由两个字符组成的，即ASCII码10（回车符）和13（换行符）。<br>　　写入和读取文件时要保持一致。如果采用文本方式写入，应采用文本方式读取；如果采用二进制方式写入数据，在读取时也应采用二进制方式。</p>
<p>　　面试题：给你一个整数，如：98341，将这个整数保存到文件中，要求在以记事本程序打开该文件时，显示的是：98341。<br>　　法一：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> CFileView::OnFileWrite() </span><br><span class="line">&#123;</span><br><span class="line">	FILE *pFile = fopen(<span class="string">"3.txt"</span>, <span class="string">"w"</span>);</span><br><span class="line">	<span class="keyword">char</span> ch[<span class="number">5</span>];</span><br><span class="line">	ch[<span class="number">0</span>] = <span class="number">9</span> + <span class="number">48</span>;</span><br><span class="line">	ch[<span class="number">1</span>] = <span class="number">8</span> + <span class="number">48</span>;</span><br><span class="line">	ch[<span class="number">2</span>] = <span class="number">3</span> + <span class="number">48</span>;</span><br><span class="line">	ch[<span class="number">3</span>] = <span class="number">4</span> + <span class="number">48</span>;</span><br><span class="line">	ch[<span class="number">4</span>] = <span class="number">1</span> + <span class="number">48</span>;</span><br><span class="line"></span><br><span class="line">	fwrite(ch, <span class="number">1</span>, <span class="number">5</span>, pFile);</span><br><span class="line">	fclose(pFile);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>　　或</p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> CFileView::OnFileWrite() </span><br><span class="line">&#123;</span><br><span class="line">	FILE *pFile = fopen(<span class="string">"3.txt"</span>, <span class="string">"w"</span>);</span><br><span class="line">	<span class="keyword">int</span> i = <span class="number">98341</span>;</span><br><span class="line">	<span class="keyword">char</span> ch[<span class="number">5</span>];</span><br><span class="line">	itoa(i, ch, <span class="number">10</span>);</span><br><span class="line"></span><br><span class="line">	fwrite(ch, <span class="number">1</span>, <span class="number">5</span>, pFile);</span><br><span class="line">	fclose(pFile);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>　　面试题：给定一个字符串，其中既有数字字符，又有26个英文字母中的几个字符，让你判断一下哪些是数字字符。</p>
<p>　　对这种问题，实际上就是判断各字符的ASCII码，对于数字字符来说，它们的ASCII码大于等于48，小于等于57。</p>
<h2 id="C-对文件操作的支持"><a href="#C-对文件操作的支持" class="headerlink" title="C++对文件操作的支持"></a>C++对文件操作的支持</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> CFileView::OnFileWrite() </span><br><span class="line">&#123;</span><br><span class="line">	<span class="function">ofstream <span class="title">ofs</span><span class="params">(<span class="string">"4.txt"</span>)</span></span>;</span><br><span class="line">	ofs.write(<span class="string">"http://www.sunxin.org"</span>,<span class="built_in">strlen</span>(<span class="string">"http://www.sunxin.org"</span>));</span><br><span class="line">	ofs.close;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> CFileView::OnFileRead() </span><br><span class="line">&#123;</span><br><span class="line">	<span class="function">ifstream <span class="title">ifs</span><span class="params">(<span class="string">"4.txt"</span>)</span></span>;</span><br><span class="line">	<span class="keyword">char</span> ch[<span class="number">100</span>];</span><br><span class="line">	<span class="built_in">memset</span>(ch, <span class="number">0</span>, <span class="number">100</span>);</span><br><span class="line">	ifs.read(ch,<span class="number">100</span>);</span><br><span class="line">	ifs.close();</span><br><span class="line">	MessageBox(ch);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="Win32-API-对文件操作的支持"><a href="#Win32-API-对文件操作的支持" class="headerlink" title="Win32 API 对文件操作的支持"></a>Win32 API 对文件操作的支持</h2><h3 id="文件的创建、打开和写入"><a href="#文件的创建、打开和写入" class="headerlink" title="文件的创建、打开和写入"></a>文件的创建、打开和写入</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> CFileView::OnFileWrite() </span><br><span class="line">&#123;</span><br><span class="line">	<span class="comment">//定义一个句柄变量</span></span><br><span class="line">	HANDLE hFile;</span><br><span class="line">	<span class="comment">//创建文件</span></span><br><span class="line">	hFile = CreateFile(<span class="string">"5.txt"</span>, GENERIC_WRITE, <span class="number">0</span>, <span class="literal">NULL</span>, CREATE_NEW, </span><br><span class="line">		FILE_ATTRIBUTE_NORMAL, <span class="literal">NULL</span>);</span><br><span class="line">	<span class="comment">//接收实际写入的字节数</span></span><br><span class="line">	DWORD dwWrites;</span><br><span class="line">	<span class="comment">//写入数据</span></span><br><span class="line">	WriteFile(hFile,<span class="string">"http://www.sunxin.org"</span>,<span class="built_in">strlen</span>(<span class="string">"http://www.sunxin.org"</span>),</span><br><span class="line">		&amp;dwWrites, <span class="literal">NULL</span>);</span><br><span class="line">	<span class="comment">//关闭文件句柄</span></span><br><span class="line">	CloseHandle(hFile);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="文件的读取-1"><a href="#文件的读取-1" class="headerlink" title="文件的读取"></a>文件的读取</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> CFileView::OnFileRead() </span><br><span class="line">&#123;</span><br><span class="line">	HANDLE hFile;</span><br><span class="line">	<span class="comment">//打开文件</span></span><br><span class="line">	hFile = CreateFile(<span class="string">"5.txt"</span>, GENERIC_READ, <span class="number">0</span>, <span class="literal">NULL</span>, OPEN_EXISTING, FILE_ATTRIBUTE_NORMAL, <span class="literal">NULL</span>);</span><br><span class="line">	<span class="comment">//接收实际收到的数据</span></span><br><span class="line">	<span class="keyword">char</span> ch[<span class="number">100</span>];</span><br><span class="line">	<span class="comment">//接收实际读取到的字节数</span></span><br><span class="line">	DWORD dwReads;</span><br><span class="line">	<span class="comment">//读取数据</span></span><br><span class="line">	ReadFile(hFile, ch, <span class="number">100</span>, &amp;dwReads, <span class="literal">NULL</span>);</span><br><span class="line">	<span class="comment">//设置字符串结束字符</span></span><br><span class="line">	ch[dwReads] = <span class="number">0</span>;</span><br><span class="line">	<span class="comment">//关闭打开的文件对象的句柄</span></span><br><span class="line">	CloseHandle(hFile);</span><br><span class="line">	<span class="comment">//显示读取到的数据</span></span><br><span class="line">	MessageBox(ch);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="菜单"><a href="#菜单" class="headerlink" title="菜单"></a>菜单</h1><h2 id="菜单命令响应函数"><a href="#菜单命令响应函数" class="headerlink" title="菜单命令响应函数"></a>菜单命令响应函数</h2><p>　　新建一个单文档的MFC AppWizard(exe)工程，工程名为Menu。Build运行。</p>
<p> <img src="http://img.blog.csdn.net/20170420225058617?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"><br>　　左上角点击按钮，可以让属性框始终显示，不会因为点击对话框以外的地方就消失。<br>　　去掉Pop-up弹出前的勾，将ID改为ID_TEST。给Test添加响应函数在CMainFrame中，在函数中加入    MessageBox(“MainFrame Clicked”);<br>　　效果：<br> <figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20170420225116851?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述" title="">
                </div>
                <div class="image-caption">这里写图片描述</div>
            </figure></p>
<h2 id="菜单命令的路由"><a href="#菜单命令的路由" class="headerlink" title="菜单命令的路由"></a>菜单命令的路由</h2><h3 id="程序类对菜单命令的响应顺序"><a href="#程序类对菜单命令的响应顺序" class="headerlink" title="程序类对菜单命令的响应顺序"></a>程序类对菜单命令的响应顺序</h3><p>　　响应Test<br>　　菜单项命令的顺序依次是：视类、文档类、框架类，最后才是应用程序类。</p>
<h3 id="Windows消息的分类"><a href="#Windows消息的分类" class="headerlink" title="Windows消息的分类"></a>Windows消息的分类</h3><p>　　凡是从CWnd派生的类，它们既可以接收标准消息，也可以接收命令消息和通告消息。而对于那些从CCmdTarget派生的类，则只能接收命令消息和通告消息，不能接收标准消息。<br>本例中的文档类（CMenuDoc）和应用程序类（CWinApp），因为它们都派生于CCmdTarget类，所以它们可以接收菜单命令消息。但它们不是从CWnd类派生的，所以不能接收标准消息。</p>
<h3 id="菜单命令的路由-1"><a href="#菜单命令的路由-1" class="headerlink" title="菜单命令的路由"></a>菜单命令的路由</h3><p>　　菜单命令消息路由的具体过程：当点击某个菜单项时，最先接收到这个菜单命令消息的是框架类。框架类将把接收到的这个消息交给它的子窗口，即视类，由视类首先进行处理。视类首先根据命令消息映射机制查找自身是否对此消息进行了响应，如果响应了，就调用相应响应函数对这个消息进行处理，消息路由过程结束；如果视类没有对此命令消息做出响应，就交由文档类，文档类同样查找自身是否对这个菜单命令进行了响应，如果响应了，就由文档类的命令消息响应函数进行处理，路由过程结束。如果文档类也未做出响应，就把这个命令消息交还给视类，后者又把该消息交还给框架类。框架类查看自己是否对这个命令消息进行了响应，如果它也没有做出响应，就把这个菜单命令消息交给应用程序类，由后者来进行处理。</p>
<h2 id="基本菜单操作"><a href="#基本菜单操作" class="headerlink" title="基本菜单操作"></a>基本菜单操作</h2><h3 id="标记菜单"><a href="#标记菜单" class="headerlink" title="标记菜单"></a>标记菜单</h3><p>　　运行刚才创建的Menu程序，点击查看，前面都有一个对号，这种类型就是标记菜单。<br>在CMainFrame类的OnCreate的return语句之前添加这句代码    GetMenu()-&gt;GetSubMenu(0)-&gt;CheckMenuItem(0, MF_BYPOSITION | MF_CHECKED);  或者GetMenu()-&gt;GetSubMenu(0)-&gt;CheckMenuItem(ID_FILE_NEW, MF_BYCOMMAND | MF_CHECKED);<br>　　Build并运行，可发现新建左边已添加一个复选标记。</p>
<h3 id="默认菜单项"><a href="#默认菜单项" class="headerlink" title="默认菜单项"></a>默认菜单项</h3><p>　　在刚才的代码下，添加    GetMenu()-&gt;GetSubMenu(0)-&gt;SetDefaultItem(1, TRUE); 或者GetMenu()-&gt;GetSubMenu(0)-&gt;SetDefaultItem(ID_FILE_OPEN,  FALSE);  编译运行，会发现“打开”变成了粗体。</p>
<p>　　<strong>注意：“打印”的索引是5，不是4。计算菜单项索引时，一定要把分割栏菜单项计算在内。并且，一个子菜单只能有一个默认菜单项。</strong></p>
<h3 id="图形标记菜单"><a href="#图形标记菜单" class="headerlink" title="图形标记菜单"></a>图形标记菜单</h3><p>　　Insert-Resource-Bitmap，创建一个位图资源。如图。<br> <figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20170420225150945?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述" title="">
                </div>
                <div class="image-caption">这里写图片描述</div>
            </figure><br>　　为CMainFrame类添加一个CBitmap类型的成员变量：m_bitmap。</p>
<p>　　接着添加代码：<br>    CString str;<br>    str.Format(“x=%d”,y=%d”, GetSystemMetrics(SM_CXMENUCHECK),GetSystemMetrics(SM_CYMENUCHECK));<br>    MessageBox(str);<br>    m_bitmap.LoadBitmap(IDB_BITMAP1);<br>    GetMenu()-&gt;GetSubMenu(0)-&gt;SetMenuItemBitmaps(0, MF_BYPOSITION, &amp;m_bitmap, &amp;m_bitmap);</p>
<h3 id="禁用菜单项"><a href="#禁用菜单项" class="headerlink" title="禁用菜单项"></a>禁用菜单项</h3><p>　　通常把MF_GRAYED和MF_DISABLED这两个标志放在一起使用。不过这么做并不是必需的。<br>　　删除之前的代码，写入    GetMenu()-&gt;GetSubMenu(0)-&gt;EnableMenuItem(1, MF_BYPOSITION | MF_DISABLED | MF_GRAYED);<br>　　打开“文件”子菜单，发现“打开”菜单栏变灰，点击不起作用。</p>
<h3 id="移除和装载菜单"><a href="#移除和装载菜单" class="headerlink" title="移除和装载菜单"></a>移除和装载菜单</h3><p>　　再添加一行代码：    SetMenu(NULL);  此时菜单栏被移除了。<br>　　再添加几行代码：<br>CMenu menu;<br>    menu.LoadMenu(IDR_MAINFRAME);<br>    SetMenu(&amp;menu);<br>    menu.Detach();<br>　　此时菜单栏又装载了。<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">CMenu menu;</span><br><span class="line">menu.CreateMenu();</span><br><span class="line">GetMenu()-&gt;AppendMenu(MF_POPUP, (UINT)menu.m_hMenu, <span class="string">"Test1"</span>);</span><br><span class="line">menu.AppendMenu(MF_STRING, <span class="number">111</span>, <span class="string">"Hello"</span>);</span><br><span class="line">menu.AppendMenu(MF_STRING, <span class="number">112</span>, <span class="string">"Bye"</span>);</span><br><span class="line">menu.AppendMenu(MF_STRING, <span class="number">113</span>, <span class="string">"Mybole"</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">menu.Detach();</span><br><span class="line"></span><br><span class="line">CMenu menu1;</span><br><span class="line">menu1.CreateMenu();</span><br><span class="line">GetMenu()-&gt;InsertMenu(<span class="number">2</span>, MF_POPUP | MF_BYPOSITION, (UINT)menu1. m_hMenu,<span class="string">"Test"</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">menu1.Detach();</span><br><span class="line"></span><br><span class="line">GetMenu()-&gt;GetSubMenu(<span class="number">2</span>)-&gt;AppendMenu(MF_STRING, <span class="number">118</span>, <span class="string">"Welcome"</span>);</span><br><span class="line">GetMenu()-&gt;GetSubMenu(<span class="number">0</span>)-&gt;AppendMenu(MF_STRING, <span class="number">114</span>, <span class="string">"Welcome"</span>);</span><br><span class="line">GetMenu()-&gt;GetSubMenu(<span class="number">0</span>)-&gt;InsertMenu(ID_FILE_OPEN, MF_BYCOMMAND | MF_STRING, <span class="number">115</span>, <span class="string">"VC编程"</span>);</span><br></pre></td></tr></table></figure></p>
<h3 id="MFC菜单命令更新机制"><a href="#MFC菜单命令更新机制" class="headerlink" title="MFC菜单命令更新机制"></a>MFC菜单命令更新机制</h3><p> <img src="http://img.blog.csdn.net/20170420225218087?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<p>　　MFC命令更新机制：当要显示菜单时，操作系统发出WM_INITMENUPOPOP消息，然后由程序窗口的基类如CFrameWnd接管，它会创建一个CCmdUI对象，并与程序的第一个菜单项相关联，调用该对象的一个成员函数DoUpdate()。这个函数发出CN_UPDATE_COMMAND_UI消息，这条消息带有一个指向CCmdUI对象的指针。这时，系统会判断是否存在一个ON_UPDATE_COMMAND_UI宏去捕获这个菜单项消息。如果找到这样一个宏，就调用相应的消息响应函数进行处理，在这个函数中，可以利用传递过来的CCmdUI对象去调用相应的函数，使该菜单项可以使用，或禁用该菜单项。当更新完第一个菜单项后，同一个CCmdUI对象就设置为与第二个菜单项相关联，依此顺序进行，直到完成所有菜单项的处理。</p>
<p>　　添加代码：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> CMainFrame::OnUpdateEditCut(CCmdUI* pCmdUI) </span><br><span class="line">&#123;</span><br><span class="line">	<span class="comment">// <span class="doctag">TODO:</span> Add your command update UI handler code here</span></span><br><span class="line">	pCmdUI-&gt;Enable();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>　　编辑-剪切 可用了。<br>　　如果要把工具栏上的一个工具按钮与菜单栏中的某个菜单项相关联，只要将它们的ID设置为同一个标识就可以了。</p>
<p>　　如果希望禁用文件-新建，为ID_FILE_NEW添加UPDATE_COMMAND_UI消息响应函数。<br>　　代码如下：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">void</span> CMainFrame::OnUpdateFileNew(CCmdUI* pCmdUI) </span><br><span class="line">&#123;</span><br><span class="line">	<span class="comment">// <span class="doctag">TODO:</span> Add your command update UI handler code here</span></span><br><span class="line">	pCmdUI-&gt;Enable(FALSE);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>　　或者<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> CMainFrame::OnUpdateFileNew(CCmdUI* pCmdUI) </span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">if</span> (<span class="number">2</span> == pCmdUI-&gt;m_nIndex)</span><br><span class="line">	pCmdUI-&gt;Enable();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h3 id="快捷菜单"><a href="#快捷菜单" class="headerlink" title="快捷菜单"></a>快捷菜单</h3><p>　　1. 新增一个新的菜单资源。点开，顶级菜单设置任意的文本，如abc。添加两个菜单项：<br>　　显示 IDM_SHOW<br>　　退出 IDM_EXIT<br>　　2. 给CMenuView类添加WM_RBUTTONDOWN消息响应函数。<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> CMenu2View::OnRButtonDown(UINT nFlags, CPoint point) </span><br><span class="line">&#123;</span><br><span class="line">	CMenu menu;</span><br><span class="line">	menu.LoadMenu(IDR_MENU1);</span><br><span class="line">	CMenu* pPopup = menu.GetSubMenu(<span class="number">0</span>);</span><br><span class="line">	ClientToScreen(&amp;point);</span><br><span class="line">	pPopup-&gt;TrackPopupMenu(TPM_LEFTALIGN | TPM_RIGHTBUTTON, point.x, point.y, <span class="keyword">this</span>);</span><br><span class="line"></span><br><span class="line">	CView::OnRButtonDown(nFlags, point);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>　　效果：<br>　　<br> <img src="http://img.blog.csdn.net/20170420225352728?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt=""></p>
<p>　　3.对“显示”右键ClassWizard，可以取消创建新类的询问。分别为CMainFrame类和CMenuView类添加一个响应。<br>　　代码：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> CMenu2View::OnShow() </span><br><span class="line">&#123;</span><br><span class="line">	MessageBox(<span class="string">"View show"</span>);	</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> CMainFrame::OnShow() </span><br><span class="line">&#123;</span><br><span class="line">	MessageBox(<span class="string">"Main show"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>　　结果是显示“View show”。说明只有视类才能对快捷菜单项命令做出响应。若想让CMainView类对此快捷菜单项进行响应的话，修改代码：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> CMenu2View::OnRButtonDown(UINT nFlags, CPoint point) </span><br><span class="line">&#123;</span><br><span class="line">	CMenu menu;</span><br><span class="line">	menu.LoadMenu(IDR_MENU1);</span><br><span class="line">	CMenu* pPopup = menu.GetSubMenu(<span class="number">0</span>);</span><br><span class="line">	ClientToScreen(&amp;point);</span><br><span class="line">	<span class="comment">//pPopup-&gt;TrackPopupMenu(TPM_LEFTALIGN | TPM_RIGHTBUTTON, point.x, point.y, this);</span></span><br><span class="line">	pPopup-&gt;TrackPopupMenu(TPM_LEFTALIGN | TPM_RIGHTBUTTON, point.x, point.y, GetParent());</span><br><span class="line"></span><br><span class="line">	CView::OnRButtonDown(nFlags, point);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>　　同时删去视类的显示。</p>
<h2 id="动态菜单操作"><a href="#动态菜单操作" class="headerlink" title="动态菜单操作"></a>动态菜单操作</h2><h3 id="添加菜单项目"><a href="#添加菜单项目" class="headerlink" title="添加菜单项目"></a>添加菜单项目</h3><p>　　在CMainFrame类的OnCreate函数中添加代码：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">CMenu menu;</span><br><span class="line">menu.CreateMenu();</span><br><span class="line">GetMenu()-&gt;AppendMenu(MF_POPUP, (UINT)menu.m_hMenu, <span class="string">"Test"</span>);</span><br><span class="line">menu.Detach();</span><br></pre></td></tr></table></figure></p>
<h3 id="插入菜单项目"><a href="#插入菜单项目" class="headerlink" title="插入菜单项目"></a>插入菜单项目</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">CMenu menu;</span><br><span class="line">menu.CreateMenu();</span><br><span class="line"><span class="comment">/*GetMenu()-&gt;AppendMenu(MF_POPUP, (UINT)menu.m_hMenu, "Test");</span></span><br><span class="line"><span class="comment">menu.Detach();*/</span></span><br><span class="line">GetMenu()-&gt;InsertMenu(<span class="number">2</span>, MF_POPUP | MF_BYPOSITION, (UINT)menu. m_hMenu,<span class="string">"Test"</span>);</span><br><span class="line">menu.Detach();</span><br></pre></td></tr></table></figure>
<p>　　如果要在新插入的子菜单中添加菜单项的话，同样可以使用AppendMenu函数来实现。<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">CMenu menu;</span><br><span class="line">	menu.CreateMenu();</span><br><span class="line">	<span class="comment">/*GetMenu()-&gt;AppendMenu(MF_POPUP, (UINT)menu.m_hMenu, "Test");</span></span><br><span class="line"><span class="comment">	menu.Detach();*/</span></span><br><span class="line">	GetMenu()-&gt;InsertMenu(<span class="number">2</span>, MF_POPUP | MF_BYPOSITION, (UINT)menu. m_hMenu,<span class="string">"Test"</span>);</span><br><span class="line"></span><br><span class="line">	menu.AppendMenu(MF_STRING, <span class="number">111</span>, <span class="string">"Hello"</span>);</span><br><span class="line">	menu.AppendMenu(MF_STRING, <span class="number">112</span>, <span class="string">"Bye"</span>);</span><br><span class="line">	menu.AppendMenu(MF_STRING, <span class="number">113</span>, <span class="string">"Mybole"</span>);</span><br><span class="line">	menu.Detach();</span><br></pre></td></tr></table></figure></p>
<p>　　111、112、113是随便赋予的ID号。<br>　　<br> <img src="http://img.blog.csdn.net/20170420230125731?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<p>　　若要在“文件”子菜单下添加一个菜单项Welcome，再添加一行代码：    GetMenu()-&gt;GetSubMenu(0)-&gt;AppendMenu(MF_STRING, 114, “Welcome”);<br>　　若要在“文件”中的“新建”和“打开”插入一个菜单项VC编程，再添加一行代码：<br>    GetMenu()-&gt;GetSubMenu(0)-&gt;InsertMenu(ID_FILE_OPEN, MF_BYCOMMAND | MF_STRING, 115， “VC编程”);</p>
<h3 id="删除菜单"><a href="#删除菜单" class="headerlink" title="删除菜单"></a>删除菜单</h3><p>　　删除“编辑”：在CMainFrame类的OnCreate函数最后（return之前）添加：<br>　　GetMenu()-&gt;DeleteMenu(1, MF_BYPOSITION);<br>　　删除“文件”下的“打开”：<br>　　GetMenu()-&gt;GetSubMenu(0)-&gt;DeleteMenu(2, MF_BYPOSITION);</p>
<h3 id="动态添加的菜单项的命令响应"><a href="#动态添加的菜单项的命令响应" class="headerlink" title="动态添加的菜单项的命令响应"></a>动态添加的菜单项的命令响应</h3><p>　　Resource.h中添加新ID<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> IDM_HELLO	111</span></span><br></pre></td></tr></table></figure></p>
<p>将menu.AppendMenu(MF_STRING, 111, “Hello”); 改为 menu.AppendMenu(MF_STRING, IDM_HELLO, “Hello”);</p>
<p>　　三部曲：<br>　　1.    点开MainFrm.h，增加为<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//&#123;&#123;AFX_MSG(CMainFrame)</span></span><br><span class="line">	<span class="function">afx_msg <span class="keyword">int</span> <span class="title">OnCreate</span><span class="params">(LPCREATESTRUCT lpCreateStruct)</span></span>;</span><br><span class="line">	<span class="function">afx_msg <span class="keyword">void</span> <span class="title">OnShow</span><span class="params">()</span></span>;</span><br><span class="line">	<span class="comment">//&#125;&#125;AFX_MSG</span></span><br><span class="line">	<span class="function">afx_msg <span class="keyword">void</span> <span class="title">OnHello</span><span class="params">()</span></span>;</span><br><span class="line">	DECLARE_MESSAGE_MAP()</span><br></pre></td></tr></table></figure></p>
<p>　　2. 点开MainFrm.cpp，增加为<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">BEGIN_MESSAGE_MAP(CMainFrame, CFrameWnd)</span><br><span class="line">	<span class="comment">//&#123;&#123;AFX_MSG_MAP(CMainFrame)</span></span><br><span class="line">	ON_WM_CREATE()</span><br><span class="line">	ON_COMMAND(IDM_SHOW, OnShow)</span><br><span class="line">	ON_COMMAND(IDM_HELLO, OnHello)</span><br><span class="line">	<span class="comment">//&#125;&#125;AFX_MSG_MAP</span></span><br><span class="line">END_MESSAGE_MAP()</span><br></pre></td></tr></table></figure></p>
<p>　　3. CMainFrame类中添加<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> CMainFrame::OnHello()</span><br><span class="line">&#123;</span><br><span class="line">	MessageBox(<span class="string">"Hello"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h2 id="电话本示例程序"><a href="#电话本示例程序" class="headerlink" title="电话本示例程序"></a>电话本示例程序</h2><p>　　删除之前写入CMainFrame类的OnCreate函数，留下原始函数。</p>
<h3 id="动态添加子菜单的实现"><a href="#动态添加子菜单的实现" class="headerlink" title="动态添加子菜单的实现"></a>动态添加子菜单的实现</h3><p>　　利用ClassWizard添加WM_CHAR消息。在Menu2View.h中添加：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span>:</span><br><span class="line">	<span class="keyword">int</span> m_nIndex;</span><br><span class="line">	CMenu m_menu;</span><br></pre></td></tr></table></figure></p>
<p>在Menu2View.cpp里，添加：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">CMenu2View::CMenu2View()</span><br><span class="line">&#123;</span><br><span class="line">	<span class="comment">// <span class="doctag">TODO:</span> add construction code here</span></span><br><span class="line">	m_nIndex = <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h3 id="显示输入的字符"><a href="#显示输入的字符" class="headerlink" title="显示输入的字符"></a>显示输入的字符</h3><h3 id="添加菜单项及其命令响应函数"><a href="#添加菜单项及其命令响应函数" class="headerlink" title="添加菜单项及其命令响应函数"></a>添加菜单项及其命令响应函数</h3><p>　　在资源编辑器中打开程序的菜单，在“帮助”后添加一个新菜单abc，添加4个菜单项。名称为1，ID为IDM_PHONE1，以此类推。用ClassWizard为CMenu2View类分别加上这四个菜单项的命令响应函数。<br>　　修改CMenu2View类的头文件，如下：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">protected</span>:</span><br><span class="line">	<span class="comment">//&#123;&#123;AFX_MSG(CMenu2View)</span></span><br><span class="line">	<span class="function">afx_msg <span class="keyword">void</span> <span class="title">OnRButtonDown</span><span class="params">(UINT nFlags, CPoint point)</span></span>;</span><br><span class="line">	<span class="function">afx_msg <span class="keyword">void</span> <span class="title">OnChar</span><span class="params">(UINT nChar, UINT nRepCnt, UINT nFlags)</span></span>;</span><br><span class="line">	<span class="function">afx_msg <span class="keyword">void</span> <span class="title">OnPhone1</span><span class="params">()</span></span>;</span><br><span class="line">	<span class="function">afx_msg <span class="keyword">void</span> <span class="title">OnPhone2</span><span class="params">()</span></span>;</span><br><span class="line">	<span class="function">afx_msg <span class="keyword">void</span> <span class="title">OnPhone3</span><span class="params">()</span></span>;</span><br><span class="line">	<span class="function">afx_msg <span class="keyword">void</span> <span class="title">OnPhone4</span><span class="params">()</span></span>;</span><br><span class="line">	<span class="comment">//&#125;&#125;AFX_MSG</span></span><br><span class="line">	DECLARE_MESSAGE_MAP()</span><br></pre></td></tr></table></figure></p>
<p>CMenu2View.cpp中，<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">	<span class="comment">//&#123;&#123;AFX_MSG_MAP(CMenu2View)</span></span><br><span class="line">	ON_WM_CHAR()</span><br><span class="line">	<span class="comment">//&#125;&#125;AFX_MSG_MAP</span></span><br><span class="line">	ON_COMMAND(IDM_PHONE1, OnPhone1)</span><br><span class="line">	ON_COMMAND(IDM_PHONE2, OnPhone2)</span><br><span class="line">	ON_COMMAND(IDM_PHONE3, OnPhone3)</span><br><span class="line">	ON_COMMAND(IDM_PHONE4, OnPhone4)</span><br><span class="line">	<span class="comment">// Standard printing commands</span></span><br><span class="line">	ON_COMMAND(ID_FILE_PRINT, CView::OnFilePrint)</span><br><span class="line">	ON_COMMAND(ID_FILE_PRINT_DIRECT, CView::OnFilePrint)</span><br><span class="line">	ON_COMMAND(ID_FILE_PRINT_PREVIEW, CView::OnFilePrintPreview)</span><br><span class="line">END_MESSAGE_MAP()</span><br></pre></td></tr></table></figure></p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> CMenu2View::OnPhone1() </span><br><span class="line">&#123;</span><br><span class="line">	<span class="function">CClientDC <span class="title">dc</span><span class="params">(<span class="keyword">this</span>)</span></span>;</span><br><span class="line">	dc.TextOut(<span class="number">0</span>, <span class="number">0</span>, m_strArray.GetAt(<span class="number">0</span>));</span><br><span class="line">	</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> CMenu2View::OnPhone2() </span><br><span class="line">&#123;</span><br><span class="line">	<span class="function">CClientDC <span class="title">dc</span><span class="params">(<span class="keyword">this</span>)</span></span>;</span><br><span class="line">	dc.TextOut(<span class="number">0</span>, <span class="number">0</span>, m_strArray.GetAt(<span class="number">1</span>));</span><br><span class="line">	</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> CMenu2View::OnPhone3() </span><br><span class="line">&#123;</span><br><span class="line">	<span class="function">CClientDC <span class="title">dc</span><span class="params">(<span class="keyword">this</span>)</span></span>;</span><br><span class="line">	dc.TextOut(<span class="number">0</span>, <span class="number">0</span>, m_strArray.GetAt(<span class="number">2</span>));</span><br><span class="line">	</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> CMenu2View::OnPhone4() </span><br><span class="line">&#123;</span><br><span class="line">	<span class="function">CClientDC <span class="title">dc</span><span class="params">(<span class="keyword">this</span>)</span></span>;</span><br><span class="line">	dc.TextOut(<span class="number">0</span>, <span class="number">0</span>, m_strArray.GetAt(<span class="number">3</span>));</span><br><span class="line">	</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="框架类窗口截获菜单命令消息"><a href="#框架类窗口截获菜单命令消息" class="headerlink" title="框架类窗口截获菜单命令消息"></a>框架类窗口截获菜单命令消息</h3><p>　　右键单击CMainFrame，选择Add Virtual Functions-OnCommand，单击Add Handler，再点击Edit Existing。<br> <figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20170420230209594?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述" title="">
                </div>
                <div class="image-caption">这里写图片描述</div>
            </figure><br>　　代码：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">BOOL CMainFrame::OnCommand(WPARAM wParam, LPARAM lParam) </span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">int</span> MenuCmdID = LOWORD(wParam);</span><br><span class="line">	CMenu2View *pView = (CMenu2View *)GetActiveView();</span><br><span class="line">	<span class="keyword">if</span> (MenuCmdID &gt;= IDM_PHONE1 &amp;&amp; MenuCmdID &lt; IDM_PHONE1 + pView-&gt;m_strArray.GetSize())</span><br><span class="line">	&#123;</span><br><span class="line">	<span class="comment">//MessageBox("Test");</span></span><br><span class="line">	<span class="function">CClientDC <span class="title">dc</span><span class="params">(pView)</span></span>;</span><br><span class="line">	dc.TextOut(<span class="number">0</span>, <span class="number">0</span>, pView-&gt;m_strArray.GetAt(MenuCmdID - IDM_PHONE1));</span><br><span class="line">	<span class="keyword">return</span> TRUE;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> CFrameWnd::OnCommand(wParam, lParam);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>　　将MainFrm.cpp里添加#include “Menu2View.h” 。<br>　　将Menu2View.cpp中的#include “Menu2Doc.h”剪切到Menu2View.h文件的前部（#endif // _MSC_VER &gt; 1000下面）。</p>
<p>　　最终代码：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">void</span> CMenu2View::OnChar(UINT nChar, UINT nRepCnt, UINT nFlags) </span><br><span class="line">&#123;</span><br><span class="line">	<span class="function">CClientDC <span class="title">dc</span><span class="params">(<span class="keyword">this</span>)</span></span>;</span><br><span class="line">	<span class="keyword">if</span> (<span class="number">0x0d</span> == nChar)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span> (<span class="number">0</span> == ++m_nIndex)</span><br><span class="line">		&#123;</span><br><span class="line">			m_menu.CreatePopupMenu();</span><br><span class="line">			GetParent()-&gt;GetMenu()-&gt;AppendMenu(MF_POPUP, (UINT)m_menu.m_hMenu, <span class="string">"PhoneBook"</span>);</span><br><span class="line">			GetParent()-&gt;DrawMenuBar();</span><br><span class="line">		&#125;</span><br><span class="line">		m_menu.AppendMenu(MF_STRING, IDM_PHONE1 + m_nIndex, m_strLine.Left(m_strLine.Find(<span class="string">' '</span>)));</span><br><span class="line">		m_strArray.Add(m_strLine);</span><br><span class="line">		m_strLine.Empty();</span><br><span class="line">		Invalidate();</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">	&#123;</span><br><span class="line">		m_strLine += nChar;</span><br><span class="line">		dc.TextOut(<span class="number">0</span>, <span class="number">0</span>, m_strLine);</span><br><span class="line">	&#125;</span><br><span class="line">	CView::OnChar(nChar, nRepCnt, nFlags);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>　　效果：<br> <figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20170420230235013?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述" title="">
                </div>
                <div class="image-caption">这里写图片描述</div>
            </figure></p>
<h1 id="简单绘图"><a href="#简单绘图" class="headerlink" title="简单绘图"></a>简单绘图</h1><h2 id="MFC消息映射机制"><a href="#MFC消息映射机制" class="headerlink" title="MFC消息映射机制"></a>MFC消息映射机制</h2><p>　　与消息有关的三处信息：1.头文件XXXX.h中 2.源文件XXXX.cpp中 3.源文件XXXX.cpp的响应函数中</p>
<h2 id="绘制线条"><a href="#绘制线条" class="headerlink" title="绘制线条"></a>绘制线条</h2><p>　　对CDrawView右键点击Add Member Variable，变量名称：m_ptOrigin，类型：CPoint，访问权限设置：Private。<br>　　代码：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> CDrawView::OnLButtonDown(UINT nFlags, CPoint point) </span><br><span class="line">&#123;</span><br><span class="line">	m_ptOrigin = point;</span><br><span class="line">	CView::OnLButtonDown(nFlags, point);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> CDrawView::OnLButtonUp(UINT nFlags, CPoint point) </span><br><span class="line">&#123;</span><br><span class="line">	<span class="comment">//首先获得窗口的设备描述表</span></span><br><span class="line">	HDC hdc;</span><br><span class="line">	hdc = ::GetDC(m_hWnd);</span><br><span class="line">	<span class="comment">//移动到线条的起点</span></span><br><span class="line">	MoveToEx(hdc, m_ptOrigin.x, m_ptOrigin.y, <span class="literal">NULL</span>);</span><br><span class="line">	<span class="comment">//画线</span></span><br><span class="line">	LineTo(hdc, point.x, point.y);</span><br><span class="line">	<span class="comment">//释放设备描述表</span></span><br><span class="line">	::ReleaseDC(m_hWnd, hdc);</span><br><span class="line"></span><br><span class="line">	CView::OnLButtonUp(nFlags, point);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20170420230302938?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述" title="">
                </div>
                <div class="image-caption">这里写图片描述</div>
            </figure>
<h3 id="利用MFC的CDC类实现画线功能"><a href="#利用MFC的CDC类实现画线功能" class="headerlink" title="利用MFC的CDC类实现画线功能"></a>利用MFC的CDC类实现画线功能</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> CDrawView::OnLButtonUp(UINT nFlags, CPoint point) </span><br><span class="line">&#123;</span><br><span class="line">	<span class="comment">/*//首先获得窗口的设备描述表</span></span><br><span class="line"><span class="comment">	HDC hdc;</span></span><br><span class="line"><span class="comment">	hdc = ::GetDC(m_hWnd);</span></span><br><span class="line"><span class="comment">	//移动到线条的起点</span></span><br><span class="line"><span class="comment">	MoveToEx(hdc, m_ptOrigin.x, m_ptOrigin.y, NULL);</span></span><br><span class="line"><span class="comment">	//画线</span></span><br><span class="line"><span class="comment">	LineTo(hdc, point.x, point.y);</span></span><br><span class="line"><span class="comment">	//释放设备描述表</span></span><br><span class="line"><span class="comment">	::ReleaseDC(m_hWnd, hdc);*/</span></span><br><span class="line"></span><br><span class="line">	CDC* pDC = GetDC();</span><br><span class="line">	pDC-&gt;MoveTo(m_ptOrigin);</span><br><span class="line">	pDC-&gt;LineTo(point);</span><br><span class="line">	ReleaseDC(pDC);</span><br><span class="line"></span><br><span class="line">	CView::OnLButtonUp(nFlags, point);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="利用MFC的CWindowDC类实现画线功能"><a href="#利用MFC的CWindowDC类实现画线功能" class="headerlink" title="利用MFC的CWindowDC类实现画线功能"></a>利用MFC的CWindowDC类实现画线功能</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> CDrawView::OnLButtonUp(UINT nFlags, CPoint point) </span><br><span class="line">&#123;</span><br><span class="line">	CWindowDC dc(GetParent());</span><br><span class="line">	dc.MoveTo(m_ptOrigin);</span><br><span class="line">	dc.LineTo(point);</span><br><span class="line"></span><br><span class="line">	CView::OnLButtonUp(nFlags, point);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p> <img src="http://img.blog.csdn.net/20170420230346873?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<h3 id="在桌面窗口中画线"><a href="#在桌面窗口中画线" class="headerlink" title="在桌面窗口中画线"></a>在桌面窗口中画线</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> CDrawView::OnLButtonUp(UINT nFlags, CPoint point) </span><br><span class="line">&#123;</span><br><span class="line">	CWindowDC dc(GetDesktopWindow());</span><br><span class="line">	dc.MoveTo(m_ptOrigin);</span><br><span class="line">	dc.LineTo(point);</span><br><span class="line"></span><br><span class="line">	CView::OnLButtonUp(nFlags, point);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p> <img src="http://img.blog.csdn.net/20170420230404138?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<p>　　<strong>注意</strong>：在桌面上画图需要权限（一般写代码时需要避免软件以外的操作）。</p>
<h3 id="绘制彩色线条"><a href="#绘制彩色线条" class="headerlink" title="绘制彩色线条"></a>绘制彩色线条</h3><p>　　在程序中，当构造一个GDI对象后，该对象并不会立即生效，必须选入设备描述表，它才会在以后的绘制操作中生效。<br>一般情况下，在完成绘图操作之后，都要利用SelectObject函数把之前的GDI对象选入设备描述表，以便使其恢复到先前的状态。<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> CDrawView::OnLButtonUp(UINT nFlags, CPoint point) </span><br><span class="line">&#123;</span><br><span class="line">	CPen pen(PS_SOLID, 1, RGB(255, 0, 0));</span><br><span class="line">	<span class="function">CClientDC <span class="title">dc</span><span class="params">(<span class="keyword">this</span>)</span></span>;</span><br><span class="line">	CPen* pOldPen = dc.SelectObject(&amp;pen);</span><br><span class="line">	dc.MoveTo(m_ptOrigin);</span><br><span class="line">	dc.LineTo(point);</span><br><span class="line">	dc.SelectObject(pOldPen);</span><br><span class="line"></span><br><span class="line">	CView::OnLButtonUp(nFlags, point);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>　　运行的效果是红色线条。</p>
<p>　　改为    CPen pen(PS_DASH, 1, RGB(255, 0, 0));  是虚线。（其中第二个参数需小于等于10）<br>    CPen pen(PS_DOT, 1, RGB(255, 0, 0)); 是点线。</p>
<h2 id="使用画刷绘图"><a href="#使用画刷绘图" class="headerlink" title="使用画刷绘图"></a>使用画刷绘图</h2><h3 id="简单画刷"><a href="#简单画刷" class="headerlink" title="简单画刷"></a>简单画刷</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> CDrawView::OnLButtonUp(UINT nFlags, CPoint point) </span><br><span class="line">&#123;</span><br><span class="line">	<span class="comment">//创建一个红色画刷</span></span><br><span class="line">	CBrush brush(RGB(255, 0, 0));</span><br><span class="line">	<span class="comment">//创建并获得设备描述表</span></span><br><span class="line">	<span class="function">CClientDC <span class="title">dc</span><span class="params">(<span class="keyword">this</span>)</span></span>;</span><br><span class="line">	<span class="comment">//利用红色画刷填充鼠标拖拽过程中形成的矩形区域</span></span><br><span class="line">	dc.FillRect(CRect(m_ptOrigin, point),&amp;brush);</span><br><span class="line"></span><br><span class="line">	CView::OnLButtonUp(nFlags, point);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p> <img src="http://img.blog.csdn.net/20170420230440190?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<h3 id="位图画刷"><a href="#位图画刷" class="headerlink" title="位图画刷"></a>位图画刷</h3><p>　　Insert-Resource-Bitmap-New，在这里发挥灵魂画手的天赋吧！<br>　　代码：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> CDrawView::OnLButtonUp(UINT nFlags, CPoint point) </span><br><span class="line">&#123;</span><br><span class="line">	<span class="comment">//创建位图对象</span></span><br><span class="line">	CBitmap bitmap;</span><br><span class="line">	<span class="comment">//加载位图资源</span></span><br><span class="line">	bitmap.LoadBitmap(IDB_BITMAP1);</span><br><span class="line">	<span class="comment">//创建位图画刷</span></span><br><span class="line">	<span class="function">CBrush <span class="title">brush</span><span class="params">(&amp;bitmap)</span></span>;</span><br><span class="line">	<span class="comment">//创建并获得设备描述表</span></span><br><span class="line">	<span class="function">CClientDC <span class="title">dc</span><span class="params">(<span class="keyword">this</span>)</span></span>;</span><br><span class="line">	<span class="comment">//利用位图画刷填充鼠标拖拽过程中形成的矩形区域</span></span><br><span class="line">	dc.FillRect(CRect(m_ptOrigin, point),&amp;brush);</span><br><span class="line"></span><br><span class="line">	CView::OnLButtonUp(nFlags, point);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p> <img src="http://img.blog.csdn.net/20170420230503092?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"><br>　　我画的是不是很滑稽（手动滑稽）</p>
<h3 id="透明画刷"><a href="#透明画刷" class="headerlink" title="透明画刷"></a>透明画刷</h3><p>　　先进行一种尝试：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> CDrawView::OnLButtonUp(UINT nFlags, CPoint point) </span><br><span class="line">&#123;</span><br><span class="line">	<span class="comment">//创建并获得设备描述表</span></span><br><span class="line">	<span class="function">CClientDC <span class="title">dc</span><span class="params">(<span class="keyword">this</span>)</span></span>;</span><br><span class="line">	<span class="comment">//绘制一个矩形</span></span><br><span class="line">	dc.Rectangle(CRect(m_ptOrigin,point));</span><br><span class="line"></span><br><span class="line">	CView::OnLButtonUp(nFlags, point);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p> <img src="http://img.blog.csdn.net/20170420230521295?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"><br>　　如果希望矩形内部是透明的，能够看到被遮挡的图形，就要创建一个透明画刷。<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> CDrawView::OnLButtonUp(UINT nFlags, CPoint point) </span><br><span class="line">&#123;</span><br><span class="line">	<span class="comment">//创建并获得设备描述表</span></span><br><span class="line">	<span class="function">CClientDC <span class="title">dc</span><span class="params">(<span class="keyword">this</span>)</span></span>;</span><br><span class="line">	<span class="comment">//创建一个空画刷</span></span><br><span class="line">	CBrush *pBrush = CBrush::FromHandle((HBRUSH)GetStockObject(NULL_BRUSH));</span><br><span class="line">	<span class="comment">//将空画刷选入设备描述表</span></span><br><span class="line">	CBrush *pOldBrush = dc.SelectObject(pBrush);</span><br><span class="line">	<span class="comment">//绘制一个矩形</span></span><br><span class="line">	dc.Rectangle(CRect(m_ptOrigin, point));</span><br><span class="line">	<span class="comment">//恢复先前的画刷</span></span><br><span class="line">	dc.SelectObject(pOldBrush);</span><br><span class="line"></span><br><span class="line">	CView::OnLButtonUp(nFlags, point);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20170420230550253?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述" title="">
                </div>
                <div class="image-caption">这里写图片描述</div>
            </figure>
<h2 id="绘制连续线条"><a href="#绘制连续线条" class="headerlink" title="绘制连续线条"></a>绘制连续线条</h2><p>　　首先为视类增加鼠标移动消息（WM_MOUSEMOVE）的响应函数（默认OnMouseMove），并为视类添加一个BOOL型的私有成员变量m_bDraw。<br>在视类头文件定义：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">　Private:</span><br><span class="line">　BOOL m_bDraw;</span><br></pre></td></tr></table></figure></p>
<p>在视类的构造函数中：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">m_bDraw = FALSE;</span><br></pre></td></tr></table></figure></p>
<p>在OnLButtonDown中：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">m_bDraw = TRUE;</span><br></pre></td></tr></table></figure></p>
<p>在OnLButtonUp中：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">m_bDraw = FALSE;</span><br></pre></td></tr></table></figure></p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> CDrawView::OnMouseMove(UINT nFlags, CPoint point) </span><br><span class="line">&#123;</span><br><span class="line">	<span class="function">CClientDC <span class="title">dc</span><span class="params">(<span class="keyword">this</span>)</span></span>;</span><br><span class="line">	<span class="keyword">if</span>(m_bDraw == TRUE)</span><br><span class="line">	&#123;</span><br><span class="line">		dc.MoveTo(m_ptOrigin);</span><br><span class="line">		dc.LineTo(point);</span><br><span class="line">		<span class="comment">//修改线段的起点</span></span><br><span class="line">		m_ptOrigin = point;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	CView::OnMouseMove(nFlags, point);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20170420230616957?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述" title="">
                </div>
                <div class="image-caption">这里写图片描述</div>
            </figure>
<p>给线条换色：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> CDrawView::OnMouseMove(UINT nFlags, CPoint point) </span><br><span class="line">&#123;</span><br><span class="line">	<span class="function">CClientDC <span class="title">dc</span><span class="params">(<span class="keyword">this</span>)</span></span>;</span><br><span class="line">		<span class="comment">//创建一个红色的、宽度为1的实线画笔</span></span><br><span class="line">		CPen pen(PS_SOLID, 1, RGB(255, 0, 0));</span><br><span class="line">		<span class="comment">//把创建的画笔选入设备描述表</span></span><br><span class="line">		CPen *pOldPen = dc.SelectObject(&amp;pen);</span><br><span class="line">		<span class="keyword">if</span> (m_bDraw == TRUE)</span><br><span class="line">		&#123;</span><br><span class="line">		dc.MoveTo(m_ptOrigin);</span><br><span class="line">		dc.LineTo(point);</span><br><span class="line">		<span class="comment">//修改线段的起点</span></span><br><span class="line">		m_ptOrigin = point;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//恢复设备描述表</span></span><br><span class="line">		dc.SelectObject(pOldPen);</span><br><span class="line"></span><br><span class="line">	CView::OnMouseMove(nFlags, point);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h2 id="绘制扇形效果的线条"><a href="#绘制扇形效果的线条" class="headerlink" title="绘制扇形效果的线条"></a>绘制扇形效果的线条</h2><p>　　去掉上述代码中的     m_ptOrigin = point;</p>
<p>　　效果：<br>　　<img src="http://img.blog.csdn.net/20170420230636254?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<p>　　绘制一个带边线的扇形：<br>　　为CDrawView类增加一个CPoint类型的私有成员变量m_ptOld，用来保存鼠标上一个移动点。</p>
<p>　　在OnLButton中：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">m_ptOld = point;</span><br></pre></td></tr></table></figure></p>
<p>　　在OnMouseMove中：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> CDrawView::OnMouseMove(UINT nFlags, CPoint point) </span><br><span class="line">&#123;</span><br><span class="line">	<span class="function">CClientDC <span class="title">dc</span><span class="params">(<span class="keyword">this</span>)</span></span>;</span><br><span class="line">		<span class="comment">//创建一个红色的、宽度为1的实线画笔</span></span><br><span class="line">		CPen pen(PS_SOLID, 1, RGB(255, 0, 0));</span><br><span class="line">		<span class="comment">//把创建的画笔选入设备描述表</span></span><br><span class="line">		CPen *pOldPen = dc.SelectObject(&amp;pen);</span><br><span class="line">		<span class="keyword">if</span> (m_bDraw == TRUE)</span><br><span class="line">		&#123;</span><br><span class="line">		dc.MoveTo(m_ptOrigin);</span><br><span class="line">		dc.LineTo(point);</span><br><span class="line">		dc.LineTo(m_ptOld);</span><br><span class="line">		<span class="comment">//修改线段的起点</span></span><br><span class="line">		<span class="comment">//m_ptOrigin = point;</span></span><br><span class="line">		m_ptOld = point;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//恢复设备描述表</span></span><br><span class="line">		dc.SelectObject(pOldPen);</span><br><span class="line"></span><br><span class="line">	CView::OnMouseMove(nFlags, point);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>　　最好将OnLButtonUp里原来写的代码删除或注释之。<br>　　效果：<br> <figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20170420230656311?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述" title="">
                </div>
                <div class="image-caption">这里写图片描述</div>
            </figure></p>
<p>　　MFC提供一个设置绘图模式的函数SetROP2，带有一个参数R2_BLACK、R2_WHITE、R2_MERGENOTPEN等。<br>　　例如，在CClientDC dc(this); 下方添加代码：     dc.SetROP2(R2_MERGENOTPEN);  编译运行后看不到绘制的线条，这就是设置了R2_MERGENOTPEN这种绘图模式。<br>使用R2_BLACK，将会发现绘制的线条颜色始终都是黑色的。</p>
<h1 id="文本编程"><a href="#文本编程" class="headerlink" title="文本编程"></a>文本编程</h1><h2 id="插入符"><a href="#插入符" class="headerlink" title="插入符"></a>插入符</h2><h3 id="创建文本插入符"><a href="#创建文本插入符" class="headerlink" title="创建文本插入符"></a>创建文本插入符</h3><p>　　创建一个单文档类型的MFC AppWizard(exe)工程，取名为Text。<br>为CTextView类添加WM_CREATE消息的响应函数OnCreate，在此函数中创建一个宽度为20、高度为100的插入符。代码如下。<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> CTextView::OnCreate(LPCREATESTRUCT lpCreateStruct) </span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">if</span> (CView::OnCreate(lpCreateStruct) == <span class="number">-1</span>)</span><br><span class="line">		<span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">	</span><br><span class="line">	CreateSolidCaret(<span class="number">20</span>,<span class="number">100</span>);</span><br><span class="line">	ShowCaret();</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20170420230721832?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述" title="">
                </div>
                <div class="image-caption">这里写图片描述</div>
            </figure>
<p>　　让插入符适应于当前字体的大小：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> CTextView::OnCreate(LPCREATESTRUCT lpCreateStruct) </span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">if</span> (CView::OnCreate(lpCreateStruct) == <span class="number">-1</span>)</span><br><span class="line">		<span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">	</span><br><span class="line">	<span class="comment">//创建设备描述表</span></span><br><span class="line">	<span class="function">CClientDC <span class="title">dc</span><span class="params">(<span class="keyword">this</span>)</span></span>;</span><br><span class="line">	<span class="comment">//定义文本信息结构体变量</span></span><br><span class="line">	TEXTMETRIC tm;</span><br><span class="line">	<span class="comment">//获得设备描述表中的文本信息</span></span><br><span class="line">	dc.GetTextMetrics(&amp;tm);</span><br><span class="line">	<span class="comment">//根据字体大小，创建何时的插入符（除以8是经验值）</span></span><br><span class="line">	CreateSolidCaret(tm.tmAveCharWidth/<span class="number">8</span>, tm.tmHeight);</span><br><span class="line">	<span class="comment">//显示插入符</span></span><br><span class="line">	ShowCaret();</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>　　运行结果就比较符合常规了。</p>
<h3 id="创建图形插入符"><a href="#创建图形插入符" class="headerlink" title="创建图形插入符"></a>创建图形插入符</h3><p>　　新建一个位图资源，画一个图形。<br>在TextView.h中添加<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span>:</span><br><span class="line">		CBitmap bitmap;</span><br></pre></td></tr></table></figure></p>
<p>代码：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> CTextView::OnCreate(LPCREATESTRUCT lpCreateStruct) </span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">if</span> (CView::OnCreate(lpCreateStruct) == <span class="number">-1</span>)</span><br><span class="line">		<span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">	</span><br><span class="line"></span><br><span class="line">	bitmap.LoadBitmap(IDB_BITMAP1);</span><br><span class="line">	CreateCaret(&amp;bitmap);</span><br><span class="line">	ShowCaret();</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20170420230741630?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述" title="">
                </div>
                <div class="image-caption">这里写图片描述</div>
            </figure>
<h2 id="窗口重绘"><a href="#窗口重绘" class="headerlink" title="窗口重绘"></a>窗口重绘</h2><h3 id="OnDraw函数"><a href="#OnDraw函数" class="headerlink" title="OnDraw函数"></a>OnDraw函数</h3><p>　　实现在程序窗口中输出一串文字的功能。<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> CTextView::OnDraw(CDC* pDC)</span><br><span class="line">&#123;</span><br><span class="line">	CTextDoc* pDoc = GetDocument();</span><br><span class="line">	ASSERT_VALID(pDoc);</span><br><span class="line"></span><br><span class="line">	<span class="function">CString <span class="title">str</span><span class="params">(<span class="string">"VC++ 深入编程"</span>)</span></span>;</span><br><span class="line">	pDC-&gt;TextOut(<span class="number">50</span>, <span class="number">50</span>, str);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p> <img src="http://img.blog.csdn.net/20170420230758895?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<h3 id="添加字符串资源"><a href="#添加字符串资源" class="headerlink" title="添加字符串资源"></a>添加字符串资源</h3><p>　　点击Resource View-String Table选项，在此字符串表最底部的空行上双击，即可弹出添加新字符串资源的对话框。ID：IDS_STRINGVC，Caption：“VC++编程 文本编程”。代码如下。<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> CTextView::OnDraw(CDC* pDC)</span><br><span class="line">&#123;</span><br><span class="line">	CTextDoc* pDoc = GetDocument();</span><br><span class="line">	ASSERT_VALID(pDoc);</span><br><span class="line"></span><br><span class="line">	<span class="comment">//CString str("VC++ 深入编程");</span></span><br><span class="line">	CString str;</span><br><span class="line">	str = <span class="string">"VC++ 深入编程"</span>;</span><br><span class="line">	pDC-&gt;TextOut(<span class="number">50</span>, <span class="number">50</span>, str);</span><br><span class="line"></span><br><span class="line">	str.LoadString(IDS_STRINGVC);</span><br><span class="line">	pDC-&gt;TextOut(<span class="number">0</span>, <span class="number">200</span>, str);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20170420230814077?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述" title="">
                </div>
                <div class="image-caption">这里写图片描述</div>
            </figure>
<h3 id="路径"><a href="#路径" class="headerlink" title="路径"></a>路径</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">void</span> CTextView::OnDraw(CDC* pDC)</span><br><span class="line">&#123;</span><br><span class="line">	CTextDoc* pDoc = GetDocument();</span><br><span class="line">	ASSERT_VALID(pDoc);</span><br><span class="line"></span><br><span class="line">	<span class="comment">//CString str("VC++ 深入编程");</span></span><br><span class="line">	CString str;</span><br><span class="line">	str = <span class="string">"VC++ 深入编程"</span>;</span><br><span class="line">	pDC-&gt;TextOut(<span class="number">50</span>, <span class="number">50</span>, str);</span><br><span class="line"></span><br><span class="line">	CSize sz = pDC-&gt;GetTextExtent(str);</span><br><span class="line"></span><br><span class="line">	str.LoadString(IDS_STRINGVC);</span><br><span class="line">	pDC-&gt;TextOut(<span class="number">0</span>, <span class="number">200</span>, str);</span><br><span class="line"></span><br><span class="line">	pDC-&gt;BeginPath();</span><br><span class="line">	pDC-&gt;Rectangle(<span class="number">50</span>, <span class="number">50</span>, <span class="number">50</span>+sz.cx, <span class="number">50</span>+sz.cy);</span><br><span class="line">	pDC-&gt;EndPath();</span><br><span class="line"></span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;<span class="number">300</span>; i+=<span class="number">10</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		pDC-&gt;MoveTo(<span class="number">0</span>, i);</span><br><span class="line">		pDC-&gt;LineTo(<span class="number">300</span>, i);</span><br><span class="line">		pDC-&gt;MoveTo(i,<span class="number">0</span>);</span><br><span class="line">		pDC-&gt;LineTo(i,<span class="number">300</span>);</span><br><span class="line">	&#125;</span><br></pre></td></tr></table></figure>
<p> <img src="http://img.blog.csdn.net/20170420230830380?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> CTextView::OnDraw(CDC* pDC)</span><br><span class="line">&#123;</span><br><span class="line">	CTextDoc* pDoc = GetDocument();</span><br><span class="line">	ASSERT_VALID(pDoc);</span><br><span class="line"></span><br><span class="line">	<span class="comment">//CString str("VC++ 深入编程");</span></span><br><span class="line">	CString str;</span><br><span class="line">	str = <span class="string">"VC++ 深入编程"</span>;</span><br><span class="line">	pDC-&gt;TextOut(<span class="number">50</span>, <span class="number">50</span>, str);</span><br><span class="line"></span><br><span class="line">	CSize sz = pDC-&gt;GetTextExtent(str);</span><br><span class="line"></span><br><span class="line">	str.LoadString(IDS_STRINGVC);</span><br><span class="line">	pDC-&gt;TextOut(<span class="number">0</span>, <span class="number">200</span>, str);</span><br><span class="line"></span><br><span class="line">	pDC-&gt;BeginPath();</span><br><span class="line">	pDC-&gt;Rectangle(<span class="number">50</span>, <span class="number">50</span>, <span class="number">50</span>+sz.cx, <span class="number">50</span>+sz.cy);</span><br><span class="line">	pDC-&gt;EndPath();</span><br><span class="line">	pDC-&gt;SelectClipPath(RGN_DIFF);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;<span class="number">300</span>; i+=<span class="number">10</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		pDC-&gt;MoveTo(<span class="number">0</span>, i);</span><br><span class="line">		pDC-&gt;LineTo(<span class="number">300</span>, i);</span><br><span class="line">		pDC-&gt;MoveTo(i,<span class="number">0</span>);</span><br><span class="line">		pDC-&gt;LineTo(i,<span class="number">300</span>);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p> <img src="http://img.blog.csdn.net/20170420230849318?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"><br>　　这正是RGN_DIFF模式的效果。<br>　　如果是RGN_AND，效果是新的裁剪区域是当前裁剪区域和当前路径层的交集。</p>
<p>　　路径层的作用：实现特殊效果。如，希望整幅图形中某一部分与其他部分有所区别，就可以把这部分的图形设置到一个路径层中，然后利用SelectClipPath函数设置一种模式，让路径层和裁剪区域进行互操作以达到一种特殊效果。</p>
<h2 id="字符输入"><a href="#字符输入" class="headerlink" title="字符输入"></a>字符输入</h2><p>　　当用户在键盘上按下某个字符按键后，要把该字符输出到程序窗口上。<br>首先让CTextView捕获WM_CHAR消息，接着为该类定义一个CString类型的成员变量：m_strLine，并在CTextView类的构造函数中将这个变量初始化：m_strLine = “”;<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> CTextView::OnLButtonDown(UINT nFlags, CPoint point) </span><br><span class="line">&#123;</span><br><span class="line">	SetCaretPos(point);</span><br><span class="line"></span><br><span class="line">	CView::OnLButtonDown(nFlags, point);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p><img src="http://img.blog.csdn.net/20170420230906115?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"><br>　　为CTextView类再增加一个CPoint类型的成员变量，取名m_ptOrigin，权限为私有。在CTextView类的构造函数中设置其初值为0。<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> CTextView::OnLButtonDown(UINT nFlags, CPoint point) </span><br><span class="line">&#123;</span><br><span class="line">	SetCaretPos(point);</span><br><span class="line">	m_strLine.Empty();</span><br><span class="line">	m_ptOrigin = point;</span><br><span class="line"></span><br><span class="line">	CView::OnLButtonDown(nFlags, point);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>　　<strong>注意：回车字符的ASCII码十六进制是0x0d，退格键的ASCII码十六进制值是0x08。</strong></p>
<p>　　最终代码：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> CTextView::OnChar(UINT nChar, UINT nRepCnt, UINT nFlags) </span><br><span class="line">&#123;</span><br><span class="line">	<span class="function">CClientDC <span class="title">dc</span><span class="params">(<span class="keyword">this</span>)</span></span>;</span><br><span class="line">	TEXTMETRIC tm;</span><br><span class="line">	dc.GetTextMetrics(&amp;tm);</span><br><span class="line">	<span class="keyword">if</span> (<span class="number">0x0d</span> == nChar)</span><br><span class="line">	&#123;</span><br><span class="line">	m_strLine.Empty();</span><br><span class="line">	m_ptOrigin.y += tm.tmHeight;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span> <span class="keyword">if</span>(<span class="number">0x08</span> == nChar)</span><br><span class="line">	&#123;</span><br><span class="line">		COLORREF clr = dc.SetTextColor(dc.GetBkColor());</span><br><span class="line">		dc.TextOut(m_ptOrigin.x, m_ptOrigin.y, m_strLine);</span><br><span class="line">		m_strLine = m_strLine.Left(m_strLine.GetLength() - <span class="number">1</span>);</span><br><span class="line">		dc.SetTextColor(clr);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">	&#123;</span><br><span class="line">		m_strLine += nChar; </span><br><span class="line">	&#125;</span><br><span class="line">	CSize sz = dc.GetTextExtent(m_strLine);</span><br><span class="line">	CPoint pt;</span><br><span class="line">	pt.x = m_ptOrigin.x + sz.cx;</span><br><span class="line">	pt.y = m_ptOrigin.y;</span><br><span class="line">	SetCaretPos(pt);</span><br><span class="line"></span><br><span class="line">	dc.TextOut(m_ptOrigin.x, m_ptOrigin.y, m_strLine);</span><br><span class="line"></span><br><span class="line">	</span><br><span class="line">	CView::OnChar(nChar, nRepCnt, nFlags);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p><img src="http://img.blog.csdn.net/20170420230925890?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<h3 id="设置字体"><a href="#设置字体" class="headerlink" title="设置字体"></a>设置字体</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> CTextView::OnChar(UINT nChar, UINT nRepCnt, UINT nFlags) </span><br><span class="line">&#123;</span><br><span class="line">	<span class="function">CClientDC <span class="title">dc</span><span class="params">(<span class="keyword">this</span>)</span></span>;</span><br><span class="line">	CFont font;</span><br><span class="line">	font.CreatePointFont(<span class="number">300</span>, <span class="string">"华文行楷"</span>, <span class="literal">NULL</span>);</span><br><span class="line">	CFont *pOldFont = dc.SelectObject(&amp;font);</span><br><span class="line">……</span><br><span class="line">	dc.SelectObject(pOldFont);</span><br><span class="line">	</span><br><span class="line">	CView::OnChar(nChar, nRepCnt, nFlags);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p> <img src="http://img.blog.csdn.net/20170420230949366?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<h3 id="字幕变色功能的实现"><a href="#字幕变色功能的实现" class="headerlink" title="字幕变色功能的实现"></a>字幕变色功能的实现</h3><p>　　在这个Text例子中，我们在视类的OnCreate 函数中设置定时器，设置一个时间间隔为100ms，标识为1的定时器。<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> CTextView::OnCreate(LPCREATESTRUCT lpCreateStruct) </span><br><span class="line">&#123;</span><br><span class="line">	……</span><br><span class="line"></span><br><span class="line">	SetTimer(<span class="number">1</span>, <span class="number">100</span>, <span class="literal">NULL</span>);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>　　给CTextView类添加WM_TIMER消息的响应函数。<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> CTextView::OnTimer(UINT nIDEvent) </span><br><span class="line">&#123;</span><br><span class="line">	m_nWidth += <span class="number">5</span>;</span><br><span class="line"></span><br><span class="line">	<span class="function">CClientDC <span class="title">dc</span><span class="params">(<span class="keyword">this</span>)</span></span>;</span><br><span class="line">	TEXTMETRIC tm;</span><br><span class="line">	dc.GetTextMetrics(&amp;tm);</span><br><span class="line">	CRect rect;</span><br><span class="line">	rect.left =<span class="number">0</span>;</span><br><span class="line">	rect.top = <span class="number">200</span>;</span><br><span class="line">	rect.right = m_nWidth;</span><br><span class="line">	rect.bottom = rect.top + tm.tmHeight;</span><br><span class="line"></span><br><span class="line">	dc.SetTextColor(RGB(<span class="number">255</span>, <span class="number">0</span>, <span class="number">0</span>));</span><br><span class="line">	CString str;</span><br><span class="line">	str.LoadString(IDS_STRINGVC);</span><br><span class="line">	dc.DrawText(str, rect, DT_LEFT);</span><br><span class="line">	</span><br><span class="line">	rect.top = <span class="number">150</span>;</span><br><span class="line">	rect.bottom = rect.top + tm.tmHeight;</span><br><span class="line">	dc.DrawText(str, rect, DT_RIGHT);</span><br><span class="line">	</span><br><span class="line">	CSize sz = dc.GetTextExtent(str);</span><br><span class="line">	<span class="keyword">if</span> (m_nWidth &gt; sz.cx)</span><br><span class="line">	&#123;</span><br><span class="line">		m_nWidth = <span class="number">0</span>;</span><br><span class="line">		dc.SetTextColor(RGB(<span class="number">0</span>, <span class="number">255</span>, <span class="number">0</span>));</span><br><span class="line">		dc.TextOut(<span class="number">0</span>, <span class="number">200</span>, str);</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	CView::OnTimer(nIDEvent);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>　　红色渐变效果可看到。<br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20170420231009906?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述" title="">
                </div>
                <div class="image-caption">这里写图片描述</div>
            </figure></p>
<h1 id="绘图控制"><a href="#绘图控制" class="headerlink" title="绘图控制"></a>绘图控制</h1><h2 id="简单绘图-1"><a href="#简单绘图-1" class="headerlink" title="简单绘图"></a>简单绘图</h2><p>　　新建一个单文档类型的MFC AppWizard(exe)工程，取名：Graphic。<br>　　添加的菜单项：<br> <figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20170420231023694?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述" title="">
                </div>
                <div class="image-caption">这里写图片描述</div>
            </figure><br>　　给CGraphicView类中添加一个私有变量：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">UINT m_nDrawType;</span><br></pre></td></tr></table></figure></p>
<p>　　在视类构造函数中将此变量初始化为0。</p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> CGraphicView::OnDot() </span><br><span class="line">&#123;</span><br><span class="line">	m_nDrawType = <span class="number">1</span>;</span><br><span class="line">	</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> CGraphicView::OnLine() </span><br><span class="line">&#123;</span><br><span class="line">	m_nDrawType = <span class="number">2</span>;	</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> CGraphicView::OnRectangle() </span><br><span class="line">&#123;</span><br><span class="line">	m_nDrawType = <span class="number">3</span>;	</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> CGraphicView::OnEllipse() </span><br><span class="line">&#123;</span><br><span class="line">	m_nDrawType = <span class="number">4</span>;	</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>　　CGraphicView类再增加一个CPoint类型的私有成员变量：m_ptOrigin。在CGraphicView类构造函数中，将该变量的值设置为0。<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> CGraphicView::OnLButtonDown(UINT nFlags, CPoint point) </span><br><span class="line">&#123;</span><br><span class="line">	m_ptOrigin = point;</span><br><span class="line">	</span><br><span class="line">	CView::OnLButtonDown(nFlags, point);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> CGraphicView::OnLButtonUp(UINT nFlags, CPoint point) </span><br><span class="line">&#123;</span><br><span class="line">	<span class="function">CClientDC <span class="title">dc</span><span class="params">(<span class="keyword">this</span>)</span></span>;</span><br><span class="line">	<span class="comment">//为边框设定颜色</span></span><br><span class="line">	CPen pen(PS_SOLID, 1, RGB(255, 0, 0));</span><br><span class="line">	dc.SelectObject(&amp;pen);</span><br><span class="line">	<span class="comment">//能看到图形内部内容(透明)</span></span><br><span class="line">	CBrush *pBrush = CBrush::FromHandle((HBRUSH)GetStockObject(NULL_BRUSH));</span><br><span class="line">	dc.SelectObject(pBrush);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">switch</span>(m_nDrawType)</span><br><span class="line">	&#123;</span><br><span class="line">	<span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">		dc.SetPixel(point,RGB(<span class="number">255</span>, <span class="number">0</span>, <span class="number">0</span>));</span><br><span class="line">		<span class="keyword">break</span>;</span><br><span class="line">	<span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">		dc.MoveTo(m_ptOrigin);</span><br><span class="line">		dc.LineTo(point);</span><br><span class="line">		<span class="keyword">break</span>;</span><br><span class="line">	<span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">		dc.Rectangle(CRect(m_ptOrigin,point));</span><br><span class="line">		<span class="keyword">break</span>;</span><br><span class="line">	<span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">		dc.Ellipse(CRect(m_ptOrigin, point));</span><br><span class="line">		<span class="keyword">break</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	CView::OnLButtonUp(nFlags, point);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p> <img src="http://img.blog.csdn.net/20170420231045554?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<h2 id="设置对话框"><a href="#设置对话框" class="headerlink" title="设置对话框"></a>设置对话框</h2><p>　　再增加一个对话框资源，ID为IDD_DLG_SETTING，Caption为Setting，Font为宋体。</p>
<h3 id="设置线宽"><a href="#设置线宽" class="headerlink" title="设置线宽"></a>设置线宽</h3><p>　　添加一个静态文本框，并将Caption设为“线宽”。再添加一个编辑框，ID：IDC_LINE_WIDTH。为此对话框资源创建一个响应的对话框类，类名为CSettingDlg。对编辑框右键，ClassWizard，为它添加一个成员变量：m_nLineWidth，类型为UINT。为绘图菜单下再增加一个菜单项为“设置”，ID为IDM_SETTING。为此菜单项添加一个命令响应，选择视类做出响应。为CGraphicView类添加一个私有成员变量：m_nLineWidth，类型：UINT，并在CGraphicView类的构造函数初始化为0。<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> CGraphicView::OnSetting() </span><br><span class="line">&#123;</span><br><span class="line">	CSettingDlg dlg;</span><br><span class="line">	dlg.m_nLineWidth = m_nLineWidth; <span class="comment">//将保存的用户先前设置的线宽再传回给该设置对话框</span></span><br><span class="line">	<span class="keyword">if</span>(IDOK == dlg.DoModal())<span class="comment">//点击OK才保持线宽值</span></span><br><span class="line">	&#123;</span><br><span class="line">		m_nLineWidth = dlg.m_nLineWidth;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>　　在源文件前部添加：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Include “SettingDlg.h”</span><br></pre></td></tr></table></figure></p>
<p>　　修改OnLButtonUp函数：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> CGraphicView::OnLButtonUp(UINT nFlags, CPoint point) </span><br><span class="line">&#123;</span><br><span class="line">	<span class="function">CClientDC <span class="title">dc</span><span class="params">(<span class="keyword">this</span>)</span></span>;</span><br><span class="line">	<span class="comment">//为边框设定颜色(m_nLineWidth定义线宽)</span></span><br><span class="line">	CPen pen(PS_SOLID, m_nLineWidth, RGB(255, 0, 0));</span><br><span class="line">……</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h3 id="设置线型"><a href="#设置线型" class="headerlink" title="设置线型"></a>设置线型</h3><p>　　为对话框资源添加一个组框，Caption设为线型。ID为IDC_LINE_STYLE。在组框内放三个单选按钮，ID不变，名称分别为：实线、虚线、点线（不要改变顺序）。在第一个单选按钮上右键，属性勾上Group，使三个按钮成为一组。再为CGraphicView类添加一个Int类型的私有成员变量m_nLineStyle，在构造函数中初始化为0。<br>　　由于WINGDI.h定义了一些符号常量，（可以在PS_SOLID右键，Go To Definition Of PS_SOLID），刚好PS_SOLID（实线）值本身就是0；PS_DASH（虚线）是1；PS_DOT（点线）是2。所以此处的排列是故意为之。<br> <figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20170424215210507?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述" title="">
                </div>
                <div class="image-caption">这里写图片描述</div>
            </figure><br> <figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20170424215239306?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述" title="">
                </div>
                <div class="image-caption">这里写图片描述</div>
            </figure></p>
<p>　　<strong>注意：若要画出虚线和点线，线宽只能为0或1。</strong></p>
<h2 id="颜色对话框"><a href="#颜色对话框" class="headerlink" title="颜色对话框"></a>颜色对话框</h2><p>　　在绘图下增加一个子菜单，ID为IDM_COLOR，Caption为颜色。为其在视类增加一个命令响应，代码：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> CGraphicView::OnColor() </span><br><span class="line">&#123;</span><br><span class="line">	CColorDialog dlg;</span><br><span class="line">	dlg.m_cc.Flags |= CC_RGBINIT;</span><br><span class="line">	dlg.m_cc.rgbResult = m_clr;</span><br><span class="line">	<span class="keyword">if</span> (IDOK == dlg.DoModal())</span><br><span class="line">	&#123;</span><br><span class="line">		m_clr = dlg.m_cc.rgbResult;</span><br><span class="line">		<span class="comment">//dlg.m_cc.Flags |= CC_RGBINIT | CC_FULLOPEN;//让颜色对话框完全展开</span></span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>　　为CGraphicView类再增加一个COLORREF类型的私有成员变量：m_clr，并在构造函数中初始化为红色：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">m_clr = RGB(<span class="number">255</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br></pre></td></tr></table></figure></p>
<p>　　修改该函数两处位置：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> CGraphicView::OnLButtonUp(UINT nFlags, CPoint point) </span><br><span class="line">&#123;</span><br><span class="line">	<span class="function">CClientDC <span class="title">dc</span><span class="params">(<span class="keyword">this</span>)</span></span>;</span><br><span class="line">	<span class="comment">//为边框设定颜色(m_nLineStyle定义线型，m_nLineWidth定义线宽，m_clr定义颜色)</span></span><br><span class="line">	<span class="function">CPen <span class="title">pen</span><span class="params">(m_nLineStyle, m_nLineWidth, m_clr)</span></span>;</span><br><span class="line">	dc.SelectObject(&amp;pen);</span><br><span class="line">	<span class="comment">//能看到图形内部内容(透明)</span></span><br><span class="line">	CBrush *pBrush = CBrush::FromHandle((HBRUSH)GetStockObject(NULL_BRUSH));</span><br><span class="line">	dc.SelectObject(pBrush);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">switch</span>(m_nDrawType)</span><br><span class="line">	&#123;</span><br><span class="line">	<span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">		dc.SetPixel(point,m_clr);</span><br><span class="line">		<span class="keyword">break</span>;</span><br><span class="line">	<span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">		dc.MoveTo(m_ptOrigin);</span><br><span class="line">		dc.LineTo(point);</span><br><span class="line">		<span class="keyword">break</span>;</span><br><span class="line">	<span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">		dc.Rectangle(CRect(m_ptOrigin,point));</span><br><span class="line">		<span class="keyword">break</span>;</span><br><span class="line">	<span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">		dc.Ellipse(CRect(m_ptOrigin, point));</span><br><span class="line">		<span class="keyword">break</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	CView::OnLButtonUp(nFlags, point);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p> <img src="http://img.blog.csdn.net/20170424215308947?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<p>　　注意：//dlg.m_cc.Flags |= CC_RGBINIT | CC_FULLOPEN;//让颜色对话框完全展开<br>这句我没能实现展开效果。</p>
<h2 id="字体对话框"><a href="#字体对话框" class="headerlink" title="字体对话框"></a>字体对话框</h2><p>　　增加一个菜单，ID为IDM_FONT，Caption为字体。在视类增加命令响应，代码：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> CGraphicView::OnFont() </span><br><span class="line">&#123;</span><br><span class="line">	CFontDialog dlg;</span><br><span class="line">	<span class="keyword">if</span> (IDOK == dlg.DoModal())</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span> (m_font.m_hObject) <span class="comment">//m_font对象是否已经与某字体资源相关联</span></span><br><span class="line">			m_font.DeleteObject();</span><br><span class="line">		m_font.CreateFontIndirect(dlg.m_cf.lpLogFont);</span><br><span class="line">		m_strFontName = dlg.m_cf.lpLogFont-&gt;lfFaceName;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">void</span> CGraphicView::OnDraw(CDC* pDC)</span><br><span class="line">&#123;</span><br><span class="line">	CGraphicDoc* pDoc = GetDocument();</span><br><span class="line">	ASSERT_VALID(pDoc);</span><br><span class="line">	<span class="comment">// <span class="doctag">TODO:</span> add draw code for native data here</span></span><br><span class="line">	CFont *pOldFont = pDC-&gt;SelectObject(&amp;m_font);</span><br><span class="line">	pDC-&gt;TextOut(<span class="number">0</span>, <span class="number">0</span>, m_strFontName);</span><br><span class="line">	pDC-&gt;SelectObject(pOldFont);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="示例对话框"><a href="#示例对话框" class="headerlink" title="示例对话框"></a>示例对话框</h2><p>　　在对话框中增加一个组框，Caption:示例，ID：IDC_SAMPLE。为CSettingDlg类添加编辑框控件的EN_CHANCE响应函数，对三个单选按钮都选择BN_CLICKED消息。<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> CSettingDlg::OnRadio1() </span><br><span class="line">&#123;</span><br><span class="line">	<span class="comment">// <span class="doctag">TODO:</span> Add your control notification handler code here</span></span><br><span class="line">	Invalidate();	</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> CSettingDlg::OnRadio2() </span><br><span class="line">&#123;</span><br><span class="line">	<span class="comment">// <span class="doctag">TODO:</span> Add your control notification handler code here</span></span><br><span class="line">	Invalidate();	</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> CSettingDlg::OnRadio3() </span><br><span class="line">&#123;</span><br><span class="line">	<span class="comment">// <span class="doctag">TODO:</span> Add your control notification handler code here</span></span><br><span class="line">	Invalidate();	</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> CSettingDlg::OnPaint() </span><br><span class="line">&#123;</span><br><span class="line">	<span class="function">CPaintDC <span class="title">dc</span><span class="params">(<span class="keyword">this</span>)</span></span>; <span class="comment">// device context for painting</span></span><br><span class="line">	</span><br><span class="line">	<span class="comment">// <span class="doctag">TODO:</span> Add your message handler code here</span></span><br><span class="line">	UpdateData();</span><br><span class="line">	<span class="function">CPen <span class="title">pen</span><span class="params">(m_nLineStyle, m_nLineWidth, m_clr)</span></span>;</span><br><span class="line">	dc.SelectObject(&amp;pen);</span><br><span class="line"></span><br><span class="line">	CRect rect;</span><br><span class="line">	GetDlgItem(IDC_SAMPLE)-&gt;GetWindowRect(&amp;rect);</span><br><span class="line">	ScreenToClient(&amp;rect);</span><br><span class="line"></span><br><span class="line">	dc.MoveTo(rect.left+<span class="number">20</span>, rect.top+rect.Height()/<span class="number">2</span>);</span><br><span class="line">	dc.LineTo(rect.right<span class="number">-20</span>, rect.top+rect.Height()/<span class="number">2</span>);</span><br><span class="line">	<span class="comment">// Do not call CDialog::OnPaint() for painting messages</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20170424215335853?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述" title="">
                </div>
                <div class="image-caption">这里写图片描述</div>
            </figure>
<p>　　现在可以实时修改了。</p>
<h2 id="10-6-改变对话框和控件的背景及文本颜色"><a href="#10-6-改变对话框和控件的背景及文本颜色" class="headerlink" title="10.6 改变对话框和控件的背景及文本颜色"></a>10.6 改变对话框和控件的背景及文本颜色</h2><h3 id="改变整个对话框及其子控件的背景色"><a href="#改变整个对话框及其子控件的背景色" class="headerlink" title="改变整个对话框及其子控件的背景色"></a>改变整个对话框及其子控件的背景色</h3><p>　　为CSettingDlg类添加WM_CTLCOLOR消息，并定义一个CBrush类型的私有成员变量：m_brush，并在构造函数中初始化一个蓝色画刷：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">m_brush.CreateSolidBrush (RGB(<span class="number">0</span>, <span class="number">0</span>, <span class="number">255</span>));</span><br></pre></td></tr></table></figure></p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">HBRUSH CSettingDlg::OnCtlColor(CDC* pDC, CWnd* pWnd, UINT nCtlColor) </span><br><span class="line">&#123;</span><br><span class="line">	HBRUSH hbr = CDialog::OnCtlColor(pDC, pWnd, nCtlColor);</span><br><span class="line">	</span><br><span class="line">	<span class="comment">// <span class="doctag">TODO:</span> Change any attributes of the DC here</span></span><br><span class="line">	</span><br><span class="line">	<span class="comment">// <span class="doctag">TODO:</span> Return a different brush if the default is not desired</span></span><br><span class="line">	<span class="comment">//return hbr;</span></span><br><span class="line">	<span class="keyword">return</span> m_brush;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p> <img src="http://img.blog.csdn.net/20170424215356165?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<h3 id="仅改变某个子控件的背景及文本颜色"><a href="#仅改变某个子控件的背景及文本颜色" class="headerlink" title="仅改变某个子控件的背景及文本颜色"></a>仅改变某个子控件的背景及文本颜色</h3><h1 id="图形的保存和重绘"><a href="#图形的保存和重绘" class="headerlink" title="图形的保存和重绘"></a>图形的保存和重绘</h1><h2 id="坐标空间和转换"><a href="#坐标空间和转换" class="headerlink" title="坐标空间和转换"></a>坐标空间和转换</h2><h3 id="坐标空间"><a href="#坐标空间" class="headerlink" title="坐标空间"></a>坐标空间</h3><p>　　Win32应用程序编程接口（API）使用四种坐标空间：世界坐标系空间、页面空间、设备空间和物理设备空间。Win32 API把世界坐标系空间和页面空间称为逻辑空间。</p>
<h3 id="转换"><a href="#转换" class="headerlink" title="转换"></a>转换</h3><p>　　转换是把对象从一个坐标空间复制到另一个坐标空间时改变（或转变）这一对象的大小、方位和形态。</p>
<h2 id="图形的保存和重绘-1"><a href="#图形的保存和重绘-1" class="headerlink" title="图形的保存和重绘"></a>图形的保存和重绘</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">HBRUSH CSettingDlg::OnCtlColor(CDC* pDC, CWnd* pWnd, UINT nCtlColor) </span><br><span class="line">&#123;</span><br><span class="line">	HBRUSH hbr = CDialog::OnCtlColor(pDC, pWnd, nCtlColor);</span><br><span class="line">	</span><br><span class="line">	<span class="comment">// <span class="doctag">TODO:</span> Change any attributes of the DC here</span></span><br><span class="line">	</span><br><span class="line">	<span class="comment">// <span class="doctag">TODO:</span> Return a different brush if the default is not desired</span></span><br><span class="line">	<span class="comment">//return hbr;</span></span><br><span class="line">	<span class="keyword">if</span> (pWnd -&gt; GetDlgCtrlID() == IDC_LINE_STYLE)</span><br><span class="line">	&#123;</span><br><span class="line">		pDC-&gt;SetTextColor(RGB(<span class="number">255</span>, <span class="number">0</span>, <span class="number">0</span>));</span><br><span class="line">		<span class="keyword">return</span> m_brush;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> hbr;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p> <img src="http://img.blog.csdn.net/20170424215530885?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<p>　　上述程序再加一行：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pDC-&gt;SetBkMode(TRANSPARENT);</span><br></pre></td></tr></table></figure></p>
<p> <img src="http://img.blog.csdn.net/20170424215545651?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">HBRUSH CSettingDlg::OnCtlColor(CDC* pDC, CWnd* pWnd, UINT nCtlColor) </span><br><span class="line">&#123;</span><br><span class="line">	HBRUSH hbr = CDialog::OnCtlColor(pDC, pWnd, nCtlColor);</span><br><span class="line">	</span><br><span class="line">	<span class="comment">// <span class="doctag">TODO:</span> Change any attributes of the DC here</span></span><br><span class="line">	</span><br><span class="line">	<span class="comment">// <span class="doctag">TODO:</span> Return a different brush if the default is not desired</span></span><br><span class="line">	<span class="comment">//return hbr;</span></span><br><span class="line">	<span class="keyword">if</span> (pWnd -&gt; GetDlgCtrlID() == IDC_LINE_STYLE)</span><br><span class="line">	&#123;</span><br><span class="line">		pDC-&gt;SetTextColor(RGB(<span class="number">255</span>, <span class="number">0</span>, <span class="number">0</span>));</span><br><span class="line">		pDC-&gt;SetBkMode(TRANSPARENT);</span><br><span class="line">		<span class="keyword">return</span> m_brush;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span> (pWnd-&gt;GetDlgCtrlID() == IDC_LINE_WIDTH)</span><br><span class="line">	&#123;</span><br><span class="line">		pDC-&gt;SetTextColor(RGB(<span class="number">255</span>, <span class="number">0</span>, <span class="number">0</span>));</span><br><span class="line">		<span class="comment">//pDC-&gt;SetBkMode(TRANSPARENT);</span></span><br><span class="line">		pDC-&gt;SetBkColor(RGB(<span class="number">0</span>, <span class="number">0</span>, <span class="number">255</span>));</span><br><span class="line">		<span class="keyword">return</span> m_brush;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> hbr;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p> <img src="http://img.blog.csdn.net/20170424215606416?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<h3 id="改变控件上的文本字体"><a href="#改变控件上的文本字体" class="headerlink" title="改变控件上的文本字体"></a>改变控件上的文本字体</h3><p>　　为对话框增加一个静态文本控件，ID:IDC_TEXT，Caption:程序员，为CSettingDlg类增加一个CFont类型的私有成员变量：m_font，在构造函数中添加<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">m_font.CreatePointFont(<span class="number">200</span>, <span class="string">"华文行楷"</span>);</span><br></pre></td></tr></table></figure></p>
<p>　　在OnCtlColor函数中添加：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (pWnd-&gt;GetDlgCtrlID() == IDC_TEXT)</span><br><span class="line">&#123;</span><br><span class="line">	pDC-&gt;SelectObject(&amp;m_font);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p> <img src="http://img.blog.csdn.net/20170424215622479?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<h3 id="改变按钮控件的背景色及文本颜色"><a href="#改变按钮控件的背景色及文本颜色" class="headerlink" title="改变按钮控件的背景色及文本颜色"></a>改变按钮控件的背景色及文本颜色</h3><p>　　在CSettingDlg类OnCtlColor函数中添加：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">	<span class="keyword">if</span> (pWnd-&gt;GetDlgCtrlID() == IDOK)</span><br><span class="line">	&#123;</span><br><span class="line">		pDC-&gt;SetTextColor(RGB(<span class="number">255</span>, <span class="number">0</span>, <span class="number">0</span>));</span><br><span class="line">		<span class="keyword">return</span> m_brush;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> hbr;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>　　点Insert-New Class，选择MFC Class，新增类名：CTestBtn，基类CButton。<br>　　为此类添加DrawItem虚函数重写。<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> CTestBtn::DrawItem(LPDRAWITEMSTRUCT lpDrawItemStruct) </span><br><span class="line">&#123;</span><br><span class="line">	<span class="comment">// <span class="doctag">TODO:</span> Add your code to draw the specified item</span></span><br><span class="line">	UINT uStyle = DFCS_BUTTONPUSH;</span><br><span class="line"></span><br><span class="line">	ASSERT(lpDrawItemStruct-&gt;CtlType == ODT_BUTTON);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">if</span> (lpDrawItemStruct-&gt;itemState &amp; ODS_SELECTED)</span><br><span class="line">		uStyle |= DFCS_PUSHED;</span><br><span class="line"></span><br><span class="line">	::DrawFrameControl(lpDrawItemStruct-&gt;hDC, &amp;lpDrawItemStruct-&gt;rcItem, DFC_BUTTON, uStyle);</span><br><span class="line"></span><br><span class="line">	CString strText;</span><br><span class="line">	GetWindowText(strText);</span><br><span class="line"></span><br><span class="line">	COLORREF crOldColor = ::SetTextColor(lpDrawItemStruct-&gt;hDC, RGB(<span class="number">255</span>, <span class="number">0</span>, <span class="number">0</span>));</span><br><span class="line">	::DrawText(lpDrawItemStruct-&gt;hDC, strText, strText.GetLength(),</span><br><span class="line">		&amp;lpDrawItemStruct-&gt;rcItem, DT_SINGLELINE | DT_VCENTER | DT_CENTER);</span><br><span class="line">	::SetTextColor(lpDrawItemStruct-&gt;hDC, crOldColor);</span><br><span class="line">	</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>　　然而，此时我返回双击OK键显示“Cannot add new member”……</p>
<p>　　按理，接下来应该是：<br>　　利用ClassWizard打开Add Member Variable对话框，为OK按钮关联一个成员变量，名称为m_btnTest，类型CTestBtn。在SettingDlg.h文件前部添加<code>#include “TestBtn.h”</code>。对OK右键属性，打开Styles，选中Owner draw选项。此时OK文字变红色。</p>
<h2 id="位图的显示"><a href="#位图的显示" class="headerlink" title="位图的显示"></a>位图的显示</h2><h1 id="定制应用程序外观"><a href="#定制应用程序外观" class="headerlink" title="定制应用程序外观"></a>定制应用程序外观</h1><h2 id="修改应用程序窗口的外观"><a href="#修改应用程序窗口的外观" class="headerlink" title="修改应用程序窗口的外观"></a>修改应用程序窗口的外观</h2><h3 id="在窗口创建之前修改"><a href="#在窗口创建之前修改" class="headerlink" title="在窗口创建之前修改"></a>在窗口创建之前修改</h3><p>　　创建前，打开CMainFrame类的PreCreateWindow成员函数，修改CREATETRUCT结构体中的cx和cy成员。<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">BOOL CMainFrame::PreCreateWindow(CREATESTRUCT&amp; cs)</span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">if</span>( !CFrameWnd::PreCreateWindow(cs) )</span><br><span class="line">		<span class="keyword">return</span> FALSE;</span><br><span class="line">	<span class="comment">// <span class="doctag">TODO:</span> Modify the Window class or styles here by modifying</span></span><br><span class="line">	<span class="comment">//  the CREATESTRUCT cs</span></span><br><span class="line">	cs.cx = <span class="number">300</span>;</span><br><span class="line">	cs.cy = <span class="number">200</span>;</span><br><span class="line">	<span class="keyword">return</span> TRUE;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>　　创建运行，可看到初始大小为300x200的应用程序窗口。</p>
<p>　　修改窗口标题：在上述 return TRUE; 前添加：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cs.style &amp;= ~FWS_ADDTOTITLE;</span><br><span class="line">cs.lpszName = <span class="string">"http://www.sunxin.org"</span>;</span><br></pre></td></tr></table></figure></p>
<h2 id="在窗口创建之后修改"><a href="#在窗口创建之后修改" class="headerlink" title="在窗口创建之后修改"></a>在窗口创建之后修改</h2><p>　　注释掉之前添加的代码。在OnCreate函数中添加：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> CMainFrame::OnCreate(LPCREATESTRUCT lpCreateStruct)</span><br><span class="line">&#123;</span><br><span class="line">	…</span><br><span class="line"></span><br><span class="line">	<span class="comment">// <span class="doctag">TODO:</span> Delete these three lines if you don't want the toolbar to</span></span><br><span class="line">	<span class="comment">//  be dockable</span></span><br><span class="line">	m_wndToolBar.EnableDocking(CBRS_ALIGN_ANY);</span><br><span class="line">	EnableDocking(CBRS_ALIGN_ANY);</span><br><span class="line">	DockControlBar(&amp;m_wndToolBar);</span><br><span class="line"></span><br><span class="line">	SetWindowLong(m_hWnd, GWL_STYLE, WS_OVERLAPPEDWINDOW);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>　　创建运行后可看到文档标题去掉了。</p>
<p>　　去掉窗口最大化框类型：<br>　　将上述SetWindowLong函数替换为<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SetWindowLong(m_hWnd, GWL_STYLE, GetWindowLong(m_hWnd, GWL_STYLE) &amp; ~WS_MAXIMIZEBOX);</span><br></pre></td></tr></table></figure></p>
<p>　　创建运行发现最大化框变灰，不能放大窗口了。</p>
<h2 id="修改窗口的光标、图标和背景"><a href="#修改窗口的光标、图标和背景" class="headerlink" title="修改窗口的光标、图标和背景"></a>修改窗口的光标、图标和背景</h2><h3 id="在窗口创建之前修改-1"><a href="#在窗口创建之前修改-1" class="headerlink" title="在窗口创建之前修改"></a>在窗口创建之前修改</h3><h1 id="网络编程"><a href="#网络编程" class="headerlink" title="网络编程"></a>网络编程</h1><h2 id="计算机网络基本知识"><a href="#计算机网络基本知识" class="headerlink" title="计算机网络基本知识"></a>计算机网络基本知识</h2><p>ISO/OSI七层参考模型<br>应用层——处理网络应用<br>Telnet、FTP、HTTP、DNS、SMTP、POP3</p>
<p>表示层——数据表示<br>TCP、UDP</p>
<p>会话层——主机间通信<br>传输层——端到端的连接<br>网络层——寻址和最短路径<br>IP、ICMP、IGMP</p>
<p>数据链路层——介质访问（接入）<br>物理层——二进制传输</p>
<h2 id="基于TCP的网络应用程序的编写"><a href="#基于TCP的网络应用程序的编写" class="headerlink" title="基于TCP的网络应用程序的编写"></a>基于TCP的网络应用程序的编写</h2><h3 id="服务器端程序"><a href="#服务器端程序" class="headerlink" title="服务器端程序"></a>服务器端程序</h3><p>　　关闭先前的工作区，新建一个工程，选择Win32 Console Application类型，名为TCPSrv。选择An empty project选项，创建一个空工程。再新建一个C++源文件：TcpSrv.cpp。<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;Winsock2.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="comment">//加载套接字库</span></span><br><span class="line">	WORD wVersionRequested;</span><br><span class="line">	WSADATA wsaData;</span><br><span class="line">	<span class="keyword">int</span> err;</span><br><span class="line"></span><br><span class="line">	wVersionRequested = MAKEWORD(<span class="number">1</span>, <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">	err = WSAStartup(wVersionRequested, &amp;wsaData);</span><br><span class="line">	<span class="keyword">if</span> (err != <span class="number">0</span>)&#123;</span><br><span class="line">		<span class="keyword">return</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">if</span> (LOBYTE(wsaData.wVersion) != <span class="number">1</span> ||</span><br><span class="line">		HIBYTE(wsaData.wVersion) != <span class="number">1</span>)&#123;</span><br><span class="line">		WSACleanup();</span><br><span class="line">		<span class="keyword">return</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//创建用于监听的套接字</span></span><br><span class="line">	SOCKET sockSrv = socket(AF_INET, SOCK_STREAM, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">	SOCKADDR_IN addrSrv;</span><br><span class="line">	addrSrv.sin_addr.S_un.S_addr = htonl(INADDR_ANY);</span><br><span class="line">	addrSrv.sin_family = AF_INET;</span><br><span class="line">	addrSrv.sin_port = htons(<span class="number">7000</span>);</span><br><span class="line"></span><br><span class="line">	<span class="comment">//绑定套接字</span></span><br><span class="line">	bind(sockSrv, (SOCKADDR*)&amp;addrSrv, <span class="keyword">sizeof</span>(SOCKADDR));</span><br><span class="line">	<span class="comment">//将套接字设为监听模式，准备接收客户请求</span></span><br><span class="line">	listen(sockSrv, <span class="number">5</span>);</span><br><span class="line"></span><br><span class="line">	SOCKADDR_IN addrClient;</span><br><span class="line">	<span class="keyword">int</span> len = <span class="keyword">sizeof</span>(SOCKADDR);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">while</span> (<span class="number">1</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="comment">//等待客户请求到来</span></span><br><span class="line">		SOCKET sockConn = accept(sockSrv, (SOCKADDR*)&amp;addrClient, &amp;len);</span><br><span class="line">		<span class="keyword">char</span> sendBuf[<span class="number">100</span>];</span><br><span class="line">		<span class="built_in">sprintf</span>(sendBuf, <span class="string">"Welcome %s to http://www.sunxin.org"</span>, inet_ntoa(addrClient.sin_addr));</span><br><span class="line">		<span class="comment">//发送数据</span></span><br><span class="line">		send(sockConn, sendBuf, <span class="built_in">strlen</span>(sendBuf)+<span class="number">1</span>, <span class="number">0</span>);</span><br><span class="line">		<span class="keyword">char</span> recvBuf[<span class="number">100</span>];</span><br><span class="line">		<span class="comment">//接收数据</span></span><br><span class="line">		recv(sockConn, recvBuf, <span class="number">100</span>, <span class="number">0</span>);</span><br><span class="line">		<span class="comment">//打印接收的数据</span></span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">"%s\n"</span>, recvBuf);</span><br><span class="line">		<span class="comment">//关闭套接字</span></span><br><span class="line">		closesocket(sockConn);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>　　Project-Setting-Link，在Object/library modules编辑框中添加ws2_32.lib文件，注意输入的库文件与前面的库文件之间一定 要有一个空格。<br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20170428102011032?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述" title="">
                </div>
                <div class="image-caption">这里写图片描述</div>
            </figure></p>
<h3 id="客户端程序"><a href="#客户端程序" class="headerlink" title="客户端程序"></a>客户端程序</h3><p>　　在工作区名称上单击鼠标右键，选择Add New Project to Workspace，再创建一个Win32 Console Application类型的应用程序，创建一个空工程。为此增加一个C++源文件：TcpClient.cpp。<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;Winsock2.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="comment">//加载套接字库</span></span><br><span class="line">	WORD wVersionRequested;</span><br><span class="line">	WSADATA wsaData;</span><br><span class="line">	<span class="keyword">int</span> err;</span><br><span class="line"></span><br><span class="line">	wVersionRequested = MAKEWORD(<span class="number">1</span>, <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">	err = WSAStartup(wVersionRequested, &amp;wsaData);</span><br><span class="line">	<span class="keyword">if</span> (err != <span class="number">0</span>)&#123;</span><br><span class="line">		<span class="keyword">return</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">if</span> (LOBYTE(wsaData.wVersion) != <span class="number">1</span> || </span><br><span class="line">		HIBYTE(wsaData.wVersion) != <span class="number">1</span>)&#123;</span><br><span class="line">		WSACleanup();</span><br><span class="line">		<span class="keyword">return</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//创建套接字</span></span><br><span class="line">	SOCKET sockClient = socket(AF_INET, SOCK_STREAM, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">	SOCKADDR_IN addrSrv;</span><br><span class="line">	addrSrv.sin_addr.S_un.S_addr = inet_addr(<span class="string">"127.0.0.1"</span>);</span><br><span class="line">	addrSrv.sin_family = AF_INET;</span><br><span class="line">	addrSrv.sin_port = htons(<span class="number">7000</span>);</span><br><span class="line"></span><br><span class="line">	<span class="comment">//向服务器发出连接请求</span></span><br><span class="line">	connect(sockClient, (SOCKADDR*)&amp;addrSrv, <span class="keyword">sizeof</span>(SOCKADDR));</span><br><span class="line"></span><br><span class="line">	<span class="comment">//接收数据</span></span><br><span class="line">	<span class="keyword">char</span> recvBuf[<span class="number">100</span>];</span><br><span class="line">	recv(sockClient, recvBuf, <span class="number">100</span>, <span class="number">0</span>);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"%s\n"</span>,recvBuf);</span><br><span class="line">	<span class="comment">//发送数据</span></span><br><span class="line">	send(sockClient, <span class="string">"This is lisi"</span>, <span class="built_in">strlen</span>(<span class="string">"This is lisi"</span>)+<span class="number">1</span>, <span class="number">0</span>);</span><br><span class="line">	<span class="comment">//关闭套接字</span></span><br><span class="line">	closesocket(sockClient);</span><br><span class="line">	WSACleanup();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>　　链接库文件：ws2_32.lib。<br>　　创建运行，首先运行服务器程序，然后再运行客户端程序。</p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20170428102101643?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述" title="">
                </div>
                <div class="image-caption">这里写图片描述</div>
            </figure>
<p>　　<strong>注意</strong>：当没有报错，服务器端运行结果为“烫烫……烫”（N个烫）时，尝试换一个端口号，有可能你设置的端口号被其它的应用程序占用了。</p>
<h2 id="基于UDP的网络应用程序的编写"><a href="#基于UDP的网络应用程序的编写" class="headerlink" title="基于UDP的网络应用程序的编写"></a>基于UDP的网络应用程序的编写</h2><h3 id="服务器端程序-1"><a href="#服务器端程序-1" class="headerlink" title="服务器端程序"></a>服务器端程序</h3><p>　　关闭先前的工作区，新建一个工程，选择Win32 Console Application类型，名为UdpSrv。选择An empty project选项，创建一个空工程。再新建一个C++源文件：UdpSrv.cpp。<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;Winsock2.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="comment">//加载套接字库</span></span><br><span class="line">	WORD wVersionRequired;</span><br><span class="line">	WSADATA wsaData;</span><br><span class="line">	<span class="keyword">int</span> err;</span><br><span class="line"></span><br><span class="line">	wVersionRequired = MAKEWORD(<span class="number">1</span>, <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">	err = WSAStartup(wVersionRequired, &amp;wsaData);</span><br><span class="line">	<span class="keyword">if</span> (err != <span class="number">0</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">return</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">if</span> (LOBYTE(wsaData.wVersion) != <span class="number">1</span> ||</span><br><span class="line">		HIBYTE(wsaData.wVersion) !=<span class="number">1</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		WSACleanup();</span><br><span class="line">		<span class="keyword">return</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//创建套接字</span></span><br><span class="line">	SOCKET sockSrv = socket(AF_INET, SOCK_DGRAM, <span class="number">0</span>);</span><br><span class="line">	SOCKADDR_IN addrSrv;</span><br><span class="line">	addrSrv.sin_addr.S_un.S_addr = htonl(INADDR_ANY);</span><br><span class="line">	addrSrv.sin_family = AF_INET;</span><br><span class="line">	addrSrv.sin_port = htons(<span class="number">7000</span>);</span><br><span class="line">	<span class="comment">//绑定套接字</span></span><br><span class="line">	bind(sockSrv, (SOCKADDR*)&amp;addrSrv, <span class="keyword">sizeof</span>(SOCKADDR));</span><br><span class="line"></span><br><span class="line">	<span class="comment">//等待并接收数据</span></span><br><span class="line">	SOCKADDR_IN addrClient;</span><br><span class="line">	<span class="keyword">int</span> len = <span class="keyword">sizeof</span>(SOCKADDR);</span><br><span class="line">	<span class="keyword">char</span> recvBuf[<span class="number">100</span>];</span><br><span class="line">	recvfrom(sockSrv, recvBuf, <span class="number">100</span>, <span class="number">0</span>, (SOCKADDR*)&amp;addrClient, &amp;len);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"%s\n"</span>,recvBuf);</span><br><span class="line">	<span class="comment">//关闭套接字</span></span><br><span class="line">	closesocket(sockSrv);</span><br><span class="line">	WSACleanup();</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>　　在工程设置对话框的链接选项卡下添加库文件：Ws2_32.lib的链接。</p>
<h3 id="客户端程序-1"><a href="#客户端程序-1" class="headerlink" title="客户端程序"></a>客户端程序</h3><p>　　在同一个UdpSrv工作区中创建客户端应用程序。创建一个空的Win32 Console Application类型的工程，名为：UdpClient。为该工程添加一个C++源文件：UdpClient.cpp。<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;Winsock2.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="comment">//加载套接字库</span></span><br><span class="line">	WORD wVersionRequired;</span><br><span class="line">	WSADATA wsaData;</span><br><span class="line">	<span class="keyword">int</span> err;</span><br><span class="line"></span><br><span class="line">	wVersionRequired = MAKEWORD(<span class="number">1</span>, <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">	err = WSAStartup(wVersionRequired, &amp;wsaData);</span><br><span class="line">	<span class="keyword">if</span> (err != <span class="number">0</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">return</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">if</span> (LOBYTE(wsaData.wVersion) != <span class="number">1</span> ||</span><br><span class="line">		HIBYTE(wsaData.wVersion) !=<span class="number">1</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		WSACleanup();</span><br><span class="line">		<span class="keyword">return</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">//创建套接字</span></span><br><span class="line">	SOCKET sockClient = socket(AF_INET, SOCK_DGRAM, <span class="number">0</span>);</span><br><span class="line">	SOCKADDR_IN addrSrv;</span><br><span class="line">	addrSrv.sin_addr.S_un.S_addr = inet_addr(<span class="string">"127.0.0.1"</span>);</span><br><span class="line">	addrSrv.sin_family = AF_INET;</span><br><span class="line">	addrSrv.sin_port = htons(<span class="number">7000</span>);</span><br><span class="line">	<span class="comment">//发送数据</span></span><br><span class="line">	sendto(sockClient, <span class="string">"Hello"</span>, <span class="built_in">strlen</span>(<span class="string">"Hello"</span>)+<span class="number">1</span>, <span class="number">0</span>, </span><br><span class="line">		(SOCKADDR*)&amp;addrSrv, <span class="keyword">sizeof</span>(SOCKADDR));</span><br><span class="line">	<span class="comment">//关闭套接字</span></span><br><span class="line">	closesocket(sockClient);</span><br><span class="line">	WSACleanup();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>　　链接库文件：ws2_32.lib。</p>
<p>　　创建运行。服务器端程序应先启动，然后启动客户端程序。</p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20170428102150065?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述" title="">
                </div>
                <div class="image-caption">这里写图片描述</div>
            </figure>
<p>　　<strong>基于TCP和基于UDP的网络应用程序在发送和接收数据时使用的函数是不一样的：前者使用send和recv，后者使用sendto和recvfrom。</strong></p>
<h2 id="基于UDP的简单聊天程序"><a href="#基于UDP的简单聊天程序" class="headerlink" title="基于UDP的简单聊天程序"></a>基于UDP的简单聊天程序</h2><p>　　在新工作区新建一个空的Win32 Console Application类型的应用程序，名为NetSrv。为该工程添加一个C++源文件：NetSrv.cpp。接着为该工程添加对WinSock库的链接，即在工程设置对话框的Link选项卡上添加ws2_32.lib文件的链接。<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;Winsock2.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"> <span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"> </span>&#123;</span><br><span class="line">	 <span class="comment">//加载套接字库</span></span><br><span class="line">	 WORD wVersionRequested;</span><br><span class="line">	 WSADATA wsaData;</span><br><span class="line">	 <span class="keyword">int</span> err;</span><br><span class="line"></span><br><span class="line">	 wVersionRequested = MAKEWORD(<span class="number">1</span>, <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">	 err = WSAStartup(wVersionRequested, &amp;wsaData);</span><br><span class="line">	 <span class="keyword">if</span> (err != <span class="number">0</span>)</span><br><span class="line">	 &#123;</span><br><span class="line">		 <span class="keyword">return</span>;</span><br><span class="line">	 &#125;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">if</span> (LOBYTE(wsaData.wVersion) != <span class="number">1</span> ||</span><br><span class="line">		HIBYTE(wsaData.wVersion) !=<span class="number">1</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		WSACleanup();</span><br><span class="line">		<span class="keyword">return</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	 <span class="comment">//创建套接字</span></span><br><span class="line">	 SOCKET sockSrv = socket(AF_INET, SOCK_DGRAM, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">	 SOCKADDR_IN addrSrv;</span><br><span class="line">	 addrSrv.sin_addr.S_un.S_addr = htonl(INADDR_ANY);</span><br><span class="line">	 addrSrv.sin_family = AF_INET;</span><br><span class="line">	 addrSrv.sin_port = htons(<span class="number">7000</span>);</span><br><span class="line"></span><br><span class="line">	 <span class="comment">//绑定套接字</span></span><br><span class="line">	 bind(sockSrv, (SOCKADDR*)&amp;addrSrv, <span class="keyword">sizeof</span>(SOCKADDR));</span><br><span class="line"></span><br><span class="line">	 <span class="keyword">char</span> recvBuf[<span class="number">100</span>];</span><br><span class="line">	 <span class="keyword">char</span> sendBuf[<span class="number">100</span>];</span><br><span class="line">	 <span class="keyword">char</span> tempBuf[<span class="number">200</span>];</span><br><span class="line"></span><br><span class="line">	 SOCKADDR_IN addrClient;</span><br><span class="line">	 <span class="keyword">int</span> len = <span class="keyword">sizeof</span>(SOCKADDR);</span><br><span class="line">	 <span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">	 &#123;</span><br><span class="line">		 <span class="comment">//等待并接收数据</span></span><br><span class="line">		 recvfrom(sockSrv, recvBuf, <span class="number">100</span>, <span class="number">0</span>, (SOCKADDR*)&amp;addrClient, &amp;len);</span><br><span class="line">		 <span class="keyword">if</span> (<span class="string">'q'</span> == recvBuf[<span class="number">0</span>])</span><br><span class="line">		 &#123;</span><br><span class="line">			 sendto(sockSrv, <span class="string">"q"</span>, <span class="built_in">strlen</span>(<span class="string">"q"</span>)+<span class="number">1</span>, <span class="number">0</span>, (SOCKADDR*)&amp;addrClient, len);</span><br><span class="line">			 <span class="built_in">printf</span>(<span class="string">"Chat end!\n"</span>);</span><br><span class="line">			 <span class="keyword">break</span>;</span><br><span class="line">		 &#125;</span><br><span class="line">		 <span class="built_in">sprintf</span>(tempBuf, <span class="string">"%s say : %s"</span>, inet_ntoa(addrClient.sin_addr), recvBuf);</span><br><span class="line">		 <span class="built_in">printf</span>(<span class="string">"%s\n"</span>, tempBuf);</span><br><span class="line">		 <span class="comment">//发送数据</span></span><br><span class="line">		 <span class="built_in">printf</span>(<span class="string">"Please input data:\n"</span>);</span><br><span class="line">		 gets(sendBuf);</span><br><span class="line">		 sendto(sockSrv, sendBuf, <span class="built_in">strlen</span>(sendBuf)+<span class="number">1</span>, <span class="number">0</span>, (SOCKADDR*)&amp;addrClient, len);</span><br><span class="line">	&#125;</span><br><span class="line">	 <span class="comment">//关闭套接字</span></span><br><span class="line">	 closesocket(sockSrv);</span><br><span class="line">	 WSACleanup();</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure></p>
<h3 id="客户端程序-2"><a href="#客户端程序-2" class="headerlink" title="客户端程序"></a>客户端程序</h3><p>　　向已有工作区增加一个空的Win32 Console Application类型的工程：NetClient。为此添加一个C++源文件：NetClient.cpp。为该工程添加ws2_32.lib文件的链接。<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;Winsock2.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"> <span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"> </span>&#123;</span><br><span class="line">	 <span class="comment">//加载套接字库</span></span><br><span class="line">	 WORD wVersionRequested;</span><br><span class="line">	 WSADATA wsaData;</span><br><span class="line">	 <span class="keyword">int</span> err;</span><br><span class="line"></span><br><span class="line">	 wVersionRequested = MAKEWORD(<span class="number">1</span>, <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">	 err = WSAStartup(wVersionRequested, &amp;wsaData);</span><br><span class="line">	 <span class="keyword">if</span> (err != <span class="number">0</span>)</span><br><span class="line">	 &#123;</span><br><span class="line">		 <span class="keyword">return</span>;</span><br><span class="line">	 &#125;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">if</span> (LOBYTE(wsaData.wVersion) != <span class="number">1</span> ||</span><br><span class="line">		HIBYTE(wsaData.wVersion) !=<span class="number">1</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		WSACleanup();</span><br><span class="line">		<span class="keyword">return</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	 <span class="comment">//创建套接字</span></span><br><span class="line">	 SOCKET sockClient = socket(AF_INET, SOCK_DGRAM, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">	 SOCKADDR_IN addrSrv;</span><br><span class="line">	 addrSrv.sin_addr.S_un.S_addr = inet_addr(<span class="string">"127.0.0.1"</span>);</span><br><span class="line">	 addrSrv.sin_family = AF_INET;</span><br><span class="line">	 addrSrv.sin_port = htons(<span class="number">7000</span>);</span><br><span class="line"></span><br><span class="line">	 <span class="keyword">char</span> recvBuf[<span class="number">100</span>];</span><br><span class="line">	 <span class="keyword">char</span> sendBuf[<span class="number">100</span>];</span><br><span class="line">	 <span class="keyword">char</span> tempBuf[<span class="number">200</span>];</span><br><span class="line"></span><br><span class="line">	 <span class="keyword">int</span> len = <span class="keyword">sizeof</span>(SOCKADDR);</span><br><span class="line"></span><br><span class="line">	 <span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">	 &#123;</span><br><span class="line">		 <span class="comment">//发送数据</span></span><br><span class="line">		 <span class="built_in">printf</span>(<span class="string">"Please input data:\n"</span>);</span><br><span class="line">		 gets(sendBuf);</span><br><span class="line">		 sendto(sockClient, sendBuf, <span class="built_in">strlen</span>(sendBuf)+<span class="number">1</span>, <span class="number">0</span>, (SOCKADDR*)&amp;addrSrv, len);</span><br><span class="line">		 <span class="comment">//等待并接收数据</span></span><br><span class="line"></span><br><span class="line">		 recvfrom(sockClient, recvBuf, <span class="number">100</span>, <span class="number">0</span>, (SOCKADDR*)&amp;addrSrv, &amp;len);</span><br><span class="line">		 <span class="keyword">if</span>(<span class="string">'q'</span> == recvBuf[<span class="number">0</span>])</span><br><span class="line">		 &#123;</span><br><span class="line">			 sendto(sockClient, <span class="string">"q"</span>, <span class="built_in">strlen</span>(<span class="string">"q"</span>)+<span class="number">1</span>, <span class="number">0</span>, (SOCKADDR*)&amp;addrSrv, len);</span><br><span class="line">			 <span class="built_in">printf</span>(<span class="string">"Chat end!\n"</span>);</span><br><span class="line">			 <span class="keyword">break</span>;</span><br><span class="line">		 &#125;</span><br><span class="line">		 <span class="built_in">sprintf</span>(tempBuf, <span class="string">"%s say : %s"</span>, inet_ntoa(addrSrv.sin_addr), recvBuf);</span><br><span class="line">		 <span class="built_in">printf</span>(<span class="string">"%s\n"</span>, tempBuf);</span><br><span class="line">	 &#125;</span><br><span class="line">	 <span class="comment">//关闭套接字</span></span><br><span class="line">	 closesocket(sockClient);</span><br><span class="line">	 WSACleanup();</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure></p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20170428102229597?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述" title="">
                </div>
                <div class="image-caption">这里写图片描述</div>
            </figure>
<h1 id="多线程"><a href="#多线程" class="headerlink" title="多线程"></a>多线程</h1><h2 id="进程"><a href="#进程" class="headerlink" title="进程"></a>进程</h2><h3 id="程序和进程"><a href="#程序和进程" class="headerlink" title="程序和进程"></a>程序和进程</h3><h2 id="简单多线程示例"><a href="#简单多线程示例" class="headerlink" title="简单多线程示例"></a>简单多线程示例</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;windows.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream.h&gt;</span></span></span><br><span class="line"></span><br><span class="line">    <span class="function">DWORD WINAPI <span class="title">Fun1Proc</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">	LPVOID lpParameter  <span class="comment">//thread data					 </span></span></span></span><br><span class="line"><span class="function"><span class="params">	)</span></span>;</span><br><span class="line">	<span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function">	</span>&#123;</span><br><span class="line">		HANDLE hThread1;</span><br><span class="line">		hThread1 = CreateThread(<span class="literal">NULL</span>, <span class="number">0</span>, Fun1Proc, <span class="literal">NULL</span>, <span class="number">0</span>, <span class="literal">NULL</span>);</span><br><span class="line">		CloseHandle(hThread1);</span><br><span class="line">		<span class="built_in">cout</span>&lt;&lt;<span class="string">"main thread is running"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">		Sleep(<span class="number">10</span>);<span class="comment">//让主线程暂停运行，进入分线程</span></span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">//线程1的入口函数</span></span><br><span class="line">	<span class="function">DWORD WINAPI <span class="title">Fun1Proc</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">		LPVOID lpParameter  <span class="comment">//thread data</span></span></span></span><br><span class="line"><span class="function"><span class="params">		)</span></span></span><br><span class="line"><span class="function">	</span>&#123;</span><br><span class="line">		<span class="built_in">cout</span>&lt;&lt;<span class="string">"thread1 is running"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">		<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">	&#125;</span><br></pre></td></tr></table></figure>
<p> <img src="http://img.blog.csdn.net/20170424215653701?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<p>　　交替运行：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;windows.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream.h&gt;</span></span></span><br><span class="line"></span><br><span class="line">    <span class="function">DWORD WINAPI <span class="title">Fun1Proc</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">	LPVOID lpParameter  <span class="comment">//thread data					 </span></span></span></span><br><span class="line"><span class="function"><span class="params">	)</span></span>;</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">int</span> index = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function">	</span>&#123;</span><br><span class="line">		HANDLE hThread1;</span><br><span class="line">		hThread1 = CreateThread(<span class="literal">NULL</span>, <span class="number">0</span>, Fun1Proc, <span class="literal">NULL</span>, <span class="number">0</span>, <span class="literal">NULL</span>);</span><br><span class="line">		CloseHandle(hThread1);</span><br><span class="line">		</span><br><span class="line">		<span class="keyword">while</span> (index ++&lt; <span class="number">100</span>)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="built_in">cout</span>&lt;&lt;<span class="string">"main thread is running"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">		&#125;</span><br><span class="line">			<span class="comment">//Sleep(10);//让主线程暂停运行，进入分线程</span></span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">//线程1的入口函数</span></span><br><span class="line"></span><br><span class="line">	<span class="function">DWORD WINAPI <span class="title">Fun1Proc</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">			</span></span></span><br><span class="line"><span class="function"><span class="params">		LPVOID lpParameter  <span class="comment">//thread data</span></span></span></span><br><span class="line"><span class="function"><span class="params">		)</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">	</span>&#123;</span><br><span class="line">		<span class="keyword">while</span> (index++&lt; <span class="number">100</span>)</span><br><span class="line">		<span class="built_in">cout</span>&lt;&lt;<span class="string">"thread1 is running"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">		<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">	&#125;</span><br></pre></td></tr></table></figure></p>
<p> <img src="http://img.blog.csdn.net/20170424215712448?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<h2 id="线程同步"><a href="#线程同步" class="headerlink" title="线程同步"></a>线程同步</h2><h3 id="火车站售票系统模拟程序"><a href="#火车站售票系统模拟程序" class="headerlink" title="火车站售票系统模拟程序"></a>火车站售票系统模拟程序</h3><p>　　由主线程创建的两个线程（1和2）负责销售火车票。<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;windows.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream.h&gt;</span></span></span><br><span class="line"></span><br><span class="line">    <span class="function">DWORD WINAPI <span class="title">Fun1Proc</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">	LPVOID lpParameter  <span class="comment">//thread data					 </span></span></span></span><br><span class="line"><span class="function"><span class="params">	)</span></span>;</span><br><span class="line">	</span><br><span class="line">	 <span class="function">DWORD WINAPI <span class="title">Fun2Proc</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">	LPVOID lpParameter  <span class="comment">//thread data					 </span></span></span></span><br><span class="line"><span class="function"><span class="params">	)</span></span>;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">int</span> index = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">int</span> tickets = <span class="number">100</span>;</span><br><span class="line">	HANDLE hMutex;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function">	</span>&#123;</span><br><span class="line">		HANDLE hThread1;</span><br><span class="line">		HANDLE hThread2;</span><br><span class="line"></span><br><span class="line">		<span class="comment">//创建互斥对象</span></span><br><span class="line">		hMutex = CreateMutex(<span class="literal">NULL</span>, FALSE, <span class="literal">NULL</span>);</span><br><span class="line"></span><br><span class="line">		<span class="comment">//创建线程</span></span><br><span class="line">		hThread1 = CreateThread(<span class="literal">NULL</span>, <span class="number">0</span>, Fun1Proc, <span class="literal">NULL</span>, <span class="number">0</span>, <span class="literal">NULL</span>);</span><br><span class="line">		hThread2 = CreateThread(<span class="literal">NULL</span>, <span class="number">0</span>, Fun2Proc, <span class="literal">NULL</span>, <span class="number">0</span>, <span class="literal">NULL</span>);</span><br><span class="line">		CloseHandle(hThread1);</span><br><span class="line">		CloseHandle(hThread2);</span><br><span class="line">		Sleep(<span class="number">4000</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	</span><br><span class="line"></span><br><span class="line">	</span><br><span class="line"></span><br><span class="line">	<span class="comment">//线程1的入口函数</span></span><br><span class="line">	<span class="function">DWORD WINAPI <span class="title">Fun1Proc</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">			</span></span></span><br><span class="line"><span class="function"><span class="params">		LPVOID lpParameter  <span class="comment">//thread data</span></span></span></span><br><span class="line"><span class="function"><span class="params">		)</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">	</span>&#123;</span><br><span class="line">	<span class="keyword">while</span> (TRUE)</span><br><span class="line">		&#123;</span><br><span class="line">			WaitForSingleObject(hMutex, INFINITE);<span class="comment">//实现线程同步</span></span><br><span class="line">			<span class="keyword">if</span> (tickets &gt; <span class="number">0</span>)</span><br><span class="line">			&#123;</span><br><span class="line">				Sleep(<span class="number">1</span>);</span><br><span class="line">				<span class="built_in">cout</span>&lt;&lt;<span class="string">"thread1 sell ticket:"</span>&lt;&lt;tickets--&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">else</span> </span><br><span class="line">				<span class="keyword">break</span>;</span><br><span class="line">			ReleaseMutex(hMutex);<span class="comment">//释放当前线程对互斥对象的所有权</span></span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line"></span><br><span class="line">		<span class="comment">//线程2的入口函数</span></span><br><span class="line">	<span class="function">DWORD WINAPI <span class="title">Fun2Proc</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">			</span></span></span><br><span class="line"><span class="function"><span class="params">		LPVOID lpParameter  <span class="comment">//thread data</span></span></span></span><br><span class="line"><span class="function"><span class="params">		)</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">	</span>&#123;</span><br><span class="line">		<span class="keyword">while</span> (TRUE)</span><br><span class="line">		&#123;</span><br><span class="line">			WaitForSingleObject(hMutex,INFINITE);</span><br><span class="line">			<span class="keyword">if</span> (tickets &gt; <span class="number">0</span>)</span><br><span class="line">			&#123;</span><br><span class="line">				Sleep(<span class="number">1</span>);</span><br><span class="line">				<span class="built_in">cout</span>&lt;&lt;<span class="string">"thread2 sell ticket:"</span>&lt;&lt;tickets--&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">else</span> </span><br><span class="line">				<span class="keyword">break</span>;</span><br><span class="line">			ReleaseMutex(hMutex);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p> <img src="http://img.blog.csdn.net/20170424215734652?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"><br>　　这时所销售的票号正常，没有看到销售了号码为0的票。</p>
<p>　　对互斥对象来说，谁拥有谁释放。</p>
<h2 id="保证应用程序只有一个实例运行"><a href="#保证应用程序只有一个实例运行" class="headerlink" title="保证应用程序只有一个实例运行"></a>保证应用程序只有一个实例运行</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;windows.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream.h&gt;</span></span></span><br><span class="line"></span><br><span class="line">    <span class="function">DWORD WINAPI <span class="title">Fun1Proc</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">	LPVOID lpParameter  <span class="comment">//thread data					 </span></span></span></span><br><span class="line"><span class="function"><span class="params">	)</span></span>;</span><br><span class="line">	</span><br><span class="line">	 <span class="function">DWORD WINAPI <span class="title">Fun2Proc</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">	LPVOID lpParameter  <span class="comment">//thread data					 </span></span></span></span><br><span class="line"><span class="function"><span class="params">	)</span></span>;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">int</span> index = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">int</span> tickets = <span class="number">100</span>;</span><br><span class="line">	HANDLE hMutex;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function">	</span>&#123;</span><br><span class="line">		HANDLE hThread1;</span><br><span class="line">		HANDLE hThread2;</span><br><span class="line"></span><br><span class="line">		<span class="comment">//创建互斥对象(注意命名)</span></span><br><span class="line">		hMutex = CreateMutex(<span class="literal">NULL</span>, FALSE, <span class="string">"1"</span>);</span><br><span class="line">		<span class="keyword">if</span> (hMutex)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">if</span> (ERROR_ALREADY_EXISTS == GetLastError())</span><br><span class="line">			&#123;</span><br><span class="line">				<span class="built_in">cout</span>&lt;&lt;<span class="string">"only one instance can run!"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">				<span class="keyword">return</span>;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="comment">//创建线程</span></span><br><span class="line">		hThread1 = CreateThread(<span class="literal">NULL</span>, <span class="number">0</span>, Fun1Proc, <span class="literal">NULL</span>, <span class="number">0</span>, <span class="literal">NULL</span>);</span><br><span class="line">		hThread2 = CreateThread(<span class="literal">NULL</span>, <span class="number">0</span>, Fun2Proc, <span class="literal">NULL</span>, <span class="number">0</span>, <span class="literal">NULL</span>);</span><br><span class="line">		CloseHandle(hThread1);</span><br><span class="line">		CloseHandle(hThread2);</span><br><span class="line">		WaitForSingleObject(hMutex, INFINITE);</span><br><span class="line">		ReleaseMutex(hMutex);</span><br><span class="line">		ReleaseMutex(hMutex);</span><br><span class="line">		Sleep(<span class="number">4000</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="comment">//线程1的入口函数</span></span><br><span class="line">	<span class="function">DWORD WINAPI <span class="title">Fun1Proc</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">			</span></span></span><br><span class="line"><span class="function"><span class="params">		LPVOID lpParameter  <span class="comment">//thread data</span></span></span></span><br><span class="line"><span class="function"><span class="params">		)</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">	</span>&#123;</span><br><span class="line">	<span class="keyword">while</span> (TRUE)</span><br><span class="line">		&#123;</span><br><span class="line">			WaitForSingleObject(hMutex, INFINITE);<span class="comment">//实现线程同步</span></span><br><span class="line">			<span class="keyword">if</span> (tickets &gt; <span class="number">0</span>)</span><br><span class="line">			&#123;</span><br><span class="line">				Sleep(<span class="number">1</span>);</span><br><span class="line">				<span class="built_in">cout</span>&lt;&lt;<span class="string">"thread1 sell ticket:"</span>&lt;&lt;tickets--&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">else</span> </span><br><span class="line">				<span class="keyword">break</span>;</span><br><span class="line">			ReleaseMutex(hMutex);<span class="comment">//释放当前线程对互斥对象的所有权</span></span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line"></span><br><span class="line">		<span class="comment">//线程2的入口函数</span></span><br><span class="line">	<span class="function">DWORD WINAPI <span class="title">Fun2Proc</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">			</span></span></span><br><span class="line"><span class="function"><span class="params">		LPVOID lpParameter  <span class="comment">//thread data</span></span></span></span><br><span class="line"><span class="function"><span class="params">		)</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">	</span>&#123;</span><br><span class="line">		<span class="keyword">while</span> (TRUE)</span><br><span class="line">		&#123;</span><br><span class="line">			WaitForSingleObject(hMutex,INFINITE);</span><br><span class="line">			<span class="keyword">if</span> (tickets &gt; <span class="number">0</span>)</span><br><span class="line">			&#123;</span><br><span class="line">				Sleep(<span class="number">1</span>);</span><br><span class="line">				<span class="built_in">cout</span>&lt;&lt;<span class="string">"thread2 sell ticket:"</span>&lt;&lt;tickets--&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">else</span> </span><br><span class="line">				<span class="keyword">break</span>;</span><br><span class="line">			ReleaseMutex(hMutex);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="网络聊天室程序的实现"><a href="#网络聊天室程序的实现" class="headerlink" title="网络聊天室程序的实现"></a>网络聊天室程序的实现</h2><p>　　新建一个基于对话框的工程，名为：Chat。<br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20170428102440017?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述" title="">
                </div>
                <div class="image-caption">这里写图片描述</div>
            </figure><br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20170428102449366?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述" title="">
                </div>
                <div class="image-caption">这里写图片描述</div>
            </figure></p>
<h3 id="加载套接字库"><a href="#加载套接字库" class="headerlink" title="加载套接字库"></a>加载套接字库</h3><p>　　在CChatApp类的InitInstance函数开始位置<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">BOOL CChatApp::InitInstance()</span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">if</span> (!AfxSocketInit())</span><br><span class="line">	&#123;</span><br><span class="line">		AfxMessageBox(<span class="string">"加载套接字库失败！"</span>);</span><br><span class="line">		<span class="keyword">return</span> FALSE;</span><br><span class="line">	&#125;</span><br><span class="line">……</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>　　在stdafx.h中，添加头文件<code>#include &lt;Afxsock.h&gt;</code>。</p>
<h3 id="创建并初始化套接字"><a href="#创建并初始化套接字" class="headerlink" title="创建并初始化套接字"></a>创建并初始化套接字</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">BOOL CChatDlg::InitSocket()</span><br><span class="line">&#123;</span><br><span class="line">	<span class="comment">//创建套接字</span></span><br><span class="line">	m_socket = socket(AF_INET, SOCK_DGRAM, <span class="number">0</span>);</span><br><span class="line">	<span class="keyword">if</span> (INVALID_SOCKET == m_socket)</span><br><span class="line">	&#123;</span><br><span class="line">		MessageBox(<span class="string">"套接字创建失败！"</span>);</span><br><span class="line">		<span class="keyword">return</span> FALSE;</span><br><span class="line">	&#125;</span><br><span class="line">	SOCKADDR_IN addrSock;</span><br><span class="line">	addrSock.sin_family = AF_INET;</span><br><span class="line">	addrSock.sin_port = htons(<span class="number">7000</span>);</span><br><span class="line">	addrSock.sin_addr.S_un.S_addr = htonl(INADDR_ANY);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">int</span> retval;</span><br><span class="line">	<span class="comment">//绑定套接字</span></span><br><span class="line">	retval = bind(m_socket, (SOCKADDR*)&amp;addrSock, <span class="keyword">sizeof</span>(SOCKADDR));</span><br><span class="line">	<span class="keyword">if</span> (SOCKET_ERROR == retval)</span><br><span class="line">	&#123;</span><br><span class="line">		closesocket(m_socket);</span><br><span class="line">		MessageBox(<span class="string">"绑定失败！"</span>);</span><br><span class="line">		<span class="keyword">return</span> TRUE;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> TRUE;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">BOOL CChatDlg::OnInitDialog()</span><br><span class="line">&#123;</span><br><span class="line">……</span><br><span class="line">	</span><br><span class="line">	<span class="comment">// <span class="doctag">TODO:</span> Add extra initialization here</span></span><br><span class="line">	InitSocket();</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> TRUE;  <span class="comment">// return TRUE  unless you set the focus to a control</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="实现接收端功能"><a href="#实现接收端功能" class="headerlink" title="实现接收端功能"></a>实现接收端功能</h3><p>　　在CChatDlg类中定义：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/////////////////////////////////////////////////////////////////////////////</span></span><br><span class="line"><span class="comment">// CChatDlg dialog</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">RECVPARAM</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">	SOCKET sock; <span class="comment">//已创建的套接字</span></span><br><span class="line">	HWND hwnd; <span class="comment">//对话框句柄</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></p>
<p>　　在Chatdlg.h中添加：<code>static DWORD WINAPI RecvProc(LPVOID lpParameter);</code><br>在OnInitDialog()中添加：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">BOOL CChatDlg::OnInitDialog()</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">……</span><br><span class="line"></span><br><span class="line"><span class="comment">// <span class="doctag">TODO:</span> Add extra initialization here</span></span><br><span class="line">	InitSocket();</span><br><span class="line">	RECVPARAM *pRecvParam = <span class="keyword">new</span> RECVPARAM;</span><br><span class="line">	pRecvParam-&gt;sock = m_socket;</span><br><span class="line">	pRecvParam-&gt;hwnd = m_hWnd;</span><br><span class="line">	<span class="comment">//创建接收线程</span></span><br><span class="line">	HANDLE hThread = CreateThread(<span class="literal">NULL</span>, <span class="number">0</span>, RecvProc, (LPVOID)pRecvParam, <span class="number">0</span>, <span class="literal">NULL</span>);</span><br><span class="line">	<span class="comment">//关闭该接收程句柄，释放其引用计数</span></span><br><span class="line">	CloseHandle(hThread);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> TRUE;  <span class="comment">// return TRUE  unless you set the focus to a control</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>　　在CChatDlg类中添加：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">DWORD WINAPI CChatDlg::RecvProc(LPVOID lpParameter)</span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>　　若要求采用完全面向对象的思想来编程，不能使用全局函数和全局变量了，可以采用静态成员函数和静态成员变量的方法来解决。<br>　　<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">DWORD WINAPI CChatDlg::RecvProc(LPVOID lpParameter)</span><br><span class="line">&#123;</span><br><span class="line">	<span class="comment">//获取主线程传递的套接字和窗口句柄</span></span><br><span class="line">	SOCKET sock = ((RECVPARAM*)lpParameter)-&gt;sock;</span><br><span class="line">	HWND hwnd = ((RECVPARAM*)lpParameter)-&gt;hwnd;</span><br><span class="line">	<span class="keyword">delete</span> lpParameter;</span><br><span class="line"></span><br><span class="line">	SOCKADDR_IN addrFrom;</span><br><span class="line">	<span class="keyword">int</span> len = <span class="keyword">sizeof</span>(SOCKADDR);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">char</span> recvBuf[<span class="number">200</span>];</span><br><span class="line">	<span class="keyword">char</span> tempBuf[<span class="number">300</span>];</span><br><span class="line">	<span class="keyword">int</span> retval;</span><br><span class="line">	<span class="keyword">while</span>(TRUE)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="comment">//接收数据</span></span><br><span class="line">		retval = recvfrom(sock, recvBuf, <span class="number">200</span>, <span class="number">0</span>, (SOCKADDR*)&amp;addrFrom, &amp;len);</span><br><span class="line">		<span class="keyword">if</span> (SOCKET_ERROR == retval)</span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">		<span class="built_in">sprintf</span>(tempBuf, <span class="string">"%s 说： %s"</span>, inet_ntoa(addrFrom.sin_addr), recvBuf);</span><br><span class="line">		::PostMessage(hwnd, WM_RECVDATA, <span class="number">0</span>, (LPARAM)tempBuf);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>　　在该类添加头文件 <code>#define WM_RECVDATA    WM_USER+1</code></p>
<p>在CChatDlg类头文件中编写该消息响应函数原型的声明：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Generated message map functions</span></span><br><span class="line"><span class="comment">//&#123;&#123;AFX_MSG(CChatDlg)</span></span><br><span class="line"><span class="function"><span class="keyword">virtual</span> BOOL <span class="title">OnInitDialog</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function">afx_msg <span class="keyword">void</span> <span class="title">OnSysCommand</span><span class="params">(UINT nID, LPARAM lParam)</span></span>;</span><br><span class="line"><span class="function">afx_msg <span class="keyword">void</span> <span class="title">OnPaint</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function">afx_msg HCURSOR <span class="title">OnQueryDragIcon</span><span class="params">()</span></span>;</span><br><span class="line"><span class="comment">//&#125;&#125;AFX_MSG</span></span><br><span class="line"><span class="function">afx_msg <span class="keyword">void</span> <span class="title">OnRecvData</span><span class="params">(WPARAM wParam, LPARAM lParam)</span></span>;</span><br><span class="line">DECLARE_MESSAGE_MAP()</span><br></pre></td></tr></table></figure></p>
<p>在CChatDlg类的源文件中添加WM_RECVDATA消息映射。<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">BEGIN_MESSAGE_MAP(CChatDlg, CDialog)</span><br><span class="line">	<span class="comment">//&#123;&#123;AFX_MSG_MAP(CChatDlg)</span></span><br><span class="line">	ON_WM_SYSCOMMAND()</span><br><span class="line">	ON_WM_PAINT()</span><br><span class="line">	ON_WM_QUERYDRAGICON()</span><br><span class="line">	<span class="comment">//&#125;&#125;AFX_MSG_MAP</span></span><br><span class="line">	ON_MESSAGE(WM_RECVDATA, OnRecvData)</span><br><span class="line">END_MESSAGE_MAP()</span><br></pre></td></tr></table></figure></p>
<p>在构造函数中<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> CChatDlg::OnRecvData(WPARAM wParam, LPARAM lParam)</span><br><span class="line">&#123;</span><br><span class="line">	<span class="comment">//取出接收到的数据</span></span><br><span class="line">	CString str = (<span class="keyword">char</span>*)lParam;</span><br><span class="line">	CString strTemp;</span><br><span class="line">	<span class="comment">//获得已有数据</span></span><br><span class="line">	GetDlgItemText(IDC_EDIT_RECV, strTemp);</span><br><span class="line">	str += <span class="string">"\r\n"</span>;</span><br><span class="line">	str += strTemp;</span><br><span class="line">	<span class="comment">//显示所有接收到的数据</span></span><br><span class="line">	SetDlgItemText(IDC_EDIT_RECV, str);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h3 id="实现发送端功能"><a href="#实现发送端功能" class="headerlink" title="实现发送端功能"></a>实现发送端功能</h3><p>双击发送，添加响应函数。<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> CChatDlg::OnBtnSend() </span><br><span class="line">&#123;</span><br><span class="line">	<span class="comment">//获取对方IP</span></span><br><span class="line"><span class="comment">// <span class="doctag">TODO:</span> Add your control notification handler code here</span></span><br><span class="line">	DWORD dwIP;</span><br><span class="line">	((CIPAddressCtrl*)GetDlgItem(IDC_IPADDRESS1))-&gt;GetAddress(dwIP);</span><br><span class="line"></span><br><span class="line">	SOCKADDR_IN addrTo;</span><br><span class="line">	addrTo.sin_family = AF_INET;</span><br><span class="line">	addrTo.sin_port = htons(<span class="number">7000</span>);</span><br><span class="line">	addrTo.sin_addr.S_un.S_addr = htonl(dwIP);</span><br><span class="line"></span><br><span class="line">	CString strSend;</span><br><span class="line">	<span class="comment">//获得待发送数据</span></span><br><span class="line">	GetDlgItemText(IDC_EDIT_SEND, strSend);</span><br><span class="line">	<span class="comment">//发送数据</span></span><br><span class="line">	sendto(m_socket, strSend, strSend.GetLength()+<span class="number">1</span>, <span class="number">0</span>,</span><br><span class="line">		(SOCKADDR*)&amp;addrTo, <span class="keyword">sizeof</span>(SOCKADDR));</span><br><span class="line">	<span class="comment">//清空发送编辑框中的内容</span></span><br><span class="line">	SetDlgItemText(IDC_EDIT_SEND, <span class="string">""</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>　　为了让编辑框控件接受换行符，必须设置该控件支持多行数据这一属性。<br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20170428102525898?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述" title="">
                </div>
                <div class="image-caption">这里写图片描述</div>
            </figure></p>
<p>　　将“发送”设置为Default button，还可以选择取消Visible选项。<br>　　本例在一个程序中同时实现了接收端和发送端的功能，所以只需在聊天双方各自的机器上安装本程序，在聊天时，通过输入对方主机的IP地址，就可以与对方进行通信了。</p>
<h1 id="ActiveX控件"><a href="#ActiveX控件" class="headerlink" title="ActiveX控件"></a>ActiveX控件</h1><h2 id="ActiveX控件-1"><a href="#ActiveX控件-1" class="headerlink" title="ActiveX控件"></a>ActiveX控件</h2><p>OCX是ActiveX控件的一种后缀名。但ActiveX控件对应的文件也可以是其他后缀名，例如DLL。作为一个典型的ActiveX控件，它具有方法、属性、事件这三种特性。在一个文件中可以包含多个ActiveX控件。</p>
<h3 id="MFC-ActiveX-ControlWizard"><a href="#MFC-ActiveX-ControlWizard" class="headerlink" title="MFC ActiveX ControlWizard"></a>MFC ActiveX ControlWizard</h3><h1 id="动态链接库"><a href="#动态链接库" class="headerlink" title="动态链接库"></a>动态链接库</h1><p>　　动态链接库有两种加载方式：隐式链接和显式加载</p>
<h2 id="Win32-DLL的创建和使用"><a href="#Win32-DLL的创建和使用" class="headerlink" title="Win32 DLL的创建和使用"></a>Win32 DLL的创建和使用</h2><p>　　新建一个Win32 Dynamic-Link Library类型的工程，取名为Dll1。并在AppWizard的第一步选择“An empty Dll project”，即创建一个空的动态链接库工程。然后添加一个C++源文件：Dll1.cpp。添加代码：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">return</span> a + b;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">subtract</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">return</span> a - b;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>　　Build生成Dll1程序。在该工程的Debug目录下，可看到一个Dll1.dll文件，这就是生成的动态链接库文件。</p>
<h3 id="Dumpbin命令"><a href="#Dumpbin命令" class="headerlink" title="Dumpbin命令"></a>Dumpbin命令</h3><p>　　应用程序如果想要访问某个DLL中的函数，那么该函数必须是已经被导出的函数。为了查看有哪些导出函数，可以用VS提供的命令行工具：Dumpbin实现。    </p>
<h3 id="从DLL中导出函数"><a href="#从DLL中导出函数" class="headerlink" title="从DLL中导出函数"></a>从DLL中导出函数</h3><p>　　为导出函数，需在每一个将被导出的函数前添加标识符：_declspec(dllexport)。修改上述代码：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">_declspec(dllexport) <span class="function"><span class="keyword">int</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">return</span> a + b;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">_declspec(dllexport) <span class="function"><span class="keyword">int</span> <span class="title">subtract</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">return</span> a - b;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>　　编译后可看到又生成了两个新文件，Dll1.lib，它保存Dll1.dll中导出的函数和变量的符号名。以及DALL1.EXP文件。</p>
<h2 id="隐式链接方式加载DLL"><a href="#隐式链接方式加载DLL" class="headerlink" title="隐式链接方式加载DLL"></a>隐式链接方式加载DLL</h2><p>　　编写一个测试程序测试这个动态链接库。新建一个基于对话框的MFC应用程序，取名DllTest，放置两个按钮，ID和Caption分别为：IDC_BTN_ADD，Add，IDC_BTN_SUBTRACT，Subtract。</p>
<h3 id="利用extern声明外部函数"><a href="#利用extern声明外部函数" class="headerlink" title="利用extern声明外部函数"></a>利用extern声明外部函数</h3><p>　　为让编译器知道这两个函数，需作出声明，注意放在OnBtnAdd函数和OnBtnSubtract函数前面。<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">extern</span> <span class="keyword">int</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">extern</span> <span class="keyword">int</span> <span class="title">subtract</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> CDllTestDlg::OnBtnAdd() </span><br><span class="line">&#123;</span><br><span class="line">	<span class="comment">// <span class="doctag">TODO:</span> Add your control notification handler code here</span></span><br><span class="line">	CString str;</span><br><span class="line">	str.Format(<span class="string">"5 + 3 = %d"</span>, add(<span class="number">5</span>, <span class="number">3</span>));</span><br><span class="line">	MessageBox(str);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> CDllTestDlg::OnBtnSubtract() </span><br><span class="line">&#123;</span><br><span class="line">	<span class="comment">// <span class="doctag">TODO:</span> Add your control notification handler code here</span></span><br><span class="line">	CString str;</span><br><span class="line">	str.Format(<span class="string">"5 - 3 = %d"</span>, subtract(<span class="number">5</span>, <span class="number">3</span>));</span><br><span class="line">	MessageBox(str);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>　　Build后报错：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">--------------------Configuration: DllTest - Win32 Debug--------------------</span><br><span class="line">Compiling resources...</span><br><span class="line">Compiling...</span><br><span class="line">StdAfx.cpp</span><br><span class="line">Compiling...</span><br><span class="line">DllTest.cpp</span><br><span class="line">DllTestDlg.cpp</span><br><span class="line">Generating Code...</span><br><span class="line">Linking...</span><br><span class="line">DllTestDlg.obj : error LNK2001: unresolved external symbol <span class="string">"int __cdecl add(int,int)"</span> (?add@@YAHHH@Z)</span><br><span class="line">DllTestDlg.obj : error LNK2001: unresolved external symbol <span class="string">"int __cdecl subtract(int,int)"</span> (?subtract@@YAHHH@Z)</span><br><span class="line">Debug/DllTest.exe : fatal error LNK1120: <span class="number">2</span> unresolved externals</span><br><span class="line">执行 link.exe 时出错.</span><br><span class="line"></span><br><span class="line">DllTest.exe - <span class="number">1</span> error(s), <span class="number">0</span> warning(s)</span><br></pre></td></tr></table></figure></p>
<p>　　可看到编译成功，错误发生在链接时。为解决该问题，需利用动态链接库的引入库文件。<br>　　在Dll1.dll文件所在目录下，复制Dll1.lib文件，并将其复制到DllTest程序所在目录下，这个文件中就包含了Dll1.dll中导出函数的符号名。<br>　　然后在DllTest中，选择Porject\Settings\link，在Object/library modules中输入dll1.lib。<br>　　再次编译，成功生成DllTest.exe文件。<br>　　（可利用dumpbin -imports dlltest.exe查看输入信息）</p>
<p>　　运行程序，弹出报错对话框：<br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20170709130424898?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="报错" title="">
                </div>
                <div class="image-caption">报错</div>
            </figure></p>
<p>　　将Dll1.dll放置在DllTest工程所在目录下，就好了。</p>
<p>　　效果如图。<br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20170709130702138?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="效果" title="">
                </div>
                <div class="image-caption">效果</div>
            </figure></p>
<h3 id="Depends工具"><a href="#Depends工具" class="headerlink" title="Depends工具"></a>Depends工具</h3><p>　　在Microsoft Visual Studio\Common\Tools中有一个DEPENDS.EXE，该工具可以查看可执行程序，还可以查看动态链接库，主要是看它们依赖于哪些动态链接库。<br>　　打开该工具，单击File\Open，选择DllText.exe，将会看到：<br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20170709132044018?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="DEPENDS" title="">
                </div>
                <div class="image-caption">DEPENDS</div>
            </figure></p>
<p>　　DllTest程序需访问Dll1.dll这一动态链接库，但该文件名前有一个问号，说明没有找到Dll1.dll这个动态链接库。这是因为前面将动态链接库文件放在了\DllTest\Debug目录的上一级目录下了。这里，可将Dll1.dll文件再复制到\DllTest\Debug目录下，然后重启Depends工具。这时问号就没有了。（因为Dll1.dll与DllTest.exe位于同一目录，在打开DllTest.exe时，就可找到该动态链接库。）</p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20170709132630578?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="成功" title="">
                </div>
                <div class="image-caption">成功</div>
            </figure>
<h3 id="利用-declspec-dllimport-声明外部函数"><a href="#利用-declspec-dllimport-声明外部函数" class="headerlink" title="利用_declspec(dllimport)声明外部函数"></a>利用_declspec(dllimport)声明外部函数</h3><p>　　除了使用extern关键字表明函数是外部定义的之外，还可以使用标识符：_declspec(dllimport)来表明函数是从动态链接库中引入的。将之前的extern声明注释起来。添加：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">_declspec(dllimport) <span class="function"><span class="keyword">int</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span>;</span><br><span class="line">_declspec(dllimport) <span class="function"><span class="keyword">int</span> <span class="title">subtract</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span>;</span><br></pre></td></tr></table></figure></p>
<p>　　若调用的函数来自于动态链接库，应采用这种方式声明外部函数，编译器可以生成运行效率更高的代码。</p>
<h2 id="完善Win32-DLL例子"><a href="#完善Win32-DLL例子" class="headerlink" title="完善Win32 DLL例子"></a>完善Win32 DLL例子</h2><p>　　为知道DLL有哪些导出函数，通常在编写动态链接库时，会提供一个头文件，在此提供DLL导出函数原型的声明，以及函数有关注释文档。</p>
<p>　　为DLL1工程添加一个头文件：Dll1.h，并添加代码<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">_declspec(dllimport) <span class="function"><span class="keyword">int</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span>;</span><br><span class="line">_declspec(dllimport) <span class="function"><span class="keyword">int</span> <span class="title">subtract</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span>;</span><br></pre></td></tr></table></figure></p>
<p>　　然后将DllTestDlg.cpp先前添加的声明语句注释起来，并在前部添加下面的语句：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"dll1.h"</span></span></span><br></pre></td></tr></table></figure></p>
<p>　　Build并运行，结果和之前一样。</p>
<p>　　所以在发布Dll1.dll动态链接库时，可将Dll1.h头文件一起提供给使用者。</p>
<p>　　下面对Dll.h进行改造，使其不仅能为调用动态链接库的客户端程序服务，也能由动态链接库程序自身来使用。修改头文件：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> DLL1_API</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">else</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DLL1_API _declspec(dllimport)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"></span><br><span class="line">_declspec(dllimport) <span class="function"><span class="keyword">int</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span>;</span><br><span class="line">_declspec(dllimport) <span class="function"><span class="keyword">int</span> <span class="title">subtract</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span>;</span><br></pre></td></tr></table></figure></p>
<p>　　修改Dll1.cpp<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DLL1_API _declspec(dllexport)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"Dll1.h"</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">return</span> a + b;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">subtract</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">return</span> a - b;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>　　将重新生成的文件复制，运行，结果也是正确的。</p>
<h2 id="从DLL中导出C-类"><a href="#从DLL中导出C-类" class="headerlink" title="从DLL中导出C++类"></a>从DLL中导出C++类</h2><p>　　在一个动态链接库中还可以导出一个C++类。<br>　　在Dll1.h中添加如下代码：</p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">DLL1_API</span> <span class="title">Point</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">	<span class="function"><span class="keyword">void</span> <span class="title">output</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span>;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<p>　　在Dll1.cpp中改为：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DLL1_API _declspec(dllexport)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"Dll1.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;Windows.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">return</span> a + b;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">subtract</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">return</span> a - b;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> Point::output(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span><br><span class="line">&#123;</span><br><span class="line">	<span class="comment">//返回调用者进程当前正在使用的那个窗口的句柄</span></span><br><span class="line">	HWND hwnd = GetForegroundWindow();</span><br><span class="line">	<span class="comment">//获取DC</span></span><br><span class="line">	HDC hdc = GetDC(hwnd);</span><br><span class="line">	<span class="keyword">char</span> buf[<span class="number">20</span>];</span><br><span class="line">	<span class="built_in">memset</span>(buf, <span class="number">0</span>, <span class="number">20</span>);</span><br><span class="line">	<span class="built_in">sprintf</span>(buf, <span class="string">"x = %d, y = %d"</span>, x, y);</span><br><span class="line">	<span class="comment">//输出坐标</span></span><br><span class="line">	TextOut(hdc, <span class="number">0</span>, <span class="number">0</span>, buf, <span class="built_in">strlen</span>(buf));</span><br><span class="line">	<span class="comment">//释放DC</span></span><br><span class="line">	ReleaseDC(hwnd, hdc);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>　　将Dll1.dll和Dll1.lib复制到测试工程DllTest所在目录下（本例将对应Dll1.h也放在了DllTest项目工程下，所以Dll1.h也应相应复制过来）。为避免麻烦，也可以把动态链接库文件所在目录添加到系统的环境变量Path中。这样就无需复制。<br>　　为测试这个新生成的DLL，打开DllTest工程，在对话框中增加一个按钮，属性为IDC_BTN_OUTPUT，Capition为Output。双击按钮添加响应函数OnBtnOutput。</p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> CDllTestDlg::OnBtnOutput() </span><br><span class="line">&#123;</span><br><span class="line">	<span class="comment">// <span class="doctag">TODO:</span> Add your control notification handler code here</span></span><br><span class="line">	Point pt;</span><br><span class="line">	pt.output(<span class="number">5</span>, <span class="number">3</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>　　记得删除Debug下的旧Dll1.dll，放入新的，否则会报错。<br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20170813113649482?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="Output" title="">
                </div>
                <div class="image-caption">Output</div>
            </figure><br>　　可利用Dumpbin命令的exports选项查看Dll1.dll这一动态链接库的导出情况，利用imports选项查看测试程序的导入情况。</p>
<p>另外，在实现动态链接库时，可以不导出整个类，而只导出该类中的某些函数。<br>打开Dll1工程，在Dll1.h中将声明Point类时使用的DLL1_API宏注释起来，然后在output函数的声明前放置DLL1_API宏。这样就表示只导出Point类中的成员函数output。为证实这一点，为Point类再添加一个成员函数test，<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> /*<span class="title">DLL1_API</span>*/ <span class="title">Point</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">	<span class="function"><span class="keyword">void</span> DLL1_API <span class="title">output</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span>;</span><br><span class="line">	<span class="function"><span class="keyword">void</span> <span class="title">test</span><span class="params">()</span></span>;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></p>
<p>接着在Dll1.cpp中添加test函数的实现：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> Point::test()</span><br><span class="line">&#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>Build后，利用dumpbin命令的exports可查看Dll1.dll的导出信息。<br>可将所需文件再次复制到DllTest工程中，运行结果和之前相同。<br>在导出类的成员函数时，该函数必须具有public类型的访问权限，否则即使能被导出也不能被其他程序访问。</p>
<h2 id="解决名字改编问题"><a href="#解决名字改编问题" class="headerlink" title="解决名字改编问题"></a>解决名字改编问题</h2><p>C++编译器在生产厂DLL时，会对导出的函数进行名字改编，由于不同编译器改编规则不同，所以改编后名字不同。若利用不同编译器分别生成DLL和访问该DLL的客户端程序时，后者在访问该DLL的导出函数时就会出现问题。因此希望动态链接库在编译时，导出函数的名称不要发生改变。为此，在定义导出函数时，需加上限定符：extern “C”。C一定要大写。<br>打开Dll1工程，找到Dll1.cpp和Dll1.h中定义DLL1_API宏的代码，添加限定符。<br>此时，Dll1.h为<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> DLL1_API</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">else</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DLL1_API extern <span class="meta-string">"C"</span> _declspec(dllimport)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"></span><br><span class="line"><span class="function">DLL1_API <span class="keyword">int</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span>;</span><br><span class="line"><span class="function">DLL1_API <span class="keyword">int</span> <span class="title">subtract</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*class  Point</span></span><br><span class="line"><span class="comment">&#123;</span></span><br><span class="line"><span class="comment">public:</span></span><br><span class="line"><span class="comment">	void DLL1_API output(int x, int y);</span></span><br><span class="line"><span class="comment">	void test();</span></span><br><span class="line"><span class="comment">&#125;;*/</span></span><br></pre></td></tr></table></figure></p>
<p>Dll1.cpp为<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DLL1_API extern <span class="meta-string">"C"</span> _declspec(dllexport)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"Dll1.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;Windows.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">return</span> a + b;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">subtract</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">return</span> a - b;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">void Point::output(int x, int y)</span></span><br><span class="line"><span class="comment">&#123;</span></span><br><span class="line"><span class="comment">	//返回调用者进程当前正在使用的那个窗口的句柄</span></span><br><span class="line"><span class="comment">	HWND hwnd = GetForegroundWindow();</span></span><br><span class="line"><span class="comment">	//获取DC</span></span><br><span class="line"><span class="comment">	HDC hdc = GetDC(hwnd);</span></span><br><span class="line"><span class="comment">	char buf[20];</span></span><br><span class="line"><span class="comment">	memset(buf, 0, 20);</span></span><br><span class="line"><span class="comment">	sprintf(buf, "x = %d, y = %d", x, y);</span></span><br><span class="line"><span class="comment">	//输出坐标</span></span><br><span class="line"><span class="comment">	TextOut(hdc, 0, 0, buf, strlen(buf));</span></span><br><span class="line"><span class="comment">	//释放DC</span></span><br><span class="line"><span class="comment">	ReleaseDC(hwnd, hdc);</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">void Point::test()</span></span><br><span class="line"><span class="comment">&#123;</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure></p>
<p>Build后生成Dll1.dll，用dumpbin命令的exports选项查看该动态链接库的导出信息，发现add和subtract函数名没有被改编。然后利用DllTest工程测试，将Point类的代码注释起来，将发现客户端可访问Dll1中的导出函数。</p>
<p>缺陷：extern “C”只能导出全局函数，不能导出一个类的成员函数。另外，如果导出函数的调用约定发生了改变，即使使用了extern “C”，函数名仍会发生改编。<br>例如，在Dll1.h中add和subtract函数添加_stdcall关键字标准调用约定。<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> DLL1_API</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">else</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DLL1_API extern <span class="meta-string">"C"</span> _declspec(dllimport)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"></span><br><span class="line">DLL1_API _<span class="function">stdcall <span class="keyword">int</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span>;</span><br><span class="line">DLL1_API _<span class="function">stdcall <span class="keyword">int</span> <span class="title">subtract</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span>;</span><br></pre></td></tr></table></figure></p>
<p>在Dll1.cpp中<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DLL1_API extern <span class="meta-string">"C"</span> _declspec(dllexport)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"Dll1.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;Windows.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> _<span class="function">stdcall <span class="title">add</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">return</span> a + b;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> _<span class="function">stdcall <span class="title">subtract</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">return</span> a - b;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>没有_stdcall关键字，函数的调用约定就是C调用约定，标准调用约定是WINAPI调用约定，与C调用约定不同。<br>Build后生成最新Dll1.dll，利用Dumpbin的exports选项查看该动态链接库的导出情况，可看到名字变为_add@8。</p>
<p>这种情况下，可通过模型定义文件（DEF）的方式来解决名字改编问题。<br>新建一个Win32 Dynamic-Link Library类型的工程，取名为Dll2，在AppWizard第一步选择“An empty Dll project”选项。添加Dll2.cpp，<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">return</span> a + b;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">subtract</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">return</span> a - b;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>在Dll2工程目录下新建一个空文本文件，改后缀为.def，添加到工程Source文件并打开：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">LIBRARY Dll2</span><br><span class="line"></span><br><span class="line">EXPORTS</span><br><span class="line">add</span><br><span class="line">subtract</span><br></pre></td></tr></table></figure></p>
<p>Bulid后利用Dumpbin的exports查看证明没有发生名字改编。</p>
<h2 id="显示加载方式加载DLL"><a href="#显示加载方式加载DLL" class="headerlink" title="显示加载方式加载DLL"></a>显示加载方式加载DLL</h2><p>将最新的Dll2.dll复制到DllTest工程目录下。将DllTestDlg.cpp包含Dll1.h的那行代码注释起来，在link选项卡上删除对Dll1.lib的链接。<br>需用到LoadLibrary函数。</p>
<p>　　To be continued…<br>　　听听那冷雨</p>
]]></content>
      
        <categories>
            
            <category> 互联网 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> CPP </tag>
            
            <tag> MFC </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[多说关闭引发的麻烦]]></title>
      <url>https://hubojing.github.io/2017/04/05/%E5%A4%9A%E8%AF%B4%E5%85%B3%E9%97%AD%E5%BC%95%E5%8F%91%E7%9A%84%E9%BA%BB%E7%83%A6/</url>
      <content type="html"><![CDATA[<p><div align="left"><br><img src="https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1550075130796&di=5aaf4cf133100ae3c94fbe331f59606c&imgtype=0&src=http%3A%2F%2Fwww.jiancai163.cn%2FUploadFiles%2F2015-04%2Fliudanni%2F201504080935428156.png" width="300" height="180" style="float:right;"><br> </div><br>　　　<br>　　<strong>关于评论系统的折腾经。</strong><br>　　<br>　　<br><a id="more"></a></p>
<h1 id="2018-3-29-更新"><a href="#2018-3-29-更新" class="headerlink" title="2018.3.29 更新"></a>2018.3.29 更新</h1><p>最新，已更换到valine评论系统。</p>
<hr>
<p>我以为短期内我不可能再更新这篇文章了。没想到……</p>
<h1 id="2017-7-9-网页云跟帖停止服务"><a href="#2017-7-9-网页云跟帖停止服务" class="headerlink" title="2017.7.9 网页云跟帖停止服务"></a>2017.7.9 网页云跟帖停止服务</h1><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20170709154958703?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="跟帖关闭" title="">
                </div>
                <div class="image-caption">跟帖关闭</div>
            </figure>
<p>此刻我只想说：<br>哈哈哈哈哈哈哈哈！</p>
<p>跟帖服务跟不上，最终还是被畅言玩死了。幸好早早换了disqus。</p>
<p>同时，为这个商业社会默哀一秒钟。</p>
<h1 id="2017-7-3-disqus不用翻墙即可评论"><a href="#2017-7-3-disqus不用翻墙即可评论" class="headerlink" title="2017.7.3 disqus不用翻墙即可评论"></a>2017.7.3 disqus不用翻墙即可评论</h1><p>　　不审核，直接显示。并且，可以回访！</p>
<p>　　这次折腾好后短期内应该不会再弄评论框了  专注工作专注工作</p>
<p>　　墙内换成网易云跟帖后，评论量就跳水式下降，仿佛被打入冷宫？加上跟帖各种缺陷，还是用disqus吧，刚好听说了可以不翻墙就能用的方法，遂试之。</p>
<p>之前的600条评论又只能暂以json的形式躺在电脑里了。为什么大家的格式都不一样呢？这真的很不和谐，很不！和！谐！！</p>
<h2 id="登录服务器"><a href="#登录服务器" class="headerlink" title="登录服务器"></a>登录服务器</h2><p>我用的xshell，ssh连接服务器。我的服务器是DigitalOcean买的 512M的……(它已经被闲置了三个月了，心疼money)<br>详见<a href="http://hubojing.me/2017/03/28/DigitalOcean%E8%B4%AD%E4%B9%B0%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%95%99%E7%A8%8B/" target="_blank" rel="noopener">DigitalOcean购买服务器教程</a></p>
<h2 id="安装面板"><a href="#安装面板" class="headerlink" title="安装面板"></a>安装面板</h2><p>在服务器上安装<a href="https://www.bt.cn/bbs/thread-1186-1-1.html" target="_blank" rel="noopener">宝塔Linux面板</a><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y wget &amp;&amp; wget -O install.sh http://download.bt.cn/install/install.sh &amp;&amp; sh install.sh</span><br></pre></td></tr></table></figure></p>
<p>然后在浏览器中打开面板。</p>
<h2 id="新建站点"><a href="#新建站点" class="headerlink" title="新建站点"></a>新建站点</h2><p>在网站中添加站点，输入一个域名。（可勾选FTP）</p>
<h2 id="配置API"><a href="#配置API" class="headerlink" title="配置API"></a>配置API</h2><p><a href="https://github.com/fooleap/disqus-php-api" target="_blank" rel="noopener">利用 PHP cURL 转发 Disqus API 请求</a> ，将文件clone到本地。在config中按要求配置。</p>
<p>将API打包上传到面板，解压。再将dist文件夹下的两个文件上传上去。</p>
<h2 id="域名解析"><a href="#域名解析" class="headerlink" title="域名解析"></a>域名解析</h2><p>接着打开解析博客的地址，我用的腾讯云。<a href="https://www.dnspod.cn" target="_blank" rel="noopener">DNSPOD</a> 添加域名。<br>主机记录填对应的新建的站点名（不带网站一级域名），记录类型A，记录值为服务器地址。</p>
<h2 id="disqus配置"><a href="#disqus配置" class="headerlink" title="disqus配置"></a>disqus配置</h2><p>disqus后台中勾选允许匿名评论。</p>
<h2 id="修改主题中评论文件"><a href="#修改主题中评论文件" class="headerlink" title="修改主题中评论文件"></a>修改主题中评论文件</h2><p>完工。</p>
<p>部署时，<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">fatal: Unable to create &apos;E:/hexo/.deploy_git/.git/index.lock&apos;: File exists.</span><br><span class="line"></span><br><span class="line">Another git process seems to be running in this repository, e.g.</span><br><span class="line">an editor opened by &apos;git commit&apos;. Please make sure all processes</span><br><span class="line">are terminated then try again. If it still fails, a git process</span><br><span class="line">may have crashed in this repository earlier:</span><br><span class="line">remove the file manually to continue.</span><br><span class="line">FATAL Something&apos;s wrong. Maybe you can find the solution here: http://hexo.io/docs/troubleshooting.html</span><br></pre></td></tr></table></figure></p>
<p>解决：删除对应的index.lock。</p>
<hr>
<blockquote>
<h1 id="2017-5-27-已更换为Disqus"><a href="#2017-5-27-已更换为Disqus" class="headerlink" title="2017.5.27 已更换为Disqus"></a>2017.5.27 已更换为Disqus</h1></blockquote>
<p>由于Disqus被墙，可能需要科学上网后才能看到评论。<br>若墙内的朋友们需要评论，可以直接点击QQ图标（PC端在左边栏，移动端在页面上方），和我进行在线对话。</p>
<hr>
<blockquote>
<h1 id="2017-5-30-已导入历史评论"><a href="#2017-5-30-已导入历史评论" class="headerlink" title="2017.5.30 已导入历史评论"></a>2017.5.30 已导入历史评论</h1></blockquote>
<p>虽然比不上多说，比网易云跟帖还是好很多了。<br>目前发现有一篇文章的评论导入失败，Disqus的显示如下：<br>Missing or invalid message 或 Unable to find parent post<br>我再看看怎么解决，是否需要手工导入。<br>参考：<a href="http://urouge.github.io/migrate-to-disqus/" target="_blank" rel="noopener">多说评论迁移至Disqus</a></p>
<hr>
<p>多说八百年不发邮件通知我有评论，在我换为网易云跟帖后，竟然邮件通知我有评论了！</p>
<p>多说关闭带来的评论区何去何从让我颇为困扰。<br>现在能用的大概只有这些：畅言（需备案）、网易云跟帖（github.io不支持）、友言（也有倒闭趋势）、来必力（韩国）。</p>
<p>没有一个像多说这样好用的！</p>
<p>虽然多说也有很多问题，但它至少解决了核心问题：<br>1.评论显示正确的网友名称。<br>来看看我换上网易云跟帖后的效果：<br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20170405161942419?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="网易云跟帖" title="">
                </div>
                <div class="image-caption">网易云跟帖</div>
            </figure></p>
<p>都是有态度网友…… 我压根分不清谁是谁！</p>
<p>2.点击头像可以回访人家的独立博客。<br>这一点真的很重要，这往往是我们小众的独立博客人交朋友的主要途径啊！</p>
<p>3.可以自定义。<br>头像旋转、评论框自定义，真的可以很好看。这些跟帖做不到。</p>
<p>4.盖楼模式多样。<br>而跟帖只能一种，我不太喜欢，重复率太高，我还是喜欢多说的嵌套。</p>
<p>多说名字没起好啊！多说无益必自毙→_→<br>先换回多说吧，再等一个月看看。</p>
]]></content>
      
        <categories>
            
            <category> 杂谈 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 杂谈 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[DigitalOcean购买服务器教程]]></title>
      <url>https://hubojing.github.io/2017/03/28/DigitalOcean%E8%B4%AD%E4%B9%B0%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%95%99%E7%A8%8B/</url>
      <content type="html"><![CDATA[<div align="left"><br><img src="http://img.blog.csdn.net/20170326174446026?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" width="300" height="180" style="float:right;"><br><br>GitHub教育礼包有50美金优惠券，加上朋友的链接送的10美金，自己充值的5美金，正好可以买一个服务器用一年了。<br>　<br>　<br><br> </div>




<a id="more"></a>
<h1 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h1><h2 id="注册、优惠码"><a href="#注册、优惠码" class="headerlink" title="注册、优惠码"></a>注册、优惠码</h2><p>1.点击<a href="https://m.do.co/c/9d7b9b7b94ba/" target="_blank" rel="noopener">https://m.do.co/c/9d7b9b7b94ba/</a> 进入DigitalOcean注册。<br>（通过以上链接，你可以多获得10美金！同时，我也将得到10美金。）</p>
<p>注册时，需要支付5美金完成支付，最好用paypal支付（可以去注册一个账号），最好不要用信用卡（土豪可以用……）。</p>
<p>2.点击头像下的Setting，再点击右侧的Billing<br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20170326174446026?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="Billing" title="">
                </div>
                <div class="image-caption">Billing</div>
            </figure></p>
<p>3.输入教育礼包优惠码<br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20170326174542642?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="Promo code" title="">
                </div>
                <div class="image-caption">Promo code</div>
            </figure></p>
<p><strong>注意</strong>：很有可能显示“ Account not eligible to use this promo code.”可能滥用优惠码却不是学生的人太多，DO加强了监管，审查比较严格。反正我的是没有通过。<br>于是，需要向客服反映情况。<br>点击Support，<br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20170326174844940?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="Support" title="">
                </div>
                <div class="image-caption">Support</div>
            </figure><br>点击Create ticket，把你的情况写清楚，最好说明你是学生，并附带你的优惠码。之后官方会帮你搞定。（在三小时后就处理好了我的）</p>
<h2 id="购买服务器"><a href="#购买服务器" class="headerlink" title="购买服务器"></a>购买服务器</h2><p>点击创建Droplet，</p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20170326175306708?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="Create Droplet" title="">
                </div>
                <div class="image-caption">Create Droplet</div>
            </figure>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20170326180620758?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="服务器价格" title="">
                </div>
                <div class="image-caption">服务器价格</div>
            </figure>
<p>学生……穷啊……只能买最便宜的……这样刚好可以用一年。</p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20170326175420319?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="选择服务器系统" title="">
                </div>
                <div class="image-caption">选择服务器系统</div>
            </figure>
<p>选择centos6.8x64</p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20170326175528071?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="选择地址" title="">
                </div>
                <div class="image-caption">选择地址</div>
            </figure>
<p>旧金山比较快。</p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20170326175607599?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="可选项" title="">
                </div>
                <div class="image-caption">可选项</div>
            </figure>
<p>这个的第一个和第三个可以选，最好不选第三个。</p>
<p>改名</p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20170326175720964?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="改名" title="">
                </div>
                <div class="image-caption">改名</div>
            </figure>
<p>点击create，服务器购买成功。<br>DO会给你发送一封带有初始密码的邮件。</p>
<h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p>下载puTTY或xshell。<br>puTTY<br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20170326180124352?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="puTTY" title="">
                </div>
                <div class="image-caption">puTTY</div>
            </figure></p>
<p>我以shell为例，<br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20170326180208206?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="初始页" title="">
                </div>
                <div class="image-caption">初始页</div>
            </figure></p>
<p>新建会话。<br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20170326180245618?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="属性" title="">
                </div>
                <div class="image-caption">属性</div>
            </figure></p>
<p>IP地址填你的服务器IP，接受并保存你的主机密钥。<br>输入用户名。<br>输入初始密码。<br>再修改密码。（密码最好复杂一点）</p>
<p>完成。<br>可以愉快地使用你的服务器啦！</p>
<h1 id="致谢"><a href="#致谢" class="headerlink" title="致谢"></a>致谢</h1><p>感谢<a href="https://www.domeyi.com/" target="_blank" rel="noopener">小忆</a>的耐心指导和大力帮助！</p>
]]></content>
      
        <categories>
            
            <category> 互联网 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 备忘 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[更换为.me域名教程]]></title>
      <url>https://hubojing.github.io/2017/03/26/%E6%9B%B4%E6%8D%A2%E4%B8%BA.me%E5%9F%9F%E5%90%8D%E6%95%99%E7%A8%8B/</url>
      <content type="html"><![CDATA[<div align="left"><br><img src="http://img.blog.csdn.net/20170326164253754?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" width="300" height="180" style="float:right;"><br><br>既然申请得到Github教育礼包，就应开始使用。<br>我的博客是基于Hexo搭建于Github的博客，原域名：<a href="http://hubojing.github.io/">http://hubojing.github.io/</a> ，现在的新域名是 <a href="http://www.hubojing.me/" target="_blank" rel="noopener">http://www.hubojing.me/</a> 。<br>　<br>　<br>　<br><br> </div>



<a id="more"></a>
<h1 id="注册-me域名"><a href="#注册-me域名" class="headerlink" title="注册.me域名"></a>注册.me域名</h1><p>1.打开教育礼包中的namecheap优惠页面<a href="https://nc.me/，使用你的github账号登录。" target="_blank" rel="noopener">https://nc.me/，使用你的github账号登录。</a><br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20170326164253754?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="登录" title="">
                </div>
                <div class="image-caption">登录</div>
            </figure></p>
<p>登陆后，显示已成功。</p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20170326164344646?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="成功" title="">
                </div>
                <div class="image-caption">成功</div>
            </figure>
<p>搜索你想要的域名。</p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20170326164007734?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="查询页面" title="">
                </div>
                <div class="image-caption">查询页面</div>
            </figure>
<p>2.如果该域名未被注册，那么你可以注册该域名。<br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20170326164441564?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="注册页面" title="">
                </div>
                <div class="image-caption">注册页面</div>
            </figure></p>
<p>点击ADD。</p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20170326164524022?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="付款" title="">
                </div>
                <div class="image-caption">付款</div>
            </figure>
<p>点击Complete Order。</p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20170326164625924?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="详情" title="">
                </div>
                <div class="image-caption">详情</div>
            </figure>
<p>点击下方的Finish Up完成注册，这样该域名就属于你了。</p>
<p>紧接着，会要求你登录你的namecheap账号，如果之前没有用过该网站，就点register注册一个账号。</p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20170326164750097?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="注册" title="">
                </div>
                <div class="image-caption">注册</div>
            </figure>
<p>注册完成后，是以下的页面显示。</p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20170326164921653?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="注册完成" title="">
                </div>
                <div class="image-caption">注册完成</div>
            </figure>
<p>在和你的Github账户绑定在一起：<br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20170326165006630?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="绑定成功" title="">
                </div>
                <div class="image-caption">绑定成功</div>
            </figure></p>
<p>这样.me域名注册就算是全部完成了。</p>
<h1 id="域名管理"><a href="#域名管理" class="headerlink" title="域名管理"></a>域名管理</h1><p>打开网址<a href="http://www.namecheap.com/，登录自己的账户。" target="_blank" rel="noopener">http://www.namecheap.com/，登录自己的账户。</a><br>点击Domain List，<br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20170326165302596?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="点击" title="">
                </div>
                <div class="image-caption">点击</div>
            </figure></p>
<p>你将看到域名列表。</p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20170326165359413?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="域名列表" title="">
                </div>
                <div class="image-caption">域名列表</div>
            </figure>
<p>由于国外的DNS可能很慢，于是最好托管到国内的服务商来。我选择的是腾讯云。</p>
<h1 id="转移到腾讯云"><a href="#转移到腾讯云" class="headerlink" title="转移到腾讯云"></a>转移到腾讯云</h1><p>进入<a href="https://www.dnspod.cn/，注册新账号（可以用QQ、微信等直接登录免注册）。" target="_blank" rel="noopener">https://www.dnspod.cn/，注册新账号（可以用QQ、微信等直接登录免注册）。</a></p>
<p>点击添加域名，将刚才的.me域名输入。保存。<br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20170326165806508?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="添加域名" title="">
                </div>
                <div class="image-caption">添加域名</div>
            </figure></p>
<p>控制台全局外观：<br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20170326170148387?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="控制台" title="">
                </div>
                <div class="image-caption">控制台</div>
            </figure></p>
<p>再回到namecheap控制台，修改NAMESERVERS，选择Custom DNS，如图。<br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20170326170503918?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="修改DNS" title="">
                </div>
                <div class="image-caption">修改DNS</div>
            </figure></p>
<p>需要等待一会儿才能成功。（最晚48h，我就等了几分钟就好了。）</p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20170326170702856?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="成功提示" title="">
                </div>
                <div class="image-caption">成功提示</div>
            </figure>
<p>回到腾讯云，域名是红的。<br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20170326170821412?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="红色" title="">
                </div>
                <div class="image-caption">红色</div>
            </figure></p>
<p>点击进去看看，再返回，等待一下，再刷新。<br>变成蓝色，说明已经更新成功了。</p>
<p>点击进入，点击添加记录，</p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20170326171042541?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="添加记录" title="">
                </div>
                <div class="image-caption">添加记录</div>
            </figure>
<p>保存。</p>
<h1 id="GitHub博客项目设置"><a href="#GitHub博客项目设置" class="headerlink" title="GitHub博客项目设置"></a>GitHub博客项目设置</h1><p>进入项目页（是博客项目页，非个人资料页），点击Setting，<br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20170326171232078?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="GitHub Pages" title="">
                </div>
                <div class="image-caption">GitHub Pages</div>
            </figure></p>
<p>将Custom domain改为你刚才解析的域名，比如我的 <a href="http://www.hubojing.me" target="_blank" rel="noopener">www.hubojing.me</a> ，点击Save保存。</p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20170326171403280?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="保存成功" title="">
                </div>
                <div class="image-caption">保存成功</div>
            </figure>
<p>大功告成！你的新域名已能正常使用，并且也能通过旧域名自动跳转到新域名！（记得重启浏览器，或者使用IE或Edge浏览器打开查看效果！）<br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20170326171616595?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="大功告成" title="">
                </div>
                <div class="image-caption">大功告成</div>
            </figure></p>
<h1 id="致谢"><a href="#致谢" class="headerlink" title="致谢"></a>致谢</h1><p>感谢 <a href="https://www.domeyi.com/" target="_blank" rel="noopener">小忆</a> 在我更换域名时提供的大力帮助！</p>
]]></content>
      
        <categories>
            
            <category> 互联网 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 备忘 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Github教育礼包]]></title>
      <url>https://hubojing.github.io/2017/03/25/Github%E6%95%99%E8%82%B2%E7%A4%BC%E5%8C%85/</url>
      <content type="html"><![CDATA[<div align="left"><br><img src="http://img.qqzhi.com/upload/img_0_2954802999D248096967_23.jpg" width="300" height="180" style="float:right;"><br><br><br>　<br>感谢小伙伴让我知道github教育礼包，并告诉我如何申请。<br><br><br> </div>


<a id="more"></a>
<ol>
<li>到教育优惠页面申请：<a href="https://education.github.com/" target="_blank" rel="noopener">https://education.github.com/</a></li>
<li>填写学校信息及申请理由，如果有edu邮箱一般很快就通过了；如果没有，需要提供证件来证明。</li>
<li>一般来说一小时到几天就申请成功了。（我当天晚上收到了邮件）<br>有用的主要三个东西：</li>
<li>me域名免费一年</li>
<li>DO的免费VPS代金券50美金（有效期1年），可以使用最低配置11个月</li>
<li>免费SSL证书</li>
</ol>
<p>收到的邮件（截取片段）：<br>If you need help getting started with Git and GitHub, check out:</p>
<p><a href="https://help.github.com/articles/good-resources-for-learning-git-and-github" target="_blank" rel="noopener">https://help.github.com/articles/good-resources-for-learning-git-and-github</a></p>
<p>We’ve also given you access to the Student Developer Pack, available at:</p>
<p><a href="https://education.github.com/pack" target="_blank" rel="noopener">https://education.github.com/pack</a></p>
<p>If you have any questions, contact us:</p>
<p><a href="https://education.github.com/contact" target="_blank" rel="noopener">https://education.github.com/contact</a></p>
<p>Spread the word: we love giving educational discounts to students, teachers, administrators, and researchers! Please send them to:</p>
<p><a href="https://education.github.com" target="_blank" rel="noopener">https://education.github.com</a></p>
<p>Have an Octotastic day!（这个 Octotastic 我不造是什么意思……词典也没这个词 望大神解答）</p>
<p>My Pack:<br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20170325152139513?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="ATOM" title="">
                </div>
                <div class="image-caption">ATOM</div>
            </figure><br>A hackable text editor for the 21st Century<br>来自21世纪的可定制文本编辑器<br>免费使用</p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20170325152259545?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="aws educate" title="">
                </div>
                <div class="image-caption">aws educate</div>
            </figure>
<p>Access to the AWS cloud, free training, and collaboration resources<br>AWS云，免费教程和资源。</p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20170325152452545?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="bitnami" title="">
                </div>
                <div class="image-caption">bitnami</div>
            </figure>
<p>Install cloud applications in a single click<br>轻松安装云应用</p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20170325152601503?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="CARTO" title="">
                </div>
                <div class="image-caption">CARTO</div>
            </figure>
<p>An open and powerful platform for spatial data analysis, visualization, and application creation.<br>一个开放有力的空间、视觉、应用创建数据分析平台。</p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20170325152759640?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="CrowdFlower" title="">
                </div>
                <div class="image-caption">CrowdFlower</div>
            </figure>
<p>Crowdsourcing and data enrichment platform<br>众包与数据富集平台</p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20170325152955501?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="DATADOG" title="">
                </div>
                <div class="image-caption">DATADOG</div>
            </figure>
<p>Cloud-based infrastructure monitoring<br>云基础设施监控</p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20170325153132065?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="DigitalOcean" title="">
                </div>
                <div class="image-caption">DigitalOcean</div>
            </figure>
<p>Simple cloud hosting, built for developers<br>简单云托管，为开发者而生</p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20170325153307467?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="dnsimple" title="">
                </div>
                <div class="image-caption">dnsimple</div>
            </figure>
<p>Simple DNS management with one-click services and a robust API<br>简单的DNS管理，包括一键服务和强大的API</p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20170325153539661?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="FLATIRON SCHOOL" title="">
                </div>
                <div class="image-caption">FLATIRON SCHOOL</div>
            </figure>
<p>Learn Web Development from the premier coding bootcamp for launching developers.<br>从最开始的代码集训营开始学习Web开发成为开发者。</p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20170325153827865?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="Github" title="">
                </div>
                <div class="image-caption">Github</div>
            </figure>
<p>Powerful collaboration, code review, and code management<br>强大的协作、代码审查和代码管理</p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20170325153937663?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="GitKraken" title="">
                </div>
                <div class="image-caption">GitKraken</div>
            </figure>
<p>The downright luxurious Git client for Windows, Mac and Linux<br>Windows，Mac和Linux上的超级豪华Git客户端</p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20170325154114898?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="HACKHANDS" title="">
                </div>
                <div class="image-caption">HACKHANDS</div>
            </figure>
<p>Live programming help available 24/7<br>编程帮助</p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20170325154256511?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="Microsoft Imagine" title="">
                </div>
                <div class="image-caption">Microsoft Imagine</div>
            </figure>
<p>A suite of Microsoft Azure cloud services and developer tools, including the Visual Studio IDE<br>一套微软Azure的云服务和开发工具，包括Visual Studio IDE</p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20170325154446405?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="namecheap" title="">
                </div>
                <div class="image-caption">namecheap</div>
            </figure>
<p>Affordable registration, hosting, and domain management<br>便宜的注册，托管和域管理</p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20170325154612806?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="SendGrid" title="">
                </div>
                <div class="image-caption">SendGrid</div>
            </figure>
<p>Email infrastructure as a service<br>电子邮件基础设施服务</p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20170325154722190?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="stripe" title="">
                </div>
                <div class="image-caption">stripe</div>
            </figure>
<p>Web and mobile payments, built for developers<br>网络和移动支付，为开发者而生</p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20170325154820863?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="TAPLYTICS" title="">
                </div>
                <div class="image-caption">TAPLYTICS</div>
            </figure>
<p>Dynamic A/B testing, smart push notifications and custom analytics for native mobile apps<br>动态A / B测试，智能推送通知和自定义分析本地移动应用程序</p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20170325155641561?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="transifex" title="">
                </div>
                <div class="image-caption">transifex</div>
            </figure>
<p>Localization platform that easily integrates with your code base<br>易于与代码库集成的本地化平台</p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20170325155750954?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="Travis CI" title="">
                </div>
                <div class="image-caption">Travis CI</div>
            </figure>
<p>Continuous integration platform for open source and private projects<br>开源和私有项目的连续集成平台</p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20170325155909190?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="UDACITY" title="">
                </div>
                <div class="image-caption">UDACITY</div>
            </figure>
<p>Enroll in a Nanodegree program, and launch your career in Web and Mobile Development, Machine Learning, Data Science, and more.</p>
<p>Enroll in a Nanodegree program, and launch your career in Web and Mobile Development, Machine Learning, Data Science, and more.<br>报名参加一个nanodegree项目，在Web、移动开发、机器学习、数据科学以及等多方面，开启你的职业生涯。</p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20170325162245096?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="UNREAL" title="">
                </div>
                <div class="image-caption">UNREAL</div>
            </figure>
<p>A complete suite of game development tools for PC, console, mobile, web and VR<br>一套完整的游戏开发工具，用于PC，控制台，移动，网络和虚拟现实</p>
<p>正在学习其中一些工具的使用中……未完待续。</p>
]]></content>
      
        <categories>
            
            <category> 杂谈 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 杂谈 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[简易计算器（Android）]]></title>
      <url>https://hubojing.github.io/2017/03/22/%E5%88%B6%E4%BD%9C%E7%AE%80%E6%98%93%E8%AE%A1%E7%AE%97%E5%99%A8APP%EF%BC%88%E7%BA%BF%E6%80%A7%E7%BB%93%E6%9E%84%EF%BC%89/</url>
      <content type="html"><![CDATA[<div align="left"><br><img src="https://github.com/hubojing/BlogImages/blob/7fb52d5ed0a38a2a082554e02083874a0ecf0992/%E7%AE%80%E6%98%93%E8%AE%A1%E7%AE%97%E5%99%A8%EF%BC%88Android%EF%BC%89%E2%80%94%E2%80%94%E7%AE%80%E6%98%93%E8%AE%A1%E7%AE%97%E5%99%A8.png?raw=true" width="300" height="180" style="float:right;"><br><br><br><br>安卓端简易计算器APP实现。<br><br><br><br></div>

<a id="more"></a>
<h1 id="目标"><a href="#目标" class="headerlink" title="目标"></a>目标</h1><p>制作简易计算器（Android）。</p>
<h1 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h1><p>第一步：页面布局<br>第二步：事件监听以及实现运算</p>
<h1 id="成品"><a href="#成品" class="headerlink" title="成品"></a>成品</h1><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="https://github.com/hubojing/BlogImages/blob/7fb52d5ed0a38a2a082554e02083874a0ecf0992/%E7%AE%80%E6%98%93%E8%AE%A1%E7%AE%97%E5%99%A8%EF%BC%88Android%EF%BC%89%E2%80%94%E2%80%94%E7%AE%80%E6%98%93%E8%AE%A1%E7%AE%97%E5%99%A8.png?raw=true" alt="简易计算器" title="">
                </div>
                <div class="image-caption">简易计算器</div>
            </figure>
<h1 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h1><h2 id="MainActivity-java"><a href="#MainActivity-java" class="headerlink" title="MainActivity.java"></a>MainActivity.java</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.calculator;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.app.Activity;</span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.view.View.OnClickListener;</span><br><span class="line"><span class="keyword">import</span> android.widget.Button;</span><br><span class="line"><span class="keyword">import</span> android.widget.EditText;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">Activity</span> <span class="keyword">implements</span> <span class="title">OnClickListener</span></span>&#123;</span><br><span class="line">	Button btn_0;<span class="comment">//0按钮</span></span><br><span class="line">	Button btn_1;<span class="comment">//1按钮</span></span><br><span class="line">	Button btn_2;<span class="comment">//2按钮</span></span><br><span class="line">	Button btn_3;<span class="comment">//3按钮</span></span><br><span class="line">	Button btn_4;<span class="comment">//4按钮</span></span><br><span class="line">	Button btn_5;<span class="comment">//5按钮</span></span><br><span class="line">	Button btn_6;<span class="comment">//6按钮</span></span><br><span class="line">	Button btn_7;<span class="comment">//7按钮</span></span><br><span class="line">	Button btn_8;<span class="comment">//8按钮</span></span><br><span class="line">	Button btn_9;<span class="comment">//9按钮</span></span><br><span class="line">	Button btn_point;<span class="comment">//小数点按钮</span></span><br><span class="line">	Button btn_clear;<span class="comment">//清除按钮</span></span><br><span class="line">	Button btn_del;<span class="comment">//删除按钮</span></span><br><span class="line">	Button btn_plus;<span class="comment">//加按钮</span></span><br><span class="line">	Button btn_minus;<span class="comment">//减按钮</span></span><br><span class="line">	Button btn_multiply;<span class="comment">//乘按钮</span></span><br><span class="line">	Button btn_divide;<span class="comment">//除按钮</span></span><br><span class="line">	Button btn_equal;<span class="comment">//等号按钮</span></span><br><span class="line">	EditText et_input;<span class="comment">//显示输入内容的显示屏</span></span><br><span class="line">	<span class="keyword">boolean</span> clear_flag;<span class="comment">//清空标识</span></span><br><span class="line">	</span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">		setContentView(R.layout.activity_main);</span><br><span class="line">		btn_0 = (Button) findViewById(R.id.btn_0);</span><br><span class="line">		btn_1 = (Button) findViewById(R.id.btn_1);</span><br><span class="line">		btn_2 = (Button) findViewById(R.id.btn_2);</span><br><span class="line">		btn_3 = (Button) findViewById(R.id.btn_3);</span><br><span class="line">		btn_4 = (Button) findViewById(R.id.btn_4);</span><br><span class="line">		btn_5 = (Button) findViewById(R.id.btn_5);</span><br><span class="line">		btn_6 = (Button) findViewById(R.id.btn_6);</span><br><span class="line">		btn_7 = (Button) findViewById(R.id.btn_7);</span><br><span class="line">		btn_8 = (Button) findViewById(R.id.btn_8);</span><br><span class="line">		btn_9 = (Button) findViewById(R.id.btn_9);</span><br><span class="line">		btn_point = (Button) findViewById(R.id.btn_point);</span><br><span class="line">		btn_clear = (Button) findViewById(R.id.btn_clear);</span><br><span class="line">		btn_del = (Button) findViewById(R.id.btn_del);</span><br><span class="line">		btn_plus = (Button) findViewById(R.id.btn_plus);</span><br><span class="line">		btn_minus = (Button) findViewById(R.id.btn_minus);</span><br><span class="line">		btn_multiply = (Button) findViewById(R.id.btn_multiply);</span><br><span class="line">		btn_divide = (Button) findViewById(R.id.btn_divide);</span><br><span class="line">		btn_equal = (Button) findViewById(R.id.btn_equal);</span><br><span class="line">		<span class="comment">//以上是实例化按钮</span></span><br><span class="line">		et_input=(EditText)findViewById(R.id.et_input);<span class="comment">//实例化显示屏</span></span><br><span class="line">		</span><br><span class="line">		btn_0.setOnClickListener(<span class="keyword">this</span>);</span><br><span class="line">		btn_1.setOnClickListener(<span class="keyword">this</span>);</span><br><span class="line">		btn_2.setOnClickListener(<span class="keyword">this</span>);</span><br><span class="line">		btn_3.setOnClickListener(<span class="keyword">this</span>);</span><br><span class="line">		btn_4.setOnClickListener(<span class="keyword">this</span>);</span><br><span class="line">		btn_5.setOnClickListener(<span class="keyword">this</span>);</span><br><span class="line">		btn_6.setOnClickListener(<span class="keyword">this</span>);</span><br><span class="line">		btn_7.setOnClickListener(<span class="keyword">this</span>);</span><br><span class="line">		btn_8.setOnClickListener(<span class="keyword">this</span>);</span><br><span class="line">		btn_9.setOnClickListener(<span class="keyword">this</span>);</span><br><span class="line">		btn_point.setOnClickListener(<span class="keyword">this</span>);</span><br><span class="line">		btn_clear.setOnClickListener(<span class="keyword">this</span>);</span><br><span class="line">		btn_del.setOnClickListener(<span class="keyword">this</span>);</span><br><span class="line">		btn_plus.setOnClickListener(<span class="keyword">this</span>);</span><br><span class="line">		btn_minus.setOnClickListener(<span class="keyword">this</span>);</span><br><span class="line">		btn_multiply.setOnClickListener(<span class="keyword">this</span>);	</span><br><span class="line">		btn_divide.setOnClickListener(<span class="keyword">this</span>);</span><br><span class="line">		btn_equal.setOnClickListener(<span class="keyword">this</span>);</span><br><span class="line">		<span class="comment">//以上设置按钮的点击事件</span></span><br><span class="line">		</span><br><span class="line">		</span><br><span class="line">		</span><br><span class="line">		</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">		<span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">		String str =et_input.getText().toString();</span><br><span class="line">		<span class="keyword">switch</span> (v.getId()) &#123;</span><br><span class="line">		<span class="keyword">case</span> R.id.btn_0:</span><br><span class="line">		<span class="keyword">case</span> R.id.btn_1:</span><br><span class="line">		<span class="keyword">case</span> R.id.btn_2:</span><br><span class="line">		<span class="keyword">case</span> R.id.btn_3:</span><br><span class="line">		<span class="keyword">case</span> R.id.btn_4:</span><br><span class="line">		<span class="keyword">case</span> R.id.btn_5:</span><br><span class="line">		<span class="keyword">case</span> R.id.btn_6:</span><br><span class="line">		<span class="keyword">case</span> R.id.btn_7:</span><br><span class="line">		<span class="keyword">case</span> R.id.btn_8:</span><br><span class="line">		<span class="keyword">case</span> R.id.btn_9:</span><br><span class="line">		<span class="keyword">case</span> R.id.btn_point:</span><br><span class="line">			<span class="keyword">if</span>(clear_flag)&#123;</span><br><span class="line">				clear_flag=<span class="keyword">false</span>;</span><br><span class="line">				str=<span class="string">""</span>;</span><br><span class="line">				et_input.setText(<span class="string">""</span>);</span><br><span class="line">			&#125;</span><br><span class="line">		et_input.setText(str+((Button)v).getText());</span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">			</span><br><span class="line">		</span><br><span class="line">		<span class="keyword">case</span> R.id.btn_plus:</span><br><span class="line">		<span class="keyword">case</span> R.id.btn_minus:</span><br><span class="line">		<span class="keyword">case</span> R.id.btn_multiply:</span><br><span class="line">		<span class="keyword">case</span> R.id.btn_divide:</span><br><span class="line">			<span class="keyword">if</span>(clear_flag)&#123;</span><br><span class="line">				clear_flag=<span class="keyword">false</span>;</span><br><span class="line">				str=<span class="string">""</span>;</span><br><span class="line">				et_input.setText(<span class="string">""</span>);</span><br><span class="line">			&#125;</span><br><span class="line">		et_input.setText(str+<span class="string">" "</span>+((Button)v).getText()+<span class="string">" "</span>);</span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">		<span class="keyword">case</span> R.id.btn_clear:</span><br><span class="line">			clear_flag=<span class="keyword">false</span>;</span><br><span class="line">			str=<span class="string">""</span>;</span><br><span class="line">			et_input.setText(<span class="string">""</span>);</span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">		<span class="keyword">case</span> R.id.btn_del:</span><br><span class="line">			<span class="keyword">if</span>(clear_flag)&#123;</span><br><span class="line">				clear_flag=<span class="keyword">false</span>;</span><br><span class="line">				str=<span class="string">""</span>;</span><br><span class="line">				et_input.setText(<span class="string">""</span>);</span><br><span class="line">			&#125;<span class="keyword">else</span> <span class="keyword">if</span>(str!=<span class="keyword">null</span>&amp;&amp;!str.equals(<span class="string">""</span>))&#123;</span><br><span class="line">				et_input.setText(str.substring(<span class="number">0</span>, str.length()-<span class="number">1</span>));</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">		<span class="keyword">case</span> R.id.btn_equal:</span><br><span class="line">			getResult();</span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">	</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * 运算结果</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">getResult</span><span class="params">()</span></span>&#123;</span><br><span class="line">		String exp=et_input.getText().toString();</span><br><span class="line">		<span class="keyword">if</span>(exp==<span class="keyword">null</span>||exp.equals(<span class="string">""</span>))&#123;</span><br><span class="line">			<span class="keyword">return</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span>(!exp.contains(<span class="string">" "</span>))&#123;</span><br><span class="line">			<span class="keyword">return</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	</span><br><span class="line">		<span class="keyword">if</span>(clear_flag)&#123;</span><br><span class="line">			clear_flag=<span class="keyword">false</span>;</span><br><span class="line">			<span class="keyword">return</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		clear_flag=<span class="keyword">true</span>;</span><br><span class="line">		<span class="keyword">double</span> result=<span class="number">0</span>;</span><br><span class="line">		String s1=exp.substring(<span class="number">0</span>, exp.indexOf(<span class="string">" "</span>));<span class="comment">//运算符前面的字符串</span></span><br><span class="line">		String op=exp.substring(exp.indexOf(<span class="string">" "</span>)+<span class="number">1</span>, exp.indexOf(<span class="string">" "</span>)+<span class="number">2</span>);<span class="comment">//运算符</span></span><br><span class="line">		String s2=exp.substring(exp.indexOf(<span class="string">" "</span>)+<span class="number">3</span>);<span class="comment">//运算符后面的字符串</span></span><br><span class="line">		</span><br><span class="line">		<span class="keyword">if</span>(!s1.equals(<span class="string">""</span>)&amp;&amp;!s2.equals(<span class="string">""</span>))&#123;</span><br><span class="line">			<span class="keyword">double</span> d1=Double.parseDouble(s1);</span><br><span class="line">			<span class="keyword">double</span> d2=Double.parseDouble(s2);</span><br><span class="line">			<span class="keyword">if</span>(op.equals(<span class="string">"+"</span>))&#123;</span><br><span class="line">				result=d1+d2;</span><br><span class="line">			&#125;<span class="keyword">else</span> <span class="keyword">if</span>(op.equals(<span class="string">"-"</span>))&#123;</span><br><span class="line">				result=d1-d2;</span><br><span class="line">			&#125;<span class="keyword">else</span> <span class="keyword">if</span>(op.equals(<span class="string">"×"</span>))&#123;</span><br><span class="line">				result=d1*d2;</span><br><span class="line">			&#125;<span class="keyword">else</span> <span class="keyword">if</span>(op.equals(<span class="string">"÷"</span>))&#123;</span><br><span class="line">				<span class="keyword">if</span>(d2==<span class="number">0</span>)&#123;</span><br><span class="line">					result=<span class="number">0</span>;</span><br><span class="line">				&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">					result=d1/d2;</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">if</span>(!s1.contains(<span class="string">"."</span>)&amp;&amp;!s2.contains(<span class="string">"."</span>)&amp;&amp;!op.equals(<span class="string">"÷"</span>))&#123;</span><br><span class="line">				<span class="keyword">int</span> r=(<span class="keyword">int</span>)result;</span><br><span class="line">				et_input.setText(r+<span class="string">""</span>);</span><br><span class="line">			&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">				et_input.setText(result+<span class="string">""</span>);</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;<span class="keyword">else</span> <span class="keyword">if</span>(!s1.equals(<span class="string">""</span>)&amp;&amp;s2.equals(<span class="string">""</span>))&#123;</span><br><span class="line">			et_input.setText(exp);</span><br><span class="line">		&#125;<span class="keyword">else</span> <span class="keyword">if</span>(s1.equals(<span class="string">""</span>)&amp;&amp;!s2.equals(<span class="string">""</span>))&#123;</span><br><span class="line">			<span class="keyword">double</span> d2=Double.parseDouble(s2);</span><br><span class="line">			<span class="keyword">if</span>(op.equals(<span class="string">"+"</span>))&#123;</span><br><span class="line">				result=<span class="number">0</span>+d2;</span><br><span class="line">			&#125;<span class="keyword">else</span> <span class="keyword">if</span>(op.equals(<span class="string">"-"</span>))&#123;</span><br><span class="line">				result=<span class="number">0</span>-d2;</span><br><span class="line">			&#125;<span class="keyword">else</span> <span class="keyword">if</span>(op.equals(<span class="string">"×"</span>))&#123;</span><br><span class="line">				result=<span class="number">0</span>;</span><br><span class="line">			&#125;<span class="keyword">else</span> <span class="keyword">if</span>(op.equals(<span class="string">"÷"</span>))&#123;</span><br><span class="line">					result=<span class="number">0</span>;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">if</span>(!s2.contains(<span class="string">"."</span>))&#123;</span><br><span class="line">				<span class="keyword">int</span> r=(<span class="keyword">int</span>)result;</span><br><span class="line">				et_input.setText(r+<span class="string">""</span>);</span><br><span class="line">			&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">				et_input.setText(result+<span class="string">""</span>);</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">			et_input.setText(<span class="string">""</span>);</span><br><span class="line">		&#125;</span><br><span class="line">				</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="activity-main-xml"><a href="#activity-main-xml" class="headerlink" title="activity_main.xml"></a>activity_main.xml</h2><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br></pre></td><td class="code"><pre><span class="line">&lt;LinearLayout xmlns:android=<span class="string">"http://schemas.android.com/apk/res/android"</span></span><br><span class="line">    xmlns:tools=<span class="string">"http://schemas.android.com/tools"</span></span><br><span class="line">    android:layout_width=<span class="string">"match_parent"</span></span><br><span class="line">    android:layout_height=<span class="string">"match_parent"</span></span><br><span class="line">    android:orientation=<span class="string">"vertical"</span></span><br><span class="line">    android:paddingBottom=<span class="string">"@dimen/activity_vertical_margin"</span></span><br><span class="line">    android:paddingLeft=<span class="string">"@dimen/activity_horizontal_margin"</span></span><br><span class="line">    android:paddingRight=<span class="string">"@dimen/activity_horizontal_margin"</span></span><br><span class="line">    android:paddingTop=<span class="string">"@dimen/activity_vertical_margin"</span></span><br><span class="line">    tools:context=<span class="string">"com.example.calculator.MainActivity"</span> &gt;</span><br><span class="line"></span><br><span class="line">   </span><br><span class="line">	&lt;EditText</span><br><span class="line">	    android:layout_width=<span class="string">"fill_parent"</span></span><br><span class="line">	    android:layout_height=<span class="string">"60dip"</span></span><br><span class="line">	    android:id=<span class="string">"@+id/et_input"</span></span><br><span class="line">	    android:editable=<span class="string">"false"</span></span><br><span class="line">	    android:gravity=<span class="string">"right|bottom"</span></span><br><span class="line">	    android:background=<span class="string">"@drawable/white_bg"</span></span><br><span class="line">	    /&gt;</span><br><span class="line">	&lt;LinearLayout</span><br><span class="line">	    android:layout_width=<span class="string">"fill_parent"</span></span><br><span class="line">	    android:layout_height=<span class="string">"wrap_content"</span></span><br><span class="line">	    android:layout_marginTop=<span class="string">"20dp"</span></span><br><span class="line">	    android:orientation=<span class="string">"horizontal"</span></span><br><span class="line">	    android:gravity=<span class="string">"center_horizontal"</span></span><br><span class="line">	    &gt;</span><br><span class="line">	    &lt;Button</span><br><span class="line">	        android:layout_width=<span class="string">"60dp"</span></span><br><span class="line">	        android:layout_height=<span class="string">"60dp"</span></span><br><span class="line">	        android:text=<span class="string">"C"</span></span><br><span class="line">	         android:paddingRight=<span class="string">"10dp"</span></span><br><span class="line">	        android:paddingBottom=<span class="string">"10dp"</span></span><br><span class="line">	        android:background=<span class="string">"@drawable/white_selector"</span></span><br><span class="line">	        android:textSize=<span class="string">"20sp"</span></span><br><span class="line">	        android:gravity=<span class="string">"right|bottom"</span></span><br><span class="line">	        android:id=<span class="string">"@+id/btn_clear"</span></span><br><span class="line">	        /&gt;</span><br><span class="line">	     &lt;Button</span><br><span class="line">	        android:layout_width=<span class="string">"60dp"</span></span><br><span class="line">	        android:layout_height=<span class="string">"60dp"</span></span><br><span class="line">	        android:text=<span class="string">"DEL"</span></span><br><span class="line">	         android:paddingRight=<span class="string">"10dp"</span></span><br><span class="line">	        android:paddingBottom=<span class="string">"10dp"</span></span><br><span class="line">	         android:background=<span class="string">"@drawable/white_selector"</span></span><br><span class="line">	        android:layout_marginLeft=<span class="string">"10dp"</span></span><br><span class="line">	        android:textSize=<span class="string">"20sp"</span></span><br><span class="line">	        android:gravity=<span class="string">"right|bottom"</span></span><br><span class="line">	        android:id=<span class="string">"@+id/btn_del"</span></span><br><span class="line">	        /&gt;</span><br><span class="line">	     &lt;Button</span><br><span class="line">	        android:layout_width=<span class="string">"60dp"</span></span><br><span class="line">	        android:layout_height=<span class="string">"60dp"</span></span><br><span class="line">	        android:text=<span class="string">"÷"</span></span><br><span class="line">	         android:paddingRight=<span class="string">"10dp"</span></span><br><span class="line">	        android:paddingBottom=<span class="string">"10dp"</span></span><br><span class="line">	         android:background=<span class="string">"@drawable/white_selector"</span></span><br><span class="line">	        android:layout_marginLeft=<span class="string">"10dp"</span></span><br><span class="line">	        android:textSize=<span class="string">"20sp"</span></span><br><span class="line">	        android:gravity=<span class="string">"right|bottom"</span></span><br><span class="line">	        android:id=<span class="string">"@+id/btn_divide"</span></span><br><span class="line">	        /&gt;</span><br><span class="line">	       &lt;Button</span><br><span class="line">	        android:layout_width=<span class="string">"60dp"</span></span><br><span class="line">	        android:layout_height=<span class="string">"60dp"</span></span><br><span class="line">	        android:text=<span class="string">"×"</span></span><br><span class="line">	         android:paddingRight=<span class="string">"10dp"</span></span><br><span class="line">	        android:paddingBottom=<span class="string">"10dp"</span></span><br><span class="line">	         android:background=<span class="string">"@drawable/white_selector"</span></span><br><span class="line">	        android:layout_marginLeft=<span class="string">"10dp"</span></span><br><span class="line">	        android:textSize=<span class="string">"20sp"</span></span><br><span class="line">	        android:gravity=<span class="string">"right|bottom"</span></span><br><span class="line">	        android:id=<span class="string">"@+id/btn_multiply"</span></span><br><span class="line">	        /&gt;</span><br><span class="line">	    &lt;/LinearLayout&gt;</span><br><span class="line">	    </span><br><span class="line">	&lt;LinearLayout</span><br><span class="line">	    android:layout_width=<span class="string">"fill_parent"</span></span><br><span class="line">	    android:layout_height=<span class="string">"wrap_content"</span></span><br><span class="line">	    android:layout_marginTop=<span class="string">"10dp"</span></span><br><span class="line">	    android:orientation=<span class="string">"horizontal"</span></span><br><span class="line">	    android:gravity=<span class="string">"center_horizontal"</span></span><br><span class="line">	    &gt;</span><br><span class="line">	    &lt;Button</span><br><span class="line">	        android:layout_width=<span class="string">"60dp"</span></span><br><span class="line">	        android:layout_height=<span class="string">"60dp"</span></span><br><span class="line">	        android:text=<span class="string">"7"</span></span><br><span class="line">	         android:paddingRight=<span class="string">"10dp"</span></span><br><span class="line">	        android:paddingBottom=<span class="string">"10dp"</span></span><br><span class="line">	         android:background=<span class="string">"@drawable/white_selector"</span></span><br><span class="line">	        android:textSize=<span class="string">"20sp"</span></span><br><span class="line">	        android:gravity=<span class="string">"right|bottom"</span></span><br><span class="line">	        android:id=<span class="string">"@+id/btn_7"</span></span><br><span class="line">	        /&gt;</span><br><span class="line">	     &lt;Button</span><br><span class="line">	        android:layout_width=<span class="string">"60dp"</span></span><br><span class="line">	        android:layout_height=<span class="string">"60dp"</span></span><br><span class="line">	        android:text=<span class="string">"8"</span></span><br><span class="line">	         android:paddingRight=<span class="string">"10dp"</span></span><br><span class="line">	        android:paddingBottom=<span class="string">"10dp"</span></span><br><span class="line">	         android:background=<span class="string">"@drawable/white_selector"</span></span><br><span class="line">	        android:layout_marginLeft=<span class="string">"10dp"</span></span><br><span class="line">	        android:textSize=<span class="string">"20sp"</span></span><br><span class="line">	        android:gravity=<span class="string">"right|bottom"</span></span><br><span class="line">	        android:id=<span class="string">"@+id/btn_8"</span></span><br><span class="line">	        /&gt;</span><br><span class="line">	     &lt;Button</span><br><span class="line">	        android:layout_width=<span class="string">"60dp"</span></span><br><span class="line">	        android:layout_height=<span class="string">"60dp"</span></span><br><span class="line">	        android:text=<span class="string">"9"</span></span><br><span class="line">	         android:paddingRight=<span class="string">"10dp"</span></span><br><span class="line">	        android:paddingBottom=<span class="string">"10dp"</span></span><br><span class="line">	         android:background=<span class="string">"@drawable/white_selector"</span></span><br><span class="line">	        android:layout_marginLeft=<span class="string">"10dp"</span></span><br><span class="line">	        android:textSize=<span class="string">"20sp"</span></span><br><span class="line">	        android:gravity=<span class="string">"right|bottom"</span></span><br><span class="line">	        android:id=<span class="string">"@+id/btn_9"</span></span><br><span class="line">	        /&gt;</span><br><span class="line">	       &lt;Button</span><br><span class="line">	        android:layout_width=<span class="string">"60dp"</span></span><br><span class="line">	        android:layout_height=<span class="string">"60dp"</span></span><br><span class="line">	        android:text=<span class="string">"-"</span></span><br><span class="line">	         android:paddingRight=<span class="string">"10dp"</span></span><br><span class="line">	        android:paddingBottom=<span class="string">"10dp"</span></span><br><span class="line">	         android:background=<span class="string">"@drawable/white_selector"</span></span><br><span class="line">	        android:layout_marginLeft=<span class="string">"10dp"</span></span><br><span class="line">	        android:textSize=<span class="string">"20sp"</span></span><br><span class="line">	        android:gravity=<span class="string">"right|bottom"</span></span><br><span class="line">	        android:id=<span class="string">"@+id/btn_minus"</span></span><br><span class="line">	        /&gt;</span><br><span class="line">	    &lt;/LinearLayout&gt;</span><br><span class="line">	    &lt;LinearLayout</span><br><span class="line">	    android:layout_width=<span class="string">"fill_parent"</span></span><br><span class="line">	    android:layout_height=<span class="string">"wrap_content"</span></span><br><span class="line">	    android:layout_marginTop=<span class="string">"10dp"</span></span><br><span class="line">	    android:orientation=<span class="string">"horizontal"</span></span><br><span class="line">	    android:gravity=<span class="string">"center_horizontal"</span></span><br><span class="line">	    &gt;</span><br><span class="line">	    &lt;Button</span><br><span class="line">	        android:layout_width=<span class="string">"60dp"</span></span><br><span class="line">	        android:layout_height=<span class="string">"60dp"</span></span><br><span class="line">	        android:text=<span class="string">"4"</span></span><br><span class="line">	         android:paddingRight=<span class="string">"10dp"</span></span><br><span class="line">	        android:paddingBottom=<span class="string">"10dp"</span></span><br><span class="line">	         android:background=<span class="string">"@drawable/white_selector"</span></span><br><span class="line">	        android:textSize=<span class="string">"20sp"</span></span><br><span class="line">	        android:gravity=<span class="string">"right|bottom"</span></span><br><span class="line">	        android:id=<span class="string">"@+id/btn_4"</span></span><br><span class="line">	        /&gt;</span><br><span class="line">	     &lt;Button</span><br><span class="line">	        android:layout_width=<span class="string">"60dp"</span></span><br><span class="line">	        android:layout_height=<span class="string">"60dp"</span></span><br><span class="line">	        android:text=<span class="string">"5"</span></span><br><span class="line">	         android:paddingRight=<span class="string">"10dp"</span></span><br><span class="line">	        android:paddingBottom=<span class="string">"10dp"</span></span><br><span class="line">	         android:background=<span class="string">"@drawable/white_selector"</span></span><br><span class="line">	        android:layout_marginLeft=<span class="string">"10dp"</span></span><br><span class="line">	        android:textSize=<span class="string">"20sp"</span></span><br><span class="line">	        android:gravity=<span class="string">"right|bottom"</span></span><br><span class="line">	        android:id=<span class="string">"@+id/btn_5"</span></span><br><span class="line">	        /&gt;</span><br><span class="line">	     &lt;Button</span><br><span class="line">	        android:layout_width=<span class="string">"60dp"</span></span><br><span class="line">	        android:layout_height=<span class="string">"60dp"</span></span><br><span class="line">	        android:text=<span class="string">"6"</span></span><br><span class="line">	         android:paddingRight=<span class="string">"10dp"</span></span><br><span class="line">	        android:paddingBottom=<span class="string">"10dp"</span></span><br><span class="line">	         android:background=<span class="string">"@drawable/white_selector"</span></span><br><span class="line">	        android:layout_marginLeft=<span class="string">"10dp"</span></span><br><span class="line">	        android:textSize=<span class="string">"20sp"</span></span><br><span class="line">	        android:gravity=<span class="string">"right|bottom"</span></span><br><span class="line">	        android:id=<span class="string">"@+id/btn_6"</span></span><br><span class="line">	        /&gt;</span><br><span class="line">	       &lt;Button</span><br><span class="line">	        android:layout_width=<span class="string">"60dp"</span></span><br><span class="line">	        android:layout_height=<span class="string">"60dp"</span></span><br><span class="line">	        android:text=<span class="string">"+"</span></span><br><span class="line">	         android:paddingRight=<span class="string">"10dp"</span></span><br><span class="line">	        android:paddingBottom=<span class="string">"10dp"</span></span><br><span class="line">	         android:background=<span class="string">"@drawable/white_selector"</span></span><br><span class="line">	        android:layout_marginLeft=<span class="string">"10dp"</span></span><br><span class="line">	        android:textSize=<span class="string">"20sp"</span></span><br><span class="line">	        android:gravity=<span class="string">"right|bottom"</span></span><br><span class="line">	        android:id=<span class="string">"@+id/btn_plus"</span></span><br><span class="line">	        /&gt;</span><br><span class="line">	    &lt;/LinearLayout&gt;</span><br><span class="line">	    &lt;LinearLayout </span><br><span class="line">	       android:layout_width=<span class="string">"fill_parent"</span></span><br><span class="line">	       android:layout_height=<span class="string">"wrap_content"</span></span><br><span class="line">	       android:orientation=<span class="string">"horizontal"</span></span><br><span class="line">	       android:layout_marginTop=<span class="string">"10dp"</span></span><br><span class="line">	       android:gravity=<span class="string">"center_horizontal"</span></span><br><span class="line">	      </span><br><span class="line">	        &gt;</span><br><span class="line">	    &lt;LinearLayout </span><br><span class="line">	       android:layout_width=<span class="string">"wrap_content"</span> </span><br><span class="line">	       android:layout_height=<span class="string">"wrap_content"</span></span><br><span class="line">	       android:orientation=<span class="string">"vertical"</span></span><br><span class="line">	        &gt;    </span><br><span class="line">	    &lt;LinearLayout</span><br><span class="line">	        android:layout_width=<span class="string">"wrap_content"</span></span><br><span class="line">	        android:layout_height=<span class="string">"wrap_content"</span></span><br><span class="line">	        android:orientation=<span class="string">"horizontal"</span></span><br><span class="line">	        </span><br><span class="line">	        &gt;   </span><br><span class="line">	        &lt;Button</span><br><span class="line">	        android:layout_width=<span class="string">"60dp"</span></span><br><span class="line">	        android:layout_height=<span class="string">"60dp"</span></span><br><span class="line">	        android:text=<span class="string">"1"</span></span><br><span class="line">	         android:paddingRight=<span class="string">"10dp"</span></span><br><span class="line">	        android:paddingBottom=<span class="string">"10dp"</span></span><br><span class="line">	         android:background=<span class="string">"@drawable/white_selector"</span></span><br><span class="line">	        android:textSize=<span class="string">"20sp"</span></span><br><span class="line">	        android:gravity=<span class="string">"right|bottom"</span></span><br><span class="line">	        android:id=<span class="string">"@+id/btn_1"</span></span><br><span class="line">	        /&gt; </span><br><span class="line">	        &lt;Button</span><br><span class="line">	        android:layout_width=<span class="string">"60dp"</span></span><br><span class="line">	        android:layout_height=<span class="string">"60dp"</span></span><br><span class="line">	        android:text=<span class="string">"2"</span></span><br><span class="line">	         android:paddingRight=<span class="string">"10dp"</span></span><br><span class="line">	        android:paddingBottom=<span class="string">"10dp"</span></span><br><span class="line">	         android:background=<span class="string">"@drawable/white_selector"</span></span><br><span class="line">	        android:textSize=<span class="string">"20sp"</span></span><br><span class="line">	        android:gravity=<span class="string">"right|bottom"</span></span><br><span class="line">	        android:layout_marginLeft=<span class="string">"10dp"</span></span><br><span class="line">	        android:id=<span class="string">"@+id/btn_2"</span></span><br><span class="line">	        /&gt; </span><br><span class="line">	        &lt;Button</span><br><span class="line">	        android:layout_width=<span class="string">"60dp"</span></span><br><span class="line">	        android:layout_height=<span class="string">"60dp"</span></span><br><span class="line">	        android:text=<span class="string">"3"</span></span><br><span class="line">	         android:paddingRight=<span class="string">"10dp"</span></span><br><span class="line">	        android:paddingBottom=<span class="string">"10dp"</span></span><br><span class="line">	         android:background=<span class="string">"@drawable/white_selector"</span></span><br><span class="line">	        android:textSize=<span class="string">"20sp"</span></span><br><span class="line">	        android:gravity=<span class="string">"right|bottom"</span></span><br><span class="line">	        android:layout_marginLeft=<span class="string">"10dp"</span></span><br><span class="line">	        android:id=<span class="string">"@+id/btn_3"</span></span><br><span class="line">	        /&gt; </span><br><span class="line">	    &lt;/LinearLayout&gt;</span><br><span class="line">	     &lt;LinearLayout</span><br><span class="line">	        android:layout_width=<span class="string">"wrap_content"</span></span><br><span class="line">	        android:layout_height=<span class="string">"wrap_content"</span></span><br><span class="line">	        android:layout_marginTop=<span class="string">"10dp"</span></span><br><span class="line">	        android:orientation=<span class="string">"horizontal"</span></span><br><span class="line">	        &gt;   </span><br><span class="line">	         &lt;Button</span><br><span class="line">	        android:layout_width=<span class="string">"130dp"</span></span><br><span class="line">	        android:layout_height=<span class="string">"60dp"</span></span><br><span class="line">	        android:text=<span class="string">"0"</span></span><br><span class="line">	         android:paddingRight=<span class="string">"10dp"</span></span><br><span class="line">	        android:paddingBottom=<span class="string">"10dp"</span></span><br><span class="line">	         android:background=<span class="string">"@drawable/white_selector"</span></span><br><span class="line">	        android:textSize=<span class="string">"20sp"</span></span><br><span class="line">	        android:gravity=<span class="string">"right|bottom"</span></span><br><span class="line">	        android:id=<span class="string">"@+id/btn_0"</span></span><br><span class="line">	        /&gt; </span><br><span class="line">	        &lt;Button</span><br><span class="line">	        android:layout_width=<span class="string">"60dp"</span></span><br><span class="line">	        android:layout_height=<span class="string">"60dp"</span></span><br><span class="line">	        android:text=<span class="string">"."</span></span><br><span class="line">	         android:paddingRight=<span class="string">"10dp"</span></span><br><span class="line">	        android:paddingBottom=<span class="string">"10dp"</span></span><br><span class="line">	         android:background=<span class="string">"@drawable/white_selector"</span></span><br><span class="line">	        android:textSize=<span class="string">"20sp"</span></span><br><span class="line">	        android:gravity=<span class="string">"right|bottom"</span></span><br><span class="line">	        android:layout_marginLeft=<span class="string">"10dp"</span></span><br><span class="line">	        android:id=<span class="string">"@+id/btn_point"</span></span><br><span class="line">	        /&gt; </span><br><span class="line">	     &lt;/LinearLayout&gt;</span><br><span class="line">	    &lt;/LinearLayout&gt;</span><br><span class="line">	    &lt;Button</span><br><span class="line">	        android:layout_width=<span class="string">"60dp"</span></span><br><span class="line">	        android:layout_height=<span class="string">"130dp"</span></span><br><span class="line">	        android:text=<span class="string">"="</span></span><br><span class="line">	        android:paddingRight=<span class="string">"10dp"</span></span><br><span class="line">	        android:paddingBottom=<span class="string">"10dp"</span></span><br><span class="line">	         android:background=<span class="string">"@drawable/orange_selector"</span></span><br><span class="line">	        android:layout_marginLeft=<span class="string">"10dp"</span></span><br><span class="line">	        android:textSize=<span class="string">"20sp"</span></span><br><span class="line">	        android:gravity=<span class="string">"right|bottom"</span></span><br><span class="line">	        android:id=<span class="string">"@+id/btn_equal"</span></span><br><span class="line">	        /&gt; </span><br><span class="line">	    &lt;/LinearLayout&gt;</span><br><span class="line">&lt;/LinearLayout&gt;</span><br></pre></td></tr></table></figure>
<h2 id="color-xml"><a href="#color-xml" class="headerlink" title="color.xml"></a>color.xml</h2><p>res/values下新建一个xml.<br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=<span class="string">"1.0"</span> encoding=<span class="string">"utf-8"</span>?&gt;</span><br><span class="line">&lt;resources&gt;</span><br><span class="line">    &lt;color name="white"&gt;#FFFFFF&lt;/color&gt;</span><br><span class="line">	&lt;color name="red"&gt;#FF0000&lt;/color&gt;</span><br><span class="line">	&lt;color name="black"&gt;#000000&lt;/color&gt;</span><br><span class="line">	&lt;color name="gray"&gt;#808080&lt;/color&gt;</span><br><span class="line">	&lt;color name="orange"&gt;#FFA500&lt;/color&gt;</span><br><span class="line">	&lt;color name="ashen"&gt;#CD853F&lt;/color&gt;</span><br><span class="line">&lt;/resources&gt;</span><br></pre></td></tr></table></figure></p>
<h2 id="white-bg-xml"><a href="#white-bg-xml" class="headerlink" title="white_bg.xml"></a>white_bg.xml</h2><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=<span class="string">"1.0"</span> encoding=<span class="string">"utf-8"</span>?&gt;</span><br><span class="line">&lt;shape xmlns:android=<span class="string">"http://schemas.android.com/apk/res/android"</span> &gt;</span><br><span class="line">  &lt;corners android:radius=<span class="string">"5dp"</span>/&gt;</span><br><span class="line">  &lt;solid</span><br><span class="line">      android:color=<span class="string">"@color/white"</span></span><br><span class="line">  /&gt;</span><br><span class="line">  &lt;!--  </span><br><span class="line">  &lt;gradient </span><br><span class="line">      android:startColor=<span class="string">"@color/white"</span> </span><br><span class="line">	  android:endColor=<span class="string">"@color/red"</span></span><br><span class="line">	  </span><br><span class="line">	 </span><br><span class="line">	  /&gt;</span><br><span class="line">  &lt;stroke</span><br><span class="line">  android:width=<span class="string">"1dp"</span></span><br><span class="line">  android:color=<span class="string">"@color/black"</span></span><br><span class="line">  /&gt;	</span><br><span class="line">  --&gt;</span><br><span class="line">&lt;/shape&gt;</span><br></pre></td></tr></table></figure>
<h2 id="white-selector-xml"><a href="#white-selector-xml" class="headerlink" title="white_selector.xml"></a>white_selector.xml</h2><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=<span class="string">"1.0"</span> encoding=<span class="string">"utf-8"</span>?&gt;</span><br><span class="line">&lt;selector xmlns:android=<span class="string">"http://schemas.android.com/apk/res/android"</span> &gt;</span><br><span class="line">    &lt;item android:drawable=<span class="string">"@drawable/gray_bg"</span> android:state_pressed=<span class="string">"true"</span>/&gt;</span><br><span class="line">	&lt;item android:drawable=<span class="string">"@drawable/white_bg"</span>/&gt;</span><br><span class="line">&lt;/selector&gt;</span><br></pre></td></tr></table></figure>
<h1 id="出现的问题及解决方法"><a href="#出现的问题及解决方法" class="headerlink" title="出现的问题及解决方法"></a>出现的问题及解决方法</h1><ol>
<li>新建工程时，出现报错：<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">\res\values\styles.xml:<span class="number">7</span>: error: Error retrieving parent <span class="keyword">for</span> item: No resource found that matches the given name <span class="string">'Theme.AppCompat.Light'</span>.</span><br><span class="line">\res\values-v11\styles.xml:<span class="number">7</span>: error: Error retrieving parent <span class="keyword">for</span> item: No resource found that matches the given name <span class="string">'Theme.AppCompat.Light'</span>.</span><br><span class="line">\res\values-v14\styles.xml:<span class="number">8</span>: error: Error retrieving parent <span class="keyword">for</span> item: No resource found that matches the given name <span class="string">'Theme.AppCompat.Light.DarkActionBar'</span>.</span><br></pre></td></tr></table></figure>
</li>
</ol>
<p>解决方法：<br>顺着改为：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">style name=<span class="string">"AppBaseTheme"</span> parent=<span class="string">"android:Theme.Light"</span></span><br><span class="line">style name=<span class="string">"AppBaseTheme"</span> parent=<span class="string">"android:Theme.Holo.Light"</span></span><br><span class="line">style name=<span class="string">"AppBaseTheme"</span>parent=<span class="string">"android:Theme.Holo.Light.DarkActionBar"</span></span><br></pre></td></tr></table></figure></p>
<p>然后menu会报错，改为：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">android:showAsAction=<span class="string">"never"</span></span><br></pre></td></tr></table></figure></p>
<ol start="2">
<li>导入工程时报错The import android cannot be resolved</li>
</ol>
<p>解决：在新建Android项目的时候，eclipes新更新的ADT，在创建的Android版本最低版本低于4.0的时候，会新建一个v7的项目，把里面的包导入就可以。如果不想有警告的话，直接在创建项目的时候把最低版本设置为4.0以上就可以。并且不会出现第一个问题。</p>
<ol start="3">
<li>定义按钮时错误提示：Button cannot be resolved to a type</li>
</ol>
<p>解决：没导包，快捷键ctrl+shift+o搞定。</p>
<h1 id="笔记"><a href="#笔记" class="headerlink" title="笔记"></a>笔记</h1><h2 id="去掉标题栏"><a href="#去掉标题栏" class="headerlink" title="去掉标题栏"></a>去掉标题栏</h2><p>在res/values/string.xml中和AndroidManifest.xml去掉相应代码即可。</p>
<h2 id="颜色需新建xml"><a href="#颜色需新建xml" class="headerlink" title="颜色需新建xml"></a>颜色需新建xml</h2><p>存放在res/values/colors中，RGB颜色表示。</p>
<h2 id="drawble下文件结构"><a href="#drawble下文件结构" class="headerlink" title="drawble下文件结构"></a>drawble下文件结构</h2><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="https://github.com/hubojing/BlogImages/blob/b76d925a5b5d24bc8d4ffdb081b7f8eabdb573bd/%E7%AE%80%E6%98%93%E8%AE%A1%E7%AE%97%E5%99%A8%EF%BC%88Android%EF%BC%89%E2%80%94%E2%80%94%E9%A2%9C%E8%89%B2%E5%92%8C%E9%80%89%E6%8B%A9%E5%99%A8.png?raw=true" alt="颜色和选择器" title="">
                </div>
                <div class="image-caption">颜色和选择器</div>
            </figure>
<h2 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h2><p>Main_Activity.java中，首先命名控件，给一个id，其次，按钮要设置点击事件，监听到该控件动作。<br>activity_main.xml中，线性结构可以嵌套使用。</p>
<p>思考：线性结构代码显臃肿，换成TableLayout也许更佳。并且计算器需要进一步优化，目前存在小的问题，例如，加减乘除符号可以在没有数字输入时顺序打印在屏幕上。总之，基本实现了计算器的功能。</p>
<h1 id="APP下载"><a href="#APP下载" class="headerlink" title="APP下载"></a>APP下载</h1><p><a href="https://github.com/hubojing/Calculator" target="_blank" rel="noopener">https://github.com/hubojing/Calculator</a></p>
]]></content>
      
        <categories>
            
            <category> 互联网 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Android </tag>
            
            <tag> Java </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[模拟借书系统（Java异常机制实现）]]></title>
      <url>https://hubojing.github.io/2017/03/19/%E6%A8%A1%E6%8B%9F%E5%80%9F%E4%B9%A6%E7%B3%BB%E7%BB%9F%EF%BC%88java%E5%BC%82%E5%B8%B8%E6%9C%BA%E5%88%B6%E5%AE%9E%E7%8E%B0%EF%BC%89/</url>
      <content type="html"><![CDATA[<div align="left"><br><img src="http://img.blog.csdn.net/20170319164926044?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" width="300" height="180" style="float:right;"><br><br><br>java语言实现一个控制台版的模拟借书系统。<br><br><br></div>

<a id="more"></a>
<h1 id="目标"><a href="#目标" class="headerlink" title="目标"></a>目标</h1><p>用java语言实现一个控制台版的模拟借书系统，旨在练习java异常机制。</p>
<h1 id="要求"><a href="#要求" class="headerlink" title="要求"></a>要求</h1><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20170319164837988?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="要求" title="">
                </div>
                <div class="image-caption">要求</div>
            </figure>
<h1 id="成品"><a href="#成品" class="headerlink" title="成品"></a>成品</h1><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20170319164926044?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="最终效果" title="">
                </div>
                <div class="image-caption">最终效果</div>
            </figure>
<h1 id="参考代码及注释"><a href="#参考代码及注释" class="headerlink" title="参考代码及注释"></a>参考代码及注释</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.jinger;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;<span class="comment">//导入Scanner包</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BookManagerEasy</span> </span>&#123;</span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">static</span> Scanner console = <span class="keyword">new</span> Scanner(System.in);<span class="comment">//接收系统输入</span></span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">		<span class="comment">//定义”图书“数组</span></span><br><span class="line">		String[] books = &#123; <span class="string">"C语言"</span>, <span class="string">"数据结构"</span>, <span class="string">"汇编语言"</span>, <span class="string">"高数"</span>, <span class="string">"大学语文"</span>, <span class="string">"毛概"</span> &#125;;</span><br><span class="line">		<span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</span><br><span class="line">			System.out.println(<span class="string">"输入命令：1-按照名称查找图书；2-按照序号查找图书"</span>);</span><br><span class="line">			String book;</span><br><span class="line">			<span class="keyword">try</span> &#123;</span><br><span class="line">				<span class="comment">//取得整型命令</span></span><br><span class="line">				<span class="keyword">int</span> command = inputCommand();</span><br><span class="line">				<span class="comment">//根据不同命令值，进行不同操作</span></span><br><span class="line">				<span class="keyword">switch</span> (command) &#123;</span><br><span class="line">				<span class="keyword">case</span> <span class="number">1</span>:<span class="comment">//按照图书名称选择图书</span></span><br><span class="line">					book = getBookByName(books);</span><br><span class="line">					System.out.println(<span class="string">"book:"</span> + book);</span><br><span class="line">					<span class="keyword">break</span>;</span><br><span class="line">				<span class="keyword">case</span> <span class="number">2</span>:<span class="comment">//按照图书序号（数组下标）选择图书</span></span><br><span class="line">					book = getBookByNumber(books);</span><br><span class="line">					System.out.println(<span class="string">"book:"</span> + book);</span><br><span class="line">					<span class="keyword">break</span>;</span><br><span class="line">				<span class="keyword">case</span> -<span class="number">1</span>:<span class="comment">//返回值为-1，说明输入有误</span></span><br><span class="line">					System.out.println(<span class="string">"命令输入错误！请根据提示输入数字命令！"</span>);</span><br><span class="line">					<span class="keyword">continue</span>;</span><br><span class="line">				<span class="keyword">default</span>:<span class="comment">//其他值的命令均认为是错误命令</span></span><br><span class="line">					System.out.println(<span class="string">"命令输入错误！"</span>);</span><br><span class="line">					<span class="keyword">continue</span>;</span><br><span class="line">				&#125;</span><br><span class="line">				<span class="keyword">break</span>;<span class="comment">//退出程序</span></span><br><span class="line">			&#125; <span class="keyword">catch</span> (Exception bne) &#123;</span><br><span class="line">				<span class="comment">//捕获“图书不存在异常”时，要求重新输入命令</span></span><br><span class="line">				System.out.println(bne.getMessage());</span><br><span class="line">				<span class="keyword">continue</span>;</span><br><span class="line">			&#125; </span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">//按照图书名称查询图书</span></span><br><span class="line">	<span class="function"><span class="keyword">private</span> <span class="keyword">static</span> String <span class="title">getBookByName</span><span class="params">(String[] books)</span></span></span><br><span class="line"><span class="function">			<span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">		System.out.println(<span class="string">"输入图书名称："</span>);</span><br><span class="line">		<span class="comment">//获取输入的图书名称</span></span><br><span class="line">		String name = console.next();</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; books.length; i++) &#123;</span><br><span class="line">			<span class="keyword">if</span> (name.equals(books[i]))</span><br><span class="line">				<span class="comment">//输入的名称与某一图书名称匹配，返回该图书</span></span><br><span class="line">				<span class="keyword">return</span> books[i];</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="comment">//若无匹配，抛出”图书不存在异常“</span></span><br><span class="line">		<span class="keyword">throw</span> <span class="keyword">new</span> Exception(<span class="string">"图书不存在！"</span>);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">//根据图书序号（数组下标）查询图书</span></span><br><span class="line">	<span class="function"><span class="keyword">private</span> <span class="keyword">static</span> String <span class="title">getBookByNumber</span><span class="params">(String[] books)</span></span></span><br><span class="line"><span class="function">			<span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">		<span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</span><br><span class="line">			System.out.println(<span class="string">"输入图书序号："</span>);</span><br><span class="line">			<span class="keyword">try</span> &#123;</span><br><span class="line">				<span class="comment">//获取输入的图书序号（数组下标）</span></span><br><span class="line">				<span class="keyword">int</span> index = inputCommand();</span><br><span class="line">				<span class="comment">//若返回值为-1</span></span><br><span class="line">				<span class="keyword">if</span>(index == -<span class="number">1</span>)&#123;</span><br><span class="line">					System.out.println(<span class="string">"命令输入错误！请根据提示输入数字命令！"</span>);</span><br><span class="line">					<span class="keyword">continue</span>;</span><br><span class="line">				&#125;</span><br><span class="line">				<span class="comment">//若不出现“数组下标越界异常”，则返回相应位置的图书</span></span><br><span class="line">				String book = books[index];</span><br><span class="line">				<span class="keyword">return</span> book;</span><br><span class="line">			&#125; <span class="keyword">catch</span> (ArrayIndexOutOfBoundsException e) &#123;</span><br><span class="line">				<span class="comment">//输入的序号不存在（引发“数组下标越界异常”），则抛出“图书不存在异常”</span></span><br><span class="line">				Exception bookNotExists = <span class="keyword">new</span> Exception(<span class="string">"图书不存在！"</span>);</span><br><span class="line">				bookNotExists.initCause(e);</span><br><span class="line">				<span class="keyword">throw</span> bookNotExists;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">//从控制台输入命令，用于输入命令和输入图书序号</span></span><br><span class="line">	<span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">inputCommand</span><span class="params">()</span></span>&#123;</span><br><span class="line">		<span class="keyword">int</span> command;</span><br><span class="line">		<span class="keyword">try</span> &#123;</span><br><span class="line">			command = console.nextInt();</span><br><span class="line">			<span class="keyword">return</span> command;</span><br><span class="line">		&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">			<span class="comment">//若输入字符型或者字符串，则抛出异常，捕获该异常，抛出“错误命令异常”</span></span><br><span class="line">			console = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">			<span class="comment">//返回-1</span></span><br><span class="line">			<span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
        <categories>
            
            <category> 互联网 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Java </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[达达租车系统（Java实现）]]></title>
      <url>https://hubojing.github.io/2017/03/18/%E8%BE%BE%E8%BE%BE%E7%A7%9F%E8%BD%A6%E7%B3%BB%E7%BB%9F%EF%BC%88Java%E5%AE%9E%E7%8E%B0%EF%BC%89/</url>
      <content type="html"><![CDATA[<div align="left"><br><img src="https://github.com/hubojing/BlogImages/blob/master/%E8%BE%BE%E8%BE%BE%E7%A7%9F%E8%BD%A6%E7%B3%BB%E7%BB%9F%EF%BC%88Java%E5%AE%9E%E7%8E%B0%EF%BC%89%E2%80%94%E2%80%94%E6%95%B0%E6%8D%AE%E6%A8%A1%E5%9E%8B%E5%88%86%E6%9E%90.png?raw=true" width="300" height="180" style="float:right;"><br>　　<br>　　<br><strong>java编写一个控制台版的“达达租车系统”。</strong><br>　　<br>　　<br></div>

<a id="more"></a>
<h1 id="目标"><a href="#目标" class="headerlink" title="目标"></a>目标</h1><p>java编写一个控制台版的“达达租车系统”</p>
<h1 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h1><p>1.展示所有可租车辆<br>2.选择车型、租车量<br>3.展示租车清单，包含：总金额、总载货量及其车型、总载人量及其车型</p>
<h1 id="三大分析"><a href="#三大分析" class="headerlink" title="三大分析"></a>三大分析</h1><h2 id="数据模型分析"><a href="#数据模型分析" class="headerlink" title="数据模型分析"></a>数据模型分析</h2><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="https://github.com/hubojing/BlogImages/blob/master/%E8%BE%BE%E8%BE%BE%E7%A7%9F%E8%BD%A6%E7%B3%BB%E7%BB%9F%EF%BC%88Java%E5%AE%9E%E7%8E%B0%EF%BC%89%E2%80%94%E2%80%94%E6%95%B0%E6%8D%AE%E6%A8%A1%E5%9E%8B%E5%88%86%E6%9E%90.png?raw=true" alt="数据模型分析" title="">
                </div>
                <div class="image-caption">数据模型分析</div>
            </figure>
<h2 id="业务模型分析"><a href="#业务模型分析" class="headerlink" title="业务模型分析"></a>业务模型分析</h2><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="https://github.com/hubojing/BlogImages/blob/master/%E8%BE%BE%E8%BE%BE%E7%A7%9F%E8%BD%A6%E7%B3%BB%E7%BB%9F%EF%BC%88Java%E5%AE%9E%E7%8E%B0%EF%BC%89%E2%80%94%E2%80%94%E4%B8%9A%E5%8A%A1%E6%A8%A1%E5%9E%8B%E5%88%86%E6%9E%90.png?raw=true" alt="业务模型分析" title="">
                </div>
                <div class="image-caption">业务模型分析</div>
            </figure>
<h2 id="显示和流程分析"><a href="#显示和流程分析" class="headerlink" title="显示和流程分析"></a>显示和流程分析</h2><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="https://github.com/hubojing/BlogImages/blob/master/%E8%BE%BE%E8%BE%BE%E7%A7%9F%E8%BD%A6%E7%B3%BB%E7%BB%9F%EF%BC%88Java%E5%AE%9E%E7%8E%B0%EF%BC%89%E2%80%94%E2%80%94%E6%98%BE%E7%A4%BA%E5%92%8C%E6%B5%81%E7%A8%8B%E5%88%86%E6%9E%90.png?raw=true" alt="显示和流程分析" title="">
                </div>
                <div class="image-caption">显示和流程分析</div>
            </figure>
<h2 id="成品"><a href="#成品" class="headerlink" title="成品"></a>成品</h2><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="https://github.com/hubojing/BlogImages/blob/master/%E8%BE%BE%E8%BE%BE%E7%A7%9F%E8%BD%A6%E7%B3%BB%E7%BB%9F%EF%BC%88Java%E5%AE%9E%E7%8E%B0%EF%BC%89%E2%80%94%E2%80%94%E7%A7%9F%E8%BD%A6%E9%A1%B5%E9%9D%A2.png?raw=true" alt="租车页面" title="">
                </div>
                <div class="image-caption">租车页面</div>
            </figure>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="https://github.com/hubojing/BlogImages/blob/master/%E8%BE%BE%E8%BE%BE%E7%A7%9F%E8%BD%A6%E7%B3%BB%E7%BB%9F%EF%BC%88Java%E5%AE%9E%E7%8E%B0%EF%BC%89%E2%80%94%E2%80%94%E7%A7%9F%E8%BD%A6%E8%B4%A6%E5%8D%95.png?raw=true" alt="租车账单" title="">
                </div>
                <div class="image-caption">租车账单</div>
            </figure>
<h1 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h1><p>　　首先定义一个Car类，它包含基本功能：车名、载客数、载货量、日租金。接着创建三个小类，分别是客车类、货车类和皮卡类（既能载客又能载货），它们都继承Car类。最后需要一个主类，用于开启整个系统，调用每个小类。</p>
<h1 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.jinger;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">Car</span> </span>&#123;</span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">int</span> rent;<span class="comment">//日租金</span></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">int</span> people;<span class="comment">//载客人数</span></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">int</span> loads;<span class="comment">//载货量</span></span><br><span class="line">	<span class="keyword">public</span> String name;<span class="comment">//车名</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getRent</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="keyword">return</span> rent;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setRent</span><span class="params">(<span class="keyword">int</span> rent)</span></span>&#123;</span><br><span class="line">	<span class="keyword">this</span>.rent=rent;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getPeople</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="keyword">return</span> people;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setPeople</span><span class="params">(<span class="keyword">int</span> people)</span></span>&#123;</span><br><span class="line">	<span class="keyword">this</span>.people=people;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getLoads</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="keyword">return</span> loads;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setLoads</span><span class="params">(<span class="keyword">int</span> loads)</span></span>&#123;</span><br><span class="line">	<span class="keyword">this</span>.loads=loads;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="keyword">return</span> name;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span></span>&#123;</span><br><span class="line">	<span class="keyword">this</span>.name=name;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>客车类<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.jinger;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PassageCar</span> <span class="keyword">extends</span> <span class="title">Car</span></span>&#123;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="title">PassageCar</span><span class="params">(String name,<span class="keyword">int</span> people,<span class="keyword">int</span> rent)</span></span>&#123;</span><br><span class="line">		<span class="keyword">this</span>.setName(name);</span><br><span class="line">		<span class="keyword">this</span>.setPeople(people);</span><br><span class="line">		<span class="keyword">this</span>.setRent(rent);</span><br><span class="line">		</span><br><span class="line">		</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span></span>&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="keyword">this</span>.getName()+<span class="string">"\t"</span>+<span class="keyword">this</span>.getPeople()+<span class="string">"\t\t\t\t"</span>+<span class="keyword">this</span>.getRent();</span><br><span class="line">				&#125;</span><br><span class="line">	&#125;</span><br></pre></td></tr></table></figure></p>
<p>卡车类<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.jinger;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Truck</span> <span class="keyword">extends</span> <span class="title">Car</span> </span>&#123;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="title">Truck</span><span class="params">(String name,<span class="keyword">int</span> loads,<span class="keyword">int</span> rent)</span></span>&#123;</span><br><span class="line">		<span class="keyword">this</span>.setName(name);</span><br><span class="line">		<span class="keyword">this</span>.setLoads(loads);</span><br><span class="line">		<span class="keyword">this</span>.setRent(rent);</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span></span>&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="keyword">this</span>.getName()+<span class="string">"\t\t\t"</span>+<span class="keyword">this</span>.getLoads()+<span class="string">"\t\t"</span>+<span class="keyword">this</span>.getRent();</span><br><span class="line">	&#125;</span><br><span class="line">	&#125;</span><br></pre></td></tr></table></figure></p>
<p>皮卡类<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.jinger;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Pickup</span> <span class="keyword">extends</span> <span class="title">Car</span> </span>&#123;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="title">Pickup</span><span class="params">(String name,<span class="keyword">int</span> people,<span class="keyword">int</span> loads,<span class="keyword">int</span> rent)</span></span>&#123;</span><br><span class="line">		<span class="keyword">this</span>.setName(name);</span><br><span class="line">		<span class="keyword">this</span>.setPeople(people);</span><br><span class="line">		<span class="keyword">this</span>.setLoads(loads);</span><br><span class="line">		<span class="keyword">this</span>.setRent(rent);</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span></span>&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="keyword">this</span>.getName()+<span class="string">"\t"</span>+<span class="keyword">this</span>.getPeople()+<span class="string">"\t\t"</span>+<span class="keyword">this</span>.getLoads()+<span class="string">"\t\t"</span>+<span class="keyword">this</span>.getRent();</span><br><span class="line">	&#125;</span><br><span class="line">	&#125;</span><br></pre></td></tr></table></figure></p>
<p>主类<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.jinger;</span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Initial</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">		<span class="comment">//对各类车实例化并保存到cars数组</span></span><br><span class="line">		Car[] cars=&#123;</span><br><span class="line">				<span class="keyword">new</span> PassageCar(<span class="string">"奥迪A4"</span>,<span class="number">4</span>,<span class="number">500</span>),</span><br><span class="line">				<span class="keyword">new</span> PassageCar(<span class="string">"马自达6"</span>,<span class="number">4</span>,<span class="number">400</span>),</span><br><span class="line">				<span class="keyword">new</span> Pickup(<span class="string">"皮卡雪6"</span>,<span class="number">4</span>,<span class="number">2</span>,<span class="number">450</span>),</span><br><span class="line">				<span class="keyword">new</span> PassageCar(<span class="string">"金龙"</span>,<span class="number">20</span>,<span class="number">800</span>),</span><br><span class="line">				<span class="keyword">new</span> Truck(<span class="string">"松花江"</span>,<span class="number">4</span>,<span class="number">400</span>),</span><br><span class="line">				<span class="keyword">new</span> Truck(<span class="string">"依维柯"</span>,<span class="number">20</span>,<span class="number">1000</span>)&#125;;</span><br><span class="line"></span><br><span class="line">		System.out.println(<span class="string">"****欢迎使用达达租车系统！****"</span>);</span><br><span class="line">		System.out.println(<span class="string">"****您确认租车吗？****"</span>+<span class="string">"\n"</span>+<span class="string">"是（请输入1） \t 否（请输入2）"</span>);</span><br><span class="line">	</span><br><span class="line">		Scanner in1=<span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">		<span class="keyword">int</span> is=in1.nextInt();</span><br><span class="line">		<span class="keyword">if</span>(is!=<span class="number">1</span>)&#123;</span><br><span class="line">			System.out.println(<span class="string">"****欢迎下次光临！****"</span>);</span><br><span class="line">			System.exit(<span class="number">0</span>);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span>(is==<span class="number">1</span>)&#123;</span><br><span class="line">			System.out.println(<span class="string">"****您可租车的类型及价目表****"</span>);</span><br><span class="line">			System.out.println(<span class="string">"序号"</span>+<span class="string">"\t车名"</span>+<span class="string">"\t载客数（人）"</span>+<span class="string">"\t载货量（吨）"</span>+<span class="string">"\t日租金（元/天）"</span>);</span><br><span class="line">		</span><br><span class="line">			<span class="comment">//使用循环方式将各类车输出</span></span><br><span class="line">			<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;cars.length;i++)&#123;</span><br><span class="line">				System.out.println((i+<span class="number">1</span>)+<span class="string">"\t"</span>+cars[i]);</span><br><span class="line">			&#125;</span><br><span class="line">			</span><br><span class="line">			</span><br><span class="line">			</span><br><span class="line">			System.out.println(<span class="string">"****请输入您的租车数量：****"</span>);</span><br><span class="line">			<span class="keyword">int</span> num1=in1.nextInt();</span><br><span class="line">			Car[] rentcar=<span class="keyword">new</span> Car[num1];</span><br><span class="line">			<span class="keyword">int</span> price=<span class="number">0</span>;<span class="comment">//总价格</span></span><br><span class="line">			<span class="keyword">int</span> totalpeople=<span class="number">0</span>;<span class="comment">//总人数</span></span><br><span class="line">			<span class="keyword">int</span> totalloads=<span class="number">0</span>;<span class="comment">//总载货量</span></span><br><span class="line">			</span><br><span class="line">			<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;num1;i++)&#123;</span><br><span class="line">				System.out.println(<span class="string">"****请输入第"</span>+(i+<span class="number">1</span>)+<span class="string">"辆车的序号：****"</span>);</span><br><span class="line">				<span class="keyword">int</span> numx=in1.nextInt();</span><br><span class="line">				rentcar[i]=cars[numx-<span class="number">1</span>];</span><br><span class="line">				</span><br><span class="line">			&#125;</span><br><span class="line">			System.out.println(<span class="string">"****请输入天数：****"</span>);</span><br><span class="line">			<span class="keyword">int</span> day=in1.nextInt();</span><br><span class="line">			<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;num1;i++)&#123;</span><br><span class="line">			price=price+rentcar[i].rent *day;</span><br><span class="line">			&#125;</span><br><span class="line">			System.out.println(<span class="string">"****您的账单：****"</span>);</span><br><span class="line">			System.out.println(<span class="string">"已选载人车："</span>);</span><br><span class="line">			<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;num1;i++)&#123;</span><br><span class="line">				<span class="keyword">if</span>(rentcar[i].people!=<span class="number">0</span>)&#123;</span><br><span class="line">					System.out.println(rentcar[i].name+<span class="string">"\t"</span>);</span><br><span class="line">				&#125;</span><br><span class="line">				</span><br><span class="line">				totalpeople=totalpeople+rentcar[i].people;</span><br><span class="line">			&#125;</span><br><span class="line">			</span><br><span class="line">			System.out.println(<span class="string">'\n'</span>);</span><br><span class="line">			System.out.println(<span class="string">"已选载货车："</span>);</span><br><span class="line">			<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;num1;i++)&#123;</span><br><span class="line">				<span class="keyword">if</span>(rentcar[i].loads!=<span class="number">0</span>)&#123;</span><br><span class="line">					System.out.println(rentcar[i].name+<span class="string">"\t"</span>);</span><br><span class="line">				&#125;</span><br><span class="line">						</span><br><span class="line">				totalloads=totalloads+rentcar[i].loads;</span><br><span class="line">			&#125;</span><br><span class="line">		</span><br><span class="line">			</span><br><span class="line">					System.out.println(<span class="string">'\n'</span>);</span><br><span class="line">					System.out.println(<span class="string">"共载客："</span>+totalpeople+<span class="string">"人"</span>);</span><br><span class="line">					System.out.println(<span class="string">"共载货："</span>+totalloads+<span class="string">"吨"</span>);</span><br><span class="line">					System.out.println(<span class="string">"租车总价格："</span>+price+<span class="string">"元"</span>);</span><br><span class="line">					System.out.println(<span class="string">'\n'</span>);</span><br><span class="line">					System.out.println(<span class="string">"****感谢您的惠顾，欢迎再次光临！****"</span>);</span><br><span class="line">				</span><br><span class="line">			&#125;</span><br><span class="line">			&#125;</span><br><span class="line">	&#125;</span><br></pre></td></tr></table></figure></p>
<h1 id="收获"><a href="#收获" class="headerlink" title="收获"></a>收获</h1><p>思路决定编码。<br>编程要注重<code>自顶而下、逐步求精</code>的设计方法。</p>
<h1 id="源程序下载"><a href="#源程序下载" class="headerlink" title="源程序下载"></a>源程序下载</h1><p><a href="https://github.com/hubojing/Car-rental-system" target="_blank" rel="noopener">https://github.com/hubojing/Car-rental-system</a></p>
]]></content>
      
        <categories>
            
            <category> 互联网 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Java </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[别做井底之蛙]]></title>
      <url>https://hubojing.github.io/2017/03/06/%E5%8F%8D%E7%9C%81/</url>
      <content type="html"><![CDATA[<div align="left"><br><img src="https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1488743337927&di=4273153cdba587ffa9e9dba1db8737fc&imgtype=0&src=http%3A%2F%2Fupload.admin5.com%2F2015%2F1121%2F1448071304470.jpg" width="300" height="180" style="float:right;"><br><br><br>即将毕业了，谈谈最近我关于技术的思考。<br><br><br></div>

<a id="more"></a>
<p>最近总想给自己的四年打个分。<br>给个70分吧。<br>四年来，我一直认为，自己没有辜负这四年。这四年里，自己很多方面得到了成长。但直到最近，我发现了些什么。</p>
<p>这四年来，我一直是大家眼中的优秀学生，绩点高，学生工作也做得好。我时刻提醒自己，千万不要被眼前的赞誉迷了眼。我之所以显得优秀，是因为我所处的环境还不够好。<br>这是我的技术博客，关于其他方面就不提了。尤谈技术。</p>
<p>大一大二沉浸在繁忙的学生工作中，忽略了自己是个十足的工科生，只注重课堂学习，忽视了动手实践。大二在实验室的半年，收获有，却不是很大。一方面是学校实验室的建设不完善，最重要的是实验室方向不是我所感兴趣的，再加上我当时过于急于求成，收效甚微就心烦意乱。<br>大三卸任部分学生工作，时间多了出来。突然就意识到了自己的专业被自己落下了。于是就诞生了这个技术博客，记录我所学的知识。算是对自己学技术的一点弥补。后来表示不服，自己报名了计算机比赛，最后竟意外抱得国奖回，让自己开心了一阵。我就算没在实验室了，我还是能自己干出事情来！我是有些倔。<br>再后来考研。过程不说了，和所有考研人一样平常。<br>考完后让自己彻底放松了二个月，所有和学习的事情都放下了，包括这里。这也是为什么这段时间我的github绿的很少，以及博客长久未更的原因。</p>
<p>简历看似让人羡慕，可我近来愈发觉得，自己就是一只井底之蛙。<br>没有实验室的帮助，没有老师的指导，没有志同道合的伙伴，全靠自己一个人，自己的学习时常走入歧途。不过这都不重要，重要的是我只要愿意不断学习，总会越懂越多。<br>最近我看了大神和牛人甚至是认识的同学们的学习过程，自己的努力与之相比不值一提。之前即使我总是警告自己不要感动自己，可最终还是让自己浮在了表面。</p>
<p>我是通信工程专业的学生，却常“不务正业”地倒弄计算机专业的东西（不过这是我的兴趣所在，我也从不觉得是错误，通信和计算机本是一家），有时候我在想，我的本家知识还没学通学透呢？</p>
<p>寒假放松的两个月，有个网友隔几天就问我有没有敲代码。我都说没有。他当时批评我说，女生果然不适合干技术。我回复他，你可以指责我，但我不能代表整个女性群体。后来想想，他的批评是有理的，像我那样三天打鱼、两天晒网的学习，怎么会有效果？</p>
<p>最近我常常在想，我口口声声说爱技术，还有一个做学术做科研的愿望，到底是不是发自心底的？我在还没深入了解它的时候，有什么资格说爱它？</p>
<p>感觉自己被越甩越远，但自己不想在做井底之蛙了。虽然醒悟地有些晚，但好歹是想过来了。</p>
<p>即将毕业的我，让自己重新做回一个普通的学生，耐心的学习，安心做毕设，回归一个工科学生对技术所抱有的憧憬之心。</p>
<p>先给自己定一个小目标：让github重新绿起来。欢迎各位监督。</p>
<p>写于2017年3月6日凌晨1点</p>
]]></content>
      
        <categories>
            
            <category> 杂谈 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 杂谈 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[虚拟实验平台比赛项目记录]]></title>
      <url>https://hubojing.github.io/2017/02/10/%E8%99%9A%E6%8B%9F%E5%AE%9E%E9%AA%8C%E5%B9%B3%E5%8F%B0/</url>
      <content type="html"><![CDATA[<div align="left"><br><img src="https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1550073621300&di=6bac2140cd91bb374002219daa1f70f2&imgtype=0&src=http%3A%2F%2Fimg.gifhome.com%2Fgif%2Fs%2F2018%2F644d1119c7e04f89aa74d17f3ab6c47e.jpg" width="300" height="180" style="float:right;"><br><br><br>　　说话算数，许诺的上海决赛详细情况记录。<br><br><br> </div>


<a id="more"></a>
<h1 id="项目名称"><a href="#项目名称" class="headerlink" title="项目名称"></a>项目名称</h1><p>数字图像处理教学辅助虚拟实验平台</p>
<h1 id="项目平台"><a href="#项目平台" class="headerlink" title="项目平台"></a>项目平台</h1><p>matlab GUI</p>
<h1 id="项目简述"><a href="#项目简述" class="headerlink" title="项目简述"></a>项目简述</h1><p>利用matlabGUI可视化，设计一个方便数字图像处理教学的虚拟实验平台，加深学生兴趣，让学生直观了解。</p>
<h1 id="项目框架"><a href="#项目框架" class="headerlink" title="项目框架"></a>项目框架</h1><p>虚拟实验平台分为实验主窗口和手写数字识别案例。</p>
<h1 id="原理相关"><a href="#原理相关" class="headerlink" title="原理相关"></a>原理相关</h1><p>数字图像处理是通过计算机对图像进行去除噪声、增强、复原、分割、提取特征等处理的方法和技术，它是指将图像信号转换成数字信号并利用计算机对其进行处理的过程。可以用来提高图像的视感质量，提取图像中所包含的某些特征或特殊信息，对图像数据进行变换、编码和压缩，以便于图像的存储和传输。<br><strong>最近邻插值法</strong><br>最近邻插值法nearest_neighbor是最简单的灰度值插值。也称作零阶插值，就是令变换后像素的灰度值等于距它最近的输入像素的灰度值。<br><strong>双三次插值法</strong><br>双三次插值是一种更加复杂的插值方式，它能创造出比双线性插值更平滑的图像边缘。又叫双立方插值，用于在图像中“插值”（Interpolating）或增加“像素”（Pixel）数量/密度的一种方法。通常利用插值技术增加图形数据，以便在它打印或其他形式输出的时候，能够增大打印面积以及（或者）分辨率。<br>属性：通过双三次插值可以得到一个连续的插值函数，它的一阶偏导数连续，并且交叉导数处处连续。<br>公式：<br>计算系数 的过程依赖于插值数据的特性。如果已知插值函数的导数，常用的方法就是使用四个顶点的高度以及每个顶点的三个导数。一阶导数 与 表示 x 与 y 方向的表面斜率，二阶相互导数 表示同时在 x 与 y 方向的斜率。这些值可以通过分别连续对 x 与 y 向量取微分得到。对于网格单元的每个顶点，将局部坐标（0,0, 1,0, 0,1 和 1,1) 带入这些方程，再解这 16 个方程。</p>
<p><strong>图像增强</strong><br>1.直方图作用<br>直方图的观看规则就是“左黑右白”，左边代表暗部，右边代表亮部，而中间则代表中间调。<br>纵向上的高度代表像素密集程度，越高，代表的就是分布在这个亮度上的像素很多。</p>
<p>2.分为空间域和频域<br>空域分为点运算和领域去噪<br>直方图修正属于点运算，平滑和锐化属于领域去噪。<br>平滑是在添加噪声之后进行的处理<br>滤波的本义是指信号有各种频率的成分,滤掉不想要的成分,即为滤掉常说的噪声,留下想要的成分.这即是滤波的过程,也是目的。<br>图像锐化是补偿图像的轮廓，增强图像的边缘及灰度跳变的部分，使图像变得清晰，分为空域处理和频域处理两类。<br>图像平滑往往使图像中的边界、轮廓变得模糊，为了减少这类不利效果的影响，这就需要利用图像锐化技术，使图像的边缘变的清晰<br>直方图修正法<br>分为直方图均衡化和直方图规定化（直方图匹配）<br> 目的：采用直方图修整后可使图像的灰度间距拉开或使灰度分布均匀，从而增大反差，使图像细节清晰，从而增强图像。<br>直方图均衡化：通过对原图像进行某种变换使原图像的灰度直方图修正为均匀的直方图的一种方法。<br>直方图规定化：使原图像灰度直方图变成规定形状的直方图而对图像作修正的增强方法。</p>
<p><strong>频域增强</strong><br>频谱图<br>图像从圆心到外是由低频到高频的一个过程  同心圆表示在不同方向上的同一频率 而频谱有明暗表示分解成的多个正弦波由于相位的不同叠加后就形成了有大小的分别 而相位不同的正弦波又是由在不同位置的原图像的圆（也是不同位置的频率变化组成的）<br><strong>图像分割</strong><br>方法：阈值分割、区域分割、边缘分割、基于特定理论的分割<br>图像分割方法依照分割时所依据的图像特性不同，大致可以分为四大类。第一类是阈值方法，这种方法是根据图像灰度值得分布特性确定某个阈值来进行图像分割的。第二类为边缘检测方法，这类方法是通过检测出封闭某个区域的边界来进行图像分割的。通俗地讲，这类方法实际上是沿着闭合的边缘线将其包围的区域剪切出来。第三类方法是区域提取方法，这类方法的特点是根据特定区域与其他背景区域特性上的不同来进行图像分割的。另外，还有一种基于形态学的分水岭算法。<br>阈值分割：基本原理是：通过设定不同的特征阈值，把图像象素点分为若干类。<br>常用的特征包括：直接来自原始图像的灰度或彩色特征；由原始灰度或彩色值变换得到的特征。<br>设原始图像为f(x，y)，按照一定的准则f(x，y)中找到特征值T，将图像分割为两个部分，分割后的图像为：若取：b0=0(黑)，b1=1(白)，即为我们通常所说的图像二值化。<br>直方图阈值双峰法：双峰法是一种简单的阈值分割方法，即如果灰度级直方图呈现明显的双峰状，则选双峰之间的谷底所对应的灰度级作为阈值分割。<br>均匀性度量法：<br>均匀性度量法的设计思想是，假设当图像被分为目标物和背景两个类别时，属于同一类别内的像素值分布应该具有均匀性。在这里采用方差来度量像素间的均匀性。设原图像为f(x,y)，结果图像为g(x,y)。<br>类间最大方差法（Otsu法）：<br>Otsu是一种使类间方差最大的自动确定阈值的方法，该方法具有简单、处理速度快的特点，是一种常用的阈值选取方法。MATLAB中的graythresh函数求取阈值采用的就是Otsu法。<br>局部阈值法：局部阈值图像分割的原理与全局阈值分割相似，只是在使用之前的程序前，将图像分割成若干子图像进行处理，在处理后，在将各自的结果拼接起来。<br>边缘检测：最简单的边缘检测方法是边缘检测算子，它利用相邻区域的像素值不连续的性质，采用一阶或二阶导数来检测边缘点。<br>边缘检测是图像处理和计算机视觉中的基本问题，边缘检测的目的是标识数字图像中亮度变化明显的点。图像属性中的显著变化通常反映了属性的重要事件和变化。 这些包括（i）深度上的不连续、（ii）表面方向不连续、（iii）物质属性变化和（iv）场景照明变化。 边缘检测是图像处理和计算机视觉中，尤其是特征提取中的一个研究领域。<br>图像分割的意义<br>图像分割是图像分析的第一步，图像分割接下来的任务，如特征提取、目标识别等的好坏，都取决于图像分割的质量如何。<br><strong>图像变换</strong><br>Fourier变换有两个好处，即：可以获得信号的频域特性；可以将卷积运算转换为乘积运算。<br>因此二维Fourier变换的应用也是根据这两个特点来进行的。<br>在图像滤波中的应用<br>首先，我们来看Fourier变换后的图像，中间部分为低频部分，越靠外边频率越高。因此，我们可以在Fourier变换图中，选择所需要的高频或是低频滤波。<br>离散余弦变换，尤其是它的第二种类型，经常被信号处理和图像处理使用，用于对信号和图像(包括静止图像和运动图像)进行有损数据压缩。这是由于离散余弦变换具有很强的”能量集中”特性:大多数的自然信号(包括声音和图像)的能量都集中在离散余弦变换后的低频部分，而且当信号具有接近马尔科夫过程(Markov processes)的统计特性时，离散余弦变换的去相关性接近于K-L变换(Karhunen-Loève 变换–它具有最优的去相关性)的性能。<br><strong>图像的形态学</strong><br>数字图像处理中的形态学处理是指将数字形态学作为工具从图像中提取对于表达和描绘区域形状有用处的图像分量，比如边界、骨架以及凸壳，还包括用于预处理或后处理的形态学过滤、细化和修剪等。图像形态学处理中我们感兴趣的主要是二值图像。<br>在二值图像中，所有黑色像素的集合是图像完整的形态学描述，二值图像的各个分量是Z2的元素。假定二值图像A和形态学处理的结构元素B是定义在笛卡儿网格上的集合，网格中值为1的点是集合的元素，当结构元素的原点移到点(x,y)时，记为Sxy，为简单起见，结构元素为3x3，且全都为1，在这种限制下，决定输出结果的是逻辑运算。<br>膨胀和腐蚀这两种操作是形态学处理的基础，许多形态学算法都是以这两种运算为基础的。<br>开操作是先腐蚀、后膨胀处理。闭操作是先膨胀、后腐蚀处理。<br>腐蚀和膨胀，看上去好像是一对互逆的操作，实际上，这两种操作不具有互逆的关系。<br>开运算和闭运算正是依据腐蚀和膨胀的不可逆性，演变而来的。<br>先腐蚀后膨胀的过程就称为开运算。<br>闭运算是通过对腐蚀和膨胀的另一种不同次序的执行而得到的，<br>闭运算是先膨胀后腐蚀的过程，其功能是用来填充物体内细小空洞、连接邻近物体、平滑其边界，同时不明显改变不明显改变其面积。</p>
<p>#相关函数<br>有关函数的意义<br>inputdlg  输入对话框<br>创建一个输入对话框，prompt为提示字符串，title为对话框名称，num_line为显示的行数，defans为默认的数值</p>
<p>imresize  缩放<br>‘nearest’：改变图像尺寸时采用最近邻插值算法；<br>‘bilinear’：采用双线性插值算法；<br>‘bicubic’： 采用双三次插值算法</p>
<p>msgbox  创建对话框<br>imshow  显示图像<br>ndims  求一个数组维数</p>
<p>numel  计算数组中满足指定条件的元素个数<br>若是一幅图像，则numel(A)将给出它的像素数。</p>
<p>I(:,:,1)<br>:在矩阵引用里，表示所有元素。<br>比如一个二维矩阵A，A(:,1)就表示A的第一列元素。</p>
<p>flipl中提供了许多对矩阵操作的函数，可以实现矩阵的三角矩阵的提取（triu、tril）、矩阵的翻转（flipud、fliplr、Flipdim）和旋转（rot90）等各种操作。</p>
<p>size<br>size(X,1),返回矩阵X的行数；<br>size(X,2),返回矩阵X的列数；<br>N=size(X,2)，就是把矩阵X的列数赋值给N<br>size（）：获取矩阵的行数和列数<br>（1）s=size(A),<br>当只有一个输出参数时，返回一个行向量，该行向量的第一个元素时矩阵的行数，第二个元素是矩阵的列数。<br>（2）[r,c]=size(A),<br>当有两个输出参数时，size函数将矩阵的行数返回到第一个输出变量r，将矩阵的列数返回到第二个输出变量c。<br>（3）size(A,n)如果在size函数的输入参数中再添加一项n，并用1或2为n赋值，则 size将返回矩阵的行数或列数。其中r=size(A,1)该语句返回的时矩阵A的行数， c=size(A,2) 该语句返回的时矩阵A的列数。</p>
<p>imrotate  旋转<br>B = imrotate(A,angle,method,bbox)<br>将图像A（图像的数据矩阵）绕图像的中心点旋转angle度， 正数表示逆时针旋转， 负数表示顺时针旋转。返回旋转后的图像矩阵。<br>使用method参数可以改变插值算法，method参数可以为下面这三个值：<br>‘nearest’：最邻近线性插值（Nearest-neighbor interpolation）<br>‘bilinear’： 双线性插值（Bilinear interpolation）<br>‘bicubic’： 双三次插值（或叫做双立方插值）（Bicubic interpolation）<br>bbox参数用于指定输出图像属性：<br>‘crop’： 通过对旋转后的图像B进行裁剪， 保持旋转后输出图像B的尺寸和输入图像A的尺寸一样。<br>‘loose’： 使输出图像足够大， 以保证源图像旋转后超出图像尺寸范围的像素值没有丢失。 一般这种格式产生的图像的尺寸都要大于源图像的尺寸。</p>
<p>imadd       两个图像相加，或者一个图像加上一个常量<br>imsubstract 两个图像相减，或者一个图像减掉一个常量<br>immultiply     两个图像相乘，或者一个图像乘上一个常量<br>imdivide    两个图像相除，或者一个图像除以一个常量<br>imabsdiff    两个图像的差的绝对值<br>imcomplement 求一个图像的反色图<br>inlincomb    求一组图像的线性组合<br>imadjust  调节灰度图像的亮度或彩色图像的颜色矩阵</p>
<p>histeq  直方图均衡<br>bar(x,y) 其中x必须是严格递增的且一维向量x和一维向量y长度相同。以一维向量x的值为x坐标，对应的y为y坐标画直方图。</p>
<p>var函数实际上求的并不是方差，而是误差理论中“有限次测量数据的标准偏差的估计值”。</p>
<p>graythresh函数用法：使用最大类间方差法找到图片的一个合适的阈值（threshold）。在使用im2bw函数将灰度图像转换为二值图像时，需要设定一个阈值，这个函数可以帮助我们获得一个合适的阈值。利用这个阈值通常比人为设定的阈值能更好地把一张灰度图像转换为二值图像。</p>
<h1 id="手写归纳"><a href="#手写归纳" class="headerlink" title="手写归纳"></a>手写归纳</h1><p><strong>手写数字模块小结</strong><br>handwrite<br>1.exit函数，存在即返回非0值，不存在即返回0<br>2.load template pattern;    %将template文件中的pattern加载到工作环境中<br>3.pattern(1,1).num=0;         %pattern是一个数组，这里.num表示样本数量<br>4.pattern(1,1).feature=[];   %.feature表示特征值（样本）<br>5.save template pattern;  %将pattern保存在template.mat文件中<br>6.pos0=get(handles.WritingAxes,’currentpoint’);<br>%获取最近一次点击的位置，返回一个2x3的矩阵，矩阵的每行代表一个点的坐标<br>这两个点的具体含义，和坐标系的投影类型以及鼠标点击位置是否位于坐标系内有关。对于典型情况（正交投影，鼠标点击位于坐标系范围内），可以通过鼠标点击的位置，作一条垂直于屏幕的直线，则该线与坐标系的六个面必然会有两个交点（想象一下，2D坐标系的外框是一个矩形，3D坐标系外框是一个长方体），这两个交点的坐标就是上面所说的pos0，其第一行是靠近观察者的那个面上的点，而第二行是离观察者稍远的那个面上的点。<br>7.x0=pos0(1,1);  %靠近观察者那个面上点的第一个坐标（即x）<br>  y0=pos0(1,2);  %靠近观察者那个面上点的第一个坐标（即y）<br>8.line(x,y, ‘marker’, ‘.’,’markerSize’,18,   ‘LineStyle’,’-‘,’LineWidth’,2,’Color’,’black’);<br>%默认选择黑笔画线，设定点的模型大小，线的模型宽度颜色<br>9.X=x0:stepX:x;      %设定坐标参数，0.1单位<br>  Y=(y-y0)<em>(X-x0)/(x-x0)+y0;   %两点直线方程<br>11.Img=getframe(handles.WritingAxes);   %获取坐标轴内图像<br>%getframe获得的是一个架构struct类型的数据，其中cdata子域的内容才可以用imwrite内容保存，用Img.cdata表示，是截取区域的数据<br>12.imwrite(I,’当前手写数字.bmp’,’bmp’);  %将图像数据写入图像文件<br>13.data=GetFeature(I);   %对手写数字进行处理，获取特征向量<br>14.pattern(1,1).num=pattern(1,1).num+1;   %样本容量加一<br>15.pattern(1,1).feature(:,pattern(1,1).num)=data;<br>%新增样本（保存的是特征向量）放在最后<br>16.pattern(1,1).num=pattern(1,1).num-1;  %样本容量减一<br>17.pattern(1,1).feature(:,pattern(1,1).num)=[];  %删除倒数第二个<br>18.set(handles.RecognitionResult,’String’,Result); %显示识别结果<br>feature<br>1.[row,col]=find(I==0);                %返回数字的上下左右的边界<br>2.I=I(min(row):max(row),min(col):max(col));<br>%截取手写数字图像，使其紧包含数字边界，不包含多余的空白<br>3.[row,col]=size(I);           %求截取后图像的宽和高，数组的行和列<br>4.r=fix(row/5);                 %fix朝0方向取整<br>5.data=data’; %将当前手写数字的特征向量由行向量变为列向量<br>BayesTwoValue<br>1.sum = sum+pattern(1,i).num;    %样本总数求和<br>2.pw(i) = pattern(1,i).num/sum;  %每个数字的样本概率,先验概率<br>3.[maxval,maxpos] = max(pwx);  %取后验概率中最大的<br>%第一个参数是序列中的最大值 第二个参数是最大值在序列中位置<br>4.Result= maxpos-1;  %最大值即为最匹配的数字，其数值为它所处位置序号减一<br>BayesLeastError<br>1.[pc_template,pc_data]=pcapro(data);  %主成分分析<br>2.mean_data(i).data=mean(pattern(1,i).feature’)’; %求各个类型样品的平均值<br>%mean(x)表示对列向量x求平均值<br>3.h(i)=(pc_data-mean_data(i).data)’</em>s_inv(i).data<em>(pc_data-mean_data(i).data)…
        </em>(-0.5)+log(pw(i))+log(abs(s_det(i)))*(-0.5);  %判别函数<br>BayesLeastRisk<br>1.[minval minpos]=min(risk);  %取损失最小的</p>
<h1 id="答辩"><a href="#答辩" class="headerlink" title="答辩"></a>答辩</h1><p>我们准备的答辩稿（部分）：<br>思路：<br>    为更好的协助老师的教学，充实课堂内容，从而设计的辅助教学实验软件，并拓展手写数字识别系统，用来丰富课堂知识。<br>首先我们选择matlab软件来设计虚拟实验平台，因为大部分工科院校都或多或少 接触过matlab，上手容易。然后由于MatlabGUI强大的可视化界面，让我们决定实现它。一开始我们只设计了手写数字识别，但感觉过于单一，且只涉及到数字图像处理中数字识别模式识别这一块，不够全面，而且学生初学时是从最基本的操作学起，因此，我们根据学习顺序，补充了每一章节的基本实验，使我们的平台更加完善。</p>
<p>遇到的困难：<br>    主要就是程序的问题，这是一个很需要耐心细心的模块，经常会遇到各种奇怪的问题，比如某个功能失效，界面无响应这些，其次就是生成的可执行文件不能很好的适应所有电脑，拓展模块里的手写也可能因为样本的不足出现错误，所以样本的填充也很复杂很需要时间。</p>
<p>作品的优点和缺点：<br>   优点：操作相对简单，界面比较整洁，知识覆盖面广<br>   缺点：可执行文件适应性不够强，部分功能有延迟，没有更详细的解释相关操作的意义，可能还需要一个使用说明的嵌入模块，手写数字模块样本容量不够大。<br>运用技术：<br>    软件的设计基本上全部由matlab/GUI 完成，并使用其特定的命令生成可执行文件，编程时运用了各种简单或复杂的算法，如缩小放大的最近邻插值法，双三次插值法，图像增强里的直方图均衡化、阈值分割的直方图双峰法、均匀性度量法、otsu法、局部阈值法等等。这对于我们两个没有系统学习过这门课的人来说，还是很具有挑战性。<br>贝叶斯决策的原理。<br>   贝叶斯决策理论方法是统计模型决策中的一个基本方法，其基本思想是：<br>   已知类条件概率密度参数表达式和先验概率。<br>   利用贝叶斯公式转换成后验概率。<br>   根据后验概率大小进行决策分类。<br>这个手写识别案例的用处：<br>    是对这门课程的一个拓展，通过对写入的图像灰度化，裁剪，提取特征参数，与贝叶斯决策结合，进行概率分析，匹配，显示最符合的数字，算是部分操作的小应用，同时也涉及到数字图像处理较难的部分：模式识别一块；同时可以用来延伸出车牌识别或人脸识别等更高级的应用系统。  </p>
<p>现场老师问了几个问题，回忆了下，有问和PS的区别和项目的意义。</p>
<h1 id="项目获奖"><a href="#项目获奖" class="headerlink" title="项目获奖"></a>项目获奖</h1><pre><code>第九届中国计算机设计大赛国家三等奖、中南赛区二等奖
</code></pre><p>P.S.配图为我设计的作品海报。</p>
]]></content>
      
        <categories>
            
            <category> 通信工程 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> matlab </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[yelee --> hueman主题更换]]></title>
      <url>https://hubojing.github.io/2017/01/03/hueman%E4%B8%BB%E9%A2%98%E6%9B%B4%E6%8D%A2/</url>
      <content type="html"><![CDATA[<p><div align="left"><br><img src="http://7xray0.com1.z0.glb.clouddn.com/17-1-3/18721350-file_1483437231403_721.png" width="300" height="180" style="float:right;"></div></p>
<p>我又双叒叕把博客玩崩了……<br>淡定——
　
　
　</p>
<p> <br><a id="more"></a><br>　　前两天调双语博客页面失败，顺带着把yelee主题玩垮了。[拆毁天才girl NO.1]<br>　　MoXFIVE也很久没有更新yelee的文档了，索性我就换了个主题。现在的主题是hueman。<br>　　换个主题就仿佛整个人都整容了一样→_→什么都要变！<br>　　改config，调样式，换logo，整个人都不好了！<br>　　hueman很漂亮，优点突出，但对比yelee，也有一些缺点，例如：没有网站计数，没有文章目录等。<br>　　把折腾几个小时的成果记录一下，方便以后接着折腾[手动滑稽]。</p>
<h1 id="主题文档"><a href="#主题文档" class="headerlink" title="主题文档"></a>主题文档</h1><p><a href="https://github.com/ppoffice/hexo-theme-hueman/wiki" target="_blank" rel="noopener">https://github.com/ppoffice/hexo-theme-hueman/wiki</a></p>
<h1 id="更改背景"><a href="#更改背景" class="headerlink" title="更改背景"></a>更改背景</h1><p>hueman\source\css_partial\header.styl<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">-background: color-header-background</span><br><span class="line">+ background-image: url(<span class="string">"地址"</span>)</span><br></pre></td></tr></table></figure></p>
<p>记得把footer里的背景也给改了，对称美！</p>
<h1 id="更换logo"><a href="#更换logo" class="headerlink" title="更换logo"></a>更换logo</h1><p>hueman\source\css\images<br>把logo-header.png更换为自己的logo。<br>我在网上随便在线生成了个艺术字就贴上来了……</p>
<p>#加入网站计数<br>\themes\hueman\layout\common\footer.ejs<br>和yelee一样，交给不蒜子[<a href="http://ibruce.info/2015/04/04/busuanzi/]" target="_blank" rel="noopener">http://ibruce.info/2015/04/04/busuanzi/]</a> 。</p>
<h2 id="安装脚本"><a href="#安装脚本" class="headerlink" title="安装脚本"></a>安装脚本</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;script async src=<span class="string">"//dn-lbstatics.qbox.me/busuanzi/2.3/busuanzi.pure.mini.js"</span>&gt;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure>
<h2 id="安装标签"><a href="#安装标签" class="headerlink" title="安装标签"></a>安装标签</h2><p>1.显示站点总访问量<br>要显示站点总访问量，复制以下代码添加到你需要显示的位置。有两种算法可选：<br>算法a：pv的方式，单个用户连续点击n篇文章，记录n次访问量。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;span id=<span class="string">"busuanzi_container_site_pv"</span>&gt;</span><br><span class="line">    本站总访问量&lt;span id=<span class="string">"busuanzi_value_site_pv"</span>&gt;&lt;/span&gt;次</span><br><span class="line">&lt;/span&gt;</span><br></pre></td></tr></table></figure></p>
<p>算法b：uv的方式，单个用户连续点击n篇文章，只记录1次访客数。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;span id=<span class="string">"busuanzi_container_site_uv"</span>&gt;</span><br><span class="line">  本站访客数&lt;span id=<span class="string">"busuanzi_value_site_uv"</span>&gt;&lt;/span&gt;人次</span><br><span class="line">&lt;/span&gt;</span><br></pre></td></tr></table></figure></p>
<p>2.显示单页面访问量<br>要显示每篇文章的访问量，复制以下代码添加到你需要显示的位置。<br>算法：pv的方式，单个用户点击1篇文章，本篇文章记录1次阅读量。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;span id=<span class="string">"busuanzi_container_page_pv"</span>&gt;</span><br><span class="line">  本文总阅读量&lt;span id=<span class="string">"busuanzi_value_page_pv"</span>&gt;&lt;/span&gt;次</span><br><span class="line">&lt;/span&gt;</span><br></pre></td></tr></table></figure></p>
<p>　　后续待解决（欢迎各位大神们给建议）：<br>　　1.文章目录问题（不知道在哪里改，toc怎么调用，&lt;%- toc(str, [options]) %&gt;需点拨）<br>　　2.博客内搜索问题（insight插件总是安装失败，估计是node版本问题，可是有点不敢动node，害怕博客又崩了(瑟瑟发抖.jpg)）<br>　　3.分类顺序问题（应该是互联网、通信工程、杂谈，不知道为什么成了互联网、杂谈、通信工程）<br>    4.文章浏览量丢失（蓝瘦香菇…）<br>　　5.双语页面问题（就是不！死！心！）<br>　　6.微言板块（类似空间的说说，每条下面可以评论，未来会把自己的问题放在这里，等待高手解答）<br>　　……</p>
]]></content>
      
        <categories>
            
            <category> 互联网 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> hexo </tag>
            
            <tag> 前端 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[一天一点linux]]></title>
      <url>https://hubojing.github.io/2016/12/26/linux%E6%95%B4%E7%90%86%E7%AC%94%E8%AE%B0/</url>
      <content type="html"><![CDATA[<p><div align="left"><br><img src="http://img.mukewang.com/55ece9d70001fb7f06000375.jpg" width="300" height="180" style="float:right;"></div></p>
<p><strong>笔记整理。</strong></p>
<p>　　<br> <br><a id="more"></a></p>
<h1 id="基本概念及操作"><a href="#基本概念及操作" class="headerlink" title="基本概念及操作"></a>基本概念及操作</h1><h2 id="Linux-桌面环境介绍"><a href="#Linux-桌面环境介绍" class="headerlink" title="Linux 桌面环境介绍"></a>Linux 桌面环境介绍</h2><p>相对于现在的 Windows 系统，UNIX/Linux 本身是没有图形界面的，我们通常在 Unix/Linux 发行版上看到的图形界面实际都只是运行在 Linux 系统之上的一套软件，类似 Windows95 之前的Windows 的图形界面实则也只是运行在 DOS 环境的一套软件。而 Linux 上的这套软件以前是XFree86，现在则是 xorg（X.Org），而这套软件又是通过 X 窗口系统（X Window System，也常被称为X11或X）实现的，X 本身只是工具包及架构协议，而 xorg 便是 X 架构规范的一个实现体，也就是说它是实现了 X 协议规范的一个提供图形用户界面服务的服务器，就像实现了 http 协议提供 web 服务的 Apache。如果只有服务器也是不能实现一个完整的桌面环境的，当然还需要一个客户端，我们称为 X Client，像如下几个大家熟知也最流行的实现了客户端功能的桌面环境KDE，GNOME，XFCE，LXDE。这也意味着在 Linux 上你可以自己选择安装不同的桌面环境，甚至可以定制自己的专属桌面。</p>
<h2 id="Linux终端"><a href="#Linux终端" class="headerlink" title="Linux终端"></a>Linux终端</h2><h3 id="Terminal（终端）"><a href="#Terminal（终端）" class="headerlink" title="Terminal（终端）"></a>Terminal（终端）</h3><p>通常在我们使用 Linux 时，我们并不是直接与系统打交道，而是通过一个叫做 Shell 的中间程序来完成的，在图形界面下为了实现让我们在一个窗口中完成接受用户输入和显示输出，Linux 系统还提供了一个叫做终端模拟器的程序（Terminal），下面几个比较常见的终端模拟器，例如 gnome-terminal，kconsole，xterm，rxvt，kvt，nxterm 和 eterm。<br>终端本质上是对应着 Linux 上的 /dev/tty 设备，Linux 的多用户登陆就是通过不同的 /dev/tty 设备完成的，Linux 默认提供了 6 个纯命令行界面的 “terminal”（准确的说这里应该是 6 个 virtual consoles）来让用户登录，在物理机系统上你可以通过使用[Ctrl]+[Alt]+[F1]～[F6]进行切换，不过在我们的在线实验环境中可能无法切换，因为特殊功能按键会被你主机系统劫持。当你切换到其中一个终端后想要切换回图形界面，你可以按下[Ctrl]+[Alt]+[F7]来完成。</p>
<h3 id="Shell"><a href="#Shell" class="headerlink" title="Shell"></a>Shell</h3><p>通常在图形界面中对实际体验带来差异的不是上述的不同发行版的各种终端模拟器，而大都是这个 Shell（壳），有壳就有核，这里的核就是指的 UNIX/Linux 内核，Shell 是指“提供给使用者使用界面”的软件（命令解析器），类似于 DOS 下的 command（命令行）和后来的 cmd.exe。普通意义上的 Shell 就是可以接受用户输入命令的程序。它之所以被称作 Shell 是因为它隐藏了操作系统底层的细节。同样的 Unix/Linux 下的图形用户界面 GNOME 和 KDE，有时也被叫做“虚拟 shell”或“图形 shell”。</p>
<p>Unix/Linux 操作系统下的 Shell 既是用户交互的界面，也是控制系统的脚本语言。当然在这点也有别于 Windows 下的命令行，虽然也提供了很简单的控制语句。在Windows 操作系统下，可能有些用户从来都不会直接的使用 Shell，然而在 UNIX 系列操作系统下，Shell 仍然是控制系统启动、X11 启动和很多其他实用工具的脚本解释程序。</p>
<p>在 UNIX/Linux 中比较流行的常见的 Shell 有 bash，zsh，ksh，csh 等等，Ubuntu 终端默认使用的是 bash，默认的桌面环境是 GNOME 或者 Unity（基于 GNOME）。</p>
<h2 id="命令行操作"><a href="#命令行操作" class="headerlink" title="命令行操作"></a>命令行操作</h2><h3 id="重要快捷键"><a href="#重要快捷键" class="headerlink" title="重要快捷键"></a>重要快捷键</h3><p>Tab 补全命令、目录、参数<br>Ctrl+c 强行终止当前程序（不会使终端退出）<br>Ctrl+d  键盘输入结束或退出终端<br>Ctrl+s  暂停当前程序，暂停后按下任意键恢复运行<br>Ctrl+z  将当前程序放到后台运行，恢复到前台为命令fg<br>Ctrl+a  将光标移至输入行头，相当于Home键<br>Ctrl+e  将光标移至输入行末，相当于End键<br>Ctrl+k  删除从光标所在位置到行末<br>Alt+Backspace   向前删除一个单词<br>Shift+PgUp  将终端显示向上滚动<br>Shift+PgDn  将终端显示向下滚动</p>
<h3 id="历史输入命令：-方向键-上"><a href="#历史输入命令：-方向键-上" class="headerlink" title="历史输入命令：  方向键 上"></a>历史输入命令：  方向键 上</h3><p>通配符：星号（*）和问号（?），用来对对字符串进行模糊匹配（比如文件名，参数名）。当查找文件夹时，可以使用它来代替一个或多个真正字符；当不知道真正字符或者懒得输入完整名字时，常常使用通配符代替一个或多个真正的字符。</p>
<h3 id="一次性创建多个文件"><a href="#一次性创建多个文件" class="headerlink" title="一次性创建多个文件"></a>一次性创建多个文件</h3><p>在创建文件的时候，如果需要一次性创建多个文件，比如：“love_1_linux.txt，love_2_linux.txt，… love_10_linux.txt”。在 Linux 中十分方便：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ touch love_&#123;1..10&#125;_linux.txt</span><br></pre></td></tr></table></figure></p>
<h3 id="Shell-常用通配符"><a href="#Shell-常用通配符" class="headerlink" title="Shell 常用通配符"></a>Shell 常用通配符</h3><p>字符  含义</p>
<ul>
<li>匹配 0 或多个字符<br>?   匹配任意一个字符<br>[list]  匹配 list 中的任意单一字符<br>[!list]     匹配 除list 中的任意单一字符以外的字符<br>[c1-c2]     匹配 c1-c2 中的任意单一字符 如：[0-9] [a-z]<br>{string1,string2,…}   匹配 sring1 或 string2 (或更多)其一字符串<br>{c1..c2}    匹配 c1-c2 中全部字符 如{1..10}</li>
</ul>
<h3 id="在命令行中获取帮助"><a href="#在命令行中获取帮助" class="headerlink" title="在命令行中获取帮助"></a>在命令行中获取帮助</h3><p>man 命令<br>Manual pages 是在 UNIX 或类 UNIX 操作系统在线软件文档的一种普遍的形式。 内容包括计算机程序（包括库和系统调用），正式的标准和惯例，甚至是抽象的概念。用户可以通过执行 man 命令调用手册页。</p>
<p>你可以使用如下方式来获得某个命令的说明和使用方式的详细介绍：</p>
<p>$ man &lt;command_name&gt;</p>
<p>比如你想查看 man 命令本身的使用方式，你可以输入：</p>
<p>man man</p>
<p>通常情况下，man 手册里面的内容都是英文的，这就要求你有一定的英文基础。man 手册的内容很多，涉及了 Linux 使用过程中的方方面面，为了便于查找，是做了分册（分区段）处理的，在Research UNIX、BSD、OS X 和 Linux 中，手册通常被分为8个区段，安排如下：<br>区段  说明<br>1   一般命令<br>2   系统调用<br>3   库函数，涵盖了C标准函数库<br>4   特殊文件（通常是/dev中的设备）和驱动程序<br>5   文件格式和约定<br>6   游戏和屏保<br>7   杂项<br>8   系统管理命令和守护进程</p>
<p>要查看相应区段的内容，就在 man 后面加上相应区段的数字即可，如：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ man 1 ls</span><br></pre></td></tr></table></figure></p>
<p>会显示第一区段中的ls命令man页面。</p>
<p>所有的手册页遵循一个常见的布局，其为通过简单的 ASCII 文本展示而优化，而这种情况下可能没有任何形式的高亮或字体控制。一般包括以下部分内容：</p>
<p>NAME（名称）</p>
<pre><code>该命令或函数的名称，接着是一行简介。
</code></pre><p>SYNOPSIS（概要）</p>
<pre><code>对于命令，正式的描述它如何运行，以及需要什么样的命令行参数。对于函数，介绍函数所需的参数，以及哪个头文件包含该函数的定义。
</code></pre><p>DESCRIPTION（说明）</p>
<pre><code>命令或函数功能的文本描述。
</code></pre><p>EXAMPLES（示例）</p>
<pre><code>常用的一些示例。
</code></pre><p>SEE ALSO（参见）</p>
<pre><code>相关命令或函数的列表。
</code></pre><p>也可能存在其他部分内容，但这些部分没有得到跨手册页的标准化。常见的例子包括：OPTIONS（选项），EXIT STATUS（退出状态），ENVIRONMENT（环境），BUGS（程序漏洞），FILES（文件），AUTHOR（作者），REPORTING BUGS（已知漏洞），HISTORY（历史）和COPYRIGHT（版权）。</p>
<p>通常 man 手册中的内容很多，不容易找到想要的结果，可以在 man 中使用搜索，/&lt;要搜索的关键字&gt;，查找到后使用n键切换到下一个关键字所在处，shift+n为上一个关键字所在处。使用Space(空格键)翻页，Enter(回车键)向下滚动一行，或者使用j,k（vim编辑器的移动键）进行向前向后滚动一行。按下h键为显示使用帮助(因为man使用less作为阅读器，实为less工具的帮助)，按下q退出。</p>
<p>想要获得更详细的帮助，使用info命令，不过通常使用man足够。如果知道某个命令的作用，只是想快速查看一些它的某个具体参数的作用，使用–help参数，大部分命令都会带有这个参数，如：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ls --<span class="built_in">help</span></span><br></pre></td></tr></table></figure></p>
<h1 id="用户及文件权限管理"><a href="#用户及文件权限管理" class="headerlink" title="用户及文件权限管理"></a>用户及文件权限管理</h1><h2 id="Linux-用户管理"><a href="#Linux-用户管理" class="headerlink" title="Linux 用户管理"></a>Linux 用户管理</h2><p>Linux 是一个可以实现多用户登陆的操作系统。</p>
<h3 id="查看用户"><a href="#查看用户" class="headerlink" title="查看用户"></a>查看用户</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ who am i</span><br><span class="line"></span><br><span class="line">或者</span><br><span class="line"></span><br><span class="line">$ who mom likes</span><br></pre></td></tr></table></figure>
<h3 id="who-命令其它常用参数"><a href="#who-命令其它常用参数" class="headerlink" title="who 命令其它常用参数"></a>who 命令其它常用参数</h3><p>参数  说明<br>-a  打印能打印的全部<br>-d  打印死掉的进程<br>-m  同am i,mom likes<br>-q  打印当前登录用户数及用户名<br>-u  打印当前登录用户登录信息<br>-r  打印运行等级</p>
<h3 id="创建用户"><a href="#创建用户" class="headerlink" title="创建用户"></a>创建用户</h3><p>在 Linux 系统里， root 账户拥有整个系统至高无上的权利，比如 新建/添加 用户。<br>su，su- 与 sudo</p>
<p>su <user>可以切换到用户user，执行时需要输入目标用户的密码，sudo <cmd>可以以特权级别运行cmd命令，需要当前用户属于sudo组，且需要输入当前用户密码。su - <user>命令也是切换用户，同时环境变量也会跟着改变成目标用户的环境变量。</user></cmd></user></p>
<p>新建一个叫 lilei 的用户：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo adduser lilei</span><br></pre></td></tr></table></figure></p>
<p>这个命令不但可以添加用户到系统，同时也会默认为新用户创建 home 目录：</p>
<p>$ ls /home</p>
<p>现在你已经创建好一个用户，并且你可以使用你创建的用户登录了，使用如下命令切换登录用户：</p>
<p>$ su -l lilei</p>
<p>输入刚刚设置的 lilei 的密码。退出当前用户跟退出终端一样可以使用 exit 命令或者使用快捷键 Ctrl+d。</p>
<h2 id="用户组"><a href="#用户组" class="headerlink" title="用户组"></a>用户组</h2><p>每个用户都有一个归属（用户组），用户组简单地理解就是一组用户的集合，它们共享一些资源和权限，同时拥有私有资源，就跟家的形式差不多，你的兄弟姐妹（不同的用户）属于同一个家（用户组），你们可以共同拥有这个家（共享资源），爸妈对待你们都一样（共享权限），你偶尔写写日记，其他人未经允许不能查看（私有资源和权限）。当然一个用户是可以属于多个用户组的，正如你既属于家庭，又属于学校或公司。</p>
<h4 id="知道自己属于哪些用户组的方法"><a href="#知道自己属于哪些用户组的方法" class="headerlink" title="知道自己属于哪些用户组的方法"></a>知道自己属于哪些用户组的方法</h4><p>方法一：使用groups命令<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ groups nancy</span><br></pre></td></tr></table></figure></p>
<p>每次新建用户如果不指定用户组的话，默认会自动创建一个与用户名相同的用户组（差不多就相当于家长的意思，或者说是老总）。默认情况下在sudo用户组里的可以使用sudo命令获得root权限。</p>
<p>方法二：查看/etc/group文件<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ cat /etc/group | sort</span><br></pre></td></tr></table></figure></p>
<p>cat 命令用于读取指定文件的内容并打印到终端输出。| sort 表示将读取的文本进行一个字典排序再输出。使用命令过滤掉一些你不想看到的结果：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ cat /etc/group | grep -E <span class="string">"nancy"</span></span><br></pre></td></tr></table></figure></p>
<p>etc/group 文件格式说明</p>
<p>/etc/group 的内容包括用户组（Group）、用户组口令、GID 及该用户组所包含的用户（User），每个用户组一条记录。格式如下：</p>
<pre><code>group_name:password:GID:user_list
</code></pre><p>你看到上面的 password 字段为一个 ‘x’ 并不是说密码就是它，只是表示密码不可见而已。</p>
<p><strong>将其它用户加入 sudo 用户组</strong></p>
<p>默认情况下新创建的用户是不具有 root 权限的，也不在 sudo 用户组，可以让其加入sudo用户组从而获取 root 权限。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ su -l lilei</span><br><span class="line">$ sudo ls</span><br></pre></td></tr></table></figure></p>
<p>使用 usermod 命令可以为用户添加用户组，同样使用该命令你必需有 root 权限，你可以直接使用 root 用户为其它用户添加用户组，或者用其它已经在 sudo 用户组的用户使用 sudo 命令获取权限来执行该命令。</p>
<p>用 nancy 用户执行 sudo 命令将 lilei 添加到 sudo 用户组，让它也可以使用 sudo 命令获得 root 权限</p>
<p>$ su nancy # 此处需要输入nancy用户密码，可以点击右侧工具栏中的“SSH直连”查看<br>$ groups lilei<br>$ sudo usermod -G sudo lilei<br>$ groups lilei</p>
<p>然后你再切换回 lilei 用户，现在就可以使用 sudo 获取 root 权限了。</p>
<h3 id="删除用户"><a href="#删除用户" class="headerlink" title="删除用户"></a>删除用户</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo deluser lilei --remove-home</span><br></pre></td></tr></table></figure>
<h2 id="Linux-文件权限"><a href="#Linux-文件权限" class="headerlink" title="Linux 文件权限"></a>Linux 文件权限</h2><h3 id="查看文件权限"><a href="#查看文件权限" class="headerlink" title="查看文件权限"></a>查看文件权限</h3><p>使用较长格式列出文件：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ls -l</span><br></pre></td></tr></table></figure></p>
<p>Linux 里面一切皆文件。</p>
<p>ls 命令的一些其它常用的用法：</p>
<pre><code>显示除了 &apos;.&apos;(当前目录)，&apos;..&apos; 上一级目录之外的所有包含隐藏文件（Linux 下以 &apos;.&apos; 开头的文件为隐藏文件）
</code></pre><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ls -A</span><br></pre></td></tr></table></figure>
<p>可以同时使用 ‘-A’ 和 ‘-l’ 参数：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ls -Al</span><br></pre></td></tr></table></figure></p>
<p>查看某一个目录的完整属性，而不是显示目录里面的文件属性：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ls -dl &lt;目录名&gt;</span><br></pre></td></tr></table></figure></p>
<pre><code>显示所有文件大小，并以普通人类能看懂的方式呈现：
</code></pre><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ls -AsSh</span><br></pre></td></tr></table></figure>
<p>其中小 s 为显示文件大小，大 S 为按文件大小排序，若需要知道如何按其它方式排序，使用“man”命令查询。</p>
<h3 id="变更文件所有者"><a href="#变更文件所有者" class="headerlink" title="变更文件所有者"></a>变更文件所有者</h3><p>假设目前是 lilei 用户登录，新建一个文件，命名为 “iphone6”：</p>
<p>$ touch iphone6</p>
<p>可见文件所有者是 lilei 。<br>现在，换回到nancy用户身份，使用以下命令变更文件所有者为 nancy ：</p>
<p>$ cd /home/lilei<br>$ ls iphone6<br>$ sudo chown nancy iphone6<br>$ cp iphone6 /home/nancy</p>
<p>现在查看，发现 文件所有者成功修改为 nancy 。</p>
<h3 id="修改文件权限"><a href="#修改文件权限" class="headerlink" title="修改文件权限"></a>修改文件权限</h3><p>方式一：二进制数字表示<br>每个文件的三组权限（拥有者，所属用户组，其他用户,记住这个顺序是一定的）就对应这一个 “rwx”，也就是一个 ‘7’。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">echo</span> <span class="string">"echo \"hello nancy\""</span> &gt; iphone6</span><br></pre></td></tr></table></figure></p>
<p>然后修改权限：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ chmod 700 iphone6</span><br></pre></td></tr></table></figure></p>
<p>现在，其他用户已经不能读这个“iphone6”文件了</p>
<p>方式二：加减赋值操作<br>完成上述相同的效果：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ chmod go-rw iphone6</span><br></pre></td></tr></table></figure></p>
<p>‘g’’o’还有’u’，分别表示group，others，user，’+’，’-‘ 就分别表示增加和去掉相应的权限。</p>
<h1 id="Linux-目录结构及文件基本操作"><a href="#Linux-目录结构及文件基本操作" class="headerlink" title="Linux 目录结构及文件基本操作"></a>Linux 目录结构及文件基本操作</h1><h2 id="Linux-目录结构"><a href="#Linux-目录结构" class="headerlink" title="Linux 目录结构"></a>Linux 目录结构</h2><p> Linux 是以树形目录结构的形式来构建整个系统的，可以理解为一个用户可操作系统的骨架。虽然本质上无论是目录结构还是操作系统内核都是存储在磁盘上的，但从逻辑上来说 Linux 的磁盘是“挂在”（挂载在）目录上的，每一个目录不仅能使用本地磁盘分区的文件系统，也可以使用网络上的文件系统。举例来说，可以利用网络文件系统（Network File System，NFS）服务器载入某特定目录等。</p>
<h3 id="FHS-标准"><a href="#FHS-标准" class="headerlink" title="FHS 标准"></a>FHS 标准</h3><p>FHS 定义了两层规范，第一层是， / 下面的各个目录应该要放什么文件数据，例如 /etc 应该要放置设置文件，/bin 与 /sbin 则应该要放置可执行文件等等。</p>
<p>第二层则是针对 /usr 及 /var 这两个目录的子目录来定义。例如 /var/log 放置系统登录文件、/usr/share 放置共享数据等等。</p>
<h3 id="目录路径"><a href="#目录路径" class="headerlink" title="目录路径"></a>目录路径</h3><p>cd 切换目录， . 表示当前目录，.. 表示上一级目录（以 . 开头的文件都是隐藏文件，所以这两个目录必然也是隐藏的， ls -a 命令查看隐藏文件）, - 表示上一次所在目录，～ 通常表示当前用户的”home”目录。使用 pwd 命令可以获取当前所在路径（绝对路径）。</p>
<p>进入上一级目录：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> ..</span><br></pre></td></tr></table></figure></p>
<p>进入你的“home”目录：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> ~ </span><br><span class="line"><span class="comment"># 或者 cd /home/&lt;你的用户名&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>使用 pwd 获取当前路径：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">pwd</span></span><br></pre></td></tr></table></figure></p>
<p><strong>绝对路径</strong><br>以根”/“目录为起点的完整路径，以你所要到的目录为终点，表现形式如： /usr/local/bin，表示根目录下的 usr 目录中的 local 目录中的 bin 目录。</p>
<p><strong>相对路径</strong><br>相对于当前的目录的路径，相对路径是以当前目录 . 为起点，以所要到的目录为终点，表现形式如： usr/local/bin （这里假设当前目录为根目录）。表示相对路径实际并没有加上表示当前目录的那个 . ，而是直接以目录名开头，因为这个 usr 目录为 / 目录下的子目录，是可以省略 . 的（也有类似不能省略的情况）；如果是当前目录的上一级目录，则需要使用 .. ，比如当前目录为“home”目录，根目录就应该表示为 ../../ ,表示上一级目录（”home”目录）的上一级目录（”/“目录）。</p>
<p>以”home”目录为起点，分别以绝对路径和相对路径的方式进入 /usr/local/bin 目录：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 绝对路径</span></span><br><span class="line">$ <span class="built_in">cd</span> /usr/<span class="built_in">local</span>/bin</span><br><span class="line"><span class="comment"># 相对路径</span></span><br><span class="line">$ <span class="built_in">cd</span> ../../usr/<span class="built_in">local</span>/bin</span><br></pre></td></tr></table></figure></p>
<p><strong>在进行目录切换的过程中请多使用 Tab 键自动补全，可避免输入错误，连续按两次Tab可以显示全部候选结果。</strong></p>
<h2 id="Linux-文件的基本操作"><a href="#Linux-文件的基本操作" class="headerlink" title="Linux 文件的基本操作"></a>Linux 文件的基本操作</h2><h3 id="新建"><a href="#新建" class="headerlink" title="新建"></a>新建</h3><p><strong>新建空白文件</strong><br>使用 touch 命令创建空白文件，关于 touch 命令，其主要是来更改已有文件的时间戳的（比如，最近访问时间，最近修改时间），但其在不加任何参数的情况下，只指定一个文件名，则可以创建一个为指定文件名的空白文件（不会覆盖已有同名文件），当然你也可以同时指定该文件的时间戳。<br>创建名为 test 的空白文件，因为在其他目录没有权限，所以需要先 cd ~ 切换回用户的 /home/nancy 目录：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> ~</span><br><span class="line">$ touch <span class="built_in">test</span></span><br></pre></td></tr></table></figure></p>
<p><strong>新建目录</strong><br>使用 mkdir（make directories）命令可以创建一个空目录,也可同时指定创建目录的权限属性</p>
<p>创建名为”mydir”的空目录：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ mkdir mydir</span><br></pre></td></tr></table></figure></p>
<p>使用 -p 参数，同时创建父目录（如果不存在该父目录），如下同时创建一个多级目录（这在有时候安装软件，配置安装路径时非常有用）：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ mkdir -p father/son/grandson</span><br></pre></td></tr></table></figure></p>
<p>后面的目录路径，以绝对路径的方式表示也是可以的。</p>
<h3 id="复制"><a href="#复制" class="headerlink" title="复制"></a>复制</h3><p>使用cp（copy）命令复制一个文件或目录到指定目录。将之前创建的”test”文件复制到”/home/nancy/father/son/grandson”目录中：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ cp <span class="built_in">test</span> father/son/grandson</span><br></pre></td></tr></table></figure></p>
<p><strong>复制目录</strong><br>要成功复制目录需要加上-r或者-R参数，表示递归复制，就是说有点“株连九族”的意思：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ cp -r father family</span><br></pre></td></tr></table></figure></p>
<h3 id="删除"><a href="#删除" class="headerlink" title="删除"></a>删除</h3><p><strong>删除文件</strong><br>使用rm（remove files or directories）命令，删除一个文件或目录：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ rm <span class="built_in">test</span></span><br></pre></td></tr></table></figure></p>
<p>有时候你会遇到想要删除一些为只读权限的文件，直接使用rm删除会显示一个提示,你如果想忽略这提示，直接删除文件，可以使用-f参数强制删除：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ rm -f <span class="built_in">test</span></span><br></pre></td></tr></table></figure></p>
<p><strong>删除目录</strong><br>跟复制目录一样，要删除一个目录，也需要加上-r或-R参数：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ rm -r family</span><br></pre></td></tr></table></figure></p>
<h3 id="移动文件与文件重命名"><a href="#移动文件与文件重命名" class="headerlink" title="移动文件与文件重命名"></a>移动文件与文件重命名</h3><p><strong>移动文件</strong><br>使用mv(move or rename files)命令，移动文件（剪切）。将文件”file1”移动到”Documents”目录mv 源目录文件 目的目录：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ mkdir Documents</span><br><span class="line">$ mv file1 Documents</span><br></pre></td></tr></table></figure></p>
<p><strong>重命名文件</strong><br>将文件”file1”重命名为”myfile” mv 旧的文件名 新的文件名：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ mv file1 myfile</span><br></pre></td></tr></table></figure></p>
<p><strong>批量重命名</strong><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 使用通配符批量创建 5 个文件</span></span><br><span class="line">$ touch file&#123;1..5&#125;.txt</span><br><span class="line"></span><br><span class="line"><span class="comment"># 批量将这 5 个后缀为 .txt 的文本文件重命名为以 .c 为后缀的文件</span></span><br><span class="line">$ rename <span class="string">'s/\.txt/\.c/'</span> *.txt</span><br><span class="line"></span><br><span class="line"><span class="comment"># 批量将这 5 个文件，文件名改为大写</span></span><br><span class="line">$ rename <span class="string">'y/a-z/A-Z/'</span> *.c</span><br></pre></td></tr></table></figure></p>
<p>简单解释下上面的命令，rename是先使用第二个参数的通配符匹配所有后缀为.txt的文件，然后使用第一个参数提供的正则表达式将匹配的这些文件的.txt后缀替换为.c 。</p>
<h3 id="查看文件"><a href="#查看文件" class="headerlink" title="查看文件"></a>查看文件</h3><p><strong>使用cat,tac和nl命令查看文件</strong><br>打印文件内容到标准输出（终端）,其中cat为正序显示，tac倒序显示。<br>查看之前从”/etc”目录下拷贝来的passwd文件：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ cat passwd</span><br></pre></td></tr></table></figure></p>
<p>可以加上-n参数显示行号：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ cat -n passwd</span><br></pre></td></tr></table></figure></p>
<p>nl命令，添加行号并打印，这是个比cat -n更专业的行号打印命令。</p>
<p>它的常用的几个参数：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">-b : 指定添加行号的方式，主要有两种：</span><br><span class="line">    -b a:表示无论是否为空行，同样列出行号(<span class="string">"cat -n"</span>就是这种方式)</span><br><span class="line">    -b t:只列出非空行的编号并列出（默认为这种方式）</span><br><span class="line">-n : 设置行号的样式，主要有三种：</span><br><span class="line">    -n ln:在行号字段最左端显示</span><br><span class="line">    -n rn:在行号字段最右边显示，且不加 0</span><br><span class="line">    -n rz:在行号字段最右边显示，且加 0</span><br><span class="line">-w : 行号字段占用的位数(默认为 6 位)</span><br></pre></td></tr></table></figure></p>
<p><strong>使用more和less命令分页查看文件</strong><br>其中more命令比较简单，只能向一个方向滚动，而”less”为基于”more”和”vi”(编辑器)开发，功能更强大。less 的使用基本和 more 一致。<br>使用more工具打开passwd文件：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ more passwd</span><br></pre></td></tr></table></figure></p>
<p>打开后默认只显示一屏内容，终端底部显示当前阅读的进度(百分比)。可以使用Enter键向下滚动一行，使用Space键向下滚动一屏，按下h显示帮助，q退出。<br><strong>使用head和tail命令查看文件</strong><br>head是只查看的头几行（默认为10行，不足10行则显示全部），tail是查看尾几行。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ tail /etc/passwd</span><br></pre></td></tr></table></figure></p>
<p>甚至更直接的只看一行， 加上-n参数，后面紧跟行数：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ tail -n 1 /etc/passwd</span><br></pre></td></tr></table></figure></p>
<p>参数-f，这个参数可以实现不停地读取某个文件的内容并显示。这可让我们动态查看日志起到实时监视的作用。</p>
<h3 id="查看文件类型"><a href="#查看文件类型" class="headerlink" title="查看文件类型"></a>查看文件类型</h3><p>在 Linux 下面文件的类型不是根据文件后缀来判断的，我们通常使用file命令可以查看文件的类型：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ file /bin/ls</span><br></pre></td></tr></table></figure></p>
<h3 id="编辑文件"><a href="#编辑文件" class="headerlink" title="编辑文件"></a>编辑文件</h3><p>Linux 内部的 vim 学习教程，输入如下命令即可开始：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ vimtutor</span><br></pre></td></tr></table></figure></p>
<h1 id="环境变量与文件查找"><a href="#环境变量与文件查找" class="headerlink" title="环境变量与文件查找"></a>环境变量与文件查找</h1><h2 id="环境变量"><a href="#环境变量" class="headerlink" title="环境变量"></a>环境变量</h2><h3 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h3><p>准确的说应该是 Shell 变量，所谓变量就是计算机中用于记录一个值（不一定是数值，也可以是字符或字符串）的符号，而这些符号将用于不同的运算处理中。<br>在 Shell 中如何创建一个变量，如何给变量赋值和如何读取变量的值呢？<br>使用declare命令创建一个变量名为 tmp 的变量：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">declare</span> tmp</span><br></pre></td></tr></table></figure></p>
<p>使用=号赋值运算符为变量 tmp 赋值为 nancy：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ tmp=nancy</span><br></pre></td></tr></table></figure></p>
<p>读取变量的值，使用echo命令和$符号（$符号用于表示引用一个变量的值，初学易忘）：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">echo</span> <span class="variable">$tmp</span></span><br></pre></td></tr></table></figure></p>
<p><strong>注意:关于变量名，并不是任何形式的变量名都是可用的，变量名只能是英文字母,数字或者下划线，且不能以数字作为开头。</strong></p>
<h3 id="环境变量-1"><a href="#环境变量-1" class="headerlink" title="环境变量"></a>环境变量</h3><p>环境变量就是作用域比自定义变量要大，如Shell 的环境变量作用于自身和它的子进程。在所有的 UNIX 和类 UNIX 系统中，每个进程都有其各自的环境变量设置，且默认情况下，当一个进程被创建时，处理创建过程中明确指定的话，它将继承其父进程的绝大部分环境设置。Shell 程序也作为一个进程运行在操作系统之上，而在 Shell中运行的大部分命令都将以 Shell 的子进程的方式运行。</p>
<p>通常会涉及到的环境变量有三种：</p>
<ul>
<li>当前 Shell 进程私有用户自定义变量，如上面我们创建的 temp 变量，只在当前 Shell 中有效。</li>
<li>Shell 本身内建的变量。</li>
<li>从自定义变量导出的环境变量。</li>
</ul>
<p>也有三个与上述三种环境变量相关的命令，set，env，export。这三个命令都可用于打印相关环境变量,区别在于涉及的是不同范围的环境变量，详见下表：<br>命令  说明<br>set     显示当前 Shell 所有环境变量，包括其内建环境变量（与 Shell 外观等相关），用户自定义变量及导出的环境变量<br>env     显示与当前用户相关的环境变量，还可以让命令在指定环境中运行<br>export  显示从 Shell 中导出成环境变量的变量，也能通过它将自定义变量导出为环境变量</p>
<p>关于环境变量，可以简单的理解成在当前进程的子进程是否有效，有效则为环境变量，否则不是（有人也将所有变量统称为环境变量，只是以全局环境变量和局部环境变量进行区分，只要理解它们的实质区别即可）。</p>
<p><strong>注意：为了与普通变量区分，通常我们习惯将环境变量名设为大写。</strong></p>
<h3 id="命令的查找路径与顺序"><a href="#命令的查找路径与顺序" class="headerlink" title="命令的查找路径与顺序"></a>命令的查找路径与顺序</h3><p>Shell 中输入一个命令，Shell 是通过环境变量PATH来进行搜索去找到这个命令然后执行的。Windows 中的也是有这么一个 PATH 环境变量。这个PATH里面就保存了Shell中执行的命令的搜索路径。<br>查看PATH环境变量的内容：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">echo</span> <span class="variable">$PATH</span></span><br></pre></td></tr></table></figure></p>
<p>默认情况下有输出：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/<span class="built_in">local</span>/sbin:/usr/<span class="built_in">local</span>/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/<span class="built_in">local</span>/games</span><br></pre></td></tr></table></figure></p>
<p>通常这一类目录下放的都是可执行文件，当我们在 Shell 中执行一个命令时，系统就会按照 PATH 中设定的路径按照顺序依次到目录中去查找，如果存在同名的命令，则执行先找到的那个。</p>
<p>练习创建一个最简单的可执行 Shell 脚本和一个使用 C 语言创建的”hello world”程序。<br>创建一个 Shell 脚本文件：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ vim hello_shell.sh</span><br></pre></td></tr></table></figure></p>
<p>在脚本中添加如下内容，保存并退出（注意不要省掉第一行）：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/zsh</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> ((i=0; i&lt;10; i++));<span class="keyword">do</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"hello shell"</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">exit</span> 0</span><br></pre></td></tr></table></figure></p>
<p>为文件添加可执行权限：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ chmod 755 hello_shell.sh</span><br></pre></td></tr></table></figure></p>
<p>执行脚本<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ./hello_shell.sh</span><br></pre></td></tr></table></figure></p>
<p>创建一个 C 语言”hello world”程序：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ vim hello_world.c</span><br></pre></td></tr></table></figure></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#include &lt;stdio.h&gt;</span></span><br><span class="line"></span><br><span class="line">int main(void)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"hello world!\n"</span>);</span><br><span class="line">    <span class="built_in">return</span> 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>使用 gcc 生成可执行文件：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ gcc -o hello_world hello_world.c</span><br></pre></td></tr></table></figure></p>
<pre><code>gcc 生成二进制文件默认具有可执行权限，不需要修改
</code></pre><p>在 nancy 家目录创建一个mybin目录，并将上述 hello_shell.sh 和 hello_world 文件移动到其中：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ mkdir mybin</span><br><span class="line">$ mv hello_shell.sh hello_world mybin/</span><br></pre></td></tr></table></figure></p>
<p>在mybin目录中分别运行刚刚创建的两个程序：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> mybin</span><br><span class="line">$ ./hello_shell.sh</span><br><span class="line">$ ./hello_world</span><br></pre></td></tr></table></figure></p>
<p>回到上一级目录，也就是nancy家目录，当再想运行那两个程序时，会发现提示命令找不到，除非加上命令的完整路径，但那样很不方便，要做到想使用系统命令一样执行自己创建的脚本文件或者程序，那就要将命令所在路径添加到PATH环境变量了。</p>
<h3 id="添加自定义路径到“PATH”环境变量"><a href="#添加自定义路径到“PATH”环境变量" class="headerlink" title="添加自定义路径到“PATH”环境变量"></a>添加自定义路径到“PATH”环境变量</h3><p>PATH里面的路径是以：作为分割符，可这样添加自定义路径：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ PATH=<span class="variable">$PATH</span>:/home/shiyanlou/mybin</span><br></pre></td></tr></table></figure></p>
<p><strong>注意这里一定要使用绝对路径。</strong></p>
<p>可以在其他任意目录执行那两个命令了（注意需要去掉前面的./）。这给 PATH 环境变量追加了一个路径，它也只是在当前 Shell 有效，一旦退出终端，再打开就会发现又失效了。<br>让添加的环境变量全局有效或者每次启动 Shell 时自动执行上面添加自定义路径到 PATH 的命令——后一种方式——让它自动执行。</p>
<p>在每个用户的 home 目录中有一个 Shell 每次启动时会默认执行一个配置脚本，以初始化环境，包括添加一些用户自定义环境变量等等。zsh 的配置文件是.zshrc，相应 Bash 的配置文件为.bashrc。它们在etc下还都有一个或多个全局的配置文件，不过一般只修改用户目录下的配置文件。</p>
<p>简单的使用下面命令直接添加内容到.zshrc中：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">echo</span> <span class="string">"PATH=<span class="variable">$PATH</span>:/home/shiyanlou/mybin"</span> &gt;&gt; .zshrc</span><br></pre></td></tr></table></figure></p>
<p>上述命令中&gt;&gt;表示将标准输出以追加的方式重定向到一个文件中，注意前面用到的&gt;是以覆盖的方式重定向到一个文件中，使用的时候一定要注意分辨。在指定文件不存在的情况下都会创建新的文件。</p>
<h3 id="修改和删除已有变量"><a href="#修改和删除已有变量" class="headerlink" title="修改和删除已有变量"></a>修改和删除已有变量</h3><p>变量修改</p>
<p>变量的修改有以下几种方式：<br>变量设置方式  说明<br>${变量名#匹配字串}     从头向后开始匹配，删除符合匹配字串的最短数据<br>${变量名##匹配字串}    从头向后开始匹配，删除符合匹配字串的最长数据<br>${变量名%匹配字串}     从尾向前开始匹配，删除符合匹配字串的最短数据<br>${变量名%%匹配字串}    从尾向前开始匹配，删除符合匹配字串的最长数据<br>${变量名/旧的字串/新的字串}    将符合旧字串的第一个字串替换为新的字串<br>${变量名//旧的字串/新的字串}   将符合旧字串的全部字串替换为新的字串</p>
<p>比如要修改前面添加到 PATH 的环境变量。为了避免操作失误导致命令找不到，先将 PATH 赋值给一个新的自定义变量 path：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ path=<span class="variable">$PATH</span></span><br><span class="line">$ <span class="built_in">echo</span> <span class="variable">$path</span></span><br><span class="line">$ path=<span class="variable">$&#123;path%/home/shiyanlou/mybin&#125;</span></span><br><span class="line"><span class="comment"># 或使用通配符,*表示任意多个任意字符</span></span><br><span class="line">$ path=<span class="variable">$&#123;path%*/mybin&#125;</span></span><br></pre></td></tr></table></figure></p>
<p><strong>变量删除</strong><br>可以使用unset命令删除一个环境变量：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">unset</span> temp</span><br></pre></td></tr></table></figure></p>
<h3 id="如何让环境变量立即生效"><a href="#如何让环境变量立即生效" class="headerlink" title="如何让环境变量立即生效"></a>如何让环境变量立即生效</h3><p>上面在Shell 中修改了一个配置脚本文件之后（比如 zsh 的配置文件 home 目录下的.zshrc），每次都要退出终端重新打开甚至重启主机之后其才能生效，很麻烦，使用source命令来让其立即生效，如：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">source</span> .zshrc</span><br></pre></td></tr></table></figure></p>
<p>source命令还有一个别名就是.，注意与表示当前路径的那个点区分开，虽然形式一样，但作用和使用方式一样，上面的命令如果替换成.的方式就该是<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ . ./.zshrc</span><br></pre></td></tr></table></figure></p>
<p>注意第一个点后面有一个空格，而且后面的文件必须指定完整的绝对或相对路径名，source 则不需要。</p>
<h2 id="搜索文件"><a href="#搜索文件" class="headerlink" title="搜索文件"></a>搜索文件</h2><p>与搜索相关的命令常用的有如下几个whereis,which,find,locate。</p>
<ul>
<li>whereis简单快速<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$whereis</span> who</span><br></pre></td></tr></table></figure>
</li>
</ul>
<p>whereis只能搜索二进制文件(-b)，man帮助文件(-m)和源代码文件(-s)。如果想要获得更全面的搜索结果可用locate命令。</p>
<ul>
<li>locate快而全<br>通过”/var/lib/mlocate/mlocate.db”数据库查找，不过这个数据库也不是实时更新的，系统会使用定时任务每天自动执行updatedb命令更新一次，所以有时刚添加的文件，它可能会找不到，需要手动执行一次updatedb命令（在我们的环境中必须先执行一次该命令）。它可以用来查找指定目录下的不同文件类型，如查找 /etc 下所有以 sh 开头的文件：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ locate /etc/sh</span><br></pre></td></tr></table></figure>
</li>
</ul>
<p><strong>注意,它不只是在 etc 目录下查找并会自动递归子目录进行查找。</strong><br>查找 /usr/share/ 下所有 jpg 文件：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ locate /usr/share/\*.jpg</span><br></pre></td></tr></table></figure></p>
<p><strong>注意要添加*号前面的反斜杠转义，否则会无法找到。</strong></p>
<p>如果想只统计数目可以加上-c参数，-i参数可以忽略大小写进行查找，whereis 的-b,-m，-s同样可以是使用。</p>
<ul>
<li>which小而精</li>
</ul>
<p>which本身是 Shell 内建的一个命令，通常使用which来确定是否安装了某个指定的软件，因为它只从PATH环境变量指定的路径中去搜索命令：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">which</span> man</span><br></pre></td></tr></table></figure></p>
<ul>
<li>find精而细</li>
</ul>
<p>find应该是这几个命令中最强大的了，它不但可以通过文件类型、文件名进行查找而且可以根据文件的属性（如文件的时间戳，文件的权限等）进行搜索。<br>在指定目录下搜索指定文件名的文件：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ find /etc/ -name interfaces</span><br></pre></td></tr></table></figure></p>
<p><strong>注意 find 命令的路径是作为第一个参数的， 基本命令格式为 find [path] [option] [action] </strong><br>与时间相关的命令参数：<br>参数  说明<br>-atime  最后访问时间<br>-ctime  创建时间<br>-mtime  最后修改时间</p>
<p>下面以-mtime参数举例：</p>
<ul>
<li>-mtime n: n 为数字，表示为在n天之前的”一天之内“修改过的文件</li>
<li>-mtime +n: 列出在n天之前（不包含n天本身）被修改过的文件</li>
<li>-mtime -n: 列出在n天之内（包含n天本身）被修改过的文件</li>
<li>newer file: file为一个已存在的文件，列出比file还要新的文件名</li>
</ul>
<p>列出 home 目录中，当天（24 小时之内）有改动的文件：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ find ~ -mtime 0</span><br></pre></td></tr></table></figure></p>
<p>列出用户家目录下比Code文件夹新的文件：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ find ~ -newer /home/shiyanlou/Code</span><br></pre></td></tr></table></figure></p>
<p>《黑客帝国》电影里满屏幕代码的“数字雨”，在 Linux 里面也可以轻松实现这样的效果，只需要一个命令cmatrix。<br>需要先安装，因为 Ubuntu 没有预装：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt-get update;sudo apt-get install cmatrix</span><br></pre></td></tr></table></figure></p>
<h1 id="文件打包与解压缩"><a href="#文件打包与解压缩" class="headerlink" title="文件打包与解压缩"></a>文件打包与解压缩</h1><h2 id="文件打包和解压缩"><a href="#文件打包和解压缩" class="headerlink" title="文件打包和解压缩"></a>文件打包和解压缩</h2><p>在 Windows 上最常见的不外乎这三种<em>.zip,</em>.rar,<em>.7z后缀的压缩文件，而在 Linux 上面常见常用的除了以上这三种外，还有</em>.gz,<em>.xz,</em>.bz2,<em>.tar,</em>.tar.gz,<em>.tar.xz,</em>tar.bz2，简单介绍如下：<br>文件后缀名   说明<br><em>.zip   zip程序打包压缩的文件
</em>.rar   rar程序压缩的文件<br><em>.7z    7zip程序压缩的文件
</em>.tar   tar程序打包，未压缩的文件<br><em>.gz    gzip程序(GNU zip)压缩的文件
</em>.xz    xz程序压缩的文件<br><em>.bz2   bzip2程序压缩的文件
</em>.tar.gz    tar打包，gzip程序压缩的文件<br><em>.tar.xz    tar打包，xz程序压缩的文件
</em>tar.bz2    tar打包，bzip2程序压缩的文件<br>*.tar.7z    tar打包，7z程序压缩的文件</p>
<h2 id="zip压缩打包程序"><a href="#zip压缩打包程序" class="headerlink" title="zip压缩打包程序"></a>zip压缩打包程序</h2><pre><code>使用zip打包文件夹：
</code></pre><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ zip -r -q -o nancy.zip /home/nancy</span><br><span class="line">$ du -h nancy.zip</span><br><span class="line">$ file nancy.zip</span><br></pre></td></tr></table></figure>
<p>上面命令将 nancy 的 home 目录打包成一个文件，并查看了打包后文件的大小和类型。-r参数表示递归打包包含子目录的全部内容，-q参数表示为安静模式，即不向屏幕输出信息，-o，表示输出文件，需在其后紧跟打包输出文件名。后面使用du命令查看打包后文件的大小。</p>
<pre><code>设置压缩级别为9和1（9最大,1最小），重新打包：
</code></pre><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ zip -r -9 -q -o nancy_9.zip /home/nancy -x ~/*.zip</span><br><span class="line">$ zip -r -1 -q -o nancy_1.zip /home/nancy -x ~/*.zip</span><br></pre></td></tr></table></figure>
<p>这里添加了一个参数用于设置压缩级别-[1-9]，1表示最快压缩但体积大，9表示体积最小但耗时最久。最后那个-x是为了排除我们上一次创建的 zip 文件，否则又会被打包进这一次的压缩文件中，<strong>注意:这里只能使用绝对路径，否则不起作用。</strong></p>
<p>我们再用du命令分别查看默认压缩级别、最低、最高压缩级别及未压缩的文件的大小：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ du -h -d 0 *.zip ~ | sort</span><br></pre></td></tr></table></figure></p>
<p>通过man 手册可知：</p>
<pre><code>h, --human-readable（顾名思义，你可以试试不加的情况）

d, --max-depth（所查看文件的深度）
</code></pre><p>在环境中操作之后看到的大小可能跟图上的有些不同，因为在使用过程中，会随时还生成一些缓存文件在当前用户的家目录中，这对于学习命令使用来说，是无关紧要的，可以忽略这些不同。</p>
<pre><code>创建加密zip包
</code></pre><p>使用-e参数可以创建加密压缩包：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ zip -r -e -o nancy_encryption.zip /home/nancy</span><br></pre></td></tr></table></figure></p>
<p><strong>注意</strong>: 关于zip命令，因为 Windows 系统与 Linux/Unix 在文本文件格式上的一些兼容问题，比如换行符（为不可见字符），在 Windows 为 CR+LF（Carriage-Return+Line-Feed：回车加换行），而在 Linux/Unix 上为 LF（换行），所以如果在不加处理的情况下，在 Linux 上编辑的文本，在 Windows 系统上打开可能看起来是没有换行的。如果你想让你在 Linux 创建的 zip 压缩文件在 Windows 上解压后没有任何问题，那么你还需要对命令做一些修改：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ zip -r -l -o nancy.zip /home/nancy</span><br></pre></td></tr></table></figure></p>
<p>需要加上-l参数将LF转换为CR+LF来达到以上目的。</p>
<h2 id="使用unzip命令解压缩zip文件"><a href="#使用unzip命令解压缩zip文件" class="headerlink" title="使用unzip命令解压缩zip文件"></a>使用unzip命令解压缩zip文件</h2><p>将shiyanlou.zip解压到当前目录：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ unzip shiyanlou.zip</span><br></pre></td></tr></table></figure></p>
<p>使用安静模式，将文件解压到指定目录：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ unzip -q shiyanlou.zip -d ziptest</span><br></pre></td></tr></table></figure></p>
<p>上述指定目录不存在，将会自动创建。如果不想解压只想查看压缩包的内容可以使用-l参数：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ unzip -l shiyanlou.zip</span><br></pre></td></tr></table></figure></p>
<p><strong>注意</strong>： 使用unzip解压文件时我们同样应该注意兼容问题，不过这里我们关心的不再是上面的问题，而是中文编码的问题，通常 Windows 系统上面创建的压缩文件，如果有有包含中文的文档或以中文作为文件名的文件时默认会采用 GBK 或其它编码，而 Linux 上面默认使用的是 UTF-8 编码，如果不加任何处理，直接解压的话可能会出现中文乱码的问题（有时候它会自动帮你处理），为了解决这个问题，我们可以在解压时指定编码类型。</p>
<p>使用-O（英文字母，大写o）参数指定编码类型：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">unzip -O GBK 中文压缩文件.zip</span><br></pre></td></tr></table></figure></p>
<h2 id="rar打包压缩命令"><a href="#rar打包压缩命令" class="headerlink" title="rar打包压缩命令"></a>rar打包压缩命令</h2><p>rar也是 Windows 上常用的一种压缩文件格式，在 Linux 上可以使用rar和unrar工具分别创建和解压 rar 压缩包。</p>
<pre><code>安装rar和unrar工具：
</code></pre><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt-get update</span><br><span class="line">$ sudo apt-get install rar unrar</span><br></pre></td></tr></table></figure>
<pre><code>从指定文件或目录创建压缩包或添加文件到压缩包：
</code></pre><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ rm *.zip</span><br><span class="line">$ rar a nancy.rar .</span><br></pre></td></tr></table></figure>
<p>上面的命令使用a参数添加一个目录～到一个归档文件中，如果该文件不存在就会自动创建。<br><strong>注意：rar 的命令参数没有-，如果加上会报错。</strong></p>
<pre><code>从指定压缩包文件中删除某个文件：
</code></pre><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ rar d nancy.rar .zshrc</span><br></pre></td></tr></table></figure>
<pre><code>查看不解压文件：
</code></pre><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ rar l nancy.rar</span><br></pre></td></tr></table></figure>
<pre><code>使用unrar解压rar文件
</code></pre><p>全路径解压：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ unrar x nancy.rar</span><br></pre></td></tr></table></figure></p>
<p>去掉路径解压：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ mkdir tmp</span><br><span class="line">$ unrar e nancy.rar tmp/</span><br></pre></td></tr></table></figure></p>
<p>rar命令参数非常多，上面只涉及了一些基本操作。</p>
<h2 id="tar打包工具"><a href="#tar打包工具" class="headerlink" title="tar打包工具"></a>tar打包工具</h2><pre><code>创建一个 tar 包：
</code></pre><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ tar -cf nancy.tar ~</span><br></pre></td></tr></table></figure>
<p>-c表示创建一个 tar 包文件，-f用于指定创建的文件名，注意文件名必须紧跟在-f参数之后，比如不能写成tar -fc nancy.tar，可以写成tar -f nancy.tar -c ~。你还可以加上-v参数以可视的的方式输出打包的文件。上面会自动去掉表示绝对路径的/，你也可以使用-P保留绝对路径符。</p>
<pre><code>解包一个文件(-x参数)到指定路径的已存在目录(-C参数)：
</code></pre><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ mkdir tardir</span><br><span class="line">$ tar -xf nancy.tar -C tardir</span><br></pre></td></tr></table></figure>
<pre><code>只查看不解包文件-t参数：
</code></pre><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ tar -tf nancy.tar</span><br></pre></td></tr></table></figure>
<pre><code>保留文件属性和跟随链接（符号链接或软链接），有时候我们使用tar备份文件当你在其他主机还原时希望保留文件的属性(-p参数)和备份链接指向的源文件而不是链接本身(-h参数)：
</code></pre><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ tar -cphf etc.tar /etc</span><br></pre></td></tr></table></figure>
<p>对于创建不同的压缩格式的文件，对于tar来说是相当简单的，需要的只是换一个参数，这里我们就以使用gzip工具创建*.tar.gz文件为例来说明。</p>
<pre><code>我们只需要在创建 tar 文件的基础上添加-z参数，使用gzip来压缩文件：
</code></pre><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ tar -czf nancy.tar.gz ~</span><br></pre></td></tr></table></figure>
<pre><code>解压*.tar.gz文件：
</code></pre><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ tar -xzf nancy.tar.gz</span><br></pre></td></tr></table></figure>
<p>要使用其他的压缩工具创建或解压相应文件只需要更改一个参数即可：<br>压缩文件格式  参数<br><em>.tar.gz    -z
</em>.tar.xz    -J<br>*tar.bz2    -j</p>
<p>趣味程序（火炉）：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt-get install libaa-bin </span><br><span class="line">$ aafire</span><br></pre></td></tr></table></figure></p>
<h1 id="文件系统操作与磁盘管理"><a href="#文件系统操作与磁盘管理" class="headerlink" title="文件系统操作与磁盘管理"></a>文件系统操作与磁盘管理</h1><h2 id="简单文件系统操作"><a href="#简单文件系统操作" class="headerlink" title="简单文件系统操作"></a>简单文件系统操作</h2><p><strong>使用 df 命令查看磁盘的容量</strong><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ df</span><br></pre></td></tr></table></figure></p>
<p>物理主机上的 /dev/sda2 是对应着主机硬盘的分区，后面的数字表示分区号，数字前面的字母 a 表示第几块硬盘（也可能是可移动磁盘），如果主机上有多块硬盘则可能还会出现 /dev/sdb，/dev/sdc 这些磁盘设备都会在 /dev 目录下以文件的存在形式。</p>
<p>还会看到”1k-blocks”，它表示以磁盘块大小的方式显示容量，后面为相应的以块大小表示的已用和可用容量。<br><strong>使用 du 命令查看目录的容量</strong><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 默认同样以 blocks 的大小展示</span></span><br><span class="line">$ du </span><br><span class="line"><span class="comment"># 加上`-h`参数，以更易读的方式展示</span></span><br><span class="line">$ du -h</span><br></pre></td></tr></table></figure></p>
<p>-d参数指定查看目录的深度<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 只查看1级目录的信息</span></span><br><span class="line">$ du -h -d 0 ~</span><br><span class="line"><span class="comment"># 查看2级</span></span><br><span class="line">$ du -h -d 1 ~</span><br></pre></td></tr></table></figure></p>
<h2 id="简单的磁盘管理"><a href="#简单的磁盘管理" class="headerlink" title="简单的磁盘管理"></a>简单的磁盘管理</h2><p><strong>下面涉及的命令具有一定的危险性，操作不当可能会丢失你的个人数据，初学者建议在虚拟环境中进行操作</strong></p>
<h3 id="创建虚拟磁盘"><a href="#创建虚拟磁盘" class="headerlink" title="创建虚拟磁盘"></a>创建虚拟磁盘</h3><p>dd 命令简介<br>dd命令用于转换和复制文件，不过它的复制不同于cp。之前提到过关于 Linux 的很重要的一点，一切即文件，在 Linux 上，硬件的设备驱动（如硬盘）和特殊设备文件（如/dev/zero和/dev/random）都像普通文件一样，只要在各自的驱动程序中实现了对应的功能，dd 也可以读取自和/或写入到这些文件。这样，dd也可以用在备份硬件的引导扇区、获取一定数量的随机数据或者空数据等任务中。dd程序也可以在复制时处理数据，例如转换字节序、或在 ASCII 与 EBCDIC 编码间互换。</p>
<p>dd的命令行语句与其他的 Linux 程序不同，因为它的命令行选项格式为选项=值，而不是更标准的–选项 值或-选项=值。dd默认从标准输入中读取，并写入到标准输出中，但可以用选项if（input file，输入文件）和of（output file，输出文件）改变。</p>
<p>我们先来试试用dd命令从标准输入读入用户输入到标准输出或者一个文件：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 输出到文件</span></span><br><span class="line">$ dd of=<span class="built_in">test</span> bs=10 count=1 <span class="comment"># 或者 dd if=/dev/stdin of=test bs=10 count=1</span></span><br><span class="line">hello</span><br><span class="line">$ cat <span class="built_in">test</span></span><br><span class="line"><span class="comment"># 输出到标准输出</span></span><br><span class="line">$ dd <span class="keyword">if</span>=/dev/stdin of=/dev/stdout bs=10 count=1</span><br><span class="line">world</span><br><span class="line">$ cat <span class="built_in">test</span></span><br></pre></td></tr></table></figure></p>
<p>上述命令从标准输入设备读入用户输入（缺省值，所以可省略）然后输出到 test 文件，bs（block size）用于指定块大小（缺省单位为 Byte，也可为其指定如’K’，’M’，’G’等单位），count用于指定块数量。</p>
<p>dd在拷贝的同时还可以实现数据转换。<br>例，将输出的英文字符转换为大写再写入文件：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ dd if=/dev/stdin of=test bs=10 count=1 conv=ucase</span><br><span class="line">hello</span><br><span class="line">$ cat test</span><br></pre></td></tr></table></figure></p>
<p>结果将是HELLO。<br>可在man文档查看其它所以转换参数。</p>
<h3 id="使用dd命令创建寻镜像文件"><a href="#使用dd命令创建寻镜像文件" class="headerlink" title="使用dd命令创建寻镜像文件"></a>使用dd命令创建寻镜像文件</h3><p>从/dev/zero设备创建一个容量为 256M 的空文件：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ dd if=/dev/zero of=virtual.img bs=1M count=256</span><br><span class="line">$ du -h virtual.img</span><br></pre></td></tr></table></figure></p>
<h3 id="使用-mkfs-命令格式化磁盘（这里是自己创建的虚拟磁盘镜像）"><a href="#使用-mkfs-命令格式化磁盘（这里是自己创建的虚拟磁盘镜像）" class="headerlink" title="使用 mkfs 命令格式化磁盘（这里是自己创建的虚拟磁盘镜像）"></a>使用 mkfs 命令格式化磁盘（这里是自己创建的虚拟磁盘镜像）</h3><p>在命令行输入 sudo mkfs 然后按下Tab键，有多个以 mkfs 为前缀的命令，这些不同的后缀是表示不同的文件系统，可以用 mkfs 格式化成的文件系统。<br>例，将虚拟磁盘镜像格式化为ext4文件系统：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo mkfs.ext4 virtual.img</span><br></pre></td></tr></table></figure></p>
<p>实际 mkfs.ext4 是使用 mke2fs 来完成格式化工作的。<br>想知道 Linux 支持哪些文件系统可输入ls -l /lib/modules/$(uname -r)/kernel/fs查看。</p>
<h3 id="使用mount命令挂载磁盘到目录树"><a href="#使用mount命令挂载磁盘到目录树" class="headerlink" title="使用mount命令挂载磁盘到目录树"></a>使用mount命令挂载磁盘到目录树</h3><p>该指令通常是使用在 USB 或其他可移除存储设备上，而根目录则需要始终保持挂载的状态。<br>使用mount查看主机已挂载的文件系统：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo mount</span><br></pre></td></tr></table></figure></p>
<p>mount命令的一般格式如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mount [options] [source] [directory]</span><br></pre></td></tr></table></figure></p>
<p>一些常用操作：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mount [-o [操作选项]] [-t 文件系统类型] [-w|--rw|--ro] [文件系统源] [挂载点]</span><br></pre></td></tr></table></figure></p>
<p>例，挂载创建的虚拟磁盘镜像到/mnt目录：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$mount -o loop -t ext4 virtual.img /mnt</span><br><span class="line"># 挂载类型可省，会自动识别</span><br><span class="line">#以只读方式挂载</span><br><span class="line">$ mount -o loop --ro virtual.img /mnt</span><br><span class="line">#或者mount -o loop,ro virtual.img /mnt</span><br></pre></td></tr></table></figure></p>
<h3 id="使用umount命令卸载已挂载磁盘"><a href="#使用umount命令卸载已挂载磁盘" class="headerlink" title="使用umount命令卸载已挂载磁盘"></a>使用umount命令卸载已挂载磁盘</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 命令格式 sudo umount 已挂载设备或挂载点</span><br><span class="line">$ sudo umount /mnt</span><br></pre></td></tr></table></figure>
<h3 id="使用fdisk为磁盘分区"><a href="#使用fdisk为磁盘分区" class="headerlink" title="使用fdisk为磁盘分区"></a>使用fdisk为磁盘分区</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 查看银盘分区表信息</span><br><span class="line">$ sudo fdisk -l</span><br><span class="line"></span><br><span class="line"># 进入磁盘分区模式</span><br><span class="line">$ sudo fdisk virtual.img</span><br></pre></td></tr></table></figure>
<p>然后分区。</p>
<h3 id="使用loseup命令建立镜像与回环设备的关联"><a href="#使用loseup命令建立镜像与回环设备的关联" class="headerlink" title="使用loseup命令建立镜像与回环设备的关联"></a>使用loseup命令建立镜像与回环设备的关联</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ sudo losetup /dev/loop0 virtual.img</span><br><span class="line"># 若提示设备忙可使用其它回环设备，&quot;ls /dev/loop*&quot;查看所有回环设备</span><br><span class="line"></span><br><span class="line"># 解除设备关联</span><br><span class="line">$ sudo losetup -d /dev/loop0</span><br></pre></td></tr></table></figure>
<p>然后再使用mkfs格式化各分区，格式化之前需为各分区建立虚拟设备的映射，用到kpartx工具，需安装：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt-get install kpartx</span><br><span class="line">$ sudo kpartx -av /dev/loop0</span><br><span class="line"></span><br><span class="line">#取消映射</span><br><span class="line">$ sudo kpartx -dv /dev/loop0</span><br></pre></td></tr></table></figure></p>
<p>接着是格式化：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ sudo mkfs.ext4 -q /dev/mapper/loop0p1</span><br><span class="line">$ sudo mkfs.ext4 -q /dev/mapper/loop0p5</span><br><span class="line">$ sudo mkfs.ext4 -q /dev/mapper/loop0p6</span><br></pre></td></tr></table></figure></p>
<p>格式化完成后在/media目录下新建四个空目录用于挂载虚拟磁盘：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">$ mkdir -p /media/virtualdisk_&#123;1..3&#125;</span><br><span class="line"></span><br><span class="line"># 挂载磁盘分区</span><br><span class="line">$ sudo mount /dev/mapper/loop0p1 /media/virtualdisk_1</span><br><span class="line">$ sudo mount /dev/mapper/loop0p5 /media/virtualdisk_2</span><br><span class="line">$ sudo mount /dev/mapper/loop0p6 /media/virtualdisk_3</span><br><span class="line"></span><br><span class="line"># 卸载磁盘分区</span><br><span class="line">$ sudo umount /dev/mapper/loop0p1</span><br><span class="line">$ sudo umount /dev/mapper/loop0p5</span><br><span class="line">$ sudo umount /dev/mapper/loop0p6</span><br><span class="line"></span><br><span class="line">$ df -h</span><br></pre></td></tr></table></figure></p>
<p>趣味程序<br>cowsay命令，可在终端里以动物说话的形式打印一段话。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"># 安装</span><br><span class="line">$ sudo apt-get install cowsay</span><br><span class="line"></span><br><span class="line"># 默认是一只牛</span><br><span class="line">$ cowsay hello shiyanlou</span><br><span class="line"></span><br><span class="line"># 加上&apos;-l&apos;参数打印所有支持的动物种类</span><br><span class="line">$ cowsay -l</span><br><span class="line"></span><br><span class="line"># 使用&apos;-f&apos;参数选择动物种类</span><br><span class="line">$ cowsay -f elephant hello shiyanlou</span><br><span class="line"></span><br><span class="line"># 此外它还可以结合fortune命令一起使用</span><br><span class="line">$ fortune | cowsay -f daemon</span><br></pre></td></tr></table></figure></p>
<h1 id="Linux下的帮助命令"><a href="#Linux下的帮助命令" class="headerlink" title="Linux下的帮助命令"></a>Linux下的帮助命令</h1><h2 id="内建命令与外部命令"><a href="#内建命令与外部命令" class="headerlink" title="内建命令与外部命令"></a>内建命令与外部命令</h2><p>内建命令：shell程序的一部分，通常在系统加载时shell就被加载并驻留在系统内存中。如history、cd、exit等。<br>外部命令：系统加载时不随系统一起被加载到内存中，需要时再调用内存。是在Bash之外额外安装的，通常放在/bin，/usr/bin，/sbin，/usr/sbin等等。如ls<br>vi等。<br>可使用type区分是内建命令还是外部命令。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">type exit</span><br><span class="line">type service</span><br></pre></td></tr></table></figure></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># 内建命令，内建命令都是在 bash 源码中的 builtins 的.def中</span><br><span class="line">xxx is a shell builtin</span><br><span class="line"># 外部命令，外部命令在/usr/bin or /usr/sbin等等中</span><br><span class="line">xxx is /usr/sbin/xxx</span><br><span class="line">#若是得到alias的结果，说明该指令为命令别名所设定的名称；</span><br><span class="line">xxx is an alias for xx --xxx</span><br></pre></td></tr></table></figure>
<h2 id="帮助命令的使用"><a href="#帮助命令的使用" class="headerlink" title="帮助命令的使用"></a>帮助命令的使用</h2><h3 id="help命令"><a href="#help命令" class="headerlink" title="help命令"></a>help命令</h3><p>进入bash，bash中内置该命令：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash</span><br></pre></td></tr></table></figure></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">help ls</span><br></pre></td></tr></table></figure>
<p>会出错。因为help命令只能用于显示内建命令的帮助信息。</p>
<p>若是外部命令，需：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ls --help</span><br></pre></td></tr></table></figure></p>
<h3 id="man命令"><a href="#man命令" class="headerlink" title="man命令"></a>man命令</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">man ls</span><br></pre></td></tr></table></figure>
<p>得到的内容比help更详细，且无内建命令与外部命令的区别。</p>
<p>man手册：<br>章节数    说明<br>1    Standard commands （标准命令）<br>2    System calls （系统调用）<br>3    Library functions （库函数）<br>4    Special devices （设备说明）<br>5    File formats （文件格式）<br>6    Games and toys （游戏和娱乐）<br>7    Miscellaneous （杂项）<br>8    Administrative Commands （管理员命令）<br>9    其他（Linux特定的）， 用来存放内核例行程序的文档。</p>
<p>可通过pgup与pgdn或上下键翻看，按q退出。</p>
<h3 id="info命令"><a href="#info命令" class="headerlink" title="info命令"></a>info命令</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">info ls</span><br></pre></td></tr></table></figure>
<p>比man更详细。</p>
<h1 id="Linux任务计划crontab"><a href="#Linux任务计划crontab" class="headerlink" title="Linux任务计划crontab"></a>Linux任务计划crontab</h1><h2 id="crontab的使用"><a href="#crontab的使用" class="headerlink" title="crontab的使用"></a>crontab的使用</h2><h3 id="crontab简介"><a href="#crontab简介" class="headerlink" title="crontab简介"></a>crontab简介</h3><p>crontab命令用于设置周期性被执行的指令。该命令从输入设备读取指令，并将其存放在crond文件中，以供之后读取和执行。通常，crontab 储存的指令被守护进程激活，crond 为其守护进程，crond 常常在后台运行，每一分钟会检查一次是否有预定的作业需要执行。通过 crontab 命令，我们可以在固定的间隔时间执行指定的系统指令或 shell　script 脚本。时间间隔的单位可以是分钟、小时、日、月、周的任意组合。<br>crontab格式：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># Example of job definition:</span><br><span class="line"># .---------------- minute (0 - 59)</span><br><span class="line"># |  .------------- hour (0 - 23)</span><br><span class="line"># |  |  .---------- day of month (1 - 31)</span><br><span class="line"># |  |  |  .------- month (1 - 12) OR jan,feb,mar,apr ...</span><br><span class="line"># |  |  |  |  .---- day of week (0 - 6) (Sunday=0 or 7) OR sun,mon,tue,wed,thu,fri,sat</span><br><span class="line"># |  |  |  |  |</span><br><span class="line"># *  *  *  *  * user-name command to be executed</span><br></pre></td></tr></table></figure></p>
<h3 id="crontab准备"><a href="#crontab准备" class="headerlink" title="crontab准备"></a>crontab准备</h3><p>Ubuntu默认启动。</p>
<h3 id="crontab使用"><a href="#crontab使用" class="headerlink" title="crontab使用"></a>crontab使用</h3><p>添加一个计划任务：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">crontab -e</span><br></pre></td></tr></table></figure></p>
<p>出现选择编辑工具，这里选第一个基本的vim。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">man crontab</span><br></pre></td></tr></table></figure></p>
<p>查看详细格式。</p>
<p>添加任务：在文档的最后一排加上一排命令,该任务是每分钟我们会在/home/test目录下创建一个以当前的年月日时分秒为名字的空白文件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">*/1 * * * * touch /home/test/$(date +\%Y\%m\%d\%H\%M\%S)</span><br></pre></td></tr></table></figure></p>
<p>添加成功后我们会得到最后一排 installing new crontab 的一个提示。<br>也可以通过这样的一个指令来查看我们添加了哪些任务<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">crontab -l</span><br></pre></td></tr></table></figure></p>
<p>虽然添加了任务，但是如果 cron 的守护进程没有启动，它不会监测到有任务，也就不会执行，通过以下2种方式来确定cron是否成功的在后台启动。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ps aux|grep cron</span><br><span class="line">or</span><br><span class="line">pgrep cron</span><br></pre></td></tr></table></figure></p>
<p>查看执行任务命令之后在日志中的信息反馈<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo tail -f /var/log/syslog</span><br></pre></td></tr></table></figure></p>
<p>删除任务：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">crontab -r</span><br></pre></td></tr></table></figure></p>
<h2 id="crontab的深入"><a href="#crontab的深入" class="headerlink" title="crontab的深入"></a>crontab的深入</h2><p>每个用户使用 crontab -e 添加计划任务，都会在 /var/spool/cron/crontabs 中添加一个该用户自己的任务文档，这样目的是为了隔离。<br>如果是系统级别的定时任务，只需要以 sudo 权限编辑 /etc/crontab 文件就可以。</p>
<p>cron 服务监测时间最小单位是分钟，所以 cron 会每分钟去读取一次 /etc/crontab 与 /var/spool/cron/crontabs 里面的內容。</p>
<p>在 /etc 目录下，cron 相关的目录有下面几个：<br>每个目录的作用：<br>/etc/cron.daily，目录下的脚本会每天执行一次，在每天的6点25分时运行；<br>/etc/cron.hourly，目录下的脚本会每个小时执行一次，在每小时的17分钟时运行；<br>/etc/cron.monthly，目录下的脚本会每月执行一次，在每月1号的6点52分时运行；<br>/etc/cron.weekly，目录下的脚本会每周执行一次，在每周第七天的6点47分时运行；<br>系统默认执行时间可以根据需求进行修改。</p>
<h2 id="进一步学习参考"><a href="#进一步学习参考" class="headerlink" title="进一步学习参考"></a>进一步学习参考</h2><p><a href="http://linux.vbird.org/linux_basic/0430cron.php" target="_blank" rel="noopener">http://linux.vbird.org/linux_basic/0430cron.php</a></p>
<h1 id="命令执行顺序控制与管道"><a href="#命令执行顺序控制与管道" class="headerlink" title="命令执行顺序控制与管道"></a>命令执行顺序控制与管道</h1><h2 id="命令执行顺序的控制"><a href="#命令执行顺序的控制" class="headerlink" title="命令执行顺序的控制"></a>命令执行顺序的控制</h2><h3 id="顺序执行多条命令"><a href="#顺序执行多条命令" class="headerlink" title="顺序执行多条命令"></a>顺序执行多条命令</h3><p>一般终端一次输入一条命令，按下回车执行。若需一次执行多条命令，可用；完成。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt-get update;sudo apt-get install some-tool;some-tool</span><br></pre></td></tr></table></figure></p>
<h3 id="有选择的执行命令"><a href="#有选择的执行命令" class="headerlink" title="有选择的执行命令"></a>有选择的执行命令</h3><p>若需上一条命令执行成功才执行下一条，或不成功执行其它什么处理，可使用which来查找是否安装某个命令。<br>例：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ which cowsay&gt;/dev/null &amp;&amp; cowsay -f head-in ohch~</span><br></pre></td></tr></table></figure></p>
<p>使用$?环境变量获取上一次命令的返回结果：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ which cowsay</span><br><span class="line">cowsay not found</span><br><span class="line">$ echo $?</span><br><span class="line">$ which cat</span><br><span class="line">/bin/cat</span><br><span class="line">$ echo $?</span><br><span class="line">0</span><br></pre></td></tr></table></figure></p>
<p>||与&amp;&amp;结果相反，当上一条命令执行结果为≠0($?≠0)时则执行它后面的命令。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ which cowsay&gt;/dev/null || echo &quot;cowsay has not been install, please run &apos;sudo apt-get install cowsay&apos; to install&quot;</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ which cowsay&gt;/dev/null &amp;&amp; echo &quot;exist&quot; || echo &quot;not exist&quot;</span><br></pre></td></tr></table></figure>
<h2 id="管道"><a href="#管道" class="headerlink" title="管道"></a>管道</h2><p>管道是一种通信机制，通常用于进程间的通信（也可通过socket进行网络通信）。它表现出来的形式是将前面每一个进程的输出（stdout）直接作为一个进程的输入（stdin）。<br>管道分为匿名管道和具名管道。在使用一些过滤程序时经常用到匿名管道，在命令行中由|分隔符表示。具名管道，简单来说是有名字的管道，通常只在源程序中用到具名管道。</p>
<h3 id="试用"><a href="#试用" class="headerlink" title="试用"></a>试用</h3><p>例：查看/etc目录下有哪些文件和目录，使用<code>ls</code>命令来查看：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ls -al /etc</span><br></pre></td></tr></table></figure></p>
<p>有太多内容屏幕不能完全显示，此时可用滚动条或快捷键滚动窗口来查看。也可以使用管道：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ls -al /etc | less</span><br></pre></td></tr></table></figure></p>
<p>通过管道将前一个命令（<code>ls</code>）的输出作为下一个命令（<code>less</code>）的输入，就可以一行行看了。</p>
<h3 id="cut命令"><a href="#cut命令" class="headerlink" title="cut命令"></a>cut命令</h3><p>cut命令，打印每一行的某一字段。<br>例：打印/etc/passwd文件中以<code>:</code>为分隔符的第1个字段和第6个字段分别表示用户名和其家目录：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cut /etc/passwd -d &apos;:&apos; -f 1,6</span><br></pre></td></tr></table></figure></p>
<p>打印/etc/passewd文件中每一行的前N个字符：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># 前五个（包含第五个）</span><br><span class="line">$ cut /etc/passwd -c -5</span><br><span class="line"># 前五个之后的（包含第五个）</span><br><span class="line">$ cut /etc/passwd -c 5-</span><br><span class="line"># 第五个</span><br><span class="line">$ cut /etc/passwd -c 5</span><br><span class="line"># 2到5之间的（包含第五个）</span><br><span class="line">$ cut /etc/passwd -c 2-5</span><br></pre></td></tr></table></figure></p>
<h3 id="grep命令"><a href="#grep命令" class="headerlink" title="grep命令"></a>grep命令</h3><p>grep命令，在文本中或stdin中查找匹配字符串。它结合正则表达式可以实现很复杂却很高效的匹配和查找。<br>grep命令的一般形式为：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grep [命令选项]... 用于匹配的表达式 [文件]...</span><br></pre></td></tr></table></figure></p>
<p>搜索/home目录下所有包含”helloworld”的所有文本文件，并显示在文本中的行号：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ grep -rnI &quot;helloworld&quot; ~</span><br></pre></td></tr></table></figure></p>
<p><code>-r</code>参数表示递归搜索子目录中的文件，<code>-n</code>表示打印匹配项行号，<code>-I</code>表示忽略二进制文件。</p>
<p>也可在匹配字段中使用正则表达式：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 查看环境变量中以&quot;helloworld&quot;结尾的字符串</span><br><span class="line">$ export | grep &quot;.*helloworld$&quot;</span><br></pre></td></tr></table></figure></p>
<p><code>$</code>表示一行的末尾。</p>
<h3 id="wc命令"><a href="#wc命令" class="headerlink" title="wc命令"></a>wc命令</h3><p>wc命令，简单小巧的计数工具。wc命令用于统计并输出一个文件中行、单词和字节的数目，例：输出/etc/passwd文件的统计信息：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ wc /etc/passwd</span><br></pre></td></tr></table></figure></p>
<p>分别只输出行数、单词数、字节数、字符数和输入文本中最长一行的字节数：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"># 行数</span><br><span class="line">$ wc -l /etc/passwd</span><br><span class="line"># 单词数</span><br><span class="line">$ wc -w /etc/passwd</span><br><span class="line"># 字节数</span><br><span class="line">$ wc -c /etc/passwd</span><br><span class="line"># 字符数</span><br><span class="line">$ wc -m /etc/passwd</span><br><span class="line"># 最长行字节数</span><br><span class="line">$ wc -L /etc/passwd</span><br></pre></td></tr></table></figure></p>
<p>注意：对于西文字符来说，一个字符就是一个字节，但对于中文字符一个汉字是大于2个字节的，具体数目是由字符编码决定的。</p>
<p>结合管道统计/etc下面所有目录数：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ls -dl /etc/*/ | wc -l</span><br></pre></td></tr></table></figure></p>
<h3 id="sort排序命令"><a href="#sort排序命令" class="headerlink" title="sort排序命令"></a>sort排序命令</h3><p>将输入按照一定方式排序，然后再输出,它支持的排序有按字典排序,数字排序，按月份排序，随机排序，反转排序，指定特定字段进行排序等等。<br>默认为字典排序：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ cat /etc/passswd | sort</span><br></pre></td></tr></table></figure></p>
<p>反转排序：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ cat /etc/passwd | sort -r</span><br></pre></td></tr></table></figure></p>
<p>按特定字段排序：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ cat /etc/passwd | sort -t&apos;:&apos; -k 3</span><br></pre></td></tr></table></figure></p>
<p><code>-t</code>参数用于指定字段的分隔符，<code>-k</code>字段号用于指定对哪一个字段进行排序。若/etc/passwd文件的第三个字段为数字，默认情况下是以字典序排序的，若要按照数字排序则要加上<code>-n</code>参数：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ cat /etc/passwd | sort -t&apos;:&apos; -k 3 -n</span><br></pre></td></tr></table></figure></p>
<h3 id="uniq去重命令"><a href="#uniq去重命令" class="headerlink" title="uniq去重命令"></a>uniq去重命令</h3><p>uniq命令可用于过滤或输出重复行。</p>
<ul>
<li>过滤重复行<br>可使用<code>history</code>命令查看最近执行过的命令，若只想查看使用了哪个命令而无需知道具体干了什么，可去掉命令后的参数并去掉重复的命令：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ history | cut -c 8- | cut -d &apos; &apos; -f 1 | uniq</span><br></pre></td></tr></table></figure>
</li>
</ul>
<p>uniq命令只能去除连续重复的行，不是全文去重。</p>
<p>要达到预期效果，先排序：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ history | cut -c 8- | cut -d &apos; &apos; -f 1 | sort | uniq</span><br><span class="line"># 或 $ history | cut -c 8- | cut -d &apos; &apos; -f 1 | sort -u</span><br></pre></td></tr></table></figure></p>
<ul>
<li>输出重复行<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 输出重复过的行（重复的只输出一个）及重复次数</span><br><span class="line">$ history | cut -c 8- | cut -d &apos; &apos; -f 1 | sort | uniq -dc</span><br><span class="line"># 输出所有重复的行</span><br><span class="line">$ history | cut -c 8- | cut -d &apos; &apos; -f 1 | sort | uniq -D</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h1 id="简单的文本处理"><a href="#简单的文本处理" class="headerlink" title="简单的文本处理"></a>简单的文本处理</h1><h2 id="文本处理命令"><a href="#文本处理命令" class="headerlink" title="文本处理命令"></a>文本处理命令</h2><h3 id="tr命令"><a href="#tr命令" class="headerlink" title="tr命令"></a>tr命令</h3><p>tr命令可用来删除一段文本信息中的某些文字，或将其进行转换。</p>
<p>使用方式：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tr [option]...SET1 [SET2]</span><br></pre></td></tr></table></figure></p>
<p>常用的选项有：<br>选项    说明<br>-d    删除和set1匹配的字符，注意不是全词匹配也不是按字符顺序匹配<br>-s    去除set1指定的在输入文本中连续并重复的字符<br>例:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># 删除“hello world”中所有的&apos;o&apos;,&apos;l&apos;,&apos;h&apos;</span><br><span class="line">$ echo &apos;hello world&apos; | tr -d &apos;olh&apos;</span><br><span class="line"># 将‘hello’中的ll，去重为一个l</span><br><span class="line">$ echo &apos;hello&apos; | tr -s &apos;l&apos;</span><br><span class="line"># 将输入文本，全部转换为大写或小写输出</span><br><span class="line">$ echo &apos;input some text here&apos; | tr &apos;[:lower:]&apos;&apos;[:upper:]&apos;</span><br><span class="line"># 上面的&apos;[:lower:]&apos;&apos;[:upper:]&apos;也可简写为&apos;[a-z]&apos;&apos;[A-Z]&apos;，反过来将大写变小写也是可以的</span><br></pre></td></tr></table></figure></p>
<h3 id="col命令"><a href="#col命令" class="headerlink" title="col命令"></a>col命令</h3><p>col命令可将Tab换成对等数量的空格，或反转该操作。<br>使用方式：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">col [option]</span><br></pre></td></tr></table></figure></p>
<p>常用的选项有：<br>选项    说明<br>-x    将Tab转换为空格<br>-h    将空格转换为Tab（默认选项）<br>例：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 查看/etc/protocols中的不可见字符，可看到很多^I，这其实是Tab转移成可见字符的符号</span><br><span class="line">$ cat -A /etc/protocols</span><br><span class="line"># 使用col -x将/etc/protocols中的Tab转换为空格，然后再使用cat查看，会发现^I不见了</span><br><span class="line">$ cat /etc/protocols | col -x | cat -A</span><br></pre></td></tr></table></figure></p>
<h3 id="join命令"><a href="#join命令" class="headerlink" title="join命令"></a>join命令</h3><p>join命令用于将两个文件中包含相同内容的那一行合并在一起。<br>使用方式：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">join [option]... file1 file2</span><br></pre></td></tr></table></figure></p>
<p>常用的选项有：<br>选项    说明<br>-t    指定分隔符，默认为空格<br>-i    忽略大小写的差异<br>-1    指明第一个文件要用哪个字段来对比，默认对比第一个字段<br>-2    指明第二个文件要用哪个字段来对比，默认对比第一个字段</p>
<p>例：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># 创建两个文件</span><br><span class="line">$ echo &apos;1 hello&apos; &gt; file1</span><br><span class="line">$ echo &apos;1 world&apos; &gt; file2</span><br><span class="line">$ join file1 file2</span><br><span class="line"># 将/etc/passwd与/etc/shadow两个文件合并，指定以&apos;:&apos;作为分隔符</span><br><span class="line">$ sudo join -t &apos;:&apos; /etc/passwd /etc/shadow</span><br><span class="line"># 将/etc/passwd与/etc/group两个文件合并，指定以&apos;:&apos;作为分隔符，分别比对第4和第3个字段</span><br><span class="line">$ sudo join -t &apos;:&apos; -1 4 /etc/passwd -2 3 /etc/group</span><br></pre></td></tr></table></figure></p>
<h3 id="paste命令"><a href="#paste命令" class="headerlink" title="paste命令"></a>paste命令</h3><p>与join命令类似，它是在不对比数据的情况下，简单地将多个文件合并在一起，以Tab隔开。<br>使用方式：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">paste [option] file...</span><br></pre></td></tr></table></figure></p>
<p>常用的选项有：<br>选项    说明<br>-d    指定合并的分隔符，默认为Tab<br>-s    不合并到一行，每个文件为一行</p>
<p>例：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ echo hello &gt; file1</span><br><span class="line">$ echo world &gt; file2</span><br><span class="line">$ echo www.hubojing.me &gt; file3</span><br><span class="line">$ paste -d &apos;:&apos; file1 file2 file3</span><br><span class="line">$ paste -s file1 file2 file3</span><br></pre></td></tr></table></figure></p>
<p>输出结果为：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">hello:world:www.hubojing.me</span><br><span class="line">hello</span><br><span class="line">world</span><br><span class="line">www.hubojing.me</span><br></pre></td></tr></table></figure></p>
<h1 id="数据流重定向"><a href="#数据流重定向" class="headerlink" title="数据流重定向"></a>数据流重定向</h1><p>重定向，将输出到标准输出的数据重定向到一个文件中。如<code>&gt;</code>或<code>&gt;&gt;</code>操作。</p>
<h2 id="数据流重定向-1"><a href="#数据流重定向-1" class="headerlink" title="数据流重定向"></a>数据流重定向</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ echo &apos;hello world&apos; &gt; redirect</span><br><span class="line">$ echo &apos;www.hubojing.me&apos; &gt;&gt; redirect</span><br><span class="line">$ cat redirect</span><br></pre></td></tr></table></figure>
<p><code>&gt;</code>表示从左到右，<code>&lt;</code>从右到左。</p>
<h3 id="简单的重定向"><a href="#简单的重定向" class="headerlink" title="简单的重定向"></a>简单的重定向</h3><p>Linux默认提供三个特殊设备，用于终端显示和输出，分别为<code>stdin</code>（标准输入），<code>stdout</code>（标准输出），<code>stderr</code>（标准错误输出）。<br>文件描述符    设备文件    说明<br>0    /dev/stdin    标准输入<br>1    /dev/stdout    标准输出<br>2    /dev/stderr    标准错误</p>
<p>文件描述符是一个索引值，指向内核为每一个进程所维护的该进程打开文件的记录表。当程序打开一个现有文件或创建一个新文件时，内核向进程返回一个文件描述符。</p>
<p>默认使用终端的标准输入作为命令的输入和标准输出作为命令的输出：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ cat</span><br><span class="line">(按Ctrl+C退出)</span><br></pre></td></tr></table></figure></p>
<p>将cat的连续输出（heredoc方式）重定向到一个文件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">$ mkdir Documents</span><br><span class="line">$ cat &gt; Documents/test.c &lt;&lt;EOF</span><br><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line"></span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">	printf(&quot;hello world\n&quot;);</span><br><span class="line">	return 0;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">EOF</span><br></pre></td></tr></table></figure></p>
<p>将一个命令作为命令的输入，标准输出作为命令的输出<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ cat Documents/test.c</span><br></pre></td></tr></table></figure></p>
<p>将echo命令通过管道传过来的数据作为cat命令的输入，将标准输出作为命令的输出<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ echo &apos;hi&apos; | cat</span><br></pre></td></tr></table></figure></p>
<p>将echo命令的输出从默认的标准输出重定向到一个普通文件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ echo &apos;hello world&apos; &gt; redirect</span><br><span class="line">$ cat redirect</span><br></pre></td></tr></table></figure></p>
<p>输出结果：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hello world</span><br></pre></td></tr></table></figure></p>
<p><strong>管道和重定向的区别：管道默认是连接前一个命令的输出到下一个命令的输入，重定向是需要一个文件来建立两个命令的连接。</strong></p>
<h3 id="标准错误重定向"><a href="#标准错误重定向" class="headerlink" title="标准错误重定向"></a>标准错误重定向</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 使用cat命令同时读取两个文件，其中一个存在，另一个不存在</span><br><span class="line">$ cat Documents/test.c hello.c</span><br></pre></td></tr></table></figure>
<p>结果：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line"></span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">	printf(&quot;hello world\n&quot;);</span><br><span class="line">	return 0;</span><br><span class="line">&#125;</span><br><span class="line">cat: hello.c:没有那个文件或目录</span><br></pre></td></tr></table></figure></p>
<p>按理，继续将输出重定向到一个文件，将看不到任何输出<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ cat Documents/test.c hello.c &gt; somefile</span><br></pre></td></tr></table></figure></p>
<p>然而依然出现了同样的错误信息。标准输出和标准错误虽然都指向终端屏幕，实际它们并不一样。若要隐藏某些错误或者警告，就需要用到文件描述符。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 将标准错误重定向到标准输出，再将标准输出重定向到文件，注意要将重定向到文件写到前面</span><br><span class="line">$ cat Documents/test.c hello.c &gt;somefile  2&gt;&amp;1</span><br><span class="line"># 或者只用bash提供的特殊的重定向符号&quot;&amp;&quot;将标准错误和标准输出同时重定向到文件</span><br><span class="line">$ cat Documents/test.c hello.c &amp;&gt;somefilehell</span><br></pre></td></tr></table></figure></p>
<p>注意应该在输出重定向文件描述符前加上&amp;,否则shell会当做重定向到一个文件名为1的文件中。</p>
<h3 id="使用tee命令同时重定向到多个文件"><a href="#使用tee命令同时重定向到多个文件" class="headerlink" title="使用tee命令同时重定向到多个文件"></a>使用tee命令同时重定向到多个文件</h3><p>除了西药将输出重定向到文件，也需要将信息打印在终端的话，<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ echo &apos;hello world&apos; | tee hello</span><br><span class="line">hello world</span><br><span class="line">$ cat hello</span><br><span class="line">hello world</span><br></pre></td></tr></table></figure></p>
<h3 id="永久重定向"><a href="#永久重定向" class="headerlink" title="永久重定向"></a>永久重定向</h3><p>之前的操作都是临时性的，若要实现永久有效，例如在一个脚本中，需要在某一部分的命令的输出全部进行重定向，并不需要在每个命令上加上临时重定向的操作，使用<code>exec</code>命令即可。<code>exec</code>命令是使用指定的命令替换当前的Shell，及使用一个进程替换当前进程，或指定新的重定向：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># 先开启一个子 Shell</span><br><span class="line">$ zsh</span><br><span class="line"># 使用exec替换当前进程的重定向，将标准输出重定向到一个文件</span><br><span class="line">$ exec 1&gt;somefile</span><br><span class="line"># 后面执行的命令的输出都将被重定向到文件中,直到退出当前子shell，或取消exec的重定向</span><br><span class="line">$ ls</span><br><span class="line">$ exit</span><br><span class="line">$ cat somefile</span><br></pre></td></tr></table></figure></p>
<h3 id="创建输出文件描述符"><a href="#创建输出文件描述符" class="headerlink" title="创建输出文件描述符"></a>创建输出文件描述符</h3><p>在Shell中有9个文件描述符。上面使用了它默认提供的0,1,2号文件描述符。查看当前Shell进程中打开的文件描述符：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ cd /dev/fd/;ls -Al</span><br></pre></td></tr></table></figure></p>
<p>使用<code>exec</code>命令创建新的文件描述符：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$ zsh</span><br><span class="line">$ exec 3&gt;somefile</span><br><span class="line"># 先进入目录再查看，否则可能不能得到正确的结果，然后再回到上一次的目录</span><br><span class="line">$ cd /dev/fd/;ls -Al;cd -</span><br><span class="line"># 注意下面的命令&gt;与&amp;之间不应该有空格，如果有空格则会出错</span><br><span class="line">$ echo &quot;this is test&quot; &gt;&amp;3</span><br><span class="line">$ cat somefile</span><br><span class="line">$ exit</span><br></pre></td></tr></table></figure></p>
<h3 id="关闭文件描述符"><a href="#关闭文件描述符" class="headerlink" title="关闭文件描述符"></a>关闭文件描述符</h3><p>例：上面打开的3号文件描述符，使用如下操作关闭它：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ exec 3&gt;&amp;-</span><br><span class="line">$ cd /dev/fd;ls -Al;cd -</span><br></pre></td></tr></table></figure></p>
<h3 id="完全屏蔽命令的输出"><a href="#完全屏蔽命令的输出" class="headerlink" title="完全屏蔽命令的输出"></a>完全屏蔽命令的输出</h3><p>Linux中有一个被称为“黑洞”的设备文件，所有导入它的数据都将被“吞噬”。<br>在类UNIX系统中，/dev/null，或称空设备，是一个特殊的设备文件，通常用于丢弃不需要的输出流，或作为用于输入流的空文件，这些操作通常由重定向完成。读取它则会立即得到一个EOF。<br>设个/dev/null屏蔽命令的输出：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ cat Documents/test.c nefile 1&gt;/dev/null 2&gt;&amp;1</span><br></pre></td></tr></table></figure></p>
<p>上述操作将得不到任何输出结果。</p>
<h3 id="使用xargs分割参数列表"><a href="#使用xargs分割参数列表" class="headerlink" title="使用xargs分割参数列表"></a>使用xargs分割参数列表</h3><p>xargs是一条UNIX和类UNIX操作系统的常用命令。作用是将参数列表转换成小块分段传递给其它命令，以避免参数列表过长。<br>当处理产生大量输出结果的命令，如find，locate和grep的结果。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ cat -d: -f1 &lt; /etc/passwd | sort | xargs echo</span><br></pre></td></tr></table></figure></p>
<p>该命令用于将<code>/etc/passwd</code>文件按<code>:</code>分割取第一个字段排序后，使用<code>echo</code>命令生成一个列表。</p>
<p>轻松一下：<br>将图片转换为 ascii 字符查看的工具 aview/asciiview，彩色的。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt-get install caca-utils</span><br><span class="line">$ cacaview &lt;pic_file&gt;</span><br><span class="line">$ cacademo</span><br><span class="line">$ cacafire</span><br></pre></td></tr></table></figure></p>
<h1 id="正则表达式基础"><a href="#正则表达式基础" class="headerlink" title="正则表达式基础"></a>正则表达式基础</h1><h2 id="正则表达式"><a href="#正则表达式" class="headerlink" title="正则表达式"></a>正则表达式</h2><p>正则表达式使用单个字符串来描述、匹配一系列符合某个句法规则的字符串。在很多文本编辑器里，正则表达式通常被用来检索、替换那些符合某个模式的文本。</p>
<p>和通配符的区别：<br>例：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">shi*</span><br></pre></td></tr></table></figure></p>
<p>正则表达式：*表示匹配前面的子表达式（这里就是它前面一个字符）零次或多次，比如它可以匹配”sh”,”shii”,”shish”,”shiishi”等等。<br>通配符：匹配通配符后面任意多个任意字符，所以它可以匹配”shiyanlou”，和”shiyanxiang”两个字符。</p>
<h3 id="基本语法"><a href="#基本语法" class="headerlink" title="基本语法"></a>基本语法</h3><p>一个正则表达式通常被称为一个模式（pattern），用来描述或匹配一系列符合某个句法规则的字符串。</p>
<h3 id="选择"><a href="#选择" class="headerlink" title="选择"></a>选择</h3><p><code>|</code>竖直分隔符表示选择，如”boy|girl”匹配”boy”或”girl”</p>
<h3 id="数量限定"><a href="#数量限定" class="headerlink" title="数量限定"></a>数量限定</h3><p>除了<code>*</code>，还有<code>+</code>，<code>?</code>，如果在一个模式中不加数量限定符则表示出现一次且仅出现一次：</p>
<ul>
<li><code>+</code>表示前面的字符必须出现至少一次（一次或多次），如，”goo+gle”可匹配”gooogle””goooogle”等；</li>
<li><code>?</code>表示前面的字符最多出现一次（0次或1次），如，”clou?r”可匹配”color”或”colour”;</li>
<li><code>*</code>表示前面的字符可以不出现，也可以出现一次或多次（0次或1次或多次），如”0*42”可匹配42、042、0042、00042等。</li>
</ul>
<h3 id="范围和优先级"><a href="#范围和优先级" class="headerlink" title="范围和优先级"></a>范围和优先级</h3><p><code>()</code>可以用来定义模式字符串的范围和优先级。如，”gr(a|e)y”等价于”gray|grey”，”(grand)?father”匹配father和grandfather(<code>?</code>将圆括号内容作为一个整体匹配)。</p>
<h3 id="语法（部分）"><a href="#语法（部分）" class="headerlink" title="语法（部分）"></a>语法（部分）</h3><p>正则表达式有多种不同的风格，下面列举一些常用的作为 PCRE 子集的适用于perl和python编程语言及grep或egrep的正则表达式匹配规则：(由于markdown表格解析的问题，下面的竖直分隔符用全角字符代替，实际使用时请换回半角字符)<br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20171209221055879?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="语法" title="">
                </div>
                <div class="image-caption">语法</div>
            </figure></p>
<h3 id="优先级"><a href="#优先级" class="headerlink" title="优先级"></a>优先级</h3><p>优先级为从上到下从左到右依次降低：<br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.blog.csdn.net/20171209221235331?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVib2ppbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="优先级" title="">
                </div>
                <div class="image-caption">优先级</div>
            </figure></p>
<p>关于正则表达式的资料：<br><a href="https://zh.wikipedia.org/wiki/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F" target="_blank" rel="noopener">正则表达式wiki</a><br><a href="http://www.greenend.org.uk/rjk/tech/regexp.html" target="_blank" rel="noopener">几种正则表达式引擎的语法差异</a><br><a href="https://en.wikipedia.org/wiki/Comparison_of_regular_expression_engines" target="_blank" rel="noopener">各语言各平台对正则表达式的支持</a></p>
<p>regex思维导图：<br><a href="https://dn-anything-about-doc.qbox.me/linux_base/RegularExpression.png" target="_blank" rel="noopener">regex思维导图</a></p>
<h2 id="grep模式匹配命令"><a href="#grep模式匹配命令" class="headerlink" title="grep模式匹配命令"></a>grep模式匹配命令</h2><h3 id="基本操作"><a href="#基本操作" class="headerlink" title="基本操作"></a>基本操作</h3><p><code>grep</code>命令用于打印输出文本中匹配的模式串，它使用正则表达式作为模式匹配的条件。它支持三种正则表达式引擎，分别用三个参数指定：<br>参数    说明<br>-E    POSIX扩展正则表达式，ERE<br>-G    POSIX基本正则表达式，BRE<br>-P    Perl正则表达式，PCRE</p>
<p>常用参数：<br>参数    说明<br>-b    将二进制文件作为文本来进行匹配<br>-c    统计以模式匹配的数目<br>-i    忽略大小写<br>-n    显示匹配文本所在行的行号<br>-v    反选，输出不匹配行的内容<br>-r    递归匹配查找<br>-A n    n为正整数，表示after的意思，除了列出匹配行之外，还列出后面的n行<br>-B n    n为正整数，表示before的意思，除了列出匹配行之外，还列出前面的n行<br>–color=auto    将输出中的匹配项设置为自动颜色显示</p>
<p>注：大多数发行版中是默认了grep的颜色的，可通过参数指定或修改<code>GREP_COLOR</code>环境变量。</p>
<h3 id="使用正则表达式"><a href="#使用正则表达式" class="headerlink" title="使用正则表达式"></a>使用正则表达式</h3><p>基本正则表达式，BRE</p>
<ul>
<li><p>位置<br>查找<code>/etc/group</code>文件中以”helloworld”为开头的行</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ grep &apos;helloworld&apos; /etc/group</span><br><span class="line">$ grep &apos;helloworld&apos; /etc/group</span><br></pre></td></tr></table></figure>
</li>
<li><p>数量</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># 将匹配以&apos;z&apos;开头以&apos;o&apos;结尾的所有字符串</span><br><span class="line">$ echo &apos;zero\nzo\nzoo&apos; | grep &apos;z.*o&apos;</span><br><span class="line"># 将匹配以&apos;z&apos;开头以&apos;o&apos;结尾，中间包含一个任意字符的字符串</span><br><span class="line">$ echo &apos;zero\nzo\nzoo&apos; | grep &apos;z.o&apos;</span><br><span class="line"># 将匹配以&apos;z&apos;开头,以任意多个&apos;o&apos;结尾的字符串</span><br><span class="line">$ echo &apos;zero\nzo\nzoo&apos; | grep &apos;zo*&apos;</span><br></pre></td></tr></table></figure>
</li>
</ul>
<p><code>\n</code>为换行符。</p>
<ul>
<li>选择<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"># grep默认是区分大小写的，这里将匹配所有的小写字母</span><br><span class="line">$ echo &apos;1234\nabcd&apos; | grep &apos;[a-z]&apos;</span><br><span class="line"># 将匹配所有的数字</span><br><span class="line">$ echo &apos;1234\nabcd&apos; | grep &apos;[0-9]&apos;</span><br><span class="line"># 将匹配所有的数字</span><br><span class="line">$ echo &apos;1234\nabcd&apos; | grep &apos;[[:digit:]]&apos;</span><br><span class="line"># 将匹配所有的小写字母</span><br><span class="line">$ echo &apos;1234\nabcd&apos; | grep &apos;[[:lower:]]&apos;</span><br><span class="line"># 将匹配所有的大写字母</span><br><span class="line">$ echo &apos;1234\nabcd&apos; | grep &apos;[[:upper:]]&apos;</span><br><span class="line"># 将匹配所有的字母和数字，包括0-9,a-z,A-Z</span><br><span class="line">$ echo &apos;1234\nabcd&apos; | grep &apos;[[:alnum:]]&apos;</span><br><span class="line"># 将匹配所有的字母</span><br><span class="line">$ echo &apos;1234\nabcd&apos; | grep &apos;[[:alpha:]]&apos;</span><br></pre></td></tr></table></figure>
</li>
</ul>
<p>下面包含完整的特殊符号及说明：<br>特殊符号    说明<br>[:alnum:]    代表英文大小写字母及数字，亦即 0-9, A-Z, a-z<br>[:alpha:]    代表任何英文大小写字母，亦即 A-Z, a-z<br>[:blank:]    代表空白键与 [Tab] 按键两者<br>[:cntrl:]    代表键盘上面的控制按键，亦即包括 CR, LF, Tab, Del.. 等等<br>[:digit:]    代表数字而已，亦即 0-9<br>[:graph:]    除了空白字节 (空白键与 [Tab] 按键) 外的其他所有按键<br>[:lower:]    代表小写字母，亦即 a-z<br>[:print:]    代表任何可以被列印出来的字符<br>[:punct:]    代表标点符号 (punctuation symbol)，亦即：” ‘ ? ! ; : # $…<br>[:upper:]    代表大写字母，亦即 A-Z<br>[:space:]    任何会产生空白的字符，包括空白键, [Tab], CR 等等<br>[:xdigit:]    代表 16 进位的数字类型，因此包括： 0-9, A-F, a-f 的数字与字节<br>注意：之所以要使用特殊符号，是因为上面的[a-z]不是在所有情况下都管用，这还与主机当前的语系有关，即设置在LANG环境变量的值，zh_CN.UTF-8的话[a-z]，即为所有小写字母，其它语系可能是大小写交替的如，”a A b B…z Z”，[a-z]中就可能包含大写字母。所以在使用[a-z]时请确保当前语系的影响，使用[:lower:]则不会有这个问题。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 排除字符</span><br><span class="line">$ $ echo &apos;geek\ngood&apos; | grep &apos;[^o]&apos;</span><br></pre></td></tr></table></figure></p>
<p>注意:当^放到中括号内为排除字符，否则表示行首。</p>
<p>扩展正则表达式，ERE<br>通过<code>grep</code>使用扩展正则表达式需加上<code>-E</code>参数，或使用<code>egrep</code>。</p>
<ul>
<li><p>数量</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 只匹配&quot;zo&quot;</span><br><span class="line">$ echo &apos;zero\nzo\nzoo&apos; | grep -E &apos;zo&#123;1&#125;&apos;</span><br><span class="line"># 匹配以&quot;zo&quot;开头的所有单词</span><br><span class="line">$ echo &apos;zero\nzo\nzoo&apos; | grep -E &apos;zo&#123;1,&#125;&apos;</span><br></pre></td></tr></table></figure>
</li>
<li><p>选择</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 匹配&quot;www.shiyanlou.com&quot;和&quot;www.google.com&quot;</span><br><span class="line">$ echo &apos;www.shiyanlou.com\nwww.baidu.com\nwww.google.com&apos; | grep -E &apos;www\.(shiyanlou|google)\.com&apos;</span><br><span class="line"># 或者匹配不包含&quot;baidu&quot;的内容</span><br><span class="line">$ echo &apos;www.shiyanlou.com\nwww.baidu.com\nwww.google.com&apos; | grep -Ev &apos;www\.baidu\.com&apos;</span><br></pre></td></tr></table></figure>
</li>
</ul>
<p><code>.</code>有特殊含义，需转义。</p>
<h2 id="sed流编辑器"><a href="#sed流编辑器" class="headerlink" title="sed流编辑器"></a>sed流编辑器</h2><p><code>sed</code>工具在 man 手册里面的全名为”sed - stream editor for filtering and transforming text”，意即，用于过滤和转换文本的流编辑器。</p>
<p>前面的”vi/vim(编辑器之神)”,”emacs(神的编辑器)”,”gedit”编辑器，sed与上述的最大不同之处在于它是一个非交互式的编辑器。</p>
<h3 id="sed常用参数介绍"><a href="#sed常用参数介绍" class="headerlink" title="sed常用参数介绍"></a>sed常用参数介绍</h3><p>sed 命令基本格式：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sed [参数]... [执行命令] [输入文件]...</span><br><span class="line"># 形如：</span><br><span class="line">$ sed -i &apos;1s/sad/happy/&apos; test # 表示将test文件中第一行的&quot;sad&quot;替换为&quot;happy&quot;</span><br></pre></td></tr></table></figure></p>
<p>参数    说明<br>-n    安静模式，只打印受影响的行，默认打印输入数据的全部内容<br>-e    用于在脚本中添加多个执行命令一次执行，在命令行中执行多个命令通常不需要加该参数<br>-f filename    指定执行filename文件中的命令<br>-r    使用扩展正则表达式，默认为标准正则表达式<br>-i    将直接修改输入文件内容，而不是打印到标准输出设备</p>
<h2 id="sed编辑器的执行命令"><a href="#sed编辑器的执行命令" class="headerlink" title="sed编辑器的执行命令"></a>sed编辑器的执行命令</h2><p>sed执行命令格式：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[n1][,n2]command</span><br><span class="line">[n1][~step]command</span><br><span class="line"># 其中一些命令可以在后面加上作用范围，形如：</span><br><span class="line">$ sed -i &apos;s/sad/happy/g&apos; test # g表示全局范围</span><br><span class="line">$ sed -i &apos;s/sad/happy/4&apos; test # 4表示指定行中的第四个匹配字符串</span><br></pre></td></tr></table></figure></p>
<p>其中n1,n2表示输入内容的行号，它们之间为,逗号则表示从n1到n2行，如果为～波浪号则表示从n1开始以step为步进的所有行；command为执行动作，下面为一些常用动作指令：</p>
<p>命令    说明<br>s    行内替换<br>c    整行替换<br>a    插入到指定行的后面<br>i    插入到指定行的前面<br>p    打印指定行，通常与-n参数配合使用<br>d    删除指定行</p>
<p>例：<br>先找一个文本文件：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ cp /etc/passwd ~</span><br></pre></td></tr></table></figure></p>
<p>打印指定行<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 打印2-5行</span><br><span class="line">$ nl passwd | sed -n &apos;2,5p&apos;</span><br><span class="line"># 打印奇数行</span><br><span class="line">$ nl passwd | sed -n &apos;1~2p&apos;</span><br></pre></td></tr></table></figure></p>
<p>行内替换<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 将输入文本中&quot;helloworld&quot; 全局替换为&quot;hehe&quot;,并只打印替换的那一行，注意这里不能省略最后的&quot;p&quot;命令</span><br><span class="line">$ sed -n &apos;s/helloworld/hehe/gp&apos; passwd</span><br></pre></td></tr></table></figure></p>
<p>行间替换<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ nl passwd | grep &quot;hubojing&quot;</span><br><span class="line"># 删除第21行</span><br><span class="line">$ sed -n &apos;21c\www.hubojing.me&apos; passwd</span><br><span class="line">（这里只把要删的行打印出来了，并没有真正的删除，若要删除，需使用-i参数）</span><br></pre></td></tr></table></figure></p>
<p>关于sed资料：<br><a href="http://coolshell.cn/articles/9104.html" target="_blank" rel="noopener">sed简明教程</a><br><a href="http://sed.sourceforge.net/sed1line_zh-CN.html" target="_blank" rel="noopener">sed单行脚本快速参考</a><br><a href="http://www.gnu.org/software/sed/manual/sed.html" target="_blank" rel="noopener">sed完全手册</a></p>
<h2 id="awk文本处理语言"><a href="#awk文本处理语言" class="headerlink" title="awk文本处理语言"></a>awk文本处理语言</h2><h3 id="awk介绍"><a href="#awk介绍" class="headerlink" title="awk介绍"></a>awk介绍</h3><p>简单地说，AWK是一种用于处理文本的编程语言工具。<br>在大多数linux发行版上面，实际使用的是gawk（GNU awk，awk的GNU版本）。nawk,gawk,mawk。</p>
<h3 id="基本概念"><a href="#基本概念" class="headerlink" title="基本概念"></a>基本概念</h3><p>awk所有的操作都是基于pattern(模式)—action(动作)对来完成的，如下面的形式：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ pattern &#123;action&#125;</span><br></pre></td></tr></table></figure></p>
<p>它将所有的动作操作用一对{}花括号包围起来。其中pattern通常是表示用于匹配输入的文本的“关系式”或“正则表达式”，action则是表示匹配后将执行的动作。在一个完整awk操作中，这两者可以只有其中一个，如果没有pattern则默认匹配输入的全部文本，如果没有action则默认为打印匹配内容到屏幕。</p>
<p>awk处理文本的方式，是将文本分割成一些“字段”，然后再对这些字段进行处理，默认情况下，awk以空格作为一个字段的分割符，不过这不是固定了，可以任意指定分隔符。</p>
<h3 id="awk命令基本格式"><a href="#awk命令基本格式" class="headerlink" title="awk命令基本格式"></a>awk命令基本格式</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">awk [-F fs] [-v var=value] [-f prog-file | &apos;program text&apos;] [file...]</span><br><span class="line">其中-F参数用于预先指定前面提到的字段分隔符（还有其他指定字段的方式） ，-v用于预先为awk程序指定变量，-f参数用于指定awk命令要执行的程序文件，或者在不加-f参数的情况下直接将程序语句放在这里，最后为awk需要处理的文本输入，且可以同时输入多个文本文件。</span><br></pre></td></tr></table></figure>
<p>例：<br>先用vim新建一个文本文档<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ vim test</span><br></pre></td></tr></table></figure></p>
<p>包含如下内容<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">I like linux</span><br><span class="line">www.hubojing.me</span><br></pre></td></tr></table></figure></p>
<ul>
<li>使用awk将本文内容打印到终端<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># &quot;quote&gt;&quot; 不用输入</span><br><span class="line">$ awk &apos;&#123;</span><br><span class="line">&gt; print</span><br><span class="line">&gt; &#125;&apos; test</span><br><span class="line"># 或者写到一行</span><br><span class="line">$ awk &apos;&#123;print&#125;&apos; test</span><br></pre></td></tr></table></figure>
</li>
</ul>
<p>说明:该操作省略了pattern，所以awk会默认匹配输入文本的全部内容，然后在”{}”花括号中执行动作，即print打印所有匹配项，这里是全部文本内容。</p>
<ul>
<li>将test的第一行的每个字段单独显示为一行<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">$ awk &apos;&#123;</span><br><span class="line">&gt; if(NR==1)&#123;</span><br><span class="line">&gt; print $1 &quot;\n&quot; $2 &quot;\n&quot; $3</span><br><span class="line">&gt; &#125; else &#123;</span><br><span class="line">&gt; print&#125;</span><br><span class="line">&gt; &#125;&apos; test</span><br><span class="line"></span><br><span class="line"># 或者</span><br><span class="line">$ awk &apos;&#123;</span><br><span class="line">&gt; if(NR==1)&#123;</span><br><span class="line">&gt; OFS=&quot;\n&quot;</span><br><span class="line">&gt; print $1, $2, $3</span><br><span class="line">&gt; &#125; else &#123;</span><br><span class="line">&gt; print&#125;</span><br><span class="line">&gt; &#125;&apos; test</span><br></pre></td></tr></table></figure>
</li>
</ul>
<p>NR与OFS，这两个是awk内建的变量，NR表示当前读入的记录数，可简单的理解为当前处理的行数，OFS表示输出时的字段分隔符，默认为” “空格。将字段分隔符设置为\n换行符，所以第一行原本以空格为字段分隔的内容就分别输出到单独一行了。然后是$N其中N为相应的字段号，这也是awk的内建变量，它表示引用相应的字段，因为这里第一行只有三个字段，所以只引用到了$3。除此之外另一个这里没有出现的$0，它表示引用当前记录（当前行）的全部内容。</p>
<ul>
<li>将test的第二行的以点为分段的字段换成以空格为分隔<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">$ awk -F&apos;.&apos; &apos;&#123;</span><br><span class="line">&gt; if(NR==2)&#123;</span><br><span class="line">&gt; print $1 &quot;\t&quot; $2 &quot;\t&quot; $3</span><br><span class="line">&gt; &#125;&#125;&apos; test</span><br><span class="line"></span><br><span class="line"># 或者</span><br><span class="line">$ awk &apos;</span><br><span class="line">&gt; BEGIN&#123;</span><br><span class="line">&gt; FS=&quot;.&quot;</span><br><span class="line">&gt; OFS=&quot;\t&quot;  # 如果写为一行，两个动作语句之间应该以&quot;;&quot;号分开  </span><br><span class="line">&gt; &#125;&#123;</span><br><span class="line">&gt; if(NR==2)&#123;</span><br><span class="line">&gt; print $1, $2, $3</span><br><span class="line">&gt; &#125;&#125;&apos; test</span><br></pre></td></tr></table></figure>
</li>
</ul>
<p>-F参数，它是用来预先指定待处理记录的字段分隔符。需注意除了指定OFS我们还可以在print 语句中直接打印特殊符号如这里的\t，print打印的非变量内容都需要用””一对引号包围起来。上面另一个版本，展示了实现预先指定变量分隔符的另一种方式，即使用BEGIN，就这个表达式指示了，其后的动作将在所有动作之前执行，这里是FS赋值了新的”.”点号代替默认的” “空格。</p>
<h3 id="awk常用的内置变量"><a href="#awk常用的内置变量" class="headerlink" title="awk常用的内置变量"></a>awk常用的内置变量</h3><p>变量名    说明<br>FILENAME    当前输入文件名，若有多个文件，则只表示第一个。如果输入是来自标准输入，则为空字符串<br>$0    当前记录的内容<br>$N    N表示字段号，最大值为NF变量的值<br>FS    字段分隔符，由正则表达式表示，默认为” “空格<br>RS    输入记录分隔符，默认为”\n”，即一行为一个记录<br>NF    当前记录字段数<br>NR    已经读入的记录数<br>FNR    当前输入文件的记录数，请注意它与NR的区别<br>OFS    输出字段分隔符，默认为” “空格<br>ORS    输出记录分隔符，默认为”\n”</p>
<p>awk相关资料：<br><a href="http://awk.readthedocs.org/en/latest/chapter-one.html" target="_blank" rel="noopener">awk程序设计语言</a><br><a href="https://coolshell.cn/articles/9070.html" target="_blank" rel="noopener">awk简明教程</a><br><a href="http://www.gnu.org/software/gawk/manual/gawk.html" target="_blank" rel="noopener">awk用户指南</a></p>
<p>一个学习vim的游戏<a href="https://vim-adventures.com/" target="_blank" rel="noopener">vim大冒险</a></p>
<h1 id="Linux下软件安装"><a href="#Linux下软件安装" class="headerlink" title="Linux下软件安装"></a>Linux下软件安装</h1><p>在不同的linux发行版上面在线安装方式会有一些差异包括使用的命令及它们的包管理工具，本文基于ubuntu的，所以涉及的在线安装方式将只适用于ubuntu发行版，或其它基于ubuntu的发行版如国内的ubuntukylin(优麒麟)，ubuntu又是基于debian的发行版，它使用的是debian的包管理工具dpkg，所以一些操作也适用与debian。而在其它一些采用其它包管理工具的发行版如redhat，centos,fedora等将不适用(redhat和centos使用rpm)。</p>
<p>例：比如安装一个软件，名字叫做 w3m(w3m是一个命令行的简易网页浏览器)，那么输入如下命令：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt-get install w3m</span><br></pre></td></tr></table></figure></p>
<p>注意:如果在安装一个软件之后，无法立即使用Tab键补全这可命令，可尝试先执行source ~/.zshrc，然后就可以使用补全操作。</p>
<h2 id="apt包管理工具介绍"><a href="#apt包管理工具介绍" class="headerlink" title="apt包管理工具介绍"></a>apt包管理工具介绍</h2><p>APT是Advance Packaging Tool（高级包装工具）的缩写，是Debian及其派生发行版的软件包管理器，APT可以自动下载，配置，安装二进制或者源代码格式的软件包，因此简化了Unix系统上管理软件的过程。APT最早被设计成dpkg的前端，用来处理deb格式的软件包。现在经过APT-RPM组织修改，APT已经可以安装在支持RPM的系统管理RPM包。这个包管理器包含以 apt- 开头的的多个工具，如 <code>apt-get</code> <code>apt-cache</code> <code>apt-cdrom</code>等，在Debian系列的发行版中使用。<br>当执行安装操作时，首先apt-get 工具会在本地的一个数据库中搜索关于 w3m 软件的相关信息，并根据这些信息在相关的服务器上下载软件安装。<br>需定期从服务器上下载一个软件包列表，使用<code>sudo apt-get update</code> 命令来保持本地的软件包列表是最新的（有时也需要手动执行这个操作，比如更换了软件源），而这个表里会有软件依赖信息的记录，对于软件依赖，如，安装 w3m 软件时，需要 libgc1c2 软件包才能正常工作，这时 <code>apt-get</code> 在安装软件的时候会一并安装了，以保证 w3m 能正常的工作。</p>
<h2 id="apt-get"><a href="#apt-get" class="headerlink" title="apt-get"></a>apt-get</h2><p><code>apt-get</code> 是用于处理 <code>apt</code>包的公用程序集，我们可以用它来在线安装、卸载和升级软件包等，下面列出一些<code>apt-get</code>包含的常用的一些工具：</p>
<p>工具    说明<br>install    其后加上软件包名，用于安装一个软件包<br>update    从软件源镜像服务器上下载/更新用于更新本地软件源的软件包列表<br>upgrade    升级本地可更新的全部软件包，但存在依赖问题时将不会升级，通常会在更新之前执行一次update<br>dist-upgrade    解决依赖关系并升级(存在一定危险性)<br>remove    移除已安装的软件包，包括与被移除软件包有依赖关系的软件包，但不包含软件包的配置文件<br>autoremove    移除之前被其他软件包依赖，但现在不再被使用的软件包<br>purge    与remove相同，但会完全移除软件包，包含其配置文件<br>clean    移除下载到本地的已经安装的软件包，默认保存在/var/cache/apt/archives/<br>autoclean    移除已安装的软件的旧版本软件包<br>下面是一些<code>apt-get</code>常用的参数：</p>
<p>参数    说明<br>-y    自动回应是否安装软件包的选项，在一些自动化安装脚本中使用这个参数将十分有用<br>-s    模拟安装<br>-q    静默安装方式，指定多个q或者-q=#,#表示数字，用于设定静默级别，这在你不想要在安装软件包时屏幕输出过多时很有用<br>-f    修复损坏的依赖关系<br>-d    只下载不安装<br>–reinstall    重新安装已经安装但可能存在问题的软件包<br>–install-suggests    同时安装APT给出的建议安装的软件包</p>
<h3 id="安装软件包"><a href="#安装软件包" class="headerlink" title="安装软件包"></a>安装软件包</h3><p>只需要执行apt-get install &lt;软件包名&gt;即可。<br>可使用如下方式重新安装：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt-get --reinstall install w3m</span><br></pre></td></tr></table></figure></p>
<p>在不知道软件包完整名的时候进行安装，通常是使用Tab键补全软件包名，有时候需要同时安装多个软件包，可使用正则表达式匹配软件包名进行批量安装。</p>
<h3 id="软件升级"><a href="#软件升级" class="headerlink" title="软件升级"></a>软件升级</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># 更新软件源</span><br><span class="line">$ sudo apt-get update</span><br><span class="line"># 升级没有依赖问题的软件包</span><br><span class="line">$ sudo apt-get upgrade</span><br><span class="line"># 升级并解决依赖关系</span><br><span class="line">$ sudo apt-get dist-upgrade</span><br></pre></td></tr></table></figure>
<h3 id="卸载软件"><a href="#卸载软件" class="headerlink" title="卸载软件"></a>卸载软件</h3><p><code>sudo apt-get remove w3m</code><br>或者<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 不保留配置文件的移除</span><br><span class="line">$ sudo apt-get purge w3m</span><br><span class="line"># 或者 sudo apt-get --purge remove</span><br><span class="line"># 移除不再需要的被依赖的软件包</span><br><span class="line">$ sudo apt-get autoremove</span><br></pre></td></tr></table></figure></p>
<h3 id="软件搜索"><a href="#软件搜索" class="headerlink" title="软件搜索"></a>软件搜索</h3><p>当刚知道了一个软件想下载使用，需要确认软件仓库里面有没有，需要用到搜索功能，命令如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-cache search softname1 softname2 softname3……</span><br></pre></td></tr></table></figure></p>
<p><code>apt-cache</code> 命令则是针对本地数据进行相关操作的工具，<code>search</code>顾名思义在本地的数据库中寻找有关 <code>softname1</code> <code>softname2</code> …… 相关软件的信息。</p>
<p>关于APT的资料：<br><a href="https://www.debian.org/doc/manuals/apt-howto/index.zh-cn.html#contents" target="_blank" rel="noopener">APT HowTo</a></p>
<h2 id="使用dpkg"><a href="#使用dpkg" class="headerlink" title="使用dpkg"></a>使用dpkg</h2><p>dpkg 是 Debian 软件包管理器的基础，它被伊恩·默多克创建于 1993 年。dpkg 与 RPM 十分相似，同样被用于安装、卸载和供给和 .deb 软件包相关的信息。</p>
<p>dpkg 本身是一个底层的工具。上层的工具，像是 APT，被用于从远程获取软件包以及处理复杂的软件包关系。”dpkg”是”Debian Package”的简写。<br>经常可在网络上见到以deb形式打包的软件包，就需要使用dpkg命令来安装。</p>
<p>dpkg常用参数介绍：</p>
<p>参数    说明<br>-i    安装指定deb包<br>-R    后面加上目录名，用于安装该目录下的所有deb安装包<br>-r    remove，移除某个已安装的软件包<br>-I    显示deb包文件的信息<br>-s    显示已安装软件的信息<br>-S    搜索已安装的软件包<br>-L    显示已安装软件包的目录信息</p>
<h2 id="使用dpkg安装deb软件包"><a href="#使用dpkg安装deb软件包" class="headerlink" title="使用dpkg安装deb软件包"></a>使用dpkg安装deb软件包</h2><p>先使用apt-get加上-d参数只下载不安装，下载emacs编辑器的deb包。<br>然后将第一个deb拷贝到home目录下，并使用dpkg安装<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ cp /var/cache/apt/archives/emacs24_24.3+1-2ubuntu1_amd64.deb ~</span><br><span class="line"># 安装之前参看deb包的信息</span><br><span class="line">$ sudo dpkg -I emacs24_24.3+1-2ubuntu1_amd64.deb</span><br></pre></td></tr></table></figure></p>
<p>这个包还额外依赖了一些软件包，这意味着，如果主机目前没有这些被依赖的软件包，直接使用dpkg安装可能会存在一些问题，因为dpkg并不能解决依赖关系。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 使用dpkg安装</span><br><span class="line">$ sudo dpkg -i emacs24_24.3+1-2ubuntu1_amd64.deb</span><br></pre></td></tr></table></figure></p>
<p>会报错，要解决错误，要用到<code>apt-get</code>，使用<code>-f</code>参数，修复依赖关系的安装。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt-get -f install</span><br></pre></td></tr></table></figure></p>
<p>安装成功，然后可以运行emacs程序。</p>
<h3 id="查看已安装软件包的安装目录"><a href="#查看已安装软件包的安装目录" class="headerlink" title="查看已安装软件包的安装目录"></a>查看已安装软件包的安装目录</h3><p>使用<code>dpkg -L</code>查看<code>deb</code>包目录信息<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo dpkg -L emacs</span><br></pre></td></tr></table></figure></p>
<h2 id="从二进制包安装"><a href="#从二进制包安装" class="headerlink" title="从二进制包安装"></a>从二进制包安装</h2><p>二进制包的安装比较简单，我们需要做的只是将从网络上下载的二进制包解压后放到合适的目录，然后将包含可执行的主程序文件的目录添加进PATH环境变量即可。</p>
<h2 id="目前linux基本操作已基本结束。"><a href="#目前linux基本操作已基本结束。" class="headerlink" title="目前linux基本操作已基本结束。"></a>目前linux基本操作已基本结束。</h2><p>感谢实验楼。</p>
]]></content>
      
        <categories>
            
            <category> 互联网 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[回归]]></title>
      <url>https://hubojing.github.io/2016/12/26/%E5%9B%9E%E5%BD%92/</url>
      <content type="html"><![CDATA[<div align="left"><br><img src="http://photocdn.sohu.com/20150910/mp31261103_1441838697557_1_th.jpeg" width="300" height="180" alt="配图" style="float:right;"><br><br><br><br>考研大战初试昨日结束，我回来写文了！<br>考研不易，且行且珍惜！<br>无论如何，人生开启新旅程！在技术的海洋里遨游吧！向成为一名优秀的工程师迈进！<br><br>　　<br> </div> ]]></content>
      
        <categories>
            
            <category> 杂谈 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 杂谈 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[上海决赛之旅 | the trip for contest in Shanghai]]></title>
      <url>https://hubojing.github.io/2016/08/27/%E4%B8%8A%E6%B5%B7%E5%86%B3%E8%B5%9B%E4%B9%8B%E6%97%85/</url>
      <content type="html"><![CDATA[<div align="left"><br><img src="https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1550073621300&di=6bac2140cd91bb374002219daa1f70f2&imgtype=0&src=http%3A%2F%2Fimg.gifhome.com%2Fgif%2Fs%2F2018%2F644d1119c7e04f89aa74d17f3ab6c47e.jpg" width="300" height="180" alt="配图" style="float:right;"><br><br><br><strong>上海决赛后的简单的感受，具体的技术方面探讨将在考研后详细更新。</strong><br><br><br></div>

<a id="more"></a>
<p>从上海比赛回来，说说几点感受：<br>1.大神技术过硬。<br>2.大神为作品倾注很多。<br>3.创意和灵感的重要性。<br>4.团队合作，找到志同道合的朋友。<br>5.大神演讲能力极强，不怯场。<br>6.自己的心态和学习程度都需要改正加强，差距是明显可见的。</p>
<p>衷心感谢学校的支持，能为学院和学校争取荣誉，同时实现自己初涉竞赛的心愿，找到自己和大神的距离，不虚此行。</p>
<p>I would like to spare my thoughts after my coming back from Shanghai for my competition.<br>1.Superiors are excellent in technology.<br>2.Superiors take times in their work.<br>3.Idea and inspiration are insignificant.<br>4.Team-work is needed,and we should find like-minded firends.<br>5.Superiors have ability in giving a speech and never afraid of it.<br>6.My attitude and learning need to be changed and improved,and the distance between superior and me is clearly to see.</p>
<p>Thank you for the support from my university,and I’m prond of doing credit to my school and university.In the meanwhile,I realise my dream for first involve in contest.<br>附自拍上海美景 P.S.the view of Shanghai<br><img src="" alt="上海"></p>
]]></content>
      
        <categories>
            
            <category> 杂谈 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 杂谈 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[说明]]></title>
      <url>https://hubojing.github.io/2016/07/16/%E8%AF%B4%E6%98%8E/</url>
      <content type="html"><![CDATA[<p><div align="left"><br><img src="http://i2.w.yun.hjfile.cn/doc/201304/bc1b70e4e74d48c4ab99e3db21a052f0.png" width="300" height="180" alt="配图" style="float:right;"></div></p>
<p>有朋友问我为何最近github和博客都没有较多的维护和更新，现作出<code>说明</code>：</p>
<p>因本人自身发展问题，正积极备考研究生考试，直至考研结束，所以github和博客的维护和更新会延缓，但<strong>不会停止维护</strong>。<br>希望完全回归时，自己能收获理想！<br>学习，永不止步。<br>望各位朋友理解！谢谢大家！</p>
]]></content>
      
        <categories>
            
            <category> 杂谈 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 杂谈 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[P图集|PS picture album]]></title>
      <url>https://hubojing.github.io/2016/06/29/P%E5%9B%BE%E9%9B%86/</url>
      <content type="html"><![CDATA[<p><div align="left"><br><img src="/images/p2.jpg" width="300" height="180" alt="配图" style="float:right;"></div></p>
<p>自从学会Photoshop这个好用的工具后，对照片的处理更得心应手了。<br>这是我的P图集。<br>I use photoshop more effectively after I learned it.<br>This is my PS picture album.</p>
<p> <br><a id="more"></a><br><strong>1</strong><br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="/images/y1.jpg" alt="原图" title="">
                </div>
                <div class="image-caption">原图</div>
            </figure><br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="/images/p1_1.jpg" alt="冷色" title="">
                </div>
                <div class="image-caption">冷色</div>
            </figure><br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="/images/p1_2.jpg" alt="暖色" title="">
                </div>
                <div class="image-caption">暖色</div>
            </figure></p>
<p><strong>2</strong><br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="/images/y2.jpg" alt="原图" title="">
                </div>
                <div class="image-caption">原图</div>
            </figure><br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="/images/p2.jpg" alt="修后" title="">
                </div>
                <div class="image-caption">修后</div>
            </figure></p>
<p>我是想调成新海诚动漫画风效果的…不过水平还欠佳……<br>I want to do it as Makoto Shinkai’s animation style,but my level just not reachs that high apparently.</p>
]]></content>
      
        <categories>
            
            <category> 互联网 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> photoshop </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Linux菜鸟初尝鲜 | First try on Linux]]></title>
      <url>https://hubojing.github.io/2016/06/14/Linux%E8%8F%9C%E9%B8%9F%E5%88%9D%E5%B0%9D%E9%B2%9C/</url>
      <content type="html"><![CDATA[<p><div align="left"><br><img src="http://news.mydrivers.com/Img/20110826/2011082609513918.jpg" width="300" height="180" alt="配图" style="float:right;"></div></p>
<p><strong>大三认真学技术打开新世界，常叹为何不早入技术门！</strong><br><strong>I have learned technology to my best in my junior time,and I feel I should step into the technological world earlier!</strong></p>
<p> <br><a id="more"></a><br>奈何大三事务多，惟愿考研考上给我又几年自学的机会……更认真地对待技术！<br>Too busy in the junior,may I can gain another several years to learn in the postgraduate stage.I will be more hard-working!<br>这一年，接触git、css、html，前端知识，尝试java，这学期又选了数据库sql，嵌入式系统Linux，还学了好用的工具Labview，这学期选的课都很实用！只是知识需要消化……</p>
<p>This year,I get to know git,css,html and fore-end knowledge,try java,and chose sql,linux and labview this semester,which are practical nowadays!Indeed,it takes time to understand them deeply.<br>一直想了解Linux，无从下手，最后还是在课堂上被老师带着走入了linux的世界。<br>Always want to know something about linux,but I just have no idea about it.Luckliy,I become to see you finally,linux.</p>
<blockquote>
<p>2016.6.22更新 Update 一要点</p>
</blockquote>
<p>昨天考完了嵌入式系统实验考试，get一个简单的要点：<br>I got a small but esstenial point in my linux exam,<br>armv4l-unknown-linux-gcc -o 开发板上的编译 winSCP’s compiler<br>gcc -o 虚拟机上的编译 VM’s compiler<br>分清两种编译器。Please make sure your compiler is right.<br>考试内容是开发板与虚拟机通信。开发板是client，虚拟机是server.（和之前的记录是相反的）<br>My exam is VM communicate with winSCP.The winCSP is client,and the VM is server.</p>
<blockquote>
<p>2016.6.14更新 Update 基础实验    熟悉Linux开发环境   Basic experiment      Be familiar with Linux development environment</p>
</blockquote>
<p>熟悉Linux开发环境，学会基于S3C2410的Linux开发环境的配置和使用。使用Linux的armv4l-unknown-linux-gcc编译，使用基于NFS方式的下载调试，了解嵌入式开发的基本过程。<br>Be familiar with Linux development environment and learn configuration of Linux development environment based on S3C2410.Use compile of armv41-unknown-linux-gcc，use download and debug based on NFS mode,to learn the embedded development process.</p>
<h1 id="实验步骤-Experiment-steps"><a href="#实验步骤-Experiment-steps" class="headerlink" title="实验步骤        Experiment steps"></a>实验步骤        Experiment steps</h1><p>1、建立工作目录 Create work directory<br>2、编写程序源代码 Write code<br>3、编写Makefile Write makefile<br>4、编译应用程序    Compile program<br>5、下载调试    Download and debug</p>
<h1 id="重难点-Important-point"><a href="#重难点-Important-point" class="headerlink" title="重难点 Important point"></a>重难点 Important point</h1><p>Makefile文件定义了一系列的规则，它指明了哪些文件需要编译，哪些文件需要先编译，哪些文件需要重新编译等等更为复杂的命令。使用它带来的好处就是自动编译，你只需要敲一个“make”命令整个工程就可以实现自动编译。<br>Makefile definite a series of rules,and it shows which files need compile,which first to be compiled,and which need recompile.The benefit is a simple “make” can finish automatic compilation.</p>
<p>mount -t nfs -o nolock 192.168.0.56:/arm2410cl /host //超级终端中执行 carried out under the super terminal<br><strong>注意：IP地址需要根据宿主PC机的实际情况修改成对应arm2410cl目录。</strong><br><strong>Attention:IP should be changed according to the real condition.</strong> </p>
<p>编译、修改程序都是在宿主机（本地PC机）上进行，不能在超级终端下进行。<br>Compile and modify the program both in the host (local PC), and it can not be carried out under the super terminal.</p>
<h1 id="课堂笔记备忘"><a href="#课堂笔记备忘" class="headerlink" title="课堂笔记备忘"></a>课堂笔记备忘</h1><h2 id="服务器与客户端通信"><a href="#服务器与客户端通信" class="headerlink" title="服务器与客户端通信"></a>服务器与客户端通信</h2><p>虚拟机上（地址192.168.1.12）VM：<br>cd /arm2410cl/<br>cd exp<br>cd basic<br>cd server（先把server.c和client.c拷入对应文件夹下 into right files）<br>ls<br>gcc -o client client.c //编译compile<br>armv41-unkown-linux-gcc -o server server.c //编译compile<br><strong>注意：修改了源文件记得要编译，保存还不够。</strong><br><strong>Attention:It is vital to compile,not just save file.</strong></p>
<p>./client<br>123456</p>
<p>开发板(地址192.168.1.121)winSCP：<br>ifconfig eth0 192.168.1.121<br>mount -t nfs -o nolock 192.168.1.12:/arm2410c1 /host （挂载mount）<br>cd /host<br>cd exp<br>cd basic<br>cd server<br>ls<br>（可以ping 192.168.1.12检查一下是否连通 test if it is linked.）<br>./server<br>123456</p>
<p>exit退出连接</p>
<p>程序只能是客户端向服务端发送信息，不能反过来。<br>Information can only be sent to the server from client which can’t be reversed because of the program setting.</p>
<p>原程序Original program：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">     char buffer[BUFFER_SIZE];</span><br><span class="line">    struct sockaddr_in client_addr;</span><br><span class="line">    socklen_t length;</span><br><span class="line">	   int conn;</span><br><span class="line">	  int len;</span><br><span class="line">	//int fork_id;</span><br><span class="line">///定义sockfd</span><br><span class="line">   int server_sockfd = socket(AF_INET,SOCK_STREAM, 0);</span><br><span class="line"> </span><br><span class="line">   ///定义sockaddr_in</span><br><span class="line">   struct sockaddr_in server_sockaddr;</span><br><span class="line">   server_sockaddr.sin_family = AF_INET;</span><br><span class="line">    server_sockaddr.sin_port = htons(MYPORT);</span><br><span class="line">    server_sockaddr.sin_addr.s_addr = htonl(INADDR_ANY);</span><br><span class="line"></span><br><span class="line">    ///bind，成功返回0，出错返回-1</span><br><span class="line">   if(bind(server_sockfd,(struct sockaddr *)&amp;server_sockaddr,sizeof(server_sockaddr))==-1)</span><br><span class="line">    &#123;</span><br><span class="line">        perror(&quot;bind&quot;);</span><br><span class="line">        exit(1);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    ///listen，成功返回0，出错返回-1</span><br><span class="line">    if(listen(server_sockfd,QUEUE) == -1)</span><br><span class="line">    &#123;</span><br><span class="line">        perror(&quot;listen&quot;);</span><br><span class="line">         exit(1);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    ///客户端套接字</span><br><span class="line">   </span><br><span class="line">   length = sizeof(client_addr);</span><br><span class="line"></span><br><span class="line">     ///成功返回非负描述字，出错返回-1</span><br><span class="line">	//while(1)</span><br><span class="line">	//&#123;</span><br><span class="line">    conn = accept(server_sockfd, (struct sockaddr*)&amp;client_addr, &amp;length);</span><br><span class="line">    if(conn&lt;0)</span><br><span class="line">     &#123;</span><br><span class="line">        perror(&quot;connect&quot;);</span><br><span class="line">         exit(1);</span><br><span class="line">     &#125;</span><br><span class="line">	fork_id=fork();</span><br><span class="line">	if(fork_id==0)</span><br><span class="line">	&#123;</span><br><span class="line">   while(1)</span><br><span class="line">     &#123;</span><br><span class="line">        memset(buffer,0,sizeof(buffer));</span><br><span class="line">       len = recv(conn, buffer, sizeof(buffer),0);</span><br><span class="line">       if(strcmp(buffer,&quot;exit\n&quot;)==0)</span><br><span class="line">           break;</span><br><span class="line">       fputs(buffer, stdout);</span><br><span class="line">        send(conn, buffer, len, 0);</span><br><span class="line">    &#125;</span><br><span class="line">    close(conn);</span><br><span class="line">    close(server_sockfd);</span><br><span class="line">	return(0);//新程序去掉了这一行</span><br><span class="line">   //exit(0);</span><br><span class="line">&#125;</span><br><span class="line">/*else</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;*/</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure></p>
<p>原程序是一个服务器只能挂载一个客户端。 The original program is a server which can only mount one client.<br>程序修改了下，使一个服务器可以挂载两个客户端（可以构建聊天系统）。 After modifing program,it can mount two clients(which can create a chat system).<br>要先连接服务器，再连接客户端。 Connect the server first,then connect the client.</p>
<p>rm server 删除server文件 delete server file<br>两端ps -a看一下是否退出。  use”ps -a” to see if the system exits.</p>
<h2 id="挂载驱动-Mount-the-drive"><a href="#挂载驱动-Mount-the-drive" class="headerlink" title="挂载驱动    Mount the drive"></a>挂载驱动    Mount the drive</h2><p>在开发板上winSCP：<br>mount -t nfs -o nolock 192.168.1.12:/arm2410cl /host<br>cd host<br>cd exp<br>cd basic<br>cd pwm_motor<br>lsmod pwm_ad.o<br>cd pwm_AD<br>insmod pwm_ad.o<br>//rmmod pwm_ad.o 删除<br>cd pwm_test<br>./test_dcm_main</p>
<p>虚拟机上VM：<br>cd pwm_motor<br>cd pwm_test<br>make clean<br>make<br>cd ..<br>cd pwm_test</p>
<h1 id="附录-客户端和服务器程序-Appendix-Client-c-amp-Server-c"><a href="#附录-客户端和服务器程序-Appendix-Client-c-amp-Server-c" class="headerlink" title="附录    客户端和服务器程序    Appendix  Client.c &amp; Server.c"></a>附录    客户端和服务器程序    Appendix  Client.c &amp; Server.c</h1><h2 id="server-c"><a href="#server-c" class="headerlink" title="server.c"></a>server.c</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;sys/types.h&gt;</span><br><span class="line"> #include &lt;sys/socket.h&gt;</span><br><span class="line"> #include &lt;stdio.h&gt;</span><br><span class="line">#include &lt;netinet/in.h&gt;</span><br><span class="line"> #include &lt;arpa/inet.h&gt;</span><br><span class="line">#include &lt;unistd.h&gt;</span><br><span class="line">#include &lt;string.h&gt;</span><br><span class="line"> #include &lt;stdlib.h&gt;</span><br><span class="line"> #include &lt;fcntl.h&gt;</span><br><span class="line">#include &lt;sys/shm.h&gt;</span><br><span class="line"></span><br><span class="line"> #define MYPORT  8887</span><br><span class="line"> #define QUEUE   20</span><br><span class="line"> #define BUFFER_SIZE 1024</span><br><span class="line"></span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">     char buffer[BUFFER_SIZE];</span><br><span class="line">    struct sockaddr_in client_addr;</span><br><span class="line">    socklen_t length;</span><br><span class="line">	   int conn;</span><br><span class="line">	  int len;</span><br><span class="line">///定义sockfd</span><br><span class="line">   int server_sockfd = socket(AF_INET,SOCK_STREAM, 0);</span><br><span class="line"> </span><br><span class="line">   ///定义sockaddr_in</span><br><span class="line">   struct sockaddr_in server_sockaddr;</span><br><span class="line">   server_sockaddr.sin_family = AF_INET;</span><br><span class="line">    server_sockaddr.sin_port = htons(MYPORT);</span><br><span class="line">    server_sockaddr.sin_addr.s_addr = htonl(INADDR_ANY);</span><br><span class="line"></span><br><span class="line">    ///bind，成功返回0，出错返回-1</span><br><span class="line">   if(bind(server_sockfd,(struct sockaddr *)&amp;server_sockaddr,sizeof(server_sockaddr))==-1)</span><br><span class="line">    &#123;</span><br><span class="line">        perror(&quot;bind&quot;);</span><br><span class="line">        exit(1);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    ///listen，成功返回0，出错返回-1</span><br><span class="line">    if(listen(server_sockfd,QUEUE) == -1)</span><br><span class="line">    &#123;</span><br><span class="line">        perror(&quot;listen&quot;);</span><br><span class="line">         exit(1);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    ///客户端套接字</span><br><span class="line">   </span><br><span class="line">   length = sizeof(client_addr);</span><br><span class="line"></span><br><span class="line">     ///成功返回非负描述字，出错返回-1</span><br><span class="line">    conn = accept(server_sockfd, (struct sockaddr*)&amp;client_addr, &amp;length);</span><br><span class="line">    if(conn&lt;0)</span><br><span class="line">     &#123;</span><br><span class="line">        perror(&quot;connect&quot;);</span><br><span class="line">         exit(1);</span><br><span class="line">     &#125;</span><br><span class="line"></span><br><span class="line">   while(1)</span><br><span class="line">     &#123;</span><br><span class="line">        memset(buffer,0,sizeof(buffer));</span><br><span class="line">       len = recv(conn, buffer, sizeof(buffer),0);</span><br><span class="line">       if(strcmp(buffer,&quot;exit\n&quot;)==0)</span><br><span class="line">           break;</span><br><span class="line">       fputs(buffer, stdout);</span><br><span class="line">        send(conn, buffer, len, 0);</span><br><span class="line">    &#125;</span><br><span class="line">    close(conn);</span><br><span class="line">    close(server_sockfd);</span><br><span class="line">   return 0;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure>
<h2 id="client-c"><a href="#client-c" class="headerlink" title="client.c"></a>client.c</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"> #include &lt;sys/types.h&gt;</span><br><span class="line"> #include &lt;sys/socket.h&gt;</span><br><span class="line"> #include &lt;stdio.h&gt;</span><br><span class="line"> #include &lt;netinet/in.h&gt;</span><br><span class="line"> #include &lt;arpa/inet.h&gt;</span><br><span class="line"> #include &lt;unistd.h&gt;</span><br><span class="line"> #include &lt;string.h&gt;</span><br><span class="line">#include &lt;stdlib.h&gt;</span><br><span class="line">#include &lt;fcntl.h&gt;</span><br><span class="line">#include &lt;sys/shm.h&gt;</span><br><span class="line"></span><br><span class="line">#define MYPORT  8887</span><br><span class="line">#define BUFFER_SIZE 1024</span><br><span class="line"></span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">    ///定义sockfd</span><br><span class="line">   int sock_cli = socket(AF_INET,SOCK_STREAM, 0);</span><br><span class="line"></span><br><span class="line">   ///定义sockaddr_in</span><br><span class="line">    struct sockaddr_in servaddr;</span><br><span class="line">    memset(&amp;servaddr, 0, sizeof(servaddr));</span><br><span class="line">    servaddr.sin_family = AF_INET;</span><br><span class="line">    servaddr.sin_port = htons(MYPORT);  ///服务器端口</span><br><span class="line">    servaddr.sin_addr.s_addr = inet_addr(&quot;192.168.1.12&quot;);  ///服务器ip</span><br><span class="line"></span><br><span class="line">    ///连接服务器，成功返回0，错误返回-1</span><br><span class="line">    if (connect(sock_cli, (struct sockaddr *)&amp;servaddr, sizeof(servaddr)) &lt; 0)</span><br><span class="line">    &#123;</span><br><span class="line">        perror(&quot;connect&quot;);</span><br><span class="line">        exit(1);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    char sendbuf[BUFFER_SIZE];</span><br><span class="line">    char recvbuf[BUFFER_SIZE];</span><br><span class="line">    while (fgets(sendbuf, sizeof(sendbuf), stdin) != NULL)</span><br><span class="line">    &#123;</span><br><span class="line">        send(sock_cli, sendbuf, strlen(sendbuf),0); ///发送</span><br><span class="line">        if(strcmp(sendbuf,&quot;exit\n&quot;)==0)</span><br><span class="line">          break;</span><br><span class="line">        recv(sock_cli, recvbuf, sizeof(recvbuf),0); ///接收</span><br><span class="line">       fputs(recvbuf, stdout);</span><br><span class="line"></span><br><span class="line">       memset(sendbuf, 0, sizeof(sendbuf));</span><br><span class="line">       memset(recvbuf, 0, sizeof(recvbuf));</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">   close(sock_cli);</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
        <categories>
            
            <category> 通信工程 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[将hexo+github博客同步托管至coding]]></title>
      <url>https://hubojing.github.io/2016/04/06/%E5%B0%86hexo-github%E5%8D%9A%E5%AE%A2%E5%90%8C%E6%AD%A5%E6%89%98%E7%AE%A1%E8%87%B3coding/</url>
      <content type="html"><![CDATA[<p><div align="left"><br><img src="http://img4.imgtn.bdimg.com/it/u=3010013829,2497003625&fm=214&gp=0.jpg" width="300" height="180" alt="配图" style="float:right;"><br> </div><br>由于百度蜘蛛把github屏蔽了，导致百度搜不到博客文章，let me feel a little unhappy，为了扩大网站收录率，我将hexo-github博客同步托管到国内coding上。<br>胡博靖的个人博客：<a href="http://hubojing.coding.me" target="_blank" rel="noopener">http://hubojing.coding.me</a><br>胡博靖的个人博客：<a href="http://hubojing.coding.me/hubojing" target="_blank" rel="noopener">http://hubojing.coding.me/hubojing</a><br>胡博靖的个人博客：<a href="http://hubojing.github.io">http://hubojing.github.io</a><br>Both right!<br><strong>外网用github，内网用coding。</strong><br><a id="more"></a></p>
<h2 id="coding创建新项目"><a href="#coding创建新项目" class="headerlink" title="coding创建新项目"></a>coding创建新项目</h2><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://7xrn7f.com1.z0.glb.clouddn.com/16-4-6/98344138.jpg" alt="创建页面" title="">
                </div>
                <div class="image-caption">创建页面</div>
            </figure>
<p>项目名称最好是和你的用户名相同，这样直接访问hubojing.coding.me即可，否则需要访问hubojing.coding.me/set-name。</p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://7xrn7f.com1.z0.glb.clouddn.com/16-4-6/74537725.jpg" alt="ssh获取" title="">
                </div>
                <div class="image-caption">ssh获取</div>
            </figure>
<p>复制后写入repo中。具体看下一步。</p>
<h2 id="config文件配置"><a href="#config文件配置" class="headerlink" title="config文件配置"></a>config文件配置</h2><p>hexo根目录文件_config.yml修改配置如下：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  <span class="built_in">type</span>: git</span><br><span class="line">  repo: </span><br><span class="line">        coding: git@github.com:hubojing/hubojing.github.io.git</span><br><span class="line">        github: git@git.coding.net:hubojing/hubojing.git</span><br></pre></td></tr></table></figure></p>
<h2 id="SSH设置"><a href="#SSH设置" class="headerlink" title="SSH设置"></a>SSH设置</h2><p>这里SSH设置和github类似。我直接用的部署github时生成的SSH。<br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://7xrn7f.com1.z0.glb.clouddn.com/16-4-6/370752.jpg" alt="coding中ssh设置" title="">
                </div>
                <div class="image-caption">coding中ssh设置</div>
            </figure><br>打开id_rsa.pub文件，复制全部内容，填写到SSH公钥一栏中，名称自定。完成后点击“添加”即可。<br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://7xrn7f.com1.z0.glb.clouddn.com/16-4-6/56664564.jpg" alt="hexo根目录下" title="">
                </div>
                <div class="image-caption">hexo根目录下</div>
            </figure></p>
<p>添加后，在git bash命令输入(我是在hexo根目录下bash here)：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@git.coding.net</span><br></pre></td></tr></table></figure></p>
<p>它会弹出一个警告，是否允许操作，输入yes就可以。<br>接着会询问你设置的密码，如果之前部署github时设置了，就输入密码，输入时频幕上是看不到任何反应的，但当你正确输入并回车后，它会显示：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Coding.net Tips : [Hello ! You<span class="string">'ve conected to Coding.net by SSH successfully! ]</span></span><br></pre></td></tr></table></figure></p>
<p>这表示你的SSH设置成功了！</p>
<h2 id="开启Pages服务"><a href="#开启Pages服务" class="headerlink" title="开启Pages服务"></a>开启Pages服务</h2><p><strong>最后一步了！</strong><br>在hexo根目录下，<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> <span class="built_in">source</span></span><br><span class="line">touch Staticfile  <span class="comment">#名字必须是Staticfile</span></span><br></pre></td></tr></table></figure></p>
<p>coding.net需要此文件来作为以静态文件部署的标志，就是说看到Staticfile就知道按照静态文件来发布。</p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://7xrn7f.com1.z0.glb.clouddn.com/16-4-6/93624849.jpg" alt="Pages服务" title="">
                </div>
                <div class="image-caption">Pages服务</div>
            </figure>
<p><strong>注意：Pages服务分支填master！因为之前配置的分支是master。否则你将看到404 Not Found！</strong>（我不会告诉你我就是这样试了好几遍才找到原因……）</p>
<hr>
<p><strong>OK!All have done!Congratulations!</strong><br>现在快去看看吧！<a href="http://hubojing.coding.me" target="_blank" rel="noopener">胡博靖的技术博客</a><br>欢迎在github上关注我：<a href="https://github.com/hubojing" target="_blank" rel="noopener">hubojing</a></p>
<h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p><a href="http://www.jianshu.com/p/7ad9d3cd4d6e" target="_blank" rel="noopener">hexo干货系列（四）</a><br><a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">hexo官网文档规范</a></p>
]]></content>
      
        <categories>
            
            <category> 互联网 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[PPT动画制作之自定义动画]]></title>
      <url>https://hubojing.github.io/2016/03/22/PPT%E5%8A%A8%E7%94%BB%E5%88%B6%E4%BD%9C%E4%B9%8B%E8%87%AA%E5%AE%9A%E4%B9%89%E5%8A%A8%E7%94%BB/</url>
      <content type="html"><![CDATA[<div align="left"><br><img src="https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1550072678791&di=0c47c3f4a9cb88804a442e01f9af51fc&imgtype=0&src=http%3A%2F%2Fwww.shhorse.com%2FUploadFiles%2FFCK%2F2018-08%2F6367055751626917745845165.jpg" width="300" height="180" style="float:right;"><br><br><br>　<strong>ppt动画制作笔记。</strong><br><br><br> </div>

<a id="more"></a>
<ul>
<li>3.23更新<br>昨天写完总觉得最终效果差点什么，后来发现是文字涌入时缺少了旋转效果。<br>现修改完整。<br>附上最新GIF图：（可看出差异）<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://i4.tietuku.cn/63240837be6edf98.gif" alt="修改后" title="">
                </div>
                <div class="image-caption">修改后</div>
            </figure>
</li>
</ul>
<hr>
<p>话不多说，先看效果：<br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://i13.tietuku.cn/b83ea174d690471a.gif" alt="闪烁背景和文字涌入特效" title="">
                </div>
                <div class="image-caption">闪烁背景和文字涌入特效</div>
            </figure></p>
<p>该动画分为两部分：<strong>闪烁背景+文字涌入特效</strong></p>
<h2 id="闪烁背景"><a href="#闪烁背景" class="headerlink" title="闪烁背景"></a>闪烁背景</h2><p><strong> 步骤：</strong></p>
<h3 id="改个色"><a href="#改个色" class="headerlink" title="改个色"></a>改个色</h3><p>（背景色）</p>
<h3 id="添个形"><a href="#添个形" class="headerlink" title="添个形"></a>添个形</h3><p>（用基本形状添加）</p>
<h3 id="改设置"><a href="#改设置" class="headerlink" title="改设置"></a>改设置</h3><p>（形状外框透明、选择颜色）</p>
<h3 id="复个制"><a href="#复个制" class="headerlink" title="复个制"></a>复个制</h3><p>（多次复制，铺满画布）</p>
<h3 id="改大小"><a href="#改大小" class="headerlink" title="改大小"></a>改大小</h3><p>（不能每个形状一样大，那样闪烁不自然）</p>
<h3 id="改透度"><a href="#改透度" class="headerlink" title="改透度"></a>改透度</h3><p>（使闪烁更自然）</p>
<h3 id="添动画"><a href="#添动画" class="headerlink" title="添动画"></a>添动画</h3><p>（全选统一添加“渐变”动作）</p>
<h3 id="调时间"><a href="#调时间" class="headerlink" title="调时间"></a>调时间</h3><p>（显示高级进程表，调整时长，不要都从最开始出现；从“之前”开始）</p>
<p>完成。</p>
<hr>
<h2 id="文字涌入特效"><a href="#文字涌入特效" class="headerlink" title="文字涌入特效"></a>文字涌入特效</h2><p><strong>步骤：</strong></p>
<h3 id="抠个字"><a href="#抠个字" class="headerlink" title="抠个字"></a>抠个字</h3><p>（用PS写几个需要的文字，依次用魔棒选中每个文字，同时复制粘贴到另一图层，然后用<strong>裁剪</strong>工具剪到合适大小，另存）</p>
<h3 id="插个图"><a href="#插个图" class="headerlink" title="插个图"></a>插个图</h3><h3 id="复个制-1"><a href="#复个制-1" class="headerlink" title="复个制"></a>复个制</h3><p>（3-4次）</p>
<h3 id="围一圈"><a href="#围一圈" class="headerlink" title="围一圈"></a>围一圈</h3><h3 id="调大小"><a href="#调大小" class="headerlink" title="调大小"></a>调大小</h3><h3 id="添动画-1"><a href="#添动画-1" class="headerlink" title="添动画"></a>添动画</h3><p>（外围一圈加退出中的“缩放”，缩小到屏幕中心。中间加“渐变式缩放”，下面文字“飞入”和强调里的“陀螺旋”）</p>
<h3 id="调时间-1"><a href="#调时间-1" class="headerlink" title="调时间"></a>调时间</h3><p>（时间控制好，先缩放，在渐变式缩放，最后飞入）</p>
<p>完工。</p>
]]></content>
      
        <categories>
            
            <category> 互联网 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> PPT动画 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[显示技术蹭课笔记 | Display Techique Learning Note]]></title>
      <url>https://hubojing.github.io/2016/03/17/%E6%98%BE%E7%A4%BA%E6%8A%80%E6%9C%AF%E8%B9%AD%E8%AF%BE%E7%AC%94%E8%AE%B0/</url>
      <content type="html"><![CDATA[<p><div align="left"><br><img src="http://img10.360buyimg.com/popWaterMark/g13/M02/09/0C/rBEhUlKdmzIIAAAAAAA7TyA5YywAAGS_wDaFdAAADtn918.jpg" width="300" height="180" alt="配图" style="float:right;"></div></p>
<p><strong>蹭课，科普为主。顺便复习一些基础电路知识。</strong><br><strong>I am not a student of this class but want to listen to the lecture for popularization of science to myself.By the way reviewing some of the basic circuit knowledge.</strong><br>给这篇文章写英译好辛苦……<br>It is hard to write English translation for this article.<br><strong>肖大大图书镇楼！</strong><br><strong>Uncle Xiao’s book is superior!</strong></p>
<p> <br><a id="more"></a> </p>
<blockquote>
<p>2016.5.20 更新 Update</p>
</blockquote>
<h1 id="显示技术实验部分-Experimental-part"><a href="#显示技术实验部分-Experimental-part" class="headerlink" title="显示技术实验部分 Experimental part"></a>显示技术实验部分 Experimental part</h1><p>学会了怎么把电路图和实物电路联系起来。学会了就好简单……果然授人以鱼不如授人以渔！<br>Learnt how to link circuit diagram to the phhysical diagram.It’s easy enough.Give a man a fish and you feed him for a day.Teach him how to fish and you feed him for a lifetime.<br>但不敢去测量上万伏的高压……为自身的局限性感到难过。<br>But I dare not to measure the high pressure of tens of thousands of volts.I feel terrible for my own limitation.</p>
<h1 id="几个名词-Several-noums"><a href="#几个名词-Several-noums" class="headerlink" title="几个名词 Several noums"></a>几个名词 Several noums</h1><h2 id="声表面波滤波器-Surface-acoustic-wave-filter"><a href="#声表面波滤波器-Surface-acoustic-wave-filter" class="headerlink" title="声表面波滤波器 Surface acoustic wave filter"></a>声表面波滤波器 Surface acoustic wave filter</h2><p>声表面波滤波器(SAWF，surface acoustic wave filter)是利用石英、铌酸锂、钛酸钡晶体具有压电效应的性质做成的。所谓压电效应，即是当晶体受到机械作用时，将产生与压力成正比的电场的现象。具有压电效应的晶体，在受到电信号的作用时，也会产生弹性形变而发出机械波（声波），即可把电信号转为声信号。由于这种声波只在晶体表面传播，故称为声表面波。<br>SAWF uses the piezoelectric effect property of quartz,lithium niobate,barium titanate.As for piezoelectric effect,when the crystal is mechanical functioned,it will produce the electric field which is directly proportional to the pressure.Crystal which has the piezoelectric effect,when the electrical signal is added,will generate a elastic deformation and send a mechanical wave(sonic wave),so it converts electrical signal to acoustic signal.It is called surface acoustic wave for this wave only transmit on the crystal surface.</p>
<h2 id="行可变电容-Line-variable-capacitor"><a href="#行可变电容-Line-variable-capacitor" class="headerlink" title="行可变电容 Line variable capacitor"></a>行可变电容 Line variable capacitor</h2><p><img src="http://7xray0.com1.z0.glb.clouddn.com/16-5-20/33612917.jpg" width="600" height="400" alt="行可变电容"></p>
<h2 id="行可变电感-Row-variable-inductor"><a href="#行可变电感-Row-variable-inductor" class="headerlink" title="行可变电感 Row variable inductor"></a>行可变电感 Row variable inductor</h2><p><img src="http://www.liheng-dg.cn/uploads/allimg/140221/1-14022115052H18.png" width="600" height="400" alt="行可变电感"></p>
<h2 id="中周-Medium-cycle-transformer"><a href="#中周-Medium-cycle-transformer" class="headerlink" title="中周 Medium cycle transformer"></a>中周 Medium cycle transformer</h2><p>电视中周：电视机里的中周标准称呼是中频变压器。<br>The standard name is medium cycle transformer.<br><img src="http://img.qy6.com/new5/szvena/1313633487.jpg" width="600" height="400" alt="中周"></p>
<p>电路图上，三极管外带虚线的圆圈是指带散热的三极管，同时接地表屏蔽。<br>On the circuit diagram,the dotted line with the circle triode refers to the triode with heat pipe,which is at earth potential to shield.</p>
<h1 id="实验现场"><a href="#实验现场" class="headerlink" title="实验现场"></a>实验现场</h1><p><img src="http://7xray0.com1.z0.glb.clouddn.com/16-5-20/58196995.jpg" width="400" height="250" alt="电路图"> <img src="http://7xray0.com1.z0.glb.clouddn.com/16-5-20/69333137.jpg" width="400" height="250" alt="故障示教板"> <img src="http://7xray0.com1.z0.glb.clouddn.com/16-5-20/29028249.jpg" width="400" height="250" alt="实验"> （不配四张图，强迫症不要打我哟~）</p>
<blockquote>
<p>2016.5.17 更新 Update<br>大部分资料来自维基百科。<br>Most of the information comes from Wikipedia.</p>
</blockquote>
<h1 id="平板显示器-Flat-panel-display"><a href="#平板显示器-Flat-panel-display" class="headerlink" title="平板显示器 Flat panel display"></a>平板显示器 Flat panel display</h1><h2 id="简介-Brief-introduction"><a href="#简介-Brief-introduction" class="headerlink" title="简介 Brief introduction"></a>简介 Brief introduction</h2><p>平板屏幕包含多种科技，使显示器（video display）比传统电视机（traditional television）或显示器（通常由阴极射线管制成）更加轻薄，厚度通常小于4英寸（100 mm）。<br>Flat panel display includes many technologies,which makes video display lighter than traditional television or display(usually made of cathode ray tube),and thickness is usually less than 4 inches.</p>
<h2 id="种类-Type"><a href="#种类-Type" class="headerlink" title="种类 Type"></a>种类 Type</h2><p>DLP (数位光处理) Digital light processing<br>等离子显示器 Plasma panel display<br>液晶显示器（LCDs） Liquid crystal display<br>薄膜晶体管液晶显示器（TFT-LCDs） Thin film transistor liquid crystal display<br>有机发光二极管显示器（OLEDs） Organic light emitting diode display<br>发光二极管显示器（LED） Light-emitting diode display<br>电致发光显示器（ELDs） Electroluminescent display<br>表面传导电子发射显示器（SEDs） Surface conduction electron emission display<br>场发射显示器（FEDs）（ 纳米-发射显示器（NEDs）） Field emission display</p>
<p>名字多么洋气~<br>The names has foreign flavour~</p>
<p>这张图有点意思~<br>This picture is kind of interesting~<br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://7xray0.com1.z0.glb.clouddn.com/16-5-17/60641952.jpg" alt="显示器" title="">
                </div>
                <div class="image-caption">显示器</div>
            </figure></p>
<h1 id="CRT显示器-CRT-display"><a href="#CRT显示器-CRT-display" class="headerlink" title="CRT显示器 CRT display"></a>CRT显示器 CRT display</h1><h2 id="简介-Brief-introduction-1"><a href="#简介-Brief-introduction-1" class="headerlink" title="简介 Brief introduction"></a>简介 Brief introduction</h2><p>阴极射线管（Cathode ray tube，缩写：CRT，又称“显像管”、布劳恩管）是一种用于显示系统的物理仪器，曾广泛应用于示波器、电视机和显示器上。它是利用阴极电子枪发射电子，在阳极高压的作用下，射向萤光屏，使萤光粉发光，同时电子束在偏转磁场的作用下，作上下左右的移动来达到扫描的目的。早期的阴极射线管仅能显示光线的强弱，展现黑白画面。而彩色阴极射线管具有红、绿色和蓝色三支电子枪，三支电子枪同时发射电子打在屏幕玻璃上磷化物上来显示颜色。<br>由于它笨重、耗电且较占空间，2000年代起几乎被轻巧、省电且省空间的液晶显示器取代。阴极射线管的市场剩下极重视色彩表现及低温环境下等特殊用途。<br>Cathode ray tube,is a physical instrument which uses to display system.It used to be applied to oscilloscope,TV and display.It uses the cathode electron gun for electron emission.Under the action of anode high voltage,it emits to the screen,which makes powder luminesce.At the same time, the electron beam moves up and down to reach the purpose of scanning by the action of the deflection magnetic field.Early cathode ray tube can only show the intensity of light,and to show black and white picture.Color cathode ray tube have red, green and blue electron guns, and this three electron guns emit electrons to hit the glass screen’s phosphides to show color.<br>Because of its bulky, power consumption and space waste,light, power saving and space saving LCD monitor was used in the 2000s instead.A cathode ray tube market left pole attached color performance and low temperature environment and other special purposes.</p>
<p><strong>CRT在高精尖领域仍扮演着重要角色。</strong><br><strong>CRT still plays an important role in the high-tech field.</strong></p>
<h1 id="液晶显示器-liquid-crystal-display"><a href="#液晶显示器-liquid-crystal-display" class="headerlink" title="液晶显示器 liquid-crystal display"></a>液晶显示器 liquid-crystal display</h1><h2 id="简介-Brief-introduction-2"><a href="#简介-Brief-introduction-2" class="headerlink" title="简介 Brief introduction"></a>简介 Brief introduction</h2><p>液晶显示器（英语：liquid-crystal display，缩写：LCD）为平面薄型的显示设备，由一定数量的彩色或黑白像素组成，放置于光源或者反射面前方。液晶显示器功耗低，因此倍受工程师青睐，适用于使用电池的电子设备。<br>Liquid-crystal display is the flat panel display device,which consists of a number of color or black and white pixels,and place in the light source or in front of the reflecting surface.</p>
<h2 id="显示原理-Revelation-principle"><a href="#显示原理-Revelation-principle" class="headerlink" title="显示原理 Revelation principle"></a>显示原理 Revelation principle</h2><p>在不加电压下，光线会沿着液晶分子的间隙前进而转折90度，所以光可通过。但加入电压后，光顺着液晶分子的间隙直线前进，因此光被滤光板所阻隔。（让我想到偏振……）<br>液晶是具有流动特性的物质，所以只需外加很微小的力量即可使液晶分子运动，以最常见普遍的向列型液晶为例，液晶分子可轻易的借着电场作用使得液晶分子转向，由于液晶的光轴与其分子轴相当一致，故可借此产生光学效果，而当加于液晶的电场移除消失时，液晶将借着其本身的弹性及黏性，液晶分子将十分迅速的恢复原来未加电场前的状态。<br>Without voltage, the light will move along the gap between the liquid crystal molecules and turn 90 degrees, so the light can pass.But after the voltage is added,light goes along the liquid crystal molecules of the gap straight forward,so the light is blocked by the filter board. (Let me think of polarization.)</p>
<h1 id="等离子显示器-Plasma-Display-Panel"><a href="#等离子显示器-Plasma-Display-Panel" class="headerlink" title="等离子显示器 Plasma Display Panel"></a>等离子显示器 Plasma Display Panel</h1><h2 id="简介-Brief-introduction-3"><a href="#简介-Brief-introduction-3" class="headerlink" title="简介 Brief introduction"></a>简介 Brief introduction</h2><p>等离子显示器（Plasma Display Panel）又称为电浆显示屏，是一种平面显示屏幕，光线由两块玻璃之间的离子，射向磷质而发出。与液晶显示器不同，放出的气体并无水银成分，而是使用惰性气体氖及氙混合而成，这种气体是无害气体。<br>等离子显示器甚为光亮（1000 lx或以上），可显示更多种颜色，也可制造出较大面积的显示屏，最大对角可达381厘米（150吋）。等离子显示屏的对比度亦高，可制造出全黑效果，对观看电影尤其适合。显示屏厚度只有6厘米，连同其他电路板，厚度亦只有10厘米。<br>Plasma display panel is a flat display screen.Light is emitted to phosphorous by the ion between the two classes.Unlike liquid crystal display,the gas released has no mercury,it mixed inert gas such as neon,xenon and so on,which are harmless.<br>The plasma display is very bright (1000 LX or above),and it can show more colors,it also can be made big screen,which the maximum diagonal up to 381 cm (150 inches).The contrast is high, and it can create a full black effect,especially suitable for watching movies.The thickness of screen is only 6 cm,combined with other circuit boards, the thickness is only 10 cm.</p>
<h2 id="原理-Principle"><a href="#原理-Principle" class="headerlink" title="原理 Principle"></a>原理 Principle</h2><p>等离子的发光原理是在真空玻璃管中注入惰性气体或水银蒸气，加电压之后，使气体产生等离子效应，放出紫外线，激发荧光粉而产生可见光，利用激发时间的长短来产生不同的亮度。等离子显示器中，每一个像素都是三个不同颜色（三原色）的等离子发光体所产生的。由于它是每个独立的发光体在同一时间一次点亮的，所以特别清晰鲜明。等离子显示器的使用寿命约5~6万个小时。随着使用的时间的增加，其亮度会衰退。<br>The principle of plasma luminescence is to inject inert gas or mercury vapor into a vacuum glass tube.After the voltage is added, the gas is produced by the plasma effect, the ultraviolet ray is emitted, and the fluorescent powder is excited to generate visible light, and the excitation time is used to generate different brightness.In the plasma display, each pixel has three different colors (RGB) of the plasma generated by the luminous body.Since each individual light body is litted at the same time, so it is clear and bright.The service life of the plasma display is about 5~6 ten thousand hours. With the increase of the use of time, the brightness of the plasma display will decline.</p>
<p><strong>【区别】</strong>等离子显示器并不是液晶显示器。后者的显示器虽然也很轻薄，但是用的技术却是大不相同。液晶显示器通常会使用一到两个大型萤光灯或是LED当作其背光源，在背光源上面的液晶面板则是利用遮罩的原理让显示器显示出不同颜色。<br><strong>【Difference】</strong>Plasma display is not liquid crystal display.Although the latter is also very thin,the technology is different.Liquid crystal display usually use one or two large fluorescent lamp or LED as the backlight,above the backlight to the LCD panel using mask principle to show different colors.</p>
<h1 id="云电视-Cloud-TV"><a href="#云电视-Cloud-TV" class="headerlink" title="云电视 Cloud TV"></a>云电视 Cloud TV</h1><h2 id="简介-Brief-introduciton"><a href="#简介-Brief-introduciton" class="headerlink" title="简介 Brief introduciton"></a>简介 Brief introduciton</h2><p>云电视是应用云计算、云存储技术的电视产品，是云设备的一种。通俗地讲，就是用户不需要单独再为自家的电视配备所有互联网功能或内容，将电视连上网络，就可以随时从外界调取自己需要的资源或信息，比如说，可以在云电视里安装使用各种即时通讯软件，在看电视的同时，进行社交、办公等等。<br>Cloud TV,which is the application of cloud computing and cloud storage technology,is a kind of cloud devices.Generally speaking,users do not need a separate device for their own television equipped with all Internet function or information.After the TV is connected to the network,you can get what you want at any times.For example, you can install and use a variety of instant messaging software, while watching TV at the same time, social, office and so on.</p>
<h1 id="3D显示器-3D-display"><a href="#3D显示器-3D-display" class="headerlink" title="3D显示器 3D display"></a>3D显示器 3D display</h1><h2 id="简介-Brief-introduciton-1"><a href="#简介-Brief-introduciton-1" class="headerlink" title="简介 Brief introduciton"></a>简介 Brief introduciton</h2><p>传统的3D电影在荧幕上有两组图像（来源于在拍摄时的互成角度的两台摄影机），观众必须戴上偏光镜才能消除重影（让一只眼只接受一组图像），形成视差（parallax），产生立体感。利用自动立体显示（AutoSterocopic）技术，即所谓的“真3D技术”，你就不用戴上眼镜来观看立体影像了。这种技术利用所谓的“视差栅栏”，使两只眼睛分别接受不同的图像，来形成立体效果。<br>平面显示器要形成立体感的影象，必须至少提供两组相位不同的图像。其中，快门式3D技术和不闪式3D技术是如今显示器中最常使用的两种。<br>The traditional 3D movie has two sets of images on the screen (come from two cameras that are placed in angle difference),so viewers have to put on a polarizing lens to eliminate the ghost(so that a eye only accept a set of images), and form a parallax to generate a sense of three-dimensional.The use of automatic three-dimensional display (AutoSterocopic) technology, that is, the so-called “true 3D technology”, you do not have to wear glasses to watch the stereo image.This technology uses the so-called “parallax barrier”, so that the two eyes receive different images to form a three-dimensional effect.</p>
<h1 id="OLED显示器-OLED-display"><a href="#OLED显示器-OLED-display" class="headerlink" title="OLED显示器 OLED display"></a>OLED显示器 OLED display</h1><h2 id="简介-Brief-introduction-4"><a href="#简介-Brief-introduction-4" class="headerlink" title="简介 Brief introduction"></a>简介 Brief introduction</h2><p>OLED<br>有机发光二极管又称为有机电激光显示（Organic Light-Emitting Diode，OLED）。OLED显示技术具有自发光的特性，采用非常薄的有机材料涂层和玻璃基板，当有电流通过时，这些有机材料就会发光，而且OLED显示屏幕可视角度大，并且能够节省电能。<br>对于有机电激发光器件，我们可按发光材料将其分为两种: 小分子OLED和高分子OLED（也可称为PLED）。它们的差异主要表现在器件的制备工艺不同：小分子器件主要采用真空热蒸发工艺，高分子器件则采用旋转涂覆或喷墨工艺。<br>有机电激发光二极管由于同时具备自发光，不需背光源、对比度高、厚度薄、视角广、反应速度快、可用于挠曲性面板、使用温度范围广、构造及制程较简单等优异之特性，被认为是下一代的平面显示器新兴应用技术。<br>Organic Light-Emitting Diode has the characteristic of self luminescence,which uses a thin organic material coating and glass substrate.When the current pass,these material will light.Also,OLED display screen viewing angle is big, and it can save electric energy.</p>
<h2 id="发光原理-Principle-of-luminescence"><a href="#发光原理-Principle-of-luminescence" class="headerlink" title="发光原理 Principle of luminescence"></a>发光原理 Principle of luminescence</h2><p>OLED发光的颜色取决于有机发光层的材料，故厂商可由改变发光层的材料而得到所需之颜色。有源阵列有机发光显示屏具有内置的电子电路系统，因此每个像素都由一个对应的电路独立驱动。OLED具备有构造简单、自发光不需背光源、对比度高、厚度薄、视角广、反应速度快、可用于挠曲性面板、使用温度范围广等优点，技术提供了浏览照片和视频的最佳方式而且对相机的设计造成的限制较少。<br>The color of the OLED depends on the material of the organic light emitting layer, so the manufacturer can obtain the required color by changing the material of the light emitting layer.The active array organic light emitting display screen has a built-in electronic circuit system, so each pixel is driven by a corresponding circuit.The OLED has the advantages of simple structure, no need of back light source, high contrast, thin thickness, wide viewing angle, quick reaction speed, and can be used for the flexible panel and wide temperature range,and technology offers the best way to view photos and videos and to little limit to the design of the camera.</p>
<h1 id="户外大屏幕显示器-Outside-big-screen-display"><a href="#户外大屏幕显示器-Outside-big-screen-display" class="headerlink" title="户外大屏幕显示器 Outside big screen display"></a>户外大屏幕显示器 Outside big screen display</h1><p>这个范围就有点大啊……<br>This range is broad~<br>主要说来，CRT、LCD、DLP、LCOS、GLV用的较多。<br>Generally speaking,CRT、LCD、DLP、LCOS、GLV are used a lot.</p>
<blockquote>
<p>2016.3.17更新 update</p>
</blockquote>
<h1 id="记忆比较深的知识-Knowledge-deeply-remember"><a href="#记忆比较深的知识-Knowledge-deeply-remember" class="headerlink" title="记忆比较深的知识 Knowledge deeply remember"></a>记忆比较深的知识 Knowledge deeply remember</h1><p>1.白光透过棱镜分为紫、蓝、青、绿、黄、橙、红。波长依次减少。<br>White light through the prism is divided into purple, blue, green, green, yellow, orange, red.The wavelength is reduced in turn.</p>
<p>2.绝对黑体是指既不反射也不透射，完全吸收入射辐射的物体。（黑洞……）<br>The absolute black body is an object that absorbsthe incident radiation,neither reflected nor transmitted.(black hole~)</p>
<p>3.色温是表示光源光色的一种尺度。<strong>不是光源实际温度！只是一种光谱特性参量！</strong><br>Color is a representation of the actual temperature scale.<strong>Not real temperature!Just a Spectral characteristic parameter!</strong><br>例：电视屏幕是室温20℃（300K左右），但显像管显示的白颜色对应的是太阳光的那种白，那么色温是4874K！不要说温度有那么高……否则电视早就烧成灰了……<br>For example,the temperature of the TV screen is 20 ℃（about 200K）,but the white color is corresponding to the white sunlight,which color temperature is 4874K!Never to say it~if it is so hot,your TV is firing ash already.</p>
<p>4.人眼对绿色最敏感！从光谱光效率图看出……所以红绿灯用绿色，显眼啊。<br>Our eyes is sensitive to green!You can see it in spectral optical efficiency diagram.So this is why traffic light uses green color.</p>
<p>5.正好使人感到不闪烁的刷新频率称为临界闪烁频率。为45.8HZ。只要高于它，人眼就觉得不闪。<br>Make people feel the refresh rate does not flicker is called the critical flicker frequency,which is 45.8HZ.Only over it,we feel comfortable.<br>所谓市面上的不闪的电视，就是频率稍高一些的电视，如70HZ。因为部分人群的人眼敏感度较高，所以50HZ也许还是感觉到闪烁，这类人群需要不闪电视。但普通人并不需要。<br>The so-called “not flash television” in the market is a slightly higher frequency of television,70HZ,for instance.Because some people are more sensitive to it, they need “not flash TV”.But it isn’t needed in common.</p>
<p>6.没必要追求4K的分辨率指标。人眼分辨力有限，所谓分辨，是指人眼能看清的扫描的两行。（美国比中国的扫描行数还低来着……）人眼极限就只能看清大约1K左右（这样说来1080P最好咯），高于这个指标人眼就分不清两行了，所以该指标更高便显得意义不大。4K代表我们有能力做到这么清晰，但日常我们是否需要，则并不见得。所以，往往并不需要追求最高的指标，够用就好。（买电脑一个理）<br>It’s not necessary to persuit 4K resolution index for human eye resolution is limited.The resolution is the line we can see clearly.(The index in America is lower than that of China)Our eye resolution limit is to see about 1k(1080P maybe the best).If the index higher than this can not we distinguish the lines,so the higher index seems little meaning.4K means we have the ability to do it,but we don’t need it in daily life.Therefore,is not as high index as possible,but enough is alright(Buy a computer is the same way).</p>
<p>7.看电视最佳距离：电视频幕高度的4倍。（我回家特地量了一下距离……）<br>The best distance to watch TV is four times the height of the TV screen.(I measure the size at home specifically~)</p>
<p>8.CRT显像管上加了上万伏高压，所以开启和关闭电视时常有静电。（我小时候还特喜欢那种有点漂浮的感觉……）<br><strong>修电视技巧get</strong>：如果开机关机时仍能感觉到静电，那么说明显像管是好的！（来自我们修了三千台电视的super肖老师语录……哦……少碰静电，毕竟几万伏呢……小心白血病……）<br>CRT picture tube is added tens of thousands of volts,so you can feel the static electricity when open or close power supply.(I like the floating feel when I was a child~)<br><strong>KEY TO REPAIR TV</strong>If you can feel the static electricity when open or close power supply,it is obvious that the picture tube is well.(From our super Mr.Xiao’s quotations<del>well,do not touch the static electricity as little as possible.Pay attention to leukemia,it is tens of thousands of volts after all</del>)</p>
<p>9.彩色三要素：亮度、色调、色饱和度。色调与色饱和度合称为色度。<br>Three elements in color,brightness, tinge, color saturation.Tinge and color saturation are called as chromaticity.</p>
<p>10.三基色原理 The principle of three primary colors<br>（1）所有颜色可以由这三种基色按比例混合得到。（合成性）<br> (1)All colors can be made from the three primary colors mixed in proportion (synthetic).<br>（2）任意一种彩色可分解为三种基色。（分解性）<br> (2)Any color can be decomposed into three primary colors (decomposition).<br>（3）混合的亮度等于各基色亮度之和。（叠加性）<br> (3)The mixed brightness is equal to all primary colors.(addition).<br>（4）混合比例决定色调和色饱和度。（色度决定性）<br> (4)The mix proportions determine tinge and color saturation.(chromaticity determination)</p>
<p>11.三基色 Three primary colors<br>R、G、B.<br>记得小时候还学了个颜料的三原色……于是百度一下：红、黄、青<br>Always remember that there exists primary colors of pigment~so I search it.It is red,yellow and cyan.<br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://i13.tietuku.cn/bbdb0a9ed059f7db.png" alt="上图左侧为色光三原色，右侧为美术三原色" title="">
                </div>
                <div class="image-caption">上图左侧为色光三原色，右侧为美术三原色</div>
            </figure></p>
<p>12.一个公式（亮度方程） A fomula<br>Y=0.30R+0.59G+0.11B<br>例：1R+2G+2B=浅青(light cyan)<br>Why?<br>∵1R+1G+1B=白(white)<br>1G+1B=青(cyan)<br>白+青=浅青(white+cyan=light cyan)<br>这个算法莫名想笑……<br>This idea makes me inexplicably laugh~</p>
<p>13.互补色：加起来为白色的<strong>两种</strong>颜色。<br>Complementary colors,the <strong>two</strong>colors mixed up in white color. </p>
<p>14.15625！15625！15625！重要的数字说三遍！Important number should be repeated three times!<br>行扫描的频率……听到这个数字要很快的反应过来……就像3.1415926一样……<br>正程52us，逆程12us，全程64us，即行扫描周期。<br>我国现行广播电视标准规定：帧数为25HZ，一帧图像分625行传送。所以行扫描频率25X625=15625HZ……就是这样来的……<br>It is line scan frequency~everyone of us should reflect on the meaning as 3.1415926~<br>Positive trace is 52us,negative trace is 12us,the whole trace is 64us,and it is just the line scan cycle.<br>The existing provisions of broadcast standards in China,frames is 25HZ,and an image is divided into 625 transmission line.So,the line scan frequency is 25X625=15625HZ,that’s is.</p>
<p>15.对比度 Contrast<br>我之前对这个的定义确实不清楚的说……就连PS上的对比度也是怎么看着舒服怎么调……<br>对比度，通俗的讲，就是，实际的蓝天和白云的颜色，哦，是这么蓝和这么白，10000:100好了，反映到电视上，还是那么蓝和那么白！就100:1好了……让我想到比例尺。还是原来的配方，还是熟悉的味道！<br>I didn’t get it clear before,and when I used PS,the contrast is adjusted to the degree that a image how to make me comfortable.Contrast, popular speaking, that is, the actual blue sky and white clouds of color,the component of blue and white is 10000:100,for example,which reflect to TV is 100:1,just like a scale.The original formula and the similar taste!</p>
<p>16.黑白全电视信号特指视频信号。<br>Black and white television signal refers to the video signal.</p>
<p>17.基色信号-亮度信号=色差信号<br>Primary signal - luminance signal = color difference signal</p>
<p>18.绿色幅值小，易受干扰，一般传送红、蓝信号。<br>green has small  amplitude,and it is vulnerable to be interfered,it transfers red and blue signal in general.</p>
<p>19.<strong>白！黄！青！绿！紫！红！蓝！黑！</strong><br><strong>白！黄！青！绿！紫！红！蓝！黑！</strong><br><strong>白！黄！青！绿！紫！红！蓝！黑！</strong><br><strong>WHITE!YELLOW!CYAN!GREEN!PURPLE!RED!BLUE!BLACK!</strong><br>标准彩条测试信号。常识背背背！<br>It is the standard color test signal.We should recite it as common sense.</p>
<p>20.一个记住的电路 A curcuit to remember<br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="/images/3.jpg" alt="亮度调节电路和对比度调节电路" title="">
                </div>
                <div class="image-caption">亮度调节电路和对比度调节电路</div>
            </figure><br>放大电路……如此的熟悉……<br>So familiar with it.<br>Rw1滑动调节对比度，Rw2滑动调节亮度！<br>Rw1 to adjust contrast,and Rw2 to adjust brightness!<br>感谢无私的好友把她上学期的书借给了我！<br>Thanks my selfless friend for sending her books to me！</p>
<p>21.指标如果要做到最顶级首选CRT。为什么我们现在都用薄的液晶啊什么的，因为<strong>日常使用不需要很高的指标</strong>，并且方便使用。<br>If you want to achieve the top indicators,CRT is preferred.You may ask why we use today is liquid crystal,the reason is <strong>Top indicators are not needed in daily use</strong>,and it is convinient.</p>
<p>22.<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="/images/4.jpg" alt="阻尼式行输出级典型电路" title="">
                </div>
                <div class="image-caption">阻尼式行输出级典型电路</div>
            </figure><br>铅笔写的是我的笔记，乱max……<br>The writing is my note,you can ignore it~<br>几个专有名词要知道：阻尼二极管、逆程电容、校正电容、行输出管（行管）、行输出变压器（高压包）、行推动变压器<br>Several professional noums,Damping diode, reverse pass capacitor, correction capacitor, line output tube (line tube), line output transformer (high voltage package), line drive transformer.<br>扩展：硅堆、桥堆<br>Extension: silicon stack, bridge</p>
<h1 id="段子或注意的地方-Something-fun-or-details-It-may-lost-its-fun-when-translated-into-English"><a href="#段子或注意的地方-Something-fun-or-details-It-may-lost-its-fun-when-translated-into-English" class="headerlink" title="段子或注意的地方 Something fun or details (It may lost its fun when translated into English)"></a>段子或注意的地方 Something fun or details (It may lost its fun when translated into English)</h1><p>1.“B光源（色温4874K）近似为中午太阳光的光谱。”类似说法都不够准确，但经典教材上往往都采取这样模糊的说法。</p>
<p>2.用点燃的报纸烘烤灯丝……是为了激发电子发射。有个问题是灯坏了还是什么的，总之就是不行→_→因为激发不了电子发射。（写此文时突然短路……）</p>
<p>3.有个单位叫熙提……它的缩写………………自行百度或查书吧。（保持优雅）</p>
<p>4.隔壁的王叔叔……</p>
<p>5.南京的声音优雅的车站播音员……强调音色的问题……</p>
<p>6.列宁……（原名弗拉基米尔·伊里奇·乌里扬诺夫）（我竟然还百度了一下……）</p>
<p>7.小日本……</p>
<p>偏题了……段子很多就不说了……注意的问题是重点！咳咳~</p>
<hr>
<p>回看本文…………简直就是帮他们要考试的勾了一遍重点（除了一些公式和计算……）我真是大写的可爱啊！啊。。。<br>I AM CUTE~<br>P.S.不吹不黑  上课就要像这样愉悦才是好的课堂  快乐学习不是梦~<br>Pleasant classroom atmosphere is a excellent class.Happy learning is not a dream.<br>真是一趟愉快的蹭课之旅~<br>It was a pleasant trip to the class.<br><strong>感谢老师 感谢校园 感谢这个和平的时代</strong><br><strong>thanks for the teacher,thanks for the campus,thanks for this peaceful time.</strong></p>
<hr>
]]></content>
      
        <categories>
            
            <category> 通信工程 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 显示技术 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[java自学笔记]]></title>
      <url>https://hubojing.github.io/2016/03/14/java%E8%87%AA%E5%AD%A6%E7%AC%94%E8%AE%B0/</url>
      <content type="html"><![CDATA[<p><div align="left"><br><img src="http://img3.imgtn.bdimg.com/it/u=1384789602,3955989619&fm=26&gp=0.jpg" width="300" height="180" style="float:right;"></div></p>
<p>　<br><strong>现将以前分散的java自学笔记归总，方便查阅。</strong><br>　<br>　<br> <br><a id="more"></a><br>2019年前记录</p>
<h3 id="2016-3-26更新"><a href="#2016-3-26更新" class="headerlink" title="2016.3.26更新"></a>2016.3.26更新</h3><h2 id="快速打法与Scanner"><a href="#快速打法与Scanner" class="headerlink" title="快速打法与Scanner"></a>快速打法与Scanner</h2><blockquote>
<ul>
<li><strong>两个快速打法</strong></li>
</ul>
</blockquote>
<p>syso<br>alt+/<br>快速打出 System.out.println();</p>
<p>main<br>alt+/  回车<br>快速打出：<br>public static void main(String[] args) {</p>
<p>}</p>
<blockquote>
<ul>
<li><strong>使用Scanner工具类来获取用户输入信息</strong></li>
</ul>
</blockquote>
<p>Scanner类似于java.util包中，使用时需要导入此包<br>步骤：<br>1.导入java.util.Scanner<br>2.创建Scanner对象<br>3.接收并保存用户输入的值<br>package com;<br>import java.util.Scanner;</p>
<p>main函数里<br>Scanner input=new Scanner(System.in);//创建Scanner对象<br>System.out.println(“请输入信息：”);<br>int a=input.nextInt();//获取用户输入的信息并保存在变量中</p>
<p><strong>print和println区别：println输出信息后会换行，而print不会换行</strong></p>
<hr>
<h3 id="2016-3-15更新"><a href="#2016-3-15更新" class="headerlink" title="2016.3.15更新"></a>2016.3.15更新</h3><h2 id="java基础知识"><a href="#java基础知识" class="headerlink" title="java基础知识"></a>java基础知识</h2><blockquote>
<ul>
<li><strong>关键字</strong></li>
</ul>
</blockquote>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.mukewang.com/53588ce900019bee05190178.jpg" alt="java常用关键字" title="">
                </div>
                <div class="image-caption">java常用关键字</div>
            </figure>
<blockquote>
<ul>
<li><strong>优秀攻城师的习惯</strong></li>
</ul>
</blockquote>
<p>1、变量名由多单词组成时，第一个单词的首字母小写，其后单词的首字母大写，俗称骆驼式命名法（也称驼峰命名法），如 myAge<br>2、变量命名时，尽量简短且能清楚的表达变量的作用，做到见名知意。如：定义变量名<br>stuName 保存“学生姓名”信息</p>
<ul>
<li><strong>java的数据结构</strong></li>
</ul>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.mukewang.com/535a6fc10001b8f604930247.jpg" alt="数据结构" title="">
                </div>
                <div class="image-caption">数据结构</div>
            </figure>
<ul>
<li><strong>常见的基本数据类型</strong></li>
</ul>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.mukewang.com/540d468d000167bd07000130.jpg" alt="数据类型" title="">
                </div>
                <div class="image-caption">数据类型</div>
            </figure>
<ul>
<li><strong>强制转换</strong></li>
</ul>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.mukewang.com/53688a9a0001f73404330109.jpg" alt="强制转换" title="">
                </div>
                <div class="image-caption">强制转换</div>
            </figure>
<p>强制类型转换将 75.8 赋值给 int 型变量后，结果为 75，数值上并未进行四舍五入，而是直接将小数位截断。<br><strong>强制类型转换可能会造成数据的丢失。</strong></p>
<p>常量名一般使用大写字符。</p>
<ul>
<li><strong>注释</strong></li>
</ul>
<p>Java 中注释有三种类型：单行注释、多行注释、文档注释<br>单行：//<br>多行：/<em>
</em><br><em>
</em>/<br>文档：/*<em>
</em><br><em>
</em>/<br>我们可以通过 javadoc 命令从文档注释中提取内容，生成程序的 API 帮助文档。<br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.mukewang.com/53689f74000187be03800330.jpg" alt="javadoc" title="">
                </div>
                <div class="image-caption">javadoc</div>
            </figure></p>
<p>使用文档注释时还可以使用 javadoc 标记，生成更详细的文档信息：<br>       @author 标明开发该类模块的作者<br>       @version 标明该类模块的版本<br>       @see 参考转向，也就是相关主题<br>       @param 对方法中某参数的说明<br>       @return 对方法返回值的说明<br>       @exception 对方法可能抛出的异常进行说明</p>
<blockquote>
<ul>
<li><strong>java常用的比较运算符</strong></li>
</ul>
</blockquote>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.mukewang.com/536063f00001b7b904350145.jpg" alt="比较运算符" title="">
                </div>
                <div class="image-caption">比较运算符</div>
            </figure>
<p><strong>  &gt; 、 &lt; 、 &gt;= 、 &lt;= 只支持左右两边操作数是数值类型</strong><br><strong> == 、 != 两边的操作数既可以是数值类型，也可以是引用类型</strong></p>
<blockquote>
<ul>
<li><strong>运算符优先级</strong></li>
</ul>
</blockquote>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.mukewang.com/5360ffb90001b4f002620224.jpg" alt="优先级" title="">
                </div>
                <div class="image-caption">优先级</div>
            </figure>
<p>级别为 1 的优先级最高，级别 11 的优先级最低。</p>
<blockquote>
<ul>
<li><strong>条件语句之 switch</strong></li>
</ul>
</blockquote>
<p>可以把功能相同的 case 语句合并起来，如<br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.mukewang.com/5364f6950001a57604280064.jpg" alt="case合并" title="">
                </div>
                <div class="image-caption">case合并</div>
            </figure></p>
<blockquote>
<ul>
<li><strong>循环语句之 for</strong></li>
</ul>
</blockquote>
<p>for 循环变量初始化和循环变量变化部分，可以是使用 “,” 同时初始化或改变多个循环</p>
<blockquote>
<ul>
<li><strong>变量的值</strong></li>
</ul>
</blockquote>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://img.mukewang.com/536c8b620001eb1005560086.jpg" alt="for" title="">
                </div>
                <div class="image-caption">for</div>
            </figure>
<blockquote>
<ul>
<li><strong>循环跳转语句之 continue</strong></li>
</ul>
</blockquote>
<p>continue 的作用是跳过循环体中剩余的语句执行下一次循环。</p>
<hr>
<h3 id="2016-3-14更新"><a href="#2016-3-14更新" class="headerlink" title="2016.3.14更新"></a>2016.3.14更新</h3><h2 id="java初体验"><a href="#java初体验" class="headerlink" title="java初体验"></a>java初体验</h2><blockquote>
<ul>
<li><strong>环境变量配置</strong></li>
</ul>
</blockquote>
<p>1.jdk安装目录<br>2.jdk下bin安装目录<br>3.jdk下lib安装目录</p>
<blockquote>
<ul>
<li><strong>第一个java程序</strong></li>
</ul>
</blockquote>
<p>win8.1系统下<br>win+R，输入cmd。<br>dir查看磁盘文件<br>java HelloWorld.java<br>错误：java HelloWorld.class<br><strong>java命令后不能跟文件后缀</strong><br>java HelloWorld</p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://7xrn7f.com1.z0.glb.clouddn.com/16-3-12/55943714.jpg" alt="第一个java程序" title="">
                </div>
                <div class="image-caption">第一个java程序</div>
            </figure>
<blockquote>
<ul>
<li><strong>使用Eclipse开发Java程序</strong></li>
</ul>
</blockquote>
<p>安装eclipse后，弹出<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://7xrn7f.com1.z0.glb.clouddn.com/16-3-12/73609369.jpg" alt="错误" title="">
                </div>
                <div class="image-caption">错误</div>
            </figure><br>这是因为eclipse与JDK的版本不一致。<br>（在cmd中输入java -version查看版本）</p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://7xrn7f.com1.z0.glb.clouddn.com/16-3-12/9491861.jpg" alt="两种IDE" title="">
                </div>
                <div class="image-caption">两种IDE</div>
            </figure>
<p>我选择的是下面这种。<br>步骤：<br>1.创建Java项目<br>2.创建程序包<br>3.编写Java源程序<br>4.运行Java程序</p>
<p><strong>使用myeclipse的步骤相同。</strong></p>
<hr>
<p>2019年更新</p>
<h1 id="注解"><a href="#注解" class="headerlink" title="注解"></a>注解</h1><p>@Override:一般在实现了接口的方法上标识，作用是告诉编译器该方法是接口的方法。<br>@Deprecated：一般在接口中的方法上进行标识，作用是该方法过时了。<br>@Suppvisewarnings：忽视警告，@SuppressWarnings(“deprecation”)</p>
]]></content>
      
        <categories>
            
            <category> 互联网 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Java </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[靖靖的脑洞大开 | Jinger's Special Ideas]]></title>
      <url>https://hubojing.github.io/2016/03/12/%E9%9D%96%E9%9D%96%E7%9A%84%E8%84%91%E6%B4%9E%E5%A4%A7%E5%BC%80%EF%BC%88%E4%B8%80%EF%BC%89/</url>
      <content type="html"><![CDATA[<p><div align="left"><br><img src="https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1503228768604&di=7e6187c4776cacba1f6384be141e8f06&imgtype=0&src=http%3A%2F%2Fa.hiphotos.baidu.com%2Fzhidao%2Fpic%2Fitem%2F0ff41bd5ad6eddc4b18472113ddbb6fd536633fd.jpg" width="300" height="180" alt="配图" style="float:right;"><br> </div><br>　　<strong>一些天马行空的脑洞。</strong><br>　　有时稀奇古怪的thinking和idea就像柯南推理正确时被闪电般电流击中一样……<br>　　愿创造力永不枯竭……</p>
<a id="more"></a>
<h1 id="2017-8-20更新-关于超人工智能"><a href="#2017-8-20更新-关于超人工智能" class="headerlink" title="2017.8.20更新 关于超人工智能"></a>2017.8.20更新 关于超人工智能</h1><p>无意点开的一篇文章，配上这个毫无吸引力的名字，本来是拒绝阅读的。但浏览了下感觉很生动形象，不知不觉在这样碎片化阅读的地方看完了三万五千字，也是拼耐心了。<br><a href="https://zhuanlan.zhihu.com/p/19950456?utm_source=qq&amp;utm_medium=social" target="_blank" rel="noopener">为什么最近有很多名人，比如比尔盖茨，马斯克、霍金等，让人们警惕人工智能？</a><br>文中有些观点于我而言很新颖，有些角度看的更深刻。</p>
<ol>
<li>人类已掌握弱人工智能Artificial Narrow Intelligence (ANI)，正研究强人工智能Artificial General Intelligence (AGI)，而强人工智能一旦实现，到超人工智能Artificial Superintelligence (ASI)可能只是很短暂的时间（几个小时、几天或者几个月）。</li>
<li>实现强人工智能只是时间问题，而且，最大几率发生在未来的50年里。（尚年轻的我们能亲眼见证这伟大的时刻是多么的幸运）</li>
<li>我们处在一个充满弱人工智能的世界，只是可能我们没意识到“哦，这就是人工智能”。控制防抱死系统、地图软件导航、音乐电台推荐、查询明天的天气、Siri、垃圾邮件过滤器、谷歌翻译、IBM的华生……这些是消费级产品的例子。军事、制造、金融（高频算法交易占到了美国股票交易的一半）等领域广泛运用各种复杂的弱人工智能。</li>
<li>强人工智能的难点在：人工智能已经在几乎所有需要思考的领域超过了人类，但是在那些人类和其它动物不需要思考就能完成的事情上，还差得很远。</li>
<li>人工智能发展是指数型增长，无论是硬件、软件还是整个产业。</li>
<li>通往强人工智能的第一步：增加电脑处理速度，而目前天河二号已经做到并超过了。<br>通往强人工智能的第二步：让电脑变得智能。<br>1) 抄袭人脑<br> 一个电脑架构模拟人脑的例子是人工神经网络。它是一个由晶体管作为“神经”组成的网络，晶体管和其它晶体管互相连接，有自己的输入、输出系统，而且什么都不知道。接着它会通过做任务来自我学习。最开始它的神经处理和猜测会是随机的，但是当它得到正确的回馈后，相关晶体管之间的连接就会被加强；如果它得到错误的回馈，连接就会变弱。经过一段时间的测试和回馈后，这个网络自身就会组成一个智能的神经路径，而处理这项任务的能力也得到了优化。<br> 更加极端的“抄袭”方式是“整脑模拟”。具体来说就是把人脑切成很薄的片，用软件来准确的组建一个3D模型，然后把这个模型装在强力的电脑上。<br>2）模仿生物演化<br> 模拟演化使用“基因算法”，它大概是这样的：建立一个反复运作的表现/评价过程，就好像生物通过生存这种方式来表现，并且以能否生养后代为评价一样。一组电脑将执行各种任务，最成功的将会“繁殖”，把各自的程序融合，产生新的电脑，而不成功的将会被剔除。经过多次的反复后。这个自然选择的过程将产生越来越强大的电脑。<br>3）让电脑来解决这些问题<br> 总的思路是我们建造一个能进行两项任务的电脑——研究人工智能和修改自己的代码。</li>
<li><p>智能爆炸<br> 这个词可以说是非常耸人听闻了。递归的自我改进将达到一个难以想象的水平。文中形象的比较：我们把130的智商叫作聪明，把85的智商叫作笨，但是我们不知道怎么形容12952的智商，人类语言中根本没这个概念。</p>
</li>
<li><p>我们无法理解超人工智能的智慧，它能解决所有的问题，如果出现了不能解决的问题，它只需要再自我智能提升一下，这些问题都将迎刃而解。而寄希望于尝试控制超人工智能是可笑的。当我们以为切断电源就能停止它的思考时，超人工智能早已在被切断电源之前，就想好了应对方法。我们的大脑很可能根本没法预测将会发生什么。</p>
</li>
<li>超人工智能虽然有超高的智慧，但它的目标不会随着智能提高而更改，因为它从不会遗忘。但它会用更先进的方式来更好地完成它的预设目标，哪怕会伤害人类，它的思维始终围绕着目标而言，我们给人工智能设定的目标是什么，它的动机就是什么。我们容易犯的一个错误是，当我们想到非常聪明的人工智能时，把它拟人化了。任何假设超级智能的达成会改变系统原本的目标的想法都是对人工智能的拟人化。我们应该明白，它是非常聪明，但是完全异己的东西。超出人类心理的范畴，道德和不道德之外，更多的是非道德性。而所有不是人类的，尤其是那些非生物的事物，默认都是非道德性的。</li>
<li>超人工智能会将人类带往截然不同的两种永恒状态：永生或灭绝。我想灭绝是讨论的最多的一种，但我还是第一次意识到，超人工智能也能让人类实现永生，同时，我们还没发现任何证据证明死亡是不可避免的。有一天人类会完全变成人工的。当我们看到生物材料，然后觉得生物材料实在太原始了，早年的人体居然是用这样的东西组成的，早期的人类居然会被微生物、意外、疾病杀死。人类最终战胜自己的生理，并且变得不可摧毁和永生。当然，前提还有一样，超人工智能的目标里设定了保护人类这些信息。</li>
<li>纳米机器人将会吞噬所有碳基材料来支持自我复制，而不巧的是，地球生命就是碳基的。科学家认为纳米机器人进行一次自我复制只要100秒左右，也就是说一个简单的错误可能就会在3.5小时内毁灭地球上全部的生命。生物技术、纳米技术、人工智能技术将统治世界。</li>
<li>费米悖论</li>
<li>人类最终是永生还是灭绝，很有可能决定者就是第一个实现超人工智能的人，而目前世界上各个国家各种组织都在紧锣密鼓的研究着，如果是有恶意的极端分子抢先一步，人类就会走向灭亡。加上现在各大公司，为了争当第一个强人工智能实现者，为了得到光环、荣誉、名声、金钱，只追求速度，并不考虑安全。最为可怕的是，这事儿世界上压根没法监管。    </li>
</ol>
<p>强人工智能浪潮是不可逆的，人类无论惶恐还是兴奋，都终将来临。<br>而这一切，有可能在未来几十年就发生。</p>
<h1 id="2017-6-7更新-关于量子传输"><a href="#2017-6-7更新-关于量子传输" class="headerlink" title="2017.6.7更新 关于量子传输"></a>2017.6.7更新 关于量子传输</h1><p>前一段时间周末两天在学校过了一把监考瘾……考生的年纪都比我大，可是还是得叫我老师→_→（莫名占了便宜哈哈哈）<br>监考4小时，腿酸1整天。</p>
<p>监考这件事儿，多么浪费人力财力，得找人来监考，发卷子，整理卷子……<br>站着闲得慌，我就在想，能不能都给一体化解决了，不要人来监考。</p>
<p>脑洞：<br>运用<a href="http://baike.baidu.com/link?url=qx-PpbOFOjPMSYyMBh8ggHAwrCMBGTgaWXI9ZVGCgdfIpwTy5g3FPAegJ3EKTzocBgl-00pYRPmNR6YfflZN4I9CziuEnvLgQKVNwfKvFDkh1JFOvRns5D0jCeQ2hRuP#2" target="_blank" rel="noopener">量子传输技术</a>  、 <a href="http://baike.baidu.com/link?url=P0RmCSc2uDs5uhKCAffsqjBX4l92qBBASLGrvsd4JsNAv4f9maKL2XWmEtkM_-fNvfHkFhS6-VCK4YMSChCd0PaG1DQg2mEdCTWsDn03KIE7irD2G3G81I2jCM7Hr38g" target="_blank" rel="noopener">量子传送技术</a> ，将卷子传送到每个考场。同时，每个考生的桌子有升降板，考试时自动升起成为隔板，还可以隔音。防止前后左右抄袭。桌面材料是那种无法用笔写字的光滑材料，内附电子屏显示考试要点，可以刷新和清屏。至于考生随身携带纸条等，在门上装的安检装置可检测。若考生遇到问题，可按桌上按钮与后台管理老师用语音或文字反馈问题。最后答题卡再传送回考务中心。</p>
<p>嗯，只有一个问题，就是费钱，哦，还有量子传输技术目前还在实验阶段。</p>
<hr>
<h1 id="2017-5-13更新-关于电脑病毒"><a href="#2017-5-13更新-关于电脑病毒" class="headerlink" title="2017.5.13更新  关于电脑病毒"></a>2017.5.13更新  关于电脑病毒</h1><p>防范ONION勒索软件（永恒之蓝）病毒攻击<br>毕设关键期，对大四毕业狗满满的恶意！</p>
<p>再论备份的重要性<br>论开启自动更新的重要性</p>
<p>【紧急通知！】请连接校园网的Windows用户注意了！近期，国内多所院校出现了ONION勒索软件感染情况，一旦感染，会对同学们的资料与数据造成严重损失，只有支付高额赎金才能解密恢复文件。请同学们将系统445端口关闭，并用免疫程序检查一下自己的电脑是否被进攻。</p>
<p>然后又去知乎逛了逛，果然推送一篇文章：<a href="https://zhuanlan.zhihu.com/p/26878511?group_id=846548441655046144" target="_blank" rel="noopener">关于防范 ONION 勒索软件（永恒之蓝）病毒攻击的紧急通知及应对办法</a><br>关端口方法和补丁也在文中了。不过win10自动更新嘿嘿嘿</p>
<p>六点半看到这个新闻就爬起来了。心里默念，幸亏每日做毕设都U盘备份，机智如我。<br>看着新闻里那张勒索弹窗图片，仿佛感受到毕设被锁的戳心之痛……</p>
<p>不过最近慎点教育网，总是有些不放心。</p>
<p>事件评论：<a href="https://www.zhihu.com/question/59765277/answer/168681832" target="_blank" rel="noopener">如何看待 5 月12 号爆发在各高校电脑勒索比特币的病毒？</a></p>
<p>关于信息安全，突然就想起自己在信息安全课上做的一个关于RSA密钥的加密解密的玩意儿，当时听信息安全各种高大上，以至于我选择了教这门课的老师当导师……后来RSA的第一次亲密接触竟是在hexo的SSH连接上……人生处处是巧合</p>
<p>有次移动通信课上，老师说未来是云的天下，课下我找老师讨论说，我觉得云并不安全，比如我，宁愿花钱买硬盘备份，也不愿意将重要文件放到云端。老师只是说，以后技术发展，云可以做到相对安全。现在想来，如果数据量庞大到不可想象的数量级呢？买硬盘怕是不能解决问题了。可能这种时候还是得靠云技术。<br>扯远了。</p>
<p>不过说实话，十年来，电脑安全好多了，十年前XP天天下各种防护工具还是拦不住各种病毒，后来换win7，到win8，到win8.1，到如今win10，就只用系统自带的杀软了，反而几乎不中毒了。</p>
<p>【脑洞】既然程序可以写病毒，也可以用程序反病毒。人工智能上啊！让程序自己学习病毒，然后以其人之道还治其人之身。</p>
<hr>
<h1 id="2016-6-13更新-关于电"><a href="#2016-6-13更新-关于电" class="headerlink" title="2016.6.13更新 关于电"></a>2016.6.13更新 关于电</h1><p>严格说是我室友的想法。<br>她说，要是电像wifi一样不用线传输多好……（一个被各种电线搅的烦躁的girl的抱怨）<br>→_→→_→→_→→_→→_→→_→“用一种气体包裹着电，这样就不会电死啦……”<br>我百度了一下，发现真的可以耶……</p>
<h2 id="电能无线传输技术"><a href="#电能无线传输技术" class="headerlink" title="电能无线传输技术"></a>电能无线传输技术</h2><p>原理：利用电磁场，把电能像信号一样发射到用电设备上去，有点类似WiFi。电器不需再用电线，只需一个电能的发射装置和一个接收装置。<br>看来，无线时代正在向我们走来。</p>
<hr>
<h1 id="2016-3-15更新-关于人工智能"><a href="#2016-3-15更新-关于人工智能" class="headerlink" title="2016.3.15更新    关于人工智能"></a>2016.3.15更新    关于人工智能</h1><p>今天看到一篇评论，写的不错，发上来。其中有几句话说的很好：<br><strong>技术群体战胜了天赋极高的自然个体。</strong><br><strong>就算真的有“征服”发生，那也是新人类征服了旧人类，而不是人类的末日。</strong><br>该文还提到了“虚拟现实”的概念，让我瞬间想到了柯南剧场版：贝克街的亡灵。带着头盔，仿佛身处他处。<br><strong>人工智能是让人类生活的劳作性内容越来越少，而虚拟现实是让人类生存生活的创造性意义大规模扩充。</strong><br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="/images/2.jpg" alt="整面" title="">
                </div>
                <div class="image-caption">整面</div>
            </figure><br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="/images/1.jpg" alt="部分" title="">
                </div>
                <div class="image-caption">部分</div>
            </figure></p>
<hr>
<h2 id="AI向"><a href="#AI向" class="headerlink" title="AI向"></a>AI向</h2><p>最近阿尔法狗赢李世石的新闻响遍全世界。（阿尔法狗是一种什么狗→_→）<br>人工智能，这个神秘又让人畏惧的高科技哟…</p>
<h2 id="人工智能"><a href="#人工智能" class="headerlink" title="人工智能"></a>人工智能</h2><p>人工智能（Artificial Intelligence），英文缩写为AI。它是研究、开发用于模拟、延伸和扩展人的智能的理论、方法、技术及应用系统的一门新的技术科学。 人工智能是计算机科学的一个分支，它企图了解智能的实质，并生产出一种新的能以人类智能相似的方式做出反应的智能机器，该领域的研究包括机器人、语言识别、图像识别、自然语言处理和专家系统等。人工智能从诞生以来，理论和技术日益成熟，应用领域也不断扩大，可以设想，未来人工智能带来的科技产品，将会是人类智慧的“容器”。</p>
<p>看它涉及的范围之广：实际应用<br>机器视觉，指纹识别，人脸识别，视网膜识别，虹膜识别，掌纹识别，专家系统，自动规划，智能搜索，定理证明，博弈，自动程序设计，智能控制，机器人学，语言和图像理解，遗传编程等。</p>
<p>人工智能就其本质而言，是对人的思维的信息过程的模拟。</p>
<p>对于人的思维模拟可以从两条道路进行，一是结构模拟，仿照人脑的结构机制，制造出“类人脑”的机器；二是功能模拟，暂时撇开人脑的内部结构，而从其功能过程进行模拟。现代电子计算机的产生便是对人脑思维功能的模拟，是对人脑思维的信息过程的模拟。</p>
<p><strong>以上转自百度百科……</strong></p>
<p>和室友辩论，阿尔法狗是否能赢所有人。我觉得可以，如果算法足够精确，存储足够大到可以容纳全部走法。（这个数量级是10^172次方……目前也许是远远达不到这个指标的。不知道从理论上讲，存储可以达到这么多吗？）</p>
<p><strong>脑洞</strong>：我相信人类开发AI的初始目的一定是<strong>服务人类</strong>的。但是，人类不得不警惕，拥有人类智慧的机器人（或者其他形态的机器），在各个方面都优于人类机体时，是否有<strong>灭亡人类</strong>的可能性。有人和我辩论，认为机器永远不可能比人类有智慧。对此我持保留态度。也许现在的机器的核心是人类输入的程序算法，但当病毒入侵或机器足够智能化到可以自我优化代码时，甚至结合仿生学或者神经学相关，使机器能<strong>自我学习</strong>，具备类似于人类情感的机能，将是人类最大的敌人。（机器内心OS：我比你强比你壮，为什么还要服务于人……）况且总有些野心科学家……将这种技术用于战争→_→其结果还是世界大战，人类遭殃。<br><strong>所以AI发展也应该有个底线，就和克隆人一样，任何人不能触碰。</strong></p>
]]></content>
      
        <categories>
            
            <category> 杂谈 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> idea </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[PPT动画制作之登录等待]]></title>
      <url>https://hubojing.github.io/2016/03/08/PPT%E5%8A%A8%E7%94%BB%E5%88%B6%E4%BD%9C%E4%B9%8B%E7%99%BB%E5%BD%95%E7%AD%89%E5%BE%85/</url>
      <content type="html"><![CDATA[<div align="left"><br><img src="https://ss0.bdstatic.com/70cFuHSh_Q1YnxGkpoWK1HF6hhy/it/u=2643798710,3860478882&fm=26&gp=0.jpg" width="300" height="180" style="float:right;"><br><br><br>　<strong>ppt动画制作笔记。</strong><br><br><br> </div>

<a id="more"></a>
<p>坐在电脑前，我们常看见电脑页面等待的画面，就是一个圆不停的转。常让人等得怒火直冒，想碾碎电脑。（这么暴力的并不是我~）<br>现在就来说说，怎么制作这个动画效果。并不难。<br>先来看看效果怎么样：<br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://7xrn7f.com1.z0.glb.clouddn.com/16-3-8/29180966.jpg" alt="效果图" title="">
                </div>
                <div class="image-caption">效果图</div>
            </figure></p>
<h2 id="具体步骤"><a href="#具体步骤" class="headerlink" title="具体步骤"></a>具体步骤</h2><h1 id="画个圆"><a href="#画个圆" class="headerlink" title="画个圆"></a>画个圆</h1><h1 id="调个色"><a href="#调个色" class="headerlink" title="调个色"></a>调个色</h1><h1 id="添个动作路径"><a href="#添个动作路径" class="headerlink" title="添个动作路径"></a>添个动作路径</h1><h1 id="复个制"><a href="#复个制" class="headerlink" title="复个制"></a>复个制</h1><h1 id="减个透明度"><a href="#减个透明度" class="headerlink" title="减个透明度"></a>减个透明度</h1><h1 id="对个齐"><a href="#对个齐" class="headerlink" title="对个齐"></a>对个齐</h1><h1 id="延个时"><a href="#延个时" class="headerlink" title="延个时"></a>延个时</h1><p><strong>搞定！</strong></p>
<p>是不是还挺酷的~~~</p>
]]></content>
      
        <categories>
            
            <category> 互联网 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> PPT动画 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[markdown语法简记]]></title>
      <url>https://hubojing.github.io/2016/03/08/markdown%E8%AF%AD%E6%B3%95%E7%AE%80%E8%AE%B0/</url>
      <content type="html"><![CDATA[<div align="left"><br><img src="https://ss3.bdstatic.com/70cFv8Sh_Q1YnxGkpoWK1HF6hhy/it/u=1313983748,591596023&fm=26&gp=0.jpg" width="300" height="180" alt="配图" style="float:right;"><br><br></div>  

<p><strong>自查笔记。</strong></p>
<p>　　<br>　　<br><a id="more"></a></p>
<h1 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h1><p># 一级标题<br>## 二级标题<br>### 三级标题<br>#### 四级标题<br>##### 五级标题<br>###### 六级标题</p>
<p>例：</p>
<h1 id="一级标题"><a href="#一级标题" class="headerlink" title="一级标题"></a>一级标题</h1><h2 id="二级标题"><a href="#二级标题" class="headerlink" title="二级标题"></a>二级标题</h2><h3 id="三级标题"><a href="#三级标题" class="headerlink" title="三级标题"></a>三级标题</h3><h4 id="四级标题"><a href="#四级标题" class="headerlink" title="四级标题"></a>四级标题</h4><h5 id="五级标题"><a href="#五级标题" class="headerlink" title="五级标题"></a>五级标题</h5><h6 id="六级标题"><a href="#六级标题" class="headerlink" title="六级标题"></a>六级标题</h6><h1 id="加粗"><a href="#加粗" class="headerlink" title="加粗"></a>加粗</h1><p>*斜体文本*<br>例：<em>斜体文本</em><br>_斜体文本_<br>例：<em>斜体文本</em><br>**粗体文本**<br>例：<strong>粗体文本</strong><br>***粗斜体文本***<br>例：<strong><em>粗斜体文本</em></strong><br>___粗斜体文本___<br>例：<strong><em>粗斜体文本</em></strong></p>
<h1 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h1><p>文字链接 [](http://网址)<br>网址链接 http://网址/</p>
<h1 id="高级链接"><a href="#高级链接" class="headerlink" title="高级链接"></a>高级链接</h1><p>链接用 1 作为网址变量[例子1][1].<br>链接用 hubojing 作为网址变量[例子2][hubojing].<br>然后在文档的结尾为变量赋值（网址）<br>[1]:hubojing.github.io<br>[hubojing]:hubojing.github.io</p>
<h1 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h1><p>!(引用名称)[引用地址]<br>内联方式：![alt text](/path/to/img.jpg “Title”)</p>
<h1 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h1><p>链接用 1 作为网址变量 [hubojing][1].<br>然后在文档的结尾位变量赋值（网址）<br>[1]:hubojing.github.io</p>
<h1 id="分隔符"><a href="#分隔符" class="headerlink" title="分隔符"></a>分隔符</h1><p>三个星号<br>***</p>
<hr>
<p>三个减号<br>---(上面一行文字需空一行，否则自动变为二级标题)</p>
<hr>
<p>三个下划线<br>___</p>
<hr>
<h1 id="转义符"><a href="#转义符" class="headerlink" title="转义符"></a>转义符</h1><p>如果描述中用到 markdown 符号，比如 _ # * 等，又不想它被转义，此时可在这些符号前加反斜杠，如 \# 进行避免。</p>
<h1 id="块注释（blockquote）"><a href="#块注释（blockquote）" class="headerlink" title="块注释（blockquote）"></a>块注释（blockquote）</h1><p>- ></p>
<ul>
<li>是这样？<blockquote>
<p>like this.</p>
</blockquote>
</li>
</ul>
<h1 id="删除线"><a href="#删除线" class="headerlink" title="删除线"></a>删除线</h1><p>~~这是删除线~~<br><del>这是删除线</del></p>
<h1 id="换行"><a href="#换行" class="headerlink" title="换行"></a>换行</h1><p>输入法切换成全角，打两个空格再换行。</p>
<h1 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h1><p>简单的：`blockquote`  </p>
<h1 id="语言使用范围"><a href="#语言使用范围" class="headerlink" title="语言使用范围"></a>语言使用范围</h1><p><a href="http://blog.csdn.net/peng_hong_fu/article/details/52805408" target="_blank" rel="noopener">http://blog.csdn.net/peng_hong_fu/article/details/52805408</a></p>
<p>C++的关键字是cpp，不是C++…  but效果相同</p>
<h1 id="缩进"><a href="#缩进" class="headerlink" title="缩进"></a>缩进</h1><p>法一<br>将输入法切换成全角 两个空格<br>法二<br>在每一行开头，先输入下面的代码，然后紧跟着输入文本即可。注意有分号。</p>
<p>半角空格: &amp; ensp;(去掉&amp;和ensp的空格)或 &amp;#8194;<br>全角空格: &amp; emsp;(去掉&amp;和emsp的空格)或 &amp;#8195;<br>不换行空格: &amp; nbsp;(去掉&amp;和nbsp的空格)或 &amp;#160;<br>注意分号</p>
<p>反正都很麻烦</p>
<hr>
<h1 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h1><p>1.<a href="https://segmentfault.com/markdown" target="_blank" rel="noopener">Markdown编辑器语法指南</a><br>2.<a href="http://www.360doc.com/content/13/1119/13/3300331_330476656.shtml" target="_blank" rel="noopener">Markdown入门</a><br>3.<a href="http://www.appinn.com/markdown/#em" target="_blank" rel="noopener">Markdown 语法说明 (简体中文版)</a></p>
]]></content>
      
        <categories>
            
            <category> 互联网 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Markdown </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[1602+24C08+4X4键盘密码锁]]></title>
      <url>https://hubojing.github.io/2016/03/07/1602-24C08-4X4%E9%94%AE%E7%9B%98%E5%AF%86%E7%A0%81%E9%94%81/</url>
      <content type="html"><![CDATA[<div align="left"><br><img src="https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1550072144946&di=5bc9cc745afff3c539e385fd88dd3a35&imgtype=0&src=http%3A%2F%2Fimg.alicdn.com%2Fimgextra%2Fi3%2FT1ywqIXmVpXXXJ_RM1_042231.jpg_310x310.jpg" width="300" height="180" style="float:right;"><br><br><br>　　<strong>单片机课程设计。</strong><br><br><br> </div>

<a id="more"></a>
<p>【注】我的单片机课程设计选题是单片机密码锁。但是课题并没有要求用存储器存储密码，所以当时我的设计还是比较简陋的。那个设计只能设定一个内部密码，断电后又恢复到初始密码状态。但是实际生活中，必须能够存储密码。并且，在课程设计里我用的是数码管显示密码，在这里我用的是1602液晶显示。于是以下的设计着重于存储与1602相关，且代码是重新编写（参考了网上的案例），没有用课程设计的代码。<br>在此提供我课程设计的单片机密码锁链接：<a href="https://github.com/hubojing/simple-keylock" target="_blank" rel="noopener">胡博靖的单片机课程设计</a><br><!--more--></p>
<h2 id="设计思路"><a href="#设计思路" class="headerlink" title="设计思路"></a>设计思路</h2><p>现在程序内设定一个初始密码，然后用液晶显示提示用户输入密码，通过矩阵键盘输入密码，然后进行比较。如果密码正确，则绿灯亮起，否则红灯亮1S，并提示输入密码错误次数。如果输入错误次数达到三次则蜂鸣器报警并锁定键盘。</p>
<h2 id="自用笔记"><a href="#自用笔记" class="headerlink" title="自用笔记"></a>自用笔记</h2><h3 id="数码管编码表（0到f）"><a href="#数码管编码表（0到f）" class="headerlink" title="数码管编码表（0到f）"></a>数码管编码表（0到f）</h3><p>共阳：0xc0,0xf9,0xa4,0xb0,0x99,0x92,0x82,0xf8,0x80,0x90,0x88,0x83,0xc6,0xa1,0x86,0x8e<br>共阴：0x3f,0x06,0x5b,0x4f,0x66,0x6d,0x7d,0x07,0x7f,0x6f,0x77,0x7c,0x39,0x5e,0x79,0x71</p>
<h3 id="protues仿真记载"><a href="#protues仿真记载" class="headerlink" title="protues仿真记载"></a>protues仿真记载</h3><p>1602——LM016<br>晶振——crystal<br>蜂鸣器——buzzer/sounder/speaker<br>可调电阻——pot-hg(课本写的是pot-lin,不过protues7.8没有)</p>
<h2 id="不错的资料和方法"><a href="#不错的资料和方法" class="headerlink" title="不错的资料和方法"></a>不错的资料和方法</h2><p><a href="http://wenku.baidu.com/link?url=zes1HpZOINL7CQVvqCdr4moFsoXpkEsH-x3QAq4urZ2cTDnSUGH7U2AJD2BsKjhzZ6H3hqE9_AxiJD3MY35hrZfCGnDJC-SX3K-fxoVn3Oi" target="_blank" rel="noopener">I2C总线简介</a><br><a href="https://github.com/hubojing/row-reverse" target="_blank" rel="noopener">矩阵键盘行反转法</a></p>
<hr>
<h2 id="过程中所犯的低级错误"><a href="#过程中所犯的低级错误" class="headerlink" title="过程中所犯的低级错误"></a>过程中所犯的低级错误</h2><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://7xrn7f.com1.z0.glb.clouddn.com/16-3-8/85097816.jpg" alt="led" title="">
                </div>
                <div class="image-caption">led</div>
            </figure>
<p>如图，LED所连接的电阻阻值太大，电流完全达不到使LED发光的值。<br>改正后，LED正常发光。<br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://7xrn7f.com1.z0.glb.clouddn.com/16-3-8/39755099.jpg" alt="led" title="">
                </div>
                <div class="image-caption">led</div>
            </figure></p>
<h2 id="尚未解决的问题"><a href="#尚未解决的问题" class="headerlink" title="尚未解决的问题"></a>尚未解决的问题</h2><h3 id="蜂鸣器不响"><a href="#蜂鸣器不响" class="headerlink" title="蜂鸣器不响"></a>蜂鸣器不响</h3><p>程序应该正确，蜂鸣器旁的控制点红蓝色变化正确，改过蜂鸣器电压值，12V、5V、3V、1.5V都试过，但是就是不响。<br><strong>可能的原因：</strong><br>蜂鸣器是用方波驱动的，若仅输出单一的高电平或低电平是没用的。<br>蜂鸣器发出的声波也要靠人耳来听取，过高或过低的频率人耳是无法听到的。<br>蜂鸣器的仿真模型应选择下图中后面两种，才能听到声音。（然而我并没有听到声音）<br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://7xrn7f.com1.z0.glb.clouddn.com/16-3-8/46445685.jpg" alt="蜂鸣器" title="">
                </div>
                <div class="image-caption">蜂鸣器</div>
            </figure><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Speaker &amp; Sounders</span><br><span class="line"></span><br><span class="line"> BUZZER         DEVICE        Generic buzzer symbol</span><br><span class="line"> BUZZER         ACTIVE        DC Operated Buzzer - Outputs Via Sound Card</span><br><span class="line"> SOUNDER        ACTIVE        Piezo Sounder model (Digital) - Outputs Via Sound Card</span><br><span class="line"> SPEAKER        DEVICE        Generic loudspeaker symbol</span><br><span class="line"> SPEAKER        ACTIVE        loudspeaker model (Analog) - Outputs Via Sound Card</span><br></pre></td></tr></table></figure></p>
<p>依次解释如下：</p>
<p> 蜂鸣器                      通用蜂鸣器符号               无仿真模型<br> 蜂鸣器        活动的        阻抗12Ω直流蜂鸣器            仿真时通过声卡发声<br> 讯响器        活动的        压电讯响器数字模型           仿真时通过声卡发声<br> 扬声器                      通用扬声器符号<br> 扬声器        活动的        阻抗8Ω扬声器模拟模型         仿真时通过声卡发声</p>
<h3 id="存储有问题。"><a href="#存储有问题。" class="headerlink" title="存储有问题。"></a>存储有问题。</h3><p>程序代码严格按照标准代码写的，常见的delay();的延时问题应该没有。但是明显仿真结果没有存储到新的修改密码，一直是初始密码。<br>请各位指教。</p>
<h2 id="源程序和仿真图"><a href="#源程序和仿真图" class="headerlink" title="源程序和仿真图"></a>源程序和仿真图</h2><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://7xrn7f.com1.z0.glb.clouddn.com/16-3-8/89430789.jpg" alt="仿真图" title="">
                </div>
                <div class="image-caption">仿真图</div>
            </figure>
<p>若需要下载，<a href="https://github.com/hubojing/key-lock" target="_blank" rel="noopener">请点击！</a><br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br><span class="line">575</span><br><span class="line">576</span><br><span class="line">577</span><br><span class="line">578</span><br><span class="line">579</span><br><span class="line">580</span><br><span class="line">581</span><br><span class="line">582</span><br><span class="line">583</span><br><span class="line">584</span><br><span class="line">585</span><br><span class="line">586</span><br><span class="line">587</span><br><span class="line">588</span><br><span class="line">589</span><br><span class="line">590</span><br><span class="line">591</span><br><span class="line">592</span><br><span class="line">593</span><br><span class="line">594</span><br><span class="line">595</span><br><span class="line">596</span><br><span class="line">597</span><br><span class="line">598</span><br><span class="line">599</span><br><span class="line">600</span><br><span class="line">601</span><br><span class="line">602</span><br><span class="line">603</span><br><span class="line">604</span><br><span class="line">605</span><br><span class="line">606</span><br><span class="line">607</span><br><span class="line">608</span><br><span class="line">609</span><br><span class="line">610</span><br><span class="line">611</span><br><span class="line">612</span><br><span class="line">613</span><br><span class="line">614</span><br><span class="line">615</span><br><span class="line">616</span><br><span class="line">617</span><br><span class="line">618</span><br><span class="line">619</span><br><span class="line">620</span><br><span class="line">621</span><br><span class="line">622</span><br><span class="line">623</span><br><span class="line">624</span><br><span class="line">625</span><br><span class="line">626</span><br><span class="line">627</span><br><span class="line">628</span><br><span class="line">629</span><br><span class="line">630</span><br><span class="line">631</span><br><span class="line">632</span><br><span class="line">633</span><br><span class="line">634</span><br><span class="line">635</span><br><span class="line">636</span><br><span class="line">637</span><br><span class="line">638</span><br><span class="line">639</span><br><span class="line">640</span><br><span class="line">641</span><br><span class="line">642</span><br><span class="line">643</span><br><span class="line">644</span><br><span class="line">645</span><br><span class="line">646</span><br><span class="line">647</span><br><span class="line">648</span><br><span class="line">649</span><br><span class="line">650</span><br><span class="line">651</span><br><span class="line">652</span><br><span class="line">653</span><br><span class="line">654</span><br><span class="line">655</span><br><span class="line">656</span><br><span class="line">657</span><br><span class="line">658</span><br><span class="line">659</span><br><span class="line">660</span><br><span class="line">661</span><br><span class="line">662</span><br><span class="line">663</span><br><span class="line">664</span><br><span class="line">665</span><br><span class="line">666</span><br><span class="line">667</span><br><span class="line">668</span><br><span class="line">669</span><br><span class="line">670</span><br><span class="line">671</span><br><span class="line">672</span><br><span class="line">673</span><br><span class="line">674</span><br><span class="line">675</span><br><span class="line">676</span><br><span class="line">677</span><br><span class="line">678</span><br><span class="line">679</span><br><span class="line">680</span><br><span class="line">681</span><br><span class="line">682</span><br><span class="line">683</span><br><span class="line">684</span><br><span class="line">685</span><br><span class="line">686</span><br><span class="line">687</span><br><span class="line">688</span><br><span class="line">689</span><br><span class="line">690</span><br><span class="line">691</span><br><span class="line">692</span><br><span class="line">693</span><br><span class="line">694</span><br><span class="line">695</span><br><span class="line">696</span><br><span class="line">697</span><br><span class="line">698</span><br><span class="line">699</span><br><span class="line">700</span><br><span class="line">701</span><br><span class="line">702</span><br><span class="line">703</span><br><span class="line">704</span><br><span class="line">705</span><br><span class="line">706</span><br><span class="line">707</span><br><span class="line">708</span><br><span class="line">709</span><br><span class="line">710</span><br><span class="line">711</span><br><span class="line">712</span><br><span class="line">713</span><br><span class="line">714</span><br><span class="line">715</span><br><span class="line">716</span><br><span class="line">717</span><br><span class="line">718</span><br><span class="line">719</span><br><span class="line">720</span><br><span class="line">721</span><br><span class="line">722</span><br><span class="line">723</span><br><span class="line">724</span><br><span class="line">725</span><br><span class="line">726</span><br><span class="line">727</span><br><span class="line">728</span><br><span class="line">729</span><br><span class="line">730</span><br><span class="line">731</span><br><span class="line">732</span><br><span class="line">733</span><br><span class="line">734</span><br><span class="line">735</span><br><span class="line">736</span><br><span class="line">737</span><br><span class="line">738</span><br><span class="line">739</span><br><span class="line">740</span><br><span class="line">741</span><br><span class="line">742</span><br><span class="line">743</span><br><span class="line">744</span><br><span class="line">745</span><br><span class="line">746</span><br><span class="line">747</span><br><span class="line">748</span><br><span class="line">749</span><br><span class="line">750</span><br><span class="line">751</span><br><span class="line">752</span><br><span class="line">753</span><br><span class="line">754</span><br><span class="line">755</span><br><span class="line">756</span><br><span class="line">757</span><br><span class="line">758</span><br><span class="line">759</span><br><span class="line">760</span><br><span class="line">761</span><br><span class="line">762</span><br><span class="line">763</span><br><span class="line">764</span><br><span class="line">765</span><br><span class="line">766</span><br><span class="line">767</span><br><span class="line">768</span><br><span class="line">769</span><br><span class="line">770</span><br><span class="line">771</span><br><span class="line">772</span><br><span class="line">773</span><br><span class="line">774</span><br><span class="line">775</span><br><span class="line">776</span><br><span class="line">777</span><br><span class="line">778</span><br><span class="line">779</span><br><span class="line">780</span><br><span class="line">781</span><br><span class="line">782</span><br><span class="line">783</span><br><span class="line">784</span><br><span class="line">785</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;reg52.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> uint unsigned int</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> uchar unsigned char</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">key_scan</span><span class="params">()</span></span>;</span><br><span class="line">uchar count0,count1,count3,num,n=<span class="number">0</span>,temp,a,j,count4;</span><br><span class="line">uchar mima[<span class="number">8</span>];							<span class="comment">//初始密码存储区</span></span><br><span class="line">uchar tab_key[<span class="number">50</span>];						<span class="comment">//输入密码存储区</span></span><br><span class="line">uchar code table[]=&#123; <span class="number">0xc0</span>,<span class="number">0xf9</span>,<span class="number">0xa4</span>,<span class="number">0xb0</span>,<span class="number">0x99</span>,<span class="number">0x92</span>,<span class="number">0x82</span>,<span class="number">0xf8</span>,<span class="number">0x80</span>,<span class="number">0x90</span>,<span class="number">0x88</span>,<span class="number">0x83</span>,<span class="number">0xc6</span>,<span class="number">0xa1</span>,<span class="number">0x86</span>,<span class="number">0x8e</span></span><br><span class="line">&#125;;<span class="comment">//led共阳数码管</span></span><br><span class="line"><span class="comment">/*uchar code table[]=&#123;</span></span><br><span class="line"><span class="comment">0x3f,0x06,0x5b,0x4f,</span></span><br><span class="line"><span class="comment">0x66,0x6d,0x7d,0x07,</span></span><br><span class="line"><span class="comment">0x7f,0x6f,0x77,0x7c,</span></span><br><span class="line"><span class="comment">0x39,0x5e,0x79,0x71&#125;;	//led共阴数码管	   */</span></span><br><span class="line">bit enterflag;							<span class="comment">//确认键按下与否的标志</span></span><br><span class="line">bit mimaflag;							<span class="comment">//密码正确与否的标志</span></span><br><span class="line">bit xiugaiflag;							<span class="comment">//修改密码标志	</span></span><br><span class="line">bit enter1flag;						<span class="comment">//修改密码确认键标志	</span></span><br><span class="line">sbit red=P2^<span class="number">1</span>;</span><br><span class="line">sbit green=P2^<span class="number">0</span>;</span><br><span class="line">sbit bell=P2^<span class="number">2</span>;	 </span><br><span class="line">sbit rs=P2^<span class="number">6</span>;	</span><br><span class="line"> sbit rw=P2^<span class="number">5</span>;	 </span><br><span class="line">sbit lcden=P2^<span class="number">7</span>; </span><br><span class="line">sbit scl=P3^<span class="number">0</span>;	 </span><br><span class="line">sbit sda=P3^<span class="number">1</span>;	 </span><br><span class="line">uchar code table1[]=<span class="string">"input the passco"</span>;</span><br><span class="line">uchar code table2[]=<span class="string">"de:     --------"</span>;</span><br><span class="line">uchar code table3[]=<span class="string">"*"</span>;</span><br><span class="line">uchar code table4[]=<span class="string">"right   (^_^)   "</span>;</span><br><span class="line">uchar code table5[]=<span class="string">"first  error!!!!"</span>;</span><br><span class="line">uchar code table6[]=<span class="string">"second error!!!!"</span>;</span><br><span class="line">uchar code table7[]=<span class="string">"third error see "</span>;</span><br><span class="line">uchar code table8[]=<span class="string">"u tomorrow (^_^)"</span>;</span><br><span class="line">uchar code table9[]=<span class="string">"define the passc"</span>;</span><br><span class="line">uchar code table10[]=<span class="string">"ode:    --------"</span>;</span><br><span class="line">uchar code table11[]=<span class="string">"code   is    new"</span>;</span><br><span class="line"><span class="comment">//******************************************************键盘消抖函数***********************************************************************</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">delay1</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123; ;; &#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">delay2</span><span class="params">(uchar x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	uchar a,b;</span><br><span class="line">	<span class="keyword">for</span>(a=x;a&gt;<span class="number">0</span>;a--)</span><br><span class="line">	 <span class="keyword">for</span>(b=<span class="number">100</span>;b&gt;<span class="number">0</span>;b--);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">delay3</span><span class="params">(uchar x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	uchar a,b;</span><br><span class="line">	<span class="keyword">for</span>(a=x;a&gt;<span class="number">0</span>;a--)</span><br><span class="line">	 <span class="keyword">for</span>(b=<span class="number">200</span>;b&gt;<span class="number">0</span>;b--);</span><br><span class="line">	 &#125;	</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">delay</span><span class="params">(uint z)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	uint x,y;</span><br><span class="line">	<span class="keyword">for</span>(x=z;x&gt;<span class="number">0</span>;x--)</span><br><span class="line">		<span class="keyword">for</span>(y=<span class="number">110</span>;y&gt;<span class="number">0</span>;y--);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//******************************************************e^2room的初始化********************************************************************</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">start</span><span class="params">()</span>  <span class="comment">//开始信号</span></span></span><br><span class="line"><span class="function"></span>&#123;	</span><br><span class="line">	sda=<span class="number">1</span>;	 <span class="comment">//书P171 时钟SCL线为高电平时，数据线SDA出现由高电平向低电平变化的情形时，启动I^2C总线数据传送。  </span></span><br><span class="line">	delay1();</span><br><span class="line">	scl=<span class="number">1</span>;	 <span class="comment">//</span></span><br><span class="line">	delay1();</span><br><span class="line">	sda=<span class="number">0</span>;	 <span class="comment">//</span></span><br><span class="line">	delay1();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">stop</span><span class="params">()</span>   <span class="comment">//停止</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	sda=<span class="number">0</span>;	  <span class="comment">//书P171时钟SCL线为高电平时，数据线SDA出现由低电平到高电平的变化的情形时，将停止I^2C总线数据传送。</span></span><br><span class="line">	delay1();</span><br><span class="line">	scl=<span class="number">1</span>;</span><br><span class="line">	delay1();</span><br><span class="line">	sda=<span class="number">1</span>;</span><br><span class="line">	delay1();</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//****************************应答信号*************************************</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">respond</span><span class="params">()</span>  </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	uchar i;</span><br><span class="line">	scl=<span class="number">1</span>;</span><br><span class="line">	delay1();</span><br><span class="line">	<span class="keyword">while</span>((sda==<span class="number">1</span>)&amp;&amp;(i&lt;<span class="number">250</span>))i++;	<span class="comment">//书P176 应答sda为0，非应答为1</span></span><br><span class="line">	scl=<span class="number">0</span>;							<span class="comment">//释放总线		？</span></span><br><span class="line">	delay1();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">noack</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">scl=<span class="number">1</span>;</span><br><span class="line">delay1();</span><br><span class="line">scl=<span class="number">1</span>;delay1();</span><br><span class="line">scl=<span class="number">0</span>;delay1();</span><br><span class="line">sda=<span class="number">0</span>;delay1();</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//*****************************写字节操作函数**********************************</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">write_byte</span><span class="params">(uchar date)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	uchar i,temp;</span><br><span class="line">	temp=date;</span><br><span class="line">	<span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">8</span>;i++)</span><br><span class="line">	&#123;</span><br><span class="line">		temp=temp&lt;&lt;<span class="number">1</span>;			<span class="comment">//保持最高位，左移到进位CY</span></span><br><span class="line">		scl=<span class="number">0</span>;				<span class="comment">//scl上跳沿写入</span></span><br><span class="line">	    delay1();</span><br><span class="line">		sda=CY;			  <span class="comment">//溢出位</span></span><br><span class="line">		delay1();</span><br><span class="line">		scl=<span class="number">1</span>;</span><br><span class="line">		delay1();</span><br><span class="line">		scl=<span class="number">0</span>;delay1();</span><br><span class="line">	&#125;</span><br><span class="line">	scl=<span class="number">0</span>;</span><br><span class="line">	delay1();</span><br><span class="line">	sda=<span class="number">1</span>;<span class="comment">//总线释放 ？</span></span><br><span class="line">	delay1();</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//*******************************读字节操作函数*****************************</span></span><br><span class="line"><span class="function">uchar <span class="title">read_byte</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	uchar i,k;</span><br><span class="line">	scl=<span class="number">0</span>;</span><br><span class="line">	delay1();</span><br><span class="line">	sda=<span class="number">1</span>;</span><br><span class="line">	delay1();</span><br><span class="line">	<span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">8</span>;i++)</span><br><span class="line">	&#123;</span><br><span class="line">		scl=<span class="number">1</span>;</span><br><span class="line">		delay1();	</span><br><span class="line">		k=(k&lt;&lt;<span class="number">1</span>)|sda;    <span class="comment">//或运算，放到最低位</span></span><br><span class="line">		scl=<span class="number">0</span>;</span><br><span class="line">		delay1();	</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> k;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//**********************************写地址函数******************************</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">write_add</span><span class="params">(uchar address,uchar date)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	start();</span><br><span class="line">	write_byte(<span class="number">0xa0</span>);	<span class="comment">//设备地址</span></span><br><span class="line">	respond();</span><br><span class="line">	write_byte(address);</span><br><span class="line">	respond();</span><br><span class="line">	write_byte(date);</span><br><span class="line">	respond();</span><br><span class="line">	stop();</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//*******************************读地址函数*************************************</span></span><br><span class="line"><span class="function">uchar <span class="title">read_add</span><span class="params">(uchar address)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	uchar date;</span><br><span class="line">	start();</span><br><span class="line">	write_byte(<span class="number">0xa0</span>);</span><br><span class="line">	respond();</span><br><span class="line">	write_byte(address);</span><br><span class="line">	respond();</span><br><span class="line">	start();</span><br><span class="line">	write_byte(<span class="number">0xa1</span>);	  <span class="comment">//表示接收地址</span></span><br><span class="line">	respond();</span><br><span class="line">	date=read_byte();</span><br><span class="line">	noack();</span><br><span class="line">	stop();</span><br><span class="line">	<span class="keyword">return</span> date;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//***********************************************************LCD1602的初始化**************************************************************</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">write_com</span><span class="params">(uchar com)</span>		   <span class="comment">//书P154   写命令函数</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	rs=<span class="number">0</span>;		 <span class="comment">//RS为寄存器选择，高电平1时选择数据寄存器、低电平0时选择指令寄存器。</span></span><br><span class="line">	lcden=<span class="number">0</span>;</span><br><span class="line">	P0=com;</span><br><span class="line">	delay(<span class="number">5</span>);</span><br><span class="line">	lcden=<span class="number">1</span>;	 <span class="comment">//LCD的使能端高电平有效</span></span><br><span class="line">	delay(<span class="number">5</span>);</span><br><span class="line">	lcden=<span class="number">0</span>;	</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">write_date</span><span class="params">(uchar date)</span>		 <span class="comment">//写数据函数</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	rs=<span class="number">1</span>;</span><br><span class="line">	lcden=<span class="number">0</span>;</span><br><span class="line">	P0=date;</span><br><span class="line">	delay(<span class="number">5</span>);</span><br><span class="line">	lcden=<span class="number">1</span>;</span><br><span class="line">	delay(<span class="number">5</span>);</span><br><span class="line">	lcden=<span class="number">0</span>;	</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//***************************************密码比较函数********************************</span></span><br><span class="line"><span class="function">bit <span class="title">mimacmp</span><span class="params">()</span>					</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	bit flag;</span><br><span class="line">	uchar i;</span><br><span class="line">	<span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">8</span>;i++)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">if</span>(mima[i]==tab_key[i])</span><br><span class="line">				flag=<span class="number">1</span>;</span><br><span class="line">			<span class="keyword">else</span></span><br><span class="line">				&#123;</span><br><span class="line">				flag=<span class="number">0</span>;</span><br><span class="line">				i=<span class="number">8</span>;</span><br><span class="line">				&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	<span class="keyword">return</span>(flag);							<span class="comment">//返回flag</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//**********************************LCD显示函数开始**************************************</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">lcd_display</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">uchar i=<span class="number">0</span>;</span><br><span class="line">write_com(<span class="number">0x80</span>+<span class="number">0x40</span>+<span class="number">8</span>);<span class="comment">//液晶操作中的写入，地址是0x80开头的，加0x40为写入第二行，加8则为确定地址。</span></span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">&#123;</span><br><span class="line">write_date(table3[<span class="number">0</span>]);	<span class="comment">//uchar code table3[]="*"</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//***************************************************************键盘功能分配函数群开始*******************************************************</span></span><br><span class="line"><span class="comment">// 0          1            2              3                    </span></span><br><span class="line"><span class="comment">// 4          5            6              7 </span></span><br><span class="line"><span class="comment">// 8          9           确认（A）       无效（B）</span></span><br><span class="line"><span class="comment">//取消（C）修改密码键（D）确认修改键（E） 无效（F）</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">key_manage1</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">tab_key[n]=<span class="number">0</span>;	 <span class="comment">//数组的存储顺序是从n=0开始的，因此无论是哪个键先按下都会存入tab_key[0]</span></span><br><span class="line">n++;</span><br><span class="line"><span class="keyword">if</span>(xiugaiflag==<span class="number">1</span>)	<span class="comment">//如果按下了修改键</span></span><br><span class="line">&#123;</span><br><span class="line">mima[count4]=<span class="number">0</span>;</span><br><span class="line">count4++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">key_manage2</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line">tab_key[n]=<span class="number">1</span>;</span><br><span class="line">n++;</span><br><span class="line"><span class="keyword">if</span>(xiugaiflag==<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">mima[count4]=<span class="number">1</span>;</span><br><span class="line">count4++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">key_manage3</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line">tab_key[n]=<span class="number">2</span>;</span><br><span class="line">n++;</span><br><span class="line"><span class="keyword">if</span>(xiugaiflag==<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">mima[count4]=<span class="number">2</span>;</span><br><span class="line">count4++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">key_manage4</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">tab_key[n]=<span class="number">3</span>;</span><br><span class="line">n++;</span><br><span class="line"><span class="keyword">if</span>(xiugaiflag==<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">mima[count4]=<span class="number">3</span>;</span><br><span class="line">count4++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">key_manage5</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">tab_key[n]=<span class="number">4</span>;</span><br><span class="line">n++;</span><br><span class="line"><span class="keyword">if</span>(xiugaiflag==<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">mima[count4]=<span class="number">4</span>;</span><br><span class="line">count4++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">key_manage6</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">tab_key[n]=<span class="number">5</span>;</span><br><span class="line">n++;</span><br><span class="line"><span class="keyword">if</span>(xiugaiflag==<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">mima[count4]=<span class="number">5</span>;</span><br><span class="line">count4++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">key_manage7</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">tab_key[n]=<span class="number">6</span>;</span><br><span class="line">n++;</span><br><span class="line"><span class="keyword">if</span>(xiugaiflag==<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">mima[count4]=<span class="number">6</span>;</span><br><span class="line">count4++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">key_manage8</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">tab_key[n]=<span class="number">7</span>;</span><br><span class="line">n++;</span><br><span class="line"><span class="keyword">if</span>(xiugaiflag==<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">mima[count4]=<span class="number">7</span>;</span><br><span class="line">count4++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">key_manage9</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">tab_key[n]=<span class="number">8</span>;</span><br><span class="line">n++;</span><br><span class="line"><span class="keyword">if</span>(xiugaiflag==<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">mima[count4]=<span class="number">8</span>;</span><br><span class="line">count4++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">key_manage10</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">tab_key[n]=<span class="number">9</span>;</span><br><span class="line">n++;</span><br><span class="line"><span class="keyword">if</span>(xiugaiflag==<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">mima[count4]=<span class="number">9</span>;</span><br><span class="line">count4++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//**********************************确认键**************************************************************  </span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">key_manage11</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	enterflag=<span class="number">1</span>;					<span class="comment">//确认键按下</span></span><br><span class="line">	<span class="keyword">if</span>(n==<span class="number">8</span>)					   <span class="comment">//只有输入8个密码后按确认才做比较</span></span><br><span class="line">	&#123;	mimaflag=mimacmp();</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">	&#123;	mimaflag=<span class="number">0</span>;</span><br><span class="line">	 &#125;</span><br><span class="line">	 <span class="keyword">if</span>(enterflag==<span class="number">1</span>)</span><br><span class="line">		&#123;</span><br><span class="line">			enterflag=<span class="number">0</span>;  <span class="comment">//标志位清零</span></span><br><span class="line">			n=<span class="number">0</span>;</span><br><span class="line">			<span class="comment">//用FFFFFFFF清除已经输入的密码</span></span><br><span class="line">			<span class="keyword">for</span>(count3=<span class="number">0</span>;count3&lt;<span class="number">8</span>;count3++)</span><br><span class="line">			&#123;	</span><br><span class="line">				delay(<span class="number">5</span>);</span><br><span class="line">				tab_key[count3]=<span class="number">0x0f</span>;		</span><br><span class="line">			&#125;							</span><br><span class="line">			TR1=<span class="number">1</span>;									<span class="comment">//打开计数器1</span></span><br><span class="line">			count1=<span class="number">0</span>;								<span class="comment">//定时器1由50MS累计到1S所用的计数器</span></span><br><span class="line">			<span class="keyword">if</span>(mimaflag==<span class="number">1</span>)</span><br><span class="line">			&#123;	</span><br><span class="line">				a=<span class="number">0</span>;</span><br><span class="line">			</span><br><span class="line">				write_com(<span class="number">0x01</span>);</span><br><span class="line">				write_com(<span class="number">0x80</span>);</span><br><span class="line">				<span class="keyword">for</span>(count3=<span class="number">0</span>;count3&lt;<span class="number">16</span>;count3++)</span><br><span class="line">				&#123;</span><br><span class="line">					write_date(table4[count3]);	<span class="comment">//密码正确，显示RIGHT，绿灯亮</span></span><br><span class="line">				    green=<span class="number">0</span>;red=<span class="number">1</span>;</span><br><span class="line">					bell=<span class="number">1</span>;</span><br><span class="line">					delay(<span class="number">5</span>);</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">			        </span><br><span class="line">		    <span class="keyword">else</span></span><br><span class="line">			&#123;   </span><br><span class="line">			 	n=<span class="number">0</span>;</span><br><span class="line">			 	red=<span class="number">0</span>;</span><br><span class="line">		    	bell=<span class="number">0</span>;</span><br><span class="line">				a++;</span><br><span class="line">				<span class="keyword">if</span>(a==<span class="number">1</span>)</span><br><span class="line">				&#123;</span><br><span class="line">					<span class="keyword">for</span>(count3=<span class="number">0</span>;count3&lt;<span class="number">8</span>;count3++) <span class="comment">//ffffffff清除密码</span></span><br><span class="line">					&#123;	</span><br><span class="line">						delay(<span class="number">5</span>);</span><br><span class="line">						tab_key[count3]=<span class="number">0x0f</span>;		</span><br><span class="line">					&#125;</span><br><span class="line">					write_com(<span class="number">0x01</span>);										</span><br><span class="line">					write_com(<span class="number">0x80</span>);</span><br><span class="line">					<span class="keyword">for</span>(count3=<span class="number">0</span>;count3&lt;<span class="number">16</span>;count3++)</span><br><span class="line">					&#123;</span><br><span class="line">						write_date(table5[count3]);	<span class="comment">//密码错误，显示 first error，红灯亮</span></span><br><span class="line">						green=<span class="number">1</span>;red=<span class="number">0</span>;</span><br><span class="line">						bell=<span class="number">1</span>;</span><br><span class="line">						delay(<span class="number">5</span>);</span><br><span class="line">					&#125;</span><br><span class="line">						TR1=<span class="number">1</span>;</span><br><span class="line">				&#125;</span><br><span class="line">				<span class="keyword">if</span>(a==<span class="number">2</span>)</span><br><span class="line">				&#123;	</span><br><span class="line">					<span class="keyword">for</span>(count3=<span class="number">0</span>;count3&lt;<span class="number">8</span>;count3++) <span class="comment">//ffffffff清除密码</span></span><br><span class="line">					&#123;	</span><br><span class="line">						delay(<span class="number">5</span>);</span><br><span class="line">						tab_key[count3]=<span class="number">0x0f</span>;		</span><br><span class="line">					&#125;</span><br><span class="line">						write_com(<span class="number">0x01</span>);</span><br><span class="line">						write_com(<span class="number">0x80</span>);</span><br><span class="line">						<span class="keyword">for</span>(count3=<span class="number">0</span>;count3&lt;<span class="number">16</span>;count3++)</span><br><span class="line">						&#123;</span><br><span class="line">							write_date(table6[count3]);	<span class="comment">//密码错误，显示SECOND ERROR，红灯亮</span></span><br><span class="line">							green=<span class="number">1</span>;red=<span class="number">0</span>;</span><br><span class="line">							bell=<span class="number">1</span>;</span><br><span class="line">							delay(<span class="number">5</span>);</span><br><span class="line">						&#125;</span><br><span class="line">							TR1=<span class="number">1</span>;</span><br><span class="line">				&#125;</span><br><span class="line">					</span><br><span class="line">				  <span class="keyword">if</span>(a==<span class="number">3</span>)</span><br><span class="line">					&#123;	</span><br><span class="line">						<span class="keyword">for</span>(count3=<span class="number">0</span>;count3&lt;<span class="number">8</span>;count3++) <span class="comment">//ffffffff清除密码</span></span><br><span class="line">						&#123;	</span><br><span class="line">							delay(<span class="number">5</span>);</span><br><span class="line">							tab_key[count3]=<span class="number">0x0f</span>;		</span><br><span class="line">						&#125;</span><br><span class="line">						write_com(<span class="number">0x01</span>);</span><br><span class="line">						write_com(<span class="number">0x80</span>);</span><br><span class="line">						<span class="keyword">for</span>(count3=<span class="number">0</span>;count3&lt;<span class="number">16</span>;count3++)</span><br><span class="line">						&#123;</span><br><span class="line">							write_date(table7[count3]);	<span class="comment">//密码错误，显示third error see，红灯亮</span></span><br><span class="line">							green=<span class="number">1</span>;red=<span class="number">0</span>;</span><br><span class="line">							bell=<span class="number">0</span>;<span class="comment">//蜂鸣器报警</span></span><br><span class="line">							delay(<span class="number">5</span>);</span><br><span class="line">						&#125;</span><br><span class="line">						write_com(<span class="number">0x80</span>+<span class="number">0x40</span>);</span><br><span class="line">						<span class="keyword">for</span>(count3=<span class="number">0</span>;count3&lt;<span class="number">16</span>;count3++)</span><br><span class="line">						&#123;</span><br><span class="line">							write_date(table8[count3]);<span class="comment">//密码错误，显示 U TOMORROW ,红灯亮</span></span><br><span class="line">							green=<span class="number">1</span>;red=<span class="number">0</span>;</span><br><span class="line">							bell=<span class="number">0</span>;<span class="comment">//蜂鸣器报警</span></span><br><span class="line">							delay(<span class="number">5</span>);</span><br><span class="line">						&#125;</span><br><span class="line">							TR1=<span class="number">0</span>;</span><br><span class="line">								</span><br><span class="line">					&#125;</span><br><span class="line">							</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">key_manage12</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">tab_key[n]=<span class="number">11</span>;</span><br><span class="line">n++;						  <span class="comment">//密码计数清零</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//****************************************************取消键********************************************  </span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">key_manage13</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line">n=<span class="number">0</span>;						  <span class="comment">//密码计数清零</span></span><br><span class="line">write_com(<span class="number">0x80</span>);						<span class="comment">//指针所指位置	   第一行</span></span><br><span class="line"><span class="keyword">for</span>(count3=<span class="number">0</span>;count3&lt;<span class="number">16</span>;count3++)</span><br><span class="line">&#123;</span><br><span class="line">	write_date(table1[count3]);		<span class="comment">//第一行显示INPUT THE PASSPORD:</span></span><br><span class="line">	delay(<span class="number">5</span>);</span><br><span class="line">&#125;</span><br><span class="line">write_com(<span class="number">0x80</span>+<span class="number">0x40</span>);				 <span class="comment">//第二行</span></span><br><span class="line"><span class="keyword">for</span>(count3=<span class="number">0</span>;count3&lt;<span class="number">16</span>;count3++)</span><br><span class="line">&#123;</span><br><span class="line">	write_date(table2[count3]);	<span class="comment">//开机显示--------</span></span><br><span class="line">	delay(<span class="number">5</span>);</span><br><span class="line">	tab_key[count3]=<span class="number">0x0f</span>;			<span class="comment">//用FFFFFFFF清除已经输入的密码</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//*******************************************修改密码键**********************************</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">key_manage14</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	uchar aa=<span class="number">0</span>;</span><br><span class="line">	n=<span class="number">0</span>;</span><br><span class="line">	xiugaiflag=<span class="number">1</span>;</span><br><span class="line">	write_com(<span class="number">0x01</span>);</span><br><span class="line">	write_com(<span class="number">0x80</span>);</span><br><span class="line"><span class="keyword">for</span>(count3=<span class="number">0</span>;count3&lt;<span class="number">16</span>;count3++)</span><br><span class="line">&#123;</span><br><span class="line">	write_date(table9[count3]);	<span class="comment">//显示define the password</span></span><br><span class="line">	delay(<span class="number">5</span>);</span><br><span class="line">	tab_key[count3]=<span class="number">0x0f</span>;			<span class="comment">//用FFFFFFFF清楚已经输入的密码</span></span><br><span class="line">&#125;</span><br><span class="line">	write_com(<span class="number">0x80</span>+<span class="number">0x40</span>);</span><br><span class="line"><span class="keyword">for</span>(count3=<span class="number">0</span>;count3&lt;<span class="number">16</span>;count3++)</span><br><span class="line">&#123;</span><br><span class="line">	write_date(table10[count3]);	<span class="comment">//显示--------</span></span><br><span class="line">	delay(<span class="number">5</span>);</span><br><span class="line">&#125;</span><br><span class="line">TR0=<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//******************************************修改密码键的确认键********************************</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">key_manage15</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">n=<span class="number">0</span>;</span><br><span class="line">enter1flag=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(enter1flag==<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">	enter1flag=<span class="number">0</span>;</span><br><span class="line">	count4=<span class="number">0</span>;</span><br><span class="line">	<span class="keyword">for</span>(count3=<span class="number">0</span>;count3&lt;<span class="number">16</span>;count3++)</span><br><span class="line">	&#123;</span><br><span class="line">	tab_key[count3]=<span class="number">0x0f</span>;			<span class="comment">//用FFFFFFFF清除已经输入的密码</span></span><br><span class="line"> 	&#125;</span><br><span class="line">	write_com(<span class="number">0x01</span>);</span><br><span class="line">	write_com(<span class="number">0x80</span>);</span><br><span class="line">	<span class="keyword">for</span>(count3=<span class="number">0</span>;count3&lt;<span class="number">16</span>;count3++)</span><br><span class="line">	&#123;</span><br><span class="line">		write_date(table11[count3]);</span><br><span class="line">		delay(<span class="number">100</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	TR1=<span class="number">1</span>;</span><br><span class="line">	count1=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">key_manage16</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">tab_key[n]=<span class="number">15</span>;</span><br><span class="line">n++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//****************************************定时器1的50MS,共延时1秒*****************************</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">time_1</span><span class="params">()</span> interrupt 3</span></span><br><span class="line"><span class="function"></span>&#123;	</span><br><span class="line"></span><br><span class="line">	TH1=(<span class="number">65536</span><span class="number">-50000</span>)/<span class="number">256</span>;</span><br><span class="line">	TL1=(<span class="number">65536</span><span class="number">-50000</span>)%<span class="number">256</span>;</span><br><span class="line">	<span class="keyword">if</span>(count1&lt;<span class="number">20</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		count1++;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span> 							<span class="comment">//计时到1S</span></span><br><span class="line">	&#123;</span><br><span class="line">		TR1=<span class="number">0</span>;</span><br><span class="line">		count1=<span class="number">0</span>;</span><br><span class="line">		mimaflag=<span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">		red=<span class="number">1</span>;</span><br><span class="line">		bell=<span class="number">1</span>;</span><br><span class="line">		<span class="comment">//显示FFFFFFFF</span></span><br><span class="line">		write_com(<span class="number">0x01</span>);</span><br><span class="line">		write_com(<span class="number">0x80</span>);</span><br><span class="line">		<span class="keyword">for</span>(count3=<span class="number">0</span>;count3&lt;<span class="number">16</span>;count3++)</span><br><span class="line">			&#123;</span><br><span class="line">				write_date(table1[count3]);	<span class="comment">//显示INPUT THE PASSCODE</span></span><br><span class="line">				delay(<span class="number">5</span>);</span><br><span class="line">			&#125;</span><br><span class="line">		write_com(<span class="number">0x80</span>+<span class="number">0x40</span>);</span><br><span class="line">		<span class="keyword">for</span>(count3=<span class="number">0</span>;count3&lt;<span class="number">16</span>;count3++)</span><br><span class="line">			&#123;</span><br><span class="line">				write_date(table2[count3]);	<span class="comment">//开机显示FFFFFFFF</span></span><br><span class="line">				delay(<span class="number">5</span>);</span><br><span class="line">			&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//***********************************************定时0**********************************************</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">time_0</span><span class="params">()</span> interrupt 1</span></span><br><span class="line"><span class="function"></span>&#123;	</span><br><span class="line"></span><br><span class="line">	TH0=(<span class="number">65536</span><span class="number">-50000</span>)/<span class="number">256</span>;</span><br><span class="line">	TL0=(<span class="number">65536</span><span class="number">-50000</span>)%<span class="number">256</span>;</span><br><span class="line"><span class="keyword">if</span>(count4&lt;<span class="number">8</span>)</span><br><span class="line">&#123;</span><br><span class="line">	key_scan();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">	TR0=<span class="number">0</span>;</span><br><span class="line">	count4=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//初始化函数</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;	</span><br><span class="line">	uchar i;</span><br><span class="line">	lcden=<span class="number">0</span>;</span><br><span class="line">	write_com(<span class="number">0x38</span>);					<span class="comment">//打开显示模式设置</span></span><br><span class="line">	write_com(<span class="number">0x0c</span>);					<span class="comment">//打开显示，光标等等设置为零</span></span><br><span class="line">	write_com(<span class="number">0x06</span>);					<span class="comment">//当读或写一个字符后地址指针加一，且光标加一，当写一个字符后整频显示左移，</span></span><br><span class="line">	write_com(<span class="number">0x01</span>);					<span class="comment">//清零指令</span></span><br><span class="line">	write_com(<span class="number">0x80</span>);					<span class="comment">//指针所指位置</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">//定时器初始化</span></span><br><span class="line">	TMOD=<span class="number">0x11</span>;							<span class="comment">//T0,T1工作方式1</span></span><br><span class="line">	TH0=(<span class="number">65536</span><span class="number">-2000</span>)/<span class="number">256</span>;</span><br><span class="line">	TL0=(<span class="number">65536</span><span class="number">-2000</span>)%<span class="number">256</span>;				<span class="comment">//T0初始化2MS</span></span><br><span class="line"></span><br><span class="line">	TH1=(<span class="number">65536</span><span class="number">-50000</span>)/<span class="number">256</span>;</span><br><span class="line">	TL1=(<span class="number">65536</span><span class="number">-50000</span>)%<span class="number">256</span>;				<span class="comment">//T1初始化50MS</span></span><br><span class="line"></span><br><span class="line">	TR1=<span class="number">0</span>;</span><br><span class="line">	ET1=<span class="number">1</span>;</span><br><span class="line">	EA=<span class="number">1</span>;</span><br><span class="line">	TR0=<span class="number">0</span>;</span><br><span class="line">	ET0=<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">	count0=<span class="number">0</span>;							<span class="comment">//初始没有密码输入，故为零</span></span><br><span class="line">	enterflag=<span class="number">0</span>;						<span class="comment">//没有确认键按下</span></span><br><span class="line">	mimaflag=<span class="number">0</span>;							<span class="comment">//密码正确与否键先置零</span></span><br><span class="line">					</span><br><span class="line">	red=<span class="number">1</span>;								<span class="comment">//红灯不亮</span></span><br><span class="line"><span class="comment">//************密码存入EPROM中**********************************</span></span><br><span class="line">	sda=<span class="number">1</span>;</span><br><span class="line">	delay(<span class="number">5</span>);</span><br><span class="line">	scl=<span class="number">1</span>;<span class="comment">// SDA=1,SCL=1,使主从设备处于空闲状态</span></span><br><span class="line">	delay(<span class="number">5</span>);</span><br><span class="line">	<span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">8</span>;i++)</span><br><span class="line">	&#123;</span><br><span class="line">		write_add(i,<span class="number">8</span>);</span><br><span class="line">		delay3(<span class="number">100</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">8</span>;i++)</span><br><span class="line">	&#123;</span><br><span class="line">		mima[i]=read_add(i);</span><br><span class="line">		delay(<span class="number">5</span>);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;	rw=<span class="number">0</span>;		</span><br><span class="line">	init();</span><br><span class="line">	write_com(<span class="number">0x80</span>);						<span class="comment">//给com一个数值，com连着单片机</span></span><br><span class="line">	<span class="keyword">for</span>(count3=<span class="number">0</span>;count3&lt;<span class="number">16</span>;count3++)</span><br><span class="line">	&#123;</span><br><span class="line">		write_date(table1[count3]);		<span class="comment">//第一行显示INPUT THE PASSPORD:</span></span><br><span class="line">		delay(<span class="number">5</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	write_com(<span class="number">0x80</span>+<span class="number">0x40</span>);</span><br><span class="line">	<span class="keyword">for</span>(count3=<span class="number">0</span>;count3&lt;<span class="number">16</span>;count3++)</span><br><span class="line">	&#123;</span><br><span class="line">		write_date(table2[count3]);		<span class="comment">//开机显示FFFFFFFF</span></span><br><span class="line">		delay(<span class="number">5</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		key_scan();	   				   	<span class="comment">//调用键盘扫描函数</span></span><br><span class="line">		lcd_display(); </span><br><span class="line">	&#125;</span><br><span class="line">		 </span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//******************************************************************键盘扫描函数开始*******************************************************************</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">key_scan</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//**********扫描第一行*********</span></span><br><span class="line">P1=<span class="number">0xfe</span>; </span><br><span class="line">temp=P1;</span><br><span class="line">temp=temp&amp;<span class="number">0xf0</span>;</span><br><span class="line"><span class="keyword">if</span>(temp!=<span class="number">0xf0</span>)</span><br><span class="line">&#123;</span><br><span class="line">delay(<span class="number">100</span>);</span><br><span class="line"><span class="keyword">if</span>(temp!=<span class="number">0xf0</span>)</span><br><span class="line">&#123;</span><br><span class="line">temp=P1;</span><br><span class="line"><span class="keyword">switch</span>(temp)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">0xee</span>:</span><br><span class="line">key_manage1();</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="number">0xde</span>:</span><br><span class="line">key_manage2();</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="number">0xbe</span>:</span><br><span class="line">key_manage3();</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="number">0x7e</span>:</span><br><span class="line">key_manage4();</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span>(temp!=<span class="number">0xf0</span>)</span><br><span class="line">&#123;</span><br><span class="line">temp=P1;</span><br><span class="line">temp=temp&amp;<span class="number">0xf0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//**************************************************扫描第二行***********************************</span></span><br><span class="line">P1=<span class="number">0xfd</span>; </span><br><span class="line">temp=P1;</span><br><span class="line">temp=temp&amp;<span class="number">0xf0</span>;</span><br><span class="line"><span class="keyword">if</span>(temp!=<span class="number">0xf0</span>)</span><br><span class="line">&#123;</span><br><span class="line">delay(<span class="number">100</span>);</span><br><span class="line"><span class="keyword">if</span>(temp!=<span class="number">0xf0</span>)</span><br><span class="line">&#123;</span><br><span class="line">temp=P1;</span><br><span class="line"><span class="keyword">switch</span>(temp)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">0xed</span>:</span><br><span class="line">key_manage5();</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="number">0xdd</span>:</span><br><span class="line">key_manage6();</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="number">0xbd</span>:</span><br><span class="line">key_manage7();</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="number">0x7d</span>:</span><br><span class="line">key_manage8();</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span>(temp!=<span class="number">0xf0</span>)</span><br><span class="line">&#123;</span><br><span class="line">temp=P1;</span><br><span class="line">temp=temp&amp;<span class="number">0xf0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//*********************************************扫描第三行***********************************</span></span><br><span class="line">P1=<span class="number">0xfb</span>; </span><br><span class="line">temp=P1;</span><br><span class="line">temp=temp&amp;<span class="number">0xf0</span>;</span><br><span class="line"><span class="keyword">if</span>(temp!=<span class="number">0xf0</span>)</span><br><span class="line">&#123;</span><br><span class="line">delay(<span class="number">100</span>);</span><br><span class="line"><span class="keyword">if</span>(temp!=<span class="number">0xf0</span>)</span><br><span class="line">&#123;</span><br><span class="line">temp=P1;</span><br><span class="line"><span class="keyword">switch</span>(temp)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">0xeb</span>:</span><br><span class="line">key_manage9();</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="number">0xdb</span>:</span><br><span class="line">key_manage10();</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="number">0xbb</span>:</span><br><span class="line">key_manage11();</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="number">0x7b</span>:</span><br><span class="line">key_manage12();</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span>(temp!=<span class="number">0xf0</span>)</span><br><span class="line">&#123;</span><br><span class="line">temp=P1;</span><br><span class="line">temp=temp&amp;<span class="number">0xf0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//***************************************************扫描第四行****************************************</span></span><br><span class="line">P1=<span class="number">0xf7</span>;</span><br><span class="line">temp=P1;</span><br><span class="line">temp=temp&amp;<span class="number">0xf0</span>;</span><br><span class="line"><span class="keyword">if</span>(temp!=<span class="number">0xf0</span>)</span><br><span class="line">&#123;</span><br><span class="line">delay(<span class="number">100</span>);</span><br><span class="line"><span class="keyword">if</span>(temp!=<span class="number">0xf0</span>)</span><br><span class="line">&#123;</span><br><span class="line">temp=P1;</span><br><span class="line"><span class="keyword">switch</span>(temp)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">0xe7</span>:</span><br><span class="line">key_manage13();</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="number">0xd7</span>:</span><br><span class="line">key_manage14();</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="number">0xb7</span>:</span><br><span class="line">key_manage15();</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="number">0x77</span>:</span><br><span class="line">key_manage16();</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span>(temp!=<span class="number">0xf0</span>)</span><br><span class="line">&#123;</span><br><span class="line">temp=P1;</span><br><span class="line">temp=temp&amp;<span class="number">0xf0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
]]></content>
      
        <categories>
            
            <category> 通信工程 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 单片机 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[零碎知识记录]]></title>
      <url>https://hubojing.github.io/2016/01/04/%E9%9B%B6%E7%A2%8E%E7%9F%A5%E8%AF%86%E8%AE%B0%E5%BD%95/</url>
      <content type="html"><![CDATA[<div align="left"><br><img src="https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1550059841668&di=0e3a9bce84da7eac06d0cb50816e145f&imgtype=0&src=http%3A%2F%2Fa2.att.hudong.com%2F46%2F45%2F20300542519200139920454812151.jpg" width="300" height="180" style="float:right;"><br><br><br>　　<strong>自用（单片机等）。</strong><br><br><br> </div>

<a id="more"></a>
<p>位选就是要亮哪一个数码管,段选就是让这个数码管显示哪个数!!!</p>
<p>#define uchar unsigned char<br>unsigned char 用来声明无符号字符变量的，上面这个语句的作用就是在其之后 可以用uchar来代替unsigned char 简化编写，就是说 写了这条 下面在写 uchar i; 效果跟 unsigned char i; 一样<br><!--more--><br>蓝色是低电平。红色是高电平。黄色一般为不正常的情况，灰色为不确定（高阻？）</p>
<p>0xe0 P2.4<br>P1=0x10 P1的第5位<br>0x04是十六进制数，对应的二进制数为0000 0100，从低位到高位一次对应p1.0-p1.7，所以p1.2为高电平，其余为低电平。</p>
<p>  temp=P3&0xf0;<br>是个位与运算符<br>0x80=1000 0000<br>temp转换为二进制<br>假设temp=1010 1010<br>&amp;后temp=1000 0000<br>如果temp=0010 1010<br>&amp;后temp=0000 0000<br>可见temp低7位无论是什么&amp;后都是0<br>最高位由temp决定<br>结果就是最高位保持其余全为0从而取出了最高位</p>
<p>&amp;是按位与的意思，就是说只将P3口的高四位读入，低四位为0，放到 temp里面 </p>
<p>P2=0x01 对应 P2^0=1<br>P2=0x02 对应 P2^1=1<br>P2=0x04 对应 P2^2=1<br>P2=0x08 对应 P2^3=1<br>P2=0x10 对应 P2^4=1<br>P2=0x20 对应 P2^5=1<br>P2=0x40 对应 P2^6=1<br>P2=0x80 对应 P2^7=1<br>P2=0x11 对应 P2^4=1 与 P2^0=1<br>P2=0xff 对应 P2^7=1 与 P2^6=1、P2^5=1、P2^4=1、P2^3=1、P2^2=1、P2^1=1、P2^0=1 </p>
<p>数字信号处理 问题<br>1.正弦型模拟信号xa(t)=Asin(Ω0t+φ)中t是时间变量，单位是秒（s），去连续数值，而正弦序列中x(n)=Asin(ω0n+φ)中n是无量纲数，取离散数值，因而造成Ω0越大，则xa(t)变化越快；但由于x(n)=sin(ω0n+φ)=sin[(ω0+2πm)n+φ]，当ω0变化时，x(n)是以2π为周期的，并不是ω0越大，x(n)变化越快。<br>连续和离散的不都是以2π为周期的吗？为什么一个越来越大，一个却有周期性？</p>
]]></content>
      
        <categories>
            
            <category> 通信工程 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 单片机 </tag>
            
            <tag> 数字信号处理 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Flash动画制作学习心得]]></title>
      <url>https://hubojing.github.io/2015/12/06/Flash%E5%8A%A8%E7%94%BB%E5%88%B6%E4%BD%9C%E5%AD%A6%E4%B9%A0%E5%BF%83%E5%BE%97/</url>
      <content type="html"><![CDATA[<div align="left"><br><img src="https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1550059679017&di=1f8cf256692d6662f1e1387d3d8b22db&imgtype=0&src=http%3A%2F%2Fimg1.cache.netease.com%2Fcatchpic%2FD%2FDB%2FDBC410F91006054C39CDDB79546BD6A8.png" width="300" height="180" style="float:right;"><br><br><br>　<br><strong>Flash动画制作随手记。</strong><br><br><br> </div>


<a id="more"></a>
<h1 id="制作过程中发现的问题及解决方案"><a href="#制作过程中发现的问题及解决方案" class="headerlink" title="制作过程中发现的问题及解决方案"></a>制作过程中发现的问题及解决方案</h1><p><strong>1.音频不能导入</strong><br>最简单的解决方案：使用Adobe Adition内录。注意保存比特率不要高于160KHZ。（320KHZ导入不了）</p>
<p><strong>2.按钮制作了没反应</strong><br>解决方案：首先新建一个图层，把按钮拖进去。在第一帧（注意是帧）动作里写上语句stop();然后在按钮的动作里写上语句on (release){play();}<br><!--more--><br><strong>3.“开始”按钮控制不了声音</strong><br>最简单粗暴的方法：声音从第二帧开始。</p>
<p><strong>4.点击“暂停”按钮声音停止不了</strong><br>动作里写上语句stopAllSounds();</p>
<p><strong>5.声音会不断循环</strong><br>在最后一帧（记住加入关键帧）动作里写上stopAllSounds();</p>
<p><strong>6.mc总是一闪而过</strong><br>是mc的长度没设置好。拖过到合适的长度即可。</p>
<p><strong>7.按钮上的文字怎么改</strong><br>在按钮元件内部有一层是text，把默认的文本框删掉，在自己加一个上去。</p>
<p>还有一些细枝末节的问题，这儿就不提了。</p>
<h1 id="实践后发现需要注意的地方"><a href="#实践后发现需要注意的地方" class="headerlink" title="实践后发现需要注意的地方"></a>实践后发现需要注意的地方</h1><p><strong>1.名字标清楚</strong><br>方便修改！做到后来，图层、元件各种文件越来越多，一定要在新建的时候就尽量标明。</p>
<p><strong>2.多建图层</strong><br>最好声音一个图层，按钮一个图层，背景一个图层，遮罩一个图层，mc一个图层，分好类！</p>
<p><strong>3.把同一类文件放入一个文件夹</strong><br>如逐帧动画的素材，一个小动画就有几十张，放入文件夹方便查看。</p>
<p><strong>4.分清“插入帧”、“插入关键帧”、“插入空白关键帧”、“删除帧”、“清除关键帧”的区别</strong><br>插入帧：就是插入普通帧，是在前面一帧地基础上操作。<br>插入关键帧：关键帧的前后都可以和这一帧毫无关联！<br>删除帧：一点痕迹也不留。<br>清除关键帧：关键帧是没了，还是一个普通帧。</p>
<p><strong>5.已做逐帧动画的素材图片分类放入文件夹中时，不要剪切！</strong><br>可以直接拖进文件夹，千万不能剪切再粘贴进文件夹，否则之前做好的逐帧动画就都没了……我自己毁了两次才发现这个问题，上百帧啊……</p>
<p><strong>6.动画太快，把每一帧后面空一帧</strong><br>相当于延时的作用。</p>
<p><strong>7.记住几个快捷键</strong><br>ctrl+F3 调出属性面板<br>F5插入普通帧<br>F6插入关键帧<br>F7插入空白关键帧 </p>
]]></content>
      
        <categories>
            
            <category> 互联网 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Flash </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[STC89C52RC单片机学习记录（1602篇）]]></title>
      <url>https://hubojing.github.io/2015/11/17/STC89C52RC%E5%8D%95%E7%89%87%E6%9C%BA%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/</url>
      <content type="html"><![CDATA[<div align="left"><br><img src="https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1550653842&di=a6937a401b0d41db0e40434e5f16f3b7&imgtype=jpg&er=1&src=http%3A%2F%2Fimg.alicdn.com%2Fimgextra%2Fi3%2FT1ywqIXmVpXXXJ_RM1_042231.jpg_310x310.jpg" width="300" height="180" alt="配图" style="float:right;"><br>　　<br>　　<br>　　<br></div> 

<p><strong>四条相关的小记录。</strong><br><a id="more"></a></p>
<h1 id="老式51单片机内部没有AD和DA转换模块"><a href="#老式51单片机内部没有AD和DA转换模块" class="headerlink" title="老式51单片机内部没有AD和DA转换模块"></a>老式51单片机内部没有AD和DA转换模块</h1><p>51单片机是一种比较经典的单片机，因此问世时间比avr时间长，它的芯片内部没有集成ad转换，而avr单片机芯片内部集成了ad转换，因此传统的51需要外接ad转换芯片，而avr不需要。不过随着时间的发展，新型的51单片机也有内部集成了ad芯片的，比如stc12c2052ad。<br><strong>这也是为什么我们的课本上学AD、DA转换时，书上的例题都加了一个转换器如DAC0832、ADC0809的原因。</strong></p>
<h1 id="nop"><a href="#nop" class="headerlink" title="_nop_()"></a>_nop_()</h1><p>这个函数是延时一个机器周期的意思，它包含在头文件intrins.h中，只要程序应用到_nop_()，就需要有头文件intrins.h的声明。</p>
<p><strong>1602液晶相关</strong></p>
<h1 id="几个引脚功能备注"><a href="#几个引脚功能备注" class="headerlink" title="几个引脚功能备注"></a>几个引脚功能备注</h1><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://i13.tietuku.com/8693823f522c8700.png" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure>
<p>第4脚：RS为寄存器选择，高电平1时选择数据寄存器、低电平0时选择指令寄存器。<br>第5脚：RW为读写信号线，高电平(1)时进行读操作，低电平(0)时进行写操作。<br>第6脚：E(或EN)端为使能(enable)端,高电平（1）时读取信息，负跳变时执行指令。</p>
<h1 id="液晶显示程序的几点注释"><a href="#液晶显示程序的几点注释" class="headerlink" title="液晶显示程序的几点注释"></a>液晶显示程序的几点注释</h1><p><strong>LCD1602测忙：</strong><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">result = (bit)(P0 &amp; 0x80)</span><br></pre></td></tr></table></figure></p>
<p>(bit)强制转换成位，P0与0X80：0X80换成二进制就10000000也就是P0口的P0^7位。</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lcd_write(<span class="number">0</span>,pos|<span class="number">0x80</span>);</span><br></pre></td></tr></table></figure>
<p>变量pos按位或0x80，也就是取出变量pos的最高位数据，传递给函数lcd_write()。此函数下面应该会有用到变量pos的地方，那里得到的pos不再是原来的数据了，按位或0x80后，就只有最高位是pos原来最高位的数据，其它位全部置位0。这个函数是设定DDRAM地址，也就是设定字符显示的首地址，它只执行了一个指令“向控制器写入0x80|pos的值（这是一个或表达式，表示POS变量与0X80相或，取其结果，0x80是KS0066内部指令的关键字，是表示指定DDRAM首地址的）。</p>
<p>忙还是那么忙，累却到了一个极点。但还是感到莫大的幸福。</p>
]]></content>
      
        <categories>
            
            <category> 通信工程 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 单片机 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[matlab函数杂谈]]></title>
      <url>https://hubojing.github.io/2015/11/10/matlab%E5%87%BD%E6%95%B0%E6%9D%82%E8%B0%88/</url>
      <content type="html"><![CDATA[<p><div align="left"><br><img src="https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1548152473322&di=e1b5b894cc6c6307bf843e7d6d753e23&imgtype=0&src=http%3A%2F%2Fpic.pc6.com%2Fup%2F2014-7%2F2014718101152.png" width="300" height="180" alt="配图" style="float:right;"></div></p>
<p><br>写了两篇正儿八经的技术文，我觉得这好像不是我的风格，我是小清新啊小清新[微笑]<br>我是大家的开心果啊[微笑]  所以，学技术也要感受到快乐。来来，回归自己。</p>
<p>　　<br>　　<br><a id="more"></a></p>
<h1 id="浅谈最近用matlab遇到的几个函数："><a href="#浅谈最近用matlab遇到的几个函数：" class="headerlink" title="浅谈最近用matlab遇到的几个函数："></a>浅谈最近用matlab遇到的几个函数：</h1><p>1.num2str   str2num<br>对于一个刚学matlab不久的人，看到回调函数里满篇num2str、str2num内心满满的问号……这感觉就和十年前学英语一样……<br>然而这个2，让我觉得这个函数很有意思……<br>是的，2就是two啊！two音同to啊！<br>num2str，顾名思义，number to string，把数值转化成字符串。同理str2num我就不解释了。<br>嗯，程序员都是懒人，能省就省必须的。</p>
<p>2.ezplot<br>Easy to use function plotter！E Z PLOT 懒人的智慧<br>翻译：易用的一元函数绘图函数<br><strong>使用之前要定义！要定义！要定义！</strong><br>符号函数定义法则：syms x;<br>那么问题来了，syms是什么鬼？<br>syms是定义符号变量。哦，我们就记得了，进行符号运算前要定义它，就用syms。</p>
<p>3.conv<br>数字信号处理，嗯哼，眼熟是不是？<br>卷积卷积卷积！</p>
<p><strong>辨析：filter、conv、impz函数的区别</strong><br>在MATLAB中，可以用函数y=filter(p,d,x)实现差分方程的仿真，也可以用函数 y=conv(x,h)计算卷积，用y=impz(p,d,N)求系统的冲激响应。具体例子百度一大推。</p>
<p>4.stem<br>同样数字信号处理里出现的。Stem函数用于绘图，它是绘制针状图的好手。<br>调用格式都为stem(n,x,’filled’);<br>只需要将需要绘制的数据存放在一个数组中，然后将这个数组作为参数传递给“stem”函数就可以得到输出图形。例如，下面的代码可以绘制正弦函数的图形：<br>n=1:50; %定义序列的长度是50<br>x=zeros(1,50); %注意：MATLAB中数组下标从1开始<br>x(1)=1; %冲击函数<br>stem(x); %绘制函数图形</p>
<p>5.impulse<br>函数impulse（）将绘出由向量 a 和 b 表示的连续系统在指定时间范围内的冲激响应h(t)的时域波形图，并能求出指定时间范围内冲激响应的数值解。<br>impulse（）函数有如下四种调用格式：<br>（1）impulse(b,a)：该调用格式以默认方式绘出向量 A和B定义的连续系统的冲激响应的时域波形。<br>（2）impulse(b,a,t)：绘出系统在 0～t 时间范围内冲激响应的时域波形。<br>（3）impulse(b,a,t1:p:t2)：绘出在 t1~t2 时间范围内，且以时间间隔 p均匀取样的冲激响应波形。<br>（4）y=impulse(b,a,t1:p:t2)：不绘出波形，而是求出系统冲激响应的数值解。</p>
<p>6.step<br>step（）函数可绘出连续系统的阶跃响应 g(t)在指定时间范围的时域波形并能求出其数值解，和impulse（）函数一样也有四种调用格式。<br>（1）step(b,a)：该调用格式以默认方式绘出向量 A和B定义的连续系统的阶跃响应的时域波形。<br>（2）step(b,a,t)：绘出系统在 0～t 时间范围内阶跃响应的时域波形。<br>（3）step(b,a,t1:p:t2)：绘出在 t1~t2 时间范围内，且以时间间隔p均匀取样的阶跃响应波形。<br>（4）y=step(b,a,t1:p:t2)：不绘出波形，而是求出系统阶跃响应的数值解。</p>
<p>惊人相似有木有！impulse 和 step 一定是一家人~~</p>
<p>先说这么多。最近比较忙。</p>
]]></content>
      
        <categories>
            
            <category> 通信工程 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Matlab </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[hexo优化·年轻就是折腾 | Promotion of the Blog & Young for Try]]></title>
      <url>https://hubojing.github.io/2015/11/10/hexo%E4%BC%98%E5%8C%96/</url>
      <content type="html"><![CDATA[<div align="left"><br><img src="https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1511116107294&di=a91ad5adc5431ecb1865be565f7b0e82&imgtype=0&src=http%3A%2F%2Fpic4.zhimg.com%2Fd4c1239e75c02e8482c22017a6c8d407_r.jpg" width="300" height="180" alt="配图" style="float:right;"><br><br><br>　　<strong>说明：本博客会长期优化，因此将之前所写相关文章合并到同一篇中，按倒序编排，以便查询。</strong><br><br><br> </div>


<a id="more"></a>
<blockquote>
<p>2016.10.22更新</p>
</blockquote>
<p>　　失踪人口短暂现身…<br>　　这么久没有更博内心有愧。其实有不定期更新<a href="https://github.com/hubojing" target="_blank" rel="noopener">github</a>。<br>    今天我十分惊讶于博客项目的deploy最近一次记录竟是8月，这说明了我近两个月来的微调都没有部署上来……难怪我的github不绿了！<br>　　在仔细研读了我的config并确保没有问题后，我又一次hexo c,hexo g,hexo d三部曲，然后<strong>可怕</strong>的事情发生了：Cannot GET /<br>    在搞垮博客几次后的我已经云淡风轻了，只有一个念头：我能修复好。废话不说了，进入正题：<br>解决方法：<strong>将npm重新安装一遍</strong>。这两个月一直想做成双语切换样式（目前中英文混编有些凌乱），可能意外删除了nodejs的部分文件，造成不能部署。但英文版各种bug，暂时放下，等考完再战。</p>
<p><code>npm -v</code>查看npm版本命令。</p>
<p>　　<strong>对博客进行了小的调整</strong>：<br>　　1.压缩背景图片，每张100KB以内，提高了访问速度。<br>　　2.替换了失效的图片链接，去掉了github里项目|collections|里的<a href="http://yotuku.cn/" target="_blank" rel="noopener">极简图床</a>，以自身血的教训证明，还是七牛云本身最稳定，不要偷懒，否则失效时眼泪止不住的流（滑稽）。<br>　　3.部分文章更新、重新排版。（前期初学markdown写的确实凌乱，中英混排也一并修改）<br>　　4.拖欠的友链已添加，失效的友链已更改。<br>　　5.为部分没有封面图的文章增添了封面图。<br>　　6.降低了封面背景透明度。<br>　　7.修改了多说头像CSS。<br>　　8.修改了评论框背景图。（快去捕捉一只野生皮卡丘！）</p>
<p>　　今天算是懂了，要做好前端，一定要懂PS。(可我明明是一个想做后端的人……)<br>　　下次更新：提交sitemap给必应。</p>
<h1 id="同步托管至coding"><a href="#同步托管至coding" class="headerlink" title="同步托管至coding"></a>同步托管至coding</h1><p>具体操作之前我已另写一篇详细教程：<a href="http://hubojing.github.io/2016/04/06/%E5%B0%86hexo-github%E5%8D%9A%E5%AE%A2%E5%90%8C%E6%AD%A5%E6%89%98%E7%AE%A1%E8%87%B3coding/">http://hubojing.github.io/2016/04/06/%E5%B0%86hexo-github%E5%8D%9A%E5%AE%A2%E5%90%8C%E6%AD%A5%E6%89%98%E7%AE%A1%E8%87%B3coding/</a></p>
<h1 id="修改背景透明度"><a href="#修改背景透明度" class="headerlink" title="修改背景透明度"></a>修改背景透明度</h1><p>yelee/source/css/_variables.styl<br>Background Color相关的4个变量，颜色为 RGBA.<br><a href="http://www.w3school.com.cn/cssref/css_colors_legal.asp" target="_blank" rel="noopener">http://www.w3school.com.cn/cssref/css_colors_legal.asp</a><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">// Background Color</span><br><span class="line">left-col-color = rgba(255,255,255,.85)</span><br><span class="line">mid-col-color = rgba(255,255,255,.8)</span><br><span class="line">article-color = rgba(255,255,255,.45)</span><br><span class="line">archives-color = rgba(255,255,255,.4)</span><br></pre></td></tr></table></figure></p>
<h1 id="左侧背景更换"><a href="#左侧背景更换" class="headerlink" title="左侧背景更换"></a>左侧背景更换</h1><p>yelee/source/css/_partial/main.styl<br>原CSS：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">.left-col &#123;</span><br><span class="line">        background-image: url(http://lubiao.b0.upaiyun.com/c/2/2014/5/14/2/11/4d4059067181d8b7fbc9ac8920ff2764.jpg);</span><br><span class="line">        width: left-col-width;</span><br><span class="line">        position:fixed;</span><br><span class="line">        opacity:1;</span><br><span class="line">        transition:all .2s ease-in;</span><br><span class="line">        height:100%;</span><br><span class="line">        overflow-y: auto;</span><br><span class="line">        .overlay&#123;</span><br><span class="line">            width: 100%;</span><br><span class="line">            height: 180px;</span><br><span class="line">            background-color: black;</span><br><span class="line">            position: absolute;</span><br><span class="line">            opacity: 0.7;</span><br><span class="line">        &#125;</span><br><span class="line">        .intrude-less &#123;</span><br><span class="line">            width: 76%;</span><br><span class="line">            text-align: center;</span><br><span class="line">            margin: 112px auto 0;</span><br><span class="line">        &#125;</span><br><span class="line">        li:hover &#123;</span><br><span class="line">            background: none;</span><br><span class="line">            font-weight: bold;</span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></p>
<p>效果图：<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://7xray0.com1.z0.glb.clouddn.com/%E5%8D%9A%E5%AE%A21.png" alt="before" title="">
                </div>
                <div class="image-caption">before</div>
            </figure></p>
<p>现CSS：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">.left-col &#123;</span><br><span class="line">        background-image: url(/images/l1.jpg);</span><br><span class="line">        background-size: cover;</span><br><span class="line">        width: left-col-width;</span><br><span class="line">        position:fixed;</span><br><span class="line">        opacity:1;</span><br><span class="line">        transition:all .2s ease-in;</span><br><span class="line">        height:100%;</span><br><span class="line">        overflow-y: auto;</span><br><span class="line">        </span><br><span class="line">        .intrude-less &#123;</span><br><span class="line">            width: 76%;</span><br><span class="line">            text-align: center;</span><br><span class="line">            margin: 112px auto 0;</span><br><span class="line">        &#125;</span><br><span class="line">        li:hover &#123;</span><br><span class="line">            background: none;</span><br><span class="line">            font-weight: bold;</span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></p>
<p>效果图：<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://7xray0.com1.z0.glb.clouddn.com/%E5%8D%9A%E5%AE%A22.png" alt="after" title="">
                </div>
                <div class="image-caption">after</div>
            </figure><br><strong>也许您认为之前的更好看，因为时间紧促，我没有花很多时间在图片选取和P图上，只是为了成功实现左边栏背景不同的效果。后期还会不断调试。</strong></p>
<hr>
<blockquote>
<p>2016.4.23更新</p>
</blockquote>
<h1 id="提交sitemap给google和百度"><a href="#提交sitemap给google和百度" class="headerlink" title="提交sitemap给google和百度"></a>提交sitemap给google和百度</h1><p>　　目的：使谷歌和百度能够搜索到本博客<br>　　测试：可在浏览器中输入<br>谷歌：<br>site:hubojing.github.io<br>百度：<br>site:hubojing.coding.me</p>
<p>　　效果：<br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://7xray0.com1.z0.glb.clouddn.com/16-4-23/57096767.jpg" alt="百度搜索" title="">
                </div>
                <div class="image-caption">百度搜索</div>
            </figure><br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://7xray0.com1.z0.glb.clouddn.com/16-4-23/13459328.jpg" alt="谷歌搜索" title="">
                </div>
                <div class="image-caption">谷歌搜索</div>
            </figure></p>
<p>说明：百度蜘蛛爬不了github的网址，所以只好将博客同步部署到coding。详细步骤见：<a href="http://hubojing.github.io/2016/04/06/%E5%B0%86hexo-github%E5%8D%9A%E5%AE%A2%E5%90%8C%E6%AD%A5%E6%89%98%E7%AE%A1%E8%87%B3coding/">将hexo-github博客同步托管至coding</a></p>
<p><strong>步骤</strong><br>　　百度提交sitemap:</p>
<h2 id="install"><a href="#install" class="headerlink" title="install"></a>install</h2><p>if your hexo version is 2.x.x, you should install as follow:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-baidu-sitemap@0.0.8 --save</span><br></pre></td></tr></table></figure></p>
<p>if version is 3.x.x, you should install as follow:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-baidu-sitemap@0.1.1 --save</span><br></pre></td></tr></table></figure></p>
<h2 id="Update"><a href="#Update" class="headerlink" title="Update"></a>Update</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ npm remove hexo-generator-baidu-sitemap</span><br><span class="line">$ npm install hexo-generator-baidu-sitemap --save</span><br></pre></td></tr></table></figure>
<h2 id="Options"><a href="#Options" class="headerlink" title="Options"></a>Options</h2><p>if your hexo version is 2.x.x, you can configure this plugin in _config.yml.<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">baidusitemap:</span><br><span class="line">    path: baidusitemap.xml</span><br></pre></td></tr></table></figure></p>
<p>if version is 3.x.x, you should configure this plugin in _config.yml.<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">baidusitemap:</span><br><span class="line">path: baidusitemap.xml</span><br></pre></td></tr></table></figure></p>
<p>path - Sitemap path. (Default: baidusitemap.xml)</p>
<h2 id="Errors"><a href="#Errors" class="headerlink" title="Errors"></a>Errors</h2><p>Maybe response is “hexo is not definded”,then you should:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> node_modules/hexo-generator-baidu-sitemap/</span><br><span class="line">npm install</span><br></pre></td></tr></table></figure></p>
<p>　　谷歌的提交方法是类似的。</p>
<hr>
<blockquote>
<p>2016.3.1更新</p>
</blockquote>
<h1 id="公共-独立空间评论切换"><a href="#公共-独立空间评论切换" class="headerlink" title="公共/独立空间评论切换"></a>公共/独立空间评论切换</h1><p>yelee/layout/_partial/article.ejs, 把 “key: post.path” 改为 “key: post.slug”，主题多说配置 domain: true<br>这样就恢复到 Yilia 的公共评论了。</p>
<h1 id="将“more”改为“阅读全文”"><a href="#将“more”改为“阅读全文”" class="headerlink" title="将“more”改为“阅读全文”"></a>将“more”改为“阅读全文”</h1><p>主题配置_config.yml里更改：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">excerpt_link: 阅读全文</span><br></pre></td></tr></table></figure></p>
<blockquote>
<p>2016.2.28更新</p>
</blockquote>
<p>　　这轮优化很多都挺成功，就是之前的评论都丢失了……桑心。欢迎大家留言安慰我^_^</p>
<h1 id="主题更换"><a href="#主题更换" class="headerlink" title="主题更换"></a>主题更换</h1><p>　　采取了更为美观的主题，并且有了文章内检索目录，我很喜欢。<br><strong>记得修改 Hexo 根目录对应配置文件。</strong><br><code>theme: yelee</code></p>
<h1 id="图片插入"><a href="#图片插入" class="headerlink" title="图片插入"></a>图片插入</h1><p>　　对于hexo，有两种方式：<br>　　1.使用本地路径：在hexo/source目录下新建一个img文件夹，将图片放入该文件夹下，插入图片时链接即为/img/图片名称。<br>　　2.使用微博图床，地址<a href="http://weibotuchuang.sinaapp.com" target="_blank" rel="noopener">http://weibotuchuang.sinaapp.com</a> ，将图片拖入区域中，会生成图片的URL，这就是链接地址。<br>以上是查找的资料。</p>
<blockquote>
<p>2016.3.1更新 </p>
</blockquote>
<h1 id="本地图片插入问题解决"><a href="#本地图片插入问题解决" class="headerlink" title="本地图片插入问题解决"></a>本地图片插入问题解决</h1><p>　　效果：<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="/images/test.jpg" alt="测试图片" title="">
                </div>
                <div class="image-caption">测试图片</div>
            </figure><br>　　之前本地服务器浏览可以看到图片，但部署上去就无法加载。<br>　　这是因为\<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="/images/test.jpg" alt="测试图片](E:/hexo/source/images/test.jpg)是**绝对地址**。但有相关文章说绝对地址也是可以的，但我一直没有实现，这一点有待考察。上述成功用的是相对地址。![测试图片" title="">
                </div>
                <div class="image-caption">测试图片](E:/hexo/source/images/test.jpg)是**绝对地址**。但有相关文章说绝对地址也是可以的，但我一直没有实现，这一点有待考察。上述成功用的是相对地址。![测试图片</div>
            </figure>  </p>
<p>后来准备用七牛作图床。～～用极简图床真是特别方便～～</p>
<h1 id="About-Page-关于我页面"><a href="#About-Page-关于我页面" class="headerlink" title="About Page 关于我页面"></a>About Page 关于我页面</h1><p>　　使用以下代码添加一个新页面：<br>$ hexo new page about</p>
<h1 id="Tags-Cloud-Page-标签云页面"><a href="#Tags-Cloud-Page-标签云页面" class="headerlink" title="Tags Cloud Page 标签云页面"></a>Tags Cloud Page 标签云页面</h1><p>$ hexo new page tags</p>
<h1 id="Comment-评论"><a href="#Comment-评论" class="headerlink" title="Comment 评论"></a>Comment 评论</h1><p>　　多说: <a href="http://duoshuo.com/create-site/" target="_blank" rel="noopener">http://duoshuo.com/create-site/</a> 登陆你的多说并创建站点，在 “domain” 中填入你设定的域名的前半部分。比如完整域名是:  <a href="http://ABC.duoshuo.com" target="_blank" rel="noopener">http://ABC.duoshuo.com</a> ，只需填入  ABC  即可。<br>　　我之前就没设置站点……不知道还能不能找回来评论？（可以）</p>
<h1 id="主页链接"><a href="#主页链接" class="headerlink" title="主页链接"></a>主页链接</h1><p>　　我把我网易云音乐的主页链接放上来了，欢迎大家和我交流<strong>轻音乐</strong>。（移动端看不到我的主页，只有PC端可以看到。）</p>
<h1 id="细节"><a href="#细节" class="headerlink" title="细节"></a>细节</h1><p>　　一些细节改变挺多，不知道看过我之前博客样子的访客能找到多少改变之处？欢迎评论。</p>
<blockquote>
<p>2015.11.10更新</p>
</blockquote>
<h1 id="关于主题"><a href="#关于主题" class="headerlink" title="关于主题"></a>关于主题</h1><p>　　<strong>安装</strong><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="built_in">clone</span> git@github.com:XXX/xxx.git themes/xxx</span><br></pre></td></tr></table></figure></p>
<p>　　<strong>更新</strong><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> themes/xxx</span><br><span class="line">$ git pull</span><br></pre></td></tr></table></figure></p>
<h1 id="关于统计"><a href="#关于统计" class="headerlink" title="关于统计"></a>关于统计</h1><p>　　两种方法：<br>　　1.google/baidu统计<br>　　google登不上去，就用百度吧。先去百度统计注册一个账号，把你的域名输入作为被统计的网页。<br>　它会自动生成一段代码，复制下来。<br>　在主题下的_config.yml添加：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ baidu_tongji: <span class="literal">true</span></span><br></pre></td></tr></table></figure></p>
<p>　　接着，在主题目录下的layout\ _partial找到head.ejs<br>　　打开它，在 &lt; head&gt; 和 &lt; /head&gt; 中粘贴代码即可。</p>
<p>　　2.不蒜子<br><a href="http://ibruce.info/2015/04/04/busuanzi/" target="_blank" rel="noopener">不蒜子</a><br>　　两行代码解决。只不过只能显示总人数或每篇文章浏览数。</p>
<h1 id="网站小图标"><a href="#网站小图标" class="headerlink" title="网站小图标"></a>网站小图标</h1><p>　　把.ico图标放入<strong>themes主题里</strong>的source目录下！<br>　　推荐<a href="http://www.bitbug.net/" target="_blank" rel="noopener">比特虫</a>，在线制作图标。<br>　　同时加入代码。</p>
<h1 id="categories、tags"><a href="#categories、tags" class="headerlink" title="categories、tags"></a>categories、tags</h1><p>　　在主题目录的_config.yml中修改成 XXX: /categories/XXX 或 XXX: /tags/XXX<br>　　<strong>注意空格和英文的冒号。</strong></p>
<h1 id="更改相关字体、颜色等细节"><a href="#更改相关字体、颜色等细节" class="headerlink" title="更改相关字体、颜色等细节"></a>更改相关字体、颜色等细节</h1><p>　　这个简单，找到hexo\themes\light\source\css_partial\main.styl,里面就是基本构架，<del>就是代码有点长，耐心找找</del>。这个级别代码一点都不长……</p>
<h1 id="搭建问题的解决方案"><a href="#搭建问题的解决方案" class="headerlink" title="搭建问题的解决方案"></a>搭建问题的解决方案</h1><p>　　具体操作之前我已另写一篇详细教程：<a href="http://hubojing.github.io/2015/11/06/hexo+github%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E4%B8%AD%E5%87%BA%E7%8E%B0%E7%9A%84%E9%97%AE%E9%A2%98%E5%8F%8A%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/">http://hubojing.github.io/2015/11/06/hexo+github%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E4%B8%AD%E5%87%BA%E7%8E%B0%E7%9A%84%E9%97%AE%E9%A2%98%E5%8F%8A%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/</a></p>
<p>　　以上。</p>
<h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><p><a href="http://ibruce.info/2015/04/04/busuanzi/" target="_blank" rel="noopener">不蒜子</a><br><a href="http://www.tuicool.com/articles/7rIbuen/" target="_blank" rel="noopener">为hexo主题添加多种图片样式</a><br><a href="http://blog.fens.me/hexo-blog-github/" target="_blank" rel="noopener">hexo在github上构建免费的Web应用</a><br><a href="http://yotuku.cn/" target="_blank" rel="noopener">极简图床</a><br><a href="http://www.netcan666.com/2015/11/22/%E8%A7%A3%E5%86%B3Hexo%E7%BD%AE%E9%A1%B6%E9%97%AE%E9%A2%98/" target="_blank" rel="noopener">解决hexo置顶问题</a><br><a href="https://github.com/hexojs/hexo/wiki/Themes/" target="_blank" rel="noopener">hexo全部模板</a><br><a href="http://www.bitbug.net/" target="_blank" rel="noopener">比特虫</a><br><a href="http://www.tuicool.com/articles/AfQnQjy/" target="_blank" rel="noopener">hexo你的博客</a><br><a href="https://github.com/coneycode/hexo-generator-baidu-sitemap" target="_blank" rel="noopener">Sitemap generation</a><br><a href="http://www.tuicool.com/articles/YneiAzy" target="_blank" rel="noopener">Hexo ：（三）高级进阶</a><br><a href="http://www.tuicool.com/articles/fYZ7Zrj" target="_blank" rel="noopener">hexo主题中添加相册功能</a></p>
]]></content>
      
        <categories>
            
            <category> 互联网 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[hexo+github博客搭建中出现的问题及解决方法 | The Solution of Troubles in Establishing My Blog]]></title>
      <url>https://hubojing.github.io/2015/11/06/hexo+github%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E4%B8%AD%E5%87%BA%E7%8E%B0%E7%9A%84%E9%97%AE%E9%A2%98%E5%8F%8A%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/</url>
      <content type="html"><![CDATA[<div align="left"><br><img src="http://img4.imgtn.bdimg.com/it/u=3010013829,2497003625&fm=214&gp=0.jpg" width="300" height="180" alt="配图" style="float:right;"><br><br><strong>hexo+github博客搭建中出现的问题及解决方法。</strong><br><strong>博客优化和高级进阶请看–&gt;<a href="http://hubojing.github.io/2015/11/10/hexo%E4%BC%98%E5%8C%96/">hexo优化·年轻就是折腾</a></strong><br><br><br></div>

<a id="more"></a>
<blockquote>
<p>2016.8.28更新 Update</p>
</blockquote>
<h1 id="插件-plug-in-unit"><a href="#插件-plug-in-unit" class="headerlink" title="插件 plug-in unit"></a>插件 plug-in unit</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-index --save</span><br><span class="line">npm install hexo-generator-archive --save</span><br><span class="line">npm install hexo-generator-category --save</span><br><span class="line">npm install hexo-generator-tag --save</span><br><span class="line">npm install hexo-server --save</span><br><span class="line">npm install hexo-deployer-git --save</span><br><span class="line">npm install hexo-generator-sitemap --save</span><br><span class="line">npm install hexo-generator-feed --save</span><br><span class="line">npm install hexo-git-backup --save</span><br></pre></td></tr></table></figure>
<p><a href="https://hexo.io/plugins/" target="_blank" rel="noopener">hexo插件</a></p>
<blockquote>
<p>2016.4.7更新 Update</p>
</blockquote>
<p>　　每次hexo d之后都要输入密码，很影响心情，于是决定重新设定SSH，这次不再设定密码。现把流程记录下来备忘。<br>It affects mood to input password everytime I execute hexo d.So I decide to reset SSH and no password.Now write the steps down.</p>
<h1 id="几条重要指令-Several-important-instructions"><a href="#几条重要指令-Several-important-instructions" class="headerlink" title="几条重要指令 Several important instructions"></a>几条重要指令 Several important instructions</h1><p>　　查看是否存在SSH文件。<br>To cheak if SSH file exists.<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ls -al ~/.ssh</span><br></pre></td></tr></table></figure></p>
<p>　　存在的话，直接删除.ssh文件夹里面所有文件，同时在github上删除SSH。<br>Delete all the files if it exist and delete SSH on the github.</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C <span class="string">"4177997456@qq.com"</span></span><br></pre></td></tr></table></figure>
<p>　　回车三次（因为密码为空）。<br>Press enter three times(for keyword is empty).</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-agent -s</span><br></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-add ~/.ssh/id_rsa</span><br></pre></td></tr></table></figure>
<p>　　出错。Something wrong.<br>　　换成 Change into<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">eval</span> `ssh-agent -s`</span><br><span class="line">ssh-add</span><br></pre></td></tr></table></figure></p>
<p>　　完成。Finish.<br>　　可以直接打开.ssh文件夹里的id_rsa.pub复制全部内容，也可以输入<br>You can copy id_rsa.pub in the .ssh file,or input<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">clip &lt; ~/.ssh/id_rsa.pub</span><br></pre></td></tr></table></figure></p>
<p>然后在github里设置好SSH即可。<br>then set SSH on the github.<br>　　最后测试一下：<br>Test it finally,<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure></p>
<p>　　如果出现 <figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://7xrn7f.com1.z0.glb.clouddn.com/16-4-7/51107885.jpg" alt="成功画面" title="">
                </div>
                <div class="image-caption">成功画面</div>
            </figure> 证明设置好了。<br>If it shows<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://7xrn7f.com1.z0.glb.clouddn.com/16-4-7/51107885.jpg" alt="sucess" title="">
                </div>
                <div class="image-caption">sucess</div>
            </figure> that all is done.</p>
<p>　　然而……<br>However~<br>　　依！然！报！错！<br>Still wrong!<br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://7xrn7f.com1.z0.glb.clouddn.com/16-4-7/11484824.jpg" alt="报错画面wrong" title="">
                </div>
                <div class="image-caption">报错画面wrong</div>
            </figure></p>
<p>　　这是为什么……在hexo d好几次后的我凌乱在风中……<br>　　但我没有放弃……毕竟不能把博客玩废啊是不是:-D<br>　　我想起来昨天把博客同步托管在github和coding上了。<br>　　因为我的repo先写的coding，再写的github，所以服务器先连接coding，后连接github！！！<br>　　<strong>两个托管网站都要设置好SSH之后，才能顺利部署！</strong><br>　　完工！<br>　　再也不用打密码啦~</p>
<p>WHY?!After several times hexo d,I was messy in the wind~<br>But I’m never give up~I can’t destory my blog after all :D<br>I remind of having got my blog hosted on GitHub and coding yesterday.<br>My repo place coding to the front,so the sever links coding first,then the github!!!<br><strong>Only two host webs be setted SSH,can it be well deployed!</strong><br>Finish!<br>Never using password~<br>Say goodbye to you~ </p>
<hr>
<blockquote>
<p>2015.11.06更新 Update</p>
</blockquote>
<p>今天建好了大体的框架，细节还需不断调整。现把我搭建过程中出现的若干问题以及解决方案写下来，方便自己及读者不再为这些地方犯难。<br>Today the frame generally build,and details needs improving. Now I note my problems and solutions for the readers no longer to puzzle again.</p>
<h1 id="安装-Install"><a href="#安装-Install" class="headerlink" title="安装 Install"></a>安装 Install</h1><p>　　安装顺序不要错，出现WARN不用管。<br>　　我们都知道需要安装git和node.js，然后才能安装hexo。<br>　　简单介绍：Hexo 是一个快速、简洁且高效的基于Node的静态博客框架。<br>　　按理来说，从官网把软件下载下来安装，一路next就行。<br>　　打开git bash命令行，输入：</p>
<p>Installation sequence is important,and you can ignore the warning in the process.<br>We know that git and node.js are needed,and then hexo can be installed.<br>In brief,hexo is a fast, simple and efficient static blog framework which bases on Node.<br>Having downloaded the software and installed,and then you just click “next”.<br>Input this in the git bash:</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install -g hexo-cli</span><br></pre></td></tr></table></figure>
<p>这时会发现，和很多教程所授不同啊！出现了多个WARN。不要慌！WARN可以不用管。我当时查了很久，怎么才能不WARN，后来发现其实不影响之后的搭建。</p>
<p>At this moment you will puzzle that it is different with many tutorials.It turns out some warning!Calm down,guys,you can ignore them.It doesn’t matter.</p>
<h1 id="开始建站-Set"><a href="#开始建站-Set" class="headerlink" title="开始建站 Set"></a>开始建站 Set</h1><p>　　建站前直接在目标盘建立一个hexo文档，对hexo右键git bash。<br>　　<strong>记住一定在目标目录里建站！</strong><br>　　一开始我不清楚，点击桌面上的git bash就输命令，后来都不好找hexo文件在哪，严重影响之后的体验！<br>　　之后同样的，npm加到目标目录中！</p>
<p>At first,you should create a hexo file,and git bash with right click.<br><strong>Remember to set your blog in the target file!</strong><br>I made the mistake that git bash on the desktop,which resulted in the loss of hexo file.It’s bad for later set.<br>And then,the same,add npm to the target file!</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install</span><br></pre></td></tr></table></figure>
<p>就这三步，本地的网站其实就建立好了！看起来好简单！运气不好的话就会像我一样，卡在最开始耽误了很多时间。</p>
<p>Having done these three steps,our local web is already set!Is it really easy?But you may waste much time as I did.</p>
<h1 id="本地预览-Local-preview"><a href="#本地预览-Local-preview" class="headerlink" title="本地预览 Local preview"></a>本地预览 Local preview</h1><p>　　因为在Hexo 3.0后server被单独出来了,需要安装server,记住打下面一行代码：<br>Because server was divided after hexo 3.0,you should install server,and remember these code,<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-server --save</span><br></pre></td></tr></table></figure></p>
<p>之后是：<br>and then,<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure></p>
<p>本地端口已经打开，通过浏览器访问<a href="http://localhost:4000/" target="_blank" rel="noopener">http://localhost:4000/</a> 可以看到网站。</p>
<p>The local port has set,and you can cheak on <a href="http://localhost:4000/" target="_blank" rel="noopener">http://localhost:4000/</a> through browser.</p>
<h1 id="注意细节-Pay-attention-to-details"><a href="#注意细节-Pay-attention-to-details" class="headerlink" title="注意细节 Pay attention to details"></a>注意细节 Pay attention to details</h1><p>　　下载一个编辑器，我下载的是Sublime Text 2，一定要有编辑器，否则很多属性不能修改。<br>　　找到hexo文件夹，打开_config.yml，这里面就是网站的配置信息。具体配置hexo讲的很明白，我就不解释了。<br>　　我刚开始就是胡乱搭建，找不到hexo文件，更不用谈之后的配置。这里要擅用电脑里的文件搜索，有它还是可以方便的找出文件。<br>　　Hexo采用markdown语法格式书写博客，其中我们的博文就放在source里的_posts目录。</p>
<p>To download a editor.What I use now is Sublime 2.You need a editor for modify attributes.<br>The _config.yml in the hexo file is the web configuration information.The specific configuration I won’t say it here.<br>I structures it at random at first,because I couldn’t find hexo file.A good tip is to use file search to find what you want conveniently.<br>Hexo uses markdown grammer to write,and our articles are saved in the _posts file.</p>
<h1 id="写新文章-Create-a-new-article"><a href="#写新文章-Create-a-new-article" class="headerlink" title="写新文章 Create a new article"></a>写新文章 Create a new article</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new title</span><br></pre></td></tr></table></figure>
<p>　　其中title为你的博文文件的文件名，不一定是博文的标题，只要自己看得懂就行。然后点开source里的_posts目录，打开title.md，我们就可以在里面进行写作了。当然，有一些语法规定及格式要求，我也还在学习中。</p>
<p>The title is your article file name,not your article name,so just you understand is alright.</p>
<p>　　之后需要静态化页面：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>
<p>hexo部署：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure></p>
<p>　　此时本地站点大体搭建好了。<br>Now the local site is set.</p>
<p>　　<strong>如果配置_config.yml出错，本地网站是一定搭不好的！</strong><br>　　<strong>而_config.yml中比较难发现的就是，每一个红体单词冒号后要空格！！！</strong></p>
<p><strong>If the _config.yml is wrong,your site can’t be create.</strong><br><strong>The detail easy to overlook is that there leaves a blank space after colon!!!</strong></p>
<p>　　接下来把网站部署到github上。<br>　　首先去github上注册个账号。<br>　　再建立一个新的repositories。名称是username.github.io，这也是最终搭建好的博客的链接地址。</p>
<p>The following thing is to deploy the site on the github.<br>At the beginning,you should have a github account.<br>Then you should create a new repositories,which name is username.github.io,and it is your blog link address.</p>
<h1 id="勿用github自动页面生成器-Do-not-use-the-github-automatic-page-generator"><a href="#勿用github自动页面生成器-Do-not-use-the-github-automatic-page-generator" class="headerlink" title="勿用github自动页面生成器 Do not use the github automatic page generator"></a>勿用github自动页面生成器 Do not use the github automatic page generator</h1><p>　　尤其初学者！否则之后的hexo博客很难部署上去！<br>　　如果已经用了自动页面生成器，可以删除这一个repositories，再新建一个。<br>　　在完成上述操作后，到Hexo文件夹下的_config.yml文件，将最下方的deploy部分修改为</p>
<p>Exspecially a beginer!<br>If you use it already,you can delete this repositories,and create another.<br>After all the steps done,revise the deploy of the _config.yml as</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ deploy</span><br><span class="line">	<span class="built_in">type</span>: git</span><br><span class="line">	repo: git@github.com:username/username.github.io.git</span><br></pre></td></tr></table></figure>
<p>　　<strong>每个冒号后有一个空格！！！</strong><br>　　到此，github配置完成。</p>
<p><strong>There leaves a blank space after each colon!!!*</strong><br>So much for that,the deploy is done.</p>
<p>　　现在要把hexo和github联系在一起，还需要SSH。<br>　　首先,打开git bash:</p>
<p>If hexo links to github,SSH is needed.<br>Open git bash,</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git config --global user.name <span class="string">"XXX"</span></span><br><span class="line">$ git config --global user.email <span class="string">"XXXXXX@mail.com"</span></span><br></pre></td></tr></table></figure>
<p>　　邮箱是你注册github的邮箱。<br>　　生成密钥：</p>
<p>The e-mail is your github e-mail.<br>Create private key,</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ssh-keygen -t rsa -C “XXXXXX@mail.com”</span><br></pre></td></tr></table></figure>
<p>　　然后设置路径，最好不要更改id_rsa和id_rsa.pub的名字。</p>
<p>　　密码可有可无(最好无)，但输入时你也看不到自己输的密码的。<br>登录github，在右上角settings（不是repositories里的settings）有SSH keys。<br>复制你设置路径里的id_rsa.pub用编辑器打开得到的代码，粘贴到SSH keys，标题自定义。<br>验证：</p>
<p>Set path,and don’t change id_rsa and id_rsa.pub name.<br>The password is not esstial(none maybe convinent),but you can’t see it when you enter the code.<br>Then you sign in the github,and finds SSH keys in the setting(not setting in the repositories).<br>Copy your code in the id_rsa.pub,and paste it to SSH keys.Customizable title is needed.<br>Verity,</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ssh -T git@github.com</span><br></pre></td></tr></table></figure>
<p>一般来说，是会报错的。Permission denied (publickey).让多少人揪心的一句话。</p>
<p>Generally,something goes wrong.”Permission denied (publickey)”,may let you not happy.</p>
<h1 id="复制公钥-Copy-public-key"><a href="#复制公钥-Copy-public-key" class="headerlink" title="复制公钥 Copy public key"></a>复制公钥 Copy public key</h1><p>　　用计算机搜索文件.ssh文件，找出目标路径，之前设置的id_rsa和id_rsa.pub复制到这里来！<br>同时，如果多次设置SSH，最好把其中一个known开头的文件里前几次的公钥清空。<br>成功的标志：</p>
<p>Search .ssh file in the computer,and paste id_rsa and id_rsa.pub to it.<br>If you set SSH many times,you’d better clear the previous public key in the known-start file.<br>The success sign,</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ Hi username! You<span class="string">'ve successfully authenticated, but GitHub does not provide shell access.</span></span><br></pre></td></tr></table></figure>
<p>最后，</p>
<p>In the end,</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-deployer-git --save</span><br><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>
<h1 id="基本指令-Basic-instructions"><a href="#基本指令-Basic-instructions" class="headerlink" title="基本指令 Basic instructions"></a>基本指令 Basic instructions</h1><p>　　每次修改或者发文后，这两条命令一定要打，否则博客不能更新：</p>
<p>Everytime you revise or create a article,two instrucions are needed,or your post can’t be updated.</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>
<p>$ hexo server 为在本地端口打开。<br>(简记abbreviation   hexo g   hexo s   hexo d)<br>　　期间还遇到一些小问题，不典型，就不说啦。总之，初学者刚开始搭建一定要有耐心，我仅是node.js就重装了五遍以上，有时候看教程很复杂，其实一步步做不难！不要放弃！跟着一个教程做出现问题时，及时在网上寻求答案，查看其它的教程。我在搭建此博客时，查阅的教程几十种了，很多人的方法很好，也算是走捷径了！</p>
<p>There exists many small problems in the process.In short,the patience is vital during the course.According to me,I reset node.js for more than five times.The tutorial maybe complex,but you can feel easy if you do it step by step!Never give up!When any problem arise,it is useful to search solutions on the internet or looking up in another tutorial.I call the tips a shortcut.</p>
<p>　　以上，就是我搭建过程中出现的问题及解决方案。</p>
<p>　　Above,it is the problems and solutions in the process.</p>
<hr>
<h1 id="参考资料-Reference-material"><a href="#参考资料-Reference-material" class="headerlink" title="参考资料 Reference material"></a>参考资料 Reference material</h1><p>1.<a href="http://d12mnit.github.io/2015/10/13/hexo%E4%B8%8Egithub_pages%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E6%95%99%E7%A8%8B/" target="_blank" rel="noopener">hexo与github_pages搭建博客教程</a><br>2.<a href="http://www.tuicool.com/articles/AfQnQjy/" target="_blank" rel="noopener">hexo你的博客</a><br>3.<a href="http://www.jianshu.com/p/ba76165ca84d" target="_blank" rel="noopener">hexo干货系列（一）</a><br>4.<a href="http://wp.huangshiyang.com/hexo%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88" target="_blank" rel="noopener">hexo常见问题解决方案</a></p>
<hr>
]]></content>
      
        <categories>
            
            <category> 互联网 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[HelloWorld]]></title>
      <url>https://hubojing.github.io/2015/11/06/HelloWorld/</url>
      <content type="html"><![CDATA[<div align="left"><br><img src="https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1522257782289&di=6bbbe6823fd03e03cd600687648ad983&imgtype=0&src=http%3A%2F%2Fwww.ibeifeng.com%2Fimages%2Fupload%2FImage%2Fc5bbf603918fa0ec91b3bd73259759ee3c6ddbc0.jpg" width="300" height="180" alt="配图" style="float:right;"><br><br><br><strong>利用一周零零碎碎的时间搭建起来，使用hexo在github上的个人独立博客初见雏形。</strong><br><br><br> </div>


<a id="more"></a> 
<p>作为一名通信人，始终要记住科学技术是第一生产力！<br>大三已至，也算入了互联网+通信领域的门。入门不难，深造不易。将把自己在学习中和实践中的技术经验以及点滴收获记录下来，作为自己在技术之路的见证和成长。<br>读者可以随时在文章下方评论，以及与我联系，欢迎学术交流，难题沟通，批评指正，尤其是专业相关（比如数模电）、数学方面（数学虐我千百遍，我待数学如初恋[笑]）。自觉天资不高，但对于技术，心向往之，但愿各位指点一二。</p>
<p>I manage to find time to build this blog for a week,which used hexo static frame on the github,and it is finished preliminarily.<br>As a Communication man,we should always keep in mind that science and technology are primary productive force!<br>I’m already learn elementary courses since I’m a junior student today. To cross the threshold is not difficult, but mastery is another question.Therefore,I will take notes on the blog through the learning and practice process,to witness my growth on the way.<br>Readers can commit on the bottom of the article,and contact with me.Welcome academic exchange and question communication.You can oblige me with your valuable comments about major related(digital electronic technology or analog electronic technology,for instance),especially math problem(^_^I am fond of mathematic).I’m not talent,but I’m adore of IT.I would appreciate it if you give me some guidance.</p>
<p><strong>Talk is cheap,show me the code!</strong><br><strong>Just do IT！</strong></p>
]]></content>
      
        <categories>
            
            <category> 杂谈 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 杂谈 </tag>
            
        </tags>
        
    </entry>
    
  
  
</search>
