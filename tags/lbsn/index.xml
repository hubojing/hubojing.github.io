<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>LBSN on 靖待</title>
        <link>https://hubojing.github.io/tags/lbsn/</link>
        <description>Recent content in LBSN on 靖待</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>zh-cn</language>
        <copyright>靖待</copyright>
        <lastBuildDate>Wed, 17 Jul 2019 14:35:46 +0000</lastBuildDate><atom:link href="https://hubojing.github.io/tags/lbsn/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>推荐那些事儿</title>
        <link>https://hubojing.github.io/b9shtjnk/</link>
        <pubDate>Wed, 17 Jul 2019 14:35:46 +0000</pubDate>
        
        <guid>https://hubojing.github.io/b9shtjnk/</guid>
        <description>&lt;div align=&#34;left&#34;&gt;
&lt;img src=&#34;https://timgsa.baidu.com/timg?image&amp;quality=80&amp;size=b9999_10000&amp;sec=1565459219422&amp;di=24d422892e8989d6bd18a2a93aae8230&amp;imgtype=0&amp;src=http%3A%2F%2Fpic.51yuansu.com%2Fpic3%2Fcover%2F03%2F05%2F94%2F5b2c9f2655ac0_610.jpg&#34; width=&#34;300&#34; height=&#34;180&#34; style=&#34;float:right;&#34;/&gt;
&lt;p&gt;　　&lt;strong&gt;记得比较乱，自用。&lt;/strong&gt;&lt;/p&gt;
 &lt;/div&gt;
&lt;h1 id=&#34;poi推荐20191110&#34;&gt;POI推荐——2019.11.10
&lt;/h1&gt;&lt;p&gt;兴趣点预测是预测用户将要访问的兴趣点(其中包含已经访问过的兴趣点) ，兴趣点推荐是将用户没有访问过的兴趣点推荐给用户。
including next POI recommendation, timeaware POI recommendation and out-of-town POI recommendation.&lt;/p&gt;
&lt;p&gt;Matrix Factorization (MF), Context Embedding (CE) and Pairwise Ranking (PR)
MF based methods such as GeoMF and RankGeoFM exhibit superior performance on POI recommendation.&lt;/p&gt;
&lt;p&gt;根据check-in行为加入了社交因素（又可分为朋友、评论、图片）、地理因素（空间聚类现象而导致的地理影响、幂律分布、核密度估计）
朋友：社交关系中的朋友，位置上的朋友和邻居层面的朋友、用户信任关系
时序 位置变化的序列性&lt;/p&gt;
&lt;p&gt;马尔科夫链(Markov chain)
个性化马尔科夫链(Factorizing Personalized Markov Chain, FPMC)
张量分解(Tensor Factorization, TF)
RNN(Recurrent Neural Networks
长短时记忆循环神经网络(Long-Short Memory recurrent neural networks, LSTM)
经典推荐算法：
概率矩阵分解模型（Probabilistic Matrix Factorization, PMF）
SoRec(Social Recommendation using probabilistic matrix factorization)
TrustMF(Social Collaborative Filtering by Trust)
TrustSVD(Social Collaborative Filtering by Trust with SVD)&lt;/p&gt;
&lt;p&gt;PMF 利用用户对 POI 的历史评分数据；SoＲec 利用用户社交关系和兴趣点的历史评分数据；Trust MF、Trust SVD 利用用户信任关系和 POI 的历史评分数据。
POI-LSTM模型（[1]	王立, 张谧. 基于LSTM的POI个性化推荐框架[J]. 计算机系统应用, 2018,27(12):56-61.）
单纯的 LSTM 模型只能对用户的行为序列进行建模, 将用户访问过的地点信息输入
到网络中, 只能捕捉到用户的访问地点兴趣信息, 不加入用户的历史评论信息就不能精细描述用户的兴趣变化, 同时也不能接受用户好友关系对于用户选择的影
响.&lt;/p&gt;
&lt;p&gt;狄利克雷分配(Latent
Dirichlet  Allocation，LDA)主题模型&lt;/p&gt;
&lt;h1 id=&#34;lbsn基于位置的社交网络20190721&#34;&gt;LBSN基于位置的社交网络——2019.07.21
&lt;/h1&gt;&lt;p&gt;签到(check-in)：用户上传自身位置到社交网站的行为。
每一个签到的位置称为一个兴趣点POI(Point of Interest)。&lt;/p&gt;
&lt;p&gt;对签到信息聚类，对用户历史轨迹进行机器学习，可预测用户未来的轨迹路线。
传统研究模型采用k-means或k-medoids聚类方法将数据划分为k个簇集，通过计算对象之间的相似度进行聚类。&lt;/p&gt;
&lt;p&gt;传统在线社交网络(OSN, Online Social Network)。
LBS(Location Based Service),基于位置的服务。
LBSN(Location-based Social Network)，基于位置的社会网络。
对于不同的LBSN网络，不同的推荐系统使用了不同的推荐算法，常见的推荐算法包括：协同过滤算法、基于内容的推荐算法、基于位置的推荐算法等。&lt;/p&gt;
&lt;h1 id=&#34;协同过滤算法collaborative-filtering-cf&#34;&gt;协同过滤算法(collaborative filtering, CF)
&lt;/h1&gt;&lt;h2 id=&#34;基于memory-based基于记忆基于content-based基于内容基于邻域&#34;&gt;基于Memory-based(基于记忆)/基于Content-based基于内容/基于邻域
&lt;/h2&gt;&lt;p&gt;又可分为Item-based推荐算法和User-based推荐算法，计算用户和用户之间的相似度(User-based)，商品和商品之间的相似度(Item-based)
Item-based推荐算法&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;输入item-user矩阵&lt;/li&gt;
&lt;li&gt;求item-item相似度 （不同相似度度量：person系数、曼哈顿距离、余弦值、欧几里得距离）&lt;/li&gt;
&lt;li&gt;根据相似度求评分&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;User-based推荐算法&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;输入item-user矩阵&lt;/li&gt;
&lt;li&gt;求user-user相似度（不同相似度度量：person系数、曼哈顿距离、余弦值、欧几里得距离）&lt;/li&gt;
&lt;li&gt;根据相似度求评分&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;基于model-based基于模型&#34;&gt;基于Model-based(基于模型)
&lt;/h2&gt;&lt;p&gt;分解模型算法：如奇异值分解(Singular Value Decomposition)模型算法
基于矩阵分解的协同过滤算法（简称矩阵分解推荐方法）
矩阵分解(Matrix Factorization, MF)算法：它将用户–兴趣点矩阵分解成两个或者多个低维矩阵的乘积实现维数的规约,  用低维空间数据研究高维数据的性质,主要包括正则矩阵分解、非负矩阵分解和概率矩阵分解等方法。
该方法仅仅利用评分信息，将用户对物品的评分信息用矩阵的形式进行表示; 然后将评分矩阵分解为低维的用户特征矩阵和物品特征矩阵，利用用户与物品的向量内积来表示用户对物品的喜好程度，进而构建出基于矩阵分解的推荐方法。然而，由于评分矩阵的高稀疏和不均匀分布等特点，导致仅仅利用评分信息进行推荐带来的推荐性能低、冷启动等问题。&lt;/p&gt;
&lt;p&gt;基于图模型的推荐算法：如贝叶斯网络(Bayesian Network)模型推荐算法
决策树(Decision Tree)模型推荐算法
图聚类(Graph Clustering)模型推荐算法&lt;/p&gt;
&lt;p&gt;CF面临的问题：数据稀疏&lt;/p&gt;
&lt;h3 id=&#34;基于关联规则的推荐算法&#34;&gt;基于关联规则的推荐算法
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;Apriori算法&lt;/li&gt;
&lt;li&gt;FPGrowth算法&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;聚类&#34;&gt;聚类
&lt;/h3&gt;&lt;p&gt;K-Means等&lt;/p&gt;
&lt;h3 id=&#34;分类&#34;&gt;分类
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;贝叶斯分类器&lt;/li&gt;
&lt;li&gt;逻辑回归&lt;/li&gt;
&lt;li&gt;KNN&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;回归&#34;&gt;回归
&lt;/h3&gt;&lt;h3 id=&#34;隐语义&#34;&gt;隐语义
&lt;/h3&gt;&lt;p&gt;SVD
SVD++
TrustSVD(加入社会化信任机制)&lt;/p&gt;
&lt;h2 id=&#34;神经网络&#34;&gt;神经网络
&lt;/h2&gt;&lt;h2 id=&#34;基于混合的推荐算法&#34;&gt;基于混合的推荐算法
&lt;/h2&gt;&lt;p&gt;常用混合思路：加权、特征组合、层叠、变换等&lt;/p&gt;
&lt;h1 id=&#34;基于位置的推荐算法&#34;&gt;基于位置的推荐算法
&lt;/h1&gt;&lt;h1 id=&#34;lbsn用户行为预测&#34;&gt;LBSN用户行为预测
&lt;/h1&gt;&lt;h2 id=&#34;基于用户个人的数据&#34;&gt;基于用户个人的数据
&lt;/h2&gt;&lt;p&gt;只关注用户的历史移动轨迹来预测用户下一个位置。&lt;/p&gt;
&lt;h2 id=&#34;基于所有用户产生的数据&#34;&gt;基于所有用户产生的数据
&lt;/h2&gt;&lt;p&gt;采用概率分布模型的方法预测下一个位置。&lt;/p&gt;
&lt;h2 id=&#34;基于前两种数据的结合&#34;&gt;基于前两种数据的结合
&lt;/h2&gt;&lt;h1 id=&#34;参考资料&#34;&gt;参考资料
&lt;/h1&gt;&lt;p&gt;罗维佳.基于LBSN的个性化推荐技术研究 2016&lt;/p&gt;</description>
        </item>
        
    </channel>
</rss>
