<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Autoencoder on 靖待</title>
        <link>https://hubojing.github.io/tags/autoencoder/</link>
        <description>Recent content in Autoencoder on 靖待</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>zh-cn</language>
        <copyright>靖待</copyright>
        <lastBuildDate>Thu, 04 Feb 2021 10:19:03 +0000</lastBuildDate><atom:link href="https://hubojing.github.io/tags/autoencoder/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>【paper】AutoRec - Autoencoders Meet Collaborative Filtering</title>
        <link>https://hubojing.github.io/dapymrcc/</link>
        <pubDate>Thu, 04 Feb 2021 10:19:03 +0000</pubDate>
        
        <guid>https://hubojing.github.io/dapymrcc/</guid>
        <description>&lt;div align=&#34;left&#34;&gt;
&lt;img src=&#34;\images\Paper-AutoRec-Itembased.png&#34; width=&#34;300&#34; height=&#34;180&#34; style=&#34;float:right;&#34;/&gt;
&lt;p&gt;　　&lt;strong&gt;推荐系统 + 深度学习 1&lt;/strong&gt;&lt;/p&gt;
 &lt;/div&gt;
&lt;h1 id=&#34;论文背景&#34;&gt;论文背景
&lt;/h1&gt;&lt;p&gt;WWW&#39;15&lt;br&gt;
作者：Suvash  Sedhain, Aditya Krishna Menon, Scott Patrick Sanner, Lexing Xie&lt;/p&gt;
&lt;p&gt;谷歌学术引用次数580（截至2021年2月4日）&lt;/p&gt;
&lt;p&gt;关键词：Recommender Systems; Collaborative Filtering; Autoencoders&lt;/p&gt;
&lt;h1 id=&#34;introduction-引言&#34;&gt;INTRODUCTION 引言
&lt;/h1&gt;&lt;p&gt;本文提出一种新的基于自动编码器范例的CF模型，思路来自于针对视觉和语音任务的深度神经网络模型。 &lt;br&gt;
和CF相比，具有表示和计算的优越性。&lt;/p&gt;
&lt;h1 id=&#34;the-autorec-model-模型&#34;&gt;THE AUTOREC MODEL 模型
&lt;/h1&gt;$$min_{\theta}\sum_{r∈S}||r - h(r;\theta)||^2_2$$$$h(r;\theta) = f(W · g(Vr + μ) + b)$$&lt;p&gt;
f、g是激活函数。$\theta = {W, V, μ, b}$&lt;br&gt;
$W∈\mathbb{R}^{d×k}$, $V∈\mathbb{R}^{k×d}$, $μ∈\mathbb{R}^k$, $b∈\mathbb{R}^d$
该目标对应于具有单个k维隐藏层的自连接神经网络。使用反向传播来学习参数θ。&lt;/p&gt;
&lt;p&gt;基于物品的AutoRec模型I-AutoRec&lt;br&gt;
${r^{(i)}}^n_{i=1}$
&lt;img src=&#34;https://hubojing.github.io/%5cimages%5cPaper-AutoRec-Itembased.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;基于物品的AutoRec&#34;
	
	
&gt;
两点改变：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;每个$r^{(i)}$通过反向传播更新和输入有关的权重得到，这在矩阵分解和RBM策略中常用。&lt;/li&gt;
&lt;li&gt;设计了学习参数正则化防止过拟合。&lt;/li&gt;
&lt;/ol&gt;
$$\hat{R}_{ui} = (h(r^{(i)};\hat{\theta}))_u$$$$min_{\theta}||r^{(i)}-h(r^{(i)};\theta)||^2_o + \frac{\lambda}{2}·(||W||^2_F + ||V||^2_F)$$&lt;p&gt;
$||||^2_o$代表只考虑可观测评分的贡献。&lt;/p&gt;
&lt;p&gt;基于用户的AutoRec模型U-AutoRec&lt;br&gt;
${r^{(u)}}^m_{u=1}$&lt;/p&gt;
&lt;p&gt;和CF策略的区别：&lt;br&gt;
对比基于RBM的CF模型（RBM-CF）&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;RBM-CF是基于限制玻尔兹曼机的生成概率模型，AutoRec是一个基于自动编码器的判别模型。&lt;/li&gt;
&lt;li&gt;RBM-CF通过最大化似然log函数估计参数，AutoRec直接最小化RMSE。&lt;/li&gt;
&lt;li&gt;训练RBM-CF需要使用对比散度，训练AutoRec需要相对更快的基于梯度的反向传播。&lt;/li&gt;
&lt;li&gt;RBM-CF只使用于离散评分，并对每个评分估计一个分散的参数集。对r个可能的评分，它使用了基于RBM的nkr或者mkr个参数用于用户（物品）。AutoRec与r无关，因此需要较少的参数。 较少的参数使AutoRec的内存占用量更少，更不容易过度拟合。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;对比矩阵分解（MF）&lt;br&gt;
MF学习线性潜在表示，AutoRec可以通过激活函数学习非线性潜在表示。&lt;/p&gt;
&lt;h1 id=&#34;experimental-evaluation-实验评估&#34;&gt;EXPERIMENTAL EVALUATION 实验评估
&lt;/h1&gt;&lt;p&gt;基线：RBM-CF, BiasedMF, LLORMA.&lt;br&gt;
数据集：Movielens 1M, 10M 和Nerflix数据集&lt;br&gt;
没有训练数据的测试集默认评分为3。&lt;br&gt;
训练集：测试集=9：1&lt;br&gt;
将训练集10%作为验证集。&lt;br&gt;
重复划分步骤5次并记录平均RMSE。&lt;br&gt;
每次实验95%在RMSE偶然的间隔在±0.003之间。&lt;br&gt;
正则化参数λ∈{0.001, 0.01, 0.1, 1, 100, 1000}&lt;br&gt;
潜在维度k∈{10, 20, 40, 80, 100, 200, 300, 400, 500}&lt;/p&gt;
&lt;p&gt;三种实验&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;和RBM对比&lt;/li&gt;
&lt;li&gt;激活函数选取对比&lt;/li&gt;
&lt;li&gt;隐藏单元k的数量
&lt;img src=&#34;https://hubojing.github.io/%5cimages%5cPaper-AutoRec-k.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;k&#34;
	
	
&gt;&lt;/li&gt;
&lt;li&gt;基线性能对比
&lt;img src=&#34;https://hubojing.github.io/%5cimages%5cPaper-AutoRec-baselines.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;基线&#34;
	
	
&gt;&lt;/li&gt;
&lt;li&gt;深度扩展对Auto的帮助&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;代码&#34;&gt;代码
&lt;/h1&gt;&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/mesuvash/NNRec&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/mesuvash/NNRec&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&#34;总结&#34;&gt;总结
&lt;/h1&gt;&lt;p&gt;AutoRec是最简单的深度学习推荐系统。&lt;br&gt;
它是一种单隐层神经网络推荐模型，将自动编码器与协同过滤相结合。&lt;/p&gt;</description>
        </item>
        
    </channel>
</rss>
